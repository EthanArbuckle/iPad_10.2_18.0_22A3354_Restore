uint64_t MXSpeechProfileReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        PBReaderReadData();
        v23 = objc_claimAutoreleasedReturnValue();
        v24 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v23;

      }
      else if ((v10 >> 3) == 1)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 20) |= 1u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v19 = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          v19 = 0;
LABEL_33:
        *(_BYTE *)(a1 + 16) = v19 != 0;
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id MXModalityx_sharedOptions()
{
  if (MXModalityx_sharedOptions_once != -1)
    dispatch_once(&MXModalityx_sharedOptions_once, &__block_literal_global);
  return (id)MXModalityx_sharedOptions_sOptions;
}

id MXQss_single_userOptions()
{
  if (MXQss_single_userOptions_once != -1)
    dispatch_once(&MXQss_single_userOptions_once, &__block_literal_global_0);
  return (id)MXQss_single_userOptions_sOptions;
}

uint64_t MXSpeechProfileRebuildNeededReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXEntityWordsReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  MXWordWithPronunciations *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(MXWordWithPronunciations);
        objc_msgSend(a1, "addWords:", v17);
        if (!PBReaderPlaceMark() || (MXWordWithPronunciationsReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXProcessingErrorReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void *v31;
  uint64_t v32;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_39;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_41;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_39:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_41:
          v32 = 8;
          goto LABEL_46;
        case 2u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 16;
          goto LABEL_37;
        case 3u:
          v26 = 0;
          v27 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 40) |= 2u;
          break;
        case 4u:
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = 32;
LABEL_37:
          v31 = *(void **)(a1 + v25);
          *(_QWORD *)(a1 + v25) = v24;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v28 = *v3;
        v29 = *(_QWORD *)(a2 + v28);
        if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          break;
        v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
        *(_QWORD *)(a2 + v28) = v29 + 1;
        v19 |= (unint64_t)(v30 & 0x7F) << v26;
        if ((v30 & 0x80) == 0)
          goto LABEL_43;
        v26 += 7;
        v14 = v27++ >= 9;
        if (v14)
        {
          LODWORD(v19) = 0;
          goto LABEL_45;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_45:
      v32 = 24;
LABEL_46:
      *(_DWORD *)(a1 + v32) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXBeginRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  MXAudioMetadata *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  void *v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t result;
  BOOL v53;
  uint64_t v54;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (!v15 && (v10 & 7) != 4)
        {
          v17 = v10 >> 3;
          switch((v10 >> 3))
          {
            case 0x14u:
              v18 = objc_alloc_init(MXAudioMetadata);
              objc_storeStrong((id *)(a1 + 8), v18);
              if (PBReaderPlaceMark() && (MXAudioMetadataReadFrom((uint64_t)v18, a2) & 1) != 0)
              {
                PBReaderRecallMark();
                goto LABEL_57;
              }

              return 0;
            case 0x15u:
              v21 = 0;
              v22 = 0;
              v23 = 0;
              *(_BYTE *)(a1 + 52) |= 2u;
              while (1)
              {
                v24 = *v3;
                v25 = *(_QWORD *)(a2 + v24);
                if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
                  break;
                v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
                *(_QWORD *)(a2 + v24) = v25 + 1;
                v23 |= (unint64_t)(v26 & 0x7F) << v21;
                if ((v26 & 0x80) == 0)
                  goto LABEL_68;
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  v23 = 0;
                  goto LABEL_70;
                }
              }
              *(_BYTE *)(a2 + *v5) = 1;
LABEL_68:
              if (*(_BYTE *)(a2 + *v5))
                v23 = 0;
LABEL_70:
              v53 = v23 != 0;
              v54 = 48;
              goto LABEL_83;
            case 0x16u:
              v27 = 0;
              v28 = 0;
              v29 = 0;
              *(_BYTE *)(a1 + 52) |= 0x10u;
              while (2)
              {
                v30 = *v3;
                v31 = *(_QWORD *)(a2 + v30);
                if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
                  *(_QWORD *)(a2 + v30) = v31 + 1;
                  v29 |= (unint64_t)(v32 & 0x7F) << v27;
                  if (v32 < 0)
                  {
                    v27 += 7;
                    v14 = v28++ >= 9;
                    if (v14)
                    {
                      v29 = 0;
                      goto LABEL_74;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v29 = 0;
LABEL_74:
              v53 = v29 != 0;
              v54 = 51;
              goto LABEL_83;
            case 0x17u:
              v33 = 0;
              v34 = 0;
              v35 = 0;
              *(_BYTE *)(a1 + 52) |= 8u;
              while (2)
              {
                v36 = *v3;
                v37 = *(_QWORD *)(a2 + v36);
                if (v37 == -1 || v37 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v37);
                  *(_QWORD *)(a2 + v36) = v37 + 1;
                  v35 |= (unint64_t)(v38 & 0x7F) << v33;
                  if (v38 < 0)
                  {
                    v33 += 7;
                    v14 = v34++ >= 9;
                    if (v14)
                    {
                      v35 = 0;
                      goto LABEL_78;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v35 = 0;
LABEL_78:
              v53 = v35 != 0;
              v54 = 50;
              goto LABEL_83;
            case 0x18u:
              PBReaderReadString();
              v19 = objc_claimAutoreleasedReturnValue();
              v20 = 16;
              goto LABEL_47;
            case 0x19u:
              v40 = 0;
              v41 = 0;
              v42 = 0;
              *(_BYTE *)(a1 + 52) |= 4u;
              while (2)
              {
                v43 = *v3;
                v44 = *(_QWORD *)(a2 + v43);
                if (v44 == -1 || v44 >= *(_QWORD *)(a2 + *v4))
                {
                  *(_BYTE *)(a2 + *v5) = 1;
                }
                else
                {
                  v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
                  *(_QWORD *)(a2 + v43) = v44 + 1;
                  v42 |= (unint64_t)(v45 & 0x7F) << v40;
                  if (v45 < 0)
                  {
                    v40 += 7;
                    v14 = v41++ >= 9;
                    if (v14)
                    {
                      v42 = 0;
                      goto LABEL_82;
                    }
                    continue;
                  }
                }
                break;
              }
              if (*(_BYTE *)(a2 + *v5))
                v42 = 0;
LABEL_82:
              v53 = v42 != 0;
              v54 = 49;
LABEL_83:
              *(_BYTE *)(a1 + v54) = v53;
              goto LABEL_84;
            case 0x1Au:
              PBReaderReadString();
              v18 = (MXAudioMetadata *)objc_claimAutoreleasedReturnValue();
              if (v18)
                objc_msgSend((id)a1, "addInlineLmeItems:", v18);
LABEL_57:

              goto LABEL_84;
            default:
              if ((_DWORD)v17 == 2)
              {
                v46 = 0;
                v47 = 0;
                v48 = 0;
                *(_BYTE *)(a1 + 52) |= 1u;
                while (1)
                {
                  v49 = *v3;
                  v50 = *(_QWORD *)(a2 + v49);
                  if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
                    break;
                  v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
                  *(_QWORD *)(a2 + v49) = v50 + 1;
                  v48 |= (unint64_t)(v51 & 0x7F) << v46;
                  if ((v51 & 0x80) == 0)
                    goto LABEL_87;
                  v46 += 7;
                  v14 = v47++ >= 9;
                  if (v14)
                  {
                    LODWORD(v48) = 0;
                    goto LABEL_89;
                  }
                }
                *(_BYTE *)(a2 + *v5) = 1;
LABEL_87:
                if (*(_BYTE *)(a2 + *v5))
                  LODWORD(v48) = 0;
LABEL_89:
                *(_DWORD *)(a1 + 32) = v48;
              }
              else if ((_DWORD)v17 == 1)
              {
                PBReaderReadString();
                v19 = objc_claimAutoreleasedReturnValue();
                v20 = 40;
LABEL_47:
                v39 = *(void **)(a1 + v20);
                *(_QWORD *)(a1 + v20) = v19;

              }
              else
              {
                result = PBReaderSkipValueWithTag();
                if (!(_DWORD)result)
                  return result;
              }
LABEL_84:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXRecognitionChoiceReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      v16 = v10 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v25 = 0;
        v26 = 0;
        v27 = 0;
        *(_BYTE *)(a1 + 36) |= 1u;
        while (1)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            break;
          v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
          *(_QWORD *)(a2 + v28) = v29 + 1;
          v27 |= (unint64_t)(v30 & 0x7F) << v25;
          if ((v30 & 0x80) == 0)
            goto LABEL_43;
          v25 += 7;
          v14 = v26++ >= 9;
          if (v14)
          {
            LODWORD(v27) = 0;
            goto LABEL_45;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_43:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v27) = 0;
LABEL_45:
        *(_DWORD *)(a1 + 32) = v27;
      }
      else if ((v10 >> 3) == 1)
      {
        if (v16 == 2)
        {
          result = PBReaderPlaceMark();
          if (!(_DWORD)result)
            return result;
          while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
          {
            v19 = 0;
            v20 = 0;
            v21 = 0;
            while (1)
            {
              v22 = *v3;
              v23 = *(_QWORD *)(a2 + v22);
              if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
                break;
              v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
              *(_QWORD *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                v14 = v20++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_32;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_32:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v31 = 0;
          v32 = 0;
          v33 = 0;
          while (1)
          {
            v34 = *v3;
            v35 = *(_QWORD *)(a2 + v34);
            if (v35 == -1 || v35 >= *(_QWORD *)(a2 + *v4))
              break;
            v36 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 1;
            v33 |= (unint64_t)(v36 & 0x7F) << v31;
            if (v36 < 0)
            {
              v31 += 7;
              v14 = v32++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_55;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_55:
          PBRepeatedInt32Add();
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL MXItnAlignmentReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  int *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  unint64_t v38;
  char v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = 0;
          v18 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 2u;
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___MXItnAlignment__firstPreItnTokenIndex;
              goto LABEL_53;
            }
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              break;
            v17 += 7;
            v23 = v18++ > 8;
            if (v23)
            {
              LODWORD(v19) = 0;
              v24 = &OBJC_IVAR___MXItnAlignment__firstPreItnTokenIndex;
              goto LABEL_56;
            }
          }
          v24 = &OBJC_IVAR___MXItnAlignment__firstPreItnTokenIndex;
          goto LABEL_54;
        case 2u:
          v25 = 0;
          v26 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 8u;
          while (2)
          {
            v27 = *v3;
            v28 = *(_QWORD *)(a2 + v27);
            if (v28 == -1 || v28 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___MXItnAlignment__lastPreItnTokenIndex;
              goto LABEL_53;
            }
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v28);
            *(_QWORD *)(a2 + v27) = v28 + 1;
            v19 |= (unint64_t)(v29 & 0x7F) << v25;
            if (v29 < 0)
            {
              v25 += 7;
              v23 = v26++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___MXItnAlignment__lastPreItnTokenIndex;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___MXItnAlignment__lastPreItnTokenIndex;
          goto LABEL_54;
        case 3u:
          v30 = 0;
          v31 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 1u;
          while (2)
          {
            v32 = *v3;
            v33 = *(_QWORD *)(a2 + v32);
            if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
            {
              v24 = &OBJC_IVAR___MXItnAlignment__firstPostItnCharPos;
              goto LABEL_53;
            }
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v19 |= (unint64_t)(v34 & 0x7F) << v30;
            if (v34 < 0)
            {
              v30 += 7;
              v23 = v31++ > 8;
              if (v23)
              {
                LODWORD(v19) = 0;
                v24 = &OBJC_IVAR___MXItnAlignment__firstPostItnCharPos;
                goto LABEL_56;
              }
              continue;
            }
            break;
          }
          v24 = &OBJC_IVAR___MXItnAlignment__firstPostItnCharPos;
          goto LABEL_54;
        case 4u:
          v35 = 0;
          v36 = 0;
          v19 = 0;
          *(_BYTE *)(a1 + 24) |= 4u;
          break;
        default:
          if ((PBReaderSkipValueWithTag() & 1) != 0)
            continue;
          return 0;
      }
      while (1)
      {
        v37 = *v3;
        v38 = *(_QWORD *)(a2 + v37);
        if (v38 == -1 || v38 >= *(_QWORD *)(a2 + *v4))
          break;
        v39 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
        *(_QWORD *)(a2 + v37) = v38 + 1;
        v19 |= (unint64_t)(v39 & 0x7F) << v35;
        if ((v39 & 0x80) == 0)
        {
          v24 = &OBJC_IVAR___MXItnAlignment__lastPostItnCharPos;
          goto LABEL_54;
        }
        v35 += 7;
        v23 = v36++ > 8;
        if (v23)
        {
          LODWORD(v19) = 0;
          v24 = &OBJC_IVAR___MXItnAlignment__lastPostItnCharPos;
          goto LABEL_56;
        }
      }
      v24 = &OBJC_IVAR___MXItnAlignment__lastPostItnCharPos;
LABEL_53:
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v19) = 0;
LABEL_56:
      *(_DWORD *)(a1 + *v24) = v19;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXCancelRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL MXAudioAnalyticsAcousticFeatureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  MXAcousticFeature *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(MXAcousticFeature **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(MXAcousticFeature);
    objc_storeStrong((id *)(a1 + 16), v18);
    if (!PBReaderPlaceMark() || (MXAcousticFeatureReadFrom((uint64_t)v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXFinalSpeechRecognitionResponseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  MXRecognitionResult *v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  char v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 88;
        goto LABEL_59;
      case 2u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 80;
        goto LABEL_59;
      case 3u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 104) |= 4u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              v15 = v22++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v23) = 0;
LABEL_70:
        v52 = 64;
        goto LABEL_79;
      case 4u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 72;
        goto LABEL_59;
      case 5u:
        v28 = objc_alloc_init(MXRecognitionResult);
        objc_storeStrong((id *)(a1 + 48), v28);
        if (!PBReaderPlaceMark() || !MXRecognitionResultReadFrom((char *)v28, a2))
          goto LABEL_88;
        goto LABEL_57;
      case 6u:
        v29 = 0;
        v30 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 104) |= 2u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v23 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v23) = 0;
LABEL_74:
        v52 = 24;
        goto LABEL_79;
      case 7u:
        v28 = objc_alloc_init(MXAudioAnalytics);
        objc_storeStrong((id *)(a1 + 16), v28);
        if (!PBReaderPlaceMark() || !MXAudioAnalyticsReadFrom(v28, a2))
          goto LABEL_88;
        goto LABEL_57;
      case 8u:
        v35 = 0;
        v36 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 104) |= 8u;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v39;
            v23 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_78;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v23) = 0;
LABEL_78:
        v52 = 96;
LABEL_79:
        *(_DWORD *)(a1 + v52) = v23;
        goto LABEL_86;
      case 9u:
        *(_BYTE *)(a1 + 104) |= 1u;
        v41 = *v3;
        v42 = *(_QWORD *)(a2 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v43 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v42);
          *(_QWORD *)(a2 + v41) = v42 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v43 = 0;
        }
        *(_QWORD *)(a1 + 8) = v43;
        goto LABEL_86;
      case 0xAu:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 32;
        goto LABEL_59;
      case 0xBu:
        v28 = objc_alloc_init(MXLatnnMitigatorResult);
        objc_storeStrong((id *)(a1 + 40), v28);
        if (PBReaderPlaceMark() && (MXLatnnMitigatorResultReadFrom((uint64_t)v28, a2) & 1) != 0)
        {
LABEL_57:
          PBReaderRecallMark();

LABEL_86:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_88:

        return 0;
      case 0xCu:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 56;
LABEL_59:
        v44 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_86;
      case 0xDu:
        v45 = 0;
        v46 = 0;
        v47 = 0;
        *(_BYTE *)(a1 + 104) |= 0x10u;
        while (2)
        {
          v48 = *v3;
          v49 = *(_QWORD *)(a2 + v48);
          v50 = v49 + 1;
          if (v49 == -1 || v50 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v49);
            *(_QWORD *)(a2 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              v15 = v46++ >= 9;
              if (v15)
              {
                v47 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v47 = 0;
LABEL_83:
        *(_BYTE *)(a1 + 100) = v47 != 0;
        goto LABEL_86;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_86;
    }
  }
}

uint64_t MXRecognitionPhraseTokensAlternativesReadFrom(_BYTE *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  MXRecognitionPhraseTokens *v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v18 = 0;
        v19 = 0;
        v20 = 0;
        a1[20] |= 1u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_33;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_35;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_35:
        a1[16] = v20 != 0;
      }
      else if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(MXRecognitionPhraseTokens);
        objc_msgSend(a1, "addTokPhrases:", v17);
        if (!PBReaderPlaceMark() || (MXRecognitionPhraseTokensReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXWordWithPronunciationsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void *v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void *v27;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_33;
        case 2u:
          PBReaderReadData();
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
            objc_msgSend((id)a1, "addPronunciations:", v20);

          continue;
        case 3u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 40) |= 1u;
          break;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
LABEL_33:
          v27 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
        *(_QWORD *)(a2 + v24) = v25 + 1;
        v23 |= (unint64_t)(v26 & 0x7F) << v21;
        if ((v26 & 0x80) == 0)
          goto LABEL_35;
        v21 += 7;
        v14 = v22++ >= 9;
        if (v14)
        {
          LODWORD(v23) = 0;
          goto LABEL_37;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_35:
      if (*(_BYTE *)(a2 + *v5))
        LODWORD(v23) = 0;
LABEL_37:
      *(_DWORD *)(a1 + 8) = v23;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL MXCategoryEntitiesReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  MXEntities *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(MXEntities **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;
LABEL_24:

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(MXEntities);
    objc_storeStrong((id *)(a1 + 16), v18);
    if (!PBReaderPlaceMark() || (MXEntitiesReadFrom(v18, a2) & 1) == 0)
    {

      return 0;
    }
    PBReaderRecallMark();
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXStreamingSpeechProfileCommitReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXSpeechRecognitionFeatureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        *(_BYTE *)(a1 + 20) |= 1u;
        v20 = *v3;
        v21 = *(_QWORD *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFFBLL && v21 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v22 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v22 = 0;
        }
        *(_DWORD *)(a1 + 16) = v22;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v18;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id MXSpeech_profile_dataOptions()
{
  if (MXSpeech_profile_dataOptions_once != -1)
    dispatch_once(&MXSpeech_profile_dataOptions_once, &__block_literal_global_1);
  return (id)MXSpeech_profile_dataOptions_sOptions;
}

uint64_t MXRecognitionCandidateReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  MXRecognitionResult *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 104;
        goto LABEL_63;
      case 2u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 96;
        goto LABEL_63;
      case 3u:
        v21 = 0;
        v22 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 116) |= 8u;
        while (2)
        {
          v24 = *v3;
          v25 = *(_QWORD *)(a2 + v24);
          v26 = v25 + 1;
          if (v25 == -1 || v26 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v27 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
            *(_QWORD *)(a2 + v24) = v26;
            v23 |= (unint64_t)(v27 & 0x7F) << v21;
            if (v27 < 0)
            {
              v21 += 7;
              v15 = v22++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_67;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v23) = 0;
LABEL_67:
        v47 = 80;
        goto LABEL_76;
      case 4u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 88;
        goto LABEL_63;
      case 5u:
        v28 = objc_alloc_init(MXRecognitionResult);
        objc_storeStrong((id *)(a1 + 56), v28);
        if (!PBReaderPlaceMark() || !MXRecognitionResultReadFrom((char *)v28, a2))
          goto LABEL_84;
        goto LABEL_61;
      case 6u:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 72;
        goto LABEL_63;
      case 7u:
        *(_BYTE *)(a1 + 116) |= 1u;
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v31 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v30);
          *(_QWORD *)(a2 + v29) = v30 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v31 = 0;
        }
        v48 = 8;
        goto LABEL_81;
      case 8u:
        v32 = 0;
        v33 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 116) |= 4u;
        while (2)
        {
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          v36 = v35 + 1;
          if (v35 == -1 || v36 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v36;
            v23 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v15 = v33++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v23) = 0;
LABEL_71:
        v47 = 32;
        goto LABEL_76;
      case 9u:
        v28 = objc_alloc_init(MXAudioAnalytics);
        objc_storeStrong((id *)(a1 + 24), v28);
        if (!PBReaderPlaceMark() || !MXAudioAnalyticsReadFrom(v28, a2))
          goto LABEL_84;
        goto LABEL_61;
      case 0xAu:
        v38 = 0;
        v39 = 0;
        v23 = 0;
        *(_BYTE *)(a1 + 116) |= 0x10u;
        while (2)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v41);
            *(_QWORD *)(a2 + v40) = v42;
            v23 |= (unint64_t)(v43 & 0x7F) << v38;
            if (v43 < 0)
            {
              v38 += 7;
              v15 = v39++ >= 9;
              if (v15)
              {
                LODWORD(v23) = 0;
                goto LABEL_75;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v23) = 0;
LABEL_75:
        v47 = 112;
LABEL_76:
        *(_DWORD *)(a1 + v47) = v23;
        goto LABEL_82;
      case 0xBu:
        *(_BYTE *)(a1 + 116) |= 2u;
        v44 = *v3;
        v45 = *(_QWORD *)(a2 + v44);
        if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v31 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v45);
          *(_QWORD *)(a2 + v44) = v45 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v31 = 0;
        }
        v48 = 16;
LABEL_81:
        *(_QWORD *)(a1 + v48) = v31;
        goto LABEL_82;
      case 0xCu:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 40;
        goto LABEL_63;
      case 0xDu:
        v28 = objc_alloc_init(MXLatnnMitigatorResult);
        objc_storeStrong((id *)(a1 + 48), v28);
        if (PBReaderPlaceMark() && (MXLatnnMitigatorResultReadFrom((uint64_t)v28, a2) & 1) != 0)
        {
LABEL_61:
          PBReaderRecallMark();

LABEL_82:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_84:

        return 0;
      case 0xEu:
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 64;
LABEL_63:
        v46 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_82;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_82;
    }
  }
}

uint64_t MXLatnnMitigatorResultReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  BOOL v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
            break;
          v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v15 = v9++ >= 9;
          if (v15)
          {
            v10 = 0;
            v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v16)
          v17 = 1;
        else
          v17 = (v10 & 7) == 4;
        if (!v17)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              *(_BYTE *)(a1 + 36) |= 4u;
              break;
            case 2u:
              PBReaderReadString();
              v26 = objc_claimAutoreleasedReturnValue();
              v27 = *(void **)(a1 + 24);
              *(_QWORD *)(a1 + 24) = v26;

              goto LABEL_44;
            case 3u:
              *(_BYTE *)(a1 + 36) |= 2u;
              v28 = *v3;
              v29 = *(_QWORD *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v30 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v29);
                *(_QWORD *)(a2 + v28) = v29 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v30 = 0;
              }
              v33 = 16;
              goto LABEL_43;
            case 4u:
              *(_BYTE *)(a1 + 36) |= 1u;
              v31 = *v3;
              v32 = *(_QWORD *)(a2 + v31);
              if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v30 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v32);
                *(_QWORD *)(a2 + v31) = v32 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v30 = 0;
              }
              v33 = 8;
LABEL_43:
              *(_QWORD *)(a1 + v33) = v30;
              goto LABEL_44;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_44:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
          while (1)
          {
            v21 = *v3;
            v22 = *(_QWORD *)(a2 + v21);
            v23 = v22 + 1;
            if (v22 == -1 || v23 > *(_QWORD *)(a2 + *v4))
              break;
            v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0)
              goto LABEL_36;
            v18 += 7;
            v15 = v19++ >= 9;
            if (v15)
            {
              v20 = 0;
              goto LABEL_38;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_36:
          if (*(_BYTE *)(a2 + *v5))
            v20 = 0;
LABEL_38:
          *(_BYTE *)(a1 + 32) = v20 != 0;
          goto LABEL_44;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXRecognitionTokenReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void *v47;
  uint64_t v48;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_59;
        case 2u:
          v20 = 0;
          v21 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 52) |= 8u;
          while (2)
          {
            v23 = *v3;
            v24 = *(_QWORD *)(a2 + v23);
            if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
              *(_QWORD *)(a2 + v23) = v24 + 1;
              v22 |= (unint64_t)(v25 & 0x7F) << v20;
              if (v25 < 0)
              {
                v20 += 7;
                v14 = v21++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_63;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_63:
          v48 = 36;
          goto LABEL_76;
        case 3u:
          v26 = 0;
          v27 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 52) |= 2u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v29 + 1;
              v22 |= (unint64_t)(v30 & 0x7F) << v26;
              if (v30 < 0)
              {
                v26 += 7;
                v14 = v27++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_67;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_67:
          v48 = 12;
          goto LABEL_76;
        case 4u:
          v31 = 0;
          v32 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 52) |= 4u;
          while (2)
          {
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 == -1 || v34 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v35 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 1;
              v22 |= (unint64_t)(v35 & 0x7F) << v31;
              if (v35 < 0)
              {
                v31 += 7;
                v14 = v32++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_71;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_71:
          v48 = 32;
          goto LABEL_76;
        case 5u:
          v36 = 0;
          v37 = 0;
          v22 = 0;
          *(_BYTE *)(a1 + 52) |= 1u;
          while (2)
          {
            v38 = *v3;
            v39 = *(_QWORD *)(a2 + v38);
            if (v39 == -1 || v39 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v39);
              *(_QWORD *)(a2 + v38) = v39 + 1;
              v22 |= (unint64_t)(v40 & 0x7F) << v36;
              if (v40 < 0)
              {
                v36 += 7;
                v14 = v37++ >= 9;
                if (v14)
                {
                  LODWORD(v22) = 0;
                  goto LABEL_75;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v22) = 0;
LABEL_75:
          v48 = 8;
LABEL_76:
          *(_DWORD *)(a1 + v48) = v22;
          continue;
        case 6u:
          v41 = 0;
          v42 = 0;
          v43 = 0;
          *(_BYTE *)(a1 + 52) |= 0x10u;
          break;
        case 7u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
          goto LABEL_59;
        case 8u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
LABEL_59:
          v47 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v44 = *v3;
        v45 = *(_QWORD *)(a2 + v44);
        if (v45 == -1 || v45 >= *(_QWORD *)(a2 + *v4))
          break;
        v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
        *(_QWORD *)(a2 + v44) = v45 + 1;
        v43 |= (unint64_t)(v46 & 0x7F) << v41;
        if ((v46 & 0x80) == 0)
          goto LABEL_78;
        v41 += 7;
        v14 = v42++ >= 9;
        if (v14)
        {
          v43 = 0;
          goto LABEL_80;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_78:
      if (*(_BYTE *)(a2 + *v5))
        v43 = 0;
LABEL_80:
      *(_BYTE *)(a1 + 48) = v43 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXAcousticFeatureReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t result;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      v18 = v10 & 7;
      if (v17 || v18 == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        *(_BYTE *)(a1 + 36) |= 1u;
        v25 = *v3;
        v26 = *(_QWORD *)(a2 + v25);
        if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *(_QWORD *)(a2 + *v4))
        {
          v27 = *(_DWORD *)(*(_QWORD *)(a2 + *v7) + v26);
          *(_QWORD *)(a2 + v25) = v26 + 4;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v27 = 0;
        }
        *(_DWORD *)(a1 + 32) = v27;
      }
      else if ((v10 >> 3) == 1)
      {
        if (v18 == 2)
        {
          result = PBReaderPlaceMark();
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v21 = (unint64_t *)(a2 + *v3);
            v22 = *v21;
            v23 = *(_QWORD *)(a2 + *v4);
            if (*v21 >= v23)
              break;
            v24 = *v5;
            if (*(_BYTE *)(a2 + v24))
              break;
            if (v22 > 0xFFFFFFFFFFFFFFFBLL || v22 + 4 > v23)
              *(_BYTE *)(a2 + v24) = 1;
            else
              *v21 = v22 + 4;
            PBRepeatedFloatAdd();
          }
          PBReaderRecallMark();
        }
        else
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 <= 0xFFFFFFFFFFFFFFFBLL && v29 + 4 <= *(_QWORD *)(a2 + *v4))
            *(_QWORD *)(a2 + v28) = v29 + 4;
          else
            *(_BYTE *)(a2 + v16) = 1;
          PBRepeatedFloatAdd();
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL MXAudioAnalyticsReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  MXSpeechRecognitionFeature *v17;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 2)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(MXSpeechRecognitionFeature);
        objc_msgSend(a1, "addSpeechRecognitionFeatures:", v17);
        if (!PBReaderPlaceMark() || (MXSpeechRecognitionFeatureReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_30;
LABEL_25:
        PBReaderRecallMark();

        goto LABEL_27;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_27:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v17 = objc_alloc_init(MXAudioAnalyticsAcousticFeature);
    objc_msgSend(a1, "addAcousticFeatures:", v17);
    if (!PBReaderPlaceMark() || !MXAudioAnalyticsAcousticFeatureReadFrom((uint64_t)v17, a2))
    {
LABEL_30:

      return 0;
    }
    goto LABEL_25;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXBeginDictationReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  MXAudioMetadata *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  char v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  void *v50;
  char v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v17 = objc_alloc_init(MXAudioMetadata);
          objc_storeStrong((id *)(a1 + 32), v17);
          if (PBReaderPlaceMark() && (MXAudioMetadataReadFrom((uint64_t)v17, a2) & 1) != 0)
          {
            PBReaderRecallMark();
            goto LABEL_50;
          }

          return 0;
        case 2u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 120;
          goto LABEL_75;
        case 3u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 40;
          goto LABEL_75;
        case 4u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 48;
          goto LABEL_75;
        case 5u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 16;
          goto LABEL_75;
        case 6u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 24;
          goto LABEL_75;
        case 7u:
          v21 = 0;
          v22 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 144) |= 4u;
          while (2)
          {
            v24 = *v3;
            v25 = *(_QWORD *)(a2 + v24);
            if (v25 == -1 || v25 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v25);
              *(_QWORD *)(a2 + v24) = v25 + 1;
              v23 |= (unint64_t)(v26 & 0x7F) << v21;
              if (v26 < 0)
              {
                v21 += 7;
                v14 = v22++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_100:
          v68 = 84;
          goto LABEL_125;
        case 8u:
          v27 = 0;
          v28 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 144) |= 2u;
          while (2)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
              *(_QWORD *)(a2 + v29) = v30 + 1;
              v23 |= (unint64_t)(v31 & 0x7F) << v27;
              if (v31 < 0)
              {
                v27 += 7;
                v14 = v28++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_104;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_104:
          v68 = 80;
          goto LABEL_125;
        case 9u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 128;
          goto LABEL_75;
        case 0xAu:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 104;
          goto LABEL_75;
        case 0xBu:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 96;
          goto LABEL_75;
        case 0xCu:
          PBReaderReadString();
          v17 = (MXAudioMetadata *)objc_claimAutoreleasedReturnValue();
          if (v17)
            objc_msgSend((id)a1, "addInlineLmeItems:", v17);
          goto LABEL_50;
        case 0xDu:
          PBReaderReadString();
          v17 = (MXAudioMetadata *)objc_claimAutoreleasedReturnValue();
          if (v17)
            objc_msgSend((id)a1, "addLanguages:", v17);
LABEL_50:

          continue;
        case 0xEu:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 112;
          goto LABEL_75;
        case 0xFu:
          PBReaderReadData();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 8;
          goto LABEL_75;
        case 0x10u:
          v32 = 0;
          v33 = 0;
          v34 = 0;
          *(_BYTE *)(a1 + 144) |= 8u;
          while (2)
          {
            v35 = *v3;
            v36 = *(_QWORD *)(a2 + v35);
            if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
              *(_QWORD *)(a2 + v35) = v36 + 1;
              v34 |= (unint64_t)(v37 & 0x7F) << v32;
              if (v37 < 0)
              {
                v32 += 7;
                v14 = v33++ >= 9;
                if (v14)
                {
                  v34 = 0;
                  goto LABEL_108;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v34 = 0;
LABEL_108:
          v69 = v34 != 0;
          v70 = 136;
          goto LABEL_130;
        case 0x11u:
          v38 = 0;
          v39 = 0;
          v40 = 0;
          *(_BYTE *)(a1 + 144) |= 0x80u;
          while (2)
          {
            v41 = *v3;
            v42 = *(_QWORD *)(a2 + v41);
            if (v42 == -1 || v42 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v42);
              *(_QWORD *)(a2 + v41) = v42 + 1;
              v40 |= (unint64_t)(v43 & 0x7F) << v38;
              if (v43 < 0)
              {
                v38 += 7;
                v14 = v39++ >= 9;
                if (v14)
                {
                  v40 = 0;
                  goto LABEL_112;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v40 = 0;
LABEL_112:
          v69 = v40 != 0;
          v70 = 140;
          goto LABEL_130;
        case 0x12u:
          v44 = 0;
          v45 = 0;
          v46 = 0;
          *(_BYTE *)(a1 + 144) |= 0x40u;
          while (2)
          {
            v47 = *v3;
            v48 = *(_QWORD *)(a2 + v47);
            if (v48 == -1 || v48 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v49 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v48);
              *(_QWORD *)(a2 + v47) = v48 + 1;
              v46 |= (unint64_t)(v49 & 0x7F) << v44;
              if (v49 < 0)
              {
                v44 += 7;
                v14 = v45++ >= 9;
                if (v14)
                {
                  v46 = 0;
                  goto LABEL_116;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v46 = 0;
LABEL_116:
          v69 = v46 != 0;
          v70 = 139;
          goto LABEL_130;
        case 0x13u:
          PBReaderReadString();
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = 72;
LABEL_75:
          v50 = *(void **)(a1 + v20);
          *(_QWORD *)(a1 + v20) = v19;

          continue;
        case 0x14u:
          v51 = 0;
          v52 = 0;
          v53 = 0;
          *(_BYTE *)(a1 + 144) |= 0x10u;
          while (2)
          {
            v54 = *v3;
            v55 = *(_QWORD *)(a2 + v54);
            if (v55 == -1 || v55 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v55);
              *(_QWORD *)(a2 + v54) = v55 + 1;
              v53 |= (unint64_t)(v56 & 0x7F) << v51;
              if (v56 < 0)
              {
                v51 += 7;
                v14 = v52++ >= 9;
                if (v14)
                {
                  v53 = 0;
                  goto LABEL_120;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v53 = 0;
LABEL_120:
          v69 = v53 != 0;
          v70 = 137;
          goto LABEL_130;
        case 0x15u:
          v57 = 0;
          v58 = 0;
          v23 = 0;
          *(_BYTE *)(a1 + 144) |= 1u;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            if (v60 == -1 || v60 >= *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v61 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
              *(_QWORD *)(a2 + v59) = v60 + 1;
              v23 |= (unint64_t)(v61 & 0x7F) << v57;
              if (v61 < 0)
              {
                v57 += 7;
                v14 = v58++ >= 9;
                if (v14)
                {
                  LODWORD(v23) = 0;
                  goto LABEL_124;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v23) = 0;
LABEL_124:
          v68 = 64;
LABEL_125:
          *(_DWORD *)(a1 + v68) = v23;
          continue;
        case 0x16u:
          v62 = 0;
          v63 = 0;
          v64 = 0;
          *(_BYTE *)(a1 + 144) |= 0x20u;
          break;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v65 = *v3;
        v66 = *(_QWORD *)(a2 + v65);
        if (v66 == -1 || v66 >= *(_QWORD *)(a2 + *v4))
          break;
        v67 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v66);
        *(_QWORD *)(a2 + v65) = v66 + 1;
        v64 |= (unint64_t)(v67 & 0x7F) << v62;
        if ((v67 & 0x80) == 0)
          goto LABEL_127;
        v62 += 7;
        v14 = v63++ >= 9;
        if (v14)
        {
          v64 = 0;
          goto LABEL_129;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_127:
      if (*(_BYTE *)(a2 + *v5))
        v64 = 0;
LABEL_129:
      v69 = v64 != 0;
      v70 = 138;
LABEL_130:
      *(_BYTE *)(a1 + v70) = v69;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXAudioMetadataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  MXVoiceTriggerInfo *v35;
  char v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 44) |= 2u;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_54;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            LODWORD(v19) = 0;
            goto LABEL_56;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_54:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_56:
        v44 = 24;
        goto LABEL_61;
      case 2u:
        v24 = 0;
        v25 = 0;
        v19 = 0;
        *(_BYTE *)(a1 + 44) |= 1u;
        while (2)
        {
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 == -1 || v27 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v28 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 1;
            v19 |= (unint64_t)(v28 & 0x7F) << v24;
            if (v28 < 0)
            {
              v24 += 7;
              v14 = v25++ >= 9;
              if (v14)
              {
                LODWORD(v19) = 0;
                goto LABEL_60;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v19) = 0;
LABEL_60:
        v44 = 8;
LABEL_61:
        *(_DWORD *)(a1 + v44) = v19;
        goto LABEL_71;
      case 3u:
        v29 = 0;
        v30 = 0;
        v31 = 0;
        *(_BYTE *)(a1 + 44) |= 8u;
        while (2)
        {
          v32 = *v3;
          v33 = *(_QWORD *)(a2 + v32);
          if (v33 == -1 || v33 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v33);
            *(_QWORD *)(a2 + v32) = v33 + 1;
            v31 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              v14 = v30++ >= 9;
              if (v14)
              {
                v31 = 0;
                goto LABEL_65;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
LABEL_65:
        v45 = v31 != 0;
        v46 = 41;
        goto LABEL_70;
      case 4u:
        v35 = objc_alloc_init(MXVoiceTriggerInfo);
        objc_storeStrong((id *)(a1 + 32), v35);
        if (PBReaderPlaceMark() && (MXVoiceTriggerInfoReadFrom((uint64_t)v35, a2) & 1) != 0)
        {
          PBReaderRecallMark();

LABEL_71:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 5u:
        v36 = 0;
        v37 = 0;
        v38 = 0;
        *(_BYTE *)(a1 + 44) |= 4u;
        while (2)
        {
          v39 = *v3;
          v40 = *(_QWORD *)(a2 + v39);
          if (v40 == -1 || v40 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v41 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v40);
            *(_QWORD *)(a2 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              v14 = v37++ >= 9;
              if (v14)
              {
                v38 = 0;
                goto LABEL_69;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v38 = 0;
LABEL_69:
        v45 = v38 != 0;
        v46 = 40;
LABEL_70:
        *(_BYTE *)(a1 + v46) = v45;
        goto LABEL_71;
      case 6u:
        PBReaderReadString();
        v42 = objc_claimAutoreleasedReturnValue();
        v43 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v42;

        goto LABEL_71;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_71;
    }
  }
}

uint64_t MXEntitiesReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  MXEntityWords *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(MXEntityWords);
        objc_msgSend(a1, "addEntities:", v17);
        if (!PBReaderPlaceMark() || (MXEntityWordsReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXAudioFrameReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 28) |= 1u;
        while (1)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
          *(_QWORD *)(a2 + v23) = v24 + 1;
          v22 |= (unint64_t)(v25 & 0x7F) << v20;
          if ((v25 & 0x80) == 0)
            goto LABEL_35;
          v20 += 7;
          v14 = v21++ >= 9;
          if (v14)
          {
            v22 = 0;
            goto LABEL_37;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_35:
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_37:
        *(_BYTE *)(a1 + 24) = v22 != 0;
      }
      else if ((_DWORD)v17 == 2)
      {
        PBReaderReadData();
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        if (v26)
          objc_msgSend((id)a1, "addAudio:", v26);

      }
      else if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v18;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL MXDeviceInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 8;
          goto LABEL_24;
        case 2u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 16;
          goto LABEL_24;
        case 3u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 32;
          goto LABEL_24;
        case 4u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 40;
          goto LABEL_24;
        case 5u:
          PBReaderReadString();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = 24;
LABEL_24:
          v19 = *(void **)(a1 + v18);
          *(_QWORD *)(a1 + v18) = v17;

          goto LABEL_25;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_25:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXRepeatedItnAlignmentReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  MXItnAlignment *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(MXItnAlignment);
        objc_msgSend(a1, "addItnAlignment:", v17);
        if (!PBReaderPlaceMark() || !MXItnAlignmentReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXSpeechProfileBuildResponseReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  MXProcessingError *v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t result;
  void *v27;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 32;
        goto LABEL_34;
      case 2u:
        v19 = objc_alloc_init(MXProcessingError);
        objc_storeStrong((id *)(a1 + 8), v19);
        if (PBReaderPlaceMark() && (MXProcessingErrorReadFrom((uint64_t)v19, a2) & 1) != 0)
        {
          PBReaderRecallMark();

LABEL_39:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 3u:
        v20 = 0;
        v21 = 0;
        v22 = 0;
        *(_BYTE *)(a1 + 44) |= 1u;
        while (2)
        {
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 == -1 || v24 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              v14 = v21++ >= 9;
              if (v14)
              {
                v22 = 0;
                goto LABEL_38;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v22 = 0;
LABEL_38:
        *(_BYTE *)(a1 + 40) = v22 != 0;
        goto LABEL_39;
      case 0xAu:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
        goto LABEL_34;
      case 0xBu:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 24;
LABEL_34:
        v27 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_39;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_39;
    }
  }
}

uint64_t MXSpeechProfileSourceDataReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  MXCategoryEntities *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(MXCategoryEntities);
        objc_msgSend(a1, "addEntitiesByCategory:", v17);
        if (!PBReaderPlaceMark() || !MXCategoryEntitiesReadFrom((uint64_t)v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL MXStreamingSpeechProfileBeginReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 8;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 16;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL MXRecognitionResultReadFrom(char *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  MXRecognitionSausage *v17;
  uint64_t v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = objc_alloc_init(MXRecognitionSausage);
        v18 = 32;
        goto LABEL_23;
      case 2u:
        v17 = objc_alloc_init(MXRecognitionSausage);
        v18 = 16;
LABEL_23:
        objc_storeStrong((id *)&a1[v18], v17);
        if (!PBReaderPlaceMark() || (MXRecognitionSausageReadFrom(v17, a2) & 1) == 0)
          goto LABEL_40;
        goto LABEL_36;
      case 3u:
        v17 = objc_alloc_init(MXRecognitionChoice);
        objc_msgSend(a1, "addPreItnNbestChoices:", v17);
        goto LABEL_28;
      case 4u:
        v17 = objc_alloc_init(MXRecognitionChoice);
        objc_msgSend(a1, "addPostItnNbestChoices:", v17);
LABEL_28:
        if (!PBReaderPlaceMark() || (MXRecognitionChoiceReadFrom((uint64_t)v17, a2) & 1) == 0)
          goto LABEL_40;
        goto LABEL_36;
      case 5u:
        v17 = objc_alloc_init(MXItnAlignment);
        objc_msgSend(a1, "addPreItnTokenToPostItnCharAlignment:", v17);
        if (!PBReaderPlaceMark() || !MXItnAlignmentReadFrom((uint64_t)v17, a2))
          goto LABEL_40;
        goto LABEL_36;
      case 6u:
        v17 = objc_alloc_init(MXChoiceAlignment);
        objc_msgSend(a1, "addChoiceAlignments:", v17);
        if (PBReaderPlaceMark() && (MXChoiceAlignmentReadFrom(v17, a2) & 1) != 0)
        {
LABEL_36:
          PBReaderRecallMark();

LABEL_37:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_40:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_37;
    }
  }
}

uint64_t MXClientBoundFrameReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t result;
  MXRequestComplete *v24;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 0u:
        v17 = 0;
        do
        {
          v18 = *v3;
          v19 = *(_QWORD *)(a2 + v18);
          if (v19 == -1 || v19 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
            goto LABEL_46;
          }
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)(a2 + *v7) + v19);
          *(_QWORD *)(a2 + v18) = v20;
          if ((v21 & 0x80000000) == 0)
            break;
        }
        while (v17++ <= 8);
        goto LABEL_46;
      case 1u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 1;
        v24 = objc_alloc_init(MXRequestComplete);
        objc_storeStrong((id *)(a1 + 32), v24);
        if (!PBReaderPlaceMark() || (MXRequestCompleteReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_50;
        goto LABEL_45;
      case 2u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 2;
        v24 = objc_alloc_init(MXProcessingError);
        objc_storeStrong((id *)(a1 + 24), v24);
        if (!PBReaderPlaceMark() || (MXProcessingErrorReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_50;
        goto LABEL_45;
      case 3u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 3;
        v24 = objc_alloc_init(MXASRResult);
        objc_storeStrong((id *)(a1 + 8), v24);
        if (!PBReaderPlaceMark() || (MXASRResultReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_50;
        goto LABEL_45;
      case 4u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 4;
        v24 = objc_alloc_init(MXSpeechProfileRebuildNeeded);
        objc_storeStrong((id *)(a1 + 48), v24);
        if (!PBReaderPlaceMark() || (MXSpeechProfileRebuildNeededReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_50;
        goto LABEL_45;
      case 5u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 5;
        v24 = objc_alloc_init(MXRequestMitigated);
        objc_storeStrong((id *)(a1 + 40), v24);
        if (!PBReaderPlaceMark() || (MXRequestMitigatedReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_50;
        goto LABEL_45;
      case 6u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 64) |= 1u;
        *(_DWORD *)(a1 + 16) = 6;
        v24 = objc_alloc_init(MXSpeechProfileBuildResponse);
        objc_storeStrong((id *)(a1 + 56), v24);
        if (PBReaderPlaceMark() && (MXSpeechProfileBuildResponseReadFrom((uint64_t)v24, a2) & 1) != 0)
        {
LABEL_45:
          PBReaderRecallMark();

LABEL_46:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_50:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_46;
    }
  }
}

uint64_t MXSessionMetadataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  unint64_t v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  MXDeviceInfo *v26;
  char v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((int)(v10 >> 3) > 10)
      {
        if ((_DWORD)v17 == 11)
        {
          v27 = 0;
          v28 = 0;
          v29 = 0;
          *(_BYTE *)(a1 + 32) |= 1u;
          while (1)
          {
            v30 = *v3;
            v31 = *(_QWORD *)(a2 + v30);
            if (v31 == -1 || v31 >= *(_QWORD *)(a2 + *v4))
              break;
            v32 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v31);
            *(_QWORD *)(a2 + v30) = v31 + 1;
            v29 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
              goto LABEL_48;
            v27 += 7;
            v14 = v28++ >= 9;
            if (v14)
            {
              LODWORD(v29) = 0;
              goto LABEL_50;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_48:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v29) = 0;
LABEL_50:
          *(_DWORD *)(a1 + 24) = v29;
        }
        else
        {
          if ((_DWORD)v17 != 12)
          {
LABEL_41:
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
            continue;
          }
          PBReaderReadString();
          v24 = objc_claimAutoreleasedReturnValue();
          v25 = *(void **)(a1 + 16);
          *(_QWORD *)(a1 + 16) = v24;

        }
      }
      else if ((_DWORD)v17 == 1)
      {
        v26 = objc_alloc_init(MXDeviceInfo);
        objc_storeStrong((id *)(a1 + 8), v26);
        if (!PBReaderPlaceMark() || !MXDeviceInfoReadFrom((uint64_t)v26, a2))
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        if ((_DWORD)v17 != 10)
          goto LABEL_41;
        v18 = 0;
        v19 = 0;
        v20 = 0;
        *(_BYTE *)(a1 + 32) |= 2u;
        while (1)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
            break;
          v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 1;
          v20 |= (unint64_t)(v23 & 0x7F) << v18;
          if ((v23 & 0x80) == 0)
            goto LABEL_44;
          v18 += 7;
          v14 = v19++ >= 9;
          if (v14)
          {
            v20 = 0;
            goto LABEL_46;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_44:
        if (*(_BYTE *)(a2 + *v5))
          v20 = 0;
LABEL_46:
        *(_BYTE *)(a1 + 28) = v20 != 0;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXVoiceTriggerInfoReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          v13 = v12 + 1;
          if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
            break;
          v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          if (v9++ >= 9)
          {
            v10 = 0;
            v16 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v16 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v16)
          v17 = 1;
        else
          v17 = (v10 & 7) == 4;
        if (!v17)
        {
          switch((v10 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 88) |= 0x80u;
              v18 = *v3;
              v19 = *(_QWORD *)(a2 + v18);
              if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v19);
                *(_QWORD *)(a2 + v18) = v19 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              v40 = 64;
              goto LABEL_67;
            case 2u:
              *(_WORD *)(a1 + 88) |= 0x100u;
              v22 = *v3;
              v23 = *(_QWORD *)(a2 + v22);
              if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v23);
                *(_QWORD *)(a2 + v22) = v23 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              v40 = 72;
              goto LABEL_67;
            case 3u:
              *(_WORD *)(a1 + 88) |= 0x10u;
              v24 = *v3;
              v25 = *(_QWORD *)(a2 + v24);
              if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v25);
                *(_QWORD *)(a2 + v24) = v25 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              v40 = 40;
              goto LABEL_67;
            case 4u:
              *(_WORD *)(a1 + 88) |= 0x20u;
              v26 = *v3;
              v27 = *(_QWORD *)(a2 + v26);
              if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v27);
                *(_QWORD *)(a2 + v26) = v27 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              v40 = 48;
              goto LABEL_67;
            case 5u:
              *(_WORD *)(a1 + 88) |= 4u;
              v28 = *v3;
              v29 = *(_QWORD *)(a2 + v28);
              if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v29);
                *(_QWORD *)(a2 + v28) = v29 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              v40 = 24;
              goto LABEL_67;
            case 6u:
              *(_WORD *)(a1 + 88) |= 8u;
              v30 = *v3;
              v31 = *(_QWORD *)(a2 + v30);
              if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v31);
                *(_QWORD *)(a2 + v30) = v31 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              v40 = 32;
              goto LABEL_67;
            case 7u:
              PBReaderReadString();
              v32 = objc_claimAutoreleasedReturnValue();
              v33 = *(void **)(a1 + 80);
              *(_QWORD *)(a1 + 80) = v32;

              goto LABEL_68;
            case 8u:
              *(_WORD *)(a1 + 88) |= 2u;
              v34 = *v3;
              v35 = *(_QWORD *)(a2 + v34);
              if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v35);
                *(_QWORD *)(a2 + v34) = v35 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              v40 = 16;
              goto LABEL_67;
            case 9u:
              *(_WORD *)(a1 + 88) |= 1u;
              v38 = *v3;
              v39 = *(_QWORD *)(a2 + v38);
              if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v39);
                *(_QWORD *)(a2 + v38) = v39 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              v40 = 8;
              goto LABEL_67;
            case 0xAu:
              *(_WORD *)(a1 + 88) |= 0x40u;
              v36 = *v3;
              v37 = *(_QWORD *)(a2 + v36);
              if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(_QWORD *)(a2 + *v4))
              {
                v20 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v37);
                *(_QWORD *)(a2 + v36) = v37 + 8;
              }
              else
              {
                *(_BYTE *)(a2 + *v5) = 1;
                v20 = 0;
              }
              v40 = 56;
LABEL_67:
              *(_QWORD *)(a1 + v40) = v20;
              goto LABEL_68;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_68:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id MXModalityxOptions()
{
  if (MXModalityxOptions_once != -1)
    dispatch_once(&MXModalityxOptions_once, &__block_literal_global_2);
  return (id)MXModalityxOptions_sOptions;
}

uint64_t MXRequestMitigatedReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  uint64_t v17;
  void *v18;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v19 = 0;
        v20 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 24) |= 1u;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
            break;
          v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0)
            goto LABEL_31;
          v19 += 7;
          v14 = v20++ >= 9;
          if (v14)
          {
            LODWORD(v21) = 0;
            goto LABEL_33;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_33:
        *(_DWORD *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 16);
        *(_QWORD *)(a1 + 16) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXChoiceAlignmentReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  int v16;
  uint64_t result;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  MXRepeatedItnAlignment *v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      v16 = v10 & 7;
      if (v15 || v16 == 4)
        break;
      if ((v10 >> 3) == 2)
      {
        v25 = objc_alloc_init(MXRepeatedItnAlignment);
        objc_msgSend(a1, "addPreItnTokenToPostItnCharAlignments:", v25);
        if (!PBReaderPlaceMark() || (MXRepeatedItnAlignmentReadFrom(v25, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else if ((v10 >> 3) == 1)
      {
        if (v16 == 2)
        {
          result = PBReaderPlaceMark();
          if (!(_DWORD)result)
            return result;
          while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4) && !*(_BYTE *)(a2 + *v5))
          {
            v19 = 0;
            v20 = 0;
            v21 = 0;
            while (1)
            {
              v22 = *v3;
              v23 = *(_QWORD *)(a2 + v22);
              if (v23 == -1 || v23 >= *(_QWORD *)(a2 + *v4))
                break;
              v24 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
              *(_QWORD *)(a2 + v22) = v23 + 1;
              v21 |= (unint64_t)(v24 & 0x7F) << v19;
              if (v24 < 0)
              {
                v19 += 7;
                v14 = v20++ >= 9;
                if (!v14)
                  continue;
              }
              goto LABEL_32;
            }
            *(_BYTE *)(a2 + *v5) = 1;
LABEL_32:
            PBRepeatedInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          v26 = 0;
          v27 = 0;
          v28 = 0;
          while (1)
          {
            v29 = *v3;
            v30 = *(_QWORD *)(a2 + v29);
            if (v30 == -1 || v30 >= *(_QWORD *)(a2 + *v4))
              break;
            v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v30);
            *(_QWORD *)(a2 + v29) = v30 + 1;
            v28 |= (unint64_t)(v31 & 0x7F) << v26;
            if (v31 < 0)
            {
              v26 += 7;
              v14 = v27++ >= 9;
              if (!v14)
                continue;
            }
            goto LABEL_47;
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_47:
          PBRepeatedInt32Add();
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        return 0;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXRecognitionPhraseTokensReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  MXRecognitionToken *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(MXRecognitionToken);
        objc_msgSend(a1, "addTokens:", v17);
        if (!PBReaderPlaceMark() || (MXRecognitionTokenReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXRequestCompleteReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  void *v18;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = *(void **)(a1 + 8);
        *(_QWORD *)(a1 + 8) = v17;

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL MXSpeechProfileBuildRequestReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  MXSpeechProfileSourceData *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 40;
        goto LABEL_29;
      case 2u:
        v19 = objc_alloc_init(MXSpeechProfileSourceData);
        objc_storeStrong((id *)(a1 + 48), v19);
        if (PBReaderPlaceMark() && (MXSpeechProfileSourceDataReadFrom(v19, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_30:

LABEL_31:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 3u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 24;
        goto LABEL_29;
      case 4u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 32;
        goto LABEL_29;
      case 5u:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
        goto LABEL_29;
      case 6u:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_29:
        v19 = *(MXSpeechProfileSourceData **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;
        goto LABEL_30;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_31;
    }
  }
}

uint64_t MXServerBoundFrameReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t result;
  MXSessionMetadata *v24;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 0u:
        v17 = 0;
        do
        {
          v18 = *v3;
          v19 = *(_QWORD *)(a2 + v18);
          if (v19 == -1 || v19 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
            goto LABEL_58;
          }
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)(a2 + *v7) + v19);
          *(_QWORD *)(a2 + v18) = v20;
          if ((v21 & 0x80000000) == 0)
            break;
        }
        while (v17++ <= 8);
        goto LABEL_58;
      case 1u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 1;
        v24 = objc_alloc_init(MXSessionMetadata);
        objc_storeStrong((id *)(a1 + 48), v24);
        if (!PBReaderPlaceMark() || (MXSessionMetadataReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_62;
        goto LABEL_57;
      case 2u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 2;
        v24 = objc_alloc_init(MXBeginRequest);
        objc_storeStrong((id *)(a1 + 24), v24);
        if (!PBReaderPlaceMark() || (MXBeginRequestReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_62;
        goto LABEL_57;
      case 3u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 3;
        v24 = objc_alloc_init(MXAudioFrame);
        objc_storeStrong((id *)(a1 + 8), v24);
        if (!PBReaderPlaceMark() || (MXAudioFrameReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_62;
        goto LABEL_57;
      case 4u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 4;
        v24 = objc_alloc_init(MXSpeechProfile);
        objc_storeStrong((id *)(a1 + 56), v24);
        if (!PBReaderPlaceMark() || (MXSpeechProfileReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_62;
        goto LABEL_57;
      case 5u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 5;
        v24 = objc_alloc_init(MXCancelRequest);
        objc_storeStrong((id *)(a1 + 32), v24);
        if (!PBReaderPlaceMark() || (MXCancelRequestReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_62;
        goto LABEL_57;
      case 6u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 6;
        v24 = objc_alloc_init(MXBeginDictation);
        objc_storeStrong((id *)(a1 + 16), v24);
        if (!PBReaderPlaceMark() || (MXBeginDictationReadFrom((uint64_t)v24, a2) & 1) == 0)
          goto LABEL_62;
        goto LABEL_57;
      case 7u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 7;
        v24 = objc_alloc_init(MXSpeechProfileBuildRequest);
        objc_storeStrong((id *)(a1 + 64), v24);
        if (!PBReaderPlaceMark() || !MXSpeechProfileBuildRequestReadFrom((uint64_t)v24, a2))
          goto LABEL_62;
        goto LABEL_57;
      case 8u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 8;
        v24 = objc_alloc_init(MXStreamingSpeechProfileBegin);
        objc_storeStrong((id *)(a1 + 88), v24);
        if (!PBReaderPlaceMark() || !MXStreamingSpeechProfileBeginReadFrom((uint64_t)v24, a2))
          goto LABEL_62;
        goto LABEL_57;
      case 9u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 9;
        v24 = objc_alloc_init(MXStreamingSpeechProfileAddData);
        objc_storeStrong((id *)(a1 + 80), v24);
        if (!PBReaderPlaceMark() || !MXStreamingSpeechProfileAddDataReadFrom((uint64_t)v24, a2))
          goto LABEL_62;
        goto LABEL_57;
      case 0xAu:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 96) |= 1u;
        *(_DWORD *)(a1 + 40) = 10;
        v24 = objc_alloc_init(MXStreamingSpeechProfileCommit);
        objc_storeStrong((id *)(a1 + 72), v24);
        if (PBReaderPlaceMark() && (MXStreamingSpeechProfileCommitReadFrom((uint64_t)v24, a2) & 1) != 0)
        {
LABEL_57:
          PBReaderRecallMark();

LABEL_58:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_62:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_58;
    }
  }
}

uint64_t MXASRResultReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t result;
  uint64_t v24;
  void *v25;
  MXRecognitionCandidate *v26;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 0u:
        v17 = 0;
        do
        {
          v18 = *v3;
          v19 = *(_QWORD *)(a2 + v18);
          if (v19 == -1 || v19 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
            goto LABEL_36;
          }
          v20 = v19 + 1;
          v21 = *(char *)(*(_QWORD *)(a2 + *v7) + v19);
          *(_QWORD *)(a2 + v18) = v20;
          if ((v21 & 0x80000000) == 0)
            break;
        }
        while (v17++ <= 8);
        goto LABEL_36;
      case 1u:
        PBReaderReadString();
        v24 = objc_claimAutoreleasedReturnValue();
        v25 = *(void **)(a1 + 32);
        *(_QWORD *)(a1 + 32) = v24;

        goto LABEL_36;
      case 2u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 40) |= 1u;
        *(_DWORD *)(a1 + 16) = 1;
        v26 = objc_alloc_init(MXRecognitionCandidate);
        objc_storeStrong((id *)(a1 + 24), v26);
        if (!PBReaderPlaceMark() || (MXRecognitionCandidateReadFrom((uint64_t)v26, a2) & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      case 3u:
        objc_msgSend((id)a1, "clearOneofValuesForPayload");
        *(_BYTE *)(a1 + 40) |= 1u;
        *(_DWORD *)(a1 + 16) = 2;
        v26 = objc_alloc_init(MXFinalSpeechRecognitionResponse);
        objc_storeStrong((id *)(a1 + 8), v26);
        if (PBReaderPlaceMark() && (MXFinalSpeechRecognitionResponseReadFrom((uint64_t)v26, a2) & 1) != 0)
        {
LABEL_34:
          PBReaderRecallMark();

LABEL_36:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_38:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_36;
    }
  }
}

BOOL MXStreamingSpeechProfileAddDataReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  MXSpeechProfileSourceData *v19;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 24;
        goto LABEL_27;
      case 2u:
        v19 = objc_alloc_init(MXSpeechProfileSourceData);
        objc_storeStrong((id *)(a1 + 32), v19);
        if (PBReaderPlaceMark() && (MXSpeechProfileSourceDataReadFrom(v19, a2) & 1) != 0)
        {
          PBReaderRecallMark();
LABEL_28:

LABEL_29:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 3u:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
        goto LABEL_27;
      case 4u:
        PBReaderReadData();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 16;
LABEL_27:
        v19 = *(MXSpeechProfileSourceData **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;
        goto LABEL_28;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_29;
    }
  }
}

uint64_t MXSetAlternateRecognitionSausageReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  MXRecognitionPhraseTokensAlternatives *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(MXRecognitionPhraseTokensAlternatives);
        objc_msgSend(a1, "addPositionalTokPhraseAlt:", v17);
        if (!PBReaderPlaceMark() || (MXRecognitionPhraseTokensAlternativesReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MXRecognitionSausageReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  MXRecognitionPhraseTokensAlternatives *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(MXRecognitionPhraseTokensAlternatives);
        objc_msgSend(a1, "addPositionalTokPhraseAlt:", v17);
        if (!PBReaderPlaceMark() || (MXRecognitionPhraseTokensAlternativesReadFrom(v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id MXEnumsOptions()
{
  if (MXEnumsOptions_once != -1)
    dispatch_once(&MXEnumsOptions_once, &__block_literal_global_3);
  return (id)MXEnumsOptions_sOptions;
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance ModalityXUserInterfaceIdiom(char *a1, char *a2)
{
  return specialized == infix<A>(_:_:)(*a1, *a2);
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXUserInterfaceIdiom()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
}

void specialized RawRepresentable<>.hashValue.getter(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = Hasher.init(_seed:)();
  a2(v3);
  OUTLINED_FUNCTION_3();
  Hasher._finalize()();
  OUTLINED_FUNCTION_5();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXUserInterfaceIdiom()
{
  lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXUserInterfaceIdiom(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
}

void specialized RawRepresentable<>._rawHashValue(seed:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = Hasher.init(_seed:)();
  a3(v4);
  OUTLINED_FUNCTION_3();
  Hasher._finalize()();
  OUTLINED_FUNCTION_5();
}

void *static ModalityXUserInterfaceIdiom.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXUserInterfaceIdiom.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXUserInterfaceIdiom(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXUserInterfaceIdiom.allCases.getter;
}

ModalityXObjects::ModalityXFieldKeyboardType_optional __swiftcall ModalityXFieldKeyboardType.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  ModalityXObjects::ModalityXFieldKeyboardType_optional result;

  OUTLINED_FUNCTION_2(v1);
  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXFieldKeyboardType()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXFieldKeyboardType()
{
  lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXFieldKeyboardType(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
}

ModalityXObjects::ModalityXFieldKeyboardType_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXFieldKeyboardType(Swift::Int *a1)
{
  return ModalityXFieldKeyboardType.init(rawValue:)(*a1);
}

void *static ModalityXFieldKeyboardType.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXFieldKeyboardType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXFieldKeyboardType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXFieldKeyboardType.allCases.getter;
}

ModalityXObjects::ModalityXFieldKeyboardReturnKey_optional __swiftcall ModalityXFieldKeyboardReturnKey.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  ModalityXObjects::ModalityXFieldKeyboardReturnKey_optional result;

  OUTLINED_FUNCTION_2(v1);
  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXFieldKeyboardReturnKey()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXFieldKeyboardReturnKey()
{
  lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXFieldKeyboardReturnKey(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
}

ModalityXObjects::ModalityXFieldKeyboardReturnKey_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXFieldKeyboardReturnKey(Swift::Int *a1)
{
  return ModalityXFieldKeyboardReturnKey.init(rawValue:)(*a1);
}

void *static ModalityXFieldKeyboardReturnKey.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXFieldKeyboardReturnKey.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXFieldKeyboardReturnKey(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXFieldKeyboardReturnKey.allCases.getter;
}

ModalityXObjects::ModalityXAudioSource_optional __swiftcall ModalityXAudioSource.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  ModalityXObjects::ModalityXAudioSource_optional result;

  OUTLINED_FUNCTION_2(v1);
  return result;
}

uint64_t ModalityXAudioSource.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXAudioSource()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioSource()
{
  lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXAudioSource(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource);
}

ModalityXObjects::ModalityXAudioSource_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXAudioSource(Swift::Int *a1)
{
  return ModalityXAudioSource.init(rawValue:)(*a1);
}

uint64_t protocol witness for RawRepresentable.rawValue.getter in conformance ModalityXAudioSource@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ModalityXAudioSource.rawValue.getter();
  *a1 = result;
  return result;
}

void *static ModalityXAudioSource.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXAudioSource.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXAudioSource(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXAudioSource.allCases.getter;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXCodec()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXCodec()
{
  lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXCodec(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec);
}

void *static ModalityXCodec.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXCodec.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXCodec(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXCodec.allCases.getter;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXMitigationType()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXMitigationType()
{
  lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXMitigationType(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType);
}

void *static ModalityXMitigationType.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXMitigationType.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXMitigationType(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXMitigationType.allCases.getter;
}

ModalityXObjects::ModalityXInputOrigin_optional __swiftcall ModalityXInputOrigin.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  ModalityXObjects::ModalityXInputOrigin_optional result;

  OUTLINED_FUNCTION_2(v1);
  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXInputOrigin()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXInputOrigin()
{
  lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXInputOrigin(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
}

ModalityXObjects::ModalityXInputOrigin_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXInputOrigin(Swift::Int *a1)
{
  return ModalityXInputOrigin.init(rawValue:)(*a1);
}

void *static ModalityXInputOrigin.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXInputOrigin.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXInputOrigin(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXInputOrigin.allCases.getter;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXCancellationReason()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXCancellationReason()
{
  lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXCancellationReason(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
}

void *static ModalityXCancellationReason.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXCancellationReason.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXCancellationReason(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXCancellationReason.allCases.getter;
}

ModalityXObjects::ModalityXErrorSource_optional __swiftcall ModalityXErrorSource.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  ModalityXObjects::ModalityXErrorSource_optional result;

  OUTLINED_FUNCTION_2(v1);
  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXErrorSource()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXErrorSource()
{
  lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXErrorSource(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource);
}

ModalityXObjects::ModalityXErrorSource_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXErrorSource(Swift::Int *a1)
{
  return ModalityXErrorSource.init(rawValue:)(*a1);
}

void *static ModalityXErrorSource.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXErrorSource.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXErrorSource(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXErrorSource.allCases.getter;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXFingerprintDetectionResult()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXFingerprintDetectionResult()
{
  lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXFingerprintDetectionResult(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
}

void *static ModalityXFingerprintDetectionResult.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXFingerprintDetectionResult.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXFingerprintDetectionResult(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXFingerprintDetectionResult.allCases.getter;
}

ModalityXObjects::ModalityXWatermarkDetectionResult_optional __swiftcall ModalityXWatermarkDetectionResult.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  ModalityXObjects::ModalityXWatermarkDetectionResult_optional result;

  OUTLINED_FUNCTION_2(v1);
  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXWatermarkDetectionResult()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXWatermarkDetectionResult()
{
  lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXWatermarkDetectionResult(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
}

ModalityXObjects::ModalityXWatermarkDetectionResult_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXWatermarkDetectionResult(Swift::Int *a1)
{
  return ModalityXWatermarkDetectionResult.init(rawValue:)(*a1);
}

void *static ModalityXWatermarkDetectionResult.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXWatermarkDetectionResult.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXWatermarkDetectionResult(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXWatermarkDetectionResult.allCases.getter;
}

ModalityXObjects::ModalityXLanguageProfileRecreateCodes_optional __swiftcall ModalityXLanguageProfileRecreateCodes.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  ModalityXObjects::ModalityXLanguageProfileRecreateCodes_optional result;

  OUTLINED_FUNCTION_2(v1);
  return result;
}

void protocol witness for Hashable.hashValue.getter in conformance ModalityXLanguageProfileRecreateCodes()
{
  unsigned __int8 *v0;

  specialized RawRepresentable<>.hashValue.getter(*v0, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXLanguageProfileRecreateCodes()
{
  lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes();
  return Enum.hash(into:)();
}

void protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXLanguageProfileRecreateCodes(uint64_t a1)
{
  unsigned __int8 *v1;

  specialized RawRepresentable<>._rawHashValue(seed:)(a1, *v1, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
}

ModalityXObjects::ModalityXLanguageProfileRecreateCodes_optional protocol witness for RawRepresentable.init(rawValue:) in conformance ModalityXLanguageProfileRecreateCodes(Swift::Int *a1)
{
  return ModalityXLanguageProfileRecreateCodes.init(rawValue:)(*a1);
}

void *static ModalityXLanguageProfileRecreateCodes.allCases.getter()
{
  return &outlined read-only object #0 of static ModalityXLanguageProfileRecreateCodes.allCases.getter;
}

void protocol witness for static CaseIterable.allCases.getter in conformance ModalityXLanguageProfileRecreateCodes(_QWORD *a1@<X8>)
{
  *a1 = &outlined read-only object #0 of static ModalityXLanguageProfileRecreateCodes.allCases.getter;
}

uint64_t one-time initialization function for _protobuf_nameMap()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXUserInterfaceIdiom._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXUserInterfaceIdiom._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059DE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "USER_INTERFACE_IDIOM_UNKNOWN";
  *(_QWORD *)(v7 + 8) = 28;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "PHONE";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "PAD";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "CAR";
  *((_QWORD *)v15 + 1) = 3;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "ZEUS";
  *((_QWORD *)v17 + 1) = 4;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "WATCH";
  *((_QWORD *)v19 + 1) = 5;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "HORSEMAN";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "CAMEO";
  *((_QWORD *)v23 + 1) = 5;
  v23[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  uint64_t v40;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXFieldKeyboardType._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXFieldKeyboardType._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_242059DF0;
  v5 = v40 + v4;
  v6 = v40 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v40 + v4) = 0;
  *(_QWORD *)v6 = "KeyboardTypeDefault";
  *(_QWORD *)(v6 + 8) = 19;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = type metadata accessor for _NameMap.NameDescription();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "ASCIICapable";
  *(_QWORD *)(v10 + 8) = 12;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "Alphabet";
  *((_QWORD *)v12 + 1) = 8;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "NumbersAndPunctuation";
  *((_QWORD *)v14 + 1) = 21;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "NumberPad";
  *((_QWORD *)v16 + 1) = 9;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "DecimalPad";
  *((_QWORD *)v18 + 1) = 10;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "URL";
  *((_QWORD *)v20 + 1) = 3;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "EmailAddress";
  *((_QWORD *)v22 + 1) = 12;
  v22[16] = 2;
  v9();
  v23 = (_QWORD *)(v5 + 8 * v3);
  v24 = (char *)v23 + *(int *)(v1 + 48);
  *v23 = 8;
  *(_QWORD *)v24 = "PhonePad";
  *((_QWORD *)v24 + 1) = 8;
  v24[16] = 2;
  v9();
  v25 = (_QWORD *)(v5 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 9;
  *(_QWORD *)v26 = "NamePhonePad";
  *((_QWORD *)v26 + 1) = 12;
  v26[16] = 2;
  v9();
  v27 = (_QWORD *)(v5 + 10 * v3);
  v28 = (char *)v27 + *(int *)(v1 + 48);
  *v27 = 10;
  *(_QWORD *)v28 = "Twitter";
  *((_QWORD *)v28 + 1) = 7;
  v28[16] = 2;
  v9();
  v29 = (_QWORD *)(v5 + 11 * v3);
  v30 = (char *)v29 + *(int *)(v1 + 48);
  *v29 = 11;
  *(_QWORD *)v30 = "WebSearch";
  *((_QWORD *)v30 + 1) = 9;
  v30[16] = 2;
  v9();
  v31 = (_QWORD *)(v5 + 12 * v3);
  v32 = (char *)v31 + *(int *)(v1 + 48);
  *v31 = 12;
  *(_QWORD *)v32 = "Assistant";
  *((_QWORD *)v32 + 1) = 9;
  v32[16] = 2;
  v9();
  v33 = (_QWORD *)(v5 + 13 * v3);
  v34 = (char *)v33 + *(int *)(v1 + 48);
  *v33 = 13;
  *(_QWORD *)v34 = "ASCIICapableNumberPad";
  *((_QWORD *)v34 + 1) = 21;
  v34[16] = 2;
  v9();
  v35 = (_QWORD *)(v5 + 14 * v3);
  v36 = (char *)v35 + *(int *)(v1 + 48);
  *v35 = 14;
  *(_QWORD *)v36 = "NonEmoji";
  *((_QWORD *)v36 + 1) = 8;
  v36[16] = 2;
  v9();
  v37 = (_QWORD *)(v5 + 15 * v3);
  v38 = (char *)v37 + *(int *)(v1 + 48);
  *v37 = 15;
  *(_QWORD *)v38 = "Messages";
  *((_QWORD *)v38 + 1) = 8;
  v38[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  uint64_t v31;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXFieldKeyboardReturnKey._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXFieldKeyboardReturnKey._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_242059E00;
  v5 = v31 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v31 + v4) = 0;
  *(_QWORD *)v5 = "KeyboardReturnKeyDefault";
  *(_QWORD *)(v5 + 8) = 24;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = type metadata accessor for _NameMap.NameDescription();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v31 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v31 + v4 + v3) = 1;
  *(_QWORD *)v9 = "Go";
  *(_QWORD *)(v9 + 8) = 2;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v31 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 2;
  *(_QWORD *)v11 = "Google";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v31 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "Join";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v31 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "Next";
  *((_QWORD *)v15 + 1) = 4;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v31 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "Route";
  *((_QWORD *)v17 + 1) = 5;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v31 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "Search";
  *((_QWORD *)v19 + 1) = 6;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v31 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "Send";
  *((_QWORD *)v21 + 1) = 4;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v31 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "Yahoo";
  *((_QWORD *)v23 + 1) = 5;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v31 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "Done";
  *((_QWORD *)v25 + 1) = 4;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v31 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "EmergencyCall";
  *((_QWORD *)v27 + 1) = 13;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v31 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "Continue";
  *((_QWORD *)v29 + 1) = 8;
  v29[16] = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioSource._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioSource._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059DE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "BuiltInMic";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "LineIn";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "WiredHeadsetMic";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "BluetoothHandsFreeDeviceSource";
  *((_QWORD *)v15 + 1) = 30;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "UsbAudioSource";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "CarAudioSource";
  *((_QWORD *)v19 + 1) = 14;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "BluetoothDoAPDevice";
  *((_QWORD *)v21 + 1) = 19;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "CarJarvisDevice";
  *((_QWORD *)v23 + 1) = 15;
  v23[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXCodec._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXCodec._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059DE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "CODEC_UNDEF";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "SPXWB";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "SPXNB";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "PCM_8K";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "PCM_16K";
  *((_QWORD *)v17 + 1) = 7;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "OPUS_8K";
  *((_QWORD *)v19 + 1) = 7;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "OPUS_16K";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "ULAW_8K";
  *((_QWORD *)v23 + 1) = 7;
  v23[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXMitigationType._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXMitigationType._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059DE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "UNKNOWN_MITIGATION_TYPE";
  *(_QWORD *)(v7 + 8) = 23;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "ACOUSTIC_ID_DETECTED";
  *(_QWORD *)(v11 + 8) = 20;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "WATERMARK_DETECTED";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "FINGERPRINT_DETECTED";
  *((_QWORD *)v15 + 1) = 20;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "FALSE_TRIGGER_DETECTED";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "LENIENT_PROMPT_SILENCE";
  *((_QWORD *)v19 + 1) = 22;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "NON_PROMPT_SILENCE";
  *((_QWORD *)v21 + 1) = 18;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "NON_VOX_SILENCE";
  *((_QWORD *)v23 + 1) = 15;
  v23[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  _QWORD *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  _QWORD *v42;
  char *v43;
  uint64_t v45;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXInputOrigin._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXInputOrigin._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_242059E10;
  v5 = v45 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v45 + v4) = 0;
  *(_QWORD *)v5 = "UndefinedInputOrigin";
  *(_QWORD *)(v5 + 8) = 20;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = type metadata accessor for _NameMap.NameDescription();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v45 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v45 + v4 + v3) = 1;
  *(_QWORD *)v9 = "HomeButton";
  *(_QWORD *)(v9 + 8) = 10;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v45 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 2;
  *(_QWORD *)v11 = "RemoteButton";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v45 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "RemoteAppButton";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v45 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "AssistantSpeechButton";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v45 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "AssistantTextInput";
  *((_QWORD *)v17 + 1) = 18;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v45 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "PriorRequest";
  *((_QWORD *)v19 + 1) = 12;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v45 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "VoiceTrigger";
  *((_QWORD *)v21 + 1) = 12;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v45 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "ServerGenerated";
  *((_QWORD *)v23 + 1) = 15;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v45 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "MotionGesture";
  *((_QWORD *)v25 + 1) = 13;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v45 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "RaiseToSpeak";
  *((_QWORD *)v27 + 1) = 12;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v45 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "ClientGenerated";
  *((_QWORD *)v29 + 1) = 15;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v45 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "TapToRefresh";
  *((_QWORD *)v31 + 1) = 12;
  v31[16] = 2;
  v8();
  v32 = (_QWORD *)(v45 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "BackgroundRefresh";
  *((_QWORD *)v33 + 1) = 17;
  v33[16] = 2;
  v8();
  v34 = (_QWORD *)(v45 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "BluetoothVoiceTrigger";
  *((_QWORD *)v35 + 1) = 21;
  v35[16] = 2;
  v8();
  v36 = (_QWORD *)(v45 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "BluetoothDoubleTap";
  *((_QWORD *)v37 + 1) = 18;
  v37[16] = 2;
  v8();
  v38 = (_QWORD *)(v45 + v4 + 16 * v3);
  v39 = (char *)v38 + *(int *)(v1 + 48);
  *v38 = 16;
  *(_QWORD *)v39 = "TriggerlessFollowup";
  *((_QWORD *)v39 + 1) = 19;
  v39[16] = 2;
  v8();
  v40 = (_QWORD *)(v45 + v4 + 17 * v3);
  v41 = (char *)v40 + *(int *)(v1 + 48);
  *v40 = 17;
  *(_QWORD *)v41 = "DialogButtonTap";
  *((_QWORD *)v41 + 1) = 15;
  v41[16] = 2;
  v8();
  v42 = (_QWORD *)(v45 + v4 + 18 * v3);
  v43 = (char *)v42 + *(int *)(v1 + 48);
  *v42 = 18;
  *(_QWORD *)v43 = "MagusFollowup";
  *((_QWORD *)v43 + 1) = 13;
  v43[16] = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXCancellationReason._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXCancellationReason._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E20;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "UNKNOWN_CANCELLATION";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "FALSE_VOICE_TRIGGER";
  *((_QWORD *)v11 + 1) = 19;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "USER_CANCELLED";
  *((_QWORD *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXErrorSource._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXErrorSource._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E20;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "UNKNOWN";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "QSS";
  *((_QWORD *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "MODALITY_X";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXFingerprintDetectionResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXFingerprintDetectionResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "FP_UNKNOWN_ENUM_VALUE";
  *(_QWORD *)(v7 + 8) = 21;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "FP_NOT_CHECKED";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "FP_NOT_DETECTED";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "FP_DETECTED";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXWatermarkDetectionResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXWatermarkDetectionResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "WM_UNKNOWN_ENUM_VALUE";
  *(_QWORD *)(v7 + 8) = 21;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "WM_NOT_CHECKED";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "WM_NOT_DETECTED";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "WM_DETECTED";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXLanguageProfileRecreateCodes._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXLanguageProfileRecreateCodes._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E40;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "LANGUAGE_PROFILE_RECREATE_CODES_UNDEF";
  *(_QWORD *)(v7 + 8) = 37;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "LANGUAGE_PROFILE_OK";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "LANGUAGE_PROFILE_REFRESH";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "LANGUAGE_PROFILE_INCOMPATIBLE";
  *((_QWORD *)v15 + 1) = 29;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "LANGUAGE_PROFILE_CORRUPT";
  *((_QWORD *)v17 + 1) = 24;
  v17[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXServerBoundFrame._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXServerBoundFrame._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B160;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "session_metadata";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "begin_request";
  *(_QWORD *)(v11 + 8) = 13;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "audio_frame";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "speech_profile";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "cancel_request";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "begin_dictation";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "speech_profile_request";
  *((_QWORD *)v21 + 1) = 22;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "streaming_speech_profile_request";
  *((_QWORD *)v23 + 1) = 32;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "streaming_speech_profile_data";
  *((_QWORD *)v25 + 1) = 29;
  v25[16] = 2;
  v10();
  v26 = (_QWORD *)(v6 + 9 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "streaming_speech_profile_commit";
  *((_QWORD *)v27 + 1) = 31;
  v27[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXClientBoundFrame._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXClientBoundFrame._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B170;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "request_complete";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "processing_error";
  *(_QWORD *)(v11 + 8) = 16;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "asr_result";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "speech_profile_rebuild_needed";
  *((_QWORD *)v15 + 1) = 29;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "request_mitigated";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "speech_profile_response";
  *((_QWORD *)v19 + 1) = 23;
  v19[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSessionMetadata._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSessionMetadata._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "device_info";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 10;
  *(_QWORD *)v11 = "data_sharing_opt_in_status";
  *(_QWORD *)(v11 + 8) = 26;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 11;
  *(_QWORD *)v13 = "user_interface_idiom";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 12;
  *(_QWORD *)v15 = "language";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSpeechProfile._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSpeechProfile._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "more_data_follows";
  *(_QWORD *)(v7 + 8) = 17;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "language_profile";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXBeginRequest._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXBeginRequest._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B190;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "request_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "input_origin";
  *(_QWORD *)(v11 + 8) = 12;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 20;
  *(_QWORD *)v13 = "audio_metadata";
  *((_QWORD *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 21;
  *(_QWORD *)v15 = "enable_partial_results";
  *((_QWORD *)v15 + 1) = 22;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 22;
  *(_QWORD *)v17 = "is_prompted_dictation";
  *((_QWORD *)v17 + 1) = 21;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 23;
  *(_QWORD *)v19 = "is_prompted_confirmation";
  *((_QWORD *)v19 + 1) = 24;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 24;
  *(_QWORD *)v21 = "foreground_app_id";
  *((_QWORD *)v21 + 1) = 17;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 25;
  *(_QWORD *)v23 = "is_auto_punctuation_enabled";
  *((_QWORD *)v23 + 1) = 27;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 26;
  *(_QWORD *)v25 = "inline_lme_items";
  *((_QWORD *)v25 + 1) = 16;
  v25[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  uint64_t v52;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXBeginDictation._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXBeginDictation._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_24205B1A0;
  v5 = v52 + v4;
  v6 = v52 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v52 + v4) = 1;
  *(_QWORD *)v6 = "audio_metadata";
  *(_QWORD *)(v6 + 8) = 14;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C328];
  v8 = type metadata accessor for _NameMap.NameDescription();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "request_id";
  *(_QWORD *)(v10 + 8) = 10;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "field_id";
  *((_QWORD *)v12 + 1) = 8;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "field_label";
  *((_QWORD *)v14 + 1) = 11;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "application_name";
  *((_QWORD *)v16 + 1) = 16;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "application_version";
  *((_QWORD *)v18 + 1) = 19;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "keyboard_type";
  *((_QWORD *)v20 + 1) = 13;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "keyboard_return_key";
  *((_QWORD *)v22 + 1) = 19;
  v22[16] = 2;
  v9();
  v23 = (_QWORD *)(v5 + 8 * v3);
  v24 = (char *)v23 + *(int *)(v1 + 48);
  *v23 = 9;
  *(_QWORD *)v24 = "selected_text";
  *((_QWORD *)v24 + 1) = 13;
  v24[16] = 2;
  v9();
  v25 = (_QWORD *)(v5 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "prefix_text";
  *((_QWORD *)v26 + 1) = 11;
  v26[16] = 2;
  v9();
  v27 = (_QWORD *)(v5 + 10 * v3);
  v28 = (char *)v27 + *(int *)(v1 + 48);
  *v27 = 11;
  *(_QWORD *)v28 = "postfix_text";
  *((_QWORD *)v28 + 1) = 12;
  v28[16] = 2;
  v9();
  v29 = (_QWORD *)(v5 + 11 * v3);
  v30 = (char *)v29 + *(int *)(v1 + 48);
  *v29 = 12;
  *(_QWORD *)v30 = "inline_lme_items";
  *((_QWORD *)v30 + 1) = 16;
  v30[16] = 2;
  v9();
  v31 = (_QWORD *)(v5 + 12 * v3);
  v32 = (char *)v31 + *(int *)(v1 + 48);
  *v31 = 13;
  *(_QWORD *)v32 = "languages";
  *((_QWORD *)v32 + 1) = 9;
  v32[16] = 2;
  v9();
  v33 = (_QWORD *)(v5 + 13 * v3);
  v34 = (char *)v33 + *(int *)(v1 + 48);
  *v33 = 14;
  *(_QWORD *)v34 = "region";
  *((_QWORD *)v34 + 1) = 6;
  v34[16] = 2;
  v9();
  v35 = (_QWORD *)(v5 + 14 * v3);
  v36 = (char *)v35 + *(int *)(v1 + 48);
  *v35 = 15;
  *(_QWORD *)v36 = "activation_token";
  *((_QWORD *)v36 + 1) = 16;
  v36[16] = 2;
  v9();
  v37 = (_QWORD *)(v5 + 15 * v3);
  v38 = (char *)v37 + *(int *)(v1 + 48);
  *v37 = 16;
  *(_QWORD *)v38 = "censor_speech";
  *((_QWORD *)v38 + 1) = 13;
  v38[16] = 2;
  v9();
  v39 = (_QWORD *)(v5 + 16 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 17;
  *(_QWORD *)v40 = "speaker_independent_recognition";
  *((_QWORD *)v40 + 1) = 31;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v5 + 17 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "save_request_audio";
  *((_QWORD *)v42 + 1) = 18;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v5 + 18 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 19;
  *(_QWORD *)v44 = "keyboard_identifier";
  *((_QWORD *)v44 + 1) = 19;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v5 + 19 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 20;
  *(_QWORD *)v46 = "enable_partial_results";
  *((_QWORD *)v46 + 1) = 22;
  v46[16] = 2;
  v9();
  v47 = (_QWORD *)(v5 + 20 * v3);
  v48 = (char *)v47 + *(int *)(v1 + 48);
  *v47 = 21;
  *(_QWORD *)v48 = "input_origin";
  *((_QWORD *)v48 + 1) = 12;
  v48[16] = 2;
  v9();
  v49 = (_QWORD *)(v5 + 21 * v3);
  v50 = (char *)v49 + *(int *)(v1 + 48);
  *v49 = 22;
  *(_QWORD *)v50 = "is_auto_punctuation_enabled";
  *((_QWORD *)v50 + 1) = 27;
  v50[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXCancelRequest._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXCancelRequest._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "request_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "reason";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioFrame._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioFrame._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E20;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "request_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "audio";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "last_frame";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXASRResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXASRResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E20;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "request_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "recognition_candidate";
  *((_QWORD *)v11 + 1) = 21;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "final_speech_recognition_response";
  *((_QWORD *)v13 + 1) = 33;
  v13[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXProcessingError._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXProcessingError._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "code";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "error_description";
  *(_QWORD *)(v11 + 8) = 17;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "error_source";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "request_id";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRequestMitigated._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRequestMitigated._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "request_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "mitigation_type";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSpeechProfileBuildRequest._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSpeechProfileBuildRequest._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B170;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "request_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "source_data";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "locale";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "phone_set_version";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "existing_language_profile";
  *((_QWORD *)v17 + 1) = 25;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "existing_pronunciation_cache";
  *((_QWORD *)v19 + 1) = 28;
  v19[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXStreamingSpeechProfileBegin._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXStreamingSpeechProfileBegin._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E20;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "request_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "locale";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "phone_set_version";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXStreamingSpeechProfileAddData._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXStreamingSpeechProfileAddData._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "request_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "source_data";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "existing_language_profile";
  *((_QWORD *)v13 + 1) = 25;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "existing_pronunciation_cache";
  *((_QWORD *)v15 + 1) = 28;
  v15[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSpeechProfileBuildResponse._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSpeechProfileBuildResponse._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E40;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "request_id";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "error";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "incomplete_profile";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 10;
  *(_QWORD *)v15 = "language_profile";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 11;
  *(_QWORD *)v17 = "pronunciation_cache";
  *((_QWORD *)v17 + 1) = 19;
  v17[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionToken._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionToken._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059DE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "token_text";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "start_milli_seconds";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "end_milli_seconds";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "silence_start_milli_seconds";
  *((_QWORD *)v15 + 1) = 27;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "confidence";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "add_space_after";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "phone_seq";
  *((_QWORD *)v21 + 1) = 9;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "ipa_phone_seq";
  *((_QWORD *)v23 + 1) = 13;
  v23[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionPhraseTokensAlternatives._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionPhraseTokensAlternatives._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "tok_phrases";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "has_unsuggested_alternatives";
  *((_QWORD *)v11 + 1) = 28;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionChoice._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionChoice._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "alternative_index";
  *(_QWORD *)(v7 + 8) = 17;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "confidence";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXChoiceAlignment._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXChoiceAlignment._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "post_itn_choice_indices";
  *(_QWORD *)(v7 + 8) = 23;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "pre_itn_token_to_post_itn_char_alignments";
  *((_QWORD *)v11 + 1) = 41;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B170;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "pre_itn";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "post_itn";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "pre_itn_nbest_choices";
  *((_QWORD *)v13 + 1) = 21;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "post_itn_nbest_choices";
  *((_QWORD *)v15 + 1) = 22;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "pre_itn_token_to_post_itn_char_alignment";
  *((_QWORD *)v17 + 1) = 40;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "choice_alignments";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXLatnnMitigatorResult._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXLatnnMitigatorResult._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "processed";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "version";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "threshold";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "score";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v36;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXRecognitionCandidate._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXRecognitionCandidate._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_24205D1F0;
  v5 = v36 + v4;
  v6 = v36 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v36 + v4) = 1;
  *(_QWORD *)v6 = "speech_id";
  *(_QWORD *)(v6 + 8) = 9;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C328];
  v8 = type metadata accessor for _NameMap.NameDescription();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "session_id";
  *(_QWORD *)(v10 + 8) = 10;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "return_code";
  *((_QWORD *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "return_str";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "recognition_result";
  *((_QWORD *)v16 + 1) = 18;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "result_id";
  *((_QWORD *)v18 + 1) = 9;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "snr";
  *((_QWORD *)v20 + 1) = 3;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "fingerprint_detection";
  *((_QWORD *)v22 + 1) = 21;
  v22[16] = 2;
  v9();
  v23 = (_QWORD *)(v5 + 8 * v3);
  v24 = (char *)v23 + *(int *)(v1 + 48);
  *v23 = 9;
  *(_QWORD *)v24 = "audio_analytics";
  *((_QWORD *)v24 + 1) = 15;
  v24[16] = 2;
  v9();
  v25 = (_QWORD *)(v5 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "watermark_detection";
  *((_QWORD *)v26 + 1) = 19;
  v26[16] = 2;
  v9();
  v27 = (_QWORD *)(v5 + 10 * v3);
  v28 = (char *)v27 + *(int *)(v1 + 48);
  *v27 = 11;
  *(_QWORD *)v28 = "watermark_peak_average";
  *((_QWORD *)v28 + 1) = 22;
  v28[16] = 2;
  v9();
  v29 = (_QWORD *)(v5 + 11 * v3);
  v30 = (char *)v29 + *(int *)(v1 + 48);
  *v29 = 12;
  *(_QWORD *)v30 = "language";
  *((_QWORD *)v30 + 1) = 8;
  v30[16] = 2;
  v9();
  v31 = (_QWORD *)(v5 + 12 * v3);
  v32 = (char *)v31 + *(int *)(v1 + 48);
  *v31 = 13;
  *(_QWORD *)v32 = "latnn_mitigator_result";
  *((_QWORD *)v32 + 1) = 22;
  v32[16] = 2;
  v9();
  v33 = (_QWORD *)(v5 + 13 * v3);
  v34 = (char *)v33 + *(int *)(v1 + 48);
  *v33 = 14;
  *(_QWORD *)v34 = "request_locale";
  *((_QWORD *)v34 + 1) = 14;
  v34[16] = 2;
  v9();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXItnAlignment._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXItnAlignment._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "first_pre_itn_token_index";
  *(_QWORD *)(v7 + 8) = 25;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "last_pre_itn_token_index";
  *(_QWORD *)(v11 + 8) = 24;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "first_post_itn_char_pos";
  *((_QWORD *)v13 + 1) = 23;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "last_post_itn_char_pos";
  *((_QWORD *)v15 + 1) = 22;
  v15[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAcousticFeature._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAcousticFeature._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "acoustic_feature_per_frame";
  *(_QWORD *)(v7 + 8) = 26;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "frame_duration";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXSpeechRecognitionFeature._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXSpeechRecognitionFeature._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioAnalyticsAcousticFeature._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioAnalyticsAcousticFeature._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioAnalytics._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioAnalytics._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "speech_recognition_features";
  *(_QWORD *)(v7 + 8) = 27;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "acoustic_features";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v33;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXFinalSpeechRecognitionResponse._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXFinalSpeechRecognitionResponse._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_24205D200;
  v5 = v33 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v33 + v4) = 1;
  *(_QWORD *)v5 = "speech_id";
  *(_QWORD *)(v5 + 8) = 9;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C328];
  v7 = type metadata accessor for _NameMap.NameDescription();
  v8 = *(void (**)(void))(*(_QWORD *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  v9 = v33 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v33 + v4 + v3) = 2;
  *(_QWORD *)v9 = "session_id";
  *(_QWORD *)(v9 + 8) = 10;
  *(_BYTE *)(v9 + 16) = 2;
  v8();
  v10 = (_QWORD *)(v33 + v4 + 2 * v3);
  v11 = (char *)v10 + *(int *)(v1 + 48);
  *v10 = 3;
  *(_QWORD *)v11 = "return_code";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v8();
  v12 = (_QWORD *)(v33 + v4 + 3 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "return_str";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v8();
  v14 = (_QWORD *)(v33 + v4 + 4 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "recognition_result";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v8();
  v16 = (_QWORD *)(v33 + v4 + 5 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "lang_profile_recreate_codes";
  *((_QWORD *)v17 + 1) = 27;
  v17[16] = 2;
  v8();
  v18 = (_QWORD *)(v33 + v4 + 6 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "audio_analytics";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v8();
  v20 = (_QWORD *)(v33 + v4 + 7 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "watermark_detection";
  *((_QWORD *)v21 + 1) = 19;
  v21[16] = 2;
  v8();
  v22 = (_QWORD *)(v33 + v4 + 8 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 9;
  *(_QWORD *)v23 = "watermark_peak_average";
  *((_QWORD *)v23 + 1) = 22;
  v23[16] = 2;
  v8();
  v24 = (_QWORD *)(v33 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "language";
  *((_QWORD *)v25 + 1) = 8;
  v25[16] = 2;
  v8();
  v26 = (_QWORD *)(v33 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "latnn_mitigator_result";
  *((_QWORD *)v27 + 1) = 22;
  v27[16] = 2;
  v8();
  v28 = (_QWORD *)(v33 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "request_locale";
  *((_QWORD *)v29 + 1) = 14;
  v29[16] = 2;
  v8();
  v30 = (_QWORD *)(v33 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "has_result";
  *((_QWORD *)v31 + 1) = 10;
  v31[16] = 2;
  v8();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXWordWithPronunciations._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXWordWithPronunciations._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E30;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "orthography";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "pronunciations";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "frequency";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "tag";
  *((_QWORD *)v15 + 1) = 3;
  v15[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXCategoryEntities._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXCategoryEntities._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B180;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXDeviceInfo._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXDeviceInfo._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_242059E40;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "device_name";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "device_version";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "system_name";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "system_version";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "system_build";
  *((_QWORD *)v17 + 1) = 12;
  v17[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXAudioMetadata._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXAudioMetadata._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B170;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "codec";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "audio_source";
  *(_QWORD *)(v11 + 8) = 12;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "is_far_field";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "voice_trigger_info";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "enable_server_endpoint";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "client_model_version";
  *((_QWORD *)v19 + 1) = 20;
  v19[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;

  v0 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v0, static ModalityXVoiceTriggerInfo._protobuf_nameMap);
  __swift_project_value_buffer(v0, (uint64_t)static ModalityXVoiceTriggerInfo._protobuf_nameMap);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24205B160;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "trigger_score";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = type metadata accessor for _NameMap.NameDescription();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "trigger_threshold";
  *(_QWORD *)(v11 + 8) = 17;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "sat_score";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "sat_threshold";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "recognizer_score";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "recognizer_threshold_offset";
  *((_QWORD *)v19 + 1) = 27;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "config_version";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "hardware_sample_rate";
  *((_QWORD *)v23 + 1) = 20;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "extra_samples_at_start";
  *((_QWORD *)v25 + 1) = 22;
  v25[16] = 2;
  v10();
  v26 = (_QWORD *)(v6 + 9 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "trigger_end";
  *((_QWORD *)v27 + 1) = 11;
  v27[16] = 2;
  v10();
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXUserInterfaceIdiom._protobuf_nameMap, a1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t static ModalityXFieldKeyboardType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXFieldKeyboardType._protobuf_nameMap, a1);
}

uint64_t static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for _NameMap();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t static ModalityXFieldKeyboardReturnKey._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXFieldKeyboardReturnKey._protobuf_nameMap, a1);
}

uint64_t static ModalityXAudioSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioSource._protobuf_nameMap, a1);
}

uint64_t static ModalityXCodec._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXCodec._protobuf_nameMap, a1);
}

uint64_t static ModalityXMitigationType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXMitigationType._protobuf_nameMap, a1);
}

uint64_t static ModalityXInputOrigin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXInputOrigin._protobuf_nameMap, a1);
}

uint64_t static ModalityXCancellationReason._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXCancellationReason._protobuf_nameMap, a1);
}

uint64_t static ModalityXErrorSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXErrorSource._protobuf_nameMap, a1);
}

uint64_t static ModalityXFingerprintDetectionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXFingerprintDetectionResult._protobuf_nameMap, a1);
}

uint64_t static ModalityXWatermarkDetectionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXWatermarkDetectionResult._protobuf_nameMap, a1);
}

uint64_t static ModalityXLanguageProfileRecreateCodes._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXLanguageProfileRecreateCodes._protobuf_nameMap, a1);
}

unint64_t lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom;
  if (!lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXUserInterfaceIdiom, &type metadata for ModalityXUserInterfaceIdiom);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom;
  if (!lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXUserInterfaceIdiom, &type metadata for ModalityXUserInterfaceIdiom);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom;
  if (!lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXUserInterfaceIdiom, &type metadata for ModalityXUserInterfaceIdiom);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom;
  if (!lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXUserInterfaceIdiom, &type metadata for ModalityXUserInterfaceIdiom);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXUserInterfaceIdiom()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXUserInterfaceIdiom] and conformance [A], &demangling cache variable for type metadata for [ModalityXUserInterfaceIdiom]);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426A326C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFieldKeyboardType, &type metadata for ModalityXFieldKeyboardType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFieldKeyboardType, &type metadata for ModalityXFieldKeyboardType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFieldKeyboardType, &type metadata for ModalityXFieldKeyboardType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFieldKeyboardType, &type metadata for ModalityXFieldKeyboardType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXFieldKeyboardType()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXFieldKeyboardType] and conformance [A], &demangling cache variable for type metadata for [ModalityXFieldKeyboardType]);
}

unint64_t lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFieldKeyboardReturnKey, &type metadata for ModalityXFieldKeyboardReturnKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFieldKeyboardReturnKey, &type metadata for ModalityXFieldKeyboardReturnKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFieldKeyboardReturnKey, &type metadata for ModalityXFieldKeyboardReturnKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
  if (!lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFieldKeyboardReturnKey, &type metadata for ModalityXFieldKeyboardReturnKey);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXFieldKeyboardReturnKey()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXFieldKeyboardReturnKey] and conformance [A], &demangling cache variable for type metadata for [ModalityXFieldKeyboardReturnKey]);
}

unint64_t lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource;
  if (!lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXAudioSource, &type metadata for ModalityXAudioSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource;
  if (!lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXAudioSource, &type metadata for ModalityXAudioSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource;
  if (!lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXAudioSource, &type metadata for ModalityXAudioSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource;
  if (!lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXAudioSource, &type metadata for ModalityXAudioSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXAudioSource and conformance ModalityXAudioSource);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXAudioSource()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXAudioSource] and conformance [A], &demangling cache variable for type metadata for [ModalityXAudioSource]);
}

unint64_t lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec;
  if (!lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXCodec, &type metadata for ModalityXCodec);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec;
  if (!lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXCodec, &type metadata for ModalityXCodec);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec;
  if (!lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXCodec, &type metadata for ModalityXCodec);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec;
  if (!lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXCodec, &type metadata for ModalityXCodec);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCodec and conformance ModalityXCodec);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXCodec()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXCodec] and conformance [A], &demangling cache variable for type metadata for [ModalityXCodec]);
}

unint64_t lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType;
  if (!lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXMitigationType, &type metadata for ModalityXMitigationType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType;
  if (!lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXMitigationType, &type metadata for ModalityXMitigationType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType;
  if (!lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXMitigationType, &type metadata for ModalityXMitigationType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType;
  if (!lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXMitigationType, &type metadata for ModalityXMitigationType);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXMitigationType and conformance ModalityXMitigationType);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXMitigationType()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXMitigationType] and conformance [A], &demangling cache variable for type metadata for [ModalityXMitigationType]);
}

unint64_t lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
  if (!lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXInputOrigin, &type metadata for ModalityXInputOrigin);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
  if (!lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXInputOrigin, &type metadata for ModalityXInputOrigin);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
  if (!lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXInputOrigin, &type metadata for ModalityXInputOrigin);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
  if (!lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXInputOrigin, &type metadata for ModalityXInputOrigin);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXInputOrigin and conformance ModalityXInputOrigin);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXInputOrigin()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXInputOrigin] and conformance [A], &demangling cache variable for type metadata for [ModalityXInputOrigin]);
}

unint64_t lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason;
  if (!lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXCancellationReason, &type metadata for ModalityXCancellationReason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason;
  if (!lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXCancellationReason, &type metadata for ModalityXCancellationReason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason;
  if (!lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXCancellationReason, &type metadata for ModalityXCancellationReason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason;
  if (!lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXCancellationReason, &type metadata for ModalityXCancellationReason);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXCancellationReason and conformance ModalityXCancellationReason);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXCancellationReason()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXCancellationReason] and conformance [A], &demangling cache variable for type metadata for [ModalityXCancellationReason]);
}

unint64_t lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource;
  if (!lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXErrorSource, &type metadata for ModalityXErrorSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource;
  if (!lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXErrorSource, &type metadata for ModalityXErrorSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource;
  if (!lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXErrorSource, &type metadata for ModalityXErrorSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource;
  if (!lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXErrorSource, &type metadata for ModalityXErrorSource);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXErrorSource and conformance ModalityXErrorSource);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXErrorSource()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXErrorSource] and conformance [A], &demangling cache variable for type metadata for [ModalityXErrorSource]);
}

unint64_t lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFingerprintDetectionResult, &type metadata for ModalityXFingerprintDetectionResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFingerprintDetectionResult, &type metadata for ModalityXFingerprintDetectionResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFingerprintDetectionResult, &type metadata for ModalityXFingerprintDetectionResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXFingerprintDetectionResult, &type metadata for ModalityXFingerprintDetectionResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXFingerprintDetectionResult()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXFingerprintDetectionResult] and conformance [A], &demangling cache variable for type metadata for [ModalityXFingerprintDetectionResult]);
}

unint64_t lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXWatermarkDetectionResult, &type metadata for ModalityXWatermarkDetectionResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXWatermarkDetectionResult, &type metadata for ModalityXWatermarkDetectionResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXWatermarkDetectionResult, &type metadata for ModalityXWatermarkDetectionResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
  if (!lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXWatermarkDetectionResult, &type metadata for ModalityXWatermarkDetectionResult);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXWatermarkDetectionResult()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXWatermarkDetectionResult] and conformance [A], &demangling cache variable for type metadata for [ModalityXWatermarkDetectionResult]);
}

unint64_t lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes()
{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
  if (!lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXLanguageProfileRecreateCodes, &type metadata for ModalityXLanguageProfileRecreateCodes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
  if (!lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXLanguageProfileRecreateCodes, &type metadata for ModalityXLanguageProfileRecreateCodes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
  if (!lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXLanguageProfileRecreateCodes, &type metadata for ModalityXLanguageProfileRecreateCodes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
  }
  return result;
}

{
  unint64_t result;

  result = lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
  if (!lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes)
  {
    result = MEMORY[0x2426A3278](&protocol conformance descriptor for ModalityXLanguageProfileRecreateCodes, &type metadata for ModalityXLanguageProfileRecreateCodes);
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes);
  }
  return result;
}

uint64_t associated type witness table accessor for CaseIterable.AllCases : Collection in ModalityXLanguageProfileRecreateCodes()
{
  return lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](&lazy protocol witness table cache variable for type [ModalityXLanguageProfileRecreateCodes] and conformance [A], &demangling cache variable for type metadata for [ModalityXLanguageProfileRecreateCodes]);
}

uint64_t lazy protocol witness table accessor for type [ModalityXUserInterfaceIdiom] and conformance [A](unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2426A3278](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

void type metadata accessor for ModalityXUserInterfaceIdiom()
{
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for ModalityXFieldKeyboardType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 15) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v5 = v6 - 16;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ModalityXFieldKeyboardType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_242002A84 + 4 * byte_242059E55[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_242002AB8 + 4 * byte_242059E50[v4]))();
}

uint64_t sub_242002AB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242002AC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242002AC8);
  return result;
}

uint64_t sub_242002AD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242002ADCLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_242002AE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242002AE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ModalityXFieldKeyboardType()
{
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for ModalityXFieldKeyboardReturnKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 11) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v5 = v6 - 12;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ModalityXFieldKeyboardReturnKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_242002BD4 + 4 * byte_242059E5F[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_242002C08 + 4 * byte_242059E5A[v4]))();
}

uint64_t sub_242002C08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242002C10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242002C18);
  return result;
}

uint64_t sub_242002C24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242002C2CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_242002C30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242002C38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ModalityXFieldKeyboardReturnKey()
{
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTag for ModalityXAudioSource(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *destructiveInjectEnumTag for ModalityXAudioSource(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void type metadata accessor for ModalityXAudioSource()
{
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for ModalityXCodec()
{
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for ModalityXUserInterfaceIdiom(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_9(-1);
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_9((*a1 | (v4 << 8)) - 8);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_9((*a1 | (v4 << 8)) - 8);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_9((*a1 | (v4 << 8)) - 8);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_9(v8);
}

uint64_t storeEnumTagSinglePayload for ModalityXUserInterfaceIdiom(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_242002D48 + 4 * byte_242059E69[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_8 + 4 * byte_242059E64[v4]))();
}

uint64_t sub_242002D80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242002D88);
  return result;
}

uint64_t sub_242002D90(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x242002D98);
  return OUTLINED_FUNCTION_7();
}

void type metadata accessor for ModalityXMitigationType()
{
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for ModalityXInputOrigin(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEE)
  {
    if (a2 + 18 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 18) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 19;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v5 = v6 - 19;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ModalityXInputOrigin(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_242002E88 + 4 * byte_242059E73[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_242002EBC + 4 * byte_242059E6E[v4]))();
}

uint64_t sub_242002EBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242002EC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242002ECCLL);
  return result;
}

uint64_t sub_242002ED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242002EE0);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_242002EE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242002EEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ModalityXInputOrigin()
{
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for ModalityXCancellationReason()
{
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for ModalityXCancellationReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_9(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_9((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_9((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_9((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_9(v8);
}

uint64_t storeEnumTagSinglePayload for ModalityXCancellationReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242002FE8 + 4 * byte_242059E7D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_8_0 + 4 * byte_242059E78[v4]))();
}

uint64_t sub_242003020(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242003028);
  return result;
}

uint64_t sub_242003030(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x242003038);
  return OUTLINED_FUNCTION_7();
}

void type metadata accessor for ModalityXErrorSource()
{
  OUTLINED_FUNCTION_0();
}

void type metadata accessor for ModalityXFingerprintDetectionResult()
{
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for ModalityXFingerprintDetectionResult(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return OUTLINED_FUNCTION_9(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return OUTLINED_FUNCTION_9((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return OUTLINED_FUNCTION_9((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return OUTLINED_FUNCTION_9((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return OUTLINED_FUNCTION_9(v8);
}

uint64_t storeEnumTagSinglePayload for ModalityXFingerprintDetectionResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242003138 + 4 * byte_242059E87[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)j__OUTLINED_FUNCTION_8_1 + 4 * byte_242059E82[v4]))();
}

uint64_t sub_242003170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242003178);
  return result;
}

uint64_t sub_242003180(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x242003188);
  return OUTLINED_FUNCTION_7();
}

void type metadata accessor for ModalityXWatermarkDetectionResult()
{
  OUTLINED_FUNCTION_0();
}

uint64_t getEnumTagSinglePayload for ModalityXLanguageProfileRecreateCodes(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ModalityXLanguageProfileRecreateCodes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_242003278 + 4 * byte_242059E91[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2420032AC + 4 * byte_242059E8C[v4]))();
}

uint64_t sub_2420032AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420032B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2420032BCLL);
  return result;
}

uint64_t sub_2420032C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2420032D0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2420032D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2420032DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ModalityXLanguageProfileRecreateCodes()
{
  OUTLINED_FUNCTION_0();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2426A3260]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void OUTLINED_FUNCTION_1(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void OUTLINED_FUNCTION_2(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_3()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_6(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

_BYTE *OUTLINED_FUNCTION_7@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_9@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

BOOL specialized == infix<A>(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void ModalityXServerBoundFrame.payload.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
}

void ModalityXServerBoundFrame.payload.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
}

uint64_t (*ModalityXServerBoundFrame.payload.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXServerBoundFrame.sessionMetadata.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v9);
  v3 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_55();
    if (!(_DWORD)v6)
    {
      OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXSessionMetadata);
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  type metadata accessor for ModalityXSessionMetadata(0);
  v8 = OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_78(v8);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXServerBoundFrame.sessionMetadata.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_207(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSessionMetadata, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXSessionMetadata.init()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_261();
  type metadata accessor for ModalityXSessionMetadata(0);
  v0 = OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_78(v0);
  OUTLINED_FUNCTION_9_0();
}

uint64_t type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXServerBoundFrame.OneOf_Payload);
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t type metadata accessor for ModalityXSessionMetadata(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSessionMetadata);
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void ModalityXServerBoundFrame.sessionMetadata.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v2);
  v3 = OUTLINED_FUNCTION_72();
  v4 = OUTLINED_FUNCTION_27(v3);
  v5 = OUTLINED_FUNCTION_49((uint64_t)v4);
  v6 = type metadata accessor for ModalityXSessionMetadata(v5);
  *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_16(v6);
  v7 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v7);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v9 = OUTLINED_FUNCTION_4_0(v8);
  if (v10)
  {
    OUTLINED_FUNCTION_107(v9, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    v11 = OUTLINED_FUNCTION_45();
    if (!(_DWORD)v11)
    {
      OUTLINED_FUNCTION_38(v0, v12, type metadata accessor for ModalityXSessionMetadata);
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_108(v11, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  v13 = OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_78(v13);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_206();
}

{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_19();
  v1 = *v0;
  v2 = (*v0)[3];
  v3 = (void *)(*v0)[1];
  v4 = (*v0)[2];
  v5 = **v0;
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_415((*v0)[3], v4);
    OUTLINED_FUNCTION_196(v5);
    OUTLINED_FUNCTION_397(v4);
    OUTLINED_FUNCTION_353();
    OUTLINED_FUNCTION_302();
    OUTLINED_FUNCTION_351(v2);
  }
  else
  {
    OUTLINED_FUNCTION_196(**v0);
    OUTLINED_FUNCTION_397(v2);
    OUTLINED_FUNCTION_353();
    OUTLINED_FUNCTION_302();
  }
  OUTLINED_FUNCTION_438();
  OUTLINED_FUNCTION_433();
  free(v3);
  OUTLINED_FUNCTION_68(v1);
}

void outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_211(a1, a2);
  OUTLINED_FUNCTION_319(v2);
  OUTLINED_FUNCTION_1_0();
}

void ModalityXServerBoundFrame.beginRequest.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v8);
  v3 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_55();
    if ((_DWORD)v6 == 1)
    {
      OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXBeginRequest);
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  type metadata accessor for ModalityXBeginRequest(0);
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  OUTLINED_FUNCTION_223(static ModalityXBeginRequest._StorageClass.defaultInstance);
LABEL_10:
  OUTLINED_FUNCTION_9_0();
}

void key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *))
{
  uint64_t v6;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_411();
  v9 = v8(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v12 - v10;
  OUTLINED_FUNCTION_316(v6, (uint64_t)&v12 - v10);
  a6(v11);
  OUTLINED_FUNCTION_12();
}

uint64_t ModalityXServerBoundFrame.beginRequest.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_200(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXBeginRequest, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

uint64_t ModalityXBeginRequest.init()()
{
  return ModalityXBeginRequest.init()();
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_178();
  v4 = v3;
  UnknownStorage.init()();
  v5 = *(int *)(v2(0) + 20);
  if (*v1 != -1)
  {
    OUTLINED_FUNCTION_379();
    swift_once();
  }
  *(_QWORD *)(v4 + v5) = *v0;
  return OUTLINED_FUNCTION_244();
}

uint64_t type metadata accessor for ModalityXBeginRequest(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXBeginRequest);
}

void ModalityXServerBoundFrame.beginRequest.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v2 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v2);
  v3 = OUTLINED_FUNCTION_72();
  v4 = OUTLINED_FUNCTION_27(v3);
  v5 = OUTLINED_FUNCTION_49((uint64_t)v4);
  v6 = type metadata accessor for ModalityXBeginRequest(v5);
  *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_16(v6);
  v7 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v7);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v9 = OUTLINED_FUNCTION_4_0(v8);
  if (v10)
  {
    OUTLINED_FUNCTION_107(v9, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    v11 = OUTLINED_FUNCTION_45();
    if ((_DWORD)v11 == 1)
    {
      OUTLINED_FUNCTION_38(v0, v12, type metadata accessor for ModalityXBeginRequest);
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_108(v11, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  OUTLINED_FUNCTION_223(static ModalityXBeginRequest._StorageClass.defaultInstance);
LABEL_10:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_199();
}

void ModalityXServerBoundFrame.audioFrame.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_0(v3, v9);
  v4 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v5 = OUTLINED_FUNCTION_11(v4);
  if (v6)
  {
    OUTLINED_FUNCTION_109(v5, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    *v0 = MEMORY[0x24BEE4AF8];
    type metadata accessor for ModalityXAudioFrame(0);
    OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_181();
    goto LABEL_8;
  }
  v7 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v7 != 2)
  {
    OUTLINED_FUNCTION_117(v7, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v8, type metadata accessor for ModalityXAudioFrame);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXServerBoundFrame.audioFrame.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_315(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXAudioFrame, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXAudioFrame.init()(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  type metadata accessor for ModalityXAudioFrame(0);
  OUTLINED_FUNCTION_182();
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_1_0();
}

void ModalityXServerBoundFrame.audioFrame.modify()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v3 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  v6 = OUTLINED_FUNCTION_49((uint64_t)v5);
  v7 = type metadata accessor for ModalityXAudioFrame(v6);
  *(_QWORD *)(v2 + 16) = OUTLINED_FUNCTION_16(v7);
  v8 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v8);
  v9 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v10 = OUTLINED_FUNCTION_4_0(v9);
  if (v11)
  {
    OUTLINED_FUNCTION_107(v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_253();
    OUTLINED_FUNCTION_181();
    goto LABEL_8;
  }
  v12 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v12 != 2)
  {
    OUTLINED_FUNCTION_108(v12, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v13, type metadata accessor for ModalityXAudioFrame);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_314();
}

void ModalityXServerBoundFrame.speechProfile.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_0(v3, v11);
  v4 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v5 = OUTLINED_FUNCTION_11(v4);
  if (v6)
  {
    OUTLINED_FUNCTION_109(v5, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v9 = type metadata accessor for ModalityXSpeechProfile(0);
    OUTLINED_FUNCTION_430(v9);
    *(_OWORD *)(v0 + v10) = xmmword_24205B150;
    goto LABEL_8;
  }
  v7 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v7 != 3)
  {
    OUTLINED_FUNCTION_117(v7, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v8, type metadata accessor for ModalityXSpeechProfile);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXServerBoundFrame.speechProfile.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_313(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSpeechProfile, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXSpeechProfile.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_261();
  v1 = type metadata accessor for ModalityXSpeechProfile(0);
  OUTLINED_FUNCTION_430(v1);
  *(_OWORD *)(v0 + v2) = xmmword_24205B150;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXServerBoundFrame.speechProfile.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v4 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v4);
  v5 = OUTLINED_FUNCTION_72();
  v6 = OUTLINED_FUNCTION_27(v5);
  v7 = OUTLINED_FUNCTION_49((uint64_t)v6);
  v8 = type metadata accessor for ModalityXSpeechProfile(v7);
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_16(v8);
  v9 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v9);
  v10 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v11 = OUTLINED_FUNCTION_4_0(v10);
  if (v12)
  {
    OUTLINED_FUNCTION_107(v11, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    *(_BYTE *)(v0 + *(int *)(v1 + 20)) = 2;
    *(_OWORD *)(v0 + *(int *)(v1 + 24)) = xmmword_24205B150;
    goto LABEL_8;
  }
  v13 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v13 != 3)
  {
    OUTLINED_FUNCTION_108(v13, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v2, v14, type metadata accessor for ModalityXSpeechProfile);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_312();
}

void ModalityXServerBoundFrame.cancelRequest.getter()
{
  ModalityXServerBoundFrame.cancelRequest.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;

  OUTLINED_FUNCTION_163();
  v3 = v2;
  v5 = v4;
  v6 = v0;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(v9);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_269(v6, v1);
  v11 = OUTLINED_FUNCTION_376();
  OUTLINED_FUNCTION_14(v1, 1, v11);
  if (v12)
  {
    OUTLINED_FUNCTION_410(v1);
LABEL_7:
    UnknownStorage.init()();
    v14 = v5(0);
    v15 = (_QWORD *)(v8 + *(int *)(v14 + 20));
    *v15 = 0;
    v15[1] = 0;
    *(_BYTE *)(v8 + *(int *)(v14 + 24)) = v3;
    goto LABEL_8;
  }
  v13 = OUTLINED_FUNCTION_352();
  if (v13 != 4)
  {
    OUTLINED_FUNCTION_168(v1);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_338(v1);
LABEL_8:
  OUTLINED_FUNCTION_90();
}

uint64_t ModalityXServerBoundFrame.cancelRequest.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_311(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXCancelRequest, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXCancelRequest.init()()
{
  ModalityXCancelRequest.init()();
}

{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_325();
  v2 = v1;
  UnknownStorage.init()();
  v3 = OUTLINED_FUNCTION_285();
  v4 = (_QWORD *)(v2 + *(int *)(v3 + 20));
  *v4 = 0;
  v4[1] = 0;
  *(_BYTE *)(v2 + *(int *)(v3 + 24)) = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXServerBoundFrame.cancelRequest.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  v6 = OUTLINED_FUNCTION_49((uint64_t)v5);
  v7 = type metadata accessor for ModalityXCancelRequest(v6);
  *(_QWORD *)(v2 + 16) = OUTLINED_FUNCTION_16(v7);
  v8 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v8);
  v9 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v10 = OUTLINED_FUNCTION_4_0(v9);
  if (v11)
  {
    OUTLINED_FUNCTION_107(v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_277();
    *(_BYTE *)(v0 + v14) = 3;
    goto LABEL_8;
  }
  v12 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v12 != 4)
  {
    OUTLINED_FUNCTION_108(v12, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v13, type metadata accessor for ModalityXCancelRequest);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_310();
}

void ModalityXServerBoundFrame.beginDictation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v8);
  v3 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_55();
    if ((_DWORD)v6 == 5)
    {
      OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXBeginDictation);
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  type metadata accessor for ModalityXBeginDictation(0);
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  OUTLINED_FUNCTION_223(static ModalityXBeginDictation._StorageClass.defaultInstance);
LABEL_10:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXServerBoundFrame.beginDictation.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_309(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXBeginDictation, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

uint64_t ModalityXBeginDictation.init()()
{
  return ModalityXBeginRequest.init()();
}

void ModalityXServerBoundFrame.beginDictation.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v2 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v2);
  v3 = OUTLINED_FUNCTION_72();
  v4 = OUTLINED_FUNCTION_27(v3);
  v5 = OUTLINED_FUNCTION_49((uint64_t)v4);
  v6 = type metadata accessor for ModalityXBeginDictation(v5);
  *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_16(v6);
  v7 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v7);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v9 = OUTLINED_FUNCTION_4_0(v8);
  if (v10)
  {
    OUTLINED_FUNCTION_107(v9, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    v11 = OUTLINED_FUNCTION_45();
    if ((_DWORD)v11 == 5)
    {
      OUTLINED_FUNCTION_38(v0, v12, type metadata accessor for ModalityXBeginDictation);
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_108(v11, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  OUTLINED_FUNCTION_223(static ModalityXBeginDictation._StorageClass.defaultInstance);
LABEL_10:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_308();
}

void ModalityXServerBoundFrame.speechProfileRequest.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v11);
  v3 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v8 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
    v9 = OUTLINED_FUNCTION_86(v8);
    OUTLINED_FUNCTION_98(v9);
    OUTLINED_FUNCTION_362(v10, (__n128)xmmword_24205B150);
    goto LABEL_8;
  }
  v6 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v6 != 6)
  {
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXSpeechProfileBuildRequest);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXServerBoundFrame.speechProfileRequest.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXSpeechProfileBuildRequest.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_261();
  v0 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  v1 = OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_98(v1);
  OUTLINED_FUNCTION_362(v2, (__n128)xmmword_24205B150);
  OUTLINED_FUNCTION_9_0();
}

void ModalityXServerBoundFrame.speechProfileRequest.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v4);
  v5 = OUTLINED_FUNCTION_72();
  v6 = OUTLINED_FUNCTION_27(v5);
  v7 = OUTLINED_FUNCTION_49((uint64_t)v6);
  v8 = type metadata accessor for ModalityXSpeechProfileBuildRequest(v7);
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_16(v8);
  v9 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v9);
  v10 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v11 = OUTLINED_FUNCTION_4_0(v10);
  if (v12)
  {
    OUTLINED_FUNCTION_107(v11, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v15 = (_QWORD *)(v0 + *(int *)(v1 + 20));
    *v15 = 0;
    v15[1] = 0;
    v16 = OUTLINED_FUNCTION_172();
    OUTLINED_FUNCTION_98(v16);
    OUTLINED_FUNCTION_362(v17, (__n128)xmmword_24205B150);
    goto LABEL_8;
  }
  v13 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v13 != 6)
  {
    OUTLINED_FUNCTION_108(v13, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v2, v14, type metadata accessor for ModalityXSpeechProfileBuildRequest);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

void ModalityXServerBoundFrame.streamingSpeechProfileRequest.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_0(v3, v12);
  v4 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v5 = OUTLINED_FUNCTION_11(v4);
  if (v6)
  {
    OUTLINED_FUNCTION_109(v5, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v9 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
    v10 = (_QWORD *)(v0 + v9[5]);
    *v10 = 0;
    v10[1] = 0;
    v11 = (_QWORD *)(v0 + v9[6]);
    *v11 = 0;
    v11[1] = 0;
    OUTLINED_FUNCTION_83(v9[7]);
    goto LABEL_8;
  }
  v7 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v7 != 7)
  {
    OUTLINED_FUNCTION_117(v7, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v8, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXServerBoundFrame.streamingSpeechProfileRequest.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXStreamingSpeechProfileBegin.init()()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_261();
  v1 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
  v2 = (_QWORD *)(v0 + v1[5]);
  *v2 = 0;
  v2[1] = 0;
  v3 = (_QWORD *)(v0 + v1[6]);
  *v3 = 0;
  v3[1] = 0;
  OUTLINED_FUNCTION_83(v1[7]);
  OUTLINED_FUNCTION_1_0();
}

void ModalityXServerBoundFrame.streamingSpeechProfileRequest.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v4);
  v5 = OUTLINED_FUNCTION_72();
  v6 = OUTLINED_FUNCTION_27(v5);
  v7 = OUTLINED_FUNCTION_49((uint64_t)v6);
  v8 = type metadata accessor for ModalityXStreamingSpeechProfileBegin(v7);
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_16(v8);
  v9 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v9);
  v10 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v11 = OUTLINED_FUNCTION_4_0(v10);
  if (v12)
  {
    OUTLINED_FUNCTION_107(v11, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_277();
    v16 = (_QWORD *)(v0 + v15);
    *v16 = 0;
    v16[1] = 0;
    OUTLINED_FUNCTION_83(*(int *)(v1 + 28));
    goto LABEL_8;
  }
  v13 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v13 != 7)
  {
    OUTLINED_FUNCTION_108(v13, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v2, v14, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

void ModalityXServerBoundFrame.streamingSpeechProfileData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v11);
  v3 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v8 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
    v9 = OUTLINED_FUNCTION_86(v8);
    OUTLINED_FUNCTION_228(v9);
    OUTLINED_FUNCTION_363(v10, (__n128)xmmword_24205B150);
    goto LABEL_8;
  }
  v6 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v6 != 8)
  {
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXServerBoundFrame.streamingSpeechProfileData.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXStreamingSpeechProfileAddData.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_261();
  v0 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  v1 = OUTLINED_FUNCTION_86(v0);
  OUTLINED_FUNCTION_228(v1);
  OUTLINED_FUNCTION_363(v2, (__n128)xmmword_24205B150);
  OUTLINED_FUNCTION_9_0();
}

void ModalityXServerBoundFrame.streamingSpeechProfileData.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v4);
  v5 = OUTLINED_FUNCTION_72();
  v6 = OUTLINED_FUNCTION_27(v5);
  v7 = OUTLINED_FUNCTION_49((uint64_t)v6);
  v8 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(v7);
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_16(v8);
  v9 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v9);
  v10 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v11 = OUTLINED_FUNCTION_4_0(v10);
  if (v12)
  {
    OUTLINED_FUNCTION_107(v11, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v15 = (_QWORD *)(v0 + *(int *)(v1 + 20));
    *v15 = 0;
    v15[1] = 0;
    v16 = OUTLINED_FUNCTION_172();
    OUTLINED_FUNCTION_228(v16);
    OUTLINED_FUNCTION_363(v17, (__n128)xmmword_24205B150);
    goto LABEL_8;
  }
  v13 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v13 != 8)
  {
    OUTLINED_FUNCTION_108(v13, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v2, v14, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

void ModalityXServerBoundFrame.streamingSpeechProfileCommit.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v9);
  v3 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v8 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
    OUTLINED_FUNCTION_83(*(int *)(v8 + 20));
    goto LABEL_8;
  }
  v6 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v6 != 9)
  {
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXServerBoundFrame.streamingSpeechProfileCommit.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

void ModalityXStreamingSpeechProfileCommit.init()(uint64_t a1@<X8>)
{
  ModalityXStreamingSpeechProfileCommit.init()(a1);
}

{
  _QWORD *v2;

  UnknownStorage.init()();
  v2 = (_QWORD *)(a1 + *(int *)(OUTLINED_FUNCTION_328() + 20));
  *v2 = 0;
  v2[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXServerBoundFrame.streamingSpeechProfileCommit.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v3 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  v6 = OUTLINED_FUNCTION_49((uint64_t)v5);
  v7 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(v6);
  *(_QWORD *)(v2 + 16) = OUTLINED_FUNCTION_16(v7);
  v8 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v8);
  v9 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v10 = OUTLINED_FUNCTION_4_0(v9);
  if (v11)
  {
    OUTLINED_FUNCTION_107(v10, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_83(*(int *)(v0 + 20));
    goto LABEL_8;
  }
  v12 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v12 != 9)
  {
    OUTLINED_FUNCTION_108(v12, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v13, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

uint64_t ModalityXServerBoundFrame.unknownFields.getter()
{
  return ModalityXServerBoundFrame.unknownFields.getter();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v0 = OUTLINED_FUNCTION_260();
  v1(v0);
  OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_120();
  return OUTLINED_FUNCTION_146(v2, v3, v4, v5);
}

uint64_t ModalityXServerBoundFrame.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXServerBoundFrame);
}

uint64_t (*ModalityXServerBoundFrame.unknownFields.modify())()
{
  type metadata accessor for ModalityXServerBoundFrame(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void static ModalityXServerBoundFrame.OneOf_Payload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52[15];
  uint64_t v53;

  OUTLINED_FUNCTION_19();
  v2 = v1;
  v53 = v3;
  type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v4);
  v52[9] = (uint64_t)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXStreamingSpeechProfileAddData(v6);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v7);
  v52[8] = (uint64_t)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXStreamingSpeechProfileBegin(v9);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_79();
  v52[7] = v11;
  v12 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXSpeechProfileBuildRequest(v12);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_79();
  v52[6] = v14;
  v15 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXBeginDictation(v15);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_79();
  v52[5] = v17;
  v18 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXCancelRequest(v18);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_79();
  v52[4] = v20;
  v21 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXSpeechProfile(v21);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_79();
  v52[3] = v23;
  v24 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXAudioFrame(v24);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_79();
  v52[2] = v26;
  v27 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXBeginRequest(v27);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_79();
  v52[1] = v29;
  v30 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXSessionMetadata(v30);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_79();
  v52[0] = v32;
  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_57(v34, v52[0]);
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_435();
  v52[13] = v36;
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_435();
  v52[12] = v38;
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_435();
  v52[11] = v40;
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_435();
  v52[10] = v42;
  OUTLINED_FUNCTION_144();
  v44 = MEMORY[0x24BDAC7A8](v43);
  v45 = MEMORY[0x24BDAC7A8](v44);
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_437();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_96();
  MEMORY[0x24BDAC7A8](v47);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXServerBoundFrame.OneOf_Payload, ModalityXServerBoundFrame.OneOf_Payload));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_378();
  v50 = v0 + *(int *)(v49 + 48);
  OUTLINED_FUNCTION_195(v53, v0);
  OUTLINED_FUNCTION_195(v2, v50);
  v51 = (char *)sub_242004D8C + 4 * byte_24205B1C0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_242004D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  outlined init with copy of ModalityXSessionMetadata(v1, v2, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  if (OUTLINED_FUNCTION_104())
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v2, type metadata accessor for ModalityXSessionMetadata);
    OUTLINED_FUNCTION_380(v4, &demangling cache variable for type metadata for (ModalityXServerBoundFrame.OneOf_Payload, ModalityXServerBoundFrame.OneOf_Payload));
  }
  else
  {
    v5 = *(_QWORD *)(v3 - 208);
    OUTLINED_FUNCTION_116(v0);
    static ModalityXSessionMetadata.== infix(_:_:)();
    OUTLINED_FUNCTION_39(v5);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v2, type metadata accessor for ModalityXSessionMetadata);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v1, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_3_0();
}

void static ModalityXSessionMetadata.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  char v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  OUTLINED_FUNCTION_19();
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_15();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_436();
  v52 = v9;
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8]();
  v51 = (char *)&v50 - v10;
  v11 = OUTLINED_FUNCTION_139();
  v12 = type metadata accessor for ModalityXDeviceInfo(v11);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_135(v13, v50);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXDeviceInfo?, ModalityXDeviceInfo?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_329();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_96();
  MEMORY[0x24BDAC7A8]();
  v15 = OUTLINED_FUNCTION_400();
  v16 = (int *)type metadata accessor for ModalityXSessionMetadata(v15);
  v17 = v16[5];
  v56 = v7;
  OUTLINED_FUNCTION_37(v7 + v17);
  v18 = v16[5];
  v57 = v5;
  OUTLINED_FUNCTION_51(v5 + v18, v0);
  v19 = v2 + *(int *)(v14 + 48);
  OUTLINED_FUNCTION_51(v1, v2);
  OUTLINED_FUNCTION_51(v0, v19);
  v20 = OUTLINED_FUNCTION_14(v2, 1, v12);
  if (v23)
  {
    OUTLINED_FUNCTION_140(v0);
    OUTLINED_FUNCTION_140(v1);
    v22 = OUTLINED_FUNCTION_14(v19, 1, v12);
    if (v23)
    {
      OUTLINED_FUNCTION_205(v22, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
      goto LABEL_12;
    }
LABEL_9:
    OUTLINED_FUNCTION_205(v22, &demangling cache variable for type metadata for (ModalityXDeviceInfo?, ModalityXDeviceInfo?));
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_421(v20, v21, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  OUTLINED_FUNCTION_14(v19, 1, v12);
  if (v23)
  {
    OUTLINED_FUNCTION_419();
    OUTLINED_FUNCTION_262();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v3, type metadata accessor for ModalityXDeviceInfo);
    goto LABEL_9;
  }
  v24 = v55;
  OUTLINED_FUNCTION_432(v19, v55);
  static ModalityXDeviceInfo.== infix(_:_:)();
  v26 = v25;
  OUTLINED_FUNCTION_168(v24);
  OUTLINED_FUNCTION_165(v0);
  OUTLINED_FUNCTION_165(v1);
  OUTLINED_FUNCTION_168(v3);
  OUTLINED_FUNCTION_165(v2);
  if ((v26 & 1) == 0)
    goto LABEL_10;
LABEL_12:
  v27 = v16[6];
  v29 = v56;
  v28 = v57;
  v30 = *(unsigned __int8 *)(v56 + v27);
  v31 = *(unsigned __int8 *)(v57 + v27);
  if (v30 == 2)
  {
    if (v31 != 2)
      goto LABEL_10;
  }
  else
  {
    if (v31 == 2)
      goto LABEL_10;
    OUTLINED_FUNCTION_176();
    if ((v32 & 1) == 0)
      goto LABEL_10;
  }
  v33 = v16[7];
  v34 = *(unsigned __int8 *)(v29 + v33);
  v35 = *(unsigned __int8 *)(v28 + v33);
  if (v34 == 8)
  {
    if (v35 != 8)
      goto LABEL_10;
  }
  else if (v35 == 8 || v34 != v35)
  {
    goto LABEL_10;
  }
  v37 = v16[8];
  v38 = *(_QWORD *)(v28 + v37 + 8);
  if (*(_QWORD *)(v29 + v37 + 8))
  {
    if (v38)
    {
      OUTLINED_FUNCTION_24(v29 + v37);
      v41 = v23 && v39 == v40;
      if (v41 || (OUTLINED_FUNCTION_75() & 1) != 0)
        goto LABEL_34;
    }
  }
  else if (!v38)
  {
LABEL_34:
    v42 = v53;
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
    v44 = v51;
    v45 = v29;
    v46 = v54;
    v43(v51, v45, v54);
    v47 = OUTLINED_FUNCTION_240();
    ((void (*)(uint64_t))v43)(v47);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    dispatch thunk of static Equatable.== infix(_:_:)();
    v48 = *(void (**)(uint64_t))(v42 + 8);
    v49 = OUTLINED_FUNCTION_408();
    v48(v49);
    ((void (*)(char *, uint64_t))v48)(v44, v46);
  }
LABEL_10:
  OUTLINED_FUNCTION_3_0();
}

void static ModalityXBeginRequest.== infix(_:_:)()
{
  static ModalityXBeginRequest.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  OUTLINED_FUNCTION_19();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8]();
  v10 = OUTLINED_FUNCTION_92();
  v11 = *(int *)(v5(v10) + 20);
  v12 = *(_QWORD *)(v9 + v11);
  v13 = *(_QWORD *)(v7 + v11);
  if (v12 == v13
    || (swift_retain(), swift_retain(), v14 = v3(v12, v13), swift_release(), swift_release(), (v14 & 1) != 0))
  {
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_382(v0);
    OUTLINED_FUNCTION_382(v1);
  }
  OUTLINED_FUNCTION_265();
  OUTLINED_FUNCTION_3_0();
}

void static ModalityXAudioFrame.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  int v19;
  int v20;
  char v21;
  char *v22;
  void (*v23)(uint64_t, char *, uint64_t);

  OUTLINED_FUNCTION_163();
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_92();
  v11 = type metadata accessor for ModalityXAudioFrame(v10);
  OUTLINED_FUNCTION_77();
  if (!v14)
  {
    if (v12)
      goto LABEL_17;
LABEL_10:
    if ((specialized static Array<A>.== infix(_:_:)(*v7, *v5) & 1) == 0)
      goto LABEL_17;
    v18 = *(int *)(v11 + 28);
    v19 = *((unsigned __int8 *)v7 + v18);
    v20 = *((unsigned __int8 *)v5 + v18);
    if (v19 == 2)
    {
      if (v20 != 2)
        goto LABEL_17;
    }
    else
    {
      if (v20 == 2)
        goto LABEL_17;
      OUTLINED_FUNCTION_176();
      if ((v21 & 1) == 0)
        goto LABEL_17;
    }
    v22 = (char *)v7 + *(int *)(v11 + 20);
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 16);
    v23(v2, v22, v1);
    v23(v0, (char *)v5 + *(int *)(v11 + 20), v1);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_111();
    OUTLINED_FUNCTION_159(v2);
    goto LABEL_17;
  }
  if (v12)
  {
    OUTLINED_FUNCTION_24(v13);
    v17 = v17 && v15 == v16;
    if (v17 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_10;
  }
LABEL_17:
  OUTLINED_FUNCTION_344();
  OUTLINED_FUNCTION_90();
}

void static ModalityXSpeechProfile.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;

  OUTLINED_FUNCTION_19();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_92();
  v9 = type metadata accessor for ModalityXSpeechProfile(v8);
  v10 = *(int *)(v9 + 20);
  v11 = *(unsigned __int8 *)(v5 + v10);
  v12 = *(unsigned __int8 *)(v3 + v10);
  if (v11 == 2)
  {
    if (v12 != 2)
      goto LABEL_14;
LABEL_6:
    v14 = *(int *)(v9 + 24);
    v15 = *(_QWORD *)(v5 + v14);
    v16 = *(_QWORD *)(v5 + v14 + 8);
    v17 = *(_QWORD *)(v3 + v14 + 8);
    OUTLINED_FUNCTION_343();
    if (!v19 & v18)
    {
      if (v17 >> 60 != 15)
      {
LABEL_11:
        v20 = OUTLINED_FUNCTION_323();
        outlined consume of Data?(v20, v21);
        OUTLINED_FUNCTION_396();
        goto LABEL_14;
      }
    }
    else
    {
      if (v17 >> 60 == 15)
        goto LABEL_11;
      v22 = OUTLINED_FUNCTION_323();
      v23 = MEMORY[0x2426A2D44](v22);
      OUTLINED_FUNCTION_396();
      outlined consume of Data?(v15, v16);
      if ((v23 & 1) == 0)
        goto LABEL_14;
    }
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_382(v0);
    OUTLINED_FUNCTION_382(v1);
    goto LABEL_14;
  }
  if (v12 != 2)
  {
    OUTLINED_FUNCTION_176();
    if ((v13 & 1) != 0)
      goto LABEL_6;
  }
LABEL_14:
  OUTLINED_FUNCTION_265();
  OUTLINED_FUNCTION_3_0();
}

void static ModalityXCancelRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  int v16;
  int v17;

  OUTLINED_FUNCTION_163();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_92();
  v8 = type metadata accessor for ModalityXCancelRequest(v7);
  OUTLINED_FUNCTION_77();
  if (!v11)
  {
    if (v9)
      goto LABEL_17;
LABEL_10:
    v15 = *(int *)(v8 + 24);
    v16 = *(unsigned __int8 *)(v4 + v15);
    v17 = *(unsigned __int8 *)(v2 + v15);
    if (v16 == 3)
    {
      if (v17 != 3)
        goto LABEL_17;
    }
    else if (v17 == 3 || v16 != v17)
    {
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_111();
    OUTLINED_FUNCTION_159(v0);
    goto LABEL_17;
  }
  if (v9)
  {
    OUTLINED_FUNCTION_24(v10);
    v14 = v14 && v12 == v13;
    if (v14 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_10;
  }
LABEL_17:
  OUTLINED_FUNCTION_344();
  OUTLINED_FUNCTION_90();
}

void static ModalityXBeginDictation.== infix(_:_:)()
{
  static ModalityXBeginRequest.== infix(_:_:)();
}

void static ModalityXSpeechProfileBuildRequest.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  char v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  char v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  OUTLINED_FUNCTION_19();
  v5 = v4;
  v7 = v6;
  v8 = OUTLINED_FUNCTION_15();
  v67 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_436();
  v66 = v10;
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v11);
  v65 = (uint64_t)&v64 - v12;
  v13 = OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_378();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXSpeechProfileSourceData?, ModalityXSpeechProfileSourceData?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_157();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_377();
  v20 = v18 - v19;
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_138();
  MEMORY[0x24BDAC7A8](v22);
  v23 = OUTLINED_FUNCTION_272();
  type metadata accessor for ModalityXSpeechProfileBuildRequest(v23);
  v68 = v7;
  v69 = v5;
  OUTLINED_FUNCTION_188();
  if (!v27)
  {
    v64 = v8;
    if (v24)
      goto LABEL_28;
LABEL_10:
    v33 = v26;
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v68 + *(int *)(v26 + 24), v0, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    OUTLINED_FUNCTION_51(v69 + *(int *)(v33 + 24), v1);
    v34 = v2 + *(int *)(v15 + 48);
    OUTLINED_FUNCTION_51(v0, v2);
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_14(v2, 1, v13);
    if (v30)
    {
      OUTLINED_FUNCTION_140(v1);
      OUTLINED_FUNCTION_140(v0);
      v35 = OUTLINED_FUNCTION_14(v34, 1, v13);
      if (v30)
      {
        OUTLINED_FUNCTION_394(v35, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
        goto LABEL_15;
      }
    }
    else
    {
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v20, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      OUTLINED_FUNCTION_14(v34, 1, v13);
      if (!v42)
      {
        outlined init with take of ModalityXSessionMetadata(v34, v3, type metadata accessor for ModalityXSpeechProfileSourceData);
        OUTLINED_FUNCTION_440();
        if ((v46 & 1) != 0)
        {
          lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          OUTLINED_FUNCTION_289();
          v47 = dispatch thunk of static Equatable.== infix(_:_:)();
          OUTLINED_FUNCTION_168(v3);
          OUTLINED_FUNCTION_196(v1);
          OUTLINED_FUNCTION_196(v0);
          OUTLINED_FUNCTION_168(v20);
          OUTLINED_FUNCTION_196(v2);
          if ((v47 & 1) == 0)
            goto LABEL_28;
LABEL_15:
          OUTLINED_FUNCTION_385();
          if (v38)
          {
            if (!v36)
              goto LABEL_28;
            OUTLINED_FUNCTION_24(v37);
            v41 = v30 && v39 == v40;
            if (!v41 && (OUTLINED_FUNCTION_75() & 1) == 0)
              goto LABEL_28;
          }
          else if (v36)
          {
            goto LABEL_28;
          }
          OUTLINED_FUNCTION_385();
          if (v50)
          {
            if (!v48)
              goto LABEL_28;
            OUTLINED_FUNCTION_24(v49);
            v53 = v30 && v51 == v52;
            if (!v53 && (OUTLINED_FUNCTION_75() & 1) == 0)
              goto LABEL_28;
          }
          else if (v48)
          {
            goto LABEL_28;
          }
          OUTLINED_FUNCTION_337();
          if (!v30 & v54)
          {
            OUTLINED_FUNCTION_343();
            if (!v30 & v54)
            {
              OUTLINED_FUNCTION_137();
              if (!v59 & v58)
              {
                OUTLINED_FUNCTION_259();
                if (!v30 & v54)
                {
                  v62 = v65;
                  OUTLINED_FUNCTION_221(v65, v68);
                  v63 = v66;
                  OUTLINED_FUNCTION_221(v66, v69);
                  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                  OUTLINED_FUNCTION_65();
                  OUTLINED_FUNCTION_160(v63);
                  OUTLINED_FUNCTION_160(v62);
                  goto LABEL_28;
                }
              }
              else
              {
                OUTLINED_FUNCTION_259();
                if (!(!v61 & v60))
                  OUTLINED_FUNCTION_60();
              }
              v56 = OUTLINED_FUNCTION_106();
LABEL_59:
              outlined consume of Data?(v56, v57);
              goto LABEL_28;
            }
          }
          else
          {
            OUTLINED_FUNCTION_343();
            if (!(!v55 & v54))
              OUTLINED_FUNCTION_203();
          }
          v56 = OUTLINED_FUNCTION_225();
          goto LABEL_59;
        }
        OUTLINED_FUNCTION_187(v3);
        OUTLINED_FUNCTION_140(v1);
        OUTLINED_FUNCTION_140(v0);
        OUTLINED_FUNCTION_187(v20);
        v45 = v2;
        v44 = &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?;
LABEL_27:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v45, v44);
        goto LABEL_28;
      }
      OUTLINED_FUNCTION_288(v1);
      OUTLINED_FUNCTION_288(v0);
      OUTLINED_FUNCTION_354(v43, type metadata accessor for ModalityXSpeechProfileSourceData);
    }
    v44 = &demangling cache variable for type metadata for (ModalityXSpeechProfileSourceData?, ModalityXSpeechProfileSourceData?);
    v45 = v2;
    goto LABEL_27;
  }
  if (v24)
  {
    v64 = v8;
    OUTLINED_FUNCTION_24(v25);
    v30 = v30 && v28 == v29;
    if (v30)
      goto LABEL_10;
    v31 = v26;
    v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    v26 = v31;
    if ((v32 & 1) != 0)
      goto LABEL_10;
  }
LABEL_28:
  OUTLINED_FUNCTION_265();
  OUTLINED_FUNCTION_3_0();
}

void static ModalityXStreamingSpeechProfileBegin.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;

  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_92();
  type metadata accessor for ModalityXStreamingSpeechProfileBegin(v3);
  OUTLINED_FUNCTION_77();
  if (!v6)
  {
    if (v4)
      goto LABEL_28;
LABEL_10:
    OUTLINED_FUNCTION_77();
    if (v12)
    {
      if (!v10)
        goto LABEL_28;
      OUTLINED_FUNCTION_24(v11);
      v15 = v9 && v13 == v14;
      if (!v15 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_28;
    }
    else if (v10)
    {
      goto LABEL_28;
    }
    OUTLINED_FUNCTION_77();
    if (v18)
    {
      if (!v16)
        goto LABEL_28;
      OUTLINED_FUNCTION_24(v17);
      v21 = v9 && v19 == v20;
      if (!v21 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_28;
    }
    else if (v16)
    {
      goto LABEL_28;
    }
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_111();
    OUTLINED_FUNCTION_159(v0);
    goto LABEL_28;
  }
  if (v4)
  {
    OUTLINED_FUNCTION_24(v5);
    v9 = v9 && v7 == v8;
    if (v9 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_10;
  }
LABEL_28:
  OUTLINED_FUNCTION_344();
  OUTLINED_FUNCTION_90();
}

void static ModalityXStreamingSpeechProfileAddData.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_19();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_15();
  v50 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x24BDAC7A8](v6);
  v49 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v8);
  v48 = (uint64_t)&v46 - v9;
  v10 = OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_135(v12, v46);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXSpeechProfileSourceData?, ModalityXSpeechProfileSourceData?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_57(v16, v46);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_138();
  MEMORY[0x24BDAC7A8](v18);
  v19 = OUTLINED_FUNCTION_272();
  v20 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(v19);
  OUTLINED_FUNCTION_391();
  if (!v23)
  {
    v47 = v5;
    if (v21)
      goto LABEL_37;
LABEL_10:
    v27 = v4;
    OUTLINED_FUNCTION_51(v4 + *(int *)(v20 + 24), v0);
    OUTLINED_FUNCTION_51(v53 + *(int *)(v20 + 24), v1);
    v28 = v2 + *(int *)(v13 + 48);
    OUTLINED_FUNCTION_51(v0, v2);
    OUTLINED_FUNCTION_22();
    OUTLINED_FUNCTION_14(v2, 1, v10);
    if (v26)
    {
      OUTLINED_FUNCTION_140(v1);
      OUTLINED_FUNCTION_140(v0);
      v29 = OUTLINED_FUNCTION_14(v28, 1, v10);
      if (v26)
      {
        OUTLINED_FUNCTION_205(v29, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
        goto LABEL_21;
      }
    }
    else
    {
      v30 = v52;
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v52, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      OUTLINED_FUNCTION_14(v28, 1, v10);
      if (!v31)
      {
        v35 = v51;
        outlined init with take of ModalityXSessionMetadata(v28, v51, type metadata accessor for ModalityXSpeechProfileSourceData);
        OUTLINED_FUNCTION_440();
        if ((v36 & 1) != 0)
        {
          lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          OUTLINED_FUNCTION_289();
          v37 = dispatch thunk of static Equatable.== infix(_:_:)();
          OUTLINED_FUNCTION_168(v35);
          OUTLINED_FUNCTION_196(v1);
          OUTLINED_FUNCTION_196(v0);
          OUTLINED_FUNCTION_168(v30);
          OUTLINED_FUNCTION_196(v2);
          if ((v37 & 1) == 0)
            goto LABEL_37;
LABEL_21:
          OUTLINED_FUNCTION_137();
          if (!v26 & v38)
          {
            OUTLINED_FUNCTION_259();
            if (!v26 & v38)
            {
              OUTLINED_FUNCTION_137();
              if (!v26 & v38)
              {
                OUTLINED_FUNCTION_259();
                if (!v26 & v38)
                {
                  v44 = v48;
                  OUTLINED_FUNCTION_221(v48, v27);
                  v45 = v49;
                  OUTLINED_FUNCTION_221(v49, v53);
                  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                  OUTLINED_FUNCTION_65();
                  OUTLINED_FUNCTION_160(v45);
                  OUTLINED_FUNCTION_160(v44);
                  goto LABEL_37;
                }
              }
              else
              {
                OUTLINED_FUNCTION_259();
                if (!(!v41 & v40))
                  OUTLINED_FUNCTION_60();
              }
            }
          }
          else
          {
            OUTLINED_FUNCTION_259();
            if (!(!v39 & v38))
              OUTLINED_FUNCTION_60();
          }
          v42 = OUTLINED_FUNCTION_106();
          outlined consume of Data?(v42, v43);
          goto LABEL_37;
        }
        OUTLINED_FUNCTION_187(v35);
        OUTLINED_FUNCTION_140(v1);
        OUTLINED_FUNCTION_140(v0);
        OUTLINED_FUNCTION_187(v30);
        v34 = v2;
        v33 = &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?;
LABEL_33:
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v34, v33);
        goto LABEL_37;
      }
      OUTLINED_FUNCTION_288(v1);
      OUTLINED_FUNCTION_288(v0);
      OUTLINED_FUNCTION_354(v32, type metadata accessor for ModalityXSpeechProfileSourceData);
    }
    v33 = &demangling cache variable for type metadata for (ModalityXSpeechProfileSourceData?, ModalityXSpeechProfileSourceData?);
    v34 = v2;
    goto LABEL_33;
  }
  if (v21)
  {
    v47 = v5;
    OUTLINED_FUNCTION_24(v22);
    v26 = v26 && v24 == v25;
    if (v26 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_10;
  }
LABEL_37:
  OUTLINED_FUNCTION_265();
  OUTLINED_FUNCTION_3_0();
}

void static ModalityXStreamingSpeechProfileCommit.== infix(_:_:)()
{
  static ModalityXStreamingSpeechProfileCommit.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  OUTLINED_FUNCTION_163();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_15();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_92();
  v3(v6);
  OUTLINED_FUNCTION_77();
  if (!v9)
  {
    if (v7)
      goto LABEL_12;
    goto LABEL_11;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_24(v8);
    v12 = v12 && v10 == v11;
    if (v12 || (OUTLINED_FUNCTION_75() & 1) != 0)
    {
LABEL_11:
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_102();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_62();
      OUTLINED_FUNCTION_159(v0);
      OUTLINED_FUNCTION_159(v1);
    }
  }
LABEL_12:
  OUTLINED_FUNCTION_90();
}

void ModalityXServerBoundFrame.init()(uint64_t a1@<X8>)
{
  ModalityXServerBoundFrame.init()(type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload, a1);
}

void ModalityXClientBoundFrame.payload.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
}

void ModalityXClientBoundFrame.payload.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
}

uint64_t (*ModalityXClientBoundFrame.payload.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXClientBoundFrame.requestComplete.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v9);
  v3 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_55();
    if (!(_DWORD)v6)
    {
      OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXRequestComplete);
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  v8 = type metadata accessor for ModalityXRequestComplete(0);
  OUTLINED_FUNCTION_83(*(int *)(v8 + 20));
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXClientBoundFrame.requestComplete.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_207(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXRequestComplete, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXRequestComplete.init()(uint64_t a1@<X8>)
{
  ModalityXStreamingSpeechProfileCommit.init()(a1);
}

void ModalityXClientBoundFrame.requestComplete.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v3 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  v6 = OUTLINED_FUNCTION_49((uint64_t)v5);
  v7 = type metadata accessor for ModalityXRequestComplete(v6);
  *(_QWORD *)(v2 + 16) = OUTLINED_FUNCTION_16(v7);
  v8 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v8);
  v9 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v10 = OUTLINED_FUNCTION_4_0(v9);
  if (v11)
  {
    OUTLINED_FUNCTION_107(v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    v12 = OUTLINED_FUNCTION_45();
    if (!(_DWORD)v12)
    {
      OUTLINED_FUNCTION_38(v1, v13, type metadata accessor for ModalityXRequestComplete);
      goto LABEL_8;
    }
    OUTLINED_FUNCTION_108(v12, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_83(*(int *)(v0 + 20));
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_206();
}

void ModalityXClientBoundFrame.processingError.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_0(v3, v12);
  v4 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v5 = OUTLINED_FUNCTION_11(v4);
  if (v6)
  {
    OUTLINED_FUNCTION_109(v5, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v9 = (int *)type metadata accessor for ModalityXProcessingError(0);
    v10 = v0 + v9[5];
    *(_DWORD *)v10 = 0;
    *(_BYTE *)(v10 + 4) = 1;
    v11 = (_QWORD *)(v0 + v9[6]);
    *v11 = 0;
    v11[1] = 0;
    *(_BYTE *)(v0 + v9[7]) = 3;
    OUTLINED_FUNCTION_83(v9[8]);
    goto LABEL_8;
  }
  v7 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v7 != 1)
  {
    OUTLINED_FUNCTION_117(v7, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v8, type metadata accessor for ModalityXProcessingError);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXClientBoundFrame.processingError.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_200(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXProcessingError, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXProcessingError.init()()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_261();
  v1 = (int *)type metadata accessor for ModalityXProcessingError(0);
  v2 = v0 + v1[5];
  *(_DWORD *)v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  v3 = (_QWORD *)(v0 + v1[6]);
  *v3 = 0;
  v3[1] = 0;
  *(_BYTE *)(v0 + v1[7]) = 3;
  OUTLINED_FUNCTION_83(v1[8]);
  OUTLINED_FUNCTION_1_0();
}

void ModalityXClientBoundFrame.processingError.modify()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v4);
  v5 = OUTLINED_FUNCTION_72();
  v6 = OUTLINED_FUNCTION_27(v5);
  v7 = OUTLINED_FUNCTION_49((uint64_t)v6);
  v8 = type metadata accessor for ModalityXProcessingError(v7);
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_16(v8);
  v9 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v9);
  v10 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v11 = OUTLINED_FUNCTION_4_0(v10);
  if (v12)
  {
    OUTLINED_FUNCTION_107(v11, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v15 = v0 + v1[5];
    *(_DWORD *)v15 = 0;
    *(_BYTE *)(v15 + 4) = 1;
    v16 = (_QWORD *)(v0 + v1[6]);
    *v16 = 0;
    v16[1] = 0;
    *(_BYTE *)(v0 + v1[7]) = 3;
    OUTLINED_FUNCTION_83(v1[8]);
    goto LABEL_8;
  }
  v13 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v13 != 1)
  {
    OUTLINED_FUNCTION_108(v13, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v2, v14, type metadata accessor for ModalityXProcessingError);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_199();
}

void ModalityXClientBoundFrame.asrResult.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v8);
  v3 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_174();
    OUTLINED_FUNCTION_83(*(int *)(v0 + 24));
    goto LABEL_8;
  }
  v6 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v6 != 2)
  {
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXASRResult);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXClientBoundFrame.asrResult.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_315(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXASRResult, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXASRResult.init()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_174();
  OUTLINED_FUNCTION_83(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_1_0();
}

void ModalityXClientBoundFrame.asrResult.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v4);
  v5 = OUTLINED_FUNCTION_72();
  v6 = OUTLINED_FUNCTION_27(v5);
  v7 = OUTLINED_FUNCTION_49((uint64_t)v6);
  v8 = type metadata accessor for ModalityXASRResult(v7);
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_16(v8);
  v9 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v9);
  v10 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v11 = OUTLINED_FUNCTION_4_0(v10);
  if (v12)
  {
    OUTLINED_FUNCTION_107(v11, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    v15 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
    OUTLINED_FUNCTION_428(v0, 1, v16, v15);
    OUTLINED_FUNCTION_253();
    OUTLINED_FUNCTION_83(*(int *)(v1 + 24));
    goto LABEL_8;
  }
  v13 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v13 != 2)
  {
    OUTLINED_FUNCTION_108(v13, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v2, v14, type metadata accessor for ModalityXASRResult);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_314();
}

void ModalityXClientBoundFrame.speechProfileRebuildNeeded.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v9);
  v3 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v8 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
    OUTLINED_FUNCTION_83(*(int *)(v8 + 20));
    goto LABEL_8;
  }
  v6 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v6 != 3)
  {
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXClientBoundFrame.speechProfileRebuildNeeded.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_313(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXSpeechProfileRebuildNeeded.init()(uint64_t a1@<X8>)
{
  ModalityXStreamingSpeechProfileCommit.init()(a1);
}

void ModalityXClientBoundFrame.speechProfileRebuildNeeded.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v3 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  v6 = OUTLINED_FUNCTION_49((uint64_t)v5);
  v7 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(v6);
  *(_QWORD *)(v2 + 16) = OUTLINED_FUNCTION_16(v7);
  v8 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v8);
  v9 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v10 = OUTLINED_FUNCTION_4_0(v9);
  if (v11)
  {
    OUTLINED_FUNCTION_107(v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_83(*(int *)(v0 + 20));
    goto LABEL_8;
  }
  v12 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v12 != 3)
  {
    OUTLINED_FUNCTION_108(v12, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v13, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_312();
}

void ModalityXClientBoundFrame.requestMitigated.getter()
{
  ModalityXServerBoundFrame.cancelRequest.getter();
}

uint64_t ModalityXClientBoundFrame.requestMitigated.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_311(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXRequestMitigated, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXRequestMitigated.init()()
{
  ModalityXCancelRequest.init()();
}

void ModalityXClientBoundFrame.requestMitigated.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  v6 = OUTLINED_FUNCTION_49((uint64_t)v5);
  v7 = type metadata accessor for ModalityXRequestMitigated(v6);
  *(_QWORD *)(v2 + 16) = OUTLINED_FUNCTION_16(v7);
  v8 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v8);
  v9 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v10 = OUTLINED_FUNCTION_4_0(v9);
  if (v11)
  {
    OUTLINED_FUNCTION_107(v10, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_277();
    *(_BYTE *)(v0 + v14) = 8;
    goto LABEL_8;
  }
  v12 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v12 != 4)
  {
    OUTLINED_FUNCTION_108(v12, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v13, type metadata accessor for ModalityXRequestMitigated);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_310();
}

void ModalityXClientBoundFrame.speechProfileResponse.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_0(v3, v12);
  v4 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v5 = OUTLINED_FUNCTION_11(v4);
  if (v6)
  {
    OUTLINED_FUNCTION_109(v5, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v9 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
    v10 = (_QWORD *)(v0 + *(int *)(v9 + 20));
    *v10 = 0;
    v10[1] = 0;
    OUTLINED_FUNCTION_99(*(int *)(v9 + 24));
    OUTLINED_FUNCTION_361(v11, (__n128)xmmword_24205B150);
    goto LABEL_8;
  }
  v7 = OUTLINED_FUNCTION_55();
  if ((_DWORD)v7 != 5)
  {
    OUTLINED_FUNCTION_117(v7, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v1, v8, type metadata accessor for ModalityXSpeechProfileBuildResponse);
LABEL_8:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXClientBoundFrame.speechProfileResponse.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_309(a1, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void ModalityXSpeechProfileBuildResponse.init()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_261();
  v1 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  v2 = (_QWORD *)(v0 + *(int *)(v1 + 20));
  *v2 = 0;
  v2[1] = 0;
  OUTLINED_FUNCTION_99(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_361(v3, (__n128)xmmword_24205B150);
  OUTLINED_FUNCTION_9_0();
}

void ModalityXClientBoundFrame.speechProfileResponse.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v4 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v4);
  v5 = OUTLINED_FUNCTION_72();
  v6 = OUTLINED_FUNCTION_27(v5);
  v7 = OUTLINED_FUNCTION_49((uint64_t)v6);
  v8 = type metadata accessor for ModalityXSpeechProfileBuildResponse(v7);
  *(_QWORD *)(v3 + 16) = OUTLINED_FUNCTION_16(v8);
  v9 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v9);
  v10 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v11 = OUTLINED_FUNCTION_4_0(v10);
  if (v12)
  {
    OUTLINED_FUNCTION_107(v11, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_7:
    OUTLINED_FUNCTION_52();
    v15 = (_QWORD *)(v0 + *(int *)(v1 + 20));
    *v15 = 0;
    v15[1] = 0;
    OUTLINED_FUNCTION_99(*(int *)(v1 + 24));
    OUTLINED_FUNCTION_361(v16, (__n128)xmmword_24205B150);
    goto LABEL_8;
  }
  v13 = OUTLINED_FUNCTION_45();
  if ((_DWORD)v13 != 5)
  {
    OUTLINED_FUNCTION_108(v13, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_38(v2, v14, type metadata accessor for ModalityXSpeechProfileBuildResponse);
LABEL_8:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_308();
}

uint64_t ModalityXClientBoundFrame.unknownFields.getter()
{
  return ModalityXServerBoundFrame.unknownFields.getter();
}

uint64_t ModalityXClientBoundFrame.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXClientBoundFrame);
}

uint64_t ModalityXServerBoundFrame.unknownFields.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_211(a1, a2);
  OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_146(v2, v3, v4, v5);
}

uint64_t (*ModalityXClientBoundFrame.unknownFields.modify())()
{
  type metadata accessor for ModalityXClientBoundFrame(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void static ModalityXClientBoundFrame.OneOf_Payload.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28[6];
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_19();
  v29 = v1;
  v30 = v2;
  type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_135(v4, v28[0]);
  type metadata accessor for ModalityXRequestMitigated(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_79();
  v28[4] = v6;
  v7 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXSpeechProfileRebuildNeeded(v7);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v8);
  v28[3] = (uint64_t)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXASRResult(v10);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_336(v12, v28[0]);
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v13);
  v28[1] = (uint64_t)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OUTLINED_FUNCTION_139();
  type metadata accessor for ModalityXRequestComplete(v15);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v16);
  v28[0] = (uint64_t)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_377();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_138();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_279();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_437();
  v23 = MEMORY[0x24BDAC7A8](v22);
  MEMORY[0x24BDAC7A8](v23);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXClientBoundFrame.OneOf_Payload, ModalityXClientBoundFrame.OneOf_Payload));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_335();
  v26 = v0 + v25;
  OUTLINED_FUNCTION_415(v29, v0);
  OUTLINED_FUNCTION_415(v30, v26);
  v27 = (char *)sub_242007138 + 4 * byte_24205B1CA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_242007138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);

  v4 = OUTLINED_FUNCTION_120();
  outlined init with copy of ModalityXSessionMetadata(v4, v5, v6);
  if (OUTLINED_FUNCTION_164())
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v1, type metadata accessor for ModalityXRequestComplete);
    OUTLINED_FUNCTION_204(v7, &demangling cache variable for type metadata for (ModalityXClientBoundFrame.OneOf_Payload, ModalityXClientBoundFrame.OneOf_Payload));
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata(v2, *(_QWORD *)(v3 - 144), type metadata accessor for ModalityXRequestComplete);
    OUTLINED_FUNCTION_289();
    static ModalityXRequestComplete.== infix(_:_:)();
    v8 = OUTLINED_FUNCTION_379();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v8, v9);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v1, type metadata accessor for ModalityXRequestComplete);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v0, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
  }
  OUTLINED_FUNCTION_3_0();
}

void static ModalityXRequestComplete.== infix(_:_:)()
{
  static ModalityXStreamingSpeechProfileCommit.== infix(_:_:)();
}

void static ModalityXProcessingError.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;

  OUTLINED_FUNCTION_163();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_92();
  v8 = type metadata accessor for ModalityXProcessingError(v7);
  v9 = *(int *)(v8 + 20);
  v10 = *(_BYTE *)(v4 + v9 + 4);
  v11 = *(unsigned __int8 *)(v2 + v9 + 4);
  if ((v10 & 1) != 0)
  {
    if (!v11)
      goto LABEL_31;
  }
  else
  {
    OUTLINED_FUNCTION_29();
    if ((v12 & 1) != 0)
      goto LABEL_31;
  }
  OUTLINED_FUNCTION_77();
  if (!v15)
  {
    if (v13)
      goto LABEL_31;
LABEL_14:
    v19 = *(int *)(v8 + 28);
    v20 = *(unsigned __int8 *)(v4 + v19);
    v21 = *(unsigned __int8 *)(v2 + v19);
    if (v20 == 3)
    {
      if (v21 != 3)
        goto LABEL_31;
    }
    else if (v21 == 3 || v20 != v21)
    {
      goto LABEL_31;
    }
    OUTLINED_FUNCTION_77();
    if (v25)
    {
      if (!v23)
        goto LABEL_31;
      OUTLINED_FUNCTION_24(v24);
      v28 = v18 && v26 == v27;
      if (!v28 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_31;
    }
    else if (v23)
    {
      goto LABEL_31;
    }
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_111();
    OUTLINED_FUNCTION_159(v0);
    goto LABEL_31;
  }
  if (v13)
  {
    OUTLINED_FUNCTION_24(v14);
    v18 = v18 && v16 == v17;
    if (v18 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_14;
  }
LABEL_31:
  OUTLINED_FUNCTION_344();
  OUTLINED_FUNCTION_90();
}

#error "24200773C: call analysis failed (funcsize=186)"

void static ModalityXSpeechProfileRebuildNeeded.== infix(_:_:)()
{
  static ModalityXStreamingSpeechProfileCommit.== infix(_:_:)();
}

void static ModalityXRequestMitigated.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  int v16;
  int v17;

  OUTLINED_FUNCTION_163();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_92();
  v8 = type metadata accessor for ModalityXRequestMitigated(v7);
  OUTLINED_FUNCTION_77();
  if (!v11)
  {
    if (v9)
      goto LABEL_17;
LABEL_10:
    v15 = *(int *)(v8 + 24);
    v16 = *(unsigned __int8 *)(v4 + v15);
    v17 = *(unsigned __int8 *)(v2 + v15);
    if (v16 == 8)
    {
      if (v17 != 8)
        goto LABEL_17;
    }
    else if (v17 == 8 || v16 != v17)
    {
      goto LABEL_17;
    }
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_111();
    OUTLINED_FUNCTION_159(v0);
    goto LABEL_17;
  }
  if (v9)
  {
    OUTLINED_FUNCTION_24(v10);
    v14 = v14 && v12 == v13;
    if (v14 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_10;
  }
LABEL_17:
  OUTLINED_FUNCTION_344();
  OUTLINED_FUNCTION_90();
}

void static ModalityXSpeechProfileBuildResponse.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  int v38;
  int v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_19();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_15();
  v55 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x24BDAC7A8](v6);
  v54 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v8);
  v53 = (uint64_t)&v51 - v9;
  v10 = OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_135(v12, v51);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXProcessingError?, ModalityXProcessingError?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_157();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_57(v16, v51);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_96();
  MEMORY[0x24BDAC7A8](v18);
  v19 = OUTLINED_FUNCTION_400();
  v20 = type metadata accessor for ModalityXSpeechProfileBuildResponse(v19);
  OUTLINED_FUNCTION_391();
  if (!v23)
  {
    v52 = v5;
    if (v21)
      goto LABEL_19;
LABEL_10:
    v27 = v4;
    OUTLINED_FUNCTION_37(v4 + *(int *)(v20 + 24));
    OUTLINED_FUNCTION_51(v58 + *(int *)(v20 + 24), v0);
    v28 = v2 + *(int *)(v13 + 48);
    OUTLINED_FUNCTION_51(v1, v2);
    OUTLINED_FUNCTION_51(v0, v28);
    OUTLINED_FUNCTION_14(v2, 1, v10);
    if (v26)
    {
      OUTLINED_FUNCTION_140(v0);
      OUTLINED_FUNCTION_140(v1);
      v30 = OUTLINED_FUNCTION_14(v28, 1, v10);
      if (v26)
      {
        OUTLINED_FUNCTION_394(v30, &demangling cache variable for type metadata for ModalityXProcessingError?);
        goto LABEL_21;
      }
    }
    else
    {
      v31 = v57;
      OUTLINED_FUNCTION_399(v2, v29, &demangling cache variable for type metadata for ModalityXProcessingError?);
      OUTLINED_FUNCTION_14(v28, 1, v10);
      if (!v32)
      {
        v34 = v56;
        OUTLINED_FUNCTION_432(v28, v56);
        OUTLINED_FUNCTION_303();
        static ModalityXProcessingError.== infix(_:_:)();
        v36 = v35;
        OUTLINED_FUNCTION_168(v34);
        OUTLINED_FUNCTION_165(v0);
        OUTLINED_FUNCTION_165(v1);
        OUTLINED_FUNCTION_168(v31);
        OUTLINED_FUNCTION_165(v2);
        if ((v36 & 1) == 0)
          goto LABEL_19;
LABEL_21:
        v37 = *(int *)(v20 + 28);
        v38 = *(unsigned __int8 *)(v4 + v37);
        v39 = *(unsigned __int8 *)(v58 + v37);
        if (v38 == 2)
        {
          if (v39 != 2)
            goto LABEL_19;
        }
        else
        {
          if (v39 == 2)
            goto LABEL_19;
          OUTLINED_FUNCTION_176();
          if ((v40 & 1) == 0)
            goto LABEL_19;
        }
        OUTLINED_FUNCTION_337();
        if (!v26 & v41)
        {
          OUTLINED_FUNCTION_343();
          if (!v26 & v41)
          {
            OUTLINED_FUNCTION_137();
            if (!v46 & v45)
            {
              OUTLINED_FUNCTION_259();
              if (!v26 & v41)
              {
                v49 = v53;
                OUTLINED_FUNCTION_221(v53, v27);
                v50 = v54;
                OUTLINED_FUNCTION_221(v54, v58);
                lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                OUTLINED_FUNCTION_65();
                OUTLINED_FUNCTION_160(v50);
                OUTLINED_FUNCTION_160(v49);
                goto LABEL_19;
              }
            }
            else
            {
              OUTLINED_FUNCTION_259();
              if (!(!v48 & v47))
                OUTLINED_FUNCTION_60();
            }
            v43 = OUTLINED_FUNCTION_106();
LABEL_42:
            outlined consume of Data?(v43, v44);
            goto LABEL_19;
          }
        }
        else
        {
          OUTLINED_FUNCTION_343();
          if (!(!v42 & v41))
            OUTLINED_FUNCTION_203();
        }
        v43 = OUTLINED_FUNCTION_225();
        goto LABEL_42;
      }
      OUTLINED_FUNCTION_419();
      OUTLINED_FUNCTION_262();
      OUTLINED_FUNCTION_398(v33, type metadata accessor for ModalityXProcessingError);
    }
    OUTLINED_FUNCTION_394(v30, &demangling cache variable for type metadata for (ModalityXProcessingError?, ModalityXProcessingError?));
    goto LABEL_19;
  }
  if (v21)
  {
    v52 = v5;
    OUTLINED_FUNCTION_24(v22);
    v26 = v26 && v24 == v25;
    if (v26 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_10;
  }
LABEL_19:
  OUTLINED_FUNCTION_265();
  OUTLINED_FUNCTION_3_0();
}

void ModalityXClientBoundFrame.init()(uint64_t a1@<X8>)
{
  ModalityXServerBoundFrame.init()(type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload, a1);
}

void ModalityXServerBoundFrame.init()(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  __swift_storeEnumTagSinglePayload(a2, 1, 1, v3);
  OUTLINED_FUNCTION_328();
  UnknownStorage.init()();
  OUTLINED_FUNCTION_1_0();
}

void ModalityXSessionMetadata.deviceInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_184();
  v3 = type metadata accessor for ModalityXSessionMetadata(v2);
  OUTLINED_FUNCTION_358(*(int *)(v3 + 20));
  v4 = (int *)OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_14(v0, 1, (uint64_t)v4);
  if (v6)
  {
    OUTLINED_FUNCTION_52();
    OUTLINED_FUNCTION_83(v4[5]);
    OUTLINED_FUNCTION_406();
    OUTLINED_FUNCTION_83(v7);
    OUTLINED_FUNCTION_83(v4[8]);
    OUTLINED_FUNCTION_83(v4[9]);
    OUTLINED_FUNCTION_380(v8, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  }
  else
  {
    OUTLINED_FUNCTION_38(v0, v5, type metadata accessor for ModalityXDeviceInfo);
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXSessionMetadata.deviceInfo.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = type metadata accessor for ModalityXSessionMetadata(0);
  OUTLINED_FUNCTION_109(v0, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  v1 = OUTLINED_FUNCTION_120();
  outlined init with take of ModalityXSessionMetadata(v1, v2, v3);
  OUTLINED_FUNCTION_212();
  v4 = OUTLINED_FUNCTION_384();
  return OUTLINED_FUNCTION_317(v4, v5, v6, v7);
}

void ModalityXSessionMetadata.deviceInfo.modify()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  *(_QWORD *)(v2 + 8) = v5;
  v6 = OUTLINED_FUNCTION_212();
  *(_QWORD *)(v2 + 24) = OUTLINED_FUNCTION_124(v6);
  v7 = OUTLINED_FUNCTION_158();
  v8 = OUTLINED_FUNCTION_278((uint64_t)v7);
  v9 = *(int *)(type metadata accessor for ModalityXSessionMetadata(v8) + 20);
  *(_DWORD *)(v2 + 40) = v9;
  OUTLINED_FUNCTION_71(v0 + v9, (uint64_t)v5);
  v10 = OUTLINED_FUNCTION_14((uint64_t)v5, 1, (uint64_t)v1);
  if (v12)
  {
    OUTLINED_FUNCTION_357();
    OUTLINED_FUNCTION_266(v1[5]);
    OUTLINED_FUNCTION_407();
    OUTLINED_FUNCTION_266(v13);
    OUTLINED_FUNCTION_266(v1[8]);
    OUTLINED_FUNCTION_266(v1[9]);
    OUTLINED_FUNCTION_204(v14, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v10, v11, type metadata accessor for ModalityXDeviceInfo);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXSessionMetadata.deviceInfo.modify();
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_163();
  v1 = *(void **)v0;
  v2 = *(int *)(*(_QWORD *)v0 + 40);
  v3 = *(void **)(*(_QWORD *)v0 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v5 = **(_QWORD **)v0 + v2;
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_195(*(_QWORD *)(*(_QWORD *)v0 + 32), (uint64_t)v3);
    OUTLINED_FUNCTION_165(v5);
    OUTLINED_FUNCTION_395((uint64_t)v3);
    OUTLINED_FUNCTION_300();
    OUTLINED_FUNCTION_202(v4);
  }
  else
  {
    OUTLINED_FUNCTION_165(**(_QWORD **)v0 + v2);
    OUTLINED_FUNCTION_395(v4);
    OUTLINED_FUNCTION_300();
  }
  OUTLINED_FUNCTION_438();
  free(v3);
  OUTLINED_FUNCTION_433();
  OUTLINED_FUNCTION_42(v1);
}

void ModalityXSessionMetadata.hasDeviceInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_418();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8]();
  v2 = OUTLINED_FUNCTION_185();
  v3 = type metadata accessor for ModalityXSessionMetadata(v2);
  OUTLINED_FUNCTION_193(v0 + *(int *)(v3 + 20), v1);
  v4 = OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_14(v1, 1, v4);
  OUTLINED_FUNCTION_171(v1);
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ModalityXSessionMetadata.clearDeviceInfo()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for ModalityXSessionMetadata(0);
  v2 = v0 + *(int *)(v1 + 20);
  OUTLINED_FUNCTION_204(v1, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  v3 = OUTLINED_FUNCTION_212();
  OUTLINED_FUNCTION_317(v2, 1, 1, v3);
}

uint64_t ModalityXSessionMetadata.dataSharingOptInStatus.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 24)) & 1;
}

void ModalityXSessionMetadata.dataSharingOptInStatus.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 24)) = a1;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXSessionMetadata.dataSharingOptInStatus.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_371(a1);
  OUTLINED_FUNCTION_197(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSessionMetadata.hasDataSharingOptInStatus.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXSessionMetadata(0);
  return OUTLINED_FUNCTION_268(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXSessionMetadata.clearDataSharingOptInStatus()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXSessionMetadata(0);
  OUTLINED_FUNCTION_427(*(int *)(v0 + 24));
}

void ModalityXSessionMetadata.userInterfaceIdiom.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_260();
  v2 = type metadata accessor for ModalityXSessionMetadata(v1);
  OUTLINED_FUNCTION_236(*(_BYTE *)(v0 + *(int *)(v2 + 28)));
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXSessionMetadata.userInterfaceIdiom : ModalityXSessionMetadata(char *a1)
{
  char v1;

  v1 = *a1;
  ModalityXSessionMetadata.userInterfaceIdiom.setter(&v1);
}

void ModalityXSessionMetadata.userInterfaceIdiom.setter(char *a1)
{
  ModalityXSessionMetadata.userInterfaceIdiom.setter(a1, type metadata accessor for ModalityXSessionMetadata);
}

void ModalityXSessionMetadata.userInterfaceIdiom.modify(_QWORD *a1)
{
  int v1;

  v1 = *(_DWORD *)(OUTLINED_FUNCTION_371(a1) + 28);
  OUTLINED_FUNCTION_237(v1);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSessionMetadata.hasUserInterfaceIdiom.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 28)) != 8;
}

Swift::Void __swiftcall ModalityXSessionMetadata.clearUserInterfaceIdiom()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 28)) = 8;
}

void ModalityXSessionMetadata.language.getter()
{
  ModalityXSessionMetadata.language.getter(type metadata accessor for ModalityXSessionMetadata);
}

void key path setter for ModalityXSessionMetadata.language : ModalityXSessionMetadata(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXSessionMetadata.language.setter(v1, v2);
}

void ModalityXSessionMetadata.language.setter(uint64_t a1, uint64_t a2)
{
  ModalityXSessionMetadata.language.setter(a1, a2, type metadata accessor for ModalityXSessionMetadata);
}

void ModalityXSessionMetadata.language.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXSessionMetadata(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 32)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSessionMetadata.hasLanguage.getter()
{
  return ModalityXSessionMetadata.hasLanguage.getter(type metadata accessor for ModalityXSessionMetadata);
}

Swift::Void __swiftcall ModalityXSessionMetadata.clearLanguage()()
{
  ModalityXSessionMetadata.clearLanguage()(type metadata accessor for ModalityXSessionMetadata);
}

uint64_t (*ModalityXSessionMetadata.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXSpeechProfile.moreDataFollows.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXSpeechProfile(0) + 20)) & 1;
}

void ModalityXSpeechProfile.moreDataFollows.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ModalityXSpeechProfile(0) + 20)) = a1;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXSpeechProfile.moreDataFollows.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_227(a1);
  v2 = type metadata accessor for ModalityXSpeechProfile(v1);
  OUTLINED_FUNCTION_197(*(int *)(v2 + 20));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfile.hasMoreDataFollows.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXSpeechProfile(0);
  return OUTLINED_FUNCTION_268(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXSpeechProfile.clearMoreDataFollows()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXSpeechProfile(0);
  OUTLINED_FUNCTION_427(*(int *)(v0 + 20));
}

void ModalityXSpeechProfile.languageProfile.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = type metadata accessor for ModalityXSpeechProfile(0);
  v1 = OUTLINED_FUNCTION_123(*(int *)(v0 + 24));
  outlined copy of Data?(v1, v2);
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXSpeechProfile.languageProfile : ModalityXSpeechProfile(uint64_t a1)
{
  outlined copy of Data._Representation(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  ModalityXSpeechProfile.languageProfile.setter();
}

void ModalityXSpeechProfile.languageProfile.setter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_119();
  v1 = type metadata accessor for ModalityXSpeechProfile(v0);
  OUTLINED_FUNCTION_180(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_9_0();
}

void ModalityXSpeechProfile.languageProfile.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_121(a1);
  v2 = type metadata accessor for ModalityXSpeechProfile(v1);
  v3 = OUTLINED_FUNCTION_56(*(int *)(v2 + 24));
  OUTLINED_FUNCTION_235(v3, v4, v5);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfile.hasLanguageProfile.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXSpeechProfile(0);
  return OUTLINED_FUNCTION_122(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXSpeechProfile.clearLanguageProfile()()
{
  _OWORD *v0;
  uint64_t v1;

  v1 = type metadata accessor for ModalityXSpeechProfile(0);
  OUTLINED_FUNCTION_198(*(int *)(v1 + 24));
  *v0 = xmmword_24205B150;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXSpeechProfile.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXBeginRequest.requestID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20));
  OUTLINED_FUNCTION_5_0();
  if (!*(_QWORD *)(v1 + 24))
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXBeginRequest.requestID : ModalityXBeginRequest()
{
  swift_bridgeObjectRetain();
  ModalityXBeginRequest.requestID.setter();
}

void ModalityXBeginRequest.requestID.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_119();
  type metadata accessor for ModalityXBeginRequest(v4);
  if ((OUTLINED_FUNCTION_233() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v5 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v1 + v3) = OUTLINED_FUNCTION_401(v5);
    OUTLINED_FUNCTION_41();
  }
  v6 = *(_QWORD *)(v1 + v3);
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_112();
}

void ModalityXBeginRequest.requestID.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_322((uint64_t)v2);
  v4 = *(_QWORD *)(v0 + v3);
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v4 + 24))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v1 + 72) = v5;
  *(_QWORD *)(v1 + 80) = v6;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_163();
  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *(_QWORD *)(*v0 + 80);
  if ((v4 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v5 = *(int *)(v1 + 96);
      v6 = *(_QWORD *)(v1 + 88);
      type metadata accessor for ModalityXBeginRequest._StorageClass(0);
      OUTLINED_FUNCTION_10();
      v7 = OUTLINED_FUNCTION_40();
      *(_QWORD *)(v6 + v5) = OUTLINED_FUNCTION_401(v7);
      OUTLINED_FUNCTION_41();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v1 + 88) + *(int *)(v1 + 96));
    OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(v8 + 16) = v2;
    *(_QWORD *)(v8 + 24) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v1 + 96);
      v10 = *(_QWORD *)(v1 + 88);
      type metadata accessor for ModalityXBeginRequest._StorageClass(0);
      OUTLINED_FUNCTION_10();
      v11 = OUTLINED_FUNCTION_40();
      *(_QWORD *)(v10 + v9) = OUTLINED_FUNCTION_401(v11);
      OUTLINED_FUNCTION_41();
    }
    v12 = *(_QWORD *)(*(_QWORD *)(v1 + 88) + *(int *)(v1 + 96));
    OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(v12 + 16) = v2;
    *(_QWORD *)(v12 + 24) = v3;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_42((void *)v1);
}

void ModalityXBeginRequest.hasRequestID.getter()
{
  type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXBeginRequest.clearRequestID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for ModalityXBeginRequest(0);
  if ((OUTLINED_FUNCTION_58() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v2 = OUTLINED_FUNCTION_40();
    v3 = OUTLINED_FUNCTION_239(v2);
    OUTLINED_FUNCTION_33(v3);
  }
  v4 = *(_QWORD *)(v0 + v1);
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)(v4 + 24) = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginRequest.inputOrigin.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_260();
  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ModalityXBeginRequest(v1) + 20));
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_236(*(_BYTE *)(v2 + 32));
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXBeginRequest.inputOrigin : ModalityXBeginRequest(char *a1)
{
  char v1;

  v1 = *a1;
  ModalityXBeginRequest.inputOrigin.setter(&v1);
}

void ModalityXBeginRequest.inputOrigin.setter(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  type metadata accessor for ModalityXBeginRequest(0);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v4 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v1 + v2) = OUTLINED_FUNCTION_239(v4);
    OUTLINED_FUNCTION_41();
  }
  v5 = *(_QWORD *)(v1 + v2);
  OUTLINED_FUNCTION_7_0();
  *(_BYTE *)(v5 + 32) = v3;
  OUTLINED_FUNCTION_112();
}

void ModalityXBeginRequest.inputOrigin.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_73();
  *v0 = v2;
  v2[9] = v1;
  v3 = *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20);
  *((_DWORD *)v2 + 20) = v3;
  v4 = *(_QWORD *)(v1 + v3);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_403(*(_BYTE *)(v4 + 32));
  OUTLINED_FUNCTION_9_0();
}

{
  char v0;
  char v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  OUTLINED_FUNCTION_163();
  v1 = v0;
  v3 = *v2;
  v4 = *(_BYTE *)(*v2 + 84);
  v5 = OUTLINED_FUNCTION_345();
  if ((v1 & 1) == 0)
  {
    if ((v5 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((v5 & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v8 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v7 + v6) = ModalityXBeginRequest._StorageClass.init(copying:)(v8);
    OUTLINED_FUNCTION_41();
  }
LABEL_4:
  v9 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80)) + 32);
  OUTLINED_FUNCTION_7_0();
  *v9 = v4;
  OUTLINED_FUNCTION_42((void *)v3);
}

void ModalityXBeginRequest.hasInputOrigin.getter()
{
  type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXBeginRequest.clearInputOrigin()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for ModalityXBeginRequest(0);
  if ((OUTLINED_FUNCTION_58() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v2 = OUTLINED_FUNCTION_40();
    v3 = OUTLINED_FUNCTION_239(v2);
    OUTLINED_FUNCTION_33(v3);
  }
  v4 = *(_QWORD *)(v0 + v1);
  OUTLINED_FUNCTION_7_0();
  *(_BYTE *)(v4 + 32) = 19;
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginRequest.audioMetadata.getter()
{
  ModalityXBeginRequest.audioMetadata.getter();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_411();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_333();
  v6 = *(_QWORD *)(v0 + *(int *)(v2(v5) + 20)) + *v1;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_71(v6, v3);
  v7 = OUTLINED_FUNCTION_286();
  OUTLINED_FUNCTION_14(v3, 1, v7);
  if (v9)
  {
    ModalityXAudioMetadata.init()();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v3, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  }
  else
  {
    OUTLINED_FUNCTION_38(v3, v8, type metadata accessor for ModalityXAudioMetadata);
  }
  OUTLINED_FUNCTION_12();
}

uint64_t ModalityXBeginRequest.audioMetadata.setter()
{
  return ModalityXBeginRequest.audioMetadata.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  void (*v5)(_QWORD);
  void (*v6)(_QWORD);
  uint64_t (*v7)(_QWORD);
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_19();
  v23 = v1;
  v24 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)&v22 - v11;
  v13 = *(int *)(v8(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v6(0);
    OUTLINED_FUNCTION_10();
    v14 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v13) = v4(v14);
    OUTLINED_FUNCTION_41();
  }
  outlined init with take of ModalityXSessionMetadata(v10, (uint64_t)v12, type metadata accessor for ModalityXAudioMetadata);
  v15 = OUTLINED_FUNCTION_286();
  OUTLINED_FUNCTION_428((uint64_t)v12, 0, v16, v15);
  v17 = OUTLINED_FUNCTION_408();
  outlined init with take of ModalityXAudioMetadata?(v17, v18);
  OUTLINED_FUNCTION_7_0();
  v19 = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_434(v19, v20, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_endAccess();
  return OUTLINED_FUNCTION_341();
}

void ModalityXBeginRequest.audioMetadata.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v2 = OUTLINED_FUNCTION_423();
  *v0 = v2;
  v2[3] = v1;
  v3 = OUTLINED_FUNCTION_72();
  v4 = OUTLINED_FUNCTION_27(v3);
  v2[4] = v4;
  v5 = OUTLINED_FUNCTION_286();
  v2[5] = OUTLINED_FUNCTION_128(v5);
  v2[6] = OUTLINED_FUNCTION_158();
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20))
     + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_71(v6, (uint64_t)v4);
  v7 = OUTLINED_FUNCTION_14((uint64_t)v4, 1, v5);
  if (v9)
  {
    OUTLINED_FUNCTION_357();
    v10 = OUTLINED_FUNCTION_153();
    v11 = OUTLINED_FUNCTION_254(v10);
    OUTLINED_FUNCTION_204(v11, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v7, v8, type metadata accessor for ModalityXAudioMetadata);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXBeginRequest.audioMetadata.modify();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  void *v3;
  uint64_t v4;
  void *v5;
  char v6;

  OUTLINED_FUNCTION_163();
  v2 = v1;
  v3 = *(void **)v0;
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v5 = *(void **)(*(_QWORD *)v0 + 48);
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_252(*(_QWORD *)(*(_QWORD *)v0 + 48), v4);
    v2(v4);
    OUTLINED_FUNCTION_194((uint64_t)v5);
  }
  else
  {
    v1(*(_QWORD *)(*(_QWORD *)v0 + 48));
  }
  free(v5);
  OUTLINED_FUNCTION_438();
  OUTLINED_FUNCTION_433();
  OUTLINED_FUNCTION_42(v3);
}

void ModalityXBeginRequest.hasAudioMetadata.getter()
{
  ModalityXBeginRequest.hasAudioMetadata.getter((uint64_t)type metadata accessor for ModalityXBeginRequest, &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata);
}

Swift::Void __swiftcall ModalityXBeginRequest.clearAudioMetadata()()
{
  ModalityXBeginRequest.clearAudioMetadata()();
}

void ModalityXBeginRequest.enablePartialResults.getter()
{
  ModalityXBeginRequest.enablePartialResults.getter(type metadata accessor for ModalityXBeginRequest);
}

void ModalityXBeginRequest.enablePartialResults.setter(uint64_t a1)
{
  ModalityXBeginRequest.enablePartialResults.setter(a1, type metadata accessor for ModalityXBeginRequest, (uint64_t)type metadata accessor for ModalityXBeginRequest._StorageClass, (uint64_t)ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
}

void ModalityXBeginRequest.enablePartialResults.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_73();
  *v0 = v2;
  v2[9] = v1;
  v3 = type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_85(v3);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.enablePartialResults.modify();
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  char v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;

  OUTLINED_FUNCTION_19();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = *v6;
  v8 = *(_BYTE *)(*v6 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((v5 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v10 = *(int *)(v7 + 80);
    v11 = *(_QWORD *)(v7 + 72);
    OUTLINED_FUNCTION_285();
    OUTLINED_FUNCTION_10();
    v12 = swift_retain();
    *(_QWORD *)(v11 + v10) = v3(v12);
    OUTLINED_FUNCTION_41();
  }
LABEL_4:
  v13 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v7 + 72) + *(int *)(v7 + 80)) + *v1);
  OUTLINED_FUNCTION_7_0();
  *v13 = v8;
  OUTLINED_FUNCTION_68((void *)v7);
}

void ModalityXBeginRequest.hasEnablePartialResults.getter()
{
  ModalityXBeginRequest.hasEnablePartialResults.getter(type metadata accessor for ModalityXBeginRequest);
}

Swift::Void __swiftcall ModalityXBeginRequest.clearEnablePartialResults()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for ModalityXBeginRequest(0);
  if ((OUTLINED_FUNCTION_58() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v0 = OUTLINED_FUNCTION_40();
    v1 = OUTLINED_FUNCTION_239(v0);
    OUTLINED_FUNCTION_33(v1);
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginRequest.isPromptedDictation.getter()
{
  ModalityXBeginRequest.enablePartialResults.getter(type metadata accessor for ModalityXBeginRequest);
}

void ModalityXBeginRequest.enablePartialResults.getter(uint64_t (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

void ModalityXBeginRequest.isPromptedDictation.setter(uint64_t a1)
{
  ModalityXBeginRequest.enablePartialResults.setter(a1, type metadata accessor for ModalityXBeginRequest, (uint64_t)type metadata accessor for ModalityXBeginRequest._StorageClass, (uint64_t)ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
}

void ModalityXBeginRequest.enablePartialResults.setter(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  _BYTE *v9;

  v8 = a1;
  OUTLINED_FUNCTION_211(a1, a2);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    OUTLINED_FUNCTION_295();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v5 + v6) = OUTLINED_FUNCTION_390();
    OUTLINED_FUNCTION_41();
  }
  v9 = (_BYTE *)(*(_QWORD *)(v5 + v6) + *a5);
  OUTLINED_FUNCTION_7_0();
  *v9 = v8 & 1;
  OUTLINED_FUNCTION_162();
}

void ModalityXBeginRequest.isPromptedDictation.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_73();
  *v0 = v2;
  v2[9] = v1;
  v3 = type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_85(v3);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.enablePartialResults.modify();
}

void ModalityXBeginRequest.hasIsPromptedDictation.getter()
{
  ModalityXBeginRequest.hasEnablePartialResults.getter(type metadata accessor for ModalityXBeginRequest);
}

void ModalityXBeginRequest.hasEnablePartialResults.getter(uint64_t (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXBeginRequest.clearIsPromptedDictation()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for ModalityXBeginRequest(0);
  if ((OUTLINED_FUNCTION_58() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v0 = OUTLINED_FUNCTION_40();
    v1 = OUTLINED_FUNCTION_239(v0);
    OUTLINED_FUNCTION_33(v1);
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginRequest.isPromptedConfirmation.getter()
{
  ModalityXBeginRequest.enablePartialResults.getter(type metadata accessor for ModalityXBeginRequest);
}

void ModalityXBeginRequest.isPromptedConfirmation.setter(uint64_t a1)
{
  ModalityXBeginRequest.enablePartialResults.setter(a1, type metadata accessor for ModalityXBeginRequest, (uint64_t)type metadata accessor for ModalityXBeginRequest._StorageClass, (uint64_t)ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
}

void ModalityXBeginRequest.isPromptedConfirmation.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_73();
  *v0 = v2;
  v2[9] = v1;
  v3 = type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_85(v3);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.enablePartialResults.modify();
}

void ModalityXBeginRequest.hasIsPromptedConfirmation.getter()
{
  ModalityXBeginRequest.hasEnablePartialResults.getter(type metadata accessor for ModalityXBeginRequest);
}

Swift::Void __swiftcall ModalityXBeginRequest.clearIsPromptedConfirmation()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for ModalityXBeginRequest(0);
  if ((OUTLINED_FUNCTION_58() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v0 = OUTLINED_FUNCTION_40();
    v1 = OUTLINED_FUNCTION_239(v0);
    OUTLINED_FUNCTION_33(v1);
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginRequest.foregroundAppID.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginRequest, &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
}

void key path setter for ModalityXBeginRequest.foregroundAppID : ModalityXBeginRequest(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginRequest.foregroundAppID.setter(v1, v2);
}

void ModalityXBeginRequest.foregroundAppID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginRequest, (void (*)(_QWORD))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
}

void ModalityXBeginRequest.foregroundAppID.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_322((uint64_t)v2);
  v4 = *(_QWORD *)(v0 + v3)
     + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v4 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v1 + 72) = v5;
  *(_QWORD *)(v1 + 80) = v6;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_342();
  v4 = *(_QWORD *)(v3 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_386();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v7 = *(int *)(v0 + 96);
      v8 = *(_QWORD *)(v0 + 88);
      OUTLINED_FUNCTION_285();
      OUTLINED_FUNCTION_10();
      v9 = OUTLINED_FUNCTION_255();
      *(_QWORD *)(v8 + v7) = v2(v9);
      OUTLINED_FUNCTION_41();
    }
    v10 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 88) + *(int *)(v0 + 96)) + *v1);
    OUTLINED_FUNCTION_7_0();
    *v10 = v4;
    v10[1] = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v11 = *(int *)(v0 + 96);
      v12 = *(_QWORD *)(v0 + 88);
      OUTLINED_FUNCTION_285();
      OUTLINED_FUNCTION_10();
      v13 = OUTLINED_FUNCTION_255();
      *(_QWORD *)(v12 + v11) = v2(v13);
      OUTLINED_FUNCTION_41();
    }
    v14 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 88) + *(int *)(v0 + 96)) + *v1);
    OUTLINED_FUNCTION_7_0();
    *v14 = v4;
    v14[1] = v5;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_68((void *)v0);
}

void ModalityXBeginRequest.hasForegroundAppID.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginRequest);
}

Swift::Void __swiftcall ModalityXBeginRequest.clearForegroundAppID()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginRequest, (void (*)(_QWORD))type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
}

void ModalityXBeginRequest.isAutoPunctuationEnabled.getter()
{
  ModalityXBeginRequest.enablePartialResults.getter(type metadata accessor for ModalityXBeginRequest);
}

void ModalityXBeginRequest.isAutoPunctuationEnabled.setter(uint64_t a1)
{
  ModalityXBeginRequest.enablePartialResults.setter(a1, type metadata accessor for ModalityXBeginRequest, (uint64_t)type metadata accessor for ModalityXBeginRequest._StorageClass, (uint64_t)ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
}

void ModalityXBeginRequest.isAutoPunctuationEnabled.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_73();
  *v0 = v2;
  v2[9] = v1;
  v3 = type metadata accessor for ModalityXBeginRequest(0);
  OUTLINED_FUNCTION_85(v3);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.enablePartialResults.modify();
}

void ModalityXBeginRequest.hasIsAutoPunctuationEnabled.getter()
{
  ModalityXBeginRequest.hasEnablePartialResults.getter(type metadata accessor for ModalityXBeginRequest);
}

Swift::Void __swiftcall ModalityXBeginRequest.clearIsAutoPunctuationEnabled()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for ModalityXBeginRequest(0);
  if ((OUTLINED_FUNCTION_58() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginRequest._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v0 = OUTLINED_FUNCTION_40();
    v1 = OUTLINED_FUNCTION_239(v0);
    OUTLINED_FUNCTION_33(v1);
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_32();
}

uint64_t ModalityXBeginRequest.inlineLmeItems.getter()
{
  return ModalityXBeginRequest.inlineLmeItems.getter(type metadata accessor for ModalityXBeginRequest);
}

void key path setter for ModalityXBeginRequest.inlineLmeItems : ModalityXBeginRequest()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ModalityXBeginRequest.inlineLmeItems.setter(v0);
}

void ModalityXBeginRequest.inlineLmeItems.setter(uint64_t a1)
{
  ModalityXBeginRequest.inlineLmeItems.setter(a1, type metadata accessor for ModalityXBeginRequest, (uint64_t)type metadata accessor for ModalityXBeginRequest._StorageClass, (uint64_t)ModalityXBeginRequest._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
}

void ModalityXBeginRequest.inlineLmeItems.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = OUTLINED_FUNCTION_324();
  *v0 = v2;
  v2[10] = v1;
  v3 = *(int *)(type metadata accessor for ModalityXBeginRequest(0) + 20);
  *((_DWORD *)v2 + 22) = v3;
  v4 = (_QWORD *)(*(_QWORD *)(v1 + v3)
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  OUTLINED_FUNCTION_5_0();
  v2[9] = *v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.inlineLmeItems.modify();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_342();
  v4 = *(_QWORD *)(v3 + 72);
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_386();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v6 = *(int *)(v0 + 88);
      v7 = *(_QWORD *)(v0 + 80);
      OUTLINED_FUNCTION_285();
      OUTLINED_FUNCTION_10();
      v8 = OUTLINED_FUNCTION_255();
      *(_QWORD *)(v7 + v6) = v2(v8);
      OUTLINED_FUNCTION_41();
    }
    v9 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 80) + *(int *)(v0 + 88)) + *v1);
    OUTLINED_FUNCTION_7_0();
    *v9 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v10 = *(int *)(v0 + 88);
      v11 = *(_QWORD *)(v0 + 80);
      OUTLINED_FUNCTION_285();
      OUTLINED_FUNCTION_10();
      v12 = OUTLINED_FUNCTION_255();
      *(_QWORD *)(v11 + v10) = v2(v12);
      OUTLINED_FUNCTION_41();
    }
    v13 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 80) + *(int *)(v0 + 88)) + *v1);
    OUTLINED_FUNCTION_7_0();
    *v13 = v4;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_68((void *)v0);
}

uint64_t (*ModalityXBeginRequest.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXBeginDictation.audioMetadata.getter()
{
  ModalityXBeginRequest.audioMetadata.getter();
}

uint64_t ModalityXBeginDictation.audioMetadata.setter()
{
  return ModalityXBeginRequest.audioMetadata.setter();
}

uint64_t ModalityXBeginRequest._uniqueStorage()(void (*a1)(_QWORD), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  a1(0);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    OUTLINED_FUNCTION_376();
    OUTLINED_FUNCTION_10();
    v6 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v3 + v4) = a3(v6);
    OUTLINED_FUNCTION_41();
  }
  return OUTLINED_FUNCTION_244();
}

void ModalityXBeginDictation.audioMetadata.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v2 = OUTLINED_FUNCTION_423();
  *v0 = v2;
  v2[3] = v1;
  v3 = OUTLINED_FUNCTION_72();
  v4 = OUTLINED_FUNCTION_27(v3);
  v2[4] = v4;
  v5 = OUTLINED_FUNCTION_286();
  v2[5] = OUTLINED_FUNCTION_128(v5);
  v2[6] = OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_88();
  v7 = v6
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_71(v7, (uint64_t)v4);
  v8 = OUTLINED_FUNCTION_14((uint64_t)v4, 1, v5);
  if (v10)
  {
    OUTLINED_FUNCTION_357();
    v11 = OUTLINED_FUNCTION_153();
    v12 = OUTLINED_FUNCTION_254(v11);
    OUTLINED_FUNCTION_204(v12, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v8, v9, type metadata accessor for ModalityXAudioMetadata);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXBeginRequest.audioMetadata.modify();
}

void ModalityXBeginDictation.hasAudioMetadata.getter()
{
  ModalityXBeginRequest.hasAudioMetadata.getter((uint64_t)type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata);
}

void ModalityXBeginRequest.hasAudioMetadata.getter(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8]();
  v5 = *(_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_257() + 20)) + *a2;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_51(v5, v3);
  v6 = OUTLINED_FUNCTION_286();
  __swift_getEnumTagSinglePayload(v3, 1, v6);
  OUTLINED_FUNCTION_140(v3);
  OUTLINED_FUNCTION_12();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearAudioMetadata()()
{
  ModalityXBeginRequest.clearAudioMetadata()();
}

void ModalityXBeginRequest.clearAudioMetadata()()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_163();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8]();
  v4 = OUTLINED_FUNCTION_185();
  v3(v4);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    OUTLINED_FUNCTION_295();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)((char *)v3 + v0) = OUTLINED_FUNCTION_390();
    OUTLINED_FUNCTION_41();
  }
  v5 = OUTLINED_FUNCTION_286();
  OUTLINED_FUNCTION_428(v1, 1, v6, v5);
  OUTLINED_FUNCTION_7_0();
  v7 = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_434(v7, v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_endAccess();
  OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_90();
}

void ModalityXBeginDictation.requestID.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
}

void ModalityXBeginRequest.foregroundAppID.getter(uint64_t (*a1)(_QWORD), _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_25(a1) + 20)) + *a2;
  OUTLINED_FUNCTION_5_0();
  if (!*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXBeginDictation.requestID : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.requestID.setter(v1, v2);
}

void ModalityXBeginDictation.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
}

void ModalityXBeginRequest.foregroundAppID.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v12 = *(int *)(OUTLINED_FUNCTION_101(a1, a2, a3) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a4(0);
    OUTLINED_FUNCTION_10();
    v13 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v7 + v12) = a5(v13);
    OUTLINED_FUNCTION_41();
  }
  v14 = (_QWORD *)(*(_QWORD *)(v7 + v12) + *a6);
  OUTLINED_FUNCTION_7_0();
  *v14 = v8;
  v14[1] = v6;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_162();
}

void ModalityXBeginDictation.requestID.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasRequestID.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

void ModalityXBeginRequest.hasForegroundAppID.getter(uint64_t (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearRequestID()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
}

void ModalityXBeginRequest.clearForegroundAppID()(void (*a1)(_QWORD), void (*a2)(_QWORD), uint64_t (*a3)(uint64_t), _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  _QWORD *v10;

  a1(0);
  if ((OUTLINED_FUNCTION_233() & 1) == 0)
  {
    a2(0);
    OUTLINED_FUNCTION_10();
    v9 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v4 + v5) = a3(v9);
    OUTLINED_FUNCTION_41();
  }
  v10 = (_QWORD *)(*(_QWORD *)(v4 + v5) + *a4);
  OUTLINED_FUNCTION_7_0();
  *v10 = 0;
  v10[1] = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_112();
}

void ModalityXBeginDictation.fieldID.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
}

void key path setter for ModalityXBeginDictation.fieldID : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.fieldID.setter(v1, v2);
}

void ModalityXBeginDictation.fieldID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
}

void ModalityXBeginDictation.fieldID.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasFieldID.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearFieldID()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
}

void ModalityXBeginDictation.fieldLabel.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
}

void key path setter for ModalityXBeginDictation.fieldLabel : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.fieldLabel.setter(v1, v2);
}

void ModalityXBeginDictation.fieldLabel.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
}

void ModalityXBeginDictation.fieldLabel.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasFieldLabel.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearFieldLabel()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
}

void ModalityXBeginDictation.applicationName.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
}

void key path setter for ModalityXBeginDictation.applicationName : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.applicationName.setter(v1, v2);
}

void ModalityXBeginDictation.applicationName.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
}

void ModalityXBeginDictation.applicationName.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasApplicationName.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearApplicationName()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
}

void ModalityXBeginDictation.applicationVersion.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
}

void key path setter for ModalityXBeginDictation.applicationVersion : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.applicationVersion.setter(v1, v2);
}

void ModalityXBeginDictation.applicationVersion.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
}

void ModalityXBeginDictation.applicationVersion.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasApplicationVersion.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearApplicationVersion()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
}

void ModalityXBeginDictation.keyboardType.getter()
{
  uint64_t v0;
  char *v1;

  OUTLINED_FUNCTION_88();
  v1 = (char *)(v0
              + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_236(*v1);
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXBeginDictation.keyboardType : ModalityXBeginDictation(char *a1)
{
  char v1;

  v1 = *a1;
  ModalityXBeginDictation.keyboardType.setter(&v1);
}

void ModalityXBeginDictation.keyboardType.setter(char *a1)
{
  ModalityXBeginDictation.keyboardType.setter(a1, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
}

void ModalityXBeginDictation.keyboardType.modify()
{
  void *v0;
  uint64_t v1;
  char *v2;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_26((uint64_t)v0);
  v2 = (char *)(v1
              + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_403(*v2);
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginDictation.keyboardType.modify();
}

{
  _QWORD *v0;
  _QWORD *v1;
  char v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;

  OUTLINED_FUNCTION_163();
  v1 = v0;
  v3 = v2;
  v5 = *v4;
  v6 = *(_BYTE *)(*v4 + 84);
  v7 = OUTLINED_FUNCTION_345();
  if ((v3 & 1) == 0)
  {
    if ((v7 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((v7 & 1) == 0)
  {
LABEL_3:
    v8 = *(int *)(v5 + 80);
    v9 = *(_QWORD *)(v5 + 72);
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v10 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v9 + v8) = ModalityXBeginDictation._StorageClass.init(copying:)(v10);
    OUTLINED_FUNCTION_41();
  }
LABEL_4:
  v11 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 72) + *(int *)(v5 + 80)) + *v1);
  OUTLINED_FUNCTION_289();
  OUTLINED_FUNCTION_7_0();
  *v11 = v6;
  OUTLINED_FUNCTION_42((void *)v5);
}

void ModalityXBeginDictation.hasKeyboardType.getter()
{
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearKeyboardType()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  if ((OUTLINED_FUNCTION_36() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v2 = OUTLINED_FUNCTION_40();
    v3 = OUTLINED_FUNCTION_201(v2);
    OUTLINED_FUNCTION_33(v3);
  }
  v4 = (_BYTE *)(*(_QWORD *)(v0 + v1)
               + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  OUTLINED_FUNCTION_7_0();
  *v4 = 16;
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginDictation.keyboardReturnKey.getter()
{
  uint64_t v0;
  char *v1;

  OUTLINED_FUNCTION_88();
  v1 = (char *)(v0
              + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_236(*v1);
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXBeginDictation.keyboardReturnKey : ModalityXBeginDictation(char *a1)
{
  char v1;

  v1 = *a1;
  ModalityXBeginDictation.keyboardReturnKey.setter(&v1);
}

void ModalityXBeginDictation.keyboardReturnKey.setter(char *a1)
{
  ModalityXBeginDictation.keyboardType.setter(a1, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
}

void ModalityXBeginDictation.keyboardType.setter(char *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  _BYTE *v7;

  v5 = *a1;
  type metadata accessor for ModalityXBeginDictation(0);
  if ((OUTLINED_FUNCTION_233() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v6 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v2 + v3) = ModalityXBeginDictation._StorageClass.init(copying:)(v6);
    OUTLINED_FUNCTION_41();
  }
  v7 = (_BYTE *)(*(_QWORD *)(v2 + v3) + *a2);
  OUTLINED_FUNCTION_7_0();
  *v7 = v5;
  OUTLINED_FUNCTION_112();
}

void ModalityXBeginDictation.keyboardReturnKey.modify()
{
  void *v0;
  uint64_t v1;
  char *v2;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_26((uint64_t)v0);
  v2 = (char *)(v1
              + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_403(*v2);
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginDictation.keyboardType.modify();
}

void ModalityXBeginDictation.hasKeyboardReturnKey.getter()
{
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearKeyboardReturnKey()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  if ((OUTLINED_FUNCTION_36() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v2 = OUTLINED_FUNCTION_40();
    v3 = OUTLINED_FUNCTION_201(v2);
    OUTLINED_FUNCTION_33(v3);
  }
  v4 = (_BYTE *)(*(_QWORD *)(v0 + v1)
               + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  OUTLINED_FUNCTION_7_0();
  *v4 = 12;
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginDictation.selectedText.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
}

void key path setter for ModalityXBeginDictation.selectedText : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.selectedText.setter(v1, v2);
}

void ModalityXBeginDictation.selectedText.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
}

void ModalityXBeginDictation.selectedText.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasSelectedText.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearSelectedText()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
}

void ModalityXBeginDictation.prefixText.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
}

void key path setter for ModalityXBeginDictation.prefixText : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.prefixText.setter(v1, v2);
}

void ModalityXBeginDictation.prefixText.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
}

void ModalityXBeginDictation.prefixText.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasPrefixText.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearPrefixText()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
}

void ModalityXBeginDictation.postfixText.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
}

void key path setter for ModalityXBeginDictation.postfixText : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.postfixText.setter(v1, v2);
}

void ModalityXBeginDictation.postfixText.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
}

void ModalityXBeginDictation.postfixText.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasPostfixText.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearPostfixText()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
}

uint64_t ModalityXBeginDictation.inlineLmeItems.getter()
{
  return ModalityXBeginRequest.inlineLmeItems.getter(type metadata accessor for ModalityXBeginDictation);
}

uint64_t ModalityXBeginRequest.inlineLmeItems.getter(uint64_t (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_5_0();
  return swift_bridgeObjectRetain();
}

void key path setter for ModalityXBeginDictation.inlineLmeItems : ModalityXBeginDictation()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ModalityXBeginDictation.inlineLmeItems.setter(v0);
}

void ModalityXBeginDictation.inlineLmeItems.setter(uint64_t a1)
{
  ModalityXBeginRequest.inlineLmeItems.setter(a1, type metadata accessor for ModalityXBeginDictation, (uint64_t)type metadata accessor for ModalityXBeginDictation._StorageClass, (uint64_t)ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
}

void ModalityXBeginRequest.inlineLmeItems.setter(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v9;

  OUTLINED_FUNCTION_211(a1, a2);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    OUTLINED_FUNCTION_295();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v5 + v6) = OUTLINED_FUNCTION_390();
    OUTLINED_FUNCTION_41();
  }
  v9 = (uint64_t *)(*(_QWORD *)(v5 + v6) + *a5);
  OUTLINED_FUNCTION_7_0();
  *v9 = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_162();
}

void ModalityXBeginDictation.inlineLmeItems.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_327((uint64_t)v1);
  v3 = (_QWORD *)(v2
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  OUTLINED_FUNCTION_5_0();
  *(_QWORD *)(v0 + 72) = *v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.inlineLmeItems.modify();
}

uint64_t ModalityXBeginDictation.languages.getter()
{
  return ModalityXBeginRequest.inlineLmeItems.getter(type metadata accessor for ModalityXBeginDictation);
}

void key path setter for ModalityXBeginDictation.languages : ModalityXBeginDictation()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ModalityXBeginDictation.languages.setter(v0);
}

void ModalityXBeginDictation.languages.setter(uint64_t a1)
{
  ModalityXBeginRequest.inlineLmeItems.setter(a1, type metadata accessor for ModalityXBeginDictation, (uint64_t)type metadata accessor for ModalityXBeginDictation._StorageClass, (uint64_t)ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
}

void ModalityXBeginDictation.languages.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_327((uint64_t)v1);
  v3 = (_QWORD *)(v2
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
  OUTLINED_FUNCTION_5_0();
  *(_QWORD *)(v0 + 72) = *v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_370();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.inlineLmeItems.modify();
}

void ModalityXBeginDictation.region.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
}

void key path setter for ModalityXBeginDictation.region : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.region.setter(v1, v2);
}

void ModalityXBeginDictation.region.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
}

void ModalityXBeginDictation.region.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasRegion.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearRegion()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
}

void ModalityXBeginDictation.activationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_88();
  v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken;
  OUTLINED_FUNCTION_5_0();
  outlined copy of Data?(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXBeginDictation.activationToken : ModalityXBeginDictation(uint64_t a1)
{
  outlined copy of Data._Representation(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  ModalityXBeginDictation.activationToken.setter();
}

void ModalityXBeginDictation.activationToken.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;

  v4 = OUTLINED_FUNCTION_119();
  type metadata accessor for ModalityXBeginDictation(v4);
  if ((OUTLINED_FUNCTION_233() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v5 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v1 + v3) = ModalityXBeginDictation._StorageClass.init(copying:)(v5);
    OUTLINED_FUNCTION_41();
  }
  v6 = (uint64_t *)(*(_QWORD *)(v1 + v3)
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  OUTLINED_FUNCTION_7_0();
  v7 = *v6;
  v8 = v6[1];
  *v6 = v2;
  v6[1] = v0;
  outlined consume of Data?(v7, v8);
  OUTLINED_FUNCTION_112();
}

void ModalityXBeginDictation.activationToken.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2 = OUTLINED_FUNCTION_74();
  *v0 = v2;
  v2[11] = v1;
  v3 = *(int *)(type metadata accessor for ModalityXBeginDictation(0) + 20);
  *((_DWORD *)v2 + 24) = v3;
  v4 = (uint64_t *)(*(_QWORD *)(v1 + v3)
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  OUTLINED_FUNCTION_5_0();
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v4[1];
  v2[9] = v7;
  v2[10] = v8;
  outlined copy of Data?(v5, v6);
  OUTLINED_FUNCTION_9_0();
}

{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_163();
  v1 = *v0;
  if ((v2 & 1) != 0)
  {
    outlined copy of Data._Representation(*(_QWORD *)(*v0 + 72), *(_QWORD *)(*v0 + 80));
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v3 = *(int *)(v1 + 96);
      v4 = *(_QWORD *)(v1 + 88);
      type metadata accessor for ModalityXBeginDictation._StorageClass(0);
      OUTLINED_FUNCTION_10();
      v5 = OUTLINED_FUNCTION_40();
      *(_QWORD *)(v4 + v3) = ModalityXBeginDictation._StorageClass.init(copying:)(v5);
      OUTLINED_FUNCTION_41();
    }
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_402();
    outlined consume of Data._Representation(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v6 = *(int *)(v1 + 96);
      v7 = *(_QWORD *)(v1 + 88);
      type metadata accessor for ModalityXBeginDictation._StorageClass(0);
      OUTLINED_FUNCTION_10();
      v8 = OUTLINED_FUNCTION_40();
      *(_QWORD *)(v7 + v6) = ModalityXBeginDictation._StorageClass.init(copying:)(v8);
      OUTLINED_FUNCTION_41();
    }
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_402();
  }
  OUTLINED_FUNCTION_42((void *)v1);
}

void ModalityXBeginDictation.hasActivationToken.getter()
{
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearActivationToken()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  if ((OUTLINED_FUNCTION_36() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v2 = OUTLINED_FUNCTION_40();
    v3 = OUTLINED_FUNCTION_201(v2);
    OUTLINED_FUNCTION_33(v3);
  }
  v4 = (uint64_t *)(*(_QWORD *)(v0 + v1)
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  OUTLINED_FUNCTION_7_0();
  v5 = *v4;
  v6 = v4[1];
  *(_OWORD *)v4 = xmmword_24205B150;
  outlined consume of Data?(v5, v6);
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginDictation.censorSpeech.getter()
{
  ModalityXBeginRequest.enablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

void ModalityXBeginDictation.censorSpeech.setter(uint64_t a1)
{
  ModalityXBeginRequest.enablePartialResults.setter(a1, type metadata accessor for ModalityXBeginDictation, (uint64_t)type metadata accessor for ModalityXBeginDictation._StorageClass, (uint64_t)ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
}

void ModalityXBeginDictation.censorSpeech.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_26((uint64_t)v0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.enablePartialResults.modify();
}

void ModalityXBeginDictation.hasCensorSpeech.getter()
{
  ModalityXBeginRequest.hasEnablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearCensorSpeech()()
{
  uint64_t v0;
  uint64_t v1;

  if ((OUTLINED_FUNCTION_36() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v0 = OUTLINED_FUNCTION_40();
    v1 = OUTLINED_FUNCTION_201(v0);
    OUTLINED_FUNCTION_33(v1);
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginDictation.speakerIndependentRecognition.getter()
{
  ModalityXBeginRequest.enablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

void ModalityXBeginDictation.speakerIndependentRecognition.setter(uint64_t a1)
{
  ModalityXBeginRequest.enablePartialResults.setter(a1, type metadata accessor for ModalityXBeginDictation, (uint64_t)type metadata accessor for ModalityXBeginDictation._StorageClass, (uint64_t)ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
}

void ModalityXBeginDictation.speakerIndependentRecognition.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_26((uint64_t)v0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.enablePartialResults.modify();
}

void ModalityXBeginDictation.hasSpeakerIndependentRecognition.getter()
{
  ModalityXBeginRequest.hasEnablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearSpeakerIndependentRecognition()()
{
  uint64_t v0;
  uint64_t v1;

  if ((OUTLINED_FUNCTION_36() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v0 = OUTLINED_FUNCTION_40();
    v1 = OUTLINED_FUNCTION_201(v0);
    OUTLINED_FUNCTION_33(v1);
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginDictation.saveRequestAudio.getter()
{
  ModalityXBeginRequest.enablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

void ModalityXBeginDictation.saveRequestAudio.setter(uint64_t a1)
{
  ModalityXBeginRequest.enablePartialResults.setter(a1, type metadata accessor for ModalityXBeginDictation, (uint64_t)type metadata accessor for ModalityXBeginDictation._StorageClass, (uint64_t)ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
}

void ModalityXBeginDictation.saveRequestAudio.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_26((uint64_t)v0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.enablePartialResults.modify();
}

void ModalityXBeginDictation.hasSaveRequestAudio.getter()
{
  ModalityXBeginRequest.hasEnablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearSaveRequestAudio()()
{
  uint64_t v0;
  uint64_t v1;

  if ((OUTLINED_FUNCTION_36() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v0 = OUTLINED_FUNCTION_40();
    v1 = OUTLINED_FUNCTION_201(v0);
    OUTLINED_FUNCTION_33(v1);
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginDictation.keyboardIdentifier.getter()
{
  ModalityXBeginRequest.foregroundAppID.getter(type metadata accessor for ModalityXBeginDictation, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
}

void key path setter for ModalityXBeginDictation.keyboardIdentifier : ModalityXBeginDictation(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXBeginDictation.keyboardIdentifier.setter(v1, v2);
}

void ModalityXBeginDictation.keyboardIdentifier.setter(uint64_t a1, uint64_t a2)
{
  ModalityXBeginRequest.foregroundAppID.setter(a1, a2, type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
}

void ModalityXBeginDictation.keyboardIdentifier.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_13((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.foregroundAppID.modify();
}

void ModalityXBeginDictation.hasKeyboardIdentifier.getter()
{
  ModalityXBeginRequest.hasForegroundAppID.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearKeyboardIdentifier()()
{
  ModalityXBeginRequest.clearForegroundAppID()((void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation, (void (*)(_QWORD))type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
}

void ModalityXBeginDictation.enablePartialResults.getter()
{
  ModalityXBeginRequest.enablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

void ModalityXBeginDictation.enablePartialResults.setter(uint64_t a1)
{
  ModalityXBeginRequest.enablePartialResults.setter(a1, type metadata accessor for ModalityXBeginDictation, (uint64_t)type metadata accessor for ModalityXBeginDictation._StorageClass, (uint64_t)ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
}

void ModalityXBeginDictation.enablePartialResults.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_26((uint64_t)v0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.enablePartialResults.modify();
}

void ModalityXBeginDictation.hasEnablePartialResults.getter()
{
  ModalityXBeginRequest.hasEnablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearEnablePartialResults()()
{
  uint64_t v0;
  uint64_t v1;

  if ((OUTLINED_FUNCTION_36() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v0 = OUTLINED_FUNCTION_40();
    v1 = OUTLINED_FUNCTION_201(v0);
    OUTLINED_FUNCTION_33(v1);
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginDictation.inputOrigin.getter()
{
  uint64_t v0;
  char *v1;

  OUTLINED_FUNCTION_88();
  v1 = (char *)(v0
              + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_236(*v1);
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXBeginDictation.inputOrigin : ModalityXBeginDictation(char *a1)
{
  char v1;

  v1 = *a1;
  ModalityXBeginDictation.inputOrigin.setter(&v1);
}

void ModalityXBeginDictation.inputOrigin.setter(char *a1)
{
  ModalityXBeginDictation.keyboardType.setter(a1, &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
}

void ModalityXBeginDictation.inputOrigin.modify()
{
  void *v0;
  uint64_t v1;
  char *v2;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_26((uint64_t)v0);
  v2 = (char *)(v1
              + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_403(*v2);
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginDictation.keyboardType.modify();
}

void ModalityXBeginDictation.hasInputOrigin.getter()
{
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXBeginDictation.clearInputOrigin()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  if ((OUTLINED_FUNCTION_36() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v2 = OUTLINED_FUNCTION_40();
    v3 = OUTLINED_FUNCTION_201(v2);
    OUTLINED_FUNCTION_33(v3);
  }
  v4 = (_BYTE *)(*(_QWORD *)(v0 + v1)
               + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  OUTLINED_FUNCTION_7_0();
  *v4 = 19;
  OUTLINED_FUNCTION_32();
}

void ModalityXBeginDictation.isAutoPunctuationEnabled.getter()
{
  ModalityXBeginRequest.enablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

void ModalityXBeginDictation.isAutoPunctuationEnabled.setter(uint64_t a1)
{
  ModalityXBeginRequest.enablePartialResults.setter(a1, type metadata accessor for ModalityXBeginDictation, (uint64_t)type metadata accessor for ModalityXBeginDictation._StorageClass, (uint64_t)ModalityXBeginDictation._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
}

void ModalityXBeginDictation.isAutoPunctuationEnabled.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_26((uint64_t)v0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_118();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXBeginRequest.enablePartialResults.modify();
}

void ModalityXBeginDictation.hasIsAutoPunctuationEnabled.getter()
{
  ModalityXBeginRequest.hasEnablePartialResults.getter(type metadata accessor for ModalityXBeginDictation);
}

Swift::Void __swiftcall ModalityXBeginDictation.clearIsAutoPunctuationEnabled()()
{
  uint64_t v0;
  uint64_t v1;

  if ((OUTLINED_FUNCTION_36() & 1) == 0)
  {
    type metadata accessor for ModalityXBeginDictation._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v0 = OUTLINED_FUNCTION_40();
    v1 = OUTLINED_FUNCTION_201(v0);
    OUTLINED_FUNCTION_33(v1);
  }
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_214();
  OUTLINED_FUNCTION_32();
}

uint64_t (*ModalityXBeginDictation.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXCancelRequest.requestID.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXCancelRequest);
}

void key path setter for ModalityXCancelRequest.requestID : ModalityXCancelRequest(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXCancelRequest.requestID.setter(v1, v2);
}

void ModalityXCancelRequest.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXCancelRequest);
}

void ModalityXCancelRequest.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXCancelRequest(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXCancelRequest.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXCancelRequest);
}

Swift::Void __swiftcall ModalityXCancelRequest.clearRequestID()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXCancelRequest);
}

void ModalityXCancelRequest.reason.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_260();
  v2 = type metadata accessor for ModalityXCancelRequest(v1);
  OUTLINED_FUNCTION_236(*(_BYTE *)(v0 + *(int *)(v2 + 24)));
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXCancelRequest.reason : ModalityXCancelRequest(char *a1)
{
  char v1;

  v1 = *a1;
  ModalityXCancelRequest.reason.setter(&v1);
}

void ModalityXCancelRequest.reason.setter(char *a1)
{
  ModalityXCancelRequest.reason.setter(a1, type metadata accessor for ModalityXCancelRequest);
}

void ModalityXCancelRequest.reason.modify(_QWORD *a1)
{
  uint64_t v1;
  int v2;

  v1 = OUTLINED_FUNCTION_227(a1);
  v2 = *(_DWORD *)(type metadata accessor for ModalityXCancelRequest(v1) + 24);
  OUTLINED_FUNCTION_237(v2);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXCancelRequest.hasReason.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXCancelRequest(0) + 24)) != 3;
}

Swift::Void __swiftcall ModalityXCancelRequest.clearReason()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXCancelRequest(0) + 24)) = 3;
}

uint64_t (*ModalityXCancelRequest.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXAudioFrame.requestID.getter()
{
  ModalityXAudioFrame.requestID.getter(type metadata accessor for ModalityXAudioFrame);
}

void key path setter for ModalityXAudioFrame.requestID : ModalityXAudioFrame(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXAudioFrame.requestID.setter(v1, v2);
}

void ModalityXAudioFrame.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXAudioFrame.requestID.setter(a1, a2, type metadata accessor for ModalityXAudioFrame);
}

void ModalityXAudioFrame.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXAudioFrame(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 24)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXAudioFrame.hasRequestID.getter()
{
  return ModalityXAudioFrame.hasRequestID.getter(type metadata accessor for ModalityXAudioFrame);
}

Swift::Void __swiftcall ModalityXAudioFrame.clearRequestID()()
{
  ModalityXAudioFrame.clearRequestID()(type metadata accessor for ModalityXAudioFrame);
}

uint64_t ModalityXAudioFrame.audio.getter()
{
  return swift_bridgeObjectRetain();
}

void ModalityXAudioFrame.audio.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXAudioFrame.audio.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXAudioFrame.lastFrame.getter()
{
  return ModalityXAudioFrame.lastFrame.getter(type metadata accessor for ModalityXAudioFrame);
}

void ModalityXAudioFrame.lastFrame.setter(uint64_t a1)
{
  ModalityXAudioFrame.lastFrame.setter(a1, type metadata accessor for ModalityXAudioFrame);
}

void ModalityXAudioFrame.lastFrame.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_227(a1);
  v2 = type metadata accessor for ModalityXAudioFrame(v1);
  OUTLINED_FUNCTION_197(*(int *)(v2 + 28));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXAudioFrame.hasLastFrame.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXAudioFrame(0);
  return OUTLINED_FUNCTION_268(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXAudioFrame.clearLastFrame()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXAudioFrame(0);
  OUTLINED_FUNCTION_427(*(int *)(v0 + 28));
}

uint64_t ModalityXAudioFrame.unknownFields.getter()
{
  return ModalityXServerBoundFrame.unknownFields.getter();
}

uint64_t ModalityXAudioFrame.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXAudioFrame);
}

uint64_t (*ModalityXAudioFrame.unknownFields.modify())()
{
  type metadata accessor for ModalityXAudioFrame(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXASRResult.requestID.getter()
{
  ModalityXAudioFrame.requestID.getter(type metadata accessor for ModalityXASRResult);
}

void ModalityXAudioFrame.requestID.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  if (OUTLINED_FUNCTION_84(*(int *)(v1 + 24)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXASRResult.requestID : ModalityXASRResult(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXASRResult.requestID.setter(v1, v2);
}

void ModalityXASRResult.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXAudioFrame.requestID.setter(a1, a2, type metadata accessor for ModalityXASRResult);
}

void ModalityXAudioFrame.requestID.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_101(a1, a2, a3);
  OUTLINED_FUNCTION_250();
  *v4 = v5;
  v4[1] = v3;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXASRResult.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXASRResult(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 24)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXASRResult.hasRequestID.getter()
{
  return ModalityXAudioFrame.hasRequestID.getter(type metadata accessor for ModalityXASRResult);
}

BOOL ModalityXAudioFrame.hasRequestID.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_209(*(int *)(v1 + 24));
}

Swift::Void __swiftcall ModalityXASRResult.clearRequestID()()
{
  ModalityXAudioFrame.clearRequestID()(type metadata accessor for ModalityXASRResult);
}

void ModalityXAudioFrame.clearRequestID()(uint64_t (*a1)(_QWORD))
{
  _QWORD *v1;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_238();
  *v1 = 0;
  v1[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXASRResult.payload.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, a1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
}

void ModalityXASRResult.payload.setter(uint64_t a1)
{
  uint64_t v1;

  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
}

uint64_t (*ModalityXASRResult.payload.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXASRResult.recognitionCandidate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v8);
  v3 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_55();
    if ((_DWORD)v6 != 1)
    {
      OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXRecognitionCandidate);
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXASRResult.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  type metadata accessor for ModalityXRecognitionCandidate(0);
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  OUTLINED_FUNCTION_223(static ModalityXRecognitionCandidate._StorageClass.defaultInstance);
LABEL_10:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXASRResult.recognitionCandidate.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_207(a1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, type metadata accessor for ModalityXASRResult.OneOf_Payload);
}

void ModalityXASRResult.recognitionCandidate.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v2 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v2);
  v3 = OUTLINED_FUNCTION_72();
  v4 = OUTLINED_FUNCTION_27(v3);
  v5 = OUTLINED_FUNCTION_49((uint64_t)v4);
  v6 = type metadata accessor for ModalityXRecognitionCandidate(v5);
  *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_16(v6);
  v7 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v7);
  v8 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  v9 = OUTLINED_FUNCTION_4_0(v8);
  if (v10)
  {
    OUTLINED_FUNCTION_107(v9, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    v11 = OUTLINED_FUNCTION_45();
    if ((_DWORD)v11 != 1)
    {
      OUTLINED_FUNCTION_38(v0, v12, type metadata accessor for ModalityXRecognitionCandidate);
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_108(v11, type metadata accessor for ModalityXASRResult.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  OUTLINED_FUNCTION_223(static ModalityXRecognitionCandidate._StorageClass.defaultInstance);
LABEL_10:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_206();
}

void ModalityXASRResult.finalSpeechRecognitionResponse.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0(v2, v8);
  v3 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  v4 = OUTLINED_FUNCTION_11(v3);
  if (v5)
  {
    OUTLINED_FUNCTION_109(v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_55();
    if ((_DWORD)v6 == 1)
    {
      OUTLINED_FUNCTION_38(v0, v7, type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_117(v6, type metadata accessor for ModalityXASRResult.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  OUTLINED_FUNCTION_223(static ModalityXFinalSpeechRecognitionResponse._StorageClass.defaultInstance);
LABEL_10:
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXASRResult.finalSpeechRecognitionResponse.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_200(a1, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXASRResult.OneOf_Payload);
}

uint64_t ModalityXServerBoundFrame.sessionMetadata.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_109(a1, a2);
  v5 = OUTLINED_FUNCTION_240();
  OUTLINED_FUNCTION_432(v5, v6);
  v7 = a4(0);
  swift_storeEnumTagMultiPayload();
  v8 = OUTLINED_FUNCTION_384();
  return OUTLINED_FUNCTION_245(v8, v9, v10, v7);
}

void ModalityXASRResult.finalSpeechRecognitionResponse.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v2 = OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_34(v2);
  v3 = OUTLINED_FUNCTION_72();
  v4 = OUTLINED_FUNCTION_27(v3);
  v5 = OUTLINED_FUNCTION_49((uint64_t)v4);
  v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(v5);
  *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_16(v6);
  v7 = OUTLINED_FUNCTION_43();
  OUTLINED_FUNCTION_8_0((uint64_t)v7);
  v8 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  v9 = OUTLINED_FUNCTION_4_0(v8);
  if (v10)
  {
    OUTLINED_FUNCTION_107(v9, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    v11 = OUTLINED_FUNCTION_45();
    if ((_DWORD)v11 == 1)
    {
      OUTLINED_FUNCTION_38(v0, v12, type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_108(v11, type metadata accessor for ModalityXASRResult.OneOf_Payload);
  }
  OUTLINED_FUNCTION_52();
  if (one-time initialization token for defaultInstance != -1)
    swift_once();
  OUTLINED_FUNCTION_223(static ModalityXFinalSpeechRecognitionResponse._StorageClass.defaultInstance);
LABEL_10:
  OUTLINED_FUNCTION_12();
}

{
  OUTLINED_FUNCTION_199();
}

uint64_t ModalityXASRResult.unknownFields.getter()
{
  return ModalityXServerBoundFrame.unknownFields.getter();
}

uint64_t ModalityXASRResult.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXASRResult);
}

uint64_t (*ModalityXASRResult.unknownFields.modify())()
{
  type metadata accessor for ModalityXASRResult(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void static ModalityXASRResult.OneOf_Payload.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_19();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v28);
  type metadata accessor for ModalityXRecognitionCandidate(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v29);
  v30 = OUTLINED_FUNCTION_185();
  type metadata accessor for ModalityXASRResult.OneOf_Payload(v30);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_377();
  OUTLINED_FUNCTION_279();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&a9 - v33;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXASRResult.OneOf_Payload, ModalityXASRResult.OneOf_Payload));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_335();
  v37 = v20 + v36;
  outlined init with copy of ModalityXSessionMetadata(v27, v20, type metadata accessor for ModalityXASRResult.OneOf_Payload);
  outlined init with copy of ModalityXSessionMetadata(v25, v37, type metadata accessor for ModalityXASRResult.OneOf_Payload);
  v38 = OUTLINED_FUNCTION_352();
  if ((_DWORD)v38 == 1)
  {
    OUTLINED_FUNCTION_417(v38, v39, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    if (OUTLINED_FUNCTION_352() == 1)
    {
      OUTLINED_FUNCTION_338(v37);
      static ModalityXFinalSpeechRecognitionResponse.== infix(_:_:)();
      OUTLINED_FUNCTION_439();
      v40 = OUTLINED_FUNCTION_379();
LABEL_9:
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v40, v41);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v20, type metadata accessor for ModalityXASRResult.OneOf_Payload);
      goto LABEL_10;
    }
    v42 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse;
    v43 = v21;
  }
  else
  {
    OUTLINED_FUNCTION_241(v20, v39, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    if (OUTLINED_FUNCTION_352() != 1)
    {
      OUTLINED_FUNCTION_210(v37);
      OUTLINED_FUNCTION_408();
      static ModalityXRecognitionCandidate.== infix(_:_:)();
      OUTLINED_FUNCTION_141();
      v40 = OUTLINED_FUNCTION_240();
      goto LABEL_9;
    }
    v42 = type metadata accessor for ModalityXRecognitionCandidate;
    v43 = (uint64_t)v34;
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v43, v42);
  OUTLINED_FUNCTION_204(v44, &demangling cache variable for type metadata for (ModalityXASRResult.OneOf_Payload, ModalityXASRResult.OneOf_Payload));
LABEL_10:
  OUTLINED_FUNCTION_3_0();
}

void ModalityXSpeechProfileRebuildNeeded.requestID.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

void ModalityXCancelRequest.requestID.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  if (OUTLINED_FUNCTION_84(*(int *)(v1 + 20)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXSpeechProfileRebuildNeeded.requestID : ModalityXSpeechProfileRebuildNeeded(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXSpeechProfileRebuildNeeded.requestID.setter(v1, v2);
}

void ModalityXSpeechProfileRebuildNeeded.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

void ModalityXCancelRequest.requestID.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_101(a1, a2, a3);
  OUTLINED_FUNCTION_250();
  *v4 = v5;
  v4[1] = v3;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXSpeechProfileRebuildNeeded.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfileRebuildNeeded.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

BOOL ModalityXCancelRequest.hasRequestID.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_209(*(int *)(v1 + 20));
}

Swift::Void __swiftcall ModalityXSpeechProfileRebuildNeeded.clearRequestID()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

void ModalityXCancelRequest.clearRequestID()(uint64_t (*a1)(_QWORD))
{
  _QWORD *v1;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_238();
  *v1 = 0;
  v1[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXSpeechProfileRebuildNeeded.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXProcessingError.code.getter()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_256();
  if (v0[4])
    return 0;
  else
    return *(unsigned int *)v0;
}

void ModalityXProcessingError.code.setter(int a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_256();
  *(_DWORD *)v2 = a1;
  *(_BYTE *)(v2 + 4) = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXProcessingError.code.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v3 = *(int *)(OUTLINED_FUNCTION_372(a1) + 20);
  if (*(_BYTE *)(v2 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v2 + v3);
  *(_DWORD *)(v1 + 8) = v4;
  *(_DWORD *)(v1 + 12) = v3;
  OUTLINED_FUNCTION_1_0();
}

uint64_t ModalityXProcessingError.code.modify(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)result + *(int *)(result + 12);
  *(_DWORD *)v1 = *(_DWORD *)(result + 8);
  *(_BYTE *)(v1 + 4) = 0;
  return result;
}

BOOL ModalityXProcessingError.hasCode.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_256();
  return (*(_BYTE *)(v0 + 4) & 1) == 0;
}

Swift::Void __swiftcall ModalityXProcessingError.clearCode()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_256();
  *(_DWORD *)v0 = 0;
  *(_BYTE *)(v0 + 4) = 1;
}

void ModalityXProcessingError.errorDescription.getter()
{
  ModalityXAudioFrame.requestID.getter(type metadata accessor for ModalityXProcessingError);
}

void key path setter for ModalityXProcessingError.errorDescription : ModalityXProcessingError(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXProcessingError.errorDescription.setter(v1, v2);
}

void ModalityXProcessingError.errorDescription.setter(uint64_t a1, uint64_t a2)
{
  ModalityXAudioFrame.requestID.setter(a1, a2, type metadata accessor for ModalityXProcessingError);
}

void ModalityXProcessingError.errorDescription.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  v3 = OUTLINED_FUNCTION_284();
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 24)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXProcessingError.hasErrorDescription.getter()
{
  return ModalityXAudioFrame.hasRequestID.getter(type metadata accessor for ModalityXProcessingError);
}

Swift::Void __swiftcall ModalityXProcessingError.clearErrorDescription()()
{
  ModalityXAudioFrame.clearRequestID()(type metadata accessor for ModalityXProcessingError);
}

void ModalityXProcessingError.errorSource.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_260();
  v2 = type metadata accessor for ModalityXProcessingError(v1);
  OUTLINED_FUNCTION_236(*(_BYTE *)(v0 + *(int *)(v2 + 28)));
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXProcessingError.errorSource : ModalityXProcessingError(char *a1)
{
  char v1;

  v1 = *a1;
  ModalityXProcessingError.errorSource.setter(&v1);
}

void ModalityXProcessingError.errorSource.setter(char *a1)
{
  ModalityXSessionMetadata.userInterfaceIdiom.setter(a1, type metadata accessor for ModalityXProcessingError);
}

void ModalityXSessionMetadata.userInterfaceIdiom.setter(char *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  char v3;

  v3 = *a1;
  *(_BYTE *)(v2 + *(int *)(OUTLINED_FUNCTION_211((uint64_t)a1, a2) + 28)) = v3;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXProcessingError.errorSource.modify(_QWORD *a1)
{
  int v1;

  v1 = *(_DWORD *)(OUTLINED_FUNCTION_372(a1) + 28);
  OUTLINED_FUNCTION_237(v1);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXProcessingError.hasErrorSource.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXProcessingError(0) + 28)) != 3;
}

Swift::Void __swiftcall ModalityXProcessingError.clearErrorSource()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXProcessingError(0) + 28)) = 3;
}

void ModalityXProcessingError.requestID.getter()
{
  ModalityXSessionMetadata.language.getter(type metadata accessor for ModalityXProcessingError);
}

void ModalityXSessionMetadata.language.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  if (OUTLINED_FUNCTION_84(*(int *)(v1 + 32)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXProcessingError.requestID : ModalityXProcessingError(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXProcessingError.requestID.setter(v1, v2);
}

void ModalityXProcessingError.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXSessionMetadata.language.setter(a1, a2, type metadata accessor for ModalityXProcessingError);
}

void ModalityXSessionMetadata.language.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_101(a1, a2, a3);
  OUTLINED_FUNCTION_250();
  *v4 = v5;
  v4[1] = v3;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXProcessingError.requestID.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  v3 = OUTLINED_FUNCTION_284();
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 32)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *a1 = v4;
  a1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXProcessingError.hasRequestID.getter()
{
  return ModalityXSessionMetadata.hasLanguage.getter(type metadata accessor for ModalityXProcessingError);
}

BOOL ModalityXSessionMetadata.hasLanguage.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_209(*(int *)(v1 + 32));
}

Swift::Void __swiftcall ModalityXProcessingError.clearRequestID()()
{
  ModalityXSessionMetadata.clearLanguage()(type metadata accessor for ModalityXProcessingError);
}

void ModalityXSessionMetadata.clearLanguage()(uint64_t (*a1)(_QWORD))
{
  _QWORD *v1;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_238();
  *v1 = 0;
  v1[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXProcessingError.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRequestMitigated.requestID.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXRequestMitigated);
}

void key path setter for ModalityXRequestMitigated.requestID : ModalityXRequestMitigated(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXRequestMitigated.requestID.setter(v1, v2);
}

void ModalityXRequestMitigated.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXRequestMitigated);
}

void ModalityXRequestMitigated.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXRequestMitigated(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRequestMitigated.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXRequestMitigated);
}

Swift::Void __swiftcall ModalityXRequestMitigated.clearRequestID()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXRequestMitigated);
}

void ModalityXRequestMitigated.mitigationType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_260();
  v2 = type metadata accessor for ModalityXRequestMitigated(v1);
  OUTLINED_FUNCTION_236(*(_BYTE *)(v0 + *(int *)(v2 + 24)));
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXRequestMitigated.mitigationType : ModalityXRequestMitigated(char *a1)
{
  char v1;

  v1 = *a1;
  ModalityXRequestMitigated.mitigationType.setter(&v1);
}

void ModalityXRequestMitigated.mitigationType.setter(char *a1)
{
  ModalityXCancelRequest.reason.setter(a1, type metadata accessor for ModalityXRequestMitigated);
}

void ModalityXCancelRequest.reason.setter(char *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  char v3;

  v3 = *a1;
  *(_BYTE *)(v2 + *(int *)(OUTLINED_FUNCTION_211((uint64_t)a1, a2) + 24)) = v3;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXRequestMitigated.mitigationType.modify(_QWORD *a1)
{
  uint64_t v1;
  int v2;

  v1 = OUTLINED_FUNCTION_227(a1);
  v2 = *(_DWORD *)(type metadata accessor for ModalityXRequestMitigated(v1) + 24);
  OUTLINED_FUNCTION_237(v2);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRequestMitigated.hasMitigationType.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXRequestMitigated(0) + 24)) != 8;
}

Swift::Void __swiftcall ModalityXRequestMitigated.clearMitigationType()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXRequestMitigated(0) + 24)) = 8;
}

uint64_t (*ModalityXRequestMitigated.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRequestComplete.requestID.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXRequestComplete);
}

void key path setter for ModalityXRequestComplete.requestID : ModalityXRequestComplete(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXRequestComplete.requestID.setter(v1, v2);
}

void ModalityXRequestComplete.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXRequestComplete);
}

void ModalityXRequestComplete.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXRequestComplete(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRequestComplete.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXRequestComplete);
}

Swift::Void __swiftcall ModalityXRequestComplete.clearRequestID()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXRequestComplete);
}

uint64_t (*ModalityXRequestComplete.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXSpeechProfileBuildRequest.requestID.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void key path setter for ModalityXSpeechProfileBuildRequest.requestID : ModalityXSpeechProfileBuildRequest(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXSpeechProfileBuildRequest.requestID.setter(v1, v2);
}

void ModalityXSpeechProfileBuildRequest.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_149(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfileBuildRequest.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearRequestID()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.sourceData.getter(_QWORD *a1@<X8>)
{
  ModalityXSpeechProfileBuildRequest.sourceData.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest, a1);
}

uint64_t ModalityXSpeechProfileBuildRequest.sourceData.setter(uint64_t a1)
{
  return ModalityXSpeechProfileBuildRequest.sourceData.setter(a1, type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.sourceData.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  *(_QWORD *)(v2 + 8) = v5;
  v6 = OUTLINED_FUNCTION_173();
  *(_QWORD *)(v2 + 24) = OUTLINED_FUNCTION_124(v6);
  v7 = OUTLINED_FUNCTION_158();
  v8 = OUTLINED_FUNCTION_278((uint64_t)v7);
  v9 = *(int *)(type metadata accessor for ModalityXSpeechProfileBuildRequest(v8) + 24);
  *(_DWORD *)(v2 + 40) = v9;
  OUTLINED_FUNCTION_71(v0 + v9, (uint64_t)v5);
  v10 = OUTLINED_FUNCTION_14((uint64_t)v5, 1, v1);
  if (v12)
  {
    v13 = OUTLINED_FUNCTION_368(MEMORY[0x24BEE4AF8]);
    OUTLINED_FUNCTION_204(v13, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v10, v11, type metadata accessor for ModalityXSpeechProfileSourceData);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXSessionMetadata.deviceInfo.modify();
}

void ModalityXSpeechProfileBuildRequest.hasSourceData.getter()
{
  ModalityXSpeechProfileBuildRequest.hasSourceData.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_411();
  __swift_instantiateConcreteTypeFromMangledName(v2);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8]();
  v3 = OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_51(v0 + *(int *)(v3 + 24), v1);
  v4 = OUTLINED_FUNCTION_328();
  __swift_getEnumTagSinglePayload(v1, 1, v4);
  OUTLINED_FUNCTION_140(v1);
  OUTLINED_FUNCTION_12();
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearSourceData()()
{
  ModalityXSpeechProfileBuildRequest.clearSourceData()(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.locale.getter()
{
  ModalityXSpeechProfileBuildRequest.locale.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void key path setter for ModalityXSpeechProfileBuildRequest.locale : ModalityXSpeechProfileBuildRequest(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXSpeechProfileBuildRequest.locale.setter(v1, v2);
}

void ModalityXSpeechProfileBuildRequest.locale.setter(uint64_t a1, uint64_t a2)
{
  ModalityXSpeechProfileBuildRequest.locale.setter(a1, a2, type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.locale.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_149(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 28)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfileBuildRequest.hasLocale.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasLocale.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearLocale()()
{
  ModalityXSpeechProfileBuildRequest.clearLocale()(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.phoneSetVersion.getter()
{
  ModalityXSessionMetadata.language.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void key path setter for ModalityXSpeechProfileBuildRequest.phoneSetVersion : ModalityXSpeechProfileBuildRequest(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXSpeechProfileBuildRequest.phoneSetVersion.setter(v1, v2);
}

void ModalityXSpeechProfileBuildRequest.phoneSetVersion.setter(uint64_t a1, uint64_t a2)
{
  ModalityXSessionMetadata.language.setter(a1, a2, type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.phoneSetVersion.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_149(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 32)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfileBuildRequest.hasPhoneSetVersion.getter()
{
  return ModalityXSessionMetadata.hasLanguage.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearPhoneSetVersion()()
{
  ModalityXSessionMetadata.clearLanguage()(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.existingLanguageProfile.getter()
{
  ModalityXSpeechProfileBuildRequest.existingLanguageProfile.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void key path setter for ModalityXSpeechProfileBuildRequest.existingLanguageProfile : ModalityXSpeechProfileBuildRequest(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  outlined copy of Data._Representation(*a1, v2);
  ModalityXSpeechProfileBuildRequest.existingLanguageProfile.setter(v1, v2);
}

void ModalityXSpeechProfileBuildRequest.existingLanguageProfile.setter(uint64_t a1, uint64_t a2)
{
  ModalityXSpeechProfileBuildRequest.existingLanguageProfile.setter(a1, a2, type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.existingLanguageProfile.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_149(a1);
  v2 = OUTLINED_FUNCTION_56(*(int *)(v1 + 36));
  OUTLINED_FUNCTION_235(v2, v3, v4);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfileBuildRequest.hasExistingLanguageProfile.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasExistingLanguageProfile.getter(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearExistingLanguageProfile()()
{
  ModalityXSpeechProfileBuildRequest.clearExistingLanguageProfile()(type metadata accessor for ModalityXSpeechProfileBuildRequest);
}

void ModalityXSpeechProfileBuildRequest.existingPronunciationCache.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  v1 = OUTLINED_FUNCTION_123(*(int *)(v0 + 40));
  outlined copy of Data?(v1, v2);
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXSpeechProfileBuildRequest.existingPronunciationCache : ModalityXSpeechProfileBuildRequest(uint64_t a1)
{
  outlined copy of Data._Representation(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  ModalityXSpeechProfileBuildRequest.existingPronunciationCache.setter();
}

void ModalityXSpeechProfileBuildRequest.existingPronunciationCache.setter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_119();
  v1 = type metadata accessor for ModalityXSpeechProfileBuildRequest(v0);
  OUTLINED_FUNCTION_180(*(int *)(v1 + 40));
  OUTLINED_FUNCTION_9_0();
}

void ModalityXSpeechProfileBuildRequest.existingPronunciationCache.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_149(a1);
  v2 = OUTLINED_FUNCTION_56(*(int *)(v1 + 40));
  OUTLINED_FUNCTION_235(v2, v3, v4);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfileBuildRequest.hasExistingPronunciationCache.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  return OUTLINED_FUNCTION_122(*(int *)(v0 + 40));
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildRequest.clearExistingPronunciationCache()()
{
  _OWORD *v0;
  uint64_t v1;

  v1 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  OUTLINED_FUNCTION_198(*(int *)(v1 + 40));
  *v0 = xmmword_24205B150;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXSpeechProfileBuildRequest.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXStreamingSpeechProfileBegin.requestID.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

void key path setter for ModalityXStreamingSpeechProfileBegin.requestID : ModalityXStreamingSpeechProfileBegin(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXStreamingSpeechProfileBegin.requestID.setter(v1, v2);
}

void ModalityXStreamingSpeechProfileBegin.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

void ModalityXStreamingSpeechProfileBegin.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_248(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXStreamingSpeechProfileBegin.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileBegin.clearRequestID()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

void ModalityXStreamingSpeechProfileBegin.locale.getter()
{
  ModalityXAudioFrame.requestID.getter(type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

void key path setter for ModalityXStreamingSpeechProfileBegin.locale : ModalityXStreamingSpeechProfileBegin(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXStreamingSpeechProfileBegin.locale.setter(v1, v2);
}

void ModalityXStreamingSpeechProfileBegin.locale.setter(uint64_t a1, uint64_t a2)
{
  ModalityXAudioFrame.requestID.setter(a1, a2, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

void ModalityXStreamingSpeechProfileBegin.locale.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_248(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 24)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXStreamingSpeechProfileBegin.hasLocale.getter()
{
  return ModalityXAudioFrame.hasRequestID.getter(type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileBegin.clearLocale()()
{
  ModalityXAudioFrame.clearRequestID()(type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

void ModalityXStreamingSpeechProfileBegin.phoneSetVersion.getter()
{
  ModalityXSpeechProfileBuildRequest.locale.getter(type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

void ModalityXSpeechProfileBuildRequest.locale.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  if (OUTLINED_FUNCTION_84(*(int *)(v1 + 28)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXStreamingSpeechProfileBegin.phoneSetVersion : ModalityXStreamingSpeechProfileBegin(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXStreamingSpeechProfileBegin.phoneSetVersion.setter(v1, v2);
}

void ModalityXStreamingSpeechProfileBegin.phoneSetVersion.setter(uint64_t a1, uint64_t a2)
{
  ModalityXSpeechProfileBuildRequest.locale.setter(a1, a2, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

void ModalityXSpeechProfileBuildRequest.locale.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_101(a1, a2, a3);
  OUTLINED_FUNCTION_250();
  *v4 = v5;
  v4[1] = v3;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXStreamingSpeechProfileBegin.phoneSetVersion.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_248(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 28)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXStreamingSpeechProfileBegin.hasPhoneSetVersion.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasLocale.getter(type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

BOOL ModalityXSpeechProfileBuildRequest.hasLocale.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_209(*(int *)(v1 + 28));
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileBegin.clearPhoneSetVersion()()
{
  ModalityXSpeechProfileBuildRequest.clearLocale()(type metadata accessor for ModalityXStreamingSpeechProfileBegin);
}

void ModalityXSpeechProfileBuildRequest.clearLocale()(uint64_t (*a1)(_QWORD))
{
  _QWORD *v1;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_238();
  *v1 = 0;
  v1[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXStreamingSpeechProfileBegin.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXStreamingSpeechProfileAddData.requestID.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

void key path setter for ModalityXStreamingSpeechProfileAddData.requestID : ModalityXStreamingSpeechProfileAddData(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXStreamingSpeechProfileAddData.requestID.setter(v1, v2);
}

void ModalityXStreamingSpeechProfileAddData.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

void ModalityXStreamingSpeechProfileAddData.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_246(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXStreamingSpeechProfileAddData.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileAddData.clearRequestID()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

void ModalityXStreamingSpeechProfileAddData.sourceData.getter(_QWORD *a1@<X8>)
{
  ModalityXSpeechProfileBuildRequest.sourceData.getter(type metadata accessor for ModalityXStreamingSpeechProfileAddData, a1);
}

void ModalityXSpeechProfileBuildRequest.sourceData.getter(uint64_t (*a1)(uint64_t)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_184();
  v8 = a1(v7);
  OUTLINED_FUNCTION_269(v2 + *(int *)(v8 + 24), v3);
  v9 = OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_14(v3, 1, v9);
  if (v11)
  {
    *a2 = MEMORY[0x24BEE4AF8];
    v12 = OUTLINED_FUNCTION_253();
    OUTLINED_FUNCTION_380(v12, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  }
  else
  {
    OUTLINED_FUNCTION_38(v3, v10, type metadata accessor for ModalityXSpeechProfileSourceData);
  }
  OUTLINED_FUNCTION_12();
}

uint64_t ModalityXStreamingSpeechProfileAddData.sourceData.setter(uint64_t a1)
{
  return ModalityXSpeechProfileBuildRequest.sourceData.setter(a1, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

void ModalityXStreamingSpeechProfileAddData.sourceData.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  *(_QWORD *)(v2 + 8) = v5;
  v6 = OUTLINED_FUNCTION_173();
  *(_QWORD *)(v2 + 24) = OUTLINED_FUNCTION_124(v6);
  v7 = OUTLINED_FUNCTION_158();
  v8 = OUTLINED_FUNCTION_278((uint64_t)v7);
  v9 = *(int *)(type metadata accessor for ModalityXStreamingSpeechProfileAddData(v8) + 24);
  *(_DWORD *)(v2 + 40) = v9;
  OUTLINED_FUNCTION_71(v0 + v9, (uint64_t)v5);
  v10 = OUTLINED_FUNCTION_14((uint64_t)v5, 1, v1);
  if (v12)
  {
    v13 = OUTLINED_FUNCTION_368(MEMORY[0x24BEE4AF8]);
    OUTLINED_FUNCTION_204(v13, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v10, v11, type metadata accessor for ModalityXSpeechProfileSourceData);
  }
  OUTLINED_FUNCTION_12();
}

void ModalityXStreamingSpeechProfileAddData.hasSourceData.getter()
{
  ModalityXSpeechProfileBuildRequest.hasSourceData.getter();
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileAddData.clearSourceData()()
{
  ModalityXSpeechProfileBuildRequest.clearSourceData()(type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

uint64_t ModalityXSpeechProfileBuildRequest.clearSourceData()(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(OUTLINED_FUNCTION_25(a1) + 24);
  OUTLINED_FUNCTION_262();
  v3 = OUTLINED_FUNCTION_328();
  return OUTLINED_FUNCTION_28(v2, 1, 1, v3);
}

void ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v0 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  v1 = OUTLINED_FUNCTION_123(*(int *)(v0 + 28));
  outlined copy of Data?(v1, v2);
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXStreamingSpeechProfileAddData.existingLanguageProfile : ModalityXStreamingSpeechProfileAddData(uint64_t a1)
{
  outlined copy of Data._Representation(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.setter();
}

void ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.setter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_119();
  v1 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(v0);
  OUTLINED_FUNCTION_180(*(int *)(v1 + 28));
  OUTLINED_FUNCTION_9_0();
}

void ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_246(a1);
  v2 = OUTLINED_FUNCTION_56(*(int *)(v1 + 28));
  OUTLINED_FUNCTION_235(v2, v3, v4);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXStreamingSpeechProfileAddData.hasExistingLanguageProfile.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  return OUTLINED_FUNCTION_122(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileAddData.clearExistingLanguageProfile()()
{
  _OWORD *v0;
  uint64_t v1;

  v1 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  OUTLINED_FUNCTION_198(*(int *)(v1 + 28));
  *v0 = xmmword_24205B150;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.getter()
{
  ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.getter(type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

void key path setter for ModalityXStreamingSpeechProfileAddData.existingPronunciationCache : ModalityXStreamingSpeechProfileAddData(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  outlined copy of Data._Representation(*a1, v2);
  ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.setter(v1, v2);
}

void ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.setter(uint64_t a1, uint64_t a2)
{
  ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.setter(a1, a2, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

void ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_246(a1);
  v2 = OUTLINED_FUNCTION_56(*(int *)(v1 + 32));
  OUTLINED_FUNCTION_235(v2, v3, v4);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXStreamingSpeechProfileAddData.hasExistingPronunciationCache.getter()
{
  return ModalityXStreamingSpeechProfileAddData.hasExistingPronunciationCache.getter(type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileAddData.clearExistingPronunciationCache()()
{
  ModalityXStreamingSpeechProfileAddData.clearExistingPronunciationCache()(type metadata accessor for ModalityXStreamingSpeechProfileAddData);
}

uint64_t (*ModalityXStreamingSpeechProfileAddData.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXStreamingSpeechProfileCommit.requestID.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

void key path setter for ModalityXStreamingSpeechProfileCommit.requestID : ModalityXStreamingSpeechProfileCommit(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXStreamingSpeechProfileCommit.requestID.setter(v1, v2);
}

void ModalityXStreamingSpeechProfileCommit.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

void ModalityXStreamingSpeechProfileCommit.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXStreamingSpeechProfileCommit.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

Swift::Void __swiftcall ModalityXStreamingSpeechProfileCommit.clearRequestID()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

uint64_t (*ModalityXStreamingSpeechProfileCommit.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXSpeechProfileBuildResponse.requestID.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void key path setter for ModalityXSpeechProfileBuildResponse.requestID : ModalityXSpeechProfileBuildResponse(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXSpeechProfileBuildResponse.requestID.setter(v1, v2);
}

void ModalityXSpeechProfileBuildResponse.requestID.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void ModalityXSpeechProfileBuildResponse.requestID.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_247(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

void ModalityXSessionMetadata.language.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = (_QWORD *)(a1[2] + *((int *)a1 + 6));
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
    OUTLINED_FUNCTION_9_0();
  }
}

BOOL ModalityXSpeechProfileBuildResponse.hasRequestID.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearRequestID()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void ModalityXSpeechProfileBuildResponse.error.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_184();
  v5 = type metadata accessor for ModalityXSpeechProfileBuildResponse(v4);
  OUTLINED_FUNCTION_358(*(int *)(v5 + 24));
  v6 = type metadata accessor for ModalityXProcessingError(0);
  OUTLINED_FUNCTION_14(v1, 1, v6);
  if (v8)
  {
    OUTLINED_FUNCTION_52();
    v9 = a1 + *(int *)(v6 + 20);
    *(_DWORD *)v9 = 0;
    *(_BYTE *)(v9 + 4) = 1;
    OUTLINED_FUNCTION_406();
    *(_BYTE *)(a1 + v10) = 3;
    OUTLINED_FUNCTION_83(*(int *)(v6 + 32));
    OUTLINED_FUNCTION_380(v11, &demangling cache variable for type metadata for ModalityXProcessingError?);
  }
  else
  {
    OUTLINED_FUNCTION_38(v1, v7, type metadata accessor for ModalityXProcessingError);
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXSpeechProfileBuildResponse.error.setter(uint64_t a1)
{
  return ModalityXSpeechProfileBuildRequest.sourceData.setter(a1, type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

uint64_t ModalityXSpeechProfileBuildRequest.sourceData.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_211(a1, a2);
  OUTLINED_FUNCTION_262();
  OUTLINED_FUNCTION_116(a1);
  OUTLINED_FUNCTION_328();
  v3 = OUTLINED_FUNCTION_384();
  return OUTLINED_FUNCTION_28(v3, v4, v5, v6);
}

void ModalityXSpeechProfileBuildResponse.error.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_34(v4);
  v5 = OUTLINED_FUNCTION_72();
  v6 = OUTLINED_FUNCTION_27(v5);
  *(_QWORD *)(v3 + 8) = v6;
  v7 = type metadata accessor for ModalityXProcessingError(0);
  *(_QWORD *)(v3 + 24) = OUTLINED_FUNCTION_124(v7);
  v8 = OUTLINED_FUNCTION_158();
  v9 = OUTLINED_FUNCTION_278((uint64_t)v8);
  v10 = *(int *)(type metadata accessor for ModalityXSpeechProfileBuildResponse(v9) + 24);
  *(_DWORD *)(v3 + 40) = v10;
  OUTLINED_FUNCTION_71(v0 + v10, (uint64_t)v6);
  v11 = OUTLINED_FUNCTION_14((uint64_t)v6, 1, v1);
  if (v13)
  {
    OUTLINED_FUNCTION_357();
    v14 = v2 + *(int *)(v1 + 20);
    *(_DWORD *)v14 = 0;
    *(_BYTE *)(v14 + 4) = 1;
    OUTLINED_FUNCTION_407();
    *(_BYTE *)(v2 + v15) = 3;
    OUTLINED_FUNCTION_266(*(int *)(v1 + 32));
    OUTLINED_FUNCTION_204(v16, &demangling cache variable for type metadata for ModalityXProcessingError?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v11, v12, type metadata accessor for ModalityXProcessingError);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXSessionMetadata.deviceInfo.modify();
}

void ModalityXSpeechProfileBuildResponse.hasError.getter()
{
  ModalityXSpeechProfileBuildRequest.hasSourceData.getter();
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearError()()
{
  ModalityXSpeechProfileBuildRequest.clearSourceData()(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

uint64_t ModalityXSpeechProfileBuildResponse.incompleteProfile.getter()
{
  return ModalityXAudioFrame.lastFrame.getter(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

uint64_t ModalityXAudioFrame.lastFrame.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_25(a1) + 28)) & 1;
}

void ModalityXSpeechProfileBuildResponse.incompleteProfile.setter(uint64_t a1)
{
  ModalityXAudioFrame.lastFrame.setter(a1, type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void ModalityXAudioFrame.lastFrame.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(OUTLINED_FUNCTION_211(a1, a2) + 28)) = a1;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXSpeechProfileBuildResponse.incompleteProfile.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_227(a1);
  v2 = type metadata accessor for ModalityXSpeechProfileBuildResponse(v1);
  OUTLINED_FUNCTION_197(*(int *)(v2 + 28));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfileBuildResponse.hasIncompleteProfile.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  return OUTLINED_FUNCTION_268(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearIncompleteProfile()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  OUTLINED_FUNCTION_427(*(int *)(v0 + 28));
}

void ModalityXSpeechProfileBuildResponse.languageProfile.getter()
{
  ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.getter(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_25(a1);
  v2 = OUTLINED_FUNCTION_123(*(int *)(v1 + 32));
  outlined copy of Data?(v2, v3);
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXSpeechProfileBuildResponse.languageProfile : ModalityXSpeechProfileBuildResponse(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  outlined copy of Data._Representation(*a1, v2);
  ModalityXSpeechProfileBuildResponse.languageProfile.setter(v1, v2);
}

void ModalityXSpeechProfileBuildResponse.languageProfile.setter(uint64_t a1, uint64_t a2)
{
  ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.setter(a1, a2, type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_101(a1, a2, a3);
  OUTLINED_FUNCTION_180(*(int *)(v3 + 32));
  OUTLINED_FUNCTION_9_0();
}

void ModalityXSpeechProfileBuildResponse.languageProfile.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_247(a1);
  v2 = OUTLINED_FUNCTION_56(*(int *)(v1 + 32));
  OUTLINED_FUNCTION_235(v2, v3, v4);
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechProfileBuildResponse.hasLanguageProfile.getter()
{
  return ModalityXStreamingSpeechProfileAddData.hasExistingPronunciationCache.getter(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

BOOL ModalityXStreamingSpeechProfileAddData.hasExistingPronunciationCache.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_122(*(int *)(v1 + 32));
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearLanguageProfile()()
{
  ModalityXStreamingSpeechProfileAddData.clearExistingPronunciationCache()(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void ModalityXStreamingSpeechProfileAddData.clearExistingPronunciationCache()(uint64_t (*a1)(_QWORD))
{
  _OWORD *v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_198(*(int *)(v2 + 32));
  *v1 = xmmword_24205B150;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXSpeechProfileBuildResponse.pronunciationCache.getter()
{
  ModalityXSpeechProfileBuildRequest.existingLanguageProfile.getter(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void ModalityXSpeechProfileBuildRequest.existingLanguageProfile.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_25(a1);
  v2 = OUTLINED_FUNCTION_123(*(int *)(v1 + 36));
  outlined copy of Data?(v2, v3);
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXSpeechProfileBuildResponse.pronunciationCache : ModalityXSpeechProfileBuildResponse(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  outlined copy of Data._Representation(*a1, v2);
  ModalityXSpeechProfileBuildResponse.pronunciationCache.setter(v1, v2);
}

void ModalityXSpeechProfileBuildResponse.pronunciationCache.setter(uint64_t a1, uint64_t a2)
{
  ModalityXSpeechProfileBuildRequest.existingLanguageProfile.setter(a1, a2, type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void ModalityXSpeechProfileBuildRequest.existingLanguageProfile.setter(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_101(a1, a2, a3);
  OUTLINED_FUNCTION_180(*(int *)(v3 + 36));
  OUTLINED_FUNCTION_9_0();
}

void ModalityXSpeechProfileBuildResponse.pronunciationCache.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_247(a1);
  v2 = OUTLINED_FUNCTION_56(*(int *)(v1 + 36));
  OUTLINED_FUNCTION_235(v2, v3, v4);
  OUTLINED_FUNCTION_1_0();
}

void ModalityXSpeechProfile.languageProfile.modify(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v2 = a1[1];
  v3 = a1[2] + *((int *)a1 + 6);
  v4 = *a1;
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(v3 + 8);
  if ((a2 & 1) != 0)
  {
    v7 = OUTLINED_FUNCTION_50();
    outlined copy of Data._Representation(v7, v8);
    outlined consume of Data?(v5, v6);
    *(_QWORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = v2;
    v9 = OUTLINED_FUNCTION_50();
    outlined consume of Data._Representation(v9, v10);
  }
  else
  {
    outlined consume of Data?(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    *(_QWORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = v2;
    OUTLINED_FUNCTION_12();
  }
}

BOOL ModalityXSpeechProfileBuildResponse.hasPronunciationCache.getter()
{
  return ModalityXSpeechProfileBuildRequest.hasExistingLanguageProfile.getter(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

BOOL ModalityXSpeechProfileBuildRequest.hasExistingLanguageProfile.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_122(*(int *)(v1 + 36));
}

Swift::Void __swiftcall ModalityXSpeechProfileBuildResponse.clearPronunciationCache()()
{
  ModalityXSpeechProfileBuildRequest.clearExistingLanguageProfile()(type metadata accessor for ModalityXSpeechProfileBuildResponse);
}

void ModalityXSpeechProfileBuildRequest.clearExistingLanguageProfile()(uint64_t (*a1)(_QWORD))
{
  _OWORD *v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_198(*(int *)(v2 + 36));
  *v1 = xmmword_24205B150;
  OUTLINED_FUNCTION_1_0();
}

uint64_t ModalityXSessionMetadata.unknownFields.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_120();
  return OUTLINED_FUNCTION_146(v0, v1, v2, v3);
}

uint64_t ModalityXSessionMetadata.unknownFields.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_146(v0, v1, v2, v3);
}

uint64_t (*ModalityXSpeechProfileBuildResponse.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

unint64_t static ModalityXServerBoundFrame.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(19);
}

uint64_t static ModalityXServerBoundFrame._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXServerBoundFrame._protobuf_nameMap, a1);
}

void ModalityXServerBoundFrame.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = OUTLINED_FUNCTION_23();
          closure #1 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v3, v4, v5, v6);
          break;
        case 2:
          v7 = OUTLINED_FUNCTION_23();
          closure #2 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v7, v8, v9, v10);
          break;
        case 3:
          v11 = OUTLINED_FUNCTION_23();
          closure #3 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v11, v12, v13, v14);
          break;
        case 4:
          v15 = OUTLINED_FUNCTION_23();
          closure #4 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v15, v16, v17, v18);
          break;
        case 5:
          v19 = OUTLINED_FUNCTION_23();
          closure #5 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v19, v20, v21, v22);
          break;
        case 6:
          v23 = OUTLINED_FUNCTION_23();
          closure #6 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v23, v24, v25, v26);
          break;
        case 7:
          v27 = OUTLINED_FUNCTION_23();
          closure #7 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v27, v28, v29, v30);
          break;
        case 8:
          v31 = OUTLINED_FUNCTION_23();
          closure #8 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v31, v32, v33, v34);
          break;
        case 9:
          v35 = OUTLINED_FUNCTION_23();
          closure #9 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v35, v36, v37, v38);
          break;
        case 10:
          v39 = OUTLINED_FUNCTION_23();
          closure #10 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(v39, v40, v41, v42);
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_70();
}

void closure #1 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXSessionMetadata(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSessionMetadata?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXSessionMetadata);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXSessionMetadata);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, type metadata accessor for ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXSessionMetadata);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSessionMetadata?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXSessionMetadata);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #2 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXBeginRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXBeginRequest?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXBeginRequest?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXBeginRequest);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXBeginRequest);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, type metadata accessor for ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXBeginRequest?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXBeginRequest?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXBeginRequest?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXBeginRequest);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXBeginRequest?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXBeginRequest);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #3 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXAudioFrame(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioFrame?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXAudioFrame?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXAudioFrame);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXAudioFrame);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, type metadata accessor for ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXAudioFrame?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXAudioFrame?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXAudioFrame?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXAudioFrame);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXAudioFrame?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXAudioFrame);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #4 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXSpeechProfile(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfile?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXSpeechProfile);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXSpeechProfile);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, type metadata accessor for ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXSpeechProfile);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfile?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXSpeechProfile);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #5 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXCancelRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXCancelRequest?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXCancelRequest?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXCancelRequest);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXCancelRequest);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, type metadata accessor for ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXCancelRequest?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXCancelRequest?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXCancelRequest?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXCancelRequest);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXCancelRequest?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXCancelRequest);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #6 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXBeginDictation(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXBeginDictation?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXBeginDictation?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXBeginDictation);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXBeginDictation);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, type metadata accessor for ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXBeginDictation?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXBeginDictation?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXBeginDictation?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXBeginDictation);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXBeginDictation?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXBeginDictation);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #7 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXSpeechProfileBuildRequest);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXSpeechProfileBuildRequest);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXSpeechProfileBuildRequest);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildRequest?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXSpeechProfileBuildRequest);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #8 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileBegin?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #9 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileAddData?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #10 in ModalityXServerBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXStreamingSpeechProfileCommit?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void ModalityXServerBoundFrame.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_213(v1, v5);
  v2 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_216(v2);
  if (!v3)
  {
    v4 = (char *)&loc_24201114C + 4 * byte_24205B1DA[OUTLINED_FUNCTION_299()];
    __asm { BR              X10 }
  }
  type metadata accessor for ModalityXServerBoundFrame(0);
  UnknownStorage.traverse<A>(visitor:)();
  OUTLINED_FUNCTION_142();
}

void closure #1 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXSessionMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXSessionMetadata);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, type metadata accessor for ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXSessionMetadata);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #2 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXBeginRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXBeginRequest);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, type metadata accessor for ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXBeginRequest);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #3 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXAudioFrame(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXAudioFrame);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, type metadata accessor for ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXAudioFrame);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #4 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXSpeechProfile(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXSpeechProfile);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, type metadata accessor for ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXSpeechProfile);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #5 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXCancelRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXCancelRequest);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, type metadata accessor for ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXCancelRequest);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #6 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXBeginDictation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXBeginDictation);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, type metadata accessor for ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXBeginDictation);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #7 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXSpeechProfileBuildRequest);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXSpeechProfileBuildRequest);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #8 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #9 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #10 in ModalityXServerBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void static ModalityXServerBoundFrame.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37[6];

  OUTLINED_FUNCTION_19();
  v5 = v4;
  v7 = v6;
  v37[0] = OUTLINED_FUNCTION_15();
  v37[5] = *(_QWORD *)(v37[0] - 8);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_57(v9, v37[0]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = OUTLINED_FUNCTION_355(v11, v12, v13, v14, v15, v16, v17, v18, v37[0]);
  v20 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(v19);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_126();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXServerBoundFrame.OneOf_Payload?, ModalityXServerBoundFrame.OneOf_Payload?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_418();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_330();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_279();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v37 - v27;
  v37[1] = v7;
  OUTLINED_FUNCTION_193(v7, (uint64_t)v37 - v27);
  v37[3] = v5;
  OUTLINED_FUNCTION_193(v5, v0);
  v29 = v1 + *(int *)(v22 + 48);
  OUTLINED_FUNCTION_193((uint64_t)v28, v1);
  OUTLINED_FUNCTION_193(v0, v29);
  OUTLINED_FUNCTION_14(v1, 1, v20);
  if (v32)
  {
    OUTLINED_FUNCTION_171(v0);
    OUTLINED_FUNCTION_171((uint64_t)v28);
    v31 = OUTLINED_FUNCTION_14(v29, 1, v20);
    if (v32)
    {
      OUTLINED_FUNCTION_205(v31, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
LABEL_11:
      v36 = type metadata accessor for ModalityXServerBoundFrame(0);
      OUTLINED_FUNCTION_179(v36);
      OUTLINED_FUNCTION_273();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_160(v1);
      OUTLINED_FUNCTION_160(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_399(v1, v30, &demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_14(v29, 1, v20);
  if (v32)
  {
    OUTLINED_FUNCTION_171(v0);
    OUTLINED_FUNCTION_171((uint64_t)v28);
    OUTLINED_FUNCTION_398(v33, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
LABEL_9:
    OUTLINED_FUNCTION_205(v31, &demangling cache variable for type metadata for (ModalityXServerBoundFrame.OneOf_Payload?, ModalityXServerBoundFrame.OneOf_Payload?));
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_152(v29, v2);
  OUTLINED_FUNCTION_303();
  static ModalityXServerBoundFrame.OneOf_Payload.== infix(_:_:)();
  v35 = v34;
  OUTLINED_FUNCTION_39(v2);
  OUTLINED_FUNCTION_232(v0);
  OUTLINED_FUNCTION_232((uint64_t)v28);
  OUTLINED_FUNCTION_39(v3);
  OUTLINED_FUNCTION_232(v1);
  if ((v35 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  OUTLINED_FUNCTION_265();
  OUTLINED_FUNCTION_3_0();
}

Swift::Int ModalityXServerBoundFrame.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXServerBoundFrame, (uint64_t)&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXServerBoundFrame);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXServerBoundFrame()
{
  static ModalityXServerBoundFrame.protoMessageName.getter();
  return 0xD000000000000013;
}

uint64_t (*protocol witness for Message.unknownFields.modify in conformance ModalityXServerBoundFrame())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXServerBoundFrame()
{
  ModalityXServerBoundFrame.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXServerBoundFrame()
{
  ModalityXServerBoundFrame.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXServerBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, type metadata accessor for ModalityXServerBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXServerBoundFrame);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXServerBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, type metadata accessor for ModalityXServerBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXServerBoundFrame);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXServerBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, type metadata accessor for ModalityXServerBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXServerBoundFrame);
  return Message.hash(into:)();
}

unint64_t static ModalityXClientBoundFrame.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(19);
}

uint64_t static ModalityXClientBoundFrame._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXClientBoundFrame._protobuf_nameMap, a1);
}

void ModalityXClientBoundFrame.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v3 = OUTLINED_FUNCTION_23();
          closure #1 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v3, v4, v5, v6);
          break;
        case 2:
          v7 = OUTLINED_FUNCTION_23();
          closure #2 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v7, v8, v9, v10);
          break;
        case 3:
          v11 = OUTLINED_FUNCTION_23();
          closure #3 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v11, v12, v13, v14);
          break;
        case 4:
          v15 = OUTLINED_FUNCTION_23();
          closure #4 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v15, v16, v17, v18);
          break;
        case 5:
          v19 = OUTLINED_FUNCTION_23();
          closure #5 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v19, v20, v21, v22);
          break;
        case 6:
          v23 = OUTLINED_FUNCTION_23();
          closure #6 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(v23, v24, v25, v26);
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_70();
}

void closure #1 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXRequestComplete(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRequestComplete?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRequestComplete?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXRequestComplete);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXRequestComplete);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, type metadata accessor for ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXRequestComplete?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXRequestComplete?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRequestComplete?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXRequestComplete);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRequestComplete?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXRequestComplete);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #2 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXProcessingError(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXProcessingError?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXProcessingError);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXProcessingError);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXProcessingError?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXProcessingError?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXProcessingError?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXProcessingError);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXProcessingError?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXProcessingError);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #3 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXASRResult(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXASRResult?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXASRResult);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXASRResult);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, type metadata accessor for ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXASRResult?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXASRResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXASRResult?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXASRResult);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXASRResult?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXASRResult);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #4 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfileRebuildNeeded?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #5 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXRequestMitigated(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRequestMitigated?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXRequestMitigated);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXRequestMitigated);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, type metadata accessor for ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXRequestMitigated);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRequestMitigated?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXRequestMitigated);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #6 in ModalityXClientBoundFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXSpeechProfileBuildResponse);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXSpeechProfileBuildResponse);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXSpeechProfileBuildResponse);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXSpeechProfileBuildResponse?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXSpeechProfileBuildResponse);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void ModalityXClientBoundFrame.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char *v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_213(v1, v5);
  v2 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  OUTLINED_FUNCTION_216(v2);
  if (!v3)
  {
    v4 = (char *)&loc_242014124 + 4 * byte_24205B1EA[OUTLINED_FUNCTION_299()];
    __asm { BR              X10 }
  }
  type metadata accessor for ModalityXClientBoundFrame(0);
  UnknownStorage.traverse<A>(visitor:)();
  OUTLINED_FUNCTION_142();
}

void closure #1 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXRequestComplete(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXRequestComplete);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, type metadata accessor for ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXRequestComplete);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #2 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXProcessingError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXProcessingError);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXProcessingError);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #3 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXASRResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXASRResult);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, type metadata accessor for ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXASRResult);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #4 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #5 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXRequestMitigated(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXRequestMitigated);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, type metadata accessor for ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXRequestMitigated);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void closure #6 in ModalityXClientBoundFrame.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXSpeechProfileBuildResponse);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXSpeechProfileBuildResponse);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
  }
  __break(1u);
}

void static ModalityXClientBoundFrame.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37[6];

  OUTLINED_FUNCTION_19();
  v5 = v4;
  v7 = v6;
  v37[0] = OUTLINED_FUNCTION_15();
  v37[5] = *(_QWORD *)(v37[0] - 8);
  OUTLINED_FUNCTION_6_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_57(v9, v37[0]);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v19 = OUTLINED_FUNCTION_355(v11, v12, v13, v14, v15, v16, v17, v18, v37[0]);
  v20 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(v19);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_126();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXClientBoundFrame.OneOf_Payload?, ModalityXClientBoundFrame.OneOf_Payload?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_418();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_330();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_279();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v37 - v27;
  v37[1] = v7;
  OUTLINED_FUNCTION_193(v7, (uint64_t)v37 - v27);
  v37[3] = v5;
  OUTLINED_FUNCTION_193(v5, v0);
  v29 = v1 + *(int *)(v22 + 48);
  OUTLINED_FUNCTION_193((uint64_t)v28, v1);
  OUTLINED_FUNCTION_193(v0, v29);
  OUTLINED_FUNCTION_14(v1, 1, v20);
  if (v32)
  {
    OUTLINED_FUNCTION_171(v0);
    OUTLINED_FUNCTION_171((uint64_t)v28);
    v31 = OUTLINED_FUNCTION_14(v29, 1, v20);
    if (v32)
    {
      OUTLINED_FUNCTION_205(v31, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
LABEL_11:
      v36 = type metadata accessor for ModalityXClientBoundFrame(0);
      OUTLINED_FUNCTION_179(v36);
      OUTLINED_FUNCTION_273();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_160(v1);
      OUTLINED_FUNCTION_160(v5);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_399(v1, v30, &demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  OUTLINED_FUNCTION_14(v29, 1, v20);
  if (v32)
  {
    OUTLINED_FUNCTION_171(v0);
    OUTLINED_FUNCTION_171((uint64_t)v28);
    OUTLINED_FUNCTION_398(v33, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
LABEL_9:
    OUTLINED_FUNCTION_205(v31, &demangling cache variable for type metadata for (ModalityXClientBoundFrame.OneOf_Payload?, ModalityXClientBoundFrame.OneOf_Payload?));
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_152(v29, v2);
  OUTLINED_FUNCTION_303();
  static ModalityXClientBoundFrame.OneOf_Payload.== infix(_:_:)();
  v35 = v34;
  OUTLINED_FUNCTION_39(v2);
  OUTLINED_FUNCTION_232(v0);
  OUTLINED_FUNCTION_232((uint64_t)v28);
  OUTLINED_FUNCTION_39(v3);
  OUTLINED_FUNCTION_232(v1);
  if ((v35 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  OUTLINED_FUNCTION_265();
  OUTLINED_FUNCTION_3_0();
}

Swift::Int ModalityXClientBoundFrame.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXClientBoundFrame, (uint64_t)&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXClientBoundFrame);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXClientBoundFrame()
{
  static ModalityXClientBoundFrame.protoMessageName.getter();
  return 0xD000000000000013;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXClientBoundFrame()
{
  ModalityXClientBoundFrame.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXClientBoundFrame()
{
  ModalityXClientBoundFrame.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXClientBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, type metadata accessor for ModalityXClientBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXClientBoundFrame);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXClientBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, type metadata accessor for ModalityXClientBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXClientBoundFrame);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXClientBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, type metadata accessor for ModalityXClientBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXClientBoundFrame);
  return Message.hash(into:)();
}

unint64_t static ModalityXSessionMetadata.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(18);
}

uint64_t static ModalityXSessionMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSessionMetadata._protobuf_nameMap, a1);
}

void ModalityXSessionMetadata.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 12:
          OUTLINED_FUNCTION_264();
          break;
        case 10:
          OUTLINED_FUNCTION_82();
          closure #2 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)();
          break;
        case 11:
          OUTLINED_FUNCTION_231();
          break;
        case 1:
          OUTLINED_FUNCTION_82();
          closure #1 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)();
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_142();
}

uint64_t closure #1 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXSessionMetadata(0);
  type metadata accessor for ModalityXDeviceInfo(0);
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, type metadata accessor for ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t closure #2 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXSessionMetadata(0);
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

void ModalityXSessionMetadata.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);

  v1 = OUTLINED_FUNCTION_30();
  closure #1 in ModalityXSessionMetadata.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    v2 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXSessionMetadata.traverse<A>(visitor:)(v2);
    v3 = OUTLINED_FUNCTION_30();
    closure #3 in ModalityXSessionMetadata.traverse<A>(visitor:)(v3);
    v4 = OUTLINED_FUNCTION_30();
    closure #4 in ModalityXSessionMetadata.traverse<A>(visitor:)(v4, v5, v6, v7, v8);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

void closure #1 in ModalityXSessionMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXDeviceInfo(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModalityXSessionMetadata(0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1 + *(int *)(v8 + 20), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXDeviceInfo?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXDeviceInfo);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, type metadata accessor for ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXDeviceInfo);
  }
}

uint64_t closure #2 in ModalityXSessionMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXSessionMetadata(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 24)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #3 in ModalityXSessionMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXSessionMetadata(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 28)) != 8)
  {
    lazy protocol witness table accessor for type ModalityXUserInterfaceIdiom and conformance ModalityXUserInterfaceIdiom();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

Swift::Int ModalityXSessionMetadata.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXSessionMetadata, (uint64_t)&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSessionMetadata()
{
  static ModalityXSessionMetadata.protoMessageName.getter();
  return 0xD000000000000012;
}

uint64_t (*protocol witness for Message.unknownFields.modify in conformance ModalityXSessionMetadata())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSessionMetadata()
{
  ModalityXSessionMetadata.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSessionMetadata()
{
  ModalityXSessionMetadata.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSessionMetadata()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, type metadata accessor for ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSessionMetadata()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, type metadata accessor for ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSessionMetadata()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, type metadata accessor for ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
  return Message.hash(into:)();
}

unint64_t static ModalityXSpeechProfile.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(16);
}

uint64_t static ModalityXSpeechProfile._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfile._protobuf_nameMap, a1);
}

void ModalityXSpeechProfile.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        OUTLINED_FUNCTION_76();
      }
      else if (v1 == 1)
      {
        OUTLINED_FUNCTION_82();
        closure #1 in ModalityXSpeechProfile.decodeMessage<A>(decoder:)();
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_64();
}

uint64_t closure #1 in ModalityXSpeechProfile.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXSpeechProfile(0);
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

void ModalityXSpeechProfile.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_30();
  closure #1 in ModalityXSpeechProfile.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    v2 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXSpeechProfile.traverse<A>(visitor:)(v2);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

uint64_t closure #1 in ModalityXSpeechProfile.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXSpeechProfile(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 20)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #2 in ModalityXSpeechProfile.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for ModalityXSpeechProfile(0);
  v3 = a1 + *(int *)(result + 24);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    outlined copy of Data._Representation(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    return outlined consume of Data?(v5, v4);
  }
  return result;
}

Swift::Int ModalityXSpeechProfile.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXSpeechProfile, (uint64_t)&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfile()
{
  static ModalityXSpeechProfile.protoMessageName.getter();
  return 0xD000000000000010;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfile()
{
  ModalityXSpeechProfile.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfile()
{
  ModalityXSpeechProfile.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfile()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, type metadata accessor for ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfile()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, type metadata accessor for ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfile()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, type metadata accessor for ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
  return Message.hash(into:)();
}

uint64_t static ModalityXBeginRequest.protoMessageName.getter()
{
  return 0x6E696765422E584DLL;
}

uint64_t static ModalityXBeginRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXBeginRequest._protobuf_nameMap, a1);
}

void one-time initialization function for defaultInstance(uint64_t a1)
{
  one-time initialization function for defaultInstance(a1, type metadata accessor for ModalityXBeginRequest._StorageClass, ModalityXBeginRequest._StorageClass.init(), &static ModalityXBeginRequest._StorageClass.defaultInstance);
}

{
  one-time initialization function for defaultInstance(a1, type metadata accessor for ModalityXBeginDictation._StorageClass, ModalityXBeginDictation._StorageClass.init(), &static ModalityXBeginDictation._StorageClass.defaultInstance);
}

{
  one-time initialization function for defaultInstance(a1, type metadata accessor for ModalityXRecognitionCandidate._StorageClass, ModalityXRecognitionCandidate._StorageClass.init(), &static ModalityXRecognitionCandidate._StorageClass.defaultInstance);
}

{
  one-time initialization function for defaultInstance(a1, type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass, ModalityXFinalSpeechRecognitionResponse._StorageClass.init(), &static ModalityXFinalSpeechRecognitionResponse._StorageClass.defaultInstance);
}

void outlined init with take of ModalityXSessionMetadata(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_360(a1, a2, a3);
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_1_0();
}

void outlined init with copy of ModalityXSessionMetadata(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_360(a1, a2, a3);
  OUTLINED_FUNCTION_94(v3);
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for ModalityXAudioFrame(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAudioFrame);
}

uint64_t type metadata accessor for ModalityXSpeechProfile(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfile);
}

uint64_t type metadata accessor for ModalityXCancelRequest(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXCancelRequest);
}

uint64_t type metadata accessor for ModalityXBeginDictation(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXBeginDictation);
}

uint64_t ModalityXBeginRequest._StorageClass.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 19;
  v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  v2 = type metadata accessor for ModalityXAudioMetadata(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults) = 2;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation) = 2;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation) = 2;
  v3 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
  *v3 = 0;
  v3[1] = 0;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled) = 2;
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems) = MEMORY[0x24BEE4AF8];
  return v0;
}

uint64_t ModalityXBeginRequest._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _QWORD *v33;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  MEMORY[0x24BDAC7A8]();
  v28 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 32) = 19;
  v5 = v1
     + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  v6 = type metadata accessor for ModalityXAudioMetadata(0);
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  v29 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  *v29 = 2;
  v30 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
  *v30 = 2;
  v31 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
  *v31 = 2;
  v7 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
  *v7 = 0;
  v7[1] = 0;
  v32 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  *v32 = 2;
  v33 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  *v33 = MEMORY[0x24BEE4AF8];
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v9;
  *(_QWORD *)(v1 + 24) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10 = *(_BYTE *)(a1 + 32);
  swift_beginAccess();
  *(_BYTE *)(v2 + 32) = v10;
  v11 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  swift_beginAccess();
  v12 = v28;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v11, v28, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v12, v5, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_endAccess();
  v13 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  swift_beginAccess();
  LOBYTE(v13) = *v13;
  v14 = v29;
  swift_beginAccess();
  *v14 = (_BYTE)v13;
  v15 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
  swift_beginAccess();
  LOBYTE(v15) = *v15;
  v16 = v30;
  swift_beginAccess();
  *v16 = (_BYTE)v15;
  v17 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
  swift_beginAccess();
  LOBYTE(v17) = *v17;
  v18 = v31;
  swift_beginAccess();
  *v18 = (_BYTE)v17;
  v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
  swift_beginAccess();
  v21 = *v19;
  v20 = v19[1];
  swift_beginAccess();
  *v7 = v21;
  v7[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  swift_beginAccess();
  LOBYTE(v22) = *v22;
  v23 = v32;
  swift_beginAccess();
  *v23 = (_BYTE)v22;
  v24 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  swift_beginAccess();
  v25 = *v24;
  swift_bridgeObjectRetain();
  swift_release();
  v26 = v33;
  swift_beginAccess();
  *v26 = v25;
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ModalityXBeginRequest._StorageClass.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalityXBeginRequest._StorageClass.__deallocating_deinit()
{
  return ModalityXBeginRequest._StorageClass.__deallocating_deinit((void (*)(void))ModalityXBeginRequest._StorageClass.deinit);
}

void ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  ModalityXBeginRequest.decodeMessage<A>(decoder:)();
}

{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;

  OUTLINED_FUNCTION_392();
  v1 = v0;
  v3 = (uint64_t (*)(_QWORD))v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  ModalityXBeginRequest._uniqueStorage()(v2, v10, v11);
  swift_release();
  v3(0);
  v12 = OUTLINED_FUNCTION_40();
  v1(v12, v9, v7, v5);
  swift_release();
  OUTLINED_FUNCTION_89();
}

void closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  char v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v9 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    v11 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118];
    while ((v10 & 1) == 0)
    {
      switch(v9)
      {
        case 20:
          closure #3 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 21:
        case 22:
        case 23:
        case 25:
          closure #4 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 24:
          closure #7 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)(a2, a1, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID, v11);
          break;
        case 26:
          closure #9 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        default:
          if (v9 == 2)
          {
            closure #2 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          }
          else if (v9 == 1)
          {
            closure #1 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          }
          break;
      }
      v9 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
}

uint64_t closure #1 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  swift_beginAccess();
  dispatch thunk of Decoder.decodeSingularStringField(value:)();
  return swift_endAccess();
}

uint64_t closure #2 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  swift_beginAccess();
  lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin();
  dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
  return swift_endAccess();
}

uint64_t ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXBeginRequest.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXBeginRequest, (void (*)(void))closure #1 in ModalityXBeginRequest.traverse<A>(visitor:));
}

uint64_t closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = closure #1 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(a1);
  if (!v1)
  {
    closure #2 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(a1);
    closure #3 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    v4 = a1
       + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems;
    result = swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      swift_bridgeObjectRetain();
      dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t closure #1 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  if (*(_QWORD *)(a1 + 24))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t closure #2 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  if (*(_BYTE *)(a1 + 32) != 19)
  {
    lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #1 in static ModalityXBeginRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unsigned __int8 *v34;
  int v35;
  unsigned __int8 *v36;
  int v37;
  unsigned __int8 *v38;
  int v39;
  unsigned __int8 *v40;
  int v41;
  unsigned __int8 *v42;
  int v43;
  unsigned __int8 *v44;
  int v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v52;
  unsigned __int8 *v53;
  int v54;
  unsigned __int8 *v55;
  int v56;
  _QWORD **v57;
  _QWORD *v58;
  _QWORD **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4 = type metadata accessor for ModalityXAudioMetadata(0);
  MEMORY[0x24BDAC7A8](v4);
  v61 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAudioMetadata?, ModalityXAudioMetadata?));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v60 - v13;
  swift_beginAccess();
  v62 = a1;
  v16 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v17 = *(_QWORD *)(a2 + 24);
  if (!v15)
  {
    if (v17)
      goto LABEL_19;
    goto LABEL_10;
  }
  if (!v17)
    goto LABEL_19;
  v18 = v16 == *(_QWORD *)(a2 + 16) && v15 == v17;
  if (v18 || (v19 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
LABEL_10:
    v20 = v62;
    swift_beginAccess();
    v21 = *(unsigned __int8 *)(v20 + 32);
    swift_beginAccess();
    v22 = *(unsigned __int8 *)(a2 + 32);
    if (v21 == 19)
    {
      if (v22 == 19)
        goto LABEL_12;
    }
    else if (v22 != 19 && v21 == v22)
    {
LABEL_12:
      v23 = v20
          + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
      swift_beginAccess();
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v23, (uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
      v24 = a2
          + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
      swift_beginAccess();
      v25 = (uint64_t)&v8[*(int *)(v6 + 48)];
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, (uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
      outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v24, v25, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) == 1)
      {
        v26 = v62;
        swift_retain();
        swift_retain();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
        v27 = a2;
        if (__swift_getEnumTagSinglePayload(v25, 1, v4) == 1)
        {
          v28 = v26;
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
LABEL_27:
          v34 = (unsigned __int8 *)(v28
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
          swift_beginAccess();
          v35 = *v34;
          v36 = (unsigned __int8 *)(v27
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
          swift_beginAccess();
          v37 = *v36;
          if (v35 == 2)
          {
            if (v37 != 2)
              goto LABEL_23;
          }
          else if (v37 == 2 || ((((v37 & 1) == 0) ^ v35) & 1) == 0)
          {
            goto LABEL_23;
          }
          v38 = (unsigned __int8 *)(v28
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
          swift_beginAccess();
          v39 = *v38;
          v40 = (unsigned __int8 *)(v27
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedDictation);
          swift_beginAccess();
          v41 = *v40;
          if (v39 == 2)
          {
            if (v41 != 2)
              goto LABEL_23;
          }
          else if (v41 == 2 || ((((v41 & 1) == 0) ^ v39) & 1) == 0)
          {
            goto LABEL_23;
          }
          v42 = (unsigned __int8 *)(v28
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
          swift_beginAccess();
          v43 = *v42;
          v44 = (unsigned __int8 *)(v27
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isPromptedConfirmation);
          swift_beginAccess();
          v45 = *v44;
          if (v43 == 2)
          {
            if (v45 != 2)
              goto LABEL_23;
          }
          else if (v45 == 2 || ((((v45 & 1) == 0) ^ v43) & 1) == 0)
          {
            goto LABEL_23;
          }
          v46 = (uint64_t *)(v28
                          + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
          swift_beginAccess();
          v47 = *v46;
          v48 = v46[1];
          v49 = (_QWORD *)(v27
                         + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__foregroundAppID);
          swift_beginAccess();
          v50 = v49[1];
          if (v48)
          {
            if (!v50)
              goto LABEL_23;
            if (v47 != *v49 || v48 != v50)
            {
              v19 = 0;
              if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                goto LABEL_24;
            }
          }
          else if (v50)
          {
            goto LABEL_23;
          }
          v52 = v62;
          v53 = (unsigned __int8 *)(v62
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
          swift_beginAccess();
          v54 = *v53;
          v55 = (unsigned __int8 *)(v27
                                  + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
          swift_beginAccess();
          v56 = *v55;
          if (v54 == 2)
          {
            if (v56 == 2)
            {
LABEL_56:
              v57 = (_QWORD **)(v52
                              + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
              swift_beginAccess();
              v58 = *v57;
              v59 = (_QWORD **)(v27
                              + OBJC_IVAR____TtCV16ModalityXObjects21ModalityXBeginRequestP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
              swift_beginAccess();
              v19 = specialized static Array<A>.== infix(_:_:)(v58, *v59);
              goto LABEL_24;
            }
          }
          else if (v56 != 2 && ((((v56 & 1) == 0) ^ v54) & 1) != 0)
          {
            goto LABEL_56;
          }
LABEL_23:
          v19 = 0;
LABEL_24:
          swift_release();
          swift_release();
          return v19 & 1;
        }
      }
      else
      {
        outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
        if (__swift_getEnumTagSinglePayload(v25, 1, v4) != 1)
        {
          v31 = v61;
          outlined init with take of ModalityXSessionMetadata(v25, v61, type metadata accessor for ModalityXAudioMetadata);
          v28 = v62;
          swift_retain();
          swift_retain();
          v32 = static ModalityXAudioMetadata.== infix(_:_:)((uint64_t)v12, v31);
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v31, type metadata accessor for ModalityXAudioMetadata);
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
          v33 = (uint64_t)v12;
          v27 = a2;
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v33, type metadata accessor for ModalityXAudioMetadata);
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
          if ((v32 & 1) == 0)
            goto LABEL_23;
          goto LABEL_27;
        }
        swift_retain();
        swift_retain();
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v14, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v12, type metadata accessor for ModalityXAudioMetadata);
      }
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for (ModalityXAudioMetadata?, ModalityXAudioMetadata?));
      goto LABEL_23;
    }
LABEL_19:
    v19 = 0;
  }
  return v19 & 1;
}

Swift::Int ModalityXBeginRequest.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXBeginRequest, (uint64_t)&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXBeginRequest()
{
  return 0x6E696765422E584DLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXBeginRequest()
{
  ModalityXBeginRequest.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXBeginRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXBeginRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXBeginRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, type metadata accessor for ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXBeginRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, type metadata accessor for ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXBeginRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, type metadata accessor for ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
  return Message.hash(into:)();
}

unint64_t static ModalityXBeginDictation.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(17);
}

uint64_t static ModalityXBeginDictation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXBeginDictation._protobuf_nameMap, a1);
}

void one-time initialization function for defaultInstance(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), _QWORD *a4)
{
  OUTLINED_FUNCTION_211(a1, a2);
  OUTLINED_FUNCTION_10();
  *a4 = a3();
  OUTLINED_FUNCTION_9_0();
}

uint64_t type metadata accessor for ModalityXSpeechProfileBuildRequest(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfileBuildRequest);
}

uint64_t type metadata accessor for ModalityXStreamingSpeechProfileBegin(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXStreamingSpeechProfileBegin);
}

uint64_t type metadata accessor for ModalityXStreamingSpeechProfileAddData(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXStreamingSpeechProfileAddData);
}

uint64_t type metadata accessor for ModalityXStreamingSpeechProfileCommit(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXStreamingSpeechProfileCommit);
}

uint64_t type metadata accessor for ModalityXServerBoundFrame(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXServerBoundFrame);
}

uint64_t ModalityXBeginDictation._StorageClass.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  v2 = type metadata accessor for ModalityXAudioMetadata(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  v3 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  *v3 = 0;
  v3[1] = 0;
  v4 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  *v4 = 0;
  v4[1] = 0;
  v5 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  *v7 = 0;
  v7[1] = 0;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType) = 16;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey) = 12;
  v8 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(v0
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  *v10 = 0;
  v10[1] = 0;
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages) = v11;
  v12 = (_QWORD *)(v0
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  *v12 = 0;
  v12[1] = 0;
  *(_OWORD *)(v0
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken) = xmmword_24205B150;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech) = 2;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition) = 2;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio) = 2;
  v13 = (_QWORD *)(v0
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  *v13 = 0;
  v13[1] = 0;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults) = 2;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin) = 19;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled) = 2;
  return v0;
}

uint64_t ModalityXBeginDictation._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _BYTE *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  _BYTE *v72;
  _BYTE *v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _BYTE *v80;
  _BYTE *v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v87;
  _QWORD *v88;
  _BYTE *v89;
  _BYTE *v90;
  _QWORD *v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t *v97;
  _BYTE *v98;
  _BYTE *v99;
  _BYTE *v100;
  _QWORD *v101;
  _BYTE *v102;
  _BYTE *v103;
  _BYTE *v104;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  MEMORY[0x24BDAC7A8]();
  v4 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v1
     + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  v6 = type metadata accessor for ModalityXAudioMetadata(0);
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  v7 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  *v10 = 0;
  v10[1] = 0;
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  v88 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  *v11 = 0;
  v11[1] = 0;
  v89 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType) = 16;
  v12 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  *v12 = 12;
  v13 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  v90 = v12;
  v91 = v13;
  *v13 = 0;
  v13[1] = 0;
  v14 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  v92 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  *v14 = 0;
  v14[1] = 0;
  v15 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  v93 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  *v15 = 0;
  v15[1] = 0;
  v94 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  v16 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems) = MEMORY[0x24BEE4AF8];
  v17 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
  *v17 = v16;
  v18 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  v95 = v17;
  v96 = v18;
  *v18 = 0;
  v18[1] = 0;
  v97 = (uint64_t *)(v1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  *(_OWORD *)(v1
            + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken) = xmmword_24205B150;
  v98 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech) = 2;
  v99 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition) = 2;
  v100 = (_BYTE *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio) = 2;
  v19 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  v101 = (_QWORD *)(v1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  *v19 = 0;
  v19[1] = 0;
  v102 = (_BYTE *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults) = 2;
  v20 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  *v20 = 19;
  v103 = v20;
  v104 = (_BYTE *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  *v104 = 2;
  v21 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  swift_beginAccess();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v21, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, v5, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_endAccess();
  v22 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  swift_beginAccess();
  v24 = *v22;
  v23 = v22[1];
  swift_beginAccess();
  *v7 = v24;
  v7[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  swift_beginAccess();
  v27 = *v25;
  v26 = v25[1];
  swift_beginAccess();
  *v8 = v27;
  v8[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  swift_beginAccess();
  v30 = *v28;
  v29 = v28[1];
  swift_beginAccess();
  *v9 = v30;
  v9[1] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  swift_beginAccess();
  v33 = *v31;
  v32 = v31[1];
  swift_beginAccess();
  *v10 = v33;
  v10[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  swift_beginAccess();
  v36 = *v34;
  v35 = v34[1];
  v37 = v88;
  swift_beginAccess();
  *v37 = v36;
  v37[1] = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  swift_beginAccess();
  LOBYTE(v38) = *v38;
  v39 = v89;
  swift_beginAccess();
  *v39 = (_BYTE)v38;
  v40 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  swift_beginAccess();
  LOBYTE(v40) = *v40;
  v41 = v90;
  swift_beginAccess();
  *v41 = (_BYTE)v40;
  v42 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  swift_beginAccess();
  v44 = *v42;
  v43 = v42[1];
  v45 = v91;
  swift_beginAccess();
  *v45 = v44;
  v45[1] = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  swift_beginAccess();
  v48 = *v46;
  v47 = v46[1];
  v49 = v92;
  swift_beginAccess();
  *v49 = v48;
  v49[1] = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  swift_beginAccess();
  v52 = *v50;
  v51 = v50[1];
  v53 = v93;
  swift_beginAccess();
  *v53 = v52;
  v53[1] = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v54 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  swift_beginAccess();
  v55 = *v54;
  v56 = v94;
  swift_beginAccess();
  *v56 = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
  swift_beginAccess();
  v58 = *v57;
  v59 = v95;
  swift_beginAccess();
  *v59 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  swift_beginAccess();
  v62 = *v60;
  v61 = v60[1];
  v63 = v96;
  swift_beginAccess();
  *v63 = v62;
  v63[1] = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  swift_beginAccess();
  v66 = *v64;
  v65 = v64[1];
  v67 = v97;
  swift_beginAccess();
  v68 = *v67;
  v69 = v67[1];
  *v67 = v66;
  v67[1] = v65;
  outlined copy of Data?(v66, v65);
  outlined consume of Data?(v68, v69);
  v70 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
  swift_beginAccess();
  LOBYTE(v70) = *v70;
  v71 = v98;
  swift_beginAccess();
  *v71 = (_BYTE)v70;
  v72 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
  swift_beginAccess();
  LOBYTE(v72) = *v72;
  v73 = v99;
  swift_beginAccess();
  *v73 = (_BYTE)v72;
  v74 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
  swift_beginAccess();
  LOBYTE(v74) = *v74;
  v75 = v100;
  swift_beginAccess();
  *v75 = (_BYTE)v74;
  v76 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  swift_beginAccess();
  v78 = *v76;
  v77 = v76[1];
  v79 = v101;
  swift_beginAccess();
  *v79 = v78;
  v79[1] = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  swift_beginAccess();
  LOBYTE(v80) = *v80;
  v81 = v102;
  swift_beginAccess();
  *v81 = (_BYTE)v80;
  v82 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  swift_beginAccess();
  LOBYTE(v82) = *v82;
  v83 = v103;
  swift_beginAccess();
  *v83 = (_BYTE)v82;
  v84 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  swift_beginAccess();
  LOBYTE(v84) = *v84;
  swift_release();
  v85 = v104;
  swift_beginAccess();
  *v85 = (_BYTE)v84;
  return v1;
}

uint64_t ModalityXBeginDictation._StorageClass.deinit()
{
  uint64_t v0;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined consume of Data?(*(_QWORD *)(v0+ OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken), *(_QWORD *)(v0+ OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken+ 8));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalityXBeginDictation._StorageClass.__deallocating_deinit()
{
  return ModalityXBeginRequest._StorageClass.__deallocating_deinit((void (*)(void))ModalityXBeginDictation._StorageClass.deinit);
}

uint64_t ModalityXBeginRequest._StorageClass.__deallocating_deinit(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

void ModalityXBeginDictation.decodeMessage<A>(decoder:)()
{
  ModalityXBeginRequest.decodeMessage<A>(decoder:)();
}

void closure #1 in ModalityXBeginDictation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t (*v22)();
  void (*v23)(uint64_t, uint64_t, uint64_t);

  v9 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    v11 = MEMORY[0x24BE5C118];
    while ((v10 & 1) == 0)
    {
      switch(v9)
      {
        case 1:
          closure #3 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 2:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID;
          goto LABEL_21;
        case 3:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID;
          goto LABEL_21;
        case 4:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel;
          goto LABEL_21;
        case 5:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName;
          goto LABEL_21;
        case 6:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion;
          goto LABEL_21;
        case 7:
          v17 = a2;
          v18 = a1;
          v19 = a3;
          v20 = a4;
          v21 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType;
          v22 = lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType;
          goto LABEL_24;
        case 8:
          v17 = a2;
          v18 = a1;
          v19 = a3;
          v20 = a4;
          v21 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey;
          v22 = lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey;
          goto LABEL_24;
        case 9:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText;
          goto LABEL_21;
        case 10:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText;
          goto LABEL_21;
        case 11:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText;
          goto LABEL_21;
        case 12:
        case 13:
          closure #9 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 14:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region;
          goto LABEL_21;
        case 15:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken;
          v23 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A0];
          goto LABEL_22;
        case 16:
        case 17:
        case 18:
        case 20:
        case 22:
          closure #4 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)();
          break;
        case 19:
          v12 = a2;
          v13 = a1;
          v14 = a3;
          v15 = a4;
          v16 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier;
LABEL_21:
          v23 = (void (*)(uint64_t, uint64_t, uint64_t))v11;
LABEL_22:
          closure #7 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)(v12, v13, v14, v15, v16, v23);
          break;
        case 21:
          v17 = a2;
          v18 = a1;
          v19 = a3;
          v20 = a4;
          v21 = &OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin;
          v22 = lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin;
LABEL_24:
          closure #7 in closure #1 in ModalityXBeginDictation.decodeMessage<A>(decoder:)(v17, v18, v19, v20, (uint64_t)v21, (void (*)(uint64_t))v22);
          break;
        default:
          break;
      }
      v9 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
}

void closure #3 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_91();
  type metadata accessor for ModalityXAudioMetadata(0);
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, type metadata accessor for ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_192();
}

void closure #9 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_420();
  dispatch thunk of Decoder.decodeRepeatedStringField(value:)();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_298();
}

void closure #7 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = a2 + *a5;
  OUTLINED_FUNCTION_189();
  a6(v9, a3, a4);
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_192();
}

void closure #7 in closure #1 in ModalityXBeginDictation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v7;

  v7 = OUTLINED_FUNCTION_189();
  a6(v7);
  dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_267();
}

void closure #4 in closure #1 in ModalityXBeginRequest.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_420();
  dispatch thunk of Decoder.decodeSingularBoolField(value:)();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_298();
}

uint64_t ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXBeginRequest.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(void))closure #1 in ModalityXBeginDictation.traverse<A>(visitor:));
}

uint64_t ModalityXBeginRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5;
  void (*v7)(_QWORD);
  uint64_t result;

  OUTLINED_FUNCTION_178();
  v7(0);
  swift_retain();
  OUTLINED_FUNCTION_103();
  a5();
  result = swift_release();
  if (!v5)
    return OUTLINED_FUNCTION_301();
  return result;
}

void closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  closure #3 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
  if (!v1)
  {
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(a1);
    closure #8 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(a1);
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    v3 = a1
       + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      swift_bridgeObjectRetain();
      dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)();
      swift_bridgeObjectRelease();
    }
    v4 = a1
       + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      swift_bridgeObjectRetain();
      dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)();
      swift_bridgeObjectRelease();
    }
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #13 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(a1);
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #19 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(a1);
    closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
  }
}

void closure #3 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_175();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_334();
  v8 = type metadata accessor for ModalityXAudioMetadata(v7);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_157();
  v10 = v5 + *v3;
  OUTLINED_FUNCTION_7_0();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v10, v1, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  if (__swift_getEnumTagSinglePayload(v1, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata(v1, v0, type metadata accessor for ModalityXAudioMetadata);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, type metadata accessor for ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v0, type metadata accessor for ModalityXAudioMetadata);
  }
  OUTLINED_FUNCTION_54();
}

uint64_t closure #7 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t result;

  v1 = (_BYTE *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  result = swift_beginAccess();
  if (*v1 != 16)
  {
    lazy protocol witness table accessor for type ModalityXFieldKeyboardType and conformance ModalityXFieldKeyboardType();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #8 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t result;

  v1 = (_BYTE *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  result = swift_beginAccess();
  if (*v1 != 12)
  {
    lazy protocol witness table accessor for type ModalityXFieldKeyboardReturnKey and conformance ModalityXFieldKeyboardReturnKey();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #13 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  v1 = (uint64_t *)(a1
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  result = swift_beginAccess();
  v3 = v1[1];
  if (v3 >> 60 != 15)
  {
    v4 = *v1;
    outlined copy of Data._Representation(v4, v3);
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    return outlined consume of Data?(v4, v3);
  }
  return result;
}

void closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_297();
  v2 = v0 + v1;
  OUTLINED_FUNCTION_7_0();
  if (*(_QWORD *)(v2 + 8))
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_143();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_267();
}

uint64_t closure #19 in closure #1 in ModalityXBeginDictation.traverse<A>(visitor:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t result;

  v1 = (_BYTE *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  result = swift_beginAccess();
  if (*v1 != 19)
  {
    lazy protocol witness table accessor for type ModalityXInputOrigin and conformance ModalityXInputOrigin();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

void closure #4 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;

  OUTLINED_FUNCTION_297();
  v2 = (_BYTE *)(v0 + v1);
  OUTLINED_FUNCTION_7_0();
  if (*v2 != 2)
    OUTLINED_FUNCTION_346();
  OUTLINED_FUNCTION_192();
}

uint64_t closure #1 in static ModalityXBeginDictation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  BOOL v53;
  unsigned __int8 *v54;
  int v55;
  unsigned __int8 *v56;
  int v57;
  unsigned __int8 *v58;
  int v59;
  unsigned __int8 *v60;
  int v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  BOOL v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  BOOL v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  BOOL v79;
  _QWORD **v80;
  _QWORD *v81;
  _QWORD **v82;
  _QWORD **v83;
  _QWORD *v84;
  _QWORD **v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  BOOL v91;
  uint64_t *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  unsigned __int8 *v99;
  int v100;
  unsigned __int8 *v101;
  int v102;
  unsigned __int8 *v103;
  int v104;
  unsigned __int8 *v105;
  int v106;
  unsigned __int8 *v107;
  int v108;
  unsigned __int8 *v109;
  int v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  BOOL v116;
  unsigned __int8 *v117;
  int v118;
  unsigned __int8 *v119;
  int v120;
  unsigned __int8 *v121;
  int v122;
  unsigned __int8 *v123;
  int v124;
  unsigned __int8 *v125;
  int v126;
  unsigned __int8 *v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v4 = type metadata accessor for ModalityXAudioMetadata(0);
  MEMORY[0x24BDAC7A8](v4);
  v130 = (uint64_t)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAudioMetadata?, ModalityXAudioMetadata?));
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v131 = (uint64_t)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v129 - v12;
  v14 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  swift_beginAccess();
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v14, (uint64_t)v13, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  v15 = a2
      + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__audioMetadata;
  swift_beginAccess();
  v16 = (uint64_t)&v8[*(int *)(v6 + 48)];
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v13, (uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v15, v16, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v13, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v16, 1, v4);
    v18 = a2;
    v19 = a1;
    if (EnumTagSinglePayload == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
      goto LABEL_10;
    }
LABEL_6:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for (ModalityXAudioMetadata?, ModalityXAudioMetadata?));
    goto LABEL_7;
  }
  v19 = a1;
  v20 = v131;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, v131, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  if (__swift_getEnumTagSinglePayload(v16, 1, v4) == 1)
  {
    swift_retain();
    swift_retain();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v13, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v20, type metadata accessor for ModalityXAudioMetadata);
    goto LABEL_6;
  }
  v22 = v130;
  outlined init with take of ModalityXSessionMetadata(v16, v130, type metadata accessor for ModalityXAudioMetadata);
  swift_retain();
  v18 = a2;
  swift_retain();
  v23 = static ModalityXAudioMetadata.== infix(_:_:)(v20, v22);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v22, type metadata accessor for ModalityXAudioMetadata);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v13, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v20, type metadata accessor for ModalityXAudioMetadata);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v8, &demangling cache variable for type metadata for ModalityXAudioMetadata?);
  if ((v23 & 1) == 0)
    goto LABEL_7;
LABEL_10:
  v24 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  swift_beginAccess();
  v25 = *v24;
  v26 = v24[1];
  v27 = (_QWORD *)(v18
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__requestID);
  swift_beginAccess();
  v28 = v27[1];
  if (v26)
  {
    if (!v28)
      goto LABEL_7;
    v29 = v25 == *v27 && v26 == v28;
    if (!v29 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      goto LABEL_7;
  }
  else if (v28)
  {
    goto LABEL_7;
  }
  v30 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  swift_beginAccess();
  v31 = *v30;
  v32 = v30[1];
  v33 = (_QWORD *)(v18
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldID);
  swift_beginAccess();
  v34 = v33[1];
  if (v32)
  {
    if (!v34)
      goto LABEL_7;
    v35 = v31 == *v33 && v32 == v34;
    if (!v35 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      goto LABEL_7;
  }
  else if (v34)
  {
    goto LABEL_7;
  }
  v36 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  swift_beginAccess();
  v37 = *v36;
  v38 = v36[1];
  v39 = (_QWORD *)(v18
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__fieldLabel);
  swift_beginAccess();
  v40 = v39[1];
  if (v38)
  {
    if (!v40)
      goto LABEL_7;
    v41 = v37 == *v39 && v38 == v40;
    if (!v41 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      goto LABEL_7;
  }
  else if (v40)
  {
    goto LABEL_7;
  }
  v42 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  swift_beginAccess();
  v43 = *v42;
  v44 = v42[1];
  v45 = (_QWORD *)(v18
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationName);
  swift_beginAccess();
  v46 = v45[1];
  if (v44)
  {
    if (!v46)
      goto LABEL_7;
    v47 = v43 == *v45 && v44 == v46;
    if (!v47 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      goto LABEL_7;
  }
  else if (v46)
  {
    goto LABEL_7;
  }
  v48 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  swift_beginAccess();
  v49 = *v48;
  v50 = v48[1];
  v51 = (_QWORD *)(v18
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__applicationVersion);
  swift_beginAccess();
  v52 = v51[1];
  if (v50)
  {
    if (!v52)
      goto LABEL_7;
    v53 = v49 == *v51 && v50 == v52;
    if (!v53 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      goto LABEL_7;
  }
  else if (v52)
  {
    goto LABEL_7;
  }
  v54 = (unsigned __int8 *)(v19
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  swift_beginAccess();
  v55 = *v54;
  v56 = (unsigned __int8 *)(v18
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardType);
  swift_beginAccess();
  v57 = *v56;
  if (v55 == 16)
  {
    if (v57 != 16)
      goto LABEL_7;
  }
  else if (v57 == 16 || v55 != v57)
  {
    goto LABEL_7;
  }
  v58 = (unsigned __int8 *)(v19
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  swift_beginAccess();
  v59 = *v58;
  v60 = (unsigned __int8 *)(v18
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardReturnKey);
  swift_beginAccess();
  v61 = *v60;
  if (v59 == 12)
  {
    if (v61 != 12)
      goto LABEL_7;
  }
  else if (v61 == 12 || v59 != v61)
  {
    goto LABEL_7;
  }
  v62 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  swift_beginAccess();
  v63 = *v62;
  v64 = v62[1];
  v65 = (_QWORD *)(v18
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__selectedText);
  swift_beginAccess();
  v66 = v65[1];
  if (v64)
  {
    if (!v66)
      goto LABEL_7;
    v67 = v63 == *v65 && v64 == v66;
    if (!v67 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      goto LABEL_7;
  }
  else if (v66)
  {
    goto LABEL_7;
  }
  v68 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  swift_beginAccess();
  v69 = *v68;
  v70 = v68[1];
  v71 = (_QWORD *)(v18
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__prefixText);
  swift_beginAccess();
  v72 = v71[1];
  if (v70)
  {
    if (!v72)
      goto LABEL_7;
    v73 = v69 == *v71 && v70 == v72;
    if (!v73 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      goto LABEL_7;
  }
  else if (v72)
  {
    goto LABEL_7;
  }
  v74 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  swift_beginAccess();
  v75 = *v74;
  v76 = v74[1];
  v77 = (_QWORD *)(v18
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__postfixText);
  swift_beginAccess();
  v78 = v77[1];
  if (!v76)
  {
    if (!v78)
      goto LABEL_92;
LABEL_7:
    swift_release();
    swift_release();
    return 0;
  }
  if (!v78)
    goto LABEL_7;
  v79 = v75 == *v77 && v76 == v78;
  if (!v79 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    goto LABEL_7;
LABEL_92:
  v80 = (_QWORD **)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  swift_beginAccess();
  v81 = *v80;
  v82 = (_QWORD **)(v18
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inlineLmeItems);
  swift_beginAccess();
  if ((specialized static Array<A>.== infix(_:_:)(v81, *v82) & 1) == 0)
    goto LABEL_7;
  v83 = (_QWORD **)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
  swift_beginAccess();
  v84 = *v83;
  v85 = (_QWORD **)(v18
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__languages);
  swift_beginAccess();
  if ((specialized static Array<A>.== infix(_:_:)(v84, *v85) & 1) == 0)
    goto LABEL_7;
  v86 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  swift_beginAccess();
  v87 = *v86;
  v88 = v86[1];
  v89 = (_QWORD *)(v18
                 + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__region);
  swift_beginAccess();
  v90 = v89[1];
  if (v88)
  {
    if (!v90)
      goto LABEL_7;
    v91 = v87 == *v89 && v88 == v90;
    if (!v91 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      goto LABEL_7;
  }
  else if (v90)
  {
    goto LABEL_7;
  }
  v92 = (uint64_t *)(v19
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  swift_beginAccess();
  v93 = *v92;
  v94 = v92[1];
  v95 = (uint64_t *)(v18
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__activationToken);
  swift_beginAccess();
  v96 = *v95;
  v97 = v95[1];
  if (v94 >> 60 == 15)
  {
    if (v97 >> 60 == 15)
      goto LABEL_109;
    goto LABEL_107;
  }
  if (v97 >> 60 == 15)
  {
LABEL_107:
    outlined copy of Data?(v93, v94);
    outlined copy of Data?(v96, v97);
    outlined consume of Data?(v93, v94);
    outlined consume of Data?(v96, v97);
    goto LABEL_7;
  }
  outlined copy of Data?(v93, v94);
  outlined copy of Data?(v96, v97);
  v98 = MEMORY[0x2426A2D44](v93, v94, v96, v97);
  outlined consume of Data?(v96, v97);
  outlined consume of Data?(v93, v94);
  if ((v98 & 1) == 0)
    goto LABEL_7;
LABEL_109:
  v99 = (unsigned __int8 *)(v19
                          + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
  swift_beginAccess();
  v100 = *v99;
  v101 = (unsigned __int8 *)(v18
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__censorSpeech);
  swift_beginAccess();
  v102 = *v101;
  if (v100 == 2)
  {
    if (v102 != 2)
      goto LABEL_7;
  }
  else if (v102 == 2 || ((((v102 & 1) == 0) ^ v100) & 1) == 0)
  {
    goto LABEL_7;
  }
  v103 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
  swift_beginAccess();
  v104 = *v103;
  v105 = (unsigned __int8 *)(v18
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__speakerIndependentRecognition);
  swift_beginAccess();
  v106 = *v105;
  if (v104 == 2)
  {
    if (v106 != 2)
      goto LABEL_7;
  }
  else if (v106 == 2 || ((((v106 & 1) == 0) ^ v104) & 1) == 0)
  {
    goto LABEL_7;
  }
  v107 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
  swift_beginAccess();
  v108 = *v107;
  v109 = (unsigned __int8 *)(v18
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__saveRequestAudio);
  swift_beginAccess();
  v110 = *v109;
  if (v108 == 2)
  {
    if (v110 != 2)
      goto LABEL_7;
  }
  else if (v110 == 2 || ((((v110 & 1) == 0) ^ v108) & 1) == 0)
  {
    goto LABEL_7;
  }
  v111 = (uint64_t *)(v19
                   + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  swift_beginAccess();
  v112 = *v111;
  v113 = v111[1];
  v114 = (_QWORD *)(v18
                  + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__keyboardIdentifier);
  swift_beginAccess();
  v115 = v114[1];
  if (v113)
  {
    if (!v115)
      goto LABEL_7;
    v116 = v112 == *v114 && v113 == v115;
    if (!v116 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      goto LABEL_7;
  }
  else if (v115)
  {
    goto LABEL_7;
  }
  v117 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  swift_beginAccess();
  v118 = *v117;
  v119 = (unsigned __int8 *)(v18
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__enablePartialResults);
  swift_beginAccess();
  v120 = *v119;
  if (v118 == 2)
  {
    if (v120 != 2)
      goto LABEL_7;
  }
  else if (v120 == 2 || ((((v120 & 1) == 0) ^ v118) & 1) == 0)
  {
    goto LABEL_7;
  }
  v121 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  swift_beginAccess();
  v122 = *v121;
  v123 = (unsigned __int8 *)(v18
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__inputOrigin);
  swift_beginAccess();
  v124 = *v123;
  if (v122 == 19)
  {
    if (v124 != 19)
      goto LABEL_7;
  }
  else if (v124 == 19 || v122 != v124)
  {
    goto LABEL_7;
  }
  v125 = (unsigned __int8 *)(v19
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  swift_beginAccess();
  v126 = *v125;
  swift_release();
  v127 = (unsigned __int8 *)(v18
                           + OBJC_IVAR____TtCV16ModalityXObjects23ModalityXBeginDictationP33_CBCEF76E48FCDEC1269AFEAD4BBE13E913_StorageClass__isAutoPunctuationEnabled);
  swift_beginAccess();
  v128 = *v127;
  swift_release();
  if (v126 == 2)
  {
    if (v128 != 2)
      return 0;
  }
  else if (v128 == 2 || ((((v128 & 1) == 0) ^ v126) & 1) == 0)
  {
    return 0;
  }
  return 1;
}

Swift::Int ModalityXBeginDictation.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXBeginDictation, (uint64_t)&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXBeginDictation()
{
  static ModalityXBeginDictation.protoMessageName.getter();
  return 0xD000000000000011;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXBeginDictation()
{
  ModalityXBeginDictation.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXBeginDictation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXBeginDictation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXBeginDictation()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, type metadata accessor for ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXBeginDictation()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, type metadata accessor for ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXBeginDictation()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, type metadata accessor for ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
  return Message.hash(into:)();
}

unint64_t static ModalityXCancelRequest.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(16);
}

uint64_t static ModalityXCancelRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXCancelRequest._protobuf_nameMap, a1);
}

void ModalityXCancelRequest.decodeMessage<A>(decoder:)()
{
  ModalityXCancelRequest.decodeMessage<A>(decoder:)();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  OUTLINED_FUNCTION_392();
  while (1)
  {
    v1 = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v2 & 1) != 0)
      break;
    if (v1 == 2)
    {
      OUTLINED_FUNCTION_383();
      closure #2 in ModalityXCancelRequest.decodeMessage<A>(decoder:)();
    }
    else if (v1 == 1)
    {
      v3 = OUTLINED_FUNCTION_383();
      closure #1 in ModalityXCancelRequest.decodeMessage<A>(decoder:)(v3, v4, v5, v6, v7);
    }
  }
  OUTLINED_FUNCTION_89();
}

void ModalityXCancelRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXCancelRequest.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXCancelRequest, (void (*)(uint64_t))closure #2 in ModalityXCancelRequest.traverse<A>(visitor:));
}

uint64_t closure #2 in ModalityXCancelRequest.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXCancelRequest(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 24)) != 3)
  {
    lazy protocol witness table accessor for type ModalityXCancellationReason and conformance ModalityXCancellationReason();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

Swift::Int ModalityXCancelRequest.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXCancelRequest, (uint64_t)&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXCancelRequest()
{
  static ModalityXCancelRequest.protoMessageName.getter();
  return 0xD000000000000010;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXCancelRequest()
{
  ModalityXCancelRequest.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXCancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXCancelRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXCancelRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, type metadata accessor for ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXCancelRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, type metadata accessor for ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXCancelRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, type metadata accessor for ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
  return Message.hash(into:)();
}

uint64_t static ModalityXAudioFrame.protoMessageName.getter()
{
  return 0x6F696475412E584DLL;
}

uint64_t static ModalityXAudioFrame._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioFrame._protobuf_nameMap, a1);
}

void ModalityXAudioFrame.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          OUTLINED_FUNCTION_293();
          break;
        case 2:
          dispatch thunk of Decoder.decodeRepeatedBytesField(value:)();
          break;
        case 1:
          OUTLINED_FUNCTION_76();
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_64();
}

void closure #2 in ModalityXSpeechProfile.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_125(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_167(*(int *)(v5 + 24));
  OUTLINED_FUNCTION_64();
}

void ModalityXAudioFrame.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);

  OUTLINED_FUNCTION_103();
  closure #1 in ModalityXAudioFrame.traverse<A>(visitor:)(v2, v3, v4, v5, v6);
  if (!v1)
  {
    if (*(_QWORD *)(*(_QWORD *)v0 + 16))
    {
      OUTLINED_FUNCTION_103();
      dispatch thunk of Visitor.visitRepeatedBytesField(value:fieldNumber:)();
    }
    OUTLINED_FUNCTION_103();
    closure #2 in ModalityXAudioFrame.traverse<A>(visitor:)(v7, v8, v9, v10, v11);
    type metadata accessor for ModalityXAudioFrame(0);
    OUTLINED_FUNCTION_301();
  }
  OUTLINED_FUNCTION_64();
}

Swift::Int ModalityXAudioFrame.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXAudioFrame, (uint64_t)&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAudioFrame()
{
  return 0x6F696475412E584DLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAudioFrame()
{
  ModalityXAudioFrame.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAudioFrame()
{
  ModalityXAudioFrame.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAudioFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, type metadata accessor for ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAudioFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, type metadata accessor for ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, type metadata accessor for ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
  return Message.hash(into:)();
}

uint64_t static ModalityXASRResult.protoMessageName.getter()
{
  return 0x65525253412E584DLL;
}

uint64_t static ModalityXASRResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXASRResult._protobuf_nameMap, a1);
}

void ModalityXASRResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          v3 = OUTLINED_FUNCTION_23();
          closure #3 in ModalityXASRResult.decodeMessage<A>(decoder:)(v3, v4, v5, v6);
          break;
        case 2:
          v7 = OUTLINED_FUNCTION_23();
          closure #2 in ModalityXASRResult.decodeMessage<A>(decoder:)(v7, v8, v9, v10);
          break;
        case 1:
          OUTLINED_FUNCTION_76();
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_64();
}

void closure #2 in ModalityXASRResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXRecognitionCandidate(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXRecognitionCandidate);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXRecognitionCandidate);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXRecognitionCandidate);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionCandidate?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXRecognitionCandidate);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void closure #3 in ModalityXASRResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v12, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    v25 = v13;
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v12, (uint64_t)v18, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    outlined init with take of ModalityXSessionMetadata((uint64_t)v18, (uint64_t)v16, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v16, (uint64_t)v9, type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
      outlined init with take of ModalityXSessionMetadata((uint64_t)v9, (uint64_t)v24, type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v16, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    }
  }
  v26 = v33;
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v27, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
    return;
  }
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, (uint64_t)v22, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  outlined init with take of ModalityXSessionMetadata((uint64_t)v22, v32, type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
  if (EnumTagSinglePayload != 1)
    dispatch thunk of Decoder.handleConflictingOneOf()();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v24, &demangling cache variable for type metadata for ModalityXFinalSpeechRecognitionResponse?);
  v29 = v30;
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v30, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  outlined init with take of ModalityXSessionMetadata(v28, v29, type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void ModalityXASRResult.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_157();
  OUTLINED_FUNCTION_274();
  closure #1 in ModalityXAudioFrame.traverse<A>(visitor:)(v4, v5, v6, v7, v8);
  if (!v1)
  {
    outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v2, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    v9 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
    OUTLINED_FUNCTION_216(v9);
    if (!v10)
    {
      if (OUTLINED_FUNCTION_299() == 1)
      {
        OUTLINED_FUNCTION_274();
        closure #3 in ModalityXASRResult.traverse<A>(visitor:)(v11);
      }
      else
      {
        OUTLINED_FUNCTION_274();
        closure #2 in ModalityXASRResult.traverse<A>(visitor:)(v13);
      }
      OUTLINED_FUNCTION_393(v12, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    }
    type metadata accessor for ModalityXASRResult(0);
    OUTLINED_FUNCTION_301();
  }
  OUTLINED_FUNCTION_142();
}

void closure #1 in ModalityXAudioFrame.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  if (*(_QWORD *)(a1 + *(int *)(OUTLINED_FUNCTION_125(a1, a2, a3, a4, a5) + 24) + 8))
    OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_64();
}

void closure #2 in ModalityXASRResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXRecognitionCandidate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXRecognitionCandidate);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXRecognitionCandidate);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXASRResult.OneOf_Payload);
  }
  __break(1u);
}

void closure #3 in ModalityXASRResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  v8 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
      dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
      return;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v4, type metadata accessor for ModalityXASRResult.OneOf_Payload);
  }
  __break(1u);
}

Swift::Int ModalityXASRResult.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXASRResult, (uint64_t)&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXASRResult()
{
  return 0x65525253412E584DLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXASRResult()
{
  ModalityXASRResult.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXASRResult()
{
  ModalityXASRResult.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXASRResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, type metadata accessor for ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXASRResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, type metadata accessor for ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXASRResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, type metadata accessor for ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
  return Message.hash(into:)();
}

unint64_t static ModalityXSpeechProfileRebuildNeeded.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(29);
}

void one-time initialization function for _protobuf_nameMap(uint64_t a1)
{
  one-time initialization function for _protobuf_nameMap(a1, static ModalityXSpeechProfileRebuildNeeded._protobuf_nameMap);
}

{
  one-time initialization function for _protobuf_nameMap(a1, static ModalityXRequestComplete._protobuf_nameMap);
}

{
  one-time initialization function for _protobuf_nameMap(a1, static ModalityXStreamingSpeechProfileCommit._protobuf_nameMap);
}

uint64_t static ModalityXSpeechProfileRebuildNeeded._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfileRebuildNeeded._protobuf_nameMap, a1);
}

void ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

void closure #1 in ModalityXCancelRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_220(*(int *)(v5 + 20));
  dispatch thunk of Decoder.decodeSingularStringField(value:)();
  OUTLINED_FUNCTION_70();
}

void ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXSpeechProfileRebuildNeeded);
}

void closure #1 in ModalityXCancelRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  if (*(_QWORD *)(v5 + *(int *)(OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5) + 20) + 8))
    OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_70();
}

Swift::Int ModalityXSpeechProfileRebuildNeeded.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfileRebuildNeeded()
{
  static ModalityXSpeechProfileRebuildNeeded.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfileRebuildNeeded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfileRebuildNeeded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfileRebuildNeeded()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfileRebuildNeeded()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfileRebuildNeeded()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
  return Message.hash(into:)();
}

unint64_t static ModalityXProcessingError.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(18);
}

uint64_t static ModalityXProcessingError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXProcessingError._protobuf_nameMap, a1);
}

void ModalityXProcessingError.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_175();
  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_82();
          closure #1 in ModalityXProcessingError.decodeMessage<A>(decoder:)();
          break;
        case 2:
          OUTLINED_FUNCTION_76();
          break;
        case 3:
          OUTLINED_FUNCTION_231();
          break;
        case 4:
          OUTLINED_FUNCTION_264();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_54();
}

uint64_t closure #1 in ModalityXProcessingError.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXProcessingError(0);
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

void closure #3 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)()
{
  void (*v0)(void);
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);

  OUTLINED_FUNCTION_392();
  v1 = v0;
  OUTLINED_FUNCTION_125(v2, v3, v4, v5, v6);
  v1();
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_89();
}

void closure #4 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_125(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_167(*(int *)(v5 + 32));
  OUTLINED_FUNCTION_64();
}

void ModalityXProcessingError.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = OUTLINED_FUNCTION_30();
  v2 = closure #1 in ModalityXProcessingError.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    OUTLINED_FUNCTION_291(v2, v3, v4, v5, type metadata accessor for ModalityXProcessingError);
    v6 = OUTLINED_FUNCTION_30();
    v7 = closure #3 in ModalityXProcessingError.traverse<A>(visitor:)(v6);
    OUTLINED_FUNCTION_290(v7, v8, v9, v10, type metadata accessor for ModalityXProcessingError);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

uint64_t closure #1 in ModalityXProcessingError.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXProcessingError(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 20) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #3 in ModalityXProcessingError.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXProcessingError(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 28)) != 3)
  {
    lazy protocol witness table accessor for type ModalityXErrorSource and conformance ModalityXErrorSource();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

void closure #4 in ModalityXSessionMetadata.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  if (*(_QWORD *)(a1 + *(int *)(OUTLINED_FUNCTION_125(a1, a2, a3, a4, a5) + 32) + 8))
    OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_64();
}

Swift::Int ModalityXProcessingError.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXProcessingError, (uint64_t)&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXProcessingError()
{
  static ModalityXProcessingError.protoMessageName.getter();
  return 0xD000000000000012;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXProcessingError()
{
  ModalityXProcessingError.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXProcessingError()
{
  ModalityXProcessingError.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXProcessingError()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXProcessingError()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXProcessingError()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
  return Message.hash(into:)();
}

unint64_t static ModalityXRequestMitigated.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(19);
}

uint64_t static ModalityXRequestMitigated._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRequestMitigated._protobuf_nameMap, a1);
}

void ModalityXRequestMitigated.decodeMessage<A>(decoder:)()
{
  ModalityXCancelRequest.decodeMessage<A>(decoder:)();
}

void closure #2 in ModalityXCancelRequest.decodeMessage<A>(decoder:)()
{
  void (*v0)(void);
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);

  OUTLINED_FUNCTION_392();
  v1 = v0;
  OUTLINED_FUNCTION_125(v2, v3, v4, v5, v6);
  v1();
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_89();
}

void ModalityXRequestMitigated.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXCancelRequest.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXRequestMitigated, (void (*)(uint64_t))closure #2 in ModalityXRequestMitigated.traverse<A>(visitor:));
}

void ModalityXCancelRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_95(a1, a2, a3, (uint64_t)a4, a4);
  if (!v5)
  {
    v7 = OUTLINED_FUNCTION_30();
    a5(v7);
    OUTLINED_FUNCTION_69();
  }
}

uint64_t closure #2 in ModalityXRequestMitigated.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXRequestMitigated(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 24)) != 8)
  {
    lazy protocol witness table accessor for type ModalityXMitigationType and conformance ModalityXMitigationType();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

Swift::Int ModalityXRequestMitigated.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXRequestMitigated, (uint64_t)&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRequestMitigated()
{
  static ModalityXRequestMitigated.protoMessageName.getter();
  return 0xD000000000000013;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRequestMitigated()
{
  ModalityXRequestMitigated.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRequestMitigated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXRequestMitigated.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRequestMitigated()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, type metadata accessor for ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRequestMitigated()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, type metadata accessor for ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRequestMitigated()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, type metadata accessor for ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
  return Message.hash(into:)();
}

unint64_t static ModalityXRequestComplete.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(18);
}

uint64_t static ModalityXRequestComplete._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRequestComplete._protobuf_nameMap, a1);
}

void ModalityXRequestComplete.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for ModalityXRequestComplete);
}

void ModalityXRequestComplete.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXRequestComplete);
}

Swift::Int ModalityXRequestComplete.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXRequestComplete, (uint64_t)&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRequestComplete()
{
  static ModalityXRequestComplete.protoMessageName.getter();
  return 0xD000000000000012;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRequestComplete(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXRequestComplete.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRequestComplete(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXRequestComplete.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRequestComplete()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, type metadata accessor for ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRequestComplete()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, type metadata accessor for ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRequestComplete()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, type metadata accessor for ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
  return Message.hash(into:)();
}

unint64_t static ModalityXSpeechProfileBuildRequest.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(28);
}

uint64_t static ModalityXSpeechProfileBuildRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfileBuildRequest._protobuf_nameMap, a1);
}

void ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_175();
  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_129();
          break;
        case 2:
          OUTLINED_FUNCTION_230();
          OUTLINED_FUNCTION_387();
          break;
        case 3:
          OUTLINED_FUNCTION_263();
          break;
        case 4:
          OUTLINED_FUNCTION_150();
          break;
        case 5:
          OUTLINED_FUNCTION_292();
          break;
        case 6:
          OUTLINED_FUNCTION_82();
          closure #6 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_54();
}

uint64_t closure #6 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  return dispatch thunk of Decoder.decodeSingularBytesField(value:)();
}

void ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_95(v1, v2, v3, v4, type metadata accessor for ModalityXSpeechProfileBuildRequest);
  if (!v0)
  {
    OUTLINED_FUNCTION_339();
    OUTLINED_FUNCTION_340(v5, v6, v7, v8, type metadata accessor for ModalityXSpeechProfileBuildRequest);
    OUTLINED_FUNCTION_290(v9, v10, v11, v12, type metadata accessor for ModalityXSpeechProfileBuildRequest);
    OUTLINED_FUNCTION_30();
    closure #5 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)();
    v13 = OUTLINED_FUNCTION_30();
    closure #6 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)(v13);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

uint64_t closure #6 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
  v3 = a1 + *(int *)(result + 40);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    outlined copy of Data._Representation(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    return outlined consume of Data?(v5, v4);
  }
  return result;
}

Swift::Int ModalityXSpeechProfileBuildRequest.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfileBuildRequest()
{
  static ModalityXSpeechProfileBuildRequest.protoMessageName.getter();
  return 0xD00000000000001CLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfileBuildRequest()
{
  ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfileBuildRequest()
{
  ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfileBuildRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfileBuildRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfileBuildRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
  return Message.hash(into:)();
}

unint64_t static ModalityXStreamingSpeechProfileBegin.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(30);
}

uint64_t static ModalityXStreamingSpeechProfileBegin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXStreamingSpeechProfileBegin._protobuf_nameMap, a1);
}

void ModalityXStreamingSpeechProfileBegin.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v5 = OUTLINED_FUNCTION_17();
  if (!v2)
  {
    while ((v6 & 1) == 0)
    {
      switch(v5)
      {
        case 3:
          closure #3 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)(v1, v0, v4, v3, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
          break;
        case 2:
          OUTLINED_FUNCTION_76();
          break;
        case 1:
          OUTLINED_FUNCTION_129();
          break;
      }
      v5 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_64();
}

void closure #3 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_125(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_167(*(int *)(v5 + 28));
  OUTLINED_FUNCTION_64();
}

void ModalityXStreamingSpeechProfileBegin.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_95(v1, v2, v3, v4, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
  if (!v0)
  {
    OUTLINED_FUNCTION_291(v5, v6, v7, v8, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
    OUTLINED_FUNCTION_340(v9, v10, v11, v12, type metadata accessor for ModalityXStreamingSpeechProfileBegin);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

void closure #3 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  if (*(_QWORD *)(v5 + *(int *)(OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5) + 28) + 8))
    OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_70();
}

Swift::Int ModalityXStreamingSpeechProfileBegin.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXStreamingSpeechProfileBegin()
{
  static ModalityXStreamingSpeechProfileBegin.protoMessageName.getter();
  return 0xD00000000000001ELL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXStreamingSpeechProfileBegin()
{
  ModalityXStreamingSpeechProfileBegin.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXStreamingSpeechProfileBegin()
{
  ModalityXStreamingSpeechProfileBegin.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXStreamingSpeechProfileBegin()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXStreamingSpeechProfileBegin()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXStreamingSpeechProfileBegin()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
  return Message.hash(into:)();
}

unint64_t static ModalityXStreamingSpeechProfileAddData.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(32);
}

uint64_t static ModalityXStreamingSpeechProfileAddData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXStreamingSpeechProfileAddData._protobuf_nameMap, a1);
}

void ModalityXStreamingSpeechProfileAddData.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_175();
  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_129();
          break;
        case 2:
          OUTLINED_FUNCTION_230();
          OUTLINED_FUNCTION_387();
          break;
        case 3:
          OUTLINED_FUNCTION_263();
          break;
        case 4:
          OUTLINED_FUNCTION_150();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_54();
}

void ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_95(v1, v2, v3, v4, type metadata accessor for ModalityXStreamingSpeechProfileAddData);
  if (!v0)
  {
    OUTLINED_FUNCTION_339();
    v5 = OUTLINED_FUNCTION_30();
    closure #3 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)(v5);
    closure #4 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)();
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

void closure #2 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_175();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_126();
  v7 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_80();
  v9 = v3(0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v5 + *(int *)(v9 + 24), v1, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  if (__swift_getEnumTagSinglePayload(v1, 1, v7) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata(v1, v0, type metadata accessor for ModalityXSpeechProfileSourceData);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileSourceData);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v0, type metadata accessor for ModalityXSpeechProfileSourceData);
  }
  OUTLINED_FUNCTION_54();
}

uint64_t closure #3 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
  v3 = a1 + *(int *)(result + 28);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    outlined copy of Data._Representation(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
    return outlined consume of Data?(v5, v4);
  }
  return result;
}

Swift::Int ModalityXStreamingSpeechProfileAddData.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXStreamingSpeechProfileAddData()
{
  static ModalityXStreamingSpeechProfileAddData.protoMessageName.getter();
  return 0xD000000000000020;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXStreamingSpeechProfileAddData()
{
  ModalityXStreamingSpeechProfileAddData.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXStreamingSpeechProfileAddData()
{
  ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXStreamingSpeechProfileAddData()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXStreamingSpeechProfileAddData()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXStreamingSpeechProfileAddData()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
  return Message.hash(into:)();
}

unint64_t static ModalityXStreamingSpeechProfileCommit.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(31);
}

void one-time initialization function for _protobuf_nameMap(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v3, a2);
  v4 = OUTLINED_FUNCTION_50();
  __swift_project_value_buffer(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24205B1B0;
  v10 = v9 + v8 + *(int *)(v6 + 48);
  *(_QWORD *)(v9 + v8) = 1;
  *(_QWORD *)v10 = "request_id";
  *(_QWORD *)(v10 + 8) = 10;
  *(_BYTE *)(v10 + 16) = 2;
  v11 = *MEMORY[0x24BE5C328];
  v12 = type metadata accessor for _NameMap.NameDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  _NameMap.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_9_0();
}

uint64_t static ModalityXStreamingSpeechProfileCommit._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXStreamingSpeechProfileCommit._protobuf_nameMap, a1);
}

void ModalityXStreamingSpeechProfileCommit.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

void ModalityXSpeechProfileRebuildNeeded.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  while (1)
  {
    v8 = dispatch thunk of Decoder.nextFieldNumber()();
    if (v4 || (v9 & 1) != 0)
      break;
    if (v8 == 1)
    {
      v10 = OUTLINED_FUNCTION_289();
      closure #1 in ModalityXCancelRequest.decodeMessage<A>(decoder:)(v10, v11, a2, a3, a4);
    }
  }
  OUTLINED_FUNCTION_70();
}

void ModalityXStreamingSpeechProfileCommit.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXStreamingSpeechProfileCommit);
}

void ModalityXSpeechProfileRebuildNeeded.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_95(a1, a2, a3, (uint64_t)a4, a4);
  if (!v4)
    OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_130();
}

Swift::Int ModalityXStreamingSpeechProfileCommit.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXStreamingSpeechProfileCommit()
{
  static ModalityXStreamingSpeechProfileCommit.protoMessageName.getter();
  return 0xD00000000000001FLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXStreamingSpeechProfileCommit(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXStreamingSpeechProfileCommit.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXStreamingSpeechProfileCommit(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ModalityXStreamingSpeechProfileCommit.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXStreamingSpeechProfileCommit()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXStreamingSpeechProfileCommit()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXStreamingSpeechProfileCommit()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
  return Message.hash(into:)();
}

unint64_t static ModalityXSpeechProfileBuildResponse.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(29);
}

uint64_t static ModalityXSpeechProfileBuildResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfileBuildResponse._protobuf_nameMap, a1);
}

void ModalityXSpeechProfileBuildResponse.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_175();
  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_129();
          break;
        case 2:
          OUTLINED_FUNCTION_230();
          closure #2 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)();
          break;
        case 3:
          OUTLINED_FUNCTION_293();
          break;
        case 10:
          OUTLINED_FUNCTION_150();
          break;
        case 11:
          OUTLINED_FUNCTION_292();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_54();
}

void closure #2 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD);
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  unint64_t *v9;
  uint64_t (*v10)(uint64_t);

  OUTLINED_FUNCTION_175();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_125(v4, v5, v6, v7, v8);
  v3(0);
  v9 = (unint64_t *)OUTLINED_FUNCTION_289();
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(v9, v10, v1);
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  OUTLINED_FUNCTION_54();
}

void closure #3 in ModalityXAudioFrame.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_220(*(int *)(v5 + 28));
  dispatch thunk of Decoder.decodeSingularBoolField(value:)();
  OUTLINED_FUNCTION_70();
}

void closure #5 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_220(*(int *)(v5 + 36));
  dispatch thunk of Decoder.decodeSingularBytesField(value:)();
  OUTLINED_FUNCTION_70();
}

void ModalityXSpeechProfileBuildResponse.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_95(v1, v2, v3, v4, type metadata accessor for ModalityXSpeechProfileBuildResponse);
  if (!v0)
  {
    v5 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXSpeechProfileBuildResponse.traverse<A>(visitor:)(v5);
    v6 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXAudioFrame.traverse<A>(visitor:)(v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_30();
    closure #4 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)();
    OUTLINED_FUNCTION_30();
    closure #5 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)();
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

void closure #2 in ModalityXSpeechProfileBuildResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXProcessingError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1 + *(int *)(v8 + 24), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXProcessingError?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXProcessingError?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXProcessingError);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXProcessingError);
  }
}

void closure #2 in ModalityXAudioFrame.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  if (*(_BYTE *)(v5 + *(int *)(OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5) + 28)) != 2)
    OUTLINED_FUNCTION_346();
  OUTLINED_FUNCTION_70();
}

void closure #4 in ModalityXStreamingSpeechProfileAddData.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t *v5;
  char v6;
  char v7;

  OUTLINED_FUNCTION_392();
  OUTLINED_FUNCTION_125(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_388();
  if (!(!v7 & v6))
  {
    OUTLINED_FUNCTION_381(v5);
    OUTLINED_FUNCTION_217();
    OUTLINED_FUNCTION_347();
  }
  OUTLINED_FUNCTION_89();
}

void closure #5 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t *v5;
  char v6;
  char v7;

  OUTLINED_FUNCTION_392();
  OUTLINED_FUNCTION_125(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_388();
  if (!(!v7 & v6))
  {
    OUTLINED_FUNCTION_381(v5);
    OUTLINED_FUNCTION_217();
    OUTLINED_FUNCTION_347();
  }
  OUTLINED_FUNCTION_89();
}

Swift::Int ModalityXSpeechProfileBuildResponse.hashValue.getter()
{
  return ModalityXServerBoundFrame.hashValue.getter((uint64_t)type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
}

Swift::Int ModalityXServerBoundFrame.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v3;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_411();
  Hasher.init(_seed:)();
  OUTLINED_FUNCTION_376();
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(v3, v4, a3);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfileBuildResponse()
{
  static ModalityXSpeechProfileBuildResponse.protoMessageName.getter();
  return 0xD00000000000001DLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfileBuildResponse()
{
  ModalityXSpeechProfileBuildResponse.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfileBuildResponse()
{
  ModalityXSpeechProfileBuildResponse.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfileBuildResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfileBuildResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfileBuildResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
  return Message.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance ModalityXServerBoundFrame()
{
  Hasher.init(_seed:)();
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

void specialized static Array<A>.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  int v30;
  char v31;
  char v32;
  int v33;
  char v34;
  char v35;
  int v36;
  char v37;
  char v38;
  int v39;
  char v40;
  char v41;
  uint64_t v42;
  int v43;
  int v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  OUTLINED_FUNCTION_19();
  v7 = OUTLINED_FUNCTION_366();
  v8 = type metadata accessor for ModalityXRecognitionToken(v7);
  OUTLINED_FUNCTION_275();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_271();
  type metadata accessor for ModalityXRecognitionPhraseTokens(v11);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_331();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_305();
  if (v29 && v14 && v6 != v0)
  {
    OUTLINED_FUNCTION_155();
    v62 = v5;
    while (1)
    {
      v18 = v15 * v17;
      OUTLINED_FUNCTION_215(v16 + v15 * v17, v4);
      OUTLINED_FUNCTION_215(v3 + v18, v5);
      v19 = *(_QWORD *)v4;
      v20 = *(_QWORD *)v5;
      v21 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      if (v21 != *(_QWORD *)(*(_QWORD *)v5 + 16))
      {
LABEL_67:
        OUTLINED_FUNCTION_39(v62);
        OUTLINED_FUNCTION_39(v4);
        goto LABEL_68;
      }
      if (v21 && v19 != v20)
        break;
LABEL_61:
      v5 = v62;
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v59 = OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_218(v62);
      OUTLINED_FUNCTION_218(v4);
      if ((v59 & 1) != 0)
      {
        OUTLINED_FUNCTION_413();
        if (!v29)
          continue;
      }
      goto LABEL_68;
    }
    v22 = 0;
    OUTLINED_FUNCTION_373();
    v60 = v23;
    v61 = v4;
    while (1)
    {
      OUTLINED_FUNCTION_316(v19 + v3, v2);
      if (v22 >= *(_QWORD *)(v20 + 16))
        break;
      OUTLINED_FUNCTION_316(v20 + v3, v1);
      OUTLINED_FUNCTION_154();
      if (v26)
      {
        if (!v24
          || ((OUTLINED_FUNCTION_24(v25), v29) ? (v29 = v27 == v28) : (v29 = 0),
              !v29 && (OUTLINED_FUNCTION_75() & 1) == 0))
        {
LABEL_66:
          OUTLINED_FUNCTION_39(v1);
          OUTLINED_FUNCTION_39(v2);
          goto LABEL_67;
        }
      }
      else if (v24)
      {
        goto LABEL_66;
      }
      OUTLINED_FUNCTION_66();
      if ((v31 & 1) != 0)
      {
        if (!v30)
          goto LABEL_66;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v32 & 1) != 0)
          goto LABEL_66;
      }
      OUTLINED_FUNCTION_66();
      if ((v34 & 1) != 0)
      {
        if (!v33)
          goto LABEL_66;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v35 & 1) != 0)
          goto LABEL_66;
      }
      OUTLINED_FUNCTION_66();
      if ((v37 & 1) != 0)
      {
        if (!v36)
          goto LABEL_66;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v38 & 1) != 0)
          goto LABEL_66;
      }
      OUTLINED_FUNCTION_66();
      if ((v40 & 1) != 0)
      {
        if (!v39)
          goto LABEL_66;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v41 & 1) != 0)
          goto LABEL_66;
      }
      v42 = *(int *)(v8 + 40);
      v43 = *(unsigned __int8 *)(v2 + v42);
      v44 = *(unsigned __int8 *)(v1 + v42);
      if (v43 == 2)
      {
        if (v44 != 2)
          goto LABEL_66;
      }
      else
      {
        if (v44 == 2)
          goto LABEL_66;
        OUTLINED_FUNCTION_176();
        if ((v45 & 1) == 0)
          goto LABEL_66;
      }
      OUTLINED_FUNCTION_154();
      if (v48)
      {
        if (!v46)
          goto LABEL_66;
        OUTLINED_FUNCTION_24(v47);
        v51 = v29 && v49 == v50;
        if (!v51 && (OUTLINED_FUNCTION_75() & 1) == 0)
          goto LABEL_66;
      }
      else if (v46)
      {
        goto LABEL_66;
      }
      OUTLINED_FUNCTION_154();
      if (v54)
      {
        if (!v52)
          goto LABEL_66;
        OUTLINED_FUNCTION_24(v53);
        v57 = v29 && v55 == v56;
        if (!v57 && (OUTLINED_FUNCTION_75() & 1) == 0)
          goto LABEL_66;
      }
      else if (v52)
      {
        goto LABEL_66;
      }
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v58 = OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_351(v1);
      v4 = v61;
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v2, type metadata accessor for ModalityXRecognitionToken);
      if ((v58 & 1) == 0)
        goto LABEL_67;
      ++v22;
      v3 += v60;
      if (v21 == v22)
        goto LABEL_61;
    }
    __break(1u);
  }
  else
  {
LABEL_68:
    OUTLINED_FUNCTION_222();
    OUTLINED_FUNCTION_3_0();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_19();
  v4 = OUTLINED_FUNCTION_119();
  v5 = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(v4);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_134();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - v8;
  v10 = *(_QWORD *)(v1 + 16);
  v22 = v0;
  if (v10 == *(_QWORD *)(v0 + 16) && v10 && v1 != v22)
  {
    OUTLINED_FUNCTION_364();
    v12 = v11 - 1;
    while (1)
    {
      OUTLINED_FUNCTION_252(v1 + v3, (uint64_t)v9);
      OUTLINED_FUNCTION_252(v22 + v3, v2);
      specialized static Array<A>.== infix(_:_:)();
      if ((v13 & 1) == 0)
        break;
      v14 = *(int *)(v5 + 24);
      v15 = v9[v14];
      v16 = *(unsigned __int8 *)(v2 + v14);
      if (v15 == 2)
      {
        if (v16 != 2)
          break;
      }
      else
      {
        if (v16 == 2)
          break;
        OUTLINED_FUNCTION_176();
        if ((v17 & 1) == 0)
          break;
      }
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_303();
      v18 = OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_194(v2);
      OUTLINED_FUNCTION_194((uint64_t)v9);
      v20 = v12-- != 0;
      if ((v18 & 1) != 0)
      {
        v3 += v21;
        if (v20)
          continue;
      }
      goto LABEL_19;
    }
    OUTLINED_FUNCTION_39(v2);
    OUTLINED_FUNCTION_39((uint64_t)v9);
  }
LABEL_19:
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_3_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  char v13;
  char v14;
  int v15;
  char v16;
  char v17;
  int v18;
  char v19;
  char v20;
  int v21;
  char v22;
  char v23;
  char v24;
  BOOL v26;

  OUTLINED_FUNCTION_19();
  v7 = OUTLINED_FUNCTION_119();
  type metadata accessor for ModalityXItnAlignment(v7);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_134();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_177();
  if (v11 && v10 && v1 != v0)
  {
    OUTLINED_FUNCTION_365();
    while (1)
    {
      OUTLINED_FUNCTION_252(v1 + v4, v3);
      OUTLINED_FUNCTION_252(v0 + v4, v2);
      OUTLINED_FUNCTION_131();
      if ((v13 & 1) != 0)
      {
        if (!v12)
          goto LABEL_29;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v14 & 1) != 0)
          goto LABEL_29;
      }
      OUTLINED_FUNCTION_131();
      if ((v16 & 1) != 0)
      {
        if (!v15)
          goto LABEL_29;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v17 & 1) != 0)
          goto LABEL_29;
      }
      OUTLINED_FUNCTION_131();
      if ((v19 & 1) != 0)
      {
        if (!v18)
          goto LABEL_29;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v20 & 1) != 0)
          goto LABEL_29;
      }
      OUTLINED_FUNCTION_131();
      if ((v22 & 1) != 0)
      {
        if (!v21)
          goto LABEL_29;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v23 & 1) != 0)
        {
LABEL_29:
          OUTLINED_FUNCTION_39(v2);
          OUTLINED_FUNCTION_39(v3);
          break;
        }
      }
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v24 = OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_194(v2);
      OUTLINED_FUNCTION_194(v3);
      v26 = v6-- != 0;
      if ((v24 & 1) != 0)
      {
        v4 += v5;
        if (v26)
          continue;
      }
      break;
    }
  }
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_3_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_19();
  v6 = v5;
  v8 = v7;
  type metadata accessor for ModalityXRecognitionChoice(0);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_183();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_304();
  if (v14 && v2 && v8 != v6)
  {
    OUTLINED_FUNCTION_251();
    while (1)
    {
      OUTLINED_FUNCTION_195(v20 + v4 * v3, v1);
      OUTLINED_FUNCTION_195(v19 + v4 * v3, v0);
      OUTLINED_FUNCTION_350();
      if (!v14)
        break;
      if (v13)
        v14 = v11 == v12;
      else
        v14 = 1;
      if (!v14)
      {
        if (*(_DWORD *)(v11 + 32) != *(_DWORD *)(v12 + 32))
          break;
        OUTLINED_FUNCTION_349();
        while (v17)
        {
          OUTLINED_FUNCTION_348();
          if (!v14)
            goto LABEL_26;
        }
      }
      OUTLINED_FUNCTION_66();
      if ((v16 & 1) != 0)
      {
        if (!v15)
          break;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v18 & 1) != 0)
          break;
      }
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      if ((OUTLINED_FUNCTION_283() & 1) == 0)
        break;
      ++v3;
      OUTLINED_FUNCTION_202(v0);
      OUTLINED_FUNCTION_202(v1);
      if (v3 == v2)
        goto LABEL_27;
    }
LABEL_26:
    OUTLINED_FUNCTION_39(v0);
    OUTLINED_FUNCTION_39(v1);
  }
LABEL_27:
  OUTLINED_FUNCTION_3_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_19();
  v6 = v5;
  v8 = v7;
  type metadata accessor for ModalityXChoiceAlignment(0);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_183();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_304();
  if (v14 && v2 && v8 != v6)
  {
    OUTLINED_FUNCTION_251();
    while (1)
    {
      OUTLINED_FUNCTION_195(v18 + v4 * v3, v1);
      OUTLINED_FUNCTION_195(v17 + v4 * v3, v0);
      OUTLINED_FUNCTION_350();
      if (!v14)
        break;
      if (v13)
        v14 = v11 == v12;
      else
        v14 = 1;
      if (!v14)
      {
        if (*(_DWORD *)(v11 + 32) != *(_DWORD *)(v12 + 32))
          break;
        OUTLINED_FUNCTION_349();
        while (v16)
        {
          OUTLINED_FUNCTION_348();
          if (!v14)
            goto LABEL_21;
        }
      }
      specialized static Array<A>.== infix(_:_:)();
      if ((v15 & 1) == 0)
        break;
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      if ((OUTLINED_FUNCTION_283() & 1) == 0)
        break;
      ++v3;
      OUTLINED_FUNCTION_202(v0);
      OUTLINED_FUNCTION_202(v1);
      if (v3 == v2)
        goto LABEL_22;
    }
LABEL_21:
    OUTLINED_FUNCTION_39(v0);
    OUTLINED_FUNCTION_39(v1);
  }
LABEL_22:
  OUTLINED_FUNCTION_3_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  char v26;
  int v27;
  char v28;
  char v29;
  int v30;
  char v31;
  char v32;
  int v33;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_19();
  v7 = OUTLINED_FUNCTION_366();
  type metadata accessor for ModalityXItnAlignment(v7);
  OUTLINED_FUNCTION_275();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_271();
  type metadata accessor for ModalityXRepeatedItnAlignment(v10);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_331();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_305();
  if (v14 && v13 && v6 != v0)
  {
    OUTLINED_FUNCTION_155();
    v38 = v4;
    v39 = (uint64_t)v5;
    while (1)
    {
      v18 = v15 * v17;
      OUTLINED_FUNCTION_215(v16 + v15 * v17, v4);
      OUTLINED_FUNCTION_215(v3 + v18, (uint64_t)v5);
      v19 = *(_QWORD *)v4;
      v20 = *v5;
      v21 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      if (v21 != *(_QWORD *)(v20 + 16))
      {
LABEL_35:
        OUTLINED_FUNCTION_39(v39);
        OUTLINED_FUNCTION_39(v38);
        goto LABEL_36;
      }
      if (v21 && v19 != v20)
        break;
LABEL_29:
      v4 = v38;
      v5 = (uint64_t *)v39;
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v37 = OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_218(v39);
      OUTLINED_FUNCTION_218(v38);
      if ((v37 & 1) != 0)
      {
        OUTLINED_FUNCTION_413();
        if (!v14)
          continue;
      }
      goto LABEL_36;
    }
    v22 = 0;
    OUTLINED_FUNCTION_373();
    v40 = v23;
    while (1)
    {
      OUTLINED_FUNCTION_316(v19 + v3, v2);
      if (v22 >= *(_QWORD *)(v20 + 16))
        break;
      OUTLINED_FUNCTION_316(v20 + v3, v1);
      OUTLINED_FUNCTION_66();
      if ((v25 & 1) != 0)
      {
        if (!v24)
          goto LABEL_34;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v26 & 1) != 0)
          goto LABEL_34;
      }
      OUTLINED_FUNCTION_66();
      if ((v28 & 1) != 0)
      {
        if (!v27)
          goto LABEL_34;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v29 & 1) != 0)
          goto LABEL_34;
      }
      OUTLINED_FUNCTION_66();
      if ((v31 & 1) != 0)
      {
        if (!v30)
          goto LABEL_34;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v32 & 1) != 0)
          goto LABEL_34;
      }
      OUTLINED_FUNCTION_66();
      if ((v34 & 1) != 0)
      {
        if (!v33)
          goto LABEL_34;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v35 & 1) != 0)
        {
LABEL_34:
          OUTLINED_FUNCTION_39(v1);
          OUTLINED_FUNCTION_39(v2);
          goto LABEL_35;
        }
      }
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v36 = OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_351(v1);
      OUTLINED_FUNCTION_351(v2);
      if ((v36 & 1) == 0)
        goto LABEL_35;
      ++v22;
      v3 += v40;
      if (v21 == v22)
        goto LABEL_29;
    }
    __break(1u);
  }
  else
  {
LABEL_36:
    OUTLINED_FUNCTION_222();
    OUTLINED_FUNCTION_3_0();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  OUTLINED_FUNCTION_19();
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for ModalityXEntities(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_336(v8, v42);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_126();
  v47 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXEntities?, ModalityXEntities?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_334();
  v50 = type metadata accessor for ModalityXCategoryEntities(v11);
  OUTLINED_FUNCTION_87();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v51 = (uint64_t)&v42 - v17;
  v48 = v3;
  v49 = v5;
  v18 = *(_QWORD *)(v5 + 16);
  if (v18 != *(_QWORD *)(v3 + 16) || !v18 || v49 == v48)
    goto LABEL_34;
  v19 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = *(_QWORD *)(v16 + 72);
  v43 = v6;
  v44 = v20;
  v21 = v18 - 1;
  v45 = v15;
  while (1)
  {
    v22 = v51;
    outlined init with copy of ModalityXSessionMetadata(v49 + v19, v51, type metadata accessor for ModalityXCategoryEntities);
    outlined init with copy of ModalityXSessionMetadata(v48 + v19, (uint64_t)v15, type metadata accessor for ModalityXCategoryEntities);
    v23 = *(int *)(v50 + 20);
    v24 = *(_QWORD *)&v15[v23 + 8];
    if (*(_QWORD *)(v22 + v23 + 8))
    {
      if (!v24)
        goto LABEL_33;
      OUTLINED_FUNCTION_24(v22 + v23);
      v27 = v27 && v25 == v26;
      if (!v27 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_33;
    }
    else if (v24)
    {
      goto LABEL_33;
    }
    v28 = *(int *)(v50 + 24);
    v29 = (uint64_t)&v15[v28];
    v30 = v1 + *(int *)(v47 + 48);
    OUTLINED_FUNCTION_426(v51 + v28, v1);
    OUTLINED_FUNCTION_426(v29, v30);
    OUTLINED_FUNCTION_14(v1, 1, v6);
    if (!v27)
      break;
    OUTLINED_FUNCTION_14(v30, 1, v6);
    if (!v27)
    {
      v15 = v45;
      goto LABEL_32;
    }
    OUTLINED_FUNCTION_232(v1);
    v15 = v45;
LABEL_22:
    OUTLINED_FUNCTION_15();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v38 = v51;
    v39 = OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_194((uint64_t)v15);
    OUTLINED_FUNCTION_194(v38);
    v41 = v21-- != 0;
    if ((v39 & 1) != 0)
    {
      v19 += v44;
      if (v41)
        continue;
    }
    goto LABEL_34;
  }
  v31 = OUTLINED_FUNCTION_303();
  OUTLINED_FUNCTION_426(v31, v32);
  v34 = OUTLINED_FUNCTION_14(v30, 1, v6);
  if (v33)
    goto LABEL_31;
  outlined init with take of ModalityXSessionMetadata(v30, v46, type metadata accessor for ModalityXEntities);
  specialized static Array<A>.== infix(_:_:)();
  if ((v35 & 1) != 0)
  {
    v36 = v46;
    OUTLINED_FUNCTION_15();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v6 = v43;
    v37 = OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_168(v36);
    OUTLINED_FUNCTION_168(v0);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXEntities?);
    v15 = v45;
    if ((v37 & 1) == 0)
      goto LABEL_33;
    goto LABEL_22;
  }
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v46, type metadata accessor for ModalityXEntities);
LABEL_31:
  OUTLINED_FUNCTION_354(v34, type metadata accessor for ModalityXEntities);
  v15 = v45;
LABEL_32:
  OUTLINED_FUNCTION_171(v1);
LABEL_33:
  OUTLINED_FUNCTION_39((uint64_t)v15);
  OUTLINED_FUNCTION_39(v51);
LABEL_34:
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_3_0();
}

{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  int v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_19();
  v6 = OUTLINED_FUNCTION_366();
  v7 = type metadata accessor for ModalityXWordWithPronunciations(v6);
  OUTLINED_FUNCTION_275();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_271();
  v11 = type metadata accessor for ModalityXEntityWords(v10);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_332();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v44 - v14;
  v16 = *(_QWORD *)(v5 + 16);
  if (v16 == *(_QWORD *)(v0 + 16) && v16 && v5 != v0)
  {
    v55 = v7;
    v45 = v3;
    OUTLINED_FUNCTION_155();
    v51 = v15;
    v52 = v4;
    v49 = v20;
    v50 = v11;
    v47 = v3;
    v48 = v18;
    v46 = v17;
    while (1)
    {
      v53 = v19;
      v21 = v17 * v19;
      OUTLINED_FUNCTION_215(v18 + v17 * v19, (uint64_t)v15);
      OUTLINED_FUNCTION_215(v3 + v21, v4);
      v22 = *(_QWORD *)v15;
      v23 = *(_QWORD *)v4;
      v24 = *(_QWORD *)(*(_QWORD *)v15 + 16);
      if (v24 != *(_QWORD *)(*(_QWORD *)v4 + 16))
      {
LABEL_40:
        OUTLINED_FUNCTION_39(v52);
        OUTLINED_FUNCTION_39((uint64_t)v51);
        goto LABEL_41;
      }
      if (v24 && v22 != v23)
        break;
LABEL_35:
      v15 = v51;
      v4 = v52;
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_374();
      v43 = dispatch thunk of static Equatable.== infix(_:_:)();
      OUTLINED_FUNCTION_218(v4);
      OUTLINED_FUNCTION_218((uint64_t)v15);
      if ((v43 & 1) != 0)
      {
        v19 = v53 + 1;
        v18 = v48;
        v17 = v46;
        v3 = v47;
        if (v53 + 1 != v49)
          continue;
      }
      goto LABEL_41;
    }
    v25 = 0;
    v26 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v54 = *(_QWORD *)(v45 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_356(v22 + v26, (uint64_t)v2);
      if (v25 >= *(_QWORD *)(v23 + 16))
        break;
      OUTLINED_FUNCTION_356(v23 + v26, (uint64_t)v1);
      OUTLINED_FUNCTION_154();
      if (v29)
      {
        if (!v27
          || ((OUTLINED_FUNCTION_24(v28), v32) ? (v32 = v30 == v31) : (v32 = 0),
              !v32 && (OUTLINED_FUNCTION_75() & 1) == 0))
        {
LABEL_39:
          OUTLINED_FUNCTION_39((uint64_t)v1);
          OUTLINED_FUNCTION_39((uint64_t)v2);
          goto LABEL_40;
        }
      }
      else if (v27)
      {
        goto LABEL_39;
      }
      if ((specialized static Array<A>.== infix(_:_:)(*v2, *v1) & 1) == 0)
        goto LABEL_39;
      OUTLINED_FUNCTION_66();
      if ((v34 & 1) != 0)
      {
        if (!v33)
          goto LABEL_39;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v35 & 1) != 0)
          goto LABEL_39;
      }
      OUTLINED_FUNCTION_154();
      if (v38)
      {
        if (!v36)
          goto LABEL_39;
        OUTLINED_FUNCTION_24(v37);
        v41 = v32 && v39 == v40;
        if (!v41 && (OUTLINED_FUNCTION_75() & 1) == 0)
          goto LABEL_39;
      }
      else if (v36)
      {
        goto LABEL_39;
      }
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v42 = OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_270((uint64_t)v1);
      OUTLINED_FUNCTION_270((uint64_t)v2);
      if ((v42 & 1) == 0)
        goto LABEL_40;
      ++v25;
      v26 += v54;
      if (v24 == v25)
        goto LABEL_35;
    }
    __break(1u);
  }
  else
  {
LABEL_41:
    OUTLINED_FUNCTION_222();
    OUTLINED_FUNCTION_3_0();
  }
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  char v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_19();
  v5 = OUTLINED_FUNCTION_119();
  type metadata accessor for ModalityXWordWithPronunciations(v5);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_134();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_177();
  if (v16 && v8 && v1 != v0)
  {
    OUTLINED_FUNCTION_364();
    v10 = v9 - 1;
    while (1)
    {
      OUTLINED_FUNCTION_215(v1 + v4, (uint64_t)v3);
      OUTLINED_FUNCTION_215(v0 + v4, (uint64_t)v2);
      OUTLINED_FUNCTION_188();
      if (v13)
      {
        if (!v11
          || ((OUTLINED_FUNCTION_24(v12), v16) ? (v16 = v14 == v15) : (v16 = 0),
              !v16 && (OUTLINED_FUNCTION_75() & 1) == 0))
        {
LABEL_33:
          OUTLINED_FUNCTION_39((uint64_t)v2);
          OUTLINED_FUNCTION_39((uint64_t)v3);
          break;
        }
      }
      else if (v11)
      {
        goto LABEL_33;
      }
      if ((specialized static Array<A>.== infix(_:_:)(*v3, *v2) & 1) == 0)
        goto LABEL_33;
      OUTLINED_FUNCTION_131();
      if ((v18 & 1) != 0)
      {
        if (!v17)
          goto LABEL_33;
      }
      else
      {
        OUTLINED_FUNCTION_29();
        if ((v19 & 1) != 0)
          goto LABEL_33;
      }
      OUTLINED_FUNCTION_188();
      if (v22)
      {
        if (!v20)
          goto LABEL_33;
        OUTLINED_FUNCTION_24(v21);
        v25 = v16 && v23 == v24;
        if (!v25 && (OUTLINED_FUNCTION_75() & 1) == 0)
          goto LABEL_33;
      }
      else if (v20)
      {
        goto LABEL_33;
      }
      v28 = v10;
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_303();
      v26 = OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_218((uint64_t)v2);
      OUTLINED_FUNCTION_218((uint64_t)v3);
      --v10;
      if ((v26 & 1) != 0)
      {
        v4 += v27;
        if (v28)
          continue;
      }
      break;
    }
  }
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_3_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  int v17;
  char v18;
  char v19;
  char v20;
  BOOL v22;

  OUTLINED_FUNCTION_19();
  v7 = OUTLINED_FUNCTION_119();
  type metadata accessor for ModalityXSpeechRecognitionFeature(v7);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_134();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_177();
  if (v16 && v10 && v1 != v0)
  {
    OUTLINED_FUNCTION_365();
    while (1)
    {
      OUTLINED_FUNCTION_252(v1 + v4, v3);
      OUTLINED_FUNCTION_252(v0 + v4, v2);
      OUTLINED_FUNCTION_188();
      if (v13)
      {
        if (!v11
          || ((OUTLINED_FUNCTION_24(v12), v16) ? (v16 = v14 == v15) : (v16 = 0),
              !v16 && (OUTLINED_FUNCTION_75() & 1) == 0))
        {
LABEL_26:
          OUTLINED_FUNCTION_39(v2);
          OUTLINED_FUNCTION_39(v3);
          break;
        }
      }
      else if (v11)
      {
        goto LABEL_26;
      }
      OUTLINED_FUNCTION_131();
      if ((v18 & 1) != 0)
      {
        if (!v17)
          goto LABEL_26;
      }
      else
      {
        OUTLINED_FUNCTION_389();
        if ((v19 & 1) != 0)
          goto LABEL_26;
      }
      OUTLINED_FUNCTION_15();
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v20 = OUTLINED_FUNCTION_65();
      OUTLINED_FUNCTION_194(v2);
      OUTLINED_FUNCTION_194(v3);
      v22 = v6-- != 0;
      if ((v20 & 1) != 0)
      {
        v4 += v5;
        if (v22)
          continue;
      }
      break;
    }
  }
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_3_0();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  float *v39;
  float *v40;
  uint64_t v41;
  float v42;
  float v43;
  float v44;
  uint64_t v45;
  char v46;
  int v47;
  char v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  OUTLINED_FUNCTION_19();
  v4 = v3;
  v6 = v5;
  v7 = type metadata accessor for ModalityXAcousticFeature(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_126();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAcousticFeature?, ModalityXAcousticFeature?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = OUTLINED_FUNCTION_333();
  type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(v13);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_332();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v51 - v18;
  v20 = *(_QWORD *)(v6 + 16);
  if (v20 != *(_QWORD *)(v4 + 16))
    goto LABEL_42;
  v57 = v16;
  if (!v20 || v6 == v4)
    goto LABEL_42;
  v21 = 0;
  v22 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v55 = v4 + v22;
  v56 = v6 + v22;
  v23 = *(_QWORD *)(v17 + 72);
  v53 = v20;
  v54 = v23;
  v24 = v57;
  v52 = v0;
  while (1)
  {
    v25 = v54 * v21;
    OUTLINED_FUNCTION_356(v56 + v54 * v21, (uint64_t)v19);
    OUTLINED_FUNCTION_356(v55 + v25, v1);
    v26 = *(int *)(v24 + 20);
    v27 = *(_QWORD *)(v1 + v26 + 8);
    if (*(_QWORD *)&v19[v26 + 8])
    {
      if (!v27)
        goto LABEL_41;
      OUTLINED_FUNCTION_24((uint64_t)&v19[v26]);
      v30 = v30 && v28 == v29;
      if (!v30 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_41;
    }
    else if (v27)
    {
      goto LABEL_41;
    }
    v31 = *(int *)(v24 + 24);
    v32 = v1 + v31;
    v33 = v0 + *(int *)(v58 + 48);
    OUTLINED_FUNCTION_404((uint64_t)&v19[v31], v0);
    OUTLINED_FUNCTION_404(v32, v33);
    OUTLINED_FUNCTION_14(v0, 1, v7);
    if (v30)
    {
      OUTLINED_FUNCTION_14(v33, 1, v7);
      if (!v30)
        goto LABEL_40;
      OUTLINED_FUNCTION_196(v0);
      v24 = v57;
      goto LABEL_34;
    }
    OUTLINED_FUNCTION_404(v0, (uint64_t)v11);
    OUTLINED_FUNCTION_14(v33, 1, v7);
    if (v34)
      goto LABEL_39;
    outlined init with take of ModalityXSessionMetadata(v33, v2, type metadata accessor for ModalityXAcousticFeature);
    OUTLINED_FUNCTION_350();
    if (!v30)
      break;
    if (v38 && v36 != v37)
    {
      if (*(float *)(v36 + 32) != *(float *)(v37 + 32))
        break;
      OUTLINED_FUNCTION_349();
      while (v41)
      {
        v42 = *v39++;
        v43 = v42;
        v44 = *v40++;
        --v41;
        if (v43 != v44)
          goto LABEL_38;
      }
    }
    v45 = *(int *)(v7 + 24);
    v46 = v11[v45 + 4];
    v47 = *(unsigned __int8 *)(v2 + v45 + 4);
    if ((v46 & 1) != 0)
    {
      if (!v47)
        break;
    }
    else
    {
      OUTLINED_FUNCTION_389();
      if ((v48 & 1) != 0)
        break;
    }
    OUTLINED_FUNCTION_15();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v0 = v52;
    v49 = OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_270(v2);
    OUTLINED_FUNCTION_270((uint64_t)v11);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
    v24 = v57;
    if ((v49 & 1) == 0)
      goto LABEL_41;
LABEL_34:
    OUTLINED_FUNCTION_15();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v50 = OUTLINED_FUNCTION_65();
    OUTLINED_FUNCTION_270(v1);
    OUTLINED_FUNCTION_270((uint64_t)v19);
    if ((v50 & 1) != 0 && ++v21 != v53)
      continue;
    goto LABEL_42;
  }
LABEL_38:
  OUTLINED_FUNCTION_354(v35, type metadata accessor for ModalityXAcousticFeature);
LABEL_39:
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v11, type metadata accessor for ModalityXAcousticFeature);
LABEL_40:
  OUTLINED_FUNCTION_171(v0);
LABEL_41:
  OUTLINED_FUNCTION_39(v1);
  OUTLINED_FUNCTION_39((uint64_t)v19);
LABEL_42:
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_3_0();
}

void specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  BOOL v39;

  OUTLINED_FUNCTION_19();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  type metadata accessor for ModalityXRecognitionToken(0);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_183();
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&a9 - v30;
  v32 = *(_QWORD *)(v26 + 16);
  if (v32 == *(_QWORD *)(v24 + 16) && v32 && v26 != v24)
  {
    v33 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v34 = *(_QWORD *)(v29 + 72);
    v35 = v32 - 1;
    do
    {
      OUTLINED_FUNCTION_195(v26 + v33, (uint64_t)v31);
      OUTLINED_FUNCTION_195(v24 + v33, v20);
      OUTLINED_FUNCTION_379();
      static ModalityXRecognitionToken.== infix(_:_:)();
      v37 = v36;
      OUTLINED_FUNCTION_202(v20);
      OUTLINED_FUNCTION_202((uint64_t)v31);
      v39 = v35-- != 0;
      if ((v37 & 1) == 0)
        break;
      v33 += v34;
    }
    while (v39);
  }
  OUTLINED_FUNCTION_3_0();
}

uint64_t specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X8 }
  }
  return 1;
}

uint64_t outlined copy of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return outlined copy of Data._Representation(a1, a2);
  return a1;
}

uint64_t outlined copy of Data._Representation(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t outlined consume of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return outlined consume of Data._Representation(a1, a2);
  return a1;
}

uint64_t outlined consume of Data._Representation(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16) && v2 && a1 != a2 && *(_DWORD *)(a1 + 32) == *(_DWORD *)(a2 + 32))
  {
    v3 = v2 - 1;
    do
    {
      if (!v3)
        break;
      OUTLINED_FUNCTION_348();
    }
    while (v4);
  }
}

BOOL specialized static Array<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  _BOOL8 result;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return 0;
  v3 = (float *)(a1 + 36);
  v4 = (float *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t specialized static Array<A>.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t result;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    result = 0;
    if ((v7 & 1) == 0)
      return result;
  }
  if (v2 == 1)
    return 1;
  v8 = a1 + 7;
  v9 = a2 + 7;
  v10 = 1;
  while (v10 < v2)
  {
    result = *(v8 - 1);
    if (result != *(v9 - 1) || *v8 != *v9)
    {
      result = _stringCompareWithSmolCheck(_:_:expecting:)();
      if ((result & 1) == 0)
        return 0;
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10)
      return 1;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXClientBoundFrame.OneOf_Payload);
}

uint64_t type metadata accessor for ModalityXRequestComplete(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRequestComplete);
}

uint64_t type metadata accessor for ModalityXProcessingError(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXProcessingError);
}

uint64_t type metadata accessor for ModalityXASRResult.OneOf_Payload(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXASRResult.OneOf_Payload);
}

uint64_t type metadata accessor for ModalityXASRResult(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXASRResult);
}

uint64_t type metadata accessor for ModalityXSpeechProfileRebuildNeeded(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfileRebuildNeeded);
}

uint64_t type metadata accessor for ModalityXRequestMitigated(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRequestMitigated);
}

uint64_t type metadata accessor for ModalityXSpeechProfileBuildResponse(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfileBuildResponse);
}

uint64_t type metadata accessor for ModalityXClientBoundFrame(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXClientBoundFrame);
}

uint64_t type metadata accessor for ModalityXBeginRequest._StorageClass(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXBeginRequest._StorageClass);
}

uint64_t outlined init with take of ModalityXAudioMetadata?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioMetadata?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ModalityXBeginDictation._StorageClass(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXBeginDictation._StorageClass);
}

uint64_t type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_359(a1, a2, a3);
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_1_0();
}

void lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x2426A3278](a3, v5), a1);
  }
  OUTLINED_FUNCTION_1_0();
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXServerBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, type metadata accessor for ModalityXServerBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXServerBoundFrame);
}

void base witness table accessor for Message in ModalityXServerBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, type metadata accessor for ModalityXServerBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXServerBoundFrame);
}

void base witness table accessor for Hashable in ModalityXServerBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, type metadata accessor for ModalityXServerBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXServerBoundFrame);
}

void base witness table accessor for Equatable in ModalityXServerBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXServerBoundFrame and conformance ModalityXServerBoundFrame, type metadata accessor for ModalityXServerBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXServerBoundFrame);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXClientBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, type metadata accessor for ModalityXClientBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXClientBoundFrame);
}

void base witness table accessor for Message in ModalityXClientBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, type metadata accessor for ModalityXClientBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXClientBoundFrame);
}

void base witness table accessor for Hashable in ModalityXClientBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, type metadata accessor for ModalityXClientBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXClientBoundFrame);
}

void base witness table accessor for Equatable in ModalityXClientBoundFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXClientBoundFrame and conformance ModalityXClientBoundFrame, type metadata accessor for ModalityXClientBoundFrame, (uint64_t)&protocol conformance descriptor for ModalityXClientBoundFrame);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXSessionMetadata()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, type metadata accessor for ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
}

void base witness table accessor for Message in ModalityXSessionMetadata()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, type metadata accessor for ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
}

void base witness table accessor for Hashable in ModalityXSessionMetadata()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, type metadata accessor for ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
}

void base witness table accessor for Equatable in ModalityXSessionMetadata()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSessionMetadata and conformance ModalityXSessionMetadata, type metadata accessor for ModalityXSessionMetadata, (uint64_t)&protocol conformance descriptor for ModalityXSessionMetadata);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfile()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, type metadata accessor for ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
}

void base witness table accessor for Message in ModalityXSpeechProfile()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, type metadata accessor for ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
}

void base witness table accessor for Hashable in ModalityXSpeechProfile()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, type metadata accessor for ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
}

void base witness table accessor for Equatable in ModalityXSpeechProfile()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfile and conformance ModalityXSpeechProfile, type metadata accessor for ModalityXSpeechProfile, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfile);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXBeginRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, type metadata accessor for ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
}

void base witness table accessor for Message in ModalityXBeginRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, type metadata accessor for ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
}

void base witness table accessor for Hashable in ModalityXBeginRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, type metadata accessor for ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
}

void base witness table accessor for Equatable in ModalityXBeginRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginRequest and conformance ModalityXBeginRequest, type metadata accessor for ModalityXBeginRequest, (uint64_t)&protocol conformance descriptor for ModalityXBeginRequest);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXBeginDictation()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, type metadata accessor for ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
}

void base witness table accessor for Message in ModalityXBeginDictation()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, type metadata accessor for ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
}

void base witness table accessor for Hashable in ModalityXBeginDictation()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, type metadata accessor for ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
}

void base witness table accessor for Equatable in ModalityXBeginDictation()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXBeginDictation and conformance ModalityXBeginDictation, type metadata accessor for ModalityXBeginDictation, (uint64_t)&protocol conformance descriptor for ModalityXBeginDictation);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXCancelRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, type metadata accessor for ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
}

void base witness table accessor for Message in ModalityXCancelRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, type metadata accessor for ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
}

void base witness table accessor for Hashable in ModalityXCancelRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, type metadata accessor for ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
}

void base witness table accessor for Equatable in ModalityXCancelRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXCancelRequest and conformance ModalityXCancelRequest, type metadata accessor for ModalityXCancelRequest, (uint64_t)&protocol conformance descriptor for ModalityXCancelRequest);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXAudioFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, type metadata accessor for ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
}

void base witness table accessor for Message in ModalityXAudioFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, type metadata accessor for ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
}

void base witness table accessor for Hashable in ModalityXAudioFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, type metadata accessor for ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
}

void base witness table accessor for Equatable in ModalityXAudioFrame()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioFrame and conformance ModalityXAudioFrame, type metadata accessor for ModalityXAudioFrame, (uint64_t)&protocol conformance descriptor for ModalityXAudioFrame);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXASRResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, type metadata accessor for ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
}

void base witness table accessor for Message in ModalityXASRResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, type metadata accessor for ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
}

void base witness table accessor for Hashable in ModalityXASRResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, type metadata accessor for ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
}

void base witness table accessor for Equatable in ModalityXASRResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXASRResult and conformance ModalityXASRResult, type metadata accessor for ModalityXASRResult, (uint64_t)&protocol conformance descriptor for ModalityXASRResult);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfileRebuildNeeded()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
}

void base witness table accessor for Message in ModalityXSpeechProfileRebuildNeeded()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
}

void base witness table accessor for Hashable in ModalityXSpeechProfileRebuildNeeded()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
}

void base witness table accessor for Equatable in ModalityXSpeechProfileRebuildNeeded()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileRebuildNeeded and conformance ModalityXSpeechProfileRebuildNeeded, type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileRebuildNeeded);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXProcessingError()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
}

void base witness table accessor for Message in ModalityXProcessingError()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
}

void base witness table accessor for Hashable in ModalityXProcessingError()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
}

void base witness table accessor for Equatable in ModalityXProcessingError()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXProcessingError and conformance ModalityXProcessingError, type metadata accessor for ModalityXProcessingError, (uint64_t)&protocol conformance descriptor for ModalityXProcessingError);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRequestMitigated()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, type metadata accessor for ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
}

void base witness table accessor for Message in ModalityXRequestMitigated()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, type metadata accessor for ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
}

void base witness table accessor for Hashable in ModalityXRequestMitigated()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, type metadata accessor for ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
}

void base witness table accessor for Equatable in ModalityXRequestMitigated()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestMitigated and conformance ModalityXRequestMitigated, type metadata accessor for ModalityXRequestMitigated, (uint64_t)&protocol conformance descriptor for ModalityXRequestMitigated);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRequestComplete()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, type metadata accessor for ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
}

void base witness table accessor for Message in ModalityXRequestComplete()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, type metadata accessor for ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
}

void base witness table accessor for Hashable in ModalityXRequestComplete()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, type metadata accessor for ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
}

void base witness table accessor for Equatable in ModalityXRequestComplete()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRequestComplete and conformance ModalityXRequestComplete, type metadata accessor for ModalityXRequestComplete, (uint64_t)&protocol conformance descriptor for ModalityXRequestComplete);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfileBuildRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
}

void base witness table accessor for Message in ModalityXSpeechProfileBuildRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
}

void base witness table accessor for Hashable in ModalityXSpeechProfileBuildRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
}

void base witness table accessor for Equatable in ModalityXSpeechProfileBuildRequest()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildRequest and conformance ModalityXSpeechProfileBuildRequest, type metadata accessor for ModalityXSpeechProfileBuildRequest, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildRequest);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXStreamingSpeechProfileBegin()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
}

void base witness table accessor for Message in ModalityXStreamingSpeechProfileBegin()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
}

void base witness table accessor for Hashable in ModalityXStreamingSpeechProfileBegin()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
}

void base witness table accessor for Equatable in ModalityXStreamingSpeechProfileBegin()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileBegin and conformance ModalityXStreamingSpeechProfileBegin, type metadata accessor for ModalityXStreamingSpeechProfileBegin, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileBegin);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXStreamingSpeechProfileAddData()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
}

void base witness table accessor for Message in ModalityXStreamingSpeechProfileAddData()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
}

void base witness table accessor for Hashable in ModalityXStreamingSpeechProfileAddData()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
}

void base witness table accessor for Equatable in ModalityXStreamingSpeechProfileAddData()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileAddData and conformance ModalityXStreamingSpeechProfileAddData, type metadata accessor for ModalityXStreamingSpeechProfileAddData, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileAddData);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXStreamingSpeechProfileCommit()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
}

void base witness table accessor for Message in ModalityXStreamingSpeechProfileCommit()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
}

void base witness table accessor for Hashable in ModalityXStreamingSpeechProfileCommit()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
}

void base witness table accessor for Equatable in ModalityXStreamingSpeechProfileCommit()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXStreamingSpeechProfileCommit and conformance ModalityXStreamingSpeechProfileCommit, type metadata accessor for ModalityXStreamingSpeechProfileCommit, (uint64_t)&protocol conformance descriptor for ModalityXStreamingSpeechProfileCommit);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfileBuildResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
}

void base witness table accessor for Message in ModalityXSpeechProfileBuildResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
}

void base witness table accessor for Hashable in ModalityXSpeechProfileBuildResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
}

void base witness table accessor for Equatable in ModalityXSpeechProfileBuildResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechProfileBuildResponse and conformance ModalityXSpeechProfileBuildResponse, type metadata accessor for ModalityXSpeechProfileBuildResponse, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileBuildResponse);
}

void sub_242021730()
{
  ModalityXServerBoundFrame.sessionMetadata.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24202174C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSessionMetadata, (void (*)(char *))ModalityXServerBoundFrame.sessionMetadata.setter);
}

void sub_242021770()
{
  ModalityXServerBoundFrame.beginRequest.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24202178C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXBeginRequest, (void (*)(char *))ModalityXServerBoundFrame.beginRequest.setter);
}

void sub_2420217B0()
{
  ModalityXServerBoundFrame.audioFrame.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420217CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXAudioFrame, (void (*)(char *))ModalityXServerBoundFrame.audioFrame.setter);
}

void sub_2420217F0()
{
  ModalityXServerBoundFrame.speechProfile.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24202180C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfile, (void (*)(char *))ModalityXServerBoundFrame.speechProfile.setter);
}

void sub_242021830()
{
  ModalityXServerBoundFrame.cancelRequest.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24202184C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXCancelRequest, (void (*)(char *))ModalityXServerBoundFrame.cancelRequest.setter);
}

void sub_242021870()
{
  ModalityXServerBoundFrame.beginDictation.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24202188C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXBeginDictation, (void (*)(char *))ModalityXServerBoundFrame.beginDictation.setter);
}

void sub_2420218B0()
{
  ModalityXServerBoundFrame.speechProfileRequest.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420218CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildRequest, (void (*)(char *))ModalityXServerBoundFrame.speechProfileRequest.setter);
}

void sub_2420218F0()
{
  ModalityXServerBoundFrame.streamingSpeechProfileRequest.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24202190C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileBegin, (void (*)(char *))ModalityXServerBoundFrame.streamingSpeechProfileRequest.setter);
}

void sub_242021930()
{
  ModalityXServerBoundFrame.streamingSpeechProfileData.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24202194C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileAddData, (void (*)(char *))ModalityXServerBoundFrame.streamingSpeechProfileData.setter);
}

void sub_242021970()
{
  ModalityXServerBoundFrame.streamingSpeechProfileCommit.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24202198C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXStreamingSpeechProfileCommit, (void (*)(char *))ModalityXServerBoundFrame.streamingSpeechProfileCommit.setter);
}

void sub_2420219B0()
{
  ModalityXClientBoundFrame.requestComplete.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420219CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXRequestComplete, (void (*)(char *))ModalityXClientBoundFrame.requestComplete.setter);
}

void sub_2420219F0()
{
  ModalityXClientBoundFrame.processingError.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXProcessingError, (void (*)(char *))ModalityXClientBoundFrame.processingError.setter);
}

void sub_242021A30()
{
  ModalityXClientBoundFrame.asrResult.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXASRResult, (void (*)(char *))ModalityXClientBoundFrame.asrResult.setter);
}

void sub_242021A70()
{
  ModalityXClientBoundFrame.speechProfileRebuildNeeded.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileRebuildNeeded, (void (*)(char *))ModalityXClientBoundFrame.speechProfileRebuildNeeded.setter);
}

void sub_242021AB0()
{
  ModalityXClientBoundFrame.requestMitigated.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXRequestMitigated, (void (*)(char *))ModalityXClientBoundFrame.requestMitigated.setter);
}

void sub_242021AF0()
{
  ModalityXClientBoundFrame.speechProfileResponse.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileBuildResponse, (void (*)(char *))ModalityXClientBoundFrame.speechProfileResponse.setter);
}

void sub_242021B30()
{
  ModalityXSessionMetadata.deviceInfo.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXDeviceInfo, (void (*)(char *))ModalityXSessionMetadata.deviceInfo.setter);
}

void sub_242021B70()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  v0 = ModalityXSessionMetadata.dataSharingOptInStatus.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021B90(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXSessionMetadata.dataSharingOptInStatus.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021BAC()
{
  ModalityXSessionMetadata.userInterfaceIdiom.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021BCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSessionMetadata.language.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021BF0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  v0 = ModalityXSpeechProfile.moreDataFollows.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021C10(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXSpeechProfile.moreDataFollows.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021C2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfile.languageProfile.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021C50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginRequest.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021C74()
{
  ModalityXBeginRequest.inputOrigin.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021C94()
{
  ModalityXBeginRequest.audioMetadata.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXAudioMetadata, (void (*)(char *))ModalityXBeginRequest.audioMetadata.setter);
}

void sub_242021CD4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXBeginRequest.enablePartialResults.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021CF4(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXBeginRequest.enablePartialResults.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021D10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXBeginRequest.isPromptedDictation.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021D30(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXBeginRequest.isPromptedDictation.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021D4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXBeginRequest.isPromptedConfirmation.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021D6C(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXBeginRequest.isPromptedConfirmation.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021D88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginRequest.foregroundAppID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021DAC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXBeginRequest.isAutoPunctuationEnabled.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021DCC(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXBeginRequest.isAutoPunctuationEnabled.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242021DE8()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXBeginRequest.inlineLmeItems.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021E0C()
{
  ModalityXBeginDictation.audioMetadata.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXAudioMetadata, (void (*)(char *))ModalityXBeginDictation.audioMetadata.setter);
}

void sub_242021E4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021E70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.fieldID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021E94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.fieldLabel.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021EB8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.applicationName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021EDC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.applicationVersion.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021F00()
{
  ModalityXBeginDictation.keyboardType.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021F20()
{
  ModalityXBeginDictation.keyboardReturnKey.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021F40()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.selectedText.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021F64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.prefixText.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021F88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.postfixText.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242021FAC()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXBeginDictation.inlineLmeItems.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021FD0()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXBeginDictation.languages.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242021FF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.region.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022018()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.activationToken.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24202203C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.censorSpeech.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_24202205C(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXBeginDictation.censorSpeech.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022078()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.speakerIndependentRecognition.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022098(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXBeginDictation.speakerIndependentRecognition.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420220B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.saveRequestAudio.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420220D4(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXBeginDictation.saveRequestAudio.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420220F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.keyboardIdentifier.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022114()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.enablePartialResults.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022134(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXBeginDictation.enablePartialResults.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022150()
{
  ModalityXBeginDictation.inputOrigin.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242022170()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXBeginDictation.isAutoPunctuationEnabled.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022190(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXBeginDictation.isAutoPunctuationEnabled.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420221AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXCancelRequest.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420221D0()
{
  ModalityXCancelRequest.reason.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420221F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXAudioFrame.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022214()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  v0 = ModalityXAudioFrame.lastFrame.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022234(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXAudioFrame.lastFrame.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022250()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXASRResult.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022274()
{
  ModalityXASRResult.recognitionCandidate.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242022290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, (void (*)(char *))ModalityXASRResult.recognitionCandidate.setter);
}

void sub_2420222B4()
{
  ModalityXASRResult.finalSpeechRecognitionResponse.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420222D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (void (*)(char *))ModalityXASRResult.finalSpeechRecognitionResponse.setter);
}

void sub_2420222F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfileRebuildNeeded.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022318()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXProcessingError.code.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242022338(int *a1)
{
  ModalityXProcessingError.code.setter(*a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022358()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXProcessingError.errorDescription.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24202237C()
{
  ModalityXProcessingError.errorSource.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24202239C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXProcessingError.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420223C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRequestMitigated.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420223E4()
{
  ModalityXRequestMitigated.mitigationType.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242022404()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRequestComplete.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022428()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfileBuildRequest.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24202244C(_QWORD *a1@<X8>)
{
  ModalityXSpeechProfileBuildRequest.sourceData.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileSourceData, (void (*)(char *))ModalityXSpeechProfileBuildRequest.sourceData.setter);
}

void sub_24202248C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfileBuildRequest.locale.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420224B0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfileBuildRequest.phoneSetVersion.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420224D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfileBuildRequest.existingLanguageProfile.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420224F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfileBuildRequest.existingPronunciationCache.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24202251C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXStreamingSpeechProfileBegin.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022540()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXStreamingSpeechProfileBegin.locale.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022564()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXStreamingSpeechProfileBegin.phoneSetVersion.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022588()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXStreamingSpeechProfileAddData.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420225AC(_QWORD *a1@<X8>)
{
  ModalityXStreamingSpeechProfileAddData.sourceData.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420225C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXSpeechProfileSourceData, (void (*)(char *))ModalityXStreamingSpeechProfileAddData.sourceData.setter);
}

void sub_2420225EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXStreamingSpeechProfileAddData.existingLanguageProfile.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022610()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXStreamingSpeechProfileAddData.existingPronunciationCache.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022634()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXStreamingSpeechProfileCommit.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242022658()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfileBuildResponse.requestID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24202267C(uint64_t a1@<X8>)
{
  ModalityXSpeechProfileBuildResponse.error.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242022698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXServerBoundFrame.sessionMetadata : ModalityXServerBoundFrame(a1, a2, a3, a4, (uint64_t)type metadata accessor for ModalityXProcessingError, (void (*)(char *))ModalityXSpeechProfileBuildResponse.error.setter);
}

void sub_2420226BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  v0 = ModalityXSpeechProfileBuildResponse.incompleteProfile.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420226DC(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_161(a1);
  ModalityXSpeechProfileBuildResponse.incompleteProfile.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420226F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfileBuildResponse.languageProfile.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24202271C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechProfileBuildResponse.pronunciationCache.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXServerBoundFrame(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_242022804 + 4 * word_24205B226[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for ModalityXServerBoundFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v5 = type metadata accessor for UnknownStorage();
        v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
        v6(a1, v5);
        v7 = a1 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 20);
        v8 = type metadata accessor for ModalityXDeviceInfo(0);
        if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
        {
          v6(v7, v5);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_26;
      case 1u:
        v9 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
        type metadata accessor for ModalityXBeginRequest(0);
        goto LABEL_11;
      case 2u:
        swift_bridgeObjectRelease();
        v10 = a1 + *(int *)(type metadata accessor for ModalityXAudioFrame(0) + 20);
        v11 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
        goto LABEL_26;
      case 3u:
        v12 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
        v13 = *(int *)(type metadata accessor for ModalityXSpeechProfile(0) + 24);
        goto LABEL_23;
      case 4u:
        v14 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
        type metadata accessor for ModalityXCancelRequest(0);
        goto LABEL_26;
      case 5u:
        v15 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
        type metadata accessor for ModalityXBeginDictation(0);
LABEL_11:
        swift_release();
        break;
      case 6u:
        v16 = type metadata accessor for UnknownStorage();
        v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
        v17(a1, v16);
        v18 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
        swift_bridgeObjectRelease();
        v19 = a1 + v18[6];
        v20 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
        {
          swift_bridgeObjectRelease();
          v17(v19 + *(int *)(v20 + 20), v16);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v21 = (uint64_t *)(a1 + v18[9]);
        v22 = v21[1];
        if (v22 >> 60 != 15)
          outlined consume of Data._Representation(*v21, v22);
        v13 = v18[10];
        goto LABEL_23;
      case 7u:
        v23 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
        type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_26;
      case 8u:
        v24 = type metadata accessor for UnknownStorage();
        v25 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
        v25(a1, v24);
        v26 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
        swift_bridgeObjectRelease();
        v27 = a1 + v26[6];
        v28 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
        if (!__swift_getEnumTagSinglePayload(v27, 1, v28))
        {
          swift_bridgeObjectRelease();
          v25(v27 + *(int *)(v28 + 20), v24);
        }
        v29 = (uint64_t *)(a1 + v26[7]);
        v30 = v29[1];
        if (v30 >> 60 != 15)
          outlined consume of Data._Representation(*v29, v30);
        v13 = v26[8];
LABEL_23:
        v31 = (uint64_t *)(a1 + v13);
        v32 = v31[1];
        if (v32 >> 60 != 15)
          outlined consume of Data._Representation(*v31, v32);
        break;
      case 9u:
        v33 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a1, v33);
        type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
LABEL_26:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  v34 = a1 + *(int *)(a2 + 20);
  v35 = type metadata accessor for UnknownStorage();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
}

char *initializeWithCopy for ModalityXServerBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_242023498 + 4 * word_24205B244[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for ModalityXServerBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = (char *)&loc_242023CC8 + 4 * word_24205B258[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v11 = (char *)&loc_242023DC0 + 4 * word_24205B26C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for ModalityXServerBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_242024DBC + 4 * byte_24205B280[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for ModalityXServerBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = (char *)&loc_2420253C8 + 4 * word_24205B28A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v11 = (char *)&loc_2420254C0 + 4 * word_24205B29E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXServerBoundFrame()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_242025EF8()
{
  return __swift_get_extra_inhabitant_indexTm();
}

uint64_t storeEnumTagSinglePayload for ModalityXServerBoundFrame()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_242025F10()
{
  return __swift_store_extra_inhabitant_indexTm();
}

void type metadata completion function for ModalityXServerBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for ModalityXServerBoundFrame(a1, a2, a3, &lazy cache variable for type metadata for ModalityXServerBoundFrame.OneOf_Payload?, (void (*)(uint64_t))type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
}

uint64_t initializeBufferWithCopyOfBuffer for ModalityXServerBoundFrame.OneOf_Payload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_242025F8C + 4 * word_24205B2B2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ModalityXServerBoundFrame.OneOf_Payload(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = type metadata accessor for UnknownStorage();
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(a1, v3);
      v5 = a1 + *(int *)(type metadata accessor for ModalityXSessionMetadata(0) + 20);
      v6 = type metadata accessor for ModalityXDeviceInfo(0);
      if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
      {
        v4(v5, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_25;
    case 1:
      v7 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      type metadata accessor for ModalityXBeginRequest(0);
      return swift_release();
    case 2:
      swift_bridgeObjectRelease();
      v8 = a1 + *(int *)(type metadata accessor for ModalityXAudioFrame(0) + 20);
      v9 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      goto LABEL_25;
    case 3:
      v10 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
      result = type metadata accessor for ModalityXSpeechProfile(0);
      v11 = *(int *)(result + 24);
      goto LABEL_22;
    case 4:
      v12 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
      type metadata accessor for ModalityXCancelRequest(0);
      goto LABEL_25;
    case 5:
      v13 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
      type metadata accessor for ModalityXBeginDictation(0);
      return swift_release();
    case 6:
      v14 = type metadata accessor for UnknownStorage();
      v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
      v15(a1, v14);
      v16 = (int *)type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
      swift_bridgeObjectRelease();
      v17 = a1 + v16[6];
      v18 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
      if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
      {
        swift_bridgeObjectRelease();
        v15(v17 + *(int *)(v18 + 20), v14);
      }
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v19 = (uint64_t *)(a1 + v16[9]);
      v20 = v19[1];
      if (v20 >> 60 != 15)
        result = outlined consume of Data._Representation(*v19, v20);
      v11 = v16[10];
      goto LABEL_22;
    case 7:
      v21 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
      type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_25;
    case 8:
      v22 = type metadata accessor for UnknownStorage();
      v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
      v23(a1, v22);
      v24 = (int *)type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
      swift_bridgeObjectRelease();
      v25 = a1 + v24[6];
      v26 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
      result = __swift_getEnumTagSinglePayload(v25, 1, v26);
      if (!(_DWORD)result)
      {
        swift_bridgeObjectRelease();
        result = v23(v25 + *(int *)(v26 + 20), v22);
      }
      v27 = (uint64_t *)(a1 + v24[7]);
      v28 = v27[1];
      if (v28 >> 60 != 15)
        result = outlined consume of Data._Representation(*v27, v28);
      v11 = v24[8];
LABEL_22:
      v29 = (uint64_t *)(a1 + v11);
      v30 = v29[1];
      if (v30 >> 60 != 15)
        result = outlined consume of Data._Representation(*v29, v30);
      break;
    case 9:
      v31 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(a1, v31);
      type metadata accessor for ModalityXStreamingSpeechProfileCommit(0);
LABEL_25:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ModalityXServerBoundFrame.OneOf_Payload()
{
  char *v0;

  v0 = (char *)sub_242026B74 + 4 * word_24205B2D0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_242026B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;

  v2 = type metadata accessor for UnknownStorage();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16);
  v3(v0, v1, v2);
  v4 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
  v5 = v4[5];
  v6 = (char *)(v0 + v5);
  v7 = (char *)(v1 + v5);
  v8 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v3((uint64_t)v6, (uint64_t)v7, v2);
    v10 = v8[5];
    v11 = &v6[v10];
    v12 = &v7[v10];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = v8[6];
    v15 = &v6[v14];
    v16 = &v7[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = v8[7];
    v19 = &v6[v18];
    v20 = &v7[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v22 = v8[8];
    v23 = &v6[v22];
    v24 = &v7[v22];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    v26 = v8[9];
    v27 = &v6[v26];
    v28 = &v7[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v8);
  }
  *(_BYTE *)(v0 + v4[6]) = *(_BYTE *)(v1 + v4[6]);
  *(_BYTE *)(v0 + v4[7]) = *(_BYTE *)(v1 + v4[7]);
  v30 = v4[8];
  v31 = (_QWORD *)(v0 + v30);
  v32 = (_QWORD *)(v1 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for ModalityXServerBoundFrame.OneOf_Payload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(result, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v2 = (char *)&loc_242027328 + 4 * word_24205B2E4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for ModalityXServerBoundFrame.OneOf_Payload()
{
  char *v0;

  v0 = (char *)sub_242027B44 + 4 * byte_24205B2F8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_242027B44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int *v8;
  uint64_t v9;

  v2 = type metadata accessor for UnknownStorage();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32);
  v3(v0, v1, v2);
  v4 = (int *)type metadata accessor for ModalityXSessionMetadata(0);
  v5 = v4[5];
  v6 = (char *)(v0 + v5);
  v7 = (char *)(v1 + v5);
  v8 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v3((uint64_t)v6, (uint64_t)v7, v2);
    *(_OWORD *)&v6[v8[5]] = *(_OWORD *)&v7[v8[5]];
    *(_OWORD *)&v6[v8[6]] = *(_OWORD *)&v7[v8[6]];
    *(_OWORD *)&v6[v8[7]] = *(_OWORD *)&v7[v8[7]];
    *(_OWORD *)&v6[v8[8]] = *(_OWORD *)&v7[v8[8]];
    *(_OWORD *)&v6[v8[9]] = *(_OWORD *)&v7[v8[9]];
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v8);
  }
  *(_BYTE *)(v0 + v4[6]) = *(_BYTE *)(v1 + v4[6]);
  *(_BYTE *)(v0 + v4[7]) = *(_BYTE *)(v1 + v4[7]);
  *(_OWORD *)(v0 + v4[8]) = *(_OWORD *)(v1 + v4[8]);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for ModalityXServerBoundFrame.OneOf_Payload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(result, type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload);
    v2 = (char *)&loc_2420280F0 + 4 * byte_24205B302[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t destructiveInjectEnumTag for ModalityXServerBoundFrame.OneOf_Payload()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata completion function for ModalityXServerBoundFrame.OneOf_Payload()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  result = type metadata accessor for ModalityXSessionMetadata(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ModalityXBeginRequest(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ModalityXAudioFrame(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for ModalityXSpeechProfile(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for ModalityXCancelRequest(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for ModalityXBeginDictation(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for ModalityXSpeechProfileBuildRequest(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for ModalityXStreamingSpeechProfileBegin(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for ModalityXStreamingSpeechProfileAddData(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for ModalityXStreamingSpeechProfileCommit(319);
                    if (v10 <= 0x3F)
                    {
                      swift_initEnumMetadataMultiPayload();
                      return 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXClientBoundFrame(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v10 = (char *)&loc_242028874 + 4 * byte_24205B30C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for ModalityXClientBoundFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v5 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        type metadata accessor for ModalityXRequestComplete(0);
        goto LABEL_20;
      case 1u:
        v6 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
        type metadata accessor for ModalityXProcessingError(0);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      case 2u:
        v7 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
        if (!__swift_getEnumTagSinglePayload(a1, 1, v7))
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v9 = type metadata accessor for UnknownStorage();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
          if (EnumCaseMultiPayload == 1)
            type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
          else
            type metadata accessor for ModalityXRecognitionCandidate(0);
          swift_release();
        }
        v21 = a1 + *(int *)(type metadata accessor for ModalityXASRResult(0) + 20);
        v22 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        goto LABEL_20;
      case 3u:
        v10 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
        type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
        goto LABEL_20;
      case 4u:
        v11 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
        type metadata accessor for ModalityXRequestMitigated(0);
LABEL_20:
        swift_bridgeObjectRelease();
        break;
      case 5u:
        v12 = type metadata accessor for UnknownStorage();
        v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
        v13(a1, v12);
        v14 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
        swift_bridgeObjectRelease();
        v15 = a1 + v14[6];
        v16 = type metadata accessor for ModalityXProcessingError(0);
        if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
        {
          v13(v15, v12);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v17 = (uint64_t *)(a1 + v14[8]);
        v18 = v17[1];
        if (v18 >> 60 != 15)
          outlined consume of Data._Representation(*v17, v18);
        v19 = (uint64_t *)(a1 + v14[9]);
        v20 = v19[1];
        if (v20 >> 60 != 15)
          outlined consume of Data._Representation(*v19, v20);
        break;
      default:
        break;
    }
  }
  v23 = a1 + *(int *)(a2 + 20);
  v24 = type metadata accessor for UnknownStorage();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
}

char *initializeWithCopy for ModalityXClientBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_2420290D4 + 4 * byte_24205B318[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for ModalityXClientBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = (char *)&loc_24202963C + 4 * byte_24205B31E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v11 = (char *)&loc_24202970C + 4 * word_24205B324[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

char *initializeWithTake for ModalityXClientBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v8 = (char *)&loc_24202A130 + 4 * byte_24205B330[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for ModalityXClientBoundFrame(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      v9 = (char *)&loc_24202A5A4 + 4 * byte_24205B336[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v11 = (char *)&loc_24202A660 + 4 * byte_24205B33C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXClientBoundFrame()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24202ADA4()
{
  return __swift_get_extra_inhabitant_indexTm();
}

uint64_t __swift_get_extra_inhabitant_indexTm()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_325();
  __swift_instantiateConcreteTypeFromMangledName(v1);
  OUTLINED_FUNCTION_186();
  if (v2)
  {
    v3 = OUTLINED_FUNCTION_422();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    v3 = OUTLINED_FUNCTION_281();
  }
  return OUTLINED_FUNCTION_35(v3, v0, v4);
}

uint64_t storeEnumTagSinglePayload for ModalityXClientBoundFrame()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24202AE00()
{
  return __swift_store_extra_inhabitant_indexTm();
}

uint64_t __swift_store_extra_inhabitant_indexTm()
{
  uint64_t *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_325();
  __swift_instantiateConcreteTypeFromMangledName(v0);
  OUTLINED_FUNCTION_127();
  if (v1)
  {
    OUTLINED_FUNCTION_374();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_282();
  }
  OUTLINED_FUNCTION_224();
  return OUTLINED_FUNCTION_28(v2, v3, v4, v5);
}

void type metadata completion function for ModalityXClientBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata completion function for ModalityXServerBoundFrame(a1, a2, a3, &lazy cache variable for type metadata for ModalityXClientBoundFrame.OneOf_Payload?, (void (*)(uint64_t))type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
}

void type metadata completion function for ModalityXServerBoundFrame(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, a4, a5);
  if (v5 <= 0x3F)
  {
    OUTLINED_FUNCTION_414();
    if (v6 <= 0x3F)
    {
      OUTLINED_FUNCTION_367();
      OUTLINED_FUNCTION_318();
    }
  }
  OUTLINED_FUNCTION_424();
}

void type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = type metadata accessor for Optional();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t initializeBufferWithCopyOfBuffer for ModalityXClientBoundFrame.OneOf_Payload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_24202AF74 + 4 * byte_24205B342[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ModalityXClientBoundFrame.OneOf_Payload(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for ModalityXRequestComplete(0);
      goto LABEL_19;
    case 1:
      v4 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for ModalityXProcessingError(0);
      swift_bridgeObjectRelease();
      goto LABEL_19;
    case 2:
      v5 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v5))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v7 = type metadata accessor for UnknownStorage();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
        if (EnumCaseMultiPayload == 1)
          type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
        else
          type metadata accessor for ModalityXRecognitionCandidate(0);
        swift_release();
      }
      v19 = a1 + *(int *)(type metadata accessor for ModalityXASRResult(0) + 20);
      v20 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      goto LABEL_19;
    case 3:
      v8 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for ModalityXSpeechProfileRebuildNeeded(0);
      goto LABEL_19;
    case 4:
      v9 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for ModalityXRequestMitigated(0);
LABEL_19:
      result = swift_bridgeObjectRelease();
      break;
    case 5:
      v10 = type metadata accessor for UnknownStorage();
      v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
      v11(a1, v10);
      v12 = (int *)type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
      swift_bridgeObjectRelease();
      v13 = a1 + v12[6];
      v14 = type metadata accessor for ModalityXProcessingError(0);
      result = __swift_getEnumTagSinglePayload(v13, 1, v14);
      if (!(_DWORD)result)
      {
        v11(v13, v10);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
      v15 = (uint64_t *)(a1 + v12[8]);
      v16 = v15[1];
      if (v16 >> 60 != 15)
        result = outlined consume of Data._Representation(*v15, v16);
      v17 = (uint64_t *)(a1 + v12[9]);
      v18 = v17[1];
      if (v18 >> 60 != 15)
        result = outlined consume of Data._Representation(*v17, v18);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ModalityXClientBoundFrame.OneOf_Payload()
{
  char *v0;

  v0 = (char *)sub_24202B728 + 4 * byte_24205B34E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24202B728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = *(int *)(type metadata accessor for ModalityXRequestComplete(0) + 20);
  v4 = (_QWORD *)(v0 + v3);
  v5 = (_QWORD *)(v1 + v3);
  v6 = v5[1];
  *v4 = *v5;
  v4[1] = v6;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for ModalityXClientBoundFrame.OneOf_Payload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(result, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v2 = (char *)&loc_24202BC20 + 4 * byte_24205B354[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for ModalityXClientBoundFrame.OneOf_Payload()
{
  char *v0;

  v0 = (char *)sub_24202C148 + 4 * byte_24205B35A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24202C148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = type metadata accessor for ModalityXRequestComplete(0);
  *(_OWORD *)(v0 + *(int *)(v3 + 20)) = *(_OWORD *)(v1 + *(int *)(v3 + 20));
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for ModalityXClientBoundFrame.OneOf_Payload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(result, type metadata accessor for ModalityXClientBoundFrame.OneOf_Payload);
    v2 = (char *)&loc_24202C55C + 4 * byte_24205B360[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t type metadata completion function for ModalityXClientBoundFrame.OneOf_Payload()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for ModalityXRequestComplete(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ModalityXProcessingError(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for ModalityXASRResult(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for ModalityXSpeechProfileRebuildNeeded(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for ModalityXRequestMitigated(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for ModalityXSpeechProfileBuildResponse(319);
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ModalityXSessionMetadata(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      v15 = v12[5];
      v16 = &v10[v15];
      v17 = &v11[v15];
      v18 = *((_QWORD *)v17 + 1);
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *((_QWORD *)v16 + 1) = v18;
      v19 = v12[6];
      v20 = &v10[v19];
      v21 = &v11[v19];
      v22 = *((_QWORD *)v21 + 1);
      *(_QWORD *)v20 = *(_QWORD *)v21;
      *((_QWORD *)v20 + 1) = v22;
      v23 = v12[7];
      v24 = &v10[v23];
      v25 = &v11[v23];
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v26;
      v27 = v12[8];
      v28 = &v10[v27];
      v29 = &v11[v27];
      v30 = *((_QWORD *)v29 + 1);
      *(_QWORD *)v28 = *(_QWORD *)v29;
      *((_QWORD *)v28 + 1) = v30;
      v31 = v12[9];
      v32 = &v10[v31];
      v33 = &v11[v31];
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
    }
    v35 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v35] = a2[v35];
    v36 = a3[8];
    v37 = &a1[v36];
    v38 = &a2[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXSessionMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  v7 = type metadata accessor for ModalityXDeviceInfo(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v13 = v11[5];
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v11[6];
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = *((_QWORD *)v19 + 1);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = v11[7];
    v22 = &v9[v21];
    v23 = &v10[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = v11[8];
    v26 = &v9[v25];
    v27 = &v10[v25];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = v11[9];
    v30 = &v9[v29];
    v31 = &v10[v29];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  v33 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[8];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v35 = v12[5];
      v36 = &v10[v35];
      v37 = &v11[v35];
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38 = v12[6];
      v39 = &v10[v38];
      v40 = &v11[v38];
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v41 = v12[7];
      v42 = &v10[v41];
      v43 = &v11[v41];
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v44 = v12[8];
      v45 = &v10[v44];
      v46 = &v11[v44];
      *(_QWORD *)v45 = *(_QWORD *)v46;
      *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v47 = v12[9];
      v48 = &v10[v47];
      v49 = &v11[v47];
      *(_QWORD *)v48 = *(_QWORD *)v49;
      *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v10, type metadata accessor for ModalityXDeviceInfo);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  v15 = v12[5];
  v16 = &v10[v15];
  v17 = &v11[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  v18 = v12[6];
  v19 = &v10[v18];
  v20 = &v11[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  v21 = v12[7];
  v22 = &v10[v21];
  v23 = &v11[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  v24 = v12[8];
  v25 = &v10[v24];
  v26 = &v11[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  v27 = v12[9];
  v28 = &v10[v27];
  v29 = &v11[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
LABEL_7:
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v31 = a3[8];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    *(_OWORD *)&v9[v11[5]] = *(_OWORD *)&v10[v11[5]];
    *(_OWORD *)&v9[v11[6]] = *(_OWORD *)&v10[v11[6]];
    *(_OWORD *)&v9[v11[7]] = *(_OWORD *)&v10[v11[7]];
    *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
    *(_OWORD *)&v9[v11[9]] = *(_OWORD *)&v10[v11[9]];
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  v13 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for ModalityXSessionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for ModalityXDeviceInfo(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v23 = v12[5];
      v24 = &v10[v23];
      v25 = &v11[v23];
      v27 = *(_QWORD *)v25;
      v26 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = v27;
      *((_QWORD *)v24 + 1) = v26;
      swift_bridgeObjectRelease();
      v28 = v12[6];
      v29 = &v10[v28];
      v30 = &v11[v28];
      v32 = *(_QWORD *)v30;
      v31 = *((_QWORD *)v30 + 1);
      *(_QWORD *)v29 = v32;
      *((_QWORD *)v29 + 1) = v31;
      swift_bridgeObjectRelease();
      v33 = v12[7];
      v34 = &v10[v33];
      v35 = &v11[v33];
      v37 = *(_QWORD *)v35;
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = v37;
      *((_QWORD *)v34 + 1) = v36;
      swift_bridgeObjectRelease();
      v38 = v12[8];
      v39 = &v10[v38];
      v40 = &v11[v38];
      v42 = *(_QWORD *)v40;
      v41 = *((_QWORD *)v40 + 1);
      *(_QWORD *)v39 = v42;
      *((_QWORD *)v39 + 1) = v41;
      swift_bridgeObjectRelease();
      v43 = v12[9];
      v44 = &v10[v43];
      v45 = &v11[v43];
      v47 = *(_QWORD *)v45;
      v46 = *((_QWORD *)v45 + 1);
      *(_QWORD *)v44 = v47;
      *((_QWORD *)v44 + 1) = v46;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v10, type metadata accessor for ModalityXDeviceInfo);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  *(_OWORD *)&v10[v12[5]] = *(_OWORD *)&v11[v12[5]];
  *(_OWORD *)&v10[v12[6]] = *(_OWORD *)&v11[v12[6]];
  *(_OWORD *)&v10[v12[7]] = *(_OWORD *)&v11[v12[7]];
  *(_OWORD *)&v10[v12[8]] = *(_OWORD *)&v11[v12[8]];
  *(_OWORD *)&v10[v12[9]] = *(_OWORD *)&v11[v12[9]];
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
LABEL_7:
  v16 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSessionMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24202D47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_186();
  if (v8)
  {
    v6 = OUTLINED_FUNCTION_422();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    OUTLINED_FUNCTION_186();
    if (!v8)
    {
      OUTLINED_FUNCTION_63(a1 + *(int *)(a3 + 32));
      OUTLINED_FUNCTION_9_0();
      return;
    }
    v6 = OUTLINED_FUNCTION_281();
  }
  OUTLINED_FUNCTION_35(v6, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ModalityXSessionMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24202D4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_127();
  if (v5)
  {
    OUTLINED_FUNCTION_374();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXDeviceInfo?);
    OUTLINED_FUNCTION_127();
    if (!v5)
    {
      OUTLINED_FUNCTION_229(*(int *)(a4 + 32));
      OUTLINED_FUNCTION_9_0();
      return;
    }
    OUTLINED_FUNCTION_282();
  }
  OUTLINED_FUNCTION_224();
  OUTLINED_FUNCTION_28(v6, v7, v8, v9);
}

void type metadata completion function for ModalityXSessionMetadata()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXDeviceInfo?, (void (*)(uint64_t))type metadata accessor for ModalityXDeviceInfo);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ModalityXSpeechProfile(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (char *)a1 + v8;
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = *(_QWORD *)((char *)a2 + v8 + 8);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *v10;
      outlined copy of Data._Representation(*v10, v11);
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
  }
  return a1;
}

uint64_t destroy for ModalityXSpeechProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;

  v4 = type metadata accessor for UnknownStorage();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    return outlined consume of Data._Representation(*v6, v7);
  return result;
}

uint64_t initializeWithCopy for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    outlined copy of Data._Representation(*v9, v10);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      v12 = *v9;
      outlined copy of Data._Representation(v12, v10);
      v13 = *v8;
      v14 = v8[1];
      *v8 = v12;
      v8[1] = v10;
      outlined consume of Data._Representation(v13, v14);
      return a1;
    }
    outlined destroy of Data((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    return a1;
  }
  v11 = *v9;
  outlined copy of Data._Representation(v11, v10);
  *v8 = v11;
  v8[1] = v10;
  return a1;
}

uint64_t outlined destroy of Data(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDE8] - 8) + 8))();
  return a1;
}

uint64_t initializeWithTake for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ModalityXSpeechProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      v12 = *v8;
      *v8 = *v9;
      v8[1] = v11;
      outlined consume of Data._Representation(v12, v10);
      return a1;
    }
    outlined destroy of Data((uint64_t)v8);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24202D9E8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_287();
  if (v0)
  {
    v1 = OUTLINED_FUNCTION_280();
    OUTLINED_FUNCTION_35(v1, v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24202DA64(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_127();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_208();
    OUTLINED_FUNCTION_28(v8, v9, v10, v11);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t type metadata completion function for ModalityXSpeechProfile()
{
  return type metadata completion function for ModalityXSpeechProfile();
}

{
  uint64_t result;
  unint64_t v1;

  result = OUTLINED_FUNCTION_414();
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_367();
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXBeginRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXBeginRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void type metadata completion function for ModalityXBeginRequest()
{
  type metadata completion function for ModalityXBeginRequest();
}

{
  unint64_t v0;

  OUTLINED_FUNCTION_414();
  if (v0 <= 0x3F)
  {
    OUTLINED_FUNCTION_367();
    OUTLINED_FUNCTION_318();
  }
  OUTLINED_FUNCTION_424();
}

void initializeBufferWithCopyOfBuffer for ModalityXBeginRequest()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_276();
  if ((v3 & 0x20000) != 0)
  {
    *v0 = *v1;
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_94(v5);
    *(_QWORD *)((char *)v0 + *(int *)(v4 + 20)) = *(_QWORD *)((char *)v1 + *(int *)(v4 + 20));
  }
  swift_retain();
  OUTLINED_FUNCTION_9_0();
}

uint64_t destroy for ModalityXBeginRequest()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_320(v0);
  return swift_release();
}

void initializeWithCopy for ModalityXBeginRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  OUTLINED_FUNCTION_9_0();
}

void assignWithCopy for ModalityXBeginRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_9_0();
}

void initializeWithTake for ModalityXBeginRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  OUTLINED_FUNCTION_9_0();
}

void assignWithTake for ModalityXBeginRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  OUTLINED_FUNCTION_9_0();
}

uint64_t getEnumTagSinglePayload for ModalityXBeginDictation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_179Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_287();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_280();
    OUTLINED_FUNCTION_35(v6, v7, v8);
  }
  else
  {
    OUTLINED_FUNCTION_412(*(_QWORD *)(a1 + *(int *)(a3 + 20)));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXBeginDictation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_180Tm(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_127();
  if (v7)
  {
    v8 = OUTLINED_FUNCTION_208();
    OUTLINED_FUNCTION_28(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t getEnumTagSinglePayload for ModalityXCancelRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXCancelRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for ModalityXCancelRequest()
{
  return type metadata completion function for ModalityXSpeechProfile();
}

_QWORD *initializeBufferWithCopyOfBuffer for ModalityXAudioFrame(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v7 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)v7 + v14) = *((_BYTE *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ModalityXAudioFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ModalityXAudioFrame(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (_QWORD *)((char *)a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ModalityXAudioFrame(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_QWORD *initializeWithTake for ModalityXAudioFrame(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

_QWORD *assignWithTake for ModalityXAudioFrame(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXAudioFrame()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24202E178(unint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_412(*a1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    v3 = OUTLINED_FUNCTION_281();
    OUTLINED_FUNCTION_35(v3, a2, v4);
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXAudioFrame()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24202E1D0()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_325();
  if (v2 == 0x7FFFFFFF)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_282();
    OUTLINED_FUNCTION_224();
    OUTLINED_FUNCTION_28(v3, v4, v5, v6);
  }
}

uint64_t type metadata completion function for ModalityXAudioFrame()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXASRResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v11 = type metadata accessor for UnknownStorage();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      if (EnumCaseMultiPayload == 1)
        v12 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
      else
        v12 = type metadata accessor for ModalityXRecognitionCandidate(0);
      *(uint64_t *)((char *)a1 + *(int *)(v12 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 20));
      swift_retain();
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v13 = *(int *)(a3 + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = *(int *)(a3 + 24);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXASRResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v6 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
    if (EnumCaseMultiPayload == 1)
      type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    else
      type metadata accessor for ModalityXRecognitionCandidate(0);
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for ModalityXASRResult(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v9 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    if (EnumCaseMultiPayload == 1)
      v10 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    else
      v10 = type metadata accessor for ModalityXRecognitionCandidate(0);
    *(_QWORD *)&a1[*(int *)(v10 + 20)] = *(_QWORD *)&a2[*(int *)(v10 + 20)];
    swift_retain();
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *((_QWORD *)v17 + 1);
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for ModalityXASRResult(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v10 = type metadata accessor for UnknownStorage();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      if (EnumCaseMultiPayload == 1)
        v11 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
      else
        v11 = type metadata accessor for ModalityXRecognitionCandidate(0);
      *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
      swift_retain();
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    v13 = swift_getEnumCaseMultiPayload();
    v14 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
    if (v13 == 1)
      v15 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    else
      v15 = type metadata accessor for ModalityXRecognitionCandidate(0);
    *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ModalityXASRResult(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v9 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    if (EnumCaseMultiPayload == 1)
      v10 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    else
      v10 = type metadata accessor for ModalityXRecognitionCandidate(0);
    *(_QWORD *)&a1[*(int *)(v10 + 20)] = *(_QWORD *)&a2[*(int *)(v10 + 20)];
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *assignWithTake for ModalityXASRResult(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v10 = type metadata accessor for UnknownStorage();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      if (EnumCaseMultiPayload == 1)
        v11 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
      else
        v11 = type metadata accessor for ModalityXRecognitionCandidate(0);
      *(_QWORD *)&a1[*(int *)(v11 + 20)] = *(_QWORD *)&a2[*(int *)(v11 + 20)];
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)a1, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    v13 = swift_getEnumCaseMultiPayload();
    v14 = type metadata accessor for UnknownStorage();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
    if (v13 == 1)
      v15 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    else
      v15 = type metadata accessor for ModalityXRecognitionCandidate(0);
    *(_QWORD *)&a1[*(int *)(v15 + 20)] = *(_QWORD *)&a2[*(int *)(v15 + 20)];
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = *(int *)(a3 + 24);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXASRResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24202EB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_325();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  OUTLINED_FUNCTION_186();
  if (v8)
  {
    v6 = OUTLINED_FUNCTION_422();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_186();
    if (!v8)
    {
      OUTLINED_FUNCTION_63(v4 + *(int *)(a3 + 24));
      OUTLINED_FUNCTION_9_0();
      return;
    }
    v6 = OUTLINED_FUNCTION_281();
  }
  OUTLINED_FUNCTION_35(v6, v3, v7);
}

uint64_t storeEnumTagSinglePayload for ModalityXASRResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24202EC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_325();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXASRResult.OneOf_Payload?);
  OUTLINED_FUNCTION_127();
  if (v5)
  {
    OUTLINED_FUNCTION_374();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_127();
    if (!v5)
    {
      OUTLINED_FUNCTION_229(*(int *)(a4 + 24));
      OUTLINED_FUNCTION_9_0();
      return;
    }
    OUTLINED_FUNCTION_282();
  }
  OUTLINED_FUNCTION_224();
  OUTLINED_FUNCTION_28(v6, v7, v8, v9);
}

void type metadata completion function for ModalityXASRResult()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXASRResult.OneOf_Payload?, (void (*)(uint64_t))type metadata accessor for ModalityXASRResult.OneOf_Payload);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UnknownStorage();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXASRResult.OneOf_Payload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
      v8 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    else
      v8 = type metadata accessor for ModalityXRecognitionCandidate(0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ModalityXASRResult.OneOf_Payload(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  else
    type metadata accessor for ModalityXRecognitionCandidate(0);
  return swift_release();
}

uint64_t initializeWithCopy for ModalityXASRResult.OneOf_Payload(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
    v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  else
    v6 = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ModalityXASRResult.OneOf_Payload(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    else
      v6 = type metadata accessor for ModalityXRecognitionCandidate(0);
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for ModalityXASRResult.OneOf_Payload(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
    v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  else
    v6 = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ModalityXASRResult.OneOf_Payload(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;

  if (a1 != a2)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, type metadata accessor for ModalityXASRResult.OneOf_Payload);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
    else
      v6 = type metadata accessor for ModalityXRecognitionCandidate(0);
    *(_QWORD *)(a1 + *(int *)(v6 + 20)) = *(_QWORD *)(a2 + *(int *)(v6 + 20));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata completion function for ModalityXASRResult.OneOf_Payload()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ModalityXRecognitionCandidate(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfileRebuildNeeded()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfileRebuildNeeded()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void type metadata completion function for ModalityXSpeechProfileRebuildNeeded()
{
  type metadata completion function for ModalityXBeginRequest();
}

_QWORD *initializeBufferWithCopyOfBuffer for ModalityXProcessingError(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (_QWORD *)((char *)a1 + v9);
    v13 = (_QWORD *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (_QWORD *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXProcessingError(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXProcessingError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXProcessingError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v14 = a3[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXProcessingError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for ModalityXProcessingError(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXProcessingError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24202F594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_287();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_280();
    OUTLINED_FUNCTION_35(v6, v7, v8);
  }
  else
  {
    OUTLINED_FUNCTION_63(a1 + *(int *)(a3 + 24));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXProcessingError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24202F5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_127();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_208();
    OUTLINED_FUNCTION_28(v6, v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_229(*(int *)(a4 + 24));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t type metadata completion function for ModalityXProcessingError()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void initializeBufferWithCopyOfBuffer for ModalityXCancelRequest()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  OUTLINED_FUNCTION_276();
  if ((v2 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_258();
  }
  else
  {
    v3 = v1;
    v4 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_94(v4);
    OUTLINED_FUNCTION_429(*(int *)(v3 + 20));
    *(_BYTE *)(v0 + v6) = v5;
    swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_9_0();
}

void initializeWithCopy for ModalityXCancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char v6;
  uint64_t v7;

  v5 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16));
  OUTLINED_FUNCTION_429(*(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = v6;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9_0();
}

void assignWithCopy for ModalityXCancelRequest()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  v1 = OUTLINED_FUNCTION_307();
  *(_QWORD *)(v2 + 8) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_416();
  OUTLINED_FUNCTION_9_0();
}

void initializeWithTake for ModalityXCancelRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  OUTLINED_FUNCTION_9_0();
}

void assignWithTake for ModalityXCancelRequest()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 40));
  OUTLINED_FUNCTION_234();
  OUTLINED_FUNCTION_416();
  OUTLINED_FUNCTION_9_0();
}

uint64_t getEnumTagSinglePayload for ModalityXRequestMitigated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXRequestMitigated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for ModalityXRequestMitigated()
{
  return type metadata completion function for ModalityXSpeechProfile();
}

uint64_t getEnumTagSinglePayload for ModalityXRequestComplete()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXRequestComplete()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXSpeechProfileBuildRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v19 = *(int *)(v16 + 20);
      v20 = (char *)v14 + v19;
      v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v8((uint64_t *)v20, (uint64_t *)v21, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    v22 = a3[7];
    v23 = a3[8];
    v24 = (uint64_t *)((char *)a1 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (uint64_t *)((char *)a1 + v23);
    v28 = (uint64_t *)((char *)a2 + v23);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = a3[9];
    v31 = (char *)a1 + v30;
    v32 = (uint64_t *)((char *)a2 + v30);
    v33 = *(uint64_t *)((char *)a2 + v30 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
    }
    else
    {
      v34 = *v32;
      outlined copy of Data._Representation(*v32, v33);
      *(_QWORD *)v31 = v34;
      *((_QWORD *)v31 + 1) = v33;
    }
    v35 = a3[10];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = *((_QWORD *)v37 + 1);
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
    }
    else
    {
      v39 = *(_QWORD *)v37;
      outlined copy of Data._Representation(*(_QWORD *)v37, *((_QWORD *)v37 + 1));
      *(_QWORD *)v36 = v39;
      *((_QWORD *)v36 + 1) = v38;
    }
  }
  return a1;
}

uint64_t destroy for ModalityXSpeechProfileBuildRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[6];
  v7 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 20), v4);
  }
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v9 = (uint64_t *)(a1 + a2[9]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    result = outlined consume of Data._Representation(*v9, v10);
  v11 = (uint64_t *)(a1 + a2[10]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    return outlined consume of Data._Representation(*v11, v12);
  return result;
}

uint64_t initializeWithCopy for ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = *(int *)(v15 + 20);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    swift_bridgeObjectRetain();
    v7((uint64_t)v18, (uint64_t)v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v20 = a3[7];
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v20);
  v23 = (_QWORD *)(a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)(a1 + v21);
  v26 = (_QWORD *)(a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[9];
  v29 = a1 + v28;
  v30 = (uint64_t *)(a2 + v28);
  v31 = *(_QWORD *)(a2 + v28 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  else
  {
    v32 = *v30;
    outlined copy of Data._Representation(*v30, v31);
    *(_QWORD *)v29 = v32;
    *(_QWORD *)(v29 + 8) = v31;
  }
  v33 = a3[10];
  v34 = a1 + v33;
  v35 = (uint64_t *)(a2 + v33);
  v36 = v35[1];
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  else
  {
    v37 = *v35;
    outlined copy of Data._Representation(*v35, v35[1]);
    *(_QWORD *)v34 = v37;
    *(_QWORD *)(v34 + 8) = v36;
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      *v13 = *v14;
      v18 = *(int *)(v15 + 20);
      v19 = (char *)v13 + v18;
      v20 = (char *)v14 + v18;
      v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain();
      v21(v19, v20, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v13, type metadata accessor for ModalityXSpeechProfileSourceData);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *v13 = *v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v6);
LABEL_7:
  v23 = a3[7];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[8];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[9];
  v30 = (uint64_t *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v32 = *(_QWORD *)(a2 + v29 + 8);
  if (*(_QWORD *)(a1 + v29 + 8) >> 60 == 15)
  {
    if (v32 >> 60 != 15)
    {
      v33 = *v31;
      outlined copy of Data._Representation(v33, v32);
      *v30 = v33;
      v30[1] = v32;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v32 >> 60 == 15)
  {
    outlined destroy of Data((uint64_t)v30);
LABEL_12:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    goto LABEL_14;
  }
  v34 = *v31;
  outlined copy of Data._Representation(v34, v32);
  v35 = *v30;
  v36 = v30[1];
  *v30 = v34;
  v30[1] = v32;
  outlined consume of Data._Representation(v35, v36);
LABEL_14:
  v37 = a3[10];
  v38 = (uint64_t *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v40 = *(_QWORD *)(a2 + v37 + 8);
  if (*(_QWORD *)(a1 + v37 + 8) >> 60 != 15)
  {
    if (v40 >> 60 != 15)
    {
      v42 = *v39;
      outlined copy of Data._Representation(v42, v40);
      v43 = *v38;
      v44 = v38[1];
      *v38 = v42;
      v38[1] = v40;
      outlined consume of Data._Representation(v43, v44);
      return a1;
    }
    outlined destroy of Data((uint64_t)v38);
    goto LABEL_19;
  }
  if (v40 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    return a1;
  }
  v41 = *v39;
  outlined copy of Data._Representation(v41, v40);
  *v38 = v41;
  v38[1] = v40;
  return a1;
}

char *initializeWithTake for ModalityXSpeechProfileBuildRequest(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  v14 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  return a1;
}

uint64_t assignWithTake for ModalityXSpeechProfileBuildRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumTagSinglePayload;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (EnumTagSinglePayload)
  {
    if (!v19)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v15, type metadata accessor for ModalityXSpeechProfileSourceData);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v15 = *(_QWORD *)v16;
  swift_bridgeObjectRelease();
  v8((uint64_t)&v15[*(int *)(v17 + 20)], (uint64_t)&v16[*(int *)(v17 + 20)], v6);
LABEL_7:
  v21 = a3[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[8];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = *(_QWORD *)(a1 + v31 + 8);
  if (v34 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    goto LABEL_12;
  }
  v35 = *(_QWORD *)(v33 + 8);
  if (v35 >> 60 == 15)
  {
    outlined destroy of Data(v32);
    goto LABEL_10;
  }
  v36 = *(_QWORD *)v32;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_QWORD *)(v32 + 8) = v35;
  outlined consume of Data._Representation(v36, v34);
LABEL_12:
  v37 = a3[10];
  v38 = (uint64_t *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v40 = *(_QWORD *)(a1 + v37 + 8);
  if (v40 >> 60 != 15)
  {
    v41 = v39[1];
    if (v41 >> 60 != 15)
    {
      v42 = *v38;
      *v38 = *v39;
      v38[1] = v41;
      outlined consume of Data._Representation(v42, v40);
      return a1;
    }
    outlined destroy of Data((uint64_t)v38);
  }
  *(_OWORD *)v38 = *(_OWORD *)v39;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfileBuildRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2420303E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_get_extra_inhabitant_index_197Tm(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfileBuildRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242030400(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_store_extra_inhabitant_index_198Tm(a1, a2, a3, a4);
}

void type metadata completion function for ModalityXSpeechProfileBuildRequest()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXSpeechProfileSourceData?, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXStreamingSpeechProfileBegin(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXStreamingSpeechProfileBegin(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ModalityXStreamingSpeechProfileBegin(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXStreamingSpeechProfileBegin()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXStreamingSpeechProfileBegin()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for ModalityXStreamingSpeechProfileBegin()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXStreamingSpeechProfileAddData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v19 = *(int *)(v16 + 20);
      v20 = (char *)v14 + v19;
      v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v8((uint64_t *)v20, (uint64_t *)v21, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    v22 = a3[7];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((_QWORD *)v24 + 1);
    if (v25 >> 60 == 15)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
    }
    else
    {
      v26 = *(_QWORD *)v24;
      outlined copy of Data._Representation(*(_QWORD *)v24, *((_QWORD *)v24 + 1));
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = v25;
    }
    v27 = a3[8];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = *((_QWORD *)v29 + 1);
    if (v30 >> 60 == 15)
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
    }
    else
    {
      v31 = *(_QWORD *)v29;
      outlined copy of Data._Representation(*(_QWORD *)v29, *((_QWORD *)v29 + 1));
      *(_QWORD *)v28 = v31;
      *((_QWORD *)v28 + 1) = v30;
    }
  }
  return a1;
}

uint64_t destroy for ModalityXStreamingSpeechProfileAddData(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[6];
  v7 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    result = v5(v6 + *(int *)(v7 + 20), v4);
  }
  v9 = (uint64_t *)(a1 + a2[7]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    result = outlined consume of Data._Representation(*v9, v10);
  v11 = (uint64_t *)(a1 + a2[8]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    return outlined consume of Data._Representation(*v11, v12);
  return result;
}

uint64_t initializeWithCopy for ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = *(int *)(v15 + 20);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    swift_bridgeObjectRetain();
    v7((uint64_t)v18, (uint64_t)v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = (uint64_t *)(a2 + v20);
  v23 = v22[1];
  if (v23 >> 60 == 15)
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  else
  {
    v24 = *v22;
    outlined copy of Data._Representation(*v22, v22[1]);
    *(_QWORD *)v21 = v24;
    *(_QWORD *)(v21 + 8) = v23;
  }
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = (uint64_t *)(a2 + v25);
  v28 = v27[1];
  if (v28 >> 60 == 15)
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  else
  {
    v29 = *v27;
    outlined copy of Data._Representation(*v27, v27[1]);
    *(_QWORD *)v26 = v29;
    *(_QWORD *)(v26 + 8) = v28;
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      *v13 = *v14;
      v18 = *(int *)(v15 + 20);
      v19 = (char *)v13 + v18;
      v20 = (char *)v14 + v18;
      v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain();
      v21(v19, v20, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v13, type metadata accessor for ModalityXSpeechProfileSourceData);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *v13 = *v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v6);
LABEL_7:
  v23 = a3[7];
  v24 = (uint64_t *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v26 = *(_QWORD *)(a2 + v23 + 8);
  if (*(_QWORD *)(a1 + v23 + 8) >> 60 == 15)
  {
    if (v26 >> 60 != 15)
    {
      v27 = *v25;
      outlined copy of Data._Representation(v27, v26);
      *v24 = v27;
      v24[1] = v26;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v26 >> 60 == 15)
  {
    outlined destroy of Data((uint64_t)v24);
LABEL_12:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    goto LABEL_14;
  }
  v28 = *v25;
  outlined copy of Data._Representation(v28, v26);
  v29 = *v24;
  v30 = v24[1];
  *v24 = v28;
  v24[1] = v26;
  outlined consume of Data._Representation(v29, v30);
LABEL_14:
  v31 = a3[8];
  v32 = (uint64_t *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v34 = *(_QWORD *)(a2 + v31 + 8);
  if (*(_QWORD *)(a1 + v31 + 8) >> 60 != 15)
  {
    if (v34 >> 60 != 15)
    {
      v36 = *v33;
      outlined copy of Data._Representation(v36, v34);
      v37 = *v32;
      v38 = v32[1];
      *v32 = v36;
      v32[1] = v34;
      outlined consume of Data._Representation(v37, v38);
      return a1;
    }
    outlined destroy of Data((uint64_t)v32);
    goto LABEL_19;
  }
  if (v34 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)v32 = *(_OWORD *)v33;
    return a1;
  }
  v35 = *v33;
  outlined copy of Data._Representation(v35, v34);
  *v32 = v35;
  v32[1] = v34;
  return a1;
}

char *initializeWithTake for ModalityXStreamingSpeechProfileAddData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v13 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  return a1;
}

uint64_t assignWithTake for ModalityXStreamingSpeechProfileAddData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int EnumTagSinglePayload;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = type metadata accessor for ModalityXSpeechProfileSourceData(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (EnumTagSinglePayload)
  {
    if (!v19)
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v15[*(int *)(v17 + 20)], &v16[*(int *)(v17 + 20)], v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v15, type metadata accessor for ModalityXSpeechProfileSourceData);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXSpeechProfileSourceData?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v15 = *(_QWORD *)v16;
  swift_bridgeObjectRelease();
  v8((uint64_t)&v15[*(int *)(v17 + 20)], (uint64_t)&v16[*(int *)(v17 + 20)], v6);
LABEL_7:
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = *(_QWORD *)(a1 + v21 + 8);
  if (v24 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v22 = *(_OWORD *)v23;
    goto LABEL_12;
  }
  v25 = *(_QWORD *)(v23 + 8);
  if (v25 >> 60 == 15)
  {
    outlined destroy of Data(v22);
    goto LABEL_10;
  }
  v26 = *(_QWORD *)v22;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v25;
  outlined consume of Data._Representation(v26, v24);
LABEL_12:
  v27 = a3[8];
  v28 = (uint64_t *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *(_QWORD *)(a1 + v27 + 8);
  if (v30 >> 60 != 15)
  {
    v31 = v29[1];
    if (v31 >> 60 != 15)
    {
      v32 = *v28;
      *v28 = *v29;
      v28[1] = v31;
      outlined consume of Data._Representation(v32, v30);
      return a1;
    }
    outlined destroy of Data((uint64_t)v28);
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXStreamingSpeechProfileAddData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2420312BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_get_extra_inhabitant_index_197Tm(a1, a2, a3);
}

uint64_t storeEnumTagSinglePayload for ModalityXStreamingSpeechProfileAddData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2420312D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_store_extra_inhabitant_index_198Tm(a1, a2, a3, a4);
}

void type metadata completion function for ModalityXStreamingSpeechProfileAddData()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXSpeechProfileSourceData?, (void (*)(uint64_t))type metadata accessor for ModalityXSpeechProfileSourceData);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void initializeBufferWithCopyOfBuffer for ModalityXSpeechProfileRebuildNeeded()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_276();
  if ((v1 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_258();
  }
  else
  {
    v2 = v0;
    v3 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_94(v3);
    OUTLINED_FUNCTION_375(*(int *)(v2 + 20));
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t destroy for ModalityXCancelRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_320(v3);
  OUTLINED_FUNCTION_84(*(int *)(a2 + 20));
  return swift_bridgeObjectRelease();
}

void initializeWithCopy for ModalityXSpeechProfileRebuildNeeded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_375(*(int *)(a3 + 20));
  OUTLINED_FUNCTION_9_0();
}

void assignWithCopy for ModalityXSpeechProfileRebuildNeeded()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  v1 = OUTLINED_FUNCTION_307();
  *(_QWORD *)(v2 + 8) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_0();
}

void initializeWithTake for ModalityXSpeechProfileRebuildNeeded(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  OUTLINED_FUNCTION_9_0();
}

void assignWithTake for ModalityXSpeechProfileRebuildNeeded()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_81(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 40));
  OUTLINED_FUNCTION_234();
  OUTLINED_FUNCTION_9_0();
}

uint64_t getEnumTagSinglePayload for ModalityXStreamingSpeechProfileCommit()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_183Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_287();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_280();
    OUTLINED_FUNCTION_35(v6, v7, v8);
  }
  else
  {
    OUTLINED_FUNCTION_63(a1 + *(int *)(a3 + 20));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXStreamingSpeechProfileCommit()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_184Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_127();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_208();
    OUTLINED_FUNCTION_28(v6, v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_229(*(int *)(a4 + 20));
    OUTLINED_FUNCTION_9_0();
  }
}

char *initializeBufferWithCopyOfBuffer for ModalityXSpeechProfileBuildResponse(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = &a1[v10];
    v15 = &a2[v10];
    v16 = (int *)type metadata accessor for ModalityXProcessingError(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v8(v14, v15, v7);
      v19 = v16[5];
      v20 = &v14[v19];
      v21 = &v15[v19];
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      v22 = v16[6];
      v23 = &v14[v22];
      v24 = &v15[v22];
      v25 = *((_QWORD *)v24 + 1);
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *((_QWORD *)v23 + 1) = v25;
      v14[v16[7]] = v15[v16[7]];
      v26 = v16[8];
      v27 = &v14[v26];
      v28 = &v15[v26];
      v29 = *((_QWORD *)v28 + 1);
      *(_QWORD *)v27 = *(_QWORD *)v28;
      *((_QWORD *)v27 + 1) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, (uint64_t)v16);
    }
    v30 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    v31 = &a1[v30];
    v32 = (uint64_t *)&a2[v30];
    v33 = *(_QWORD *)&a2[v30 + 8];
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)v31 = *(_OWORD *)v32;
    }
    else
    {
      v34 = *v32;
      outlined copy of Data._Representation(*v32, v33);
      *(_QWORD *)v31 = v34;
      *((_QWORD *)v31 + 1) = v33;
    }
    v35 = a3[9];
    v36 = &a1[v35];
    v37 = &a2[v35];
    v38 = *((_QWORD *)v37 + 1);
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
    }
    else
    {
      v39 = *(_QWORD *)v37;
      outlined copy of Data._Representation(*(_QWORD *)v37, *((_QWORD *)v37 + 1));
      *(_QWORD *)v36 = v39;
      *((_QWORD *)v36 + 1) = v38;
    }
  }
  return a1;
}

uint64_t destroy for ModalityXSpeechProfileBuildResponse(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[6];
  v7 = type metadata accessor for ModalityXProcessingError(0);
  result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v9 = (uint64_t *)(a1 + a2[8]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    result = outlined consume of Data._Representation(*v9, v10);
  v11 = (uint64_t *)(a1 + a2[9]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    return outlined consume of Data._Representation(*v11, v12);
  return result;
}

uint64_t initializeWithCopy for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (char *)(a1 + v9);
  v14 = (char *)(a2 + v9);
  v15 = (int *)type metadata accessor for ModalityXProcessingError(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v13, (uint64_t)v14, v6);
    v17 = v15[5];
    v18 = &v13[v17];
    v19 = &v14[v17];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = v15[6];
    v21 = &v13[v20];
    v22 = &v14[v20];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    v13[v15[7]] = v14[v15[7]];
    v24 = v15[8];
    v25 = &v13[v24];
    v26 = &v14[v24];
    v27 = *((_QWORD *)v26 + 1);
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, (uint64_t)v15);
  }
  v28 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v29 = a1 + v28;
  v30 = (uint64_t *)(a2 + v28);
  v31 = *(_QWORD *)(a2 + v28 + 8);
  if (v31 >> 60 == 15)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
  }
  else
  {
    v32 = *v30;
    outlined copy of Data._Representation(*v30, v31);
    *(_QWORD *)v29 = v32;
    *(_QWORD *)(v29 + 8) = v31;
  }
  v33 = a3[9];
  v34 = a1 + v33;
  v35 = (uint64_t *)(a2 + v33);
  v36 = v35[1];
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)v34 = *(_OWORD *)v35;
  }
  else
  {
    v37 = *v35;
    outlined copy of Data._Representation(*v35, v35[1]);
    *(_QWORD *)v34 = v37;
    *(_QWORD *)(v34 + 8) = v36;
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  int *v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  v15 = (int *)type metadata accessor for ModalityXProcessingError(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, (uint64_t)v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, (uint64_t)v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v13, v14, v6);
      v18 = v15[5];
      v19 = &v13[v18];
      v20 = &v14[v18];
      v21 = *(_DWORD *)v20;
      v19[4] = v20[4];
      *(_DWORD *)v19 = v21;
      v22 = v15[6];
      v23 = &v13[v22];
      v24 = &v14[v22];
      *v23 = *v24;
      v23[1] = v24[1];
      v13[v15[7]] = v14[v15[7]];
      v25 = v15[8];
      v26 = &v13[v25];
      v27 = &v14[v25];
      *v26 = *v27;
      v26[1] = v27[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, (uint64_t)v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v13, type metadata accessor for ModalityXProcessingError);
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
  v46 = v15[5];
  v47 = &v13[v46];
  v48 = &v14[v46];
  v49 = *(_DWORD *)v48;
  v47[4] = v48[4];
  *(_DWORD *)v47 = v49;
  v50 = v15[6];
  v51 = &v13[v50];
  v52 = &v14[v50];
  *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13[v15[7]] = v14[v15[7]];
  v53 = v15[8];
  v54 = &v13[v53];
  v55 = &v14[v53];
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v29 = a3[8];
  v30 = (uint64_t *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v32 = *(_QWORD *)(a2 + v29 + 8);
  if (*(_QWORD *)(a1 + v29 + 8) >> 60 == 15)
  {
    if (v32 >> 60 != 15)
    {
      v33 = *v31;
      outlined copy of Data._Representation(v33, v32);
      *v30 = v33;
      v30[1] = v32;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v32 >> 60 == 15)
  {
    outlined destroy of Data((uint64_t)v30);
LABEL_12:
    *(_OWORD *)v30 = *(_OWORD *)v31;
    goto LABEL_14;
  }
  v34 = *v31;
  outlined copy of Data._Representation(v34, v32);
  v35 = *v30;
  v36 = v30[1];
  *v30 = v34;
  v30[1] = v32;
  outlined consume of Data._Representation(v35, v36);
LABEL_14:
  v37 = a3[9];
  v38 = (uint64_t *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v40 = *(_QWORD *)(a2 + v37 + 8);
  if (*(_QWORD *)(a1 + v37 + 8) >> 60 != 15)
  {
    if (v40 >> 60 != 15)
    {
      v42 = *v39;
      outlined copy of Data._Representation(v42, v40);
      v43 = *v38;
      v44 = v38[1];
      *v38 = v42;
      v38[1] = v40;
      outlined consume of Data._Representation(v43, v44);
      return a1;
    }
    outlined destroy of Data((uint64_t)v38);
    goto LABEL_19;
  }
  if (v40 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    return a1;
  }
  v41 = *v39;
  outlined copy of Data._Representation(v41, v40);
  *v38 = v41;
  v38[1] = v40;
  return a1;
}

uint64_t initializeWithTake for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v9 = (char *)(a1 + v8);
  v10 = (char *)(a2 + v8);
  v11 = (int *)type metadata accessor for ModalityXProcessingError(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v13 = v11[5];
    v14 = &v9[v13];
    v15 = &v10[v13];
    *(_DWORD *)v14 = *(_DWORD *)v15;
    v14[4] = v15[4];
    *(_OWORD *)&v9[v11[6]] = *(_OWORD *)&v10[v11[6]];
    v9[v11[7]] = v10[v11[7]];
    *(_OWORD *)&v9[v11[8]] = *(_OWORD *)&v10[v11[8]];
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, (uint64_t)v11);
  }
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ModalityXSpeechProfileBuildResponse(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  int *v17;
  int EnumTagSinglePayload;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = (_BYTE *)(a1 + v14);
  v16 = (_BYTE *)(a2 + v14);
  v17 = (int *)type metadata accessor for ModalityXProcessingError(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, (uint64_t)v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, (uint64_t)v17);
  if (EnumTagSinglePayload)
  {
    if (!v19)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v15, v16, v6);
      v20 = v17[5];
      v21 = &v15[v20];
      v22 = &v16[v20];
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      *(_OWORD *)&v15[v17[6]] = *(_OWORD *)&v16[v17[6]];
      v15[v17[7]] = v16[v17[7]];
      *(_OWORD *)&v15[v17[8]] = *(_OWORD *)&v16[v17[8]];
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, (uint64_t)v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v15, type metadata accessor for ModalityXProcessingError);
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXProcessingError?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v15, (uint64_t)v16, v6);
  v37 = v17[5];
  v38 = &v15[v37];
  v39 = &v16[v37];
  *(_DWORD *)v38 = *(_DWORD *)v39;
  v38[4] = v39[4];
  v40 = v17[6];
  v41 = &v15[v40];
  v42 = (uint64_t *)&v16[v40];
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v15[v17[7]] = v16[v17[7]];
  v45 = v17[8];
  v46 = &v15[v45];
  v47 = (uint64_t *)&v16[v45];
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
LABEL_7:
  v24 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a1 + v24 + 8);
  if (v27 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v25 = *(_OWORD *)v26;
    goto LABEL_12;
  }
  v28 = *(_QWORD *)(v26 + 8);
  if (v28 >> 60 == 15)
  {
    outlined destroy of Data(v25);
    goto LABEL_10;
  }
  v29 = *(_QWORD *)v25;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = v28;
  outlined consume of Data._Representation(v29, v27);
LABEL_12:
  v30 = a3[9];
  v31 = (uint64_t *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v33 = *(_QWORD *)(a1 + v30 + 8);
  if (v33 >> 60 != 15)
  {
    v34 = v32[1];
    if (v34 >> 60 != 15)
    {
      v35 = *v31;
      *v31 = *v32;
      v31[1] = v34;
      outlined consume of Data._Representation(v35, v33);
      return a1;
    }
    outlined destroy of Data((uint64_t)v31);
  }
  *(_OWORD *)v31 = *(_OWORD *)v32;
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfileBuildResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24203220C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_get_extra_inhabitant_index_197Tm(a1, a2, a3);
}

void __swift_get_extra_inhabitant_index_197Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_186();
  if (v6)
  {
    v7 = OUTLINED_FUNCTION_422();
  }
  else
  {
    if ((_DWORD)a2 == 2147483646)
    {
      OUTLINED_FUNCTION_63(a1 + *(int *)(a3 + 20));
      OUTLINED_FUNCTION_9_0();
      return;
    }
    v8 = OUTLINED_FUNCTION_100();
    v7 = a1 + *(int *)(a3 + 24);
  }
  OUTLINED_FUNCTION_35(v7, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfileBuildResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242032294(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_store_extra_inhabitant_index_198Tm(a1, a2, a3, a4);
}

void __swift_store_extra_inhabitant_index_198Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_DWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_15() - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_374();
  }
  else
  {
    if (a3 == 2147483646)
    {
      OUTLINED_FUNCTION_229(*(int *)(a4 + 20));
      OUTLINED_FUNCTION_12();
      return;
    }
    OUTLINED_FUNCTION_100();
  }
  OUTLINED_FUNCTION_224();
  OUTLINED_FUNCTION_245(v6, v7, v8, v9);
}

void type metadata completion function for ModalityXSpeechProfileBuildResponse()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXProcessingError?, (void (*)(uint64_t))type metadata accessor for ModalityXProcessingError);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t ObjC metadata update function for ModalityXBeginRequest._StorageClass()
{
  return type metadata accessor for ModalityXBeginRequest._StorageClass(0);
}

void type metadata completion function for ModalityXBeginRequest._StorageClass()
{
  unint64_t v0;

  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXAudioMetadata?, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t ObjC metadata update function for ModalityXBeginDictation._StorageClass()
{
  return type metadata accessor for ModalityXBeginDictation._StorageClass(0);
}

void type metadata completion function for ModalityXBeginDictation._StorageClass()
{
  unint64_t v0;

  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXAudioMetadata?, (void (*)(uint64_t))type metadata accessor for ModalityXAudioMetadata);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_359(a1, a2, a3);
  OUTLINED_FUNCTION_94(v3);
  OUTLINED_FUNCTION_1_0();
}

void outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_319(v2);
  OUTLINED_FUNCTION_1_0();
}

void closure #1 in static Data.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_242032610(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  BOOL *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  __int16 v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v40 = v37;
  v41 = v38;
  v42 = BYTE2(v38);
  v43 = BYTE3(v38);
  v44 = BYTE4(v38);
  v45 = BYTE5(v38);
  if (!v36)
  {
    __break(1u);
    JUMPOUT(0x242032794);
  }
  result = memcmp(v36, &v40, BYTE6(v38));
  *v35 = (_DWORD)result == 0;
  return result;
}

uint64_t specialized __DataStorage.withUnsafeBytes<A>(in:apply:)(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result;
  char *v8;
  BOOL v9;
  int64_t v10;
  size_t v11;

  result = __DataStorage._bytes.getter();
  v8 = (char *)result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  result = __DataStorage._length.getter();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10)
    v11 = v10;
  else
    v11 = result;
  return memcmp(a4, v8, v11) == 0;
}

void OUTLINED_FUNCTION_2_0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

uint64_t OUTLINED_FUNCTION_4_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_8_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  *(_QWORD *)(v3 + 24) = a1;
  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v1, v4);
}

uint64_t OUTLINED_FUNCTION_10()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_11(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_13(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 88) = v2;
  result = type metadata accessor for ModalityXBeginDictation(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_15()
{
  return type metadata accessor for UnknownStorage();
}

void *OUTLINED_FUNCTION_16(uint64_t a1)
{
  return malloc(*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_17()
{
  return dispatch thunk of Decoder.nextFieldNumber()();
}

void *OUTLINED_FUNCTION_21()
{
  return malloc(0x28uLL);
}

void OUTLINED_FUNCTION_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_23()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_25(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t OUTLINED_FUNCTION_26(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 72) = v2;
  result = type metadata accessor for ModalityXBeginDictation(0);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(result + 20);
  return result;
}

void *OUTLINED_FUNCTION_27(uint64_t a1)
{
  return malloc(*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_30()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_33(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + v2) = a1;
  return swift_release();
}

_QWORD *OUTLINED_FUNCTION_34(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = result;
  *result = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_35(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_36()
{
  type metadata accessor for ModalityXBeginDictation(0);
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_37(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1, v2);
}

void OUTLINED_FUNCTION_38(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with take of ModalityXSessionMetadata(a1, v3, a3);
}

void OUTLINED_FUNCTION_39(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, v1);
}

uint64_t OUTLINED_FUNCTION_40()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_41()
{
  return swift_release();
}

void OUTLINED_FUNCTION_42(void *a1)
{
  free(a1);
}

void *OUTLINED_FUNCTION_43()
{
  size_t v0;

  return malloc(v0);
}

uint64_t OUTLINED_FUNCTION_44()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_45()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_47()
{
  unint64_t v0;
  uint64_t v1;

  return outlined copy of Data._Representation(v1, v0);
}

uint64_t OUTLINED_FUNCTION_48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + 24) = a1;
  return *(_QWORD *)(v2 + a1 + 8);
}

uint64_t OUTLINED_FUNCTION_49(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_50()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_51(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_52()
{
  return UnknownStorage.init()();
}

uint64_t OUTLINED_FUNCTION_53(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t OUTLINED_FUNCTION_55()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_56@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + 24) = a1;
  return *(_QWORD *)(v2 + a1);
}

void OUTLINED_FUNCTION_57(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_58()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_60()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  JUMPOUT(0x2426A2D44);
}

uint64_t OUTLINED_FUNCTION_62()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_63@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t OUTLINED_FUNCTION_65()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_67()
{
  unint64_t v0;
  uint64_t v1;

  return outlined consume of Data._Representation(v1, v0);
}

void OUTLINED_FUNCTION_68(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_69()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

void OUTLINED_FUNCTION_71(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_72()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void *OUTLINED_FUNCTION_73()
{
  return malloc(0x58uLL);
}

void *OUTLINED_FUNCTION_74()
{
  return malloc(0x68uLL);
}

uint64_t OUTLINED_FUNCTION_75()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

void OUTLINED_FUNCTION_76()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #2 in ModalityXSpeechProfile.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

uint64_t OUTLINED_FUNCTION_78(uint64_t a1)
{
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;

  result = __swift_storeEnumTagSinglePayload(v3, 1, 1, a1);
  *(_BYTE *)(v1 + v2[6]) = 2;
  *(_BYTE *)(v1 + v2[7]) = 8;
  v5 = (_QWORD *)(v1 + v2[8]);
  *v5 = 0;
  v5[1] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_81@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_83(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1 + 8);
}

uint64_t OUTLINED_FUNCTION_85(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 80) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_86(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + *(int *)(a1 + 20));
  *v2 = 0;
  v2[1] = 0;
  return type metadata accessor for ModalityXSpeechProfileSourceData(0);
}

uint64_t OUTLINED_FUNCTION_88()
{
  return type metadata accessor for ModalityXBeginDictation(0);
}

uint64_t OUTLINED_FUNCTION_91()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_92()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_93()
{
  return dispatch thunk of Decoder.nextFieldNumber()();
}

uint64_t OUTLINED_FUNCTION_94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

void OUTLINED_FUNCTION_95(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  closure #1 in ModalityXCancelRequest.traverse<A>(visitor:)(v6, v8, v7, v5, a5);
}

uint64_t OUTLINED_FUNCTION_97()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;

  result = __swift_storeEnumTagSinglePayload(v3, 1, 1, a1);
  v5 = (_QWORD *)(v1 + *(int *)(v2 + 28));
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(v1 + *(int *)(v2 + 32));
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_99@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = v1 + a1;
  v4 = type metadata accessor for ModalityXProcessingError(0);
  result = __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  *(_BYTE *)(v1 + *(int *)(v2 + 28)) = 2;
  return result;
}

uint64_t OUTLINED_FUNCTION_100()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_101(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_102()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_104()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_105()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_106()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  outlined consume of Data?(v0, v1);
  return v2;
}

void OUTLINED_FUNCTION_107(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, a2);
}

void OUTLINED_FUNCTION_108(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v2, a2);
}

void OUTLINED_FUNCTION_109(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_110()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  outlined consume of Data?(v2, v3);
  return outlined consume of Data?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_111()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

void OUTLINED_FUNCTION_116(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  outlined init with take of ModalityXSessionMetadata(a1, v2, v1);
}

void OUTLINED_FUNCTION_117(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v2, a2);
}

void OUTLINED_FUNCTION_118()
{
  _BYTE *v0;
  uint64_t v1;

  *(_BYTE *)(v1 + 84) = *v0 & 1;
}

uint64_t OUTLINED_FUNCTION_119()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_120()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_121(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return 0;
}

BOOL OUTLINED_FUNCTION_122@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1 + 8) >> 60 != 15;
}

uint64_t OUTLINED_FUNCTION_123@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

void *OUTLINED_FUNCTION_124(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return malloc(*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_125(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

void *OUTLINED_FUNCTION_128(uint64_t a1)
{
  return malloc(*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void OUTLINED_FUNCTION_129()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #1 in ModalityXCancelRequest.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

unint64_t OUTLINED_FUNCTION_132(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

void OUTLINED_FUNCTION_135(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_139()
{
  return 0;
}

void OUTLINED_FUNCTION_140(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1);
}

void OUTLINED_FUNCTION_141()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v1, v0);
}

uint64_t OUTLINED_FUNCTION_143()
{
  return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
}

uint64_t OUTLINED_FUNCTION_145()
{
  uint64_t v0;
  unint64_t v1;

  return outlined consume of Data._Representation(v0, v1);
}

uint64_t OUTLINED_FUNCTION_146(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_148@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_149(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXSpeechProfileBuildRequest(0);
}

void OUTLINED_FUNCTION_150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #4 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

uint64_t OUTLINED_FUNCTION_151(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

void OUTLINED_FUNCTION_152(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with take of ModalityXSessionMetadata(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_153()
{
  int *v0;
  uint64_t v1;

  *(_BYTE *)(v1 + v0[5]) = 8;
  *(_BYTE *)(v1 + v0[6]) = 8;
  *(_BYTE *)(v1 + v0[7]) = 2;
  return type metadata accessor for ModalityXVoiceTriggerInfo(0);
}

void *OUTLINED_FUNCTION_158()
{
  size_t v0;

  return malloc(v0);
}

uint64_t OUTLINED_FUNCTION_159(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_160(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_161(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t OUTLINED_FUNCTION_164()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_165(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_167@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return v1(v2 + a1, v4, v3);
}

void OUTLINED_FUNCTION_168(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, v1);
}

void OUTLINED_FUNCTION_169(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with take of ModalityXSessionMetadata(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_170()
{
  uint64_t v0;
  unint64_t v1;

  return outlined consume of Data?(v0, v1);
}

void OUTLINED_FUNCTION_171(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_172()
{
  return type metadata accessor for ModalityXSpeechProfileSourceData(0);
}

uint64_t OUTLINED_FUNCTION_173()
{
  return type metadata accessor for ModalityXSpeechProfileSourceData(0);
}

uint64_t OUTLINED_FUNCTION_174()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ModalityXASRResult.OneOf_Payload(0);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
  type metadata accessor for ModalityXASRResult(0);
  return UnknownStorage.init()();
}

uint64_t OUTLINED_FUNCTION_179(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 - 88) + 16))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 120) + *(int *)(a1 + 20), *(_QWORD *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = v2 + a1;
  result = outlined consume of Data?(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_QWORD *)v4 = v3;
  *(_QWORD *)(v4 + 8) = v1;
  return result;
}

void OUTLINED_FUNCTION_181()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v0 + *(int *)(v1 + 24));
  *v2 = 0;
  v2[1] = 0;
  *(_BYTE *)(v0 + *(int *)(v1 + 28)) = 2;
}

uint64_t OUTLINED_FUNCTION_182()
{
  return UnknownStorage.init()();
}

uint64_t OUTLINED_FUNCTION_184()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_185()
{
  return 0;
}

void OUTLINED_FUNCTION_187(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, v1);
}

uint64_t OUTLINED_FUNCTION_189()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_190(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3 + a1;
  if (v3)
    v5 = v4;
  else
    v5 = 0;
  closure #1 in static Data.== infix(_:_:)(v3, v5, v2, v1);
}

uint64_t OUTLINED_FUNCTION_191()
{
  return swift_endAccess();
}

void OUTLINED_FUNCTION_193(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, a2, v2);
}

void OUTLINED_FUNCTION_194(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, v1);
}

void OUTLINED_FUNCTION_195(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ModalityXSessionMetadata(a1, a2, v2);
}

void OUTLINED_FUNCTION_196(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1);
}

void OUTLINED_FUNCTION_197(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + 12) = *(_BYTE *)(v2 + a1) & 1;
  *(_DWORD *)(v1 + 8) = a1;
}

uint64_t OUTLINED_FUNCTION_198@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return outlined consume of Data?(*(_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 8));
}

void OUTLINED_FUNCTION_199()
{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

uint64_t OUTLINED_FUNCTION_200(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_201(uint64_t a1)
{
  return ModalityXBeginDictation._StorageClass.init(copying:)(a1);
}

void OUTLINED_FUNCTION_202(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, v1);
}

void OUTLINED_FUNCTION_203()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  JUMPOUT(0x2426A2D44);
}

void OUTLINED_FUNCTION_204(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, a2);
}

void OUTLINED_FUNCTION_205(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, a2);
}

void OUTLINED_FUNCTION_206()
{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

uint64_t OUTLINED_FUNCTION_207(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_208()
{
  uint64_t v0;

  return v0;
}

BOOL OUTLINED_FUNCTION_209@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1 + 8) != 0;
}

void OUTLINED_FUNCTION_210(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  outlined init with take of ModalityXSessionMetadata(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_211(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t OUTLINED_FUNCTION_212()
{
  return type metadata accessor for ModalityXDeviceInfo(0);
}

void OUTLINED_FUNCTION_213(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
}

void OUTLINED_FUNCTION_214()
{
  _BYTE *v0;

  *v0 = 2;
}

void OUTLINED_FUNCTION_215(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ModalityXSessionMetadata(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_216(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_217()
{
  return dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)();
}

void OUTLINED_FUNCTION_218(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, v1);
}

uint64_t OUTLINED_FUNCTION_220@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_221(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_222()
{
  char v0;

  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_223(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + v2) = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_225()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  outlined consume of Data?(v0, v1);
  return v2;
}

uint64_t OUTLINED_FUNCTION_226()
{
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t OUTLINED_FUNCTION_227(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_228(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

void OUTLINED_FUNCTION_229(uint64_t a1@<X8>)
{
  unsigned int v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1 + 8) = v1;
}

uint64_t OUTLINED_FUNCTION_230()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_231()
{
  closure #3 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)();
}

void OUTLINED_FUNCTION_232(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_233()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(int *)(v0 + 20);
  v4 = (_QWORD *)(v2 + v3);
  v5 = (uint64_t *)(v1 + v3);
  v7 = *v5;
  v6 = v5[1];
  *v4 = v7;
  v4[1] = v6;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_235@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v4;

  *v4 = a3;
  v4[1] = v3;
  return outlined copy of Data?(a1, a2);
}

void OUTLINED_FUNCTION_236(char a1@<W8>)
{
  char v1;
  _BYTE *v2;

  if (v1)
    a1 = 0;
  *v2 = a1;
}

void OUTLINED_FUNCTION_237(int a1@<W8>)
{
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 12) = v1;
  *(_DWORD *)(v2 + 8) = a1;
}

uint64_t OUTLINED_FUNCTION_238()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_239(uint64_t a1)
{
  return ModalityXBeginRequest._StorageClass.init(copying:)(a1);
}

uint64_t OUTLINED_FUNCTION_240()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_241(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with copy of ModalityXSessionMetadata(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_244()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_245(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_246(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXStreamingSpeechProfileAddData(0);
}

uint64_t OUTLINED_FUNCTION_247(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXSpeechProfileBuildResponse(0);
}

uint64_t OUTLINED_FUNCTION_248(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXStreamingSpeechProfileBegin(0);
}

void *OUTLINED_FUNCTION_249()
{
  return malloc(0x30uLL);
}

uint64_t OUTLINED_FUNCTION_250()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_251()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v4 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  *(_QWORD *)(v3 - 96) = v1 + v4;
  *(_QWORD *)(v3 - 88) = v2 + v4;
}

void OUTLINED_FUNCTION_252(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ModalityXSessionMetadata(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_253()
{
  return UnknownStorage.init()();
}

uint64_t OUTLINED_FUNCTION_254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  _QWORD *v6;

  result = __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  *(_BYTE *)(v3 + *(int *)(v2 + 36)) = v4;
  v6 = (_QWORD *)(v3 + *(int *)(v2 + 40));
  *v6 = 0;
  v6[1] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_255()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_256()
{
  return type metadata accessor for ModalityXProcessingError(0);
}

uint64_t OUTLINED_FUNCTION_257()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_258()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_260()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_261()
{
  return UnknownStorage.init()();
}

void OUTLINED_FUNCTION_262()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v1);
}

void OUTLINED_FUNCTION_263()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #3 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

void OUTLINED_FUNCTION_264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #4 in ModalityXSessionMetadata.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

uint64_t OUTLINED_FUNCTION_265()
{
  char v0;

  return v0 & 1;
}

void OUTLINED_FUNCTION_266(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

BOOL OUTLINED_FUNCTION_268@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_BYTE *)(v1 + a1) != 2;
}

void OUTLINED_FUNCTION_269(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, a2, v2);
}

void OUTLINED_FUNCTION_270(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, v1);
}

uint64_t OUTLINED_FUNCTION_271()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_272()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_273()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD, _QWORD, uint64_t);
  uint64_t v3;

  return v2(*(_QWORD *)(v3 - 96), *(_QWORD *)(v3 - 104) + *(int *)(v0 + 20), v1);
}

void OUTLINED_FUNCTION_277()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v0 + *(int *)(v1 + 20));
  *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_278(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_280()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_281()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_282()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_283()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_284()
{
  return type metadata accessor for ModalityXProcessingError(0);
}

uint64_t OUTLINED_FUNCTION_285()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_286()
{
  return type metadata accessor for ModalityXAudioMetadata(0);
}

void OUTLINED_FUNCTION_288(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_289()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  closure #4 in ModalityXSessionMetadata.traverse<A>(visitor:)(v6, v8, v7, v5, a5);
}

void OUTLINED_FUNCTION_291(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  closure #1 in ModalityXAudioFrame.traverse<A>(visitor:)(v6, v8, v7, v5, a5);
}

void OUTLINED_FUNCTION_292()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #5 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

void OUTLINED_FUNCTION_293()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #3 in ModalityXAudioFrame.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

uint64_t OUTLINED_FUNCTION_295()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_296()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_299()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_300()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_301()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_302()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_303()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_307()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v3 = *(int *)(v0 + 20);
  v4 = (_QWORD *)(v2 + v3);
  v5 = (_QWORD *)(v1 + v3);
  *v4 = *v5;
  return v5[1];
}

void OUTLINED_FUNCTION_308()
{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

uint64_t OUTLINED_FUNCTION_309(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_310()
{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

uint64_t OUTLINED_FUNCTION_311(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_312()
{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

uint64_t OUTLINED_FUNCTION_313(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_314()
{
  ModalityXServerBoundFrame.sessionMetadata.modify();
}

uint64_t OUTLINED_FUNCTION_315(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return ModalityXServerBoundFrame.sessionMetadata.setter(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_316(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ModalityXSessionMetadata(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_317(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_318()
{
  return swift_initStructMetadata();
}

uint64_t OUTLINED_FUNCTION_319(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_320(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_322(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 88) = v2;
  result = type metadata accessor for ModalityXBeginRequest(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_323()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  outlined copy of Data?(v0, v1);
  outlined copy of Data?(v2, v3);
  return v0;
}

void *OUTLINED_FUNCTION_324()
{
  return malloc(0x60uLL);
}

uint64_t OUTLINED_FUNCTION_326(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(int *)(result + 8)) = *(_BYTE *)(result + 12);
  return result;
}

uint64_t OUTLINED_FUNCTION_327(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 80) = v2;
  result = type metadata accessor for ModalityXBeginDictation(0);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_328()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_333()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_334()
{
  return 0;
}

void OUTLINED_FUNCTION_336(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_338(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  outlined init with take of ModalityXSessionMetadata(a1, v1, v2);
}

void OUTLINED_FUNCTION_339()
{
  closure #2 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)();
}

void OUTLINED_FUNCTION_340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  closure #3 in ModalityXSpeechProfileBuildRequest.traverse<A>(visitor:)(v6, v8, v7, v5, a5);
}

uint64_t OUTLINED_FUNCTION_341()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_344()
{
  char v0;

  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_345()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_346()
{
  return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
}

uint64_t OUTLINED_FUNCTION_347()
{
  unint64_t v0;
  uint64_t v1;

  return outlined consume of Data?(v1, v0);
}

void OUTLINED_FUNCTION_351(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(a1, v1);
}

uint64_t OUTLINED_FUNCTION_352()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_353()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_354(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v2, a2);
}

uint64_t OUTLINED_FUNCTION_355(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 112) = (char *)&a9 - v9;
  return 0;
}

void OUTLINED_FUNCTION_356(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ModalityXSessionMetadata(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_357()
{
  return UnknownStorage.init()();
}

void OUTLINED_FUNCTION_358(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v1 + a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_359(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_360(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

void OUTLINED_FUNCTION_361(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;

  *(__n128 *)(v2 + a1) = a2;
  *(__n128 *)(v2 + *(int *)(v3 + 36)) = a2;
}

void OUTLINED_FUNCTION_362(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;

  *(__n128 *)(v2 + a1) = a2;
  *(__n128 *)(v2 + *(int *)(v3 + 40)) = a2;
}

void OUTLINED_FUNCTION_363(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;

  *(__n128 *)(v2 + a1) = a2;
  *(__n128 *)(v2 + *(int *)(v3 + 32)) = a2;
}

void OUTLINED_FUNCTION_364()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_366()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_368@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return UnknownStorage.init()();
}

uint64_t OUTLINED_FUNCTION_370()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_371(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  return type metadata accessor for ModalityXSessionMetadata(0);
}

uint64_t OUTLINED_FUNCTION_372(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  return type metadata accessor for ModalityXProcessingError(0);
}

uint64_t OUTLINED_FUNCTION_374()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_375@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + a1);
  v4 = v3[1];
  *v1 = *v3;
  v1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_376()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_379()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_380(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_381@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v1;

  return outlined copy of Data._Representation(*a1, v1);
}

uint64_t OUTLINED_FUNCTION_382(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_383()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_384()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_386()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_387()
{
  closure #2 in ModalityXSpeechProfileBuildRequest.decodeMessage<A>(decoder:)();
}

float OUTLINED_FUNCTION_389()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t OUTLINED_FUNCTION_390()
{
  uint64_t (*v0)(void);

  return v0();
}

void OUTLINED_FUNCTION_391()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

void OUTLINED_FUNCTION_393(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v2, a2);
}

void OUTLINED_FUNCTION_394(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, a2);
}

void OUTLINED_FUNCTION_395(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  outlined init with take of ModalityXSessionMetadata(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_396()
{
  uint64_t v0;
  unint64_t v1;

  return outlined consume of Data?(v0, v1);
}

void OUTLINED_FUNCTION_397(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  outlined init with take of ModalityXSessionMetadata(a1, v2, v1);
}

void OUTLINED_FUNCTION_398(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v2, a2);
}

void OUTLINED_FUNCTION_399(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_400()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_401(uint64_t a1)
{
  return ModalityXBeginRequest._StorageClass.init(copying:)(a1);
}

uint64_t OUTLINED_FUNCTION_402()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *v0;
  v4 = v0[1];
  *v0 = v1;
  v0[1] = v2;
  return outlined consume of Data?(v3, v4);
}

void OUTLINED_FUNCTION_403(char a1@<W8>)
{
  char v1;
  uint64_t v2;

  if (v1)
    a1 = 0;
  *(_BYTE *)(v2 + 84) = a1;
}

void OUTLINED_FUNCTION_404(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_405()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_406()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v0 + *(int *)(v1 + 24));
  *v2 = 0;
  v2[1] = 0;
}

void OUTLINED_FUNCTION_407()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + *(int *)(v0 + 24));
  *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_408()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_409()
{
  uint64_t v0;
  unint64_t v1;

  return outlined copy of Data._Representation(v0, v1);
}

void OUTLINED_FUNCTION_410(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_412@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t OUTLINED_FUNCTION_414()
{
  return type metadata accessor for UnknownStorage();
}

void OUTLINED_FUNCTION_415(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with copy of ModalityXSessionMetadata(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_416()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(v0 + 24)) = *(_BYTE *)(v1 + *(int *)(v0 + 24));
  return v2;
}

void OUTLINED_FUNCTION_417(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of ModalityXSessionMetadata(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_418()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_419()
{
  uint64_t v0;
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, v1);
}

uint64_t OUTLINED_FUNCTION_420()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_421(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_422()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_423()
{
  return malloc(0x38uLL);
}

void OUTLINED_FUNCTION_426(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ModalityXServerBoundFrame.OneOf_Payload?(a1, a2, v2);
}

void OUTLINED_FUNCTION_427(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + a1) = 2;
}

uint64_t OUTLINED_FUNCTION_428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, a4);
}

uint64_t OUTLINED_FUNCTION_429@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v2 + a1);
  result = v3[1];
  *v1 = *v3;
  v1[1] = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_430(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(result + 20)) = 2;
  return result;
}

void OUTLINED_FUNCTION_432(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  outlined init with take of ModalityXSessionMetadata(a1, a2, v2);
}

void OUTLINED_FUNCTION_433()
{
  void *v0;

  free(v0);
}

void OUTLINED_FUNCTION_434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v4, v3, a3);
}

void OUTLINED_FUNCTION_438()
{
  void *v0;

  free(v0);
}

void OUTLINED_FUNCTION_439()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v0, v1);
}

void OUTLINED_FUNCTION_440()
{
  specialized static Array<A>.== infix(_:_:)();
}

uint64_t ModalityXRecognitionCandidate.init()()
{
  return ModalityXRecognitionCandidate.init()();
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_178();
  v3 = v2;
  UnknownStorage.init()();
  v4 = *(int *)(OUTLINED_FUNCTION_144_0() + 20);
  if (*v1 != -1)
    swift_once();
  *(_QWORD *)(v3 + v4) = *v0;
  return OUTLINED_FUNCTION_244();
}

uint64_t type metadata accessor for ModalityXRecognitionCandidate(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionCandidate);
}

uint64_t ModalityXFinalSpeechRecognitionResponse.init()()
{
  return ModalityXRecognitionCandidate.init()();
}

void static ModalityXRecognitionCandidate.== infix(_:_:)()
{
  static ModalityXRecognitionCandidate.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  OUTLINED_FUNCTION_19();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_315_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_92();
  v13 = *(int *)(v5(v12) + 20);
  v14 = *(_QWORD *)(v9 + v13);
  v15 = *(_QWORD *)(v7 + v13);
  if (v14 == v15
    || (OUTLINED_FUNCTION_310_0(), swift_retain(), v16 = v3(v14, v15), swift_release(), swift_release(), (v16 & 1) != 0))
  {
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_382(v0);
    OUTLINED_FUNCTION_382(v1);
  }
  OUTLINED_FUNCTION_3_0();
}

void static ModalityXFinalSpeechRecognitionResponse.== infix(_:_:)()
{
  static ModalityXRecognitionCandidate.== infix(_:_:)();
}

void ModalityXRecognitionToken.tokenText.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXRecognitionToken);
}

void key path setter for ModalityXRecognitionToken.tokenText : ModalityXRecognitionToken(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXRecognitionToken.tokenText.setter(v1, v2);
}

void ModalityXRecognitionToken.tokenText.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXRecognitionToken);
}

void ModalityXRecognitionToken.tokenText.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_171_0(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionToken.hasTokenText.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXRecognitionToken);
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearTokenText()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXRecognitionToken);
}

uint64_t ModalityXRecognitionToken.startMilliSeconds.getter()
{
  return ModalityXRecognitionToken.startMilliSeconds.getter(type metadata accessor for ModalityXRecognitionToken);
}

void ModalityXRecognitionToken.startMilliSeconds.setter(uint64_t a1)
{
  ModalityXRecognitionToken.startMilliSeconds.setter(a1, type metadata accessor for ModalityXRecognitionToken);
}

void ModalityXRecognitionToken.startMilliSeconds.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_88_0(a1);
  OUTLINED_FUNCTION_13_0(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionToken.hasStartMilliSeconds.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXRecognitionToken);
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearStartMilliSeconds()()
{
  ModalityXRecognitionToken.clearStartMilliSeconds()(type metadata accessor for ModalityXRecognitionToken);
}

uint64_t ModalityXRecognitionToken.endMilliSeconds.getter()
{
  return ModalityXRecognitionToken.endMilliSeconds.getter(type metadata accessor for ModalityXRecognitionToken);
}

void ModalityXRecognitionToken.endMilliSeconds.setter(uint64_t a1)
{
  ModalityXRecognitionToken.endMilliSeconds.setter(a1, type metadata accessor for ModalityXRecognitionToken);
}

void ModalityXRecognitionToken.endMilliSeconds.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_88_0(a1);
  OUTLINED_FUNCTION_13_0(*(int *)(v1 + 28));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionToken.hasEndMilliSeconds.getter()
{
  return ModalityXRecognitionToken.hasEndMilliSeconds.getter(type metadata accessor for ModalityXRecognitionToken);
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearEndMilliSeconds()()
{
  ModalityXRecognitionToken.clearEndMilliSeconds()(type metadata accessor for ModalityXRecognitionToken);
}

uint64_t ModalityXRecognitionToken.silenceStartMilliSeconds.getter()
{
  return ModalityXRecognitionToken.silenceStartMilliSeconds.getter(type metadata accessor for ModalityXRecognitionToken);
}

void ModalityXRecognitionToken.silenceStartMilliSeconds.setter(uint64_t a1)
{
  ModalityXRecognitionToken.silenceStartMilliSeconds.setter(a1, type metadata accessor for ModalityXRecognitionToken);
}

void ModalityXRecognitionToken.silenceStartMilliSeconds.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_88_0(a1);
  OUTLINED_FUNCTION_13_0(*(int *)(v1 + 32));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionToken.hasSilenceStartMilliSeconds.getter()
{
  return ModalityXRecognitionToken.hasSilenceStartMilliSeconds.getter(type metadata accessor for ModalityXRecognitionToken);
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearSilenceStartMilliSeconds()()
{
  ModalityXRecognitionToken.clearSilenceStartMilliSeconds()(type metadata accessor for ModalityXRecognitionToken);
}

uint64_t ModalityXRecognitionToken.confidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_64_0(*(int *)(v0 + 36));
}

void ModalityXRecognitionToken.confidence.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_298_0();
  OUTLINED_FUNCTION_154_0(*(int *)(v0 + 36));
  OUTLINED_FUNCTION_1_0();
}

void ModalityXRecognitionToken.confidence.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_88_0(a1);
  OUTLINED_FUNCTION_13_0(*(int *)(v1 + 36));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionToken.hasConfidence.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_100_0(*(int *)(v0 + 36));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearConfidence()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ModalityXRecognitionToken(0);
  OUTLINED_FUNCTION_62_0(v0 + *(int *)(v1 + 36));
}

uint64_t ModalityXRecognitionToken.addSpaceAfter.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXRecognitionToken(0) + 40)) & 1;
}

void ModalityXRecognitionToken.addSpaceAfter.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_298_0() + 40)) = v0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXRecognitionToken.addSpaceAfter.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_88_0(a1);
  OUTLINED_FUNCTION_197(*(int *)(v1 + 40));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionToken.hasAddSpaceAfter.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_268(*(int *)(v0 + 40));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearAddSpaceAfter()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXRecognitionToken(0) + 40)) = 2;
}

void ModalityXRecognitionToken.phoneSeq.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXRecognitionToken(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 44)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXRecognitionToken.phoneSeq : ModalityXRecognitionToken()
{
  swift_bridgeObjectRetain();
  ModalityXRecognitionToken.phoneSeq.setter();
}

void ModalityXRecognitionToken.phoneSeq.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_250_0();
  OUTLINED_FUNCTION_250();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXRecognitionToken.phoneSeq.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_171_0(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 44)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionToken.hasPhoneSeq.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 44));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearPhoneSeq()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXRecognitionToken(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXRecognitionToken.ipaPhoneSeq.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXRecognitionToken(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 48)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXRecognitionToken.ipaPhoneSeq : ModalityXRecognitionToken()
{
  swift_bridgeObjectRetain();
  ModalityXRecognitionToken.ipaPhoneSeq.setter();
}

void ModalityXRecognitionToken.ipaPhoneSeq.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_250_0();
  OUTLINED_FUNCTION_250();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXRecognitionToken.ipaPhoneSeq.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_171_0(a1);
  if (OUTLINED_FUNCTION_48(*(int *)(v2 + 48)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v3;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionToken.hasIpaPhoneSeq.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXRecognitionToken(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 48));
}

Swift::Void __swiftcall ModalityXRecognitionToken.clearIpaPhoneSeq()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXRecognitionToken(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXRecognitionToken.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRecognitionToken.init()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_261();
  v1 = type metadata accessor for ModalityXRecognitionToken(0);
  v2 = (_QWORD *)(v0 + *(int *)(v1 + 20));
  *v2 = 0;
  v2[1] = 0;
  OUTLINED_FUNCTION_62_0(v0 + *(int *)(v1 + 24));
  v4 = OUTLINED_FUNCTION_169_0(v3);
  v5 = v0 + *(int *)(v4 + 36);
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = v6;
  OUTLINED_FUNCTION_292_0(*(int *)(v4 + 40));
  OUTLINED_FUNCTION_83(*(int *)(v7 + 44));
  OUTLINED_FUNCTION_83(*(int *)(v8 + 48));
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXRecognitionPhraseTokens.tokens.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionPhraseTokens.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_206_0();
  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_97_0();
  return OUTLINED_FUNCTION_146(v0, v1, v2, v3);
}

uint64_t ModalityXRecognitionPhraseTokens.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXRecognitionPhraseTokens);
}

uint64_t (*ModalityXRecognitionPhraseTokens.unknownFields.modify())()
{
  type metadata accessor for ModalityXRecognitionPhraseTokens(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRecognitionPhraseTokens.init()(_QWORD *a1@<X8>)
{
  ModalityXRecognitionPhraseTokens.init()(a1);
}

{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_206_0();
  OUTLINED_FUNCTION_253();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXRecognitionPhraseTokensAlternatives.tokPhrases.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0) + 24)) & 1;
}

void ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.setter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_297_0();
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(v2) + 24)) = v0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_227(a1);
  v2 = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(v1);
  OUTLINED_FUNCTION_197(*(int *)(v2 + 24));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionPhraseTokensAlternatives.hasHasUnsuggestedAlternatives_p.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
  return OUTLINED_FUNCTION_268(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXRecognitionPhraseTokensAlternatives.clearHasUnsuggestedAlternatives_p()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0) + 24)) = 2;
}

uint64_t ModalityXRecognitionPhraseTokensAlternatives.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXRecognitionPhraseTokensAlternatives.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives);
}

uint64_t (*ModalityXRecognitionPhraseTokensAlternatives.unknownFields.modify())()
{
  OUTLINED_FUNCTION_318_0();
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRecognitionPhraseTokensAlternatives.init()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = MEMORY[0x24BEE4AF8];
  v1 = OUTLINED_FUNCTION_318_0();
  OUTLINED_FUNCTION_253();
  OUTLINED_FUNCTION_292_0(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXRecognitionSausage.positionalTokPhraseAlt.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionSausage.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXRecognitionSausage.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXRecognitionSausage);
}

uint64_t (*ModalityXRecognitionSausage.unknownFields.modify())()
{
  type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRecognitionSausage.init()(_QWORD *a1@<X8>)
{
  ModalityXRecognitionPhraseTokens.init()(a1);
}

uint64_t (*ModalityXSetAlternateRecognitionSausage.positionalTokPhraseAlt.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXSetAlternateRecognitionSausage.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXSetAlternateRecognitionSausage.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXSetAlternateRecognitionSausage);
}

uint64_t (*ModalityXSetAlternateRecognitionSausage.unknownFields.modify())()
{
  type metadata accessor for ModalityXSetAlternateRecognitionSausage(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXSetAlternateRecognitionSausage.init()(_QWORD *a1@<X8>)
{
  ModalityXRecognitionPhraseTokens.init()(a1);
}

uint64_t (*ModalityXRecognitionChoice.alternativeIndex.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionChoice.confidence.getter()
{
  return ModalityXRecognitionToken.startMilliSeconds.getter(type metadata accessor for ModalityXRecognitionChoice);
}

uint64_t ModalityXRecognitionToken.startMilliSeconds.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_64_0(*(int *)(v1 + 24));
}

void ModalityXRecognitionChoice.confidence.setter(uint64_t a1)
{
  ModalityXRecognitionToken.startMilliSeconds.setter(a1, type metadata accessor for ModalityXRecognitionChoice);
}

void ModalityXRecognitionToken.startMilliSeconds.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_211(a1, a2);
  OUTLINED_FUNCTION_154_0(*(int *)(v2 + 24));
  OUTLINED_FUNCTION_1_0();
}

void ModalityXRecognitionChoice.confidence.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_227(a1);
  v2 = type metadata accessor for ModalityXRecognitionChoice(v1);
  OUTLINED_FUNCTION_13_0(*(int *)(v2 + 24));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXRecognitionChoice.hasConfidence.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXRecognitionChoice);
}

BOOL ModalityXRecognitionToken.hasStartMilliSeconds.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_100_0(*(int *)(v1 + 24));
}

Swift::Void __swiftcall ModalityXRecognitionChoice.clearConfidence()()
{
  ModalityXRecognitionToken.clearStartMilliSeconds()(type metadata accessor for ModalityXRecognitionChoice);
}

void ModalityXRecognitionToken.clearStartMilliSeconds()(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_62_0(v1 + *(int *)(v2 + 24));
}

uint64_t ModalityXRecognitionChoice.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXRecognitionChoice.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXRecognitionChoice);
}

uint64_t (*ModalityXRecognitionChoice.unknownFields.modify())()
{
  type metadata accessor for ModalityXRecognitionChoice(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRecognitionChoice.init()(_QWORD *a1@<X8>)
{
  ModalityXRecognitionChoice.init()(a1);
}

{
  uint64_t v2;

  *a1 = MEMORY[0x24BEE4AF8];
  v2 = OUTLINED_FUNCTION_206_0();
  OUTLINED_FUNCTION_253();
  OUTLINED_FUNCTION_62_0((uint64_t)a1 + *(int *)(v2 + 24));
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXRepeatedItnAlignment.itnAlignment.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRepeatedItnAlignment.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXRepeatedItnAlignment.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXRepeatedItnAlignment);
}

uint64_t (*ModalityXRepeatedItnAlignment.unknownFields.modify())()
{
  type metadata accessor for ModalityXRepeatedItnAlignment(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXRepeatedItnAlignment.init()(_QWORD *a1@<X8>)
{
  ModalityXRecognitionPhraseTokens.init()(a1);
}

uint64_t (*ModalityXChoiceAlignment.postItnChoiceIndices.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t (*ModalityXChoiceAlignment.preItnTokenToPostItnCharAlignments.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXChoiceAlignment.unknownFields.getter()
{
  return ModalityXChoiceAlignment.unknownFields.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_206_0();
  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_97_0();
  return OUTLINED_FUNCTION_146(v0, v1, v2, v3);
}

uint64_t ModalityXChoiceAlignment.unknownFields.setter(uint64_t a1)
{
  return ModalityXChoiceAlignment.unknownFields.setter(a1, type metadata accessor for ModalityXChoiceAlignment);
}

uint64_t (*ModalityXChoiceAlignment.unknownFields.modify())()
{
  type metadata accessor for ModalityXChoiceAlignment(0);
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXChoiceAlignment.init()(_QWORD *a1@<X8>)
{
  ModalityXChoiceAlignment.init()(a1);
}

{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v2;
  OUTLINED_FUNCTION_206_0();
  OUTLINED_FUNCTION_253();
  OUTLINED_FUNCTION_1_0();
}

void ModalityXRecognitionResult.preItn.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  OUTLINED_FUNCTION_308_0();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_181_0(*(int *)(v4 + 36));
  type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_14_0(v1);
  if (v6)
  {
    *a1 = MEMORY[0x24BEE4AF8];
    v7 = OUTLINED_FUNCTION_253();
    OUTLINED_FUNCTION_380(v7, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  else
  {
    OUTLINED_FUNCTION_38(v1, v5, type metadata accessor for ModalityXRecognitionSausage);
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXRecognitionResult.preItn.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = OUTLINED_FUNCTION_225_0();
  OUTLINED_FUNCTION_109(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_228_0(v1, v2, type metadata accessor for ModalityXRecognitionSausage);
  type metadata accessor for ModalityXRecognitionSausage(0);
  v3 = OUTLINED_FUNCTION_196_0();
  return OUTLINED_FUNCTION_317(v3, v4, v5, v6);
}

void ModalityXRecognitionResult.preItn.modify()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v3 = OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  *(_QWORD *)(v2 + 8) = v5;
  v6 = type metadata accessor for ModalityXRecognitionSausage(0);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)(v2 + 24) = OUTLINED_FUNCTION_128(v6);
  v7 = OUTLINED_FUNCTION_158();
  v8 = *(int *)(OUTLINED_FUNCTION_279_0((uint64_t)v7) + 36);
  *(_DWORD *)(v2 + 40) = v8;
  OUTLINED_FUNCTION_56_0(v0 + v8);
  v9 = OUTLINED_FUNCTION_14_0((uint64_t)v5);
  if (v11)
  {
    *v1 = MEMORY[0x24BEE4AF8];
    v12 = OUTLINED_FUNCTION_177_0();
    OUTLINED_FUNCTION_204(v12, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v9, v10, type metadata accessor for ModalityXRecognitionSausage);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXRecognitionResult.preItn.modify();
}

{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t (*v2)(_QWORD);
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_163();
  v2 = v1;
  v3 = *(void **)v0;
  v4 = *(int *)(*(_QWORD *)v0 + 40);
  v5 = *(void **)(*(_QWORD *)v0 + 24);
  v6 = *(void **)(*(_QWORD *)v0 + 32);
  v7 = *(void **)(*(_QWORD *)v0 + 8);
  v8 = **(_QWORD **)v0 + v4;
  if ((v9 & 1) != 0)
  {
    outlined init with copy of ModalityXRecognitionSausage(*(_QWORD *)(*(_QWORD *)v0 + 32), (uint64_t)v5, v1);
    OUTLINED_FUNCTION_165(v8);
    OUTLINED_FUNCTION_395((uint64_t)v5);
    OUTLINED_FUNCTION_300();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v6, v2);
  }
  else
  {
    OUTLINED_FUNCTION_165(**(_QWORD **)v0 + v4);
    OUTLINED_FUNCTION_395((uint64_t)v6);
    OUTLINED_FUNCTION_300();
  }
  free(v6);
  free(v5);
  free(v7);
  OUTLINED_FUNCTION_42(v3);
}

void ModalityXRecognitionResult.hasPreItn.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_418();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_182_0(*(int *)(v1 + 36));
  v2 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_69_0(v2);
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ModalityXRecognitionResult.clearPreItn()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_204(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  type metadata accessor for ModalityXRecognitionSausage(0);
  v1 = OUTLINED_FUNCTION_139_0();
  OUTLINED_FUNCTION_317(v1, v2, v3, v4);
}

void ModalityXRecognitionResult.postItn.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  OUTLINED_FUNCTION_308_0();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_181_0(*(int *)(v4 + 40));
  type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_14_0(v1);
  if (v6)
  {
    *a1 = MEMORY[0x24BEE4AF8];
    v7 = OUTLINED_FUNCTION_253();
    OUTLINED_FUNCTION_380(v7, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  else
  {
    OUTLINED_FUNCTION_38(v1, v5, type metadata accessor for ModalityXRecognitionSausage);
  }
  OUTLINED_FUNCTION_9_0();
}

void key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v9 = a5(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v12 - v10;
  outlined init with copy of ModalityXRecognitionSausage(a1, (uint64_t)&v12 - v10, a5);
  a6(v11);
  OUTLINED_FUNCTION_12();
}

uint64_t ModalityXRecognitionResult.postItn.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = OUTLINED_FUNCTION_225_0();
  OUTLINED_FUNCTION_109(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_228_0(v1, v2, type metadata accessor for ModalityXRecognitionSausage);
  type metadata accessor for ModalityXRecognitionSausage(0);
  v3 = OUTLINED_FUNCTION_196_0();
  return OUTLINED_FUNCTION_317(v3, v4, v5, v6);
}

void ModalityXRecognitionResult.postItn.modify()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v3 = OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_34(v3);
  v4 = OUTLINED_FUNCTION_72();
  v5 = OUTLINED_FUNCTION_27(v4);
  *(_QWORD *)(v2 + 8) = v5;
  v6 = type metadata accessor for ModalityXRecognitionSausage(0);
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)(v2 + 24) = OUTLINED_FUNCTION_128(v6);
  v7 = OUTLINED_FUNCTION_158();
  v8 = *(int *)(OUTLINED_FUNCTION_279_0((uint64_t)v7) + 40);
  *(_DWORD *)(v2 + 40) = v8;
  OUTLINED_FUNCTION_56_0(v0 + v8);
  v9 = OUTLINED_FUNCTION_14_0((uint64_t)v5);
  if (v11)
  {
    *v1 = MEMORY[0x24BEE4AF8];
    v12 = OUTLINED_FUNCTION_177_0();
    OUTLINED_FUNCTION_204(v12, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v9, v10, type metadata accessor for ModalityXRecognitionSausage);
  }
  OUTLINED_FUNCTION_12();
}

void ModalityXRecognitionResult.hasPostItn.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_418();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_182_0(*(int *)(v1 + 40));
  v2 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_69_0(v2);
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ModalityXRecognitionResult.clearPostItn()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_204(v0, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  type metadata accessor for ModalityXRecognitionSausage(0);
  v1 = OUTLINED_FUNCTION_139_0();
  OUTLINED_FUNCTION_317(v1, v2, v3, v4);
}

uint64_t (*ModalityXRecognitionResult.preItnNbestChoices.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t (*ModalityXRecognitionResult.postItnNbestChoices.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionResult.preItnTokenToPostItnCharAlignment.getter()
{
  return swift_bridgeObjectRetain();
}

void ModalityXRecognitionResult.preItnTokenToPostItnCharAlignment.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXRecognitionResult.preItnTokenToPostItnCharAlignment.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionResult.choiceAlignments.getter()
{
  return swift_bridgeObjectRetain();
}

void ModalityXRecognitionResult.choiceAlignments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXRecognitionResult.choiceAlignments.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionResult.unknownFields.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_97_0();
  return OUTLINED_FUNCTION_146(v0, v1, v2, v3);
}

uint64_t ModalityXRecognitionResult.unknownFields.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_225_0();
  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_146(v0, v1, v2, v3);
}

uint64_t (*ModalityXRecognitionResult.unknownFields.modify())()
{
  type metadata accessor for ModalityXRecognitionResult(0);
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXRecognitionResult.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v2;
  a1[2] = v2;
  a1[3] = v2;
  v3 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_253();
  v4 = (uint64_t)a1 + *(int *)(v3 + 36);
  v5 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_180_0(v4);
  return OUTLINED_FUNCTION_28((uint64_t)a1 + *(int *)(v3 + 40), 1, 1, v5);
}

uint64_t ModalityXLatnnMitigatorResult.processed.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXLatnnMitigatorResult(0) + 20)) & 1;
}

void ModalityXLatnnMitigatorResult.processed.setter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_297_0();
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for ModalityXLatnnMitigatorResult(v2) + 20)) = v0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXLatnnMitigatorResult.processed.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_227(a1);
  v2 = type metadata accessor for ModalityXLatnnMitigatorResult(v1);
  OUTLINED_FUNCTION_197(*(int *)(v2 + 20));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXLatnnMitigatorResult.hasProcessed.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  return OUTLINED_FUNCTION_268(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXLatnnMitigatorResult.clearProcessed()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXLatnnMitigatorResult(0) + 20)) = 2;
}

void ModalityXLatnnMitigatorResult.version.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 24)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXLatnnMitigatorResult.version : ModalityXLatnnMitigatorResult(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXLatnnMitigatorResult.version.setter(v1, v2);
}

void ModalityXLatnnMitigatorResult.version.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_250();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXLatnnMitigatorResult.version.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXLatnnMitigatorResult(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 24)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXLatnnMitigatorResult.hasVersion.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXLatnnMitigatorResult.clearVersion()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

double ModalityXLatnnMitigatorResult.threshold.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 28));
  if (!v3)
    return v2;
  return result;
}

void ModalityXLatnnMitigatorResult.threshold.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_309_0();
  OUTLINED_FUNCTION_168_0();
  *(_QWORD *)v1 = v0;
  *(_BYTE *)(v1 + 8) = 0;
  OUTLINED_FUNCTION_306_0();
}

void ModalityXLatnnMitigatorResult.threshold.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_260_0(a1) + 28);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXLatnnMitigatorResult.hasThreshold.getter()
{
  uint64_t v0;

  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_168_0();
  return OUTLINED_FUNCTION_149_0(*(_BYTE *)(v0 + 8));
}

Swift::Void __swiftcall ModalityXLatnnMitigatorResult.clearThreshold()()
{
  uint64_t v0;

  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_168_0();
  OUTLINED_FUNCTION_265_0(v0);
}

double ModalityXLatnnMitigatorResult.score.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 32));
  if (!v3)
    return v2;
  return result;
}

void ModalityXLatnnMitigatorResult.score.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_309_0();
  OUTLINED_FUNCTION_167_0();
  *(_QWORD *)v1 = v0;
  *(_BYTE *)(v1 + 8) = 0;
  OUTLINED_FUNCTION_306_0();
}

void ModalityXLatnnMitigatorResult.score.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_260_0(a1) + 32);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

uint64_t ModalityXLatnnMitigatorResult.threshold.modify(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 8) + *(int *)(result + 16);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

BOOL ModalityXLatnnMitigatorResult.hasScore.getter()
{
  uint64_t v0;

  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_167_0();
  return OUTLINED_FUNCTION_149_0(*(_BYTE *)(v0 + 8));
}

Swift::Void __swiftcall ModalityXLatnnMitigatorResult.clearScore()()
{
  uint64_t v0;

  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_167_0();
  OUTLINED_FUNCTION_265_0(v0);
}

uint64_t (*ModalityXLatnnMitigatorResult.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXLatnnMitigatorResult.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_261();
  v1 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_292_0(*(int *)(v1 + 20));
  OUTLINED_FUNCTION_83(*(int *)(v2 + 24));
  OUTLINED_FUNCTION_265_0(v0 + *(int *)(v3 + 28));
  v5 = v0 + *(int *)(v4 + 32);
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = v6;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXRecognitionCandidate.speechID.getter()
{
  ModalityXRecognitionCandidate.speechID.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

void key path setter for ModalityXRecognitionCandidate.speechID : ModalityXRecognitionCandidate()
{
  swift_bridgeObjectRetain();
  ModalityXRecognitionCandidate.speechID.setter();
}

void ModalityXRecognitionCandidate.speechID.setter()
{
  ModalityXRecognitionCandidate.speechID.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;

  OUTLINED_FUNCTION_207_0();
  OUTLINED_FUNCTION_84_0(v4, v5, v6);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    OUTLINED_FUNCTION_295();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v2 + v3) = OUTLINED_FUNCTION_390();
    OUTLINED_FUNCTION_41();
  }
  v7 = *(_QWORD *)(v2 + v3);
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v7 + 16) = v1;
  *(_QWORD *)(v7 + 24) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_162();
}

void ModalityXRecognitionCandidate.speechID.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_80_0((uint64_t)v2);
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.speechID.modify();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_107_0();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_197_0();
    if ((OUTLINED_FUNCTION_183_0() & 1) == 0)
    {
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_10();
      v7 = OUTLINED_FUNCTION_73_0();
      *(_QWORD *)(v5 + v4) = v2(v7);
      OUTLINED_FUNCTION_41();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(v8 + 16) = v3;
    *(_QWORD *)(v8 + 24) = v1;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((OUTLINED_FUNCTION_183_0() & 1) == 0)
    {
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_10();
      v9 = OUTLINED_FUNCTION_73_0();
      *(_QWORD *)(v5 + v4) = v2(v9);
      OUTLINED_FUNCTION_41();
    }
    v10 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(v10 + 16) = v3;
    *(_QWORD *)(v10 + 24) = v1;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_68((void *)v0);
}

void ModalityXRecognitionCandidate.hasSpeechID.getter()
{
  ModalityXRecognitionCandidate.hasSpeechID.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearSpeechID()()
{
  ModalityXRecognitionCandidate.clearSpeechID()();
}

void ModalityXRecognitionCandidate.sessionID.getter()
{
  ModalityXRecognitionCandidate.sessionID.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

void key path setter for ModalityXRecognitionCandidate.sessionID : ModalityXRecognitionCandidate()
{
  swift_bridgeObjectRetain();
  ModalityXRecognitionCandidate.sessionID.setter();
}

void ModalityXRecognitionCandidate.sessionID.setter()
{
  ModalityXRecognitionCandidate.sessionID.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;

  OUTLINED_FUNCTION_207_0();
  OUTLINED_FUNCTION_84_0(v4, v5, v6);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    OUTLINED_FUNCTION_295();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v2 + v3) = OUTLINED_FUNCTION_390();
    OUTLINED_FUNCTION_41();
  }
  v7 = *(_QWORD *)(v2 + v3);
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v7 + 32) = v1;
  *(_QWORD *)(v7 + 40) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_162();
}

void ModalityXRecognitionCandidate.sessionID.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_80_0((uint64_t)v2);
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.sessionID.modify();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_107_0();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_197_0();
    if ((OUTLINED_FUNCTION_183_0() & 1) == 0)
    {
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_10();
      v7 = OUTLINED_FUNCTION_73_0();
      *(_QWORD *)(v5 + v4) = v2(v7);
      OUTLINED_FUNCTION_41();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(v8 + 32) = v3;
    *(_QWORD *)(v8 + 40) = v1;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((OUTLINED_FUNCTION_183_0() & 1) == 0)
    {
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_10();
      v9 = OUTLINED_FUNCTION_73_0();
      *(_QWORD *)(v5 + v4) = v2(v9);
      OUTLINED_FUNCTION_41();
    }
    v10 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(v10 + 32) = v3;
    *(_QWORD *)(v10 + 40) = v1;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_68((void *)v0);
}

void ModalityXRecognitionCandidate.hasSessionID.getter()
{
  ModalityXRecognitionCandidate.hasSessionID.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearSessionID()()
{
  ModalityXRecognitionCandidate.clearSessionID()();
}

void ModalityXRecognitionCandidate.returnCode.getter()
{
  ModalityXRecognitionCandidate.returnCode.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

void ModalityXRecognitionCandidate.returnCode.setter()
{
  ModalityXRecognitionCandidate.returnCode.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  OUTLINED_FUNCTION_200_0();
  v3 = v2;
  OUTLINED_FUNCTION_211(v2, v4);
  if ((OUTLINED_FUNCTION_233() & 1) == 0)
  {
    OUTLINED_FUNCTION_144_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_240_0();
    OUTLINED_FUNCTION_41();
  }
  v5 = *(_QWORD *)(v0 + v1);
  OUTLINED_FUNCTION_7_0();
  *(_DWORD *)(v5 + 48) = v3;
  *(_BYTE *)(v5 + 52) = 0;
  OUTLINED_FUNCTION_112();
}

void ModalityXRecognitionCandidate.returnCode.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_73();
  *v0 = v2;
  v2[9] = v1;
  *((_DWORD *)v2 + 21) = *(_DWORD *)(type metadata accessor for ModalityXRecognitionCandidate(0) + 20);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.returnCode.modify();
}

{
  uint64_t (*v0)(uint64_t);
  uint64_t (*v1)(uint64_t);
  char v2;
  char v3;
  uint64_t *v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_163();
  v1 = v0;
  v3 = v2;
  v5 = *v4;
  v6 = *(_DWORD *)(*v4 + 80);
  v7 = OUTLINED_FUNCTION_271_0();
  if ((v3 & 1) == 0)
  {
    if ((v7 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((v7 & 1) == 0)
  {
LABEL_3:
    v8 = *(int *)(v5 + 84);
    v9 = *(_QWORD *)(v5 + 72);
    OUTLINED_FUNCTION_285();
    OUTLINED_FUNCTION_10();
    v10 = swift_retain();
    *(_QWORD *)(v9 + v8) = v1(v10);
    OUTLINED_FUNCTION_41();
  }
LABEL_4:
  v11 = *(_QWORD *)(*(_QWORD *)(v5 + 72) + *(int *)(v5 + 84));
  OUTLINED_FUNCTION_7_0();
  *(_DWORD *)(v11 + 48) = v6;
  *(_BYTE *)(v11 + 52) = 0;
  OUTLINED_FUNCTION_42((void *)v5);
}

void ModalityXRecognitionCandidate.hasReturnCode.getter()
{
  ModalityXRecognitionCandidate.hasReturnCode.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearReturnCode()()
{
  ModalityXRecognitionCandidate.clearReturnCode()();
}

void ModalityXRecognitionCandidate.returnStr.getter()
{
  ModalityXRecognitionCandidate.returnStr.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

void key path setter for ModalityXRecognitionCandidate.returnStr : ModalityXRecognitionCandidate()
{
  swift_bridgeObjectRetain();
  ModalityXRecognitionCandidate.returnStr.setter();
}

void ModalityXRecognitionCandidate.returnStr.setter()
{
  ModalityXRecognitionCandidate.returnStr.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;

  OUTLINED_FUNCTION_207_0();
  OUTLINED_FUNCTION_84_0(v4, v5, v6);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    OUTLINED_FUNCTION_295();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v2 + v3) = OUTLINED_FUNCTION_390();
    OUTLINED_FUNCTION_41();
  }
  v7 = *(_QWORD *)(v2 + v3);
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v7 + 56) = v1;
  *(_QWORD *)(v7 + 64) = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_162();
}

void ModalityXRecognitionCandidate.returnStr.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_80_0((uint64_t)v2);
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v0 + 64))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.returnStr.modify();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_107_0();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_197_0();
    if ((OUTLINED_FUNCTION_183_0() & 1) == 0)
    {
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_10();
      v7 = OUTLINED_FUNCTION_73_0();
      *(_QWORD *)(v5 + v4) = v2(v7);
      OUTLINED_FUNCTION_41();
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(v8 + 56) = v3;
    *(_QWORD *)(v8 + 64) = v1;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((OUTLINED_FUNCTION_183_0() & 1) == 0)
    {
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_10();
      v9 = OUTLINED_FUNCTION_73_0();
      *(_QWORD *)(v5 + v4) = v2(v9);
      OUTLINED_FUNCTION_41();
    }
    v10 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + *(int *)(v0 + 96));
    OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(v10 + 56) = v3;
    *(_QWORD *)(v10 + 64) = v1;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_68((void *)v0);
}

void ModalityXRecognitionCandidate.hasReturnStr.getter()
{
  ModalityXRecognitionCandidate.hasReturnStr.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearReturnStr()()
{
  ModalityXRecognitionCandidate.clearReturnStr()();
}

void ModalityXRecognitionCandidate.recognitionResult.getter()
{
  ModalityXRecognitionCandidate.recognitionResult.getter();
}

{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_274_0();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_90_0() + 20)) + *v2;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_106_0(v5, v3);
  v6 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_14_0(v3);
  if (v8)
  {
    v9 = MEMORY[0x24BEE4AF8];
    *v0 = MEMORY[0x24BEE4AF8];
    v0[1] = v9;
    v0[2] = v9;
    v0[3] = v9;
    OUTLINED_FUNCTION_253();
    v10 = (uint64_t)v0 + *(int *)(v6 + 36);
    type metadata accessor for ModalityXRecognitionSausage(0);
    OUTLINED_FUNCTION_180_0(v10);
    v11 = OUTLINED_FUNCTION_180_0((uint64_t)v0 + *(int *)(v6 + 40));
    OUTLINED_FUNCTION_272_0(v11, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  }
  else
  {
    OUTLINED_FUNCTION_38(v3, v7, type metadata accessor for ModalityXRecognitionResult);
  }
  OUTLINED_FUNCTION_12();
}

uint64_t ModalityXRecognitionCandidate.recognitionResult.setter()
{
  return ModalityXRecognitionCandidate.recognitionResult.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[112];
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_19();
  v23 = v1;
  v24 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(v5);
  OUTLINED_FUNCTION_0_0();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v22[-v13];
  v15 = *(int *)(type metadata accessor for ModalityXRecognitionCandidate(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for ModalityXRecognitionCandidate._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v16 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v15) = ModalityXRecognitionCandidate._StorageClass.init(copying:)(v16);
    OUTLINED_FUNCTION_41();
  }
  v17 = *(_QWORD *)(v0 + v15);
  OUTLINED_FUNCTION_395(v8);
  OUTLINED_FUNCTION_144_0();
  v18 = OUTLINED_FUNCTION_264_0();
  __swift_storeEnumTagSinglePayload(v18, 0, 1, v19);
  outlined init with take of ModalityXRecognitionResult?((uint64_t)v14, (uint64_t)v12, v6);
  v20 = v17 + *v4;
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_40();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v12, v20, v6);
  swift_endAccess();
  return OUTLINED_FUNCTION_341();
}

void ModalityXRecognitionCandidate.recognitionResult.modify()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OUTLINED_FUNCTION_423();
  OUTLINED_FUNCTION_127_0((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_72();
  v3 = OUTLINED_FUNCTION_27(v2);
  v0[4] = v3;
  v4 = type metadata accessor for ModalityXRecognitionResult(0);
  v0[5] = OUTLINED_FUNCTION_128(v4);
  v5 = OUTLINED_FUNCTION_158();
  v0[6] = v5;
  type metadata accessor for ModalityXRecognitionCandidate(0);
  OUTLINED_FUNCTION_126_0();
  v7 = v6
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_56_0(v7);
  v8 = OUTLINED_FUNCTION_14_0((uint64_t)v3);
  if (v10)
  {
    v11 = MEMORY[0x24BEE4AF8];
    *v5 = MEMORY[0x24BEE4AF8];
    v5[1] = v11;
    v5[2] = v11;
    v5[3] = v11;
    OUTLINED_FUNCTION_177_0();
    v12 = OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_204(v12, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v8, v9, type metadata accessor for ModalityXRecognitionResult);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

{
  uint64_t v0;
  void (*v1)(void *);
  uint64_t (*v2)(_QWORD);
  void (*v3)(void *);
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  uint64_t (*v9)(_QWORD);

  OUTLINED_FUNCTION_163();
  v3 = v1;
  v4 = *(void **)v0;
  v5 = *(void **)(*(_QWORD *)v0 + 40);
  v6 = *(void **)(*(_QWORD *)v0 + 48);
  v7 = *(void **)(*(_QWORD *)v0 + 32);
  if ((v8 & 1) != 0)
  {
    v9 = v2;
    outlined init with copy of ModalityXRecognitionSausage(*(_QWORD *)(*(_QWORD *)v0 + 48), (uint64_t)v5, v2);
    v3(v5);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v6, v9);
  }
  else
  {
    v1(*(void **)(*(_QWORD *)v0 + 48));
  }
  free(v6);
  free(v5);
  free(v7);
  OUTLINED_FUNCTION_42(v4);
}

BOOL ModalityXRecognitionCandidate.hasRecognitionResult.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXRecognitionResult?, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult, type metadata accessor for ModalityXRecognitionResult);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearRecognitionResult()()
{
  ModalityXRecognitionCandidate.clearRecognitionResult()();
}

void ModalityXRecognitionCandidate.resultID.getter()
{
  ModalityXRecognitionCandidate.resultID.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
}

void key path setter for ModalityXRecognitionCandidate.resultID : ModalityXRecognitionCandidate()
{
  swift_bridgeObjectRetain();
  ModalityXRecognitionCandidate.resultID.setter();
}

void ModalityXRecognitionCandidate.resultID.setter()
{
  ModalityXRecognitionCandidate.resultID.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  void (*v8)(_QWORD);
  void (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  _QWORD *v14;

  OUTLINED_FUNCTION_207_0();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_101(v10, v11, v12);
  if ((OUTLINED_FUNCTION_284_0() & 1) == 0)
  {
    v9(0);
    OUTLINED_FUNCTION_10();
    v13 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v1 + v3) = v7(v13);
    OUTLINED_FUNCTION_41();
  }
  v14 = (_QWORD *)(*(_QWORD *)(v1 + v3) + *v5);
  OUTLINED_FUNCTION_7_0();
  *v14 = v2;
  v14[1] = v0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_162();
}

void ModalityXRecognitionCandidate.resultID.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_79_0((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.resultID.modify();
}

{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  OUTLINED_FUNCTION_19();
  v1 = v0;
  v3 = v2;
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 72);
  v7 = *(_QWORD *)(*v4 + 80);
  if ((v8 & 1) != 0)
  {
    OUTLINED_FUNCTION_197_0();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v9 = *(int *)(v5 + 96);
      v10 = *(_QWORD *)(v5 + 88);
      OUTLINED_FUNCTION_285();
      OUTLINED_FUNCTION_10();
      v11 = OUTLINED_FUNCTION_310_0();
      *(_QWORD *)(v10 + v9) = v3(v11);
      OUTLINED_FUNCTION_41();
    }
    v12 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 88) + *(int *)(v5 + 96)) + *v1);
    OUTLINED_FUNCTION_7_0();
    *v12 = v6;
    v12[1] = v7;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      v13 = *(int *)(v5 + 96);
      v14 = *(_QWORD *)(v5 + 88);
      OUTLINED_FUNCTION_285();
      OUTLINED_FUNCTION_10();
      v15 = OUTLINED_FUNCTION_310_0();
      *(_QWORD *)(v14 + v13) = v3(v15);
      OUTLINED_FUNCTION_41();
    }
    v16 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 88) + *(int *)(v5 + 96)) + *v1);
    OUTLINED_FUNCTION_7_0();
    *v16 = v6;
    v16[1] = v7;
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_68((void *)v5);
}

void ModalityXRecognitionCandidate.hasResultID.getter()
{
  ModalityXRecognitionCandidate.hasResultID.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearResultID()()
{
  ModalityXRecognitionCandidate.clearResultID()();
}

double ModalityXRecognitionCandidate.snr.getter()
{
  return ModalityXRecognitionCandidate.snr.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

uint64_t ModalityXRecognitionCandidate.snr.setter(double a1)
{
  return ModalityXRecognitionCandidate.snr.setter(type metadata accessor for ModalityXRecognitionCandidate, a1, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate._StorageClass, (uint64_t)ModalityXRecognitionCandidate._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr);
}

void ModalityXRecognitionCandidate.snr.modify()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  char v4;

  v1 = OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_211_0((uint64_t)v1);
  OUTLINED_FUNCTION_5_0();
  v2 = OUTLINED_FUNCTION_130_0();
  if (!v4)
    v2 = v3;
  *(double *)(v0 + 72) = v2;
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.snr.modify();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_236_0();
  v5 = *(_QWORD *)(v4 + 72);
  v6 = OUTLINED_FUNCTION_271_0();
  if ((v3 & 1) == 0)
  {
    if ((v6 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((v6 & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 80);
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_10();
    v9 = OUTLINED_FUNCTION_73_0();
    *(_QWORD *)(v8 + v7) = v2(v9);
    OUTLINED_FUNCTION_41();
  }
LABEL_4:
  v10 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + *(int *)(v0 + 88)) + *v1;
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)v10 = v5;
  *(_BYTE *)(v10 + 8) = 0;
  OUTLINED_FUNCTION_68((void *)v0);
}

void ModalityXRecognitionCandidate.hasSnr.getter()
{
  ModalityXRecognitionCandidate.hasSnr.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearSnr()()
{
  ModalityXRecognitionCandidate.clearSnr()();
}

void ModalityXRecognitionCandidate.fingerprintDetection.getter(_BYTE *a1@<X8>)
{
  ModalityXRecognitionCandidate.fingerprintDetection.getter(&OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection, a1);
}

void key path setter for ModalityXRecognitionCandidate.fingerprintDetection : ModalityXRecognitionCandidate()
{
  ModalityXRecognitionCandidate.fingerprintDetection.setter();
}

void ModalityXRecognitionCandidate.fingerprintDetection.setter()
{
  ModalityXRecognitionCandidate.fingerprintDetection.setter();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  char *v4;
  char v5;
  uint64_t (*v6)(_QWORD);
  _BYTE *v7;

  OUTLINED_FUNCTION_207_0();
  v3 = v2;
  v5 = *v4;
  OUTLINED_FUNCTION_211((uint64_t)v4, v6);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    OUTLINED_FUNCTION_144_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_240_0();
    OUTLINED_FUNCTION_41();
  }
  v7 = (_BYTE *)(*(_QWORD *)(v0 + v1) + *v3);
  OUTLINED_FUNCTION_7_0();
  *v7 = v5;
  OUTLINED_FUNCTION_162();
}

void ModalityXRecognitionCandidate.fingerprintDetection.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_212_0((uint64_t)v0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_186_0();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.fingerprintDetection.modify();
}

{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_236_0();
  v5 = *(_BYTE *)(v4 + 84);
  v6 = OUTLINED_FUNCTION_271_0();
  if ((v3 & 1) == 0)
  {
    if ((v6 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((v6 & 1) == 0)
  {
LABEL_3:
    v7 = *(int *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 72);
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_10();
    v9 = OUTLINED_FUNCTION_73_0();
    *(_QWORD *)(v8 + v7) = v2(v9);
    OUTLINED_FUNCTION_41();
  }
LABEL_4:
  v10 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 72) + *(int *)(v0 + 80)) + *v1);
  OUTLINED_FUNCTION_7_0();
  *v10 = v5;
  OUTLINED_FUNCTION_68((void *)v0);
}

void ModalityXRecognitionCandidate.hasFingerprintDetection.getter()
{
  ModalityXRecognitionCandidate.hasFingerprintDetection.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearFingerprintDetection()()
{
  ModalityXRecognitionCandidate.clearFingerprintDetection()();
}

void ModalityXRecognitionCandidate.audioAnalytics.getter()
{
  ModalityXRecognitionCandidate.audioAnalytics.getter();
}

{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_274_0();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_90_0() + 20)) + *v2;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_106_0(v5, v3);
  type metadata accessor for ModalityXAudioAnalytics(0);
  OUTLINED_FUNCTION_14_0(v3);
  if (v7)
  {
    v8 = MEMORY[0x24BEE4AF8];
    *v0 = MEMORY[0x24BEE4AF8];
    v0[1] = v8;
    v9 = OUTLINED_FUNCTION_253();
    OUTLINED_FUNCTION_272_0(v9, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  }
  else
  {
    OUTLINED_FUNCTION_38(v3, v6, type metadata accessor for ModalityXAudioAnalytics);
  }
  OUTLINED_FUNCTION_12();
}

uint64_t ModalityXRecognitionCandidate.audioAnalytics.setter()
{
  return ModalityXRecognitionCandidate.recognitionResult.setter();
}

void ModalityXAudioAnalytics.init()(_QWORD *a1@<X8>)
{
  ModalityXChoiceAlignment.init()(a1);
}

void ModalityXRecognitionCandidate.audioAnalytics.modify()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OUTLINED_FUNCTION_423();
  OUTLINED_FUNCTION_127_0((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_72();
  v3 = OUTLINED_FUNCTION_27(v2);
  v0[4] = v3;
  v4 = type metadata accessor for ModalityXAudioAnalytics(0);
  v0[5] = OUTLINED_FUNCTION_128(v4);
  v5 = OUTLINED_FUNCTION_158();
  v0[6] = v5;
  type metadata accessor for ModalityXRecognitionCandidate(0);
  OUTLINED_FUNCTION_126_0();
  v7 = v6
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_56_0(v7);
  v8 = OUTLINED_FUNCTION_14_0((uint64_t)v3);
  if (v10)
  {
    v11 = MEMORY[0x24BEE4AF8];
    *v5 = MEMORY[0x24BEE4AF8];
    v5[1] = v11;
    v12 = OUTLINED_FUNCTION_177_0();
    OUTLINED_FUNCTION_204(v12, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v8, v9, type metadata accessor for ModalityXAudioAnalytics);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXRecognitionCandidate.hasAudioAnalytics.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXAudioAnalytics?, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics, type metadata accessor for ModalityXAudioAnalytics);
}

BOOL ModalityXRecognitionCandidate.hasRecognitionResult.getter(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;

  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_144_0();
  OUTLINED_FUNCTION_126_0();
  v10 = v9 + *a3;
  OUTLINED_FUNCTION_5_0();
  outlined init with copy of ModalityXRecognitionSausage?(v10, v4, a1);
  v11 = a4(0);
  v12 = __swift_getEnumTagSinglePayload(v4, 1, v11) != 1;
  OUTLINED_FUNCTION_171(v4);
  return v12;
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearAudioAnalytics()()
{
  ModalityXRecognitionCandidate.clearRecognitionResult()();
}

void ModalityXRecognitionCandidate.clearRecognitionResult()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_163();
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(v5);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_185();
  type metadata accessor for ModalityXRecognitionCandidate(v8);
  if ((OUTLINED_FUNCTION_284_0() & 1) == 0)
  {
    type metadata accessor for ModalityXRecognitionCandidate._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v9 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v2) = ModalityXRecognitionCandidate._StorageClass.init(copying:)(v9);
    OUTLINED_FUNCTION_41();
  }
  v10 = *(_QWORD *)(v0 + v2);
  v11 = OUTLINED_FUNCTION_144_0();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v11);
  v12 = v10 + *v4;
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_40();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v1, v12, v6);
  OUTLINED_FUNCTION_283_0();
  OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_90();
}

void ModalityXRecognitionCandidate.watermarkDetection.getter(_BYTE *a1@<X8>)
{
  ModalityXRecognitionCandidate.fingerprintDetection.getter(&OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection, a1);
}

void ModalityXRecognitionCandidate.fingerprintDetection.getter(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unsigned __int8 *v4;
  int v5;

  v4 = (unsigned __int8 *)(*(_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_206_0() + 20)) + *a1);
  OUTLINED_FUNCTION_5_0();
  v5 = *v4;
  if (v5 == 4)
    LOBYTE(v5) = 0;
  *a2 = v5;
  OUTLINED_FUNCTION_32();
}

void key path setter for ModalityXRecognitionCandidate.watermarkDetection : ModalityXRecognitionCandidate()
{
  ModalityXRecognitionCandidate.watermarkDetection.setter();
}

void ModalityXRecognitionCandidate.watermarkDetection.setter()
{
  ModalityXRecognitionCandidate.fingerprintDetection.setter();
}

void ModalityXRecognitionCandidate.watermarkDetection.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_212_0((uint64_t)v0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_186_0();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.fingerprintDetection.modify();
}

void ModalityXRecognitionCandidate.hasWatermarkDetection.getter()
{
  ModalityXRecognitionCandidate.hasFingerprintDetection.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

void ModalityXRecognitionCandidate.hasFingerprintDetection.getter(uint64_t (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearWatermarkDetection()()
{
  ModalityXRecognitionCandidate.clearFingerprintDetection()();
}

void ModalityXRecognitionCandidate.clearFingerprintDetection()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;

  OUTLINED_FUNCTION_200_0();
  v3 = v2;
  type metadata accessor for ModalityXRecognitionCandidate(0);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    v4 = OUTLINED_FUNCTION_311_0();
    type metadata accessor for ModalityXRecognitionCandidate._StorageClass(v4);
    OUTLINED_FUNCTION_10();
    v5 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = ModalityXRecognitionCandidate._StorageClass.init(copying:)(v5);
    OUTLINED_FUNCTION_41();
  }
  v6 = (_BYTE *)(*(_QWORD *)(v0 + v1) + *v3);
  OUTLINED_FUNCTION_7_0();
  *v6 = 4;
  OUTLINED_FUNCTION_112();
}

double ModalityXRecognitionCandidate.watermarkPeakAverage.getter()
{
  return ModalityXRecognitionCandidate.snr.getter(type metadata accessor for ModalityXRecognitionCandidate);
}

double ModalityXRecognitionCandidate.snr.getter(uint64_t (*a1)(_QWORD))
{
  double result;
  double v2;
  char v3;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_5_0();
  result = OUTLINED_FUNCTION_130_0();
  if (!v3)
    return v2;
  return result;
}

uint64_t ModalityXRecognitionCandidate.watermarkPeakAverage.setter(double a1)
{
  return ModalityXRecognitionCandidate.snr.setter(type metadata accessor for ModalityXRecognitionCandidate, a1, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate._StorageClass, (uint64_t)ModalityXRecognitionCandidate._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage);
}

uint64_t ModalityXRecognitionCandidate.snr.setter(uint64_t (*a1)(_QWORD), double a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t result;

  OUTLINED_FUNCTION_20_0(a1);
  if ((OUTLINED_FUNCTION_233() & 1) == 0)
  {
    OUTLINED_FUNCTION_144_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v5 + v6) = OUTLINED_FUNCTION_240_0();
    OUTLINED_FUNCTION_41();
  }
  v9 = *(_QWORD *)(v5 + v6) + *a5;
  result = OUTLINED_FUNCTION_7_0();
  *(double *)v9 = a2;
  *(_BYTE *)(v9 + 8) = 0;
  return result;
}

void ModalityXRecognitionCandidate.watermarkPeakAverage.modify()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  char v4;

  v1 = OUTLINED_FUNCTION_324();
  OUTLINED_FUNCTION_211_0((uint64_t)v1);
  OUTLINED_FUNCTION_5_0();
  v2 = OUTLINED_FUNCTION_130_0();
  if (!v4)
    v2 = v3;
  *(double *)(v0 + 72) = v2;
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.snr.modify();
}

void ModalityXRecognitionCandidate.hasWatermarkPeakAverage.getter()
{
  ModalityXRecognitionCandidate.hasSnr.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage);
}

void ModalityXRecognitionCandidate.hasSnr.getter(uint64_t (*a1)(_QWORD), _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_25(a1) + 20)) + *a2;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_149_0(*(_BYTE *)(v3 + 8));
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearWatermarkPeakAverage()()
{
  ModalityXRecognitionCandidate.clearSnr()();
}

void ModalityXRecognitionCandidate.clearSnr()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  OUTLINED_FUNCTION_200_0();
  v3 = v2;
  OUTLINED_FUNCTION_20_0(v4);
  if ((OUTLINED_FUNCTION_233() & 1) == 0)
  {
    OUTLINED_FUNCTION_144_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_240_0();
    OUTLINED_FUNCTION_41();
  }
  v5 = *(_QWORD *)(v0 + v1) + *v3;
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  OUTLINED_FUNCTION_112();
}

void ModalityXRecognitionCandidate.language.getter()
{
  ModalityXRecognitionCandidate.resultID.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
}

void ModalityXRecognitionCandidate.resultID.getter(uint64_t (*a1)(_QWORD), _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_25(a1) + 20)) + *a2;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_304_0();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXRecognitionCandidate.language : ModalityXRecognitionCandidate()
{
  swift_bridgeObjectRetain();
  ModalityXRecognitionCandidate.language.setter();
}

void ModalityXRecognitionCandidate.language.setter()
{
  ModalityXRecognitionCandidate.resultID.setter();
}

void ModalityXRecognitionCandidate.language.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_79_0((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.resultID.modify();
}

void ModalityXRecognitionCandidate.hasLanguage.getter()
{
  ModalityXRecognitionCandidate.hasResultID.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
}

void ModalityXRecognitionCandidate.hasResultID.getter(uint64_t (*a1)(_QWORD), _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_25(a1) + 20)) + *a2;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_161_0(*(_QWORD *)(v3 + 8));
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearLanguage()()
{
  ModalityXRecognitionCandidate.clearResultID()();
}

void ModalityXRecognitionCandidate.clearResultID()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t (*v4)(_QWORD);
  _QWORD *v5;

  OUTLINED_FUNCTION_200_0();
  v3 = v2;
  OUTLINED_FUNCTION_20_0(v4);
  if ((OUTLINED_FUNCTION_233() & 1) == 0)
  {
    OUTLINED_FUNCTION_144_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_240_0();
    OUTLINED_FUNCTION_41();
  }
  v5 = (_QWORD *)(*(_QWORD *)(v0 + v1) + *v3);
  OUTLINED_FUNCTION_7_0();
  *v5 = 0;
  v5[1] = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_112();
}

void ModalityXRecognitionCandidate.latnnMitigatorResult.getter()
{
  ModalityXRecognitionCandidate.latnnMitigatorResult.getter();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_274_0();
  OUTLINED_FUNCTION_72();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_90_0() + 20)) + *v2;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_106_0(v5, v3);
  v6 = (int *)type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_14_0(v3);
  if (v8)
  {
    UnknownStorage.init()();
    OUTLINED_FUNCTION_292_0(v6[5]);
    OUTLINED_FUNCTION_83(v6[6]);
    v9 = v0 + v6[7];
    *(_QWORD *)v9 = 0;
    *(_BYTE *)(v9 + 8) = 1;
    v10 = v0 + v6[8];
    *(_QWORD *)v10 = 0;
    *(_BYTE *)(v10 + 8) = 1;
    OUTLINED_FUNCTION_272_0(v11, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  }
  else
  {
    OUTLINED_FUNCTION_38(v3, v7, type metadata accessor for ModalityXLatnnMitigatorResult);
  }
  OUTLINED_FUNCTION_12();
}

uint64_t ModalityXRecognitionCandidate.latnnMitigatorResult.setter()
{
  return ModalityXRecognitionCandidate.recognitionResult.setter();
}

void ModalityXRecognitionCandidate.latnnMitigatorResult.modify()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v1 = OUTLINED_FUNCTION_423();
  OUTLINED_FUNCTION_127_0((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_72();
  v3 = OUTLINED_FUNCTION_27(v2);
  v0[4] = v3;
  v4 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  v0[5] = OUTLINED_FUNCTION_128(v4);
  v0[6] = OUTLINED_FUNCTION_158();
  type metadata accessor for ModalityXRecognitionCandidate(0);
  OUTLINED_FUNCTION_126_0();
  v6 = v5
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_56_0(v6);
  v7 = OUTLINED_FUNCTION_14_0((uint64_t)v3);
  if (v9)
  {
    UnknownStorage.init()();
    OUTLINED_FUNCTION_96_0();
    OUTLINED_FUNCTION_204(v10, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v7, v8, type metadata accessor for ModalityXLatnnMitigatorResult);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXRecognitionCandidate.hasLatnnMitigatorResult.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearLatnnMitigatorResult()()
{
  ModalityXRecognitionCandidate.clearRecognitionResult()();
}

void ModalityXRecognitionCandidate.requestLocale.getter()
{
  ModalityXRecognitionCandidate.resultID.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
}

void key path setter for ModalityXRecognitionCandidate.requestLocale : ModalityXRecognitionCandidate()
{
  swift_bridgeObjectRetain();
  ModalityXRecognitionCandidate.requestLocale.setter();
}

void ModalityXRecognitionCandidate.requestLocale.setter()
{
  ModalityXRecognitionCandidate.resultID.setter();
}

void ModalityXRecognitionCandidate.requestLocale.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_79_0((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.resultID.modify();
}

void ModalityXRecognitionCandidate.hasRequestLocale.getter()
{
  ModalityXRecognitionCandidate.hasResultID.getter(type metadata accessor for ModalityXRecognitionCandidate, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
}

Swift::Void __swiftcall ModalityXRecognitionCandidate.clearRequestLocale()()
{
  ModalityXRecognitionCandidate.clearResultID()();
}

uint64_t (*ModalityXRecognitionCandidate.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXItnAlignment.firstPreItnTokenIndex.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXItnAlignment(0);
  return OUTLINED_FUNCTION_64_0(*(int *)(v0 + 20));
}

void ModalityXItnAlignment.firstPreItnTokenIndex.setter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_297_0();
  v1 = type metadata accessor for ModalityXItnAlignment(v0);
  OUTLINED_FUNCTION_154_0(*(int *)(v1 + 20));
  OUTLINED_FUNCTION_1_0();
}

void ModalityXItnAlignment.firstPreItnTokenIndex.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_121_0(a1);
  OUTLINED_FUNCTION_13_0(*(int *)(v1 + 20));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXItnAlignment.hasFirstPreItnTokenIndex.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXItnAlignment(0);
  return OUTLINED_FUNCTION_100_0(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXItnAlignment.clearFirstPreItnTokenIndex()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ModalityXItnAlignment(0);
  OUTLINED_FUNCTION_62_0(v0 + *(int *)(v1 + 20));
}

uint64_t ModalityXItnAlignment.lastPreItnTokenIndex.getter()
{
  return ModalityXRecognitionToken.startMilliSeconds.getter(type metadata accessor for ModalityXItnAlignment);
}

void ModalityXItnAlignment.lastPreItnTokenIndex.setter(uint64_t a1)
{
  ModalityXRecognitionToken.startMilliSeconds.setter(a1, type metadata accessor for ModalityXItnAlignment);
}

void ModalityXItnAlignment.lastPreItnTokenIndex.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_121_0(a1);
  OUTLINED_FUNCTION_13_0(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXItnAlignment.hasLastPreItnTokenIndex.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXItnAlignment);
}

Swift::Void __swiftcall ModalityXItnAlignment.clearLastPreItnTokenIndex()()
{
  ModalityXRecognitionToken.clearStartMilliSeconds()(type metadata accessor for ModalityXItnAlignment);
}

uint64_t ModalityXItnAlignment.firstPostItnCharPos.getter()
{
  return ModalityXRecognitionToken.endMilliSeconds.getter(type metadata accessor for ModalityXItnAlignment);
}

uint64_t ModalityXRecognitionToken.endMilliSeconds.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_64_0(*(int *)(v1 + 28));
}

void ModalityXItnAlignment.firstPostItnCharPos.setter(uint64_t a1)
{
  ModalityXRecognitionToken.endMilliSeconds.setter(a1, type metadata accessor for ModalityXItnAlignment);
}

void ModalityXRecognitionToken.endMilliSeconds.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_211(a1, a2);
  OUTLINED_FUNCTION_154_0(*(int *)(v2 + 28));
  OUTLINED_FUNCTION_1_0();
}

void ModalityXItnAlignment.firstPostItnCharPos.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_121_0(a1);
  OUTLINED_FUNCTION_13_0(*(int *)(v1 + 28));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXItnAlignment.hasFirstPostItnCharPos.getter()
{
  return ModalityXRecognitionToken.hasEndMilliSeconds.getter(type metadata accessor for ModalityXItnAlignment);
}

BOOL ModalityXRecognitionToken.hasEndMilliSeconds.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_100_0(*(int *)(v1 + 28));
}

Swift::Void __swiftcall ModalityXItnAlignment.clearFirstPostItnCharPos()()
{
  ModalityXRecognitionToken.clearEndMilliSeconds()(type metadata accessor for ModalityXItnAlignment);
}

void ModalityXRecognitionToken.clearEndMilliSeconds()(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_168_0();
  OUTLINED_FUNCTION_62_0(v1);
}

uint64_t ModalityXItnAlignment.lastPostItnCharPos.getter()
{
  return ModalityXRecognitionToken.silenceStartMilliSeconds.getter(type metadata accessor for ModalityXItnAlignment);
}

uint64_t ModalityXRecognitionToken.silenceStartMilliSeconds.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_64_0(*(int *)(v1 + 32));
}

void ModalityXItnAlignment.lastPostItnCharPos.setter(uint64_t a1)
{
  ModalityXRecognitionToken.silenceStartMilliSeconds.setter(a1, type metadata accessor for ModalityXItnAlignment);
}

void ModalityXRecognitionToken.silenceStartMilliSeconds.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_211(a1, a2);
  OUTLINED_FUNCTION_154_0(*(int *)(v2 + 32));
  OUTLINED_FUNCTION_1_0();
}

void ModalityXItnAlignment.lastPostItnCharPos.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_121_0(a1);
  OUTLINED_FUNCTION_13_0(*(int *)(v1 + 32));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXItnAlignment.hasLastPostItnCharPos.getter()
{
  return ModalityXRecognitionToken.hasSilenceStartMilliSeconds.getter(type metadata accessor for ModalityXItnAlignment);
}

BOOL ModalityXRecognitionToken.hasSilenceStartMilliSeconds.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_25(a1);
  return OUTLINED_FUNCTION_100_0(*(int *)(v1 + 32));
}

Swift::Void __swiftcall ModalityXItnAlignment.clearLastPostItnCharPos()()
{
  ModalityXRecognitionToken.clearSilenceStartMilliSeconds()(type metadata accessor for ModalityXItnAlignment);
}

void ModalityXRecognitionToken.clearSilenceStartMilliSeconds()(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_167_0();
  OUTLINED_FUNCTION_62_0(v1);
}

uint64_t (*ModalityXItnAlignment.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXItnAlignment.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_261();
  v1 = type metadata accessor for ModalityXItnAlignment(0);
  OUTLINED_FUNCTION_62_0(v0 + *(int *)(v1 + 20));
  v3 = v0 + *(int *)(v2 + 24);
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = v4;
  OUTLINED_FUNCTION_169_0(v2);
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXAcousticFeature.acousticFeaturePerFrame.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

float ModalityXAcousticFeature.frameDuration.getter()
{
  return ModalityXAcousticFeature.frameDuration.getter(type metadata accessor for ModalityXAcousticFeature);
}

void ModalityXAcousticFeature.frameDuration.setter(float a1)
{
  ModalityXAcousticFeature.frameDuration.setter(type metadata accessor for ModalityXAcousticFeature, a1);
}

void ModalityXAcousticFeature.frameDuration.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  float v5;
  float v6;
  char v7;

  v2 = OUTLINED_FUNCTION_227(a1);
  v3 = type metadata accessor for ModalityXAcousticFeature(v2);
  v5 = OUTLINED_FUNCTION_218_0(v3);
  if (!v7)
    v5 = v6;
  *(float *)(v1 + 8) = v5;
  *(_DWORD *)(v1 + 12) = v4;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXAcousticFeature.hasFrameDuration.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXAcousticFeature);
}

Swift::Void __swiftcall ModalityXAcousticFeature.clearFrameDuration()()
{
  ModalityXRecognitionToken.clearStartMilliSeconds()(type metadata accessor for ModalityXAcousticFeature);
}

uint64_t ModalityXAcousticFeature.unknownFields.getter()
{
  return ModalityXRecognitionPhraseTokens.unknownFields.getter();
}

uint64_t ModalityXAcousticFeature.unknownFields.setter(uint64_t a1)
{
  return ModalityXServerBoundFrame.unknownFields.setter(a1, type metadata accessor for ModalityXAcousticFeature);
}

uint64_t (*ModalityXAcousticFeature.unknownFields.modify())()
{
  OUTLINED_FUNCTION_242();
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXAcousticFeature.init()(_QWORD *a1@<X8>)
{
  ModalityXRecognitionChoice.init()(a1);
}

void ModalityXSpeechRecognitionFeature.key.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXSpeechRecognitionFeature);
}

void key path setter for ModalityXSpeechRecognitionFeature.key : ModalityXSpeechRecognitionFeature(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXSpeechRecognitionFeature.key.setter(v1, v2);
}

void ModalityXSpeechRecognitionFeature.key.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXSpeechRecognitionFeature);
}

void ModalityXSpeechRecognitionFeature.key.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXSpeechRecognitionFeature(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechRecognitionFeature.hasKey.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXSpeechRecognitionFeature);
}

Swift::Void __swiftcall ModalityXSpeechRecognitionFeature.clearKey()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXSpeechRecognitionFeature);
}

float ModalityXSpeechRecognitionFeature.value.getter()
{
  return ModalityXAcousticFeature.frameDuration.getter(type metadata accessor for ModalityXSpeechRecognitionFeature);
}

float ModalityXAcousticFeature.frameDuration.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  float result;

  v2 = v1 + *(int *)(OUTLINED_FUNCTION_25(a1) + 24);
  result = *(float *)v2;
  if (*(_BYTE *)(v2 + 4))
    return 0.0;
  return result;
}

void ModalityXSpeechRecognitionFeature.value.setter(float a1)
{
  ModalityXAcousticFeature.frameDuration.setter(type metadata accessor for ModalityXSpeechRecognitionFeature, a1);
}

void ModalityXAcousticFeature.frameDuration.setter(uint64_t (*a1)(_QWORD), float a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *(int *)(OUTLINED_FUNCTION_20_0(a1) + 24);
  *(float *)v4 = a2;
  *(_BYTE *)(v4 + 4) = 0;
  OUTLINED_FUNCTION_306_0();
}

void ModalityXSpeechRecognitionFeature.value.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  float v5;
  float v6;
  char v7;

  v2 = OUTLINED_FUNCTION_227(a1);
  v3 = type metadata accessor for ModalityXSpeechRecognitionFeature(v2);
  v5 = OUTLINED_FUNCTION_218_0(v3);
  if (!v7)
    v5 = v6;
  *(float *)(v1 + 8) = v5;
  *(_DWORD *)(v1 + 12) = v4;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXSpeechRecognitionFeature.hasValue.getter()
{
  return ModalityXRecognitionToken.hasStartMilliSeconds.getter(type metadata accessor for ModalityXSpeechRecognitionFeature);
}

Swift::Void __swiftcall ModalityXSpeechRecognitionFeature.clearValue()()
{
  ModalityXRecognitionToken.clearStartMilliSeconds()(type metadata accessor for ModalityXSpeechRecognitionFeature);
}

uint64_t (*ModalityXSpeechRecognitionFeature.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXSpeechRecognitionFeature.init()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_261();
  v1 = type metadata accessor for ModalityXSpeechRecognitionFeature(0);
  v2 = (_QWORD *)(v0 + *(int *)(v1 + 20));
  *v2 = 0;
  v2[1] = 0;
  OUTLINED_FUNCTION_62_0(v0 + *(int *)(v1 + 24));
  OUTLINED_FUNCTION_1_0();
}

void ModalityXAudioAnalyticsAcousticFeature.key.getter()
{
  ModalityXCancelRequest.requestID.getter(type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
}

void key path setter for ModalityXAudioAnalyticsAcousticFeature.key : ModalityXAudioAnalyticsAcousticFeature(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXAudioAnalyticsAcousticFeature.key.setter(v1, v2);
}

void ModalityXAudioAnalyticsAcousticFeature.key.setter(uint64_t a1, uint64_t a2)
{
  ModalityXCancelRequest.requestID.setter(a1, a2, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
}

void ModalityXAudioAnalyticsAcousticFeature.key.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_121(a1);
  v3 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(v2);
  if (OUTLINED_FUNCTION_48(*(int *)(v3 + 20)))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *v1 = v4;
  v1[1] = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXAudioAnalyticsAcousticFeature.hasKey.getter()
{
  return ModalityXCancelRequest.hasRequestID.getter(type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
}

Swift::Void __swiftcall ModalityXAudioAnalyticsAcousticFeature.clearKey()()
{
  ModalityXCancelRequest.clearRequestID()(type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
}

void ModalityXAudioAnalyticsAcousticFeature.value.getter(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_308_0();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  OUTLINED_FUNCTION_181_0(*(int *)(v5 + 24));
  v6 = type metadata accessor for ModalityXAcousticFeature(0);
  OUTLINED_FUNCTION_14_0((uint64_t)v4);
  if (v8)
  {
    *a1 = MEMORY[0x24BEE4AF8];
    v9 = OUTLINED_FUNCTION_253();
    v10 = (char *)a1 + *(int *)(v6 + 24);
    *(_DWORD *)v10 = 0;
    v10[4] = 1;
    OUTLINED_FUNCTION_380(v9, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  }
  else
  {
    OUTLINED_FUNCTION_38((uint64_t)v4, v7, type metadata accessor for ModalityXAcousticFeature);
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.value.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  OUTLINED_FUNCTION_109(v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  OUTLINED_FUNCTION_228_0(v1, v2, type metadata accessor for ModalityXAcousticFeature);
  type metadata accessor for ModalityXAcousticFeature(0);
  v3 = OUTLINED_FUNCTION_196_0();
  return OUTLINED_FUNCTION_317(v3, v4, v5, v6);
}

void ModalityXAudioAnalyticsAcousticFeature.value.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char *v12;

  v2 = OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_34(v2);
  v3 = OUTLINED_FUNCTION_72();
  v4 = OUTLINED_FUNCTION_27(v3);
  *(_QWORD *)(v1 + 8) = v4;
  v5 = type metadata accessor for ModalityXAcousticFeature(0);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 24) = OUTLINED_FUNCTION_128(v5);
  v6 = OUTLINED_FUNCTION_158();
  *(_QWORD *)(v1 + 32) = v6;
  v7 = *(int *)(type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0) + 24);
  *(_DWORD *)(v1 + 40) = v7;
  OUTLINED_FUNCTION_56_0(v0 + v7);
  v8 = OUTLINED_FUNCTION_14_0((uint64_t)v4);
  if (v10)
  {
    *v6 = MEMORY[0x24BEE4AF8];
    v11 = OUTLINED_FUNCTION_177_0();
    v12 = (char *)v6 + *(int *)(v5 + 24);
    *(_DWORD *)v12 = 0;
    v12[4] = 1;
    OUTLINED_FUNCTION_204(v11, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v8, v9, type metadata accessor for ModalityXAcousticFeature);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXRecognitionResult.preItn.modify();
}

void ModalityXAudioAnalyticsAcousticFeature.hasValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_418();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = OUTLINED_FUNCTION_185();
  v2 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(v1);
  OUTLINED_FUNCTION_182_0(*(int *)(v2 + 24));
  v3 = OUTLINED_FUNCTION_242();
  OUTLINED_FUNCTION_69_0(v3);
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ModalityXAudioAnalyticsAcousticFeature.clearValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  OUTLINED_FUNCTION_204(v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  type metadata accessor for ModalityXAcousticFeature(0);
  v1 = OUTLINED_FUNCTION_139_0();
  OUTLINED_FUNCTION_317(v1, v2, v3, v4);
}

uint64_t (*ModalityXAudioAnalyticsAcousticFeature.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXAudioAnalyticsAcousticFeature.init()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_261();
  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0) + 20));
  *v1 = 0;
  v1[1] = 0;
  type metadata accessor for ModalityXAcousticFeature(0);
  v2 = OUTLINED_FUNCTION_139_0();
  return OUTLINED_FUNCTION_317(v2, v3, v4, v5);
}

uint64_t ModalityXAudioAnalytics.speechRecognitionFeatures.getter()
{
  return swift_bridgeObjectRetain();
}

void ModalityXAudioAnalytics.speechRecognitionFeatures.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXAudioAnalytics.speechRecognitionFeatures.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXAudioAnalytics.acousticFeatures.getter()
{
  return swift_bridgeObjectRetain();
}

void ModalityXAudioAnalytics.acousticFeatures.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXAudioAnalytics.acousticFeatures.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXAudioAnalytics.unknownFields.getter()
{
  return ModalityXChoiceAlignment.unknownFields.getter();
}

uint64_t ModalityXAudioAnalytics.unknownFields.setter(uint64_t a1)
{
  return ModalityXChoiceAlignment.unknownFields.setter(a1, type metadata accessor for ModalityXAudioAnalytics);
}

uint64_t ModalityXChoiceAlignment.unknownFields.setter(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_211(a1, a2);
  OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_146(v2, v3, v4, v5);
}

uint64_t (*ModalityXAudioAnalytics.unknownFields.modify())()
{
  type metadata accessor for ModalityXAudioAnalytics(0);
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXFinalSpeechRecognitionResponse.speechID.getter()
{
  ModalityXRecognitionCandidate.speechID.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

void ModalityXRecognitionCandidate.speechID.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_312_0();
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v1 + 24))
    OUTLINED_FUNCTION_304_0();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.speechID : ModalityXFinalSpeechRecognitionResponse()
{
  swift_bridgeObjectRetain();
  ModalityXFinalSpeechRecognitionResponse.speechID.setter();
}

void ModalityXFinalSpeechRecognitionResponse.speechID.setter()
{
  ModalityXRecognitionCandidate.speechID.setter();
}

uint64_t ModalityXRecognitionCandidate._uniqueStorage()(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_0(a1);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    OUTLINED_FUNCTION_128_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v1 + v2) = OUTLINED_FUNCTION_232_0();
    OUTLINED_FUNCTION_41();
  }
  return OUTLINED_FUNCTION_244();
}

void ModalityXFinalSpeechRecognitionResponse.speechID.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_81_0((uint64_t)v2);
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v0 + 24))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.speechID.modify();
}

void ModalityXFinalSpeechRecognitionResponse.hasSpeechID.getter()
{
  ModalityXRecognitionCandidate.hasSpeechID.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

void ModalityXRecognitionCandidate.hasSpeechID.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_25(a1) + 20));
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_161_0(*(_QWORD *)(v2 + 24));
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearSpeechID()()
{
  ModalityXRecognitionCandidate.clearSpeechID()();
}

void ModalityXRecognitionCandidate.clearSpeechID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  OUTLINED_FUNCTION_200_0();
  OUTLINED_FUNCTION_20_0(v2);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    OUTLINED_FUNCTION_128_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_232_0();
    OUTLINED_FUNCTION_41();
  }
  v3 = *(_QWORD *)(v0 + v1);
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_112();
}

void ModalityXFinalSpeechRecognitionResponse.sessionID.getter()
{
  ModalityXRecognitionCandidate.sessionID.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

void ModalityXRecognitionCandidate.sessionID.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_312_0();
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v1 + 40))
    OUTLINED_FUNCTION_304_0();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.sessionID : ModalityXFinalSpeechRecognitionResponse()
{
  swift_bridgeObjectRetain();
  ModalityXFinalSpeechRecognitionResponse.sessionID.setter();
}

void ModalityXFinalSpeechRecognitionResponse.sessionID.setter()
{
  ModalityXRecognitionCandidate.sessionID.setter();
}

void ModalityXFinalSpeechRecognitionResponse.sessionID.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_81_0((uint64_t)v2);
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v0 + 40))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.sessionID.modify();
}

void ModalityXFinalSpeechRecognitionResponse.hasSessionID.getter()
{
  ModalityXRecognitionCandidate.hasSessionID.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

void ModalityXRecognitionCandidate.hasSessionID.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_25(a1) + 20));
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_161_0(*(_QWORD *)(v2 + 40));
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearSessionID()()
{
  ModalityXRecognitionCandidate.clearSessionID()();
}

void ModalityXRecognitionCandidate.clearSessionID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  OUTLINED_FUNCTION_200_0();
  OUTLINED_FUNCTION_20_0(v2);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    OUTLINED_FUNCTION_128_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_232_0();
    OUTLINED_FUNCTION_41();
  }
  v3 = *(_QWORD *)(v0 + v1);
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_112();
}

void ModalityXFinalSpeechRecognitionResponse.returnCode.getter()
{
  ModalityXRecognitionCandidate.returnCode.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

void ModalityXRecognitionCandidate.returnCode.getter(uint64_t (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

void ModalityXFinalSpeechRecognitionResponse.returnCode.setter()
{
  ModalityXRecognitionCandidate.returnCode.setter();
}

void ModalityXFinalSpeechRecognitionResponse.returnCode.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = OUTLINED_FUNCTION_73();
  *v0 = v2;
  v2[9] = v1;
  *((_DWORD *)v2 + 21) = *(_DWORD *)(type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0) + 20);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_258_0();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.returnCode.modify();
}

void ModalityXFinalSpeechRecognitionResponse.hasReturnCode.getter()
{
  ModalityXRecognitionCandidate.hasReturnCode.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

void ModalityXRecognitionCandidate.hasReturnCode.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_25(a1) + 20));
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_149_0(*(_BYTE *)(v2 + 52));
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearReturnCode()()
{
  ModalityXRecognitionCandidate.clearReturnCode()();
}

void ModalityXRecognitionCandidate.clearReturnCode()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  OUTLINED_FUNCTION_200_0();
  OUTLINED_FUNCTION_20_0(v2);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    OUTLINED_FUNCTION_128_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_232_0();
    OUTLINED_FUNCTION_41();
  }
  v3 = *(_QWORD *)(v0 + v1);
  OUTLINED_FUNCTION_7_0();
  *(_DWORD *)(v3 + 48) = 0;
  *(_BYTE *)(v3 + 52) = 1;
  OUTLINED_FUNCTION_112();
}

void ModalityXFinalSpeechRecognitionResponse.returnStr.getter()
{
  ModalityXRecognitionCandidate.returnStr.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

void ModalityXRecognitionCandidate.returnStr.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_25(a1);
  OUTLINED_FUNCTION_312_0();
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v1 + 64))
    OUTLINED_FUNCTION_304_0();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_114();
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.returnStr : ModalityXFinalSpeechRecognitionResponse()
{
  swift_bridgeObjectRetain();
  ModalityXFinalSpeechRecognitionResponse.returnStr.setter();
}

void ModalityXFinalSpeechRecognitionResponse.returnStr.setter()
{
  ModalityXRecognitionCandidate.returnStr.setter();
}

void ModalityXFinalSpeechRecognitionResponse.returnStr.modify()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_81_0((uint64_t)v2);
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v0 + 64))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.returnStr.modify();
}

void ModalityXFinalSpeechRecognitionResponse.hasReturnStr.getter()
{
  ModalityXRecognitionCandidate.hasReturnStr.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

void ModalityXRecognitionCandidate.hasReturnStr.getter(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_25(a1) + 20));
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_161_0(*(_QWORD *)(v2 + 64));
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearReturnStr()()
{
  ModalityXRecognitionCandidate.clearReturnStr()();
}

void ModalityXRecognitionCandidate.clearReturnStr()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  OUTLINED_FUNCTION_200_0();
  OUTLINED_FUNCTION_20_0(v2);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    OUTLINED_FUNCTION_128_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_232_0();
    OUTLINED_FUNCTION_41();
  }
  v3 = *(_QWORD *)(v0 + v1);
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_112();
}

void ModalityXFinalSpeechRecognitionResponse.recognitionResult.getter()
{
  ModalityXRecognitionCandidate.recognitionResult.getter();
}

void ModalityXFinalSpeechRecognitionResponse.recognitionResult.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_163();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v7 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_288_0(v7);
    OUTLINED_FUNCTION_41();
  }
  OUTLINED_FUNCTION_102_0(v3, v6, type metadata accessor for ModalityXRecognitionResult);
  v8 = type metadata accessor for ModalityXRecognitionResult(0);
  OUTLINED_FUNCTION_138_0(v8);
  OUTLINED_FUNCTION_176_0();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_172_0();
  OUTLINED_FUNCTION_283_0();
  OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_90();
}

void ModalityXFinalSpeechRecognitionResponse.recognitionResult.modify()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OUTLINED_FUNCTION_423();
  OUTLINED_FUNCTION_127_0((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_72();
  v3 = OUTLINED_FUNCTION_27(v2);
  v0[4] = v3;
  v4 = type metadata accessor for ModalityXRecognitionResult(0);
  v0[5] = OUTLINED_FUNCTION_128(v4);
  v5 = OUTLINED_FUNCTION_158();
  v0[6] = v5;
  OUTLINED_FUNCTION_68_0();
  v7 = v6
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_56_0(v7);
  v8 = OUTLINED_FUNCTION_14_0((uint64_t)v3);
  if (v10)
  {
    v11 = MEMORY[0x24BEE4AF8];
    *v5 = MEMORY[0x24BEE4AF8];
    v5[1] = v11;
    v5[2] = v11;
    v5[3] = v11;
    OUTLINED_FUNCTION_177_0();
    v12 = OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_204(v12, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v8, v9, type metadata accessor for ModalityXRecognitionResult);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasRecognitionResult.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXRecognitionResult?, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult, type metadata accessor for ModalityXRecognitionResult);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearRecognitionResult()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v3 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_233_0(v3);
    OUTLINED_FUNCTION_41();
  }
  v4 = OUTLINED_FUNCTION_311_0();
  v5 = type metadata accessor for ModalityXRecognitionResult(v4);
  OUTLINED_FUNCTION_140_0(v5);
  OUTLINED_FUNCTION_7_0();
  v6 = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_229_0(v6, v7, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  OUTLINED_FUNCTION_317_0();
  OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_12();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t result;
  int v5;

  OUTLINED_FUNCTION_68_0();
  v3 = (unsigned __int8 *)(v2
                         + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  result = OUTLINED_FUNCTION_5_0();
  v5 = *v3;
  if (v5 == 5)
    LOBYTE(v5) = 0;
  *a1 = v5;
  return result;
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes : ModalityXFinalSpeechRecognitionResponse()
{
  ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.setter();
}

void ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.setter()
{
  ModalityXRecognitionCandidate.fingerprintDetection.setter();
}

void ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  int v4;

  v1 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_98_0((uint64_t)v1);
  v3 = (unsigned __int8 *)(v2
                         + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  OUTLINED_FUNCTION_5_0();
  v4 = *v3;
  if (v4 == 5)
    LOBYTE(v4) = 0;
  *(_BYTE *)(v0 + 84) = v4;
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.fingerprintDetection.modify();
}

void ModalityXFinalSpeechRecognitionResponse.hasLangProfileRecreateCodes.getter()
{
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearLangProfileRecreateCodes()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  if ((OUTLINED_FUNCTION_129_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v2 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_316_0(v2);
    OUTLINED_FUNCTION_41();
  }
  v3 = (_BYTE *)(*(_QWORD *)(v0 + v1)
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  OUTLINED_FUNCTION_7_0();
  *v3 = 5;
  OUTLINED_FUNCTION_32();
}

void ModalityXFinalSpeechRecognitionResponse.audioAnalytics.getter()
{
  ModalityXRecognitionCandidate.audioAnalytics.getter();
}

void ModalityXFinalSpeechRecognitionResponse.audioAnalytics.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_163();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v7 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_288_0(v7);
    OUTLINED_FUNCTION_41();
  }
  OUTLINED_FUNCTION_102_0(v3, v6, type metadata accessor for ModalityXAudioAnalytics);
  v8 = type metadata accessor for ModalityXAudioAnalytics(0);
  OUTLINED_FUNCTION_138_0(v8);
  OUTLINED_FUNCTION_176_0();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_172_0();
  OUTLINED_FUNCTION_283_0();
  OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_90();
}

void ModalityXFinalSpeechRecognitionResponse.audioAnalytics.modify()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v1 = OUTLINED_FUNCTION_423();
  OUTLINED_FUNCTION_127_0((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_72();
  v3 = OUTLINED_FUNCTION_27(v2);
  v0[4] = v3;
  v4 = type metadata accessor for ModalityXAudioAnalytics(0);
  v0[5] = OUTLINED_FUNCTION_128(v4);
  v5 = OUTLINED_FUNCTION_158();
  v0[6] = v5;
  OUTLINED_FUNCTION_68_0();
  v7 = v6
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_56_0(v7);
  v8 = OUTLINED_FUNCTION_14_0((uint64_t)v3);
  if (v10)
  {
    v11 = MEMORY[0x24BEE4AF8];
    *v5 = MEMORY[0x24BEE4AF8];
    v5[1] = v11;
    v12 = OUTLINED_FUNCTION_177_0();
    OUTLINED_FUNCTION_204(v12, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v8, v9, type metadata accessor for ModalityXAudioAnalytics);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasAudioAnalytics.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXAudioAnalytics?, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics, type metadata accessor for ModalityXAudioAnalytics);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearAudioAnalytics()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v3 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_233_0(v3);
    OUTLINED_FUNCTION_41();
  }
  v4 = OUTLINED_FUNCTION_311_0();
  v5 = type metadata accessor for ModalityXAudioAnalytics(v4);
  OUTLINED_FUNCTION_140_0(v5);
  OUTLINED_FUNCTION_7_0();
  v6 = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_229_0(v6, v7, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  OUTLINED_FUNCTION_317_0();
  OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_12();
}

void ModalityXFinalSpeechRecognitionResponse.watermarkDetection.getter(_BYTE *a1@<X8>)
{
  ModalityXRecognitionCandidate.fingerprintDetection.getter(&OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection, a1);
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.watermarkDetection : ModalityXFinalSpeechRecognitionResponse()
{
  ModalityXFinalSpeechRecognitionResponse.watermarkDetection.setter();
}

void ModalityXFinalSpeechRecognitionResponse.watermarkDetection.setter()
{
  ModalityXRecognitionCandidate.fingerprintDetection.setter();
}

void ModalityXFinalSpeechRecognitionResponse.watermarkDetection.modify()
{
  void *v0;

  v0 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_98_0((uint64_t)v0);
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_186_0();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.fingerprintDetection.modify();
}

void ModalityXFinalSpeechRecognitionResponse.hasWatermarkDetection.getter()
{
  ModalityXRecognitionCandidate.hasFingerprintDetection.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearWatermarkDetection()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  if ((OUTLINED_FUNCTION_129_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v2 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_316_0(v2);
    OUTLINED_FUNCTION_41();
  }
  v3 = (_BYTE *)(*(_QWORD *)(v0 + v1)
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  OUTLINED_FUNCTION_7_0();
  *v3 = 4;
  OUTLINED_FUNCTION_32();
}

double ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.getter()
{
  return ModalityXRecognitionCandidate.snr.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse);
}

uint64_t ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.setter(double a1)
{
  return ModalityXRecognitionCandidate.snr.setter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse, a1, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass, (uint64_t)ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:), &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage);
}

void ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  double v3;
  double v4;
  char v5;

  v2 = OUTLINED_FUNCTION_324();
  *v0 = v2;
  v2[10] = v1;
  *((_DWORD *)v2 + 22) = *(_DWORD *)(type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0) + 20);
  OUTLINED_FUNCTION_5_0();
  v3 = OUTLINED_FUNCTION_130_0();
  if (!v5)
    v3 = v4;
  *((double *)v2 + 9) = v3;
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.snr.modify();
}

void ModalityXFinalSpeechRecognitionResponse.hasWatermarkPeakAverage.getter()
{
  ModalityXRecognitionCandidate.hasSnr.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearWatermarkPeakAverage()()
{
  ModalityXRecognitionCandidate.clearSnr()();
}

void ModalityXFinalSpeechRecognitionResponse.language.getter()
{
  ModalityXRecognitionCandidate.resultID.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.language : ModalityXFinalSpeechRecognitionResponse()
{
  swift_bridgeObjectRetain();
  ModalityXFinalSpeechRecognitionResponse.language.setter();
}

void ModalityXFinalSpeechRecognitionResponse.language.setter()
{
  ModalityXRecognitionCandidate.resultID.setter();
}

void ModalityXFinalSpeechRecognitionResponse.language.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_205_0((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.resultID.modify();
}

void ModalityXFinalSpeechRecognitionResponse.hasLanguage.getter()
{
  ModalityXRecognitionCandidate.hasResultID.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearLanguage()()
{
  ModalityXRecognitionCandidate.clearResultID()();
}

void ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.getter()
{
  ModalityXRecognitionCandidate.latnnMitigatorResult.getter();
}

void ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_163();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_296() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v7 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_288_0(v7);
    OUTLINED_FUNCTION_41();
  }
  OUTLINED_FUNCTION_102_0(v3, v6, type metadata accessor for ModalityXLatnnMitigatorResult);
  v8 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  OUTLINED_FUNCTION_138_0(v8);
  OUTLINED_FUNCTION_176_0();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_172_0();
  OUTLINED_FUNCTION_283_0();
  OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_90();
}

void ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.modify()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v1 = OUTLINED_FUNCTION_423();
  OUTLINED_FUNCTION_127_0((uint64_t)v1);
  v2 = OUTLINED_FUNCTION_72();
  v3 = OUTLINED_FUNCTION_27(v2);
  v0[4] = v3;
  v4 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  v0[5] = OUTLINED_FUNCTION_128(v4);
  v0[6] = OUTLINED_FUNCTION_158();
  OUTLINED_FUNCTION_68_0();
  v6 = v5
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_56_0(v6);
  v7 = OUTLINED_FUNCTION_14_0((uint64_t)v3);
  if (v9)
  {
    UnknownStorage.init()();
    OUTLINED_FUNCTION_96_0();
    OUTLINED_FUNCTION_204(v10, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  }
  else
  {
    OUTLINED_FUNCTION_169(v7, v8, type metadata accessor for ModalityXLatnnMitigatorResult);
  }
  OUTLINED_FUNCTION_12();
}

{
  ModalityXRecognitionCandidate.recognitionResult.modify();
}

BOOL ModalityXFinalSpeechRecognitionResponse.hasLatnnMitigatorResult.getter()
{
  return ModalityXRecognitionCandidate.hasRecognitionResult.getter(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearLatnnMitigatorResult()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v3 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_233_0(v3);
    OUTLINED_FUNCTION_41();
  }
  v4 = OUTLINED_FUNCTION_311_0();
  v5 = type metadata accessor for ModalityXLatnnMitigatorResult(v4);
  OUTLINED_FUNCTION_140_0(v5);
  OUTLINED_FUNCTION_7_0();
  v6 = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_229_0(v6, v7, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  OUTLINED_FUNCTION_317_0();
  OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_12();
}

void ModalityXFinalSpeechRecognitionResponse.requestLocale.getter()
{
  ModalityXRecognitionCandidate.resultID.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
}

void key path setter for ModalityXFinalSpeechRecognitionResponse.requestLocale : ModalityXFinalSpeechRecognitionResponse()
{
  swift_bridgeObjectRetain();
  ModalityXFinalSpeechRecognitionResponse.requestLocale.setter();
}

void ModalityXFinalSpeechRecognitionResponse.requestLocale.setter()
{
  ModalityXRecognitionCandidate.resultID.setter();
}

void ModalityXFinalSpeechRecognitionResponse.requestLocale.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_205_0((uint64_t)v1);
  v3 = v2
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale;
  OUTLINED_FUNCTION_5_0();
  if (*(_QWORD *)(v3 + 8))
    OUTLINED_FUNCTION_166();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)(v0 + 80) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_9_0();
}

{
  ModalityXRecognitionCandidate.resultID.modify();
}

void ModalityXFinalSpeechRecognitionResponse.hasRequestLocale.getter()
{
  ModalityXRecognitionCandidate.hasResultID.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearRequestLocale()()
{
  ModalityXRecognitionCandidate.clearResultID()();
}

void ModalityXFinalSpeechRecognitionResponse.hasResult_p.getter()
{
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

void ModalityXFinalSpeechRecognitionResponse.hasResult_p.setter()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE *v7;

  OUTLINED_FUNCTION_200_0();
  v3 = v1;
  v4 = OUTLINED_FUNCTION_297_0();
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(v4);
  if ((OUTLINED_FUNCTION_405() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v5 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v1 + v2) = OUTLINED_FUNCTION_233_0(v5);
    OUTLINED_FUNCTION_41();
  }
  v6 = v0 & 1;
  v7 = (_BYTE *)(*(_QWORD *)(v3 + v2)
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_7_0();
  *v7 = v6;
  OUTLINED_FUNCTION_112();
}

void ModalityXFinalSpeechRecognitionResponse.hasResult_p.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _BYTE *v3;

  v1 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_98_0((uint64_t)v1);
  v3 = (_BYTE *)(v2
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_5_0();
  *(_BYTE *)(v0 + 84) = *v3 & 1;
  OUTLINED_FUNCTION_9_0();
}

{
  char v0;
  char v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  OUTLINED_FUNCTION_163();
  v1 = v0;
  v3 = *v2;
  v4 = *(_BYTE *)(*v2 + 84);
  v5 = OUTLINED_FUNCTION_271_0();
  if ((v1 & 1) == 0)
  {
    if ((v5 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((v5 & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v8 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v7 + v6) = OUTLINED_FUNCTION_233_0(v8);
    OUTLINED_FUNCTION_41();
  }
LABEL_4:
  v9 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80))
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_7_0();
  *v9 = v4;
  OUTLINED_FUNCTION_42((void *)v3);
}

void ModalityXFinalSpeechRecognitionResponse.hasHasResult_p.getter()
{
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_114();
}

Swift::Void __swiftcall ModalityXFinalSpeechRecognitionResponse.clearHasResult_p()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;

  if ((OUTLINED_FUNCTION_129_0() & 1) == 0)
  {
    type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
    OUTLINED_FUNCTION_10();
    v2 = OUTLINED_FUNCTION_40();
    *(_QWORD *)(v0 + v1) = OUTLINED_FUNCTION_316_0(v2);
    OUTLINED_FUNCTION_41();
  }
  v3 = (_BYTE *)(*(_QWORD *)(v0 + v1)
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  OUTLINED_FUNCTION_7_0();
  *v3 = 2;
  OUTLINED_FUNCTION_32();
}

uint64_t ModalityXRecognitionToken.unknownFields.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_97_0();
  return OUTLINED_FUNCTION_146(v0, v1, v2, v3);
}

uint64_t (*ModalityXFinalSpeechRecognitionResponse.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

unint64_t static ModalityXRecognitionToken.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(19);
}

uint64_t static ModalityXRecognitionToken._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionToken._protobuf_nameMap, a1);
}

void ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_392();
  v5 = OUTLINED_FUNCTION_17();
  if (!v2)
  {
    while ((v6 & 1) == 0)
    {
      switch(v5)
      {
        case 1:
          closure #1 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(v1, v0, v4, v3, type metadata accessor for ModalityXRecognitionToken);
          break;
        case 2:
          OUTLINED_FUNCTION_170_0();
          break;
        case 3:
          OUTLINED_FUNCTION_190_0();
          break;
        case 4:
          OUTLINED_FUNCTION_189_0();
          break;
        case 5:
          OUTLINED_FUNCTION_8_1();
          closure #5 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
          break;
        case 6:
          OUTLINED_FUNCTION_8_1();
          closure #6 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
          break;
        case 7:
          OUTLINED_FUNCTION_8_1();
          closure #7 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
          break;
        case 8:
          OUTLINED_FUNCTION_8_1();
          closure #8 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      v5 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_89();
}

uint64_t closure #5 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXRecognitionToken(0);
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

uint64_t closure #6 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXRecognitionToken(0);
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t closure #7 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXRecognitionToken(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #8 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXRecognitionToken(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

void ModalityXRecognitionToken.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_95(v1, v2, v3, v4, type metadata accessor for ModalityXRecognitionToken);
  if (!v0)
  {
    OUTLINED_FUNCTION_221_0(v5, v6, v7, v8, type metadata accessor for ModalityXRecognitionToken);
    OUTLINED_FUNCTION_222_0(v9, v10, v11, v12, type metadata accessor for ModalityXRecognitionToken);
    OUTLINED_FUNCTION_220_0(v13, v14, v15, v16, type metadata accessor for ModalityXRecognitionToken);
    v17 = OUTLINED_FUNCTION_30();
    closure #5 in ModalityXRecognitionToken.traverse<A>(visitor:)(v17);
    v18 = OUTLINED_FUNCTION_30();
    closure #6 in ModalityXRecognitionToken.traverse<A>(visitor:)(v18);
    v19 = OUTLINED_FUNCTION_30();
    closure #7 in ModalityXRecognitionToken.traverse<A>(visitor:)(v19);
    v20 = OUTLINED_FUNCTION_30();
    closure #8 in ModalityXRecognitionToken.traverse<A>(visitor:)(v20);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

uint64_t closure #5 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXRecognitionToken(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 36) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #6 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXRecognitionToken(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 40)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #7 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXRecognitionToken(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 44) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t closure #8 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXRecognitionToken(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 48) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

void static ModalityXRecognitionToken.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  char v11;
  char v12;
  int v13;
  char v14;
  char v15;
  int v16;
  char v17;
  char v18;
  int v19;
  char v20;
  char v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;

  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_92();
  type metadata accessor for ModalityXRecognitionToken(v3);
  OUTLINED_FUNCTION_77();
  if (!v6)
  {
    if (v4)
      goto LABEL_50;
LABEL_10:
    OUTLINED_FUNCTION_25_0();
    if ((v11 & 1) != 0)
    {
      if (!v10)
        goto LABEL_50;
    }
    else
    {
      OUTLINED_FUNCTION_29();
      if ((v12 & 1) != 0)
        goto LABEL_50;
    }
    OUTLINED_FUNCTION_25_0();
    if ((v14 & 1) != 0)
    {
      if (!v13)
        goto LABEL_50;
    }
    else
    {
      OUTLINED_FUNCTION_29();
      if ((v15 & 1) != 0)
        goto LABEL_50;
    }
    OUTLINED_FUNCTION_25_0();
    if ((v17 & 1) != 0)
    {
      if (!v16)
        goto LABEL_50;
    }
    else
    {
      OUTLINED_FUNCTION_29();
      if ((v18 & 1) != 0)
        goto LABEL_50;
    }
    OUTLINED_FUNCTION_25_0();
    if ((v20 & 1) != 0)
    {
      if (!v19)
        goto LABEL_50;
    }
    else
    {
      OUTLINED_FUNCTION_29();
      if ((v21 & 1) != 0)
        goto LABEL_50;
    }
    OUTLINED_FUNCTION_257_0();
    if (v9)
    {
      if (v22 != 2)
        goto LABEL_50;
    }
    else
    {
      if (v22 == 2)
        goto LABEL_50;
      OUTLINED_FUNCTION_176();
      if ((v23 & 1) == 0)
        goto LABEL_50;
    }
    OUTLINED_FUNCTION_77();
    if (v26)
    {
      if (!v24)
        goto LABEL_50;
      OUTLINED_FUNCTION_24(v25);
      v29 = v9 && v27 == v28;
      if (!v29 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_50;
    }
    else if (v24)
    {
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_77();
    if (v32)
    {
      if (!v30)
        goto LABEL_50;
      OUTLINED_FUNCTION_24(v31);
      v35 = v9 && v33 == v34;
      if (!v35 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_50;
    }
    else if (v30)
    {
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_111();
    OUTLINED_FUNCTION_159(v0);
    goto LABEL_50;
  }
  if (v4)
  {
    OUTLINED_FUNCTION_24(v5);
    v9 = v9 && v7 == v8;
    if (v9 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_10;
  }
LABEL_50:
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXRecognitionToken.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXRecognitionToken, &lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionToken);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionToken()
{
  static ModalityXRecognitionToken.protoMessageName.getter();
  return 0xD000000000000013;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionToken()
{
  ModalityXRecognitionToken.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionToken()
{
  ModalityXRecognitionToken.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionToken()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, type metadata accessor for ModalityXRecognitionToken, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionToken);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionToken()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, type metadata accessor for ModalityXRecognitionToken, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionToken);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionToken()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, type metadata accessor for ModalityXRecognitionToken, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionToken);
  return Message.hash(into:)();
}

unint64_t static ModalityXRecognitionPhraseTokens.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(26);
}

void one-time initialization function for _protobuf_nameMap()
{
  one-time initialization function for _protobuf_nameMap();
}

{
  one-time initialization function for _protobuf_nameMap();
}

{
  one-time initialization function for _protobuf_nameMap();
}

{
  one-time initialization function for _protobuf_nameMap();
}

{
  unsigned int *v0;
  unsigned int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_163();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v8, v7);
  __swift_project_value_buffer(v8, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_24205B1B0;
  v13 = v12 + v11 + *(int *)(v9 + 48);
  *(_QWORD *)(v12 + v11) = 1;
  *(_QWORD *)v13 = v5;
  *(_QWORD *)(v13 + 8) = v3;
  *(_BYTE *)(v13 + 16) = 2;
  v14 = *v1;
  v15 = type metadata accessor for _NameMap.NameDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v13, v14, v15);
  _NameMap.init(dictionaryLiteral:)();
  OUTLINED_FUNCTION_90();
}

uint64_t static ModalityXRecognitionPhraseTokens._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)&static ModalityXRecognitionPhraseTokens._protobuf_nameMap, a1);
}

void ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)()
{
  ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_392();
  OUTLINED_FUNCTION_157_0(v1, v2);
  while (1)
  {
    v3 = dispatch thunk of Decoder.nextFieldNumber()();
    if (v0 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
    {
      OUTLINED_FUNCTION_302_0();
      closure #1 in ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
    }
  }
  OUTLINED_FUNCTION_89();
}

uint64_t ModalityXRecognitionPhraseTokens.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionPhraseTokens.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXRecognitionToken, &lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionToken, (void (*)(_QWORD))type metadata accessor for ModalityXRecognitionPhraseTokens);
}

void static ModalityXRecognitionPhraseTokens.== infix(_:_:)()
{
  static ModalityXRecognitionPhraseTokens.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(uint64_t);
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_163();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_66_0();
  if ((v5(v10) & 1) != 0)
  {
    v11 = v3(0);
    OUTLINED_FUNCTION_141_0(v11, v7 + *(int *)(v11 + 20));
    OUTLINED_FUNCTION_83_0(*(int *)(v11 + 20));
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_382(v0);
    OUTLINED_FUNCTION_382(v1);
  }
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXRecognitionPhraseTokens.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXRecognitionPhraseTokens, &lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokens);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionPhraseTokens()
{
  static ModalityXRecognitionPhraseTokens.protoMessageName.getter();
  return 0xD00000000000001ALL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionPhraseTokens()
{
  ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionPhraseTokens(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionPhraseTokens.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionPhraseTokens()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, type metadata accessor for ModalityXRecognitionPhraseTokens, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokens);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionPhraseTokens()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, type metadata accessor for ModalityXRecognitionPhraseTokens, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokens);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionPhraseTokens()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, type metadata accessor for ModalityXRecognitionPhraseTokens, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokens);
  return Message.hash(into:)();
}

unint64_t static ModalityXRecognitionPhraseTokensAlternatives.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(38);
}

uint64_t static ModalityXRecognitionPhraseTokensAlternatives._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionPhraseTokensAlternatives._protobuf_nameMap, a1);
}

void ModalityXRecognitionPhraseTokensAlternatives.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_392();
  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        OUTLINED_FUNCTION_8_1();
        closure #2 in ModalityXRecognitionPhraseTokensAlternatives.decodeMessage<A>(decoder:)();
      }
      else if (v1 == 1)
      {
        OUTLINED_FUNCTION_152_0();
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_89();
}

uint64_t closure #2 in ModalityXRecognitionPhraseTokensAlternatives.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

void ModalityXRecognitionPhraseTokensAlternatives.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_296_0();
  OUTLINED_FUNCTION_188_0();
  if (!v1
    || (type metadata accessor for ModalityXRecognitionPhraseTokens(0),
        lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, type metadata accessor for ModalityXRecognitionPhraseTokens, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokens), OUTLINED_FUNCTION_60_0(), !v0))
  {
    v2 = OUTLINED_FUNCTION_281_0();
    closure #1 in ModalityXRecognitionPhraseTokensAlternatives.traverse<A>(visitor:)(v2);
    if (!v0)
    {
      type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
      OUTLINED_FUNCTION_59_0();
    }
  }
  OUTLINED_FUNCTION_142();
}

uint64_t closure #1 in ModalityXRecognitionPhraseTokensAlternatives.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 24)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

void static ModalityXRecognitionPhraseTokensAlternatives.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  int v6;
  char v7;
  char v8;

  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_202_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_66_0();
  specialized static Array<A>.== infix(_:_:)();
  if ((v4 & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_318_0();
    OUTLINED_FUNCTION_257_0();
    if (v7)
    {
      if (v6 != 2)
        goto LABEL_9;
      goto LABEL_8;
    }
    if (v6 != 2)
    {
      OUTLINED_FUNCTION_176();
      if ((v8 & 1) != 0)
      {
LABEL_8:
        OUTLINED_FUNCTION_109_0();
        OUTLINED_FUNCTION_83_0(*(int *)(v5 + 20));
        lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_62();
        OUTLINED_FUNCTION_382(v0);
        OUTLINED_FUNCTION_382(v1);
      }
    }
  }
LABEL_9:
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXRecognitionPhraseTokensAlternatives.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, &lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionPhraseTokensAlternatives()
{
  static ModalityXRecognitionPhraseTokensAlternatives.protoMessageName.getter();
  return 0xD000000000000026;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionPhraseTokensAlternatives()
{
  ModalityXRecognitionPhraseTokensAlternatives.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionPhraseTokensAlternatives()
{
  ModalityXRecognitionPhraseTokensAlternatives.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionPhraseTokensAlternatives()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionPhraseTokensAlternatives()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionPhraseTokensAlternatives()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives);
  return Message.hash(into:)();
}

unint64_t static ModalityXRecognitionSausage.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(21);
}

uint64_t static ModalityXRecognitionSausage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)&static ModalityXRecognitionSausage._protobuf_nameMap, a1);
}

void ModalityXRecognitionSausage.decodeMessage<A>(decoder:)()
{
  ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
}

uint64_t ModalityXRecognitionSausage.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionPhraseTokens.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, &lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives, (void (*)(_QWORD))type metadata accessor for ModalityXRecognitionSausage);
}

void static ModalityXRecognitionSausage.== infix(_:_:)()
{
  static ModalityXRecognitionPhraseTokens.== infix(_:_:)();
}

Swift::Int ModalityXRecognitionSausage.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXRecognitionSausage, &lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionSausage()
{
  static ModalityXRecognitionSausage.protoMessageName.getter();
  return 0xD000000000000015;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionSausage()
{
  ModalityXRecognitionSausage.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionSausage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionSausage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
  return Message.hash(into:)();
}

unint64_t static ModalityXSetAlternateRecognitionSausage.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(33);
}

uint64_t static ModalityXSetAlternateRecognitionSausage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)&static ModalityXSetAlternateRecognitionSausage._protobuf_nameMap, a1);
}

void ModalityXSetAlternateRecognitionSausage.decodeMessage<A>(decoder:)()
{
  ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
}

uint64_t ModalityXSetAlternateRecognitionSausage.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionPhraseTokens.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, &lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives, (void (*)(_QWORD))type metadata accessor for ModalityXSetAlternateRecognitionSausage);
}

void static ModalityXSetAlternateRecognitionSausage.== infix(_:_:)()
{
  static ModalityXRecognitionPhraseTokens.== infix(_:_:)();
}

Swift::Int ModalityXSetAlternateRecognitionSausage.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXSetAlternateRecognitionSausage, &lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXSetAlternateRecognitionSausage);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSetAlternateRecognitionSausage()
{
  static ModalityXSetAlternateRecognitionSausage.protoMessageName.getter();
  return 0xD000000000000021;
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSetAlternateRecognitionSausage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXSetAlternateRecognitionSausage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSetAlternateRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, type metadata accessor for ModalityXSetAlternateRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXSetAlternateRecognitionSausage);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSetAlternateRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, type metadata accessor for ModalityXSetAlternateRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXSetAlternateRecognitionSausage);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSetAlternateRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, type metadata accessor for ModalityXSetAlternateRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXSetAlternateRecognitionSausage);
  return Message.hash(into:)();
}

unint64_t static ModalityXRecognitionChoice.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(20);
}

uint64_t static ModalityXRecognitionChoice._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionChoice._protobuf_nameMap, a1);
}

void ModalityXRecognitionChoice.decodeMessage<A>(decoder:)()
{
  ModalityXRecognitionChoice.decodeMessage<A>(decoder:)();
}

{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_392();
  OUTLINED_FUNCTION_157_0(v7, v8);
  while (1)
  {
    v9 = dispatch thunk of Decoder.nextFieldNumber()();
    if (v1 || (v10 & 1) != 0)
      break;
    if (v9 == 2)
    {
      v11 = OUTLINED_FUNCTION_302_0();
      closure #2 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(v11, v12, v13, v14, v2, v0);
    }
    else if (v9 == 1)
    {
      v3(v4, v6, v5);
    }
  }
  OUTLINED_FUNCTION_89();
}

void closure #2 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;

  v10 = OUTLINED_FUNCTION_125(a1, a2, a3, a4, a5);
  a6(a2 + *(int *)(v10 + 24), a3, a4);
  OUTLINED_FUNCTION_64();
}

void ModalityXRecognitionChoice.traverse<A>(visitor:)()
{
  ModalityXRecognitionChoice.traverse<A>(visitor:)();
}

{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  void (*v3)(_QWORD);
  void (*v4)(_QWORD);
  void (*v5)(void);
  uint64_t v6;

  OUTLINED_FUNCTION_296_0();
  v2 = v1;
  v4 = v3;
  if (!*(_QWORD *)(OUTLINED_FUNCTION_214_0() + 16) || (OUTLINED_FUNCTION_253_0(), v5(), !v0))
  {
    v6 = OUTLINED_FUNCTION_281_0();
    v2(v6);
    if (!v0)
    {
      v4(0);
      OUTLINED_FUNCTION_59_0();
    }
  }
  OUTLINED_FUNCTION_142();
}

void closure #2 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  char v5;

  OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_285_0();
  if ((v5 & 1) == 0)
    OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_70();
}

void static ModalityXRecognitionChoice.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  char v9;
  char v10;

  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_202_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_66_0();
  specialized static Array<A>.== infix(_:_:)(v4, v5);
  if ((v6 & 1) != 0)
  {
    v7 = type metadata accessor for ModalityXRecognitionChoice(0);
    OUTLINED_FUNCTION_25_0();
    if ((v9 & 1) != 0)
    {
      if (!v8)
        goto LABEL_7;
    }
    else
    {
      OUTLINED_FUNCTION_29();
      if ((v10 & 1) != 0)
        goto LABEL_7;
    }
    OUTLINED_FUNCTION_109_0();
    OUTLINED_FUNCTION_83_0(*(int *)(v7 + 20));
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_382(v0);
    OUTLINED_FUNCTION_382(v1);
  }
LABEL_7:
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXRecognitionChoice.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXRecognitionChoice, &lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionChoice()
{
  static ModalityXRecognitionChoice.protoMessageName.getter();
  return 0xD000000000000014;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionChoice()
{
  ModalityXRecognitionChoice.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionChoice()
{
  ModalityXRecognitionChoice.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionChoice()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, type metadata accessor for ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionChoice()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, type metadata accessor for ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionChoice()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, type metadata accessor for ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
  return Message.hash(into:)();
}

unint64_t static ModalityXRepeatedItnAlignment.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(23);
}

uint64_t static ModalityXRepeatedItnAlignment._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)&static ModalityXRepeatedItnAlignment._protobuf_nameMap, a1);
}

void ModalityXRepeatedItnAlignment.decodeMessage<A>(decoder:)()
{
  ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
}

uint64_t ModalityXRepeatedItnAlignment.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionPhraseTokens.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXItnAlignment, &lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment, (void (*)(_QWORD))type metadata accessor for ModalityXRepeatedItnAlignment);
}

uint64_t ModalityXRecognitionPhraseTokens.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, void (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v13)(_QWORD);

  if (!*(_QWORD *)(*(_QWORD *)v7 + 16)
    || (v13 = a7,
        a4(0),
        lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(a5, a4, a6),
        result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(),
        a7 = v13,
        !v8))
  {
    a7(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

void static ModalityXRepeatedItnAlignment.== infix(_:_:)()
{
  static ModalityXRecognitionPhraseTokens.== infix(_:_:)();
}

Swift::Int ModalityXRepeatedItnAlignment.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXRepeatedItnAlignment, &lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXRepeatedItnAlignment);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRepeatedItnAlignment()
{
  static ModalityXRepeatedItnAlignment.protoMessageName.getter();
  return 0xD000000000000017;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRepeatedItnAlignment()
{
  ModalityXRepeatedItnAlignment.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRepeatedItnAlignment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRepeatedItnAlignment.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRepeatedItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, type metadata accessor for ModalityXRepeatedItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXRepeatedItnAlignment);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRepeatedItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, type metadata accessor for ModalityXRepeatedItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXRepeatedItnAlignment);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRepeatedItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, type metadata accessor for ModalityXRepeatedItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXRepeatedItnAlignment);
  return Message.hash(into:)();
}

unint64_t static ModalityXChoiceAlignment.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(18);
}

uint64_t static ModalityXChoiceAlignment._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXChoiceAlignment._protobuf_nameMap, a1);
}

void ModalityXChoiceAlignment.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_392();
  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        OUTLINED_FUNCTION_153_0();
      }
      else if (v1 == 1)
      {
        dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)();
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_89();
}

void ModalityXChoiceAlignment.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_296_0();
  if (!*(_QWORD *)(OUTLINED_FUNCTION_214_0() + 16)
    || (OUTLINED_FUNCTION_253_0(), dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)(), !v0))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 8) + 16)
      || (type metadata accessor for ModalityXRepeatedItnAlignment(0),
          lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, type metadata accessor for ModalityXRepeatedItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXRepeatedItnAlignment), OUTLINED_FUNCTION_60_0(), !v0))
    {
      type metadata accessor for ModalityXChoiceAlignment(0);
      OUTLINED_FUNCTION_59_0();
    }
  }
  OUTLINED_FUNCTION_142();
}

void static ModalityXChoiceAlignment.== infix(_:_:)()
{
  static ModalityXChoiceAlignment.== infix(_:_:)();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD, _QWORD);
  uint64_t (*v5)(_QWORD, _QWORD);
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_19();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_315_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_66_0();
  if ((v7(v14) & 1) != 0 && (v5(*(_QWORD *)(v11 + 8), *(_QWORD *)(v9 + 8)) & 1) != 0)
  {
    v15 = v3(0);
    OUTLINED_FUNCTION_141_0(v15, v11 + *(int *)(v15 + 24));
    OUTLINED_FUNCTION_83_0(*(int *)(v15 + 24));
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_382(v0);
    OUTLINED_FUNCTION_382(v1);
  }
  OUTLINED_FUNCTION_3_0();
}

Swift::Int ModalityXChoiceAlignment.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXChoiceAlignment, &lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXChoiceAlignment()
{
  static ModalityXChoiceAlignment.protoMessageName.getter();
  return 0xD000000000000012;
}

uint64_t (*protocol witness for Message.unknownFields.modify in conformance ModalityXChoiceAlignment())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXChoiceAlignment()
{
  ModalityXChoiceAlignment.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXChoiceAlignment()
{
  ModalityXChoiceAlignment.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXChoiceAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, type metadata accessor for ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXChoiceAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, type metadata accessor for ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXChoiceAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, type metadata accessor for ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
  return Message.hash(into:)();
}

unint64_t static ModalityXRecognitionResult.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(20);
}

uint64_t static ModalityXRecognitionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionResult._protobuf_nameMap, a1);
}

void ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_296_0();
  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_8_1();
          closure #1 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
          break;
        case 2:
          OUTLINED_FUNCTION_8_1();
          closure #2 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
          break;
        case 3:
          OUTLINED_FUNCTION_152_0();
          break;
        case 4:
          OUTLINED_FUNCTION_153_0();
          break;
        case 5:
          OUTLINED_FUNCTION_8_1();
          closure #5 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
          break;
        case 6:
          OUTLINED_FUNCTION_8_1();
          closure #6 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_142();
}

uint64_t closure #1 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXRecognitionResult(0);
  type metadata accessor for ModalityXRecognitionSausage(0);
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t closure #2 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXRecognitionResult(0);
  type metadata accessor for ModalityXRecognitionSausage(0);
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t closure #5 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXItnAlignment(0);
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, type metadata accessor for ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

uint64_t closure #6 in ModalityXRecognitionResult.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXChoiceAlignment(0);
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, type metadata accessor for ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

void ModalityXRecognitionResult.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_296_0();
  closure #1 in ModalityXRecognitionResult.traverse<A>(visitor:)((uint64_t)v0);
  if (!v1)
  {
    closure #2 in ModalityXRecognitionResult.traverse<A>(visitor:)((uint64_t)v0);
    if (*(_QWORD *)(*v0 + 16))
    {
      type metadata accessor for ModalityXRecognitionChoice(0);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, type metadata accessor for ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
      OUTLINED_FUNCTION_264_0();
      OUTLINED_FUNCTION_61();
    }
    if (*(_QWORD *)(v0[1] + 16))
    {
      type metadata accessor for ModalityXRecognitionChoice(0);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, type metadata accessor for ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
      OUTLINED_FUNCTION_264_0();
      OUTLINED_FUNCTION_61();
    }
    if (*(_QWORD *)(v0[2] + 16))
    {
      type metadata accessor for ModalityXItnAlignment(0);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, type metadata accessor for ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
      OUTLINED_FUNCTION_264_0();
      OUTLINED_FUNCTION_61();
    }
    if (*(_QWORD *)(v0[3] + 16))
    {
      type metadata accessor for ModalityXChoiceAlignment(0);
      lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, type metadata accessor for ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
      OUTLINED_FUNCTION_264_0();
      OUTLINED_FUNCTION_61();
    }
    type metadata accessor for ModalityXRecognitionResult(0);
    OUTLINED_FUNCTION_266_0();
  }
  OUTLINED_FUNCTION_142();
}

void closure #1 in ModalityXRecognitionResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXRecognitionSausage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModalityXRecognitionResult(0);
  outlined init with copy of ModalityXRecognitionSausage?(a1 + *(int *)(v8 + 36), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXRecognitionSausage);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXRecognitionSausage);
  }
}

void closure #2 in ModalityXRecognitionResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXRecognitionSausage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModalityXRecognitionResult(0);
  outlined init with copy of ModalityXRecognitionSausage?(a1 + *(int *)(v8 + 40), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXRecognitionSausage);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXRecognitionSausage);
  }
}

void static ModalityXRecognitionResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(uint64_t, uint64_t);
  char v60;
  uint64_t *v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  OUTLINED_FUNCTION_19();
  v2 = v1;
  v4 = v3;
  v76 = OUTLINED_FUNCTION_15();
  v73 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  OUTLINED_FUNCTION_436();
  v72 = v5;
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v6);
  v71 = (char *)&v70 - v7;
  v8 = type metadata accessor for ModalityXRecognitionSausage(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_436();
  v74 = v10;
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v70 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXRecognitionSausage?, ModalityXRecognitionSausage?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v15);
  v78 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v70 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_436();
  v75 = v21;
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v22);
  v81 = (uint64_t)&v70 - v23;
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v24);
  v77 = (uint64_t)&v70 - v25;
  OUTLINED_FUNCTION_144();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v70 - v28;
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_314_0();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v70 - v31;
  v33 = type metadata accessor for ModalityXRecognitionResult(0);
  v34 = *(int *)(v33 + 36);
  v79 = v4;
  v35 = v4 + v34;
  v36 = (int *)v33;
  OUTLINED_FUNCTION_156_0(v35, (uint64_t)v32);
  v37 = v36[9];
  v80 = v2;
  OUTLINED_FUNCTION_156_0(v2 + v37, v0);
  v38 = (uint64_t)&v19[*(int *)(v14 + 48)];
  OUTLINED_FUNCTION_156_0((uint64_t)v32, (uint64_t)v19);
  OUTLINED_FUNCTION_156_0(v0, v38);
  OUTLINED_FUNCTION_14((uint64_t)v19, 1, v8);
  if (v60)
  {
    OUTLINED_FUNCTION_288(v0);
    OUTLINED_FUNCTION_288((uint64_t)v32);
    v39 = OUTLINED_FUNCTION_14(v38, 1, v8);
    if (v60)
    {
      OUTLINED_FUNCTION_272_0(v39, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
      goto LABEL_6;
    }
LABEL_19:
    v61 = &demangling cache variable for type metadata for (ModalityXRecognitionSausage?, ModalityXRecognitionSausage?);
    v62 = (uint64_t)v19;
    goto LABEL_32;
  }
  outlined init with copy of ModalityXRecognitionSausage?((uint64_t)v19, (uint64_t)v29, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
  OUTLINED_FUNCTION_14(v38, 1, v8);
  if (v60)
  {
    OUTLINED_FUNCTION_288(v0);
    OUTLINED_FUNCTION_288((uint64_t)v32);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v29, type metadata accessor for ModalityXRecognitionSausage);
    goto LABEL_19;
  }
  outlined init with take of ModalityXSessionMetadata(v38, (uint64_t)v13, type metadata accessor for ModalityXRecognitionSausage);
  specialized static Array<A>.== infix(_:_:)();
  if ((v63 & 1) == 0)
  {
    OUTLINED_FUNCTION_187((uint64_t)v13);
    OUTLINED_FUNCTION_237_0(v0);
    OUTLINED_FUNCTION_237_0((uint64_t)v32);
    OUTLINED_FUNCTION_187((uint64_t)v29);
    v62 = (uint64_t)v19;
    v61 = &demangling cache variable for type metadata for ModalityXRecognitionSausage?;
    goto LABEL_32;
  }
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v64 = OUTLINED_FUNCTION_300_0();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v13, type metadata accessor for ModalityXRecognitionSausage);
  OUTLINED_FUNCTION_165(v0);
  OUTLINED_FUNCTION_165((uint64_t)v32);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v29, type metadata accessor for ModalityXRecognitionSausage);
  OUTLINED_FUNCTION_165((uint64_t)v19);
  if ((v64 & 1) == 0)
    goto LABEL_33;
LABEL_6:
  v40 = v79;
  v41 = v77;
  OUTLINED_FUNCTION_156_0(v79 + v36[10], v77);
  v43 = v80;
  v42 = v81;
  OUTLINED_FUNCTION_156_0(v80 + v36[10], v81);
  v44 = *(int *)(v14 + 48);
  v45 = v78;
  v46 = v78 + v44;
  OUTLINED_FUNCTION_156_0(v41, v78);
  OUTLINED_FUNCTION_156_0(v42, v46);
  OUTLINED_FUNCTION_14(v45, 1, v8);
  if (!v60)
  {
    v65 = v75;
    outlined init with copy of ModalityXRecognitionSausage?(v45, v75, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    OUTLINED_FUNCTION_14(v46, 1, v8);
    if (!v66)
    {
      v67 = v74;
      outlined init with take of ModalityXSessionMetadata(v46, v74, type metadata accessor for ModalityXRecognitionSausage);
      specialized static Array<A>.== infix(_:_:)();
      if ((v68 & 1) != 0)
      {
        lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_120();
        v69 = OUTLINED_FUNCTION_300_0();
        OUTLINED_FUNCTION_187(v67);
        OUTLINED_FUNCTION_237_0(v81);
        OUTLINED_FUNCTION_237_0(v41);
        OUTLINED_FUNCTION_187(v65);
        OUTLINED_FUNCTION_237_0(v45);
        if ((v69 & 1) == 0)
          goto LABEL_33;
        goto LABEL_11;
      }
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v67, type metadata accessor for ModalityXRecognitionSausage);
      OUTLINED_FUNCTION_288(v81);
      OUTLINED_FUNCTION_288(v41);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v65, type metadata accessor for ModalityXRecognitionSausage);
      v62 = v45;
      v61 = &demangling cache variable for type metadata for ModalityXRecognitionSausage?;
LABEL_32:
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v62, v61);
      goto LABEL_33;
    }
    OUTLINED_FUNCTION_171(v42);
    OUTLINED_FUNCTION_171(v41);
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v65, type metadata accessor for ModalityXRecognitionSausage);
LABEL_26:
    v61 = &demangling cache variable for type metadata for (ModalityXRecognitionSausage?, ModalityXRecognitionSausage?);
    v62 = v45;
    goto LABEL_32;
  }
  OUTLINED_FUNCTION_288(v42);
  OUTLINED_FUNCTION_288(v41);
  v47 = OUTLINED_FUNCTION_14(v46, 1, v8);
  if (!v60)
    goto LABEL_26;
  OUTLINED_FUNCTION_380(v47, &demangling cache variable for type metadata for ModalityXRecognitionSausage?);
LABEL_11:
  specialized static Array<A>.== infix(_:_:)();
  if ((v48 & 1) != 0)
  {
    specialized static Array<A>.== infix(_:_:)();
    if ((v49 & 1) != 0)
    {
      specialized static Array<A>.== infix(_:_:)();
      if ((v50 & 1) != 0)
      {
        specialized static Array<A>.== infix(_:_:)();
        if ((v51 & 1) != 0)
        {
          v52 = v40 + v36[8];
          v53 = v73;
          v54 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
          v55 = v71;
          v56 = v76;
          v54(v71, v52, v76);
          v57 = v43 + v36[8];
          v58 = v72;
          v54(v72, v57, v56);
          lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          dispatch thunk of static Equatable.== infix(_:_:)();
          v59 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
          v59((uint64_t)v58, v56);
          v59((uint64_t)v55, v56);
        }
      }
    }
  }
LABEL_33:
  OUTLINED_FUNCTION_3_0();
}

Swift::Int ModalityXRecognitionResult.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXRecognitionResult, &lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionResult()
{
  static ModalityXRecognitionResult.protoMessageName.getter();
  return 0xD000000000000014;
}

uint64_t (*protocol witness for Message.unknownFields.modify in conformance ModalityXRecognitionResult())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionResult()
{
  ModalityXRecognitionResult.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionResult()
{
  ModalityXRecognitionResult.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, type metadata accessor for ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, type metadata accessor for ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, type metadata accessor for ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
  return Message.hash(into:)();
}

unint64_t static ModalityXLatnnMitigatorResult.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(23);
}

uint64_t static ModalityXLatnnMitigatorResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXLatnnMitigatorResult._protobuf_nameMap, a1);
}

void ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_8_1();
          closure #1 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)();
          break;
        case 2:
          OUTLINED_FUNCTION_8_1();
          closure #2 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)();
          break;
        case 3:
          OUTLINED_FUNCTION_8_1();
          closure #3 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)();
          break;
        case 4:
          OUTLINED_FUNCTION_8_1();
          closure #4 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_70();
}

uint64_t closure #1 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t closure #2 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #3 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #4 in ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXLatnnMitigatorResult(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

void ModalityXLatnnMitigatorResult.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_30();
  closure #1 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    v2 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(v2);
    v3 = OUTLINED_FUNCTION_30();
    closure #3 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(v3);
    v4 = OUTLINED_FUNCTION_30();
    closure #4 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(v4);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

uint64_t closure #1 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 20)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #2 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 24) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t closure #3 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 28) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #4 in ModalityXLatnnMitigatorResult.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 32) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

void static ModalityXLatnnMitigatorResult.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  char v13;
  char v14;
  int v15;
  char v16;
  char v17;

  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_92();
  type metadata accessor for ModalityXLatnnMitigatorResult(v3);
  OUTLINED_FUNCTION_257_0();
  if (v11)
  {
    if (v4 != 2)
      goto LABEL_22;
  }
  else
  {
    if (v4 == 2)
      goto LABEL_22;
    OUTLINED_FUNCTION_176();
    if ((v5 & 1) == 0)
      goto LABEL_22;
  }
  OUTLINED_FUNCTION_77();
  if (!v8)
  {
    if (v6)
      goto LABEL_22;
LABEL_16:
    OUTLINED_FUNCTION_303_0();
    if ((v13 & 1) != 0)
    {
      if (!v12)
        goto LABEL_22;
    }
    else
    {
      OUTLINED_FUNCTION_295_0();
      if ((v14 & 1) != 0)
        goto LABEL_22;
    }
    OUTLINED_FUNCTION_303_0();
    if ((v16 & 1) != 0)
    {
      if (!v15)
        goto LABEL_22;
    }
    else
    {
      OUTLINED_FUNCTION_295_0();
      if ((v17 & 1) != 0)
        goto LABEL_22;
    }
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102();
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_111();
    OUTLINED_FUNCTION_159(v0);
    goto LABEL_22;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_24(v7);
    v11 = v11 && v9 == v10;
    if (v11 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_16;
  }
LABEL_22:
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXLatnnMitigatorResult.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXLatnnMitigatorResult, &lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXLatnnMitigatorResult()
{
  static ModalityXLatnnMitigatorResult.protoMessageName.getter();
  return 0xD000000000000017;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXLatnnMitigatorResult()
{
  ModalityXLatnnMitigatorResult.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXLatnnMitigatorResult()
{
  ModalityXLatnnMitigatorResult.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXLatnnMitigatorResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXLatnnMitigatorResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXLatnnMitigatorResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
  return Message.hash(into:)();
}

unint64_t static ModalityXRecognitionCandidate.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(23);
}

uint64_t static ModalityXRecognitionCandidate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXRecognitionCandidate._protobuf_nameMap, a1);
}

uint64_t type metadata accessor for ModalityXFinalSpeechRecognitionResponse(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXFinalSpeechRecognitionResponse);
}

uint64_t ModalityXRecognitionCandidate._StorageClass.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  *(_DWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_BYTE *)(v0 + 52) = 1;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  v2 = type metadata accessor for ModalityXRecognitionResult(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  v3 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
  *v3 = 0;
  v3[1] = 0;
  v4 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection) = 4;
  v5 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  v6 = type metadata accessor for ModalityXAudioAnalytics(0);
  __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection) = 4;
  v7 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  *v8 = 0;
  v8[1] = 0;
  v9 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  v10 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  v11 = (_QWORD *)(v0
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  *v11 = 0;
  v11[1] = 0;
  return v0;
}

uint64_t ModalityXRecognitionCandidate._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  MEMORY[0x24BDAC7A8](v3);
  v72 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  MEMORY[0x24BDAC7A8](v5);
  v69 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  MEMORY[0x24BDAC7A8](v7);
  v62 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_BYTE *)(v1 + 52) = 1;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  v60 = (_QWORD *)(v1 + 56);
  v9 = v1
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  v61 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  v10 = type metadata accessor for ModalityXRecognitionResult(0);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  v11 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
  *v11 = 0;
  v11[1] = 0;
  v12 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
  v63 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v64 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection) = 4;
  v13 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  v65 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  v14 = type metadata accessor for ModalityXAudioAnalytics(0);
  __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
  v66 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection) = 4;
  v15 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  v67 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  v68 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  *v16 = 0;
  v16[1] = 0;
  v17 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  v70 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  v18 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  __swift_storeEnumTagSinglePayload(v17, 1, 1, v18);
  v19 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  v71 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  *v19 = 0;
  v19[1] = 0;
  swift_beginAccess();
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v20;
  *(_QWORD *)(v1 + 24) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v23 = *(_QWORD *)(a1 + 32);
  v22 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v23;
  *(_QWORD *)(v1 + 40) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v22) = *(_DWORD *)(a1 + 48);
  v24 = *(_BYTE *)(a1 + 52);
  swift_beginAccess();
  *(_DWORD *)(v1 + 48) = v22;
  *(_BYTE *)(v1 + 52) = v24;
  swift_beginAccess();
  v26 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a1 + 64);
  v27 = v60;
  swift_beginAccess();
  *v27 = v26;
  *(_QWORD *)(v1 + 64) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  swift_beginAccess();
  v29 = v62;
  outlined init with copy of ModalityXRecognitionSausage?(v28, v62, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  v30 = v61;
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v29, v30, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  swift_endAccess();
  v31 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
  swift_beginAccess();
  v33 = *v31;
  v32 = v31[1];
  swift_beginAccess();
  *v11 = v33;
  v11[1] = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr);
  swift_beginAccess();
  v35 = *v34;
  LOBYTE(v34) = *((_BYTE *)v34 + 8);
  v36 = v63;
  swift_beginAccess();
  *(_QWORD *)v36 = v35;
  *(_BYTE *)(v36 + 8) = (_BYTE)v34;
  v37 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection);
  swift_beginAccess();
  LOBYTE(v37) = *v37;
  v38 = v64;
  swift_beginAccess();
  *v38 = (_BYTE)v37;
  v39 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  swift_beginAccess();
  v40 = v69;
  outlined init with copy of ModalityXRecognitionSausage?(v39, v69, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  v41 = v65;
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v40, v41, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  swift_endAccess();
  v42 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  swift_beginAccess();
  LOBYTE(v42) = *v42;
  v43 = v66;
  swift_beginAccess();
  *v43 = (_BYTE)v42;
  v44 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage);
  swift_beginAccess();
  v45 = *v44;
  LOBYTE(v44) = *((_BYTE *)v44 + 8);
  v46 = v67;
  swift_beginAccess();
  *(_QWORD *)v46 = v45;
  *(_BYTE *)(v46 + 8) = (_BYTE)v44;
  v47 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  swift_beginAccess();
  v49 = *v47;
  v48 = v47[1];
  v50 = v68;
  swift_beginAccess();
  *v50 = v49;
  v50[1] = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  swift_beginAccess();
  v52 = v72;
  outlined init with copy of ModalityXRecognitionSausage?(v51, v72, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  v53 = v70;
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v52, v53, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  swift_endAccess();
  v54 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  swift_beginAccess();
  v56 = *v54;
  v55 = v54[1];
  swift_bridgeObjectRetain();
  swift_release();
  v57 = v71;
  swift_beginAccess();
  *v57 = v56;
  v57[1] = v55;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ModalityXRecognitionCandidate._StorageClass.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalityXRecognitionCandidate._StorageClass.__deallocating_deinit()
{
  return ModalityXBeginRequest._StorageClass.__deallocating_deinit((void (*)(void))ModalityXRecognitionCandidate._StorageClass.deinit);
}

void ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
}

{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v2)(_QWORD);
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_392();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  ModalityXRecognitionCandidate._uniqueStorage()((uint64_t (*)(_QWORD))v2);
  swift_release();
  v3(0);
  OUTLINED_FUNCTION_312_0();
  v10 = OUTLINED_FUNCTION_40();
  v1(v10, v9, v7, v5);
  swift_release();
  OUTLINED_FUNCTION_89();
}

void closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t (*v22)();

  v9 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(v9)
      {
        case 1:
          closure #1 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 2:
          closure #2 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 3:
          closure #3 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 4:
          closure #4 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 5:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
          v16 = type metadata accessor for ModalityXRecognitionResult;
          goto LABEL_16;
        case 6:
        case 12:
        case 14:
          closure #6 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 7:
        case 11:
          closure #7 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 8:
          v17 = a2;
          v18 = a1;
          v19 = a3;
          v20 = a4;
          v21 = &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection;
          v22 = lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult;
          goto LABEL_13;
        case 9:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
          v16 = type metadata accessor for ModalityXAudioAnalytics;
          goto LABEL_16;
        case 10:
          v17 = a2;
          v18 = a1;
          v19 = a3;
          v20 = a4;
          v21 = &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection;
          v22 = lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
LABEL_13:
          closure #8 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(v17, v18, v19, v20, (uint64_t)v21, (void (*)(uint64_t))v22);
          break;
        case 13:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
          v16 = type metadata accessor for ModalityXLatnnMitigatorResult;
LABEL_16:
          closure #5 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(v11, v12, v13, v14, (uint64_t)v15, (void (*)(_QWORD))v16);
          break;
        default:
          break;
      }
      v9 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
}

uint64_t ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXRecognitionCandidate, closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:));
}

void closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  closure #1 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
  if (!v4)
  {
    closure #2 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #3 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    closure #4 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #5 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #8 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXFingerprintDetectionResult and conformance ModalityXFingerprintDetectionResult);
    closure #9 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    closure #8 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
    closure #7 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #13 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
  }
}

void closure #5 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXRecognitionResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v8, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXRecognitionResult);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, type metadata accessor for ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXRecognitionResult);
  }
}

void closure #9 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXAudioAnalytics(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v8, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXAudioAnalytics);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXAudioAnalytics);
  }
}

void closure #13 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v8, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXLatnnMitigatorResult);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXLatnnMitigatorResult);
  }
}

uint64_t closure #1 in static ModalityXRecognitionCandidate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  int v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  double v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 *v70;
  int v71;
  unsigned __int8 *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 *v79;
  int v80;
  uint64_t v81;
  unsigned __int8 *v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  char v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v122 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  MEMORY[0x24BDAC7A8](v122);
  v118 = (uint64_t)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXLatnnMitigatorResult?, ModalityXLatnnMitigatorResult?));
  MEMORY[0x24BDAC7A8](v120);
  v123 = (uint64_t)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v119 = (uint64_t)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v121 = (uint64_t)&v116 - v9;
  v128 = type metadata accessor for ModalityXAudioAnalytics(0);
  MEMORY[0x24BDAC7A8](v128);
  v124 = (uint64_t)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAudioAnalytics?, ModalityXAudioAnalytics?));
  MEMORY[0x24BDAC7A8](v126);
  v127 = (uint64_t)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v125 = (uint64_t)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v129 = (uint64_t)&v116 - v15;
  v16 = type metadata accessor for ModalityXRecognitionResult(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXRecognitionResult?, ModalityXRecognitionResult?));
  MEMORY[0x24BDAC7A8](v19);
  v130 = (uint64_t)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v116 - v25;
  swift_beginAccess();
  v28 = *(_QWORD *)(a1 + 16);
  v27 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v29 = *(_QWORD *)(a2 + 24);
  if (!v27)
  {
    if (v29)
      return 0;
    goto LABEL_10;
  }
  if (!v29)
    return 0;
  v30 = v28 == *(_QWORD *)(a2 + 16) && v27 == v29;
  if (v30 || (v31 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v31 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    v33 = *(_QWORD *)(a1 + 32);
    v34 = *(_QWORD *)(a1 + 40);
    swift_beginAccess();
    v35 = *(_QWORD *)(a2 + 40);
    if (v34)
    {
      if (!v35)
        return 0;
      if (v33 != *(_QWORD *)(a2 + 32) || v34 != v35)
      {
        v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
        result = 0;
        if ((v37 & 1) == 0)
          return result;
      }
    }
    else if (v35)
    {
      return 0;
    }
    swift_beginAccess();
    v38 = *(_DWORD *)(a1 + 48);
    v116 = a1;
    v39 = *(_BYTE *)(a1 + 52);
    swift_beginAccess();
    v117 = a2;
    v40 = *(_BYTE *)(a2 + 52);
    if ((v39 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 52))
        return 0;
    }
    else
    {
      if (v38 != *(_DWORD *)(a2 + 48))
        v40 = 1;
      if ((v40 & 1) != 0)
        return 0;
    }
    v41 = v116;
    swift_beginAccess();
    v42 = *(_QWORD *)(v41 + 56);
    v43 = *(_QWORD *)(v41 + 64);
    v44 = v117;
    swift_beginAccess();
    v45 = *(_QWORD *)(v44 + 64);
    if (v43)
    {
      if (v45)
      {
        if (v42 != *(_QWORD *)(v44 + 56) || v43 != v45)
        {
          v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
          result = 0;
          if ((v47 & 1) == 0)
            return result;
        }
LABEL_34:
        v48 = v41
            + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
        swift_beginAccess();
        outlined init with copy of ModalityXRecognitionSausage?(v48, (uint64_t)v26, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        v49 = v117
            + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
        swift_beginAccess();
        v50 = v130;
        v51 = v130 + *(int *)(v19 + 48);
        outlined init with copy of ModalityXRecognitionSausage?((uint64_t)v26, v130, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        outlined init with copy of ModalityXRecognitionSausage?(v49, v51, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        if (__swift_getEnumTagSinglePayload(v50, 1, v16) == 1)
        {
          v52 = v116;
          swift_retain();
          swift_retain();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v26, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          if (__swift_getEnumTagSinglePayload(v51, 1, v16) == 1)
          {
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v50, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
LABEL_45:
            v57 = (uint64_t *)(v52
                            + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
            swift_beginAccess();
            v58 = *v57;
            v59 = v57[1];
            v60 = v117;
            v61 = (_QWORD *)(v117
                           + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__resultID);
            swift_beginAccess();
            v62 = v61[1];
            if (v59)
            {
              if (!v62)
                goto LABEL_41;
              v63 = v58 == *v61 && v59 == v62;
              if (!v63 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                goto LABEL_41;
            }
            else if (v62)
            {
              goto LABEL_41;
            }
            v64 = v52
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
            swift_beginAccess();
            v65 = *(double *)v64;
            v66 = v60;
            v67 = *(_BYTE *)(v64 + 8);
            v68 = v66
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__snr;
            swift_beginAccess();
            if ((v67 & 1) != 0)
            {
              v69 = v129;
              if ((*(_BYTE *)(v68 + 8) & 1) == 0)
                goto LABEL_41;
            }
            else
            {
              v69 = v129;
              if ((*(_BYTE *)(v68 + 8) & 1) != 0 || v65 != *(double *)v68)
                goto LABEL_41;
            }
            v70 = (unsigned __int8 *)(v52
                                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection);
            swift_beginAccess();
            v71 = *v70;
            v72 = (unsigned __int8 *)(v117
                                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__fingerprintDetection);
            swift_beginAccess();
            v73 = *v72;
            if (v71 == 4)
            {
              if (v73 != 4)
                goto LABEL_41;
            }
            else if (v73 == 4 || v71 != v73)
            {
              goto LABEL_41;
            }
            v74 = v52
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
            swift_beginAccess();
            outlined init with copy of ModalityXRecognitionSausage?(v74, v69, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            v75 = v117
                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
            swift_beginAccess();
            v76 = v127;
            v77 = v127 + *(int *)(v126 + 48);
            outlined init with copy of ModalityXRecognitionSausage?(v69, v127, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            outlined init with copy of ModalityXRecognitionSausage?(v75, v77, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            v78 = v128;
            if (__swift_getEnumTagSinglePayload(v76, 1, v128) == 1)
            {
              outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v69, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
              if (__swift_getEnumTagSinglePayload(v77, 1, v78) == 1)
              {
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v76, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
LABEL_68:
                v79 = (unsigned __int8 *)(v52
                                        + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
                swift_beginAccess();
                v80 = *v79;
                v81 = v117;
                v82 = (unsigned __int8 *)(v117
                                        + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
                swift_beginAccess();
                v83 = *v82;
                if (v80 == 4)
                {
                  if (v83 != 4)
                    goto LABEL_41;
                }
                else if (v83 == 4 || v80 != v83)
                {
                  goto LABEL_41;
                }
                v89 = v52
                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
                swift_beginAccess();
                v90 = *(double *)v89;
                v91 = v81;
                v92 = *(_BYTE *)(v89 + 8);
                v93 = v91
                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
                swift_beginAccess();
                if ((v92 & 1) != 0)
                {
                  if ((*(_BYTE *)(v93 + 8) & 1) == 0)
                    goto LABEL_41;
                }
                else if ((*(_BYTE *)(v93 + 8) & 1) != 0 || v90 != *(double *)v93)
                {
                  goto LABEL_41;
                }
                v94 = (uint64_t *)(v116
                                + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
                swift_beginAccess();
                v95 = *v94;
                v96 = v94[1];
                v97 = (_QWORD *)(v117
                               + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
                swift_beginAccess();
                v98 = v97[1];
                if (v96)
                {
                  if (!v98)
                    goto LABEL_41;
                  v99 = v95 == *v97 && v96 == v98;
                  if (!v99 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                    goto LABEL_41;
                }
                else if (v98)
                {
                  goto LABEL_41;
                }
                v100 = v116
                     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
                swift_beginAccess();
                v101 = v121;
                outlined init with copy of ModalityXRecognitionSausage?(v100, v121, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                v102 = v117
                     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
                swift_beginAccess();
                v103 = v123;
                v104 = v123 + *(int *)(v120 + 48);
                outlined init with copy of ModalityXRecognitionSausage?(v101, v123, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                outlined init with copy of ModalityXRecognitionSausage?(v102, v104, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                if (__swift_getEnumTagSinglePayload(v103, 1, v122) == 1)
                {
                  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v121, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  if (__swift_getEnumTagSinglePayload(v104, 1, v122) == 1)
                  {
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v123, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    goto LABEL_102;
                  }
                }
                else
                {
                  outlined init with copy of ModalityXRecognitionSausage?(v123, v119, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  if (__swift_getEnumTagSinglePayload(v104, 1, v122) != 1)
                  {
                    v105 = v118;
                    outlined init with take of ModalityXSessionMetadata(v104, v118, type metadata accessor for ModalityXLatnnMitigatorResult);
                    v106 = v119;
                    static ModalityXLatnnMitigatorResult.== infix(_:_:)();
                    v108 = v107;
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v105, type metadata accessor for ModalityXLatnnMitigatorResult);
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v121, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v106, type metadata accessor for ModalityXLatnnMitigatorResult);
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v123, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    if ((v108 & 1) == 0)
                      goto LABEL_41;
LABEL_102:
                    v109 = (uint64_t *)(v116
                                     + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
                    swift_beginAccess();
                    v110 = *v109;
                    v111 = v109[1];
                    v112 = (_QWORD *)(v117
                                    + OBJC_IVAR____TtCV16ModalityXObjects29ModalityXRecognitionCandidateP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
                    swift_beginAccess();
                    v113 = v112[1];
                    if (v111)
                    {
                      if (!v113)
                        goto LABEL_41;
                      if (v110 == *v112 && v111 == v113)
                      {
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                      }
                      else
                      {
                        v115 = _stringCompareWithSmolCheck(_:_:expecting:)();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                        result = 0;
                        if ((v115 & 1) == 0)
                          return result;
                      }
                    }
                    else
                    {
                      swift_bridgeObjectRetain();
                      swift_release();
                      swift_release();
                      if (v113)
                      {
                        swift_bridgeObjectRelease();
                        return 0;
                      }
                    }
                    return 1;
                  }
                  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v121, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v119, type metadata accessor for ModalityXLatnnMitigatorResult);
                }
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v123, &demangling cache variable for type metadata for (ModalityXLatnnMitigatorResult?, ModalityXLatnnMitigatorResult?));
LABEL_41:
                swift_release();
                swift_release();
                return 0;
              }
              goto LABEL_73;
            }
            v84 = v125;
            outlined init with copy of ModalityXRecognitionSausage?(v76, v125, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            if (__swift_getEnumTagSinglePayload(v77, 1, v78) == 1)
            {
              outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v129, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
              outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v84, type metadata accessor for ModalityXAudioAnalytics);
LABEL_73:
              v53 = &demangling cache variable for type metadata for (ModalityXAudioAnalytics?, ModalityXAudioAnalytics?);
              v54 = v76;
              goto LABEL_40;
            }
            v85 = v124;
            outlined init with take of ModalityXSessionMetadata(v77, v124, type metadata accessor for ModalityXAudioAnalytics);
            specialized static Array<A>.== infix(_:_:)();
            if ((v86 & 1) != 0)
            {
              specialized static Array<A>.== infix(_:_:)();
              if ((v87 & 1) != 0)
              {
                type metadata accessor for UnknownStorage();
                lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                v88 = dispatch thunk of static Equatable.== infix(_:_:)();
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v85, type metadata accessor for ModalityXAudioAnalytics);
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v129, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v84, type metadata accessor for ModalityXAudioAnalytics);
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v76, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
                if ((v88 & 1) == 0)
                  goto LABEL_41;
                goto LABEL_68;
              }
            }
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v85, type metadata accessor for ModalityXAudioAnalytics);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v129, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v84, type metadata accessor for ModalityXAudioAnalytics);
            v54 = v76;
            v53 = &demangling cache variable for type metadata for ModalityXAudioAnalytics?;
LABEL_40:
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v54, v53);
            goto LABEL_41;
          }
        }
        else
        {
          v52 = v116;
          outlined init with copy of ModalityXRecognitionSausage?(v50, (uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          if (__swift_getEnumTagSinglePayload(v51, 1, v16) != 1)
          {
            outlined init with take of ModalityXSessionMetadata(v51, (uint64_t)v18, type metadata accessor for ModalityXRecognitionResult);
            swift_retain();
            swift_retain();
            static ModalityXRecognitionResult.== infix(_:_:)();
            v56 = v55;
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v18, type metadata accessor for ModalityXRecognitionResult);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v26, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v24, type metadata accessor for ModalityXRecognitionResult);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v50, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
            if ((v56 & 1) == 0)
              goto LABEL_41;
            goto LABEL_45;
          }
          swift_retain();
          swift_retain();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v26, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v24, type metadata accessor for ModalityXRecognitionResult);
        }
        v53 = &demangling cache variable for type metadata for (ModalityXRecognitionResult?, ModalityXRecognitionResult?);
        v54 = v50;
        goto LABEL_40;
      }
    }
    else if (!v45)
    {
      goto LABEL_34;
    }
    return 0;
  }
  return result;
}

Swift::Int ModalityXRecognitionCandidate.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXRecognitionCandidate, &lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXRecognitionCandidate()
{
  static ModalityXRecognitionCandidate.protoMessageName.getter();
  return 0xD000000000000017;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXRecognitionCandidate()
{
  ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXRecognitionCandidate()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXRecognitionCandidate()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXRecognitionCandidate()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
  return Message.hash(into:)();
}

uint64_t static ModalityXItnAlignment.protoMessageName.getter()
{
  return 0x6C416E74492E584DLL;
}

uint64_t static ModalityXItnAlignment._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXItnAlignment._protobuf_nameMap, a1);
}

void ModalityXItnAlignment.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_392();
  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_8_1();
          closure #1 in ModalityXItnAlignment.decodeMessage<A>(decoder:)();
          break;
        case 2:
          OUTLINED_FUNCTION_170_0();
          break;
        case 3:
          OUTLINED_FUNCTION_190_0();
          break;
        case 4:
          OUTLINED_FUNCTION_189_0();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_89();
}

uint64_t closure #1 in ModalityXItnAlignment.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXItnAlignment(0);
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

void closure #3 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_165_0();
  OUTLINED_FUNCTION_70();
}

void closure #4 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_165_0();
  OUTLINED_FUNCTION_70();
}

void ModalityXItnAlignment.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = OUTLINED_FUNCTION_30();
  v2 = closure #1 in ModalityXItnAlignment.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    OUTLINED_FUNCTION_221_0(v2, v3, v4, v5, type metadata accessor for ModalityXItnAlignment);
    OUTLINED_FUNCTION_222_0(v6, v7, v8, v9, type metadata accessor for ModalityXItnAlignment);
    OUTLINED_FUNCTION_220_0(v10, v11, v12, v13, type metadata accessor for ModalityXItnAlignment);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

uint64_t closure #1 in ModalityXItnAlignment.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXItnAlignment(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 20) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  return result;
}

void closure #3 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  char v5;

  OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_285_0();
  if ((v5 & 1) == 0)
    OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_70();
}

void closure #4 in ModalityXRecognitionToken.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  char v5;

  OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_285_0();
  if ((v5 & 1) == 0)
    OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_70();
}

void static ModalityXItnAlignment.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  int v13;
  char v14;
  char v15;
  int v16;
  char v17;
  char v18;
  int v19;
  char v20;
  char v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_163();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_15();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_92();
  type metadata accessor for ModalityXItnAlignment(v9);
  OUTLINED_FUNCTION_25_0();
  if ((v11 & 1) != 0)
  {
    if (!v10)
      goto LABEL_15;
  }
  else
  {
    OUTLINED_FUNCTION_29();
    if ((v12 & 1) != 0)
      goto LABEL_15;
  }
  OUTLINED_FUNCTION_25_0();
  if ((v14 & 1) != 0)
  {
    if (!v13)
      goto LABEL_15;
  }
  else
  {
    OUTLINED_FUNCTION_29();
    if ((v15 & 1) != 0)
      goto LABEL_15;
  }
  OUTLINED_FUNCTION_25_0();
  if ((v17 & 1) != 0)
  {
    if (!v16)
      goto LABEL_15;
LABEL_13:
    OUTLINED_FUNCTION_25_0();
    if ((v20 & 1) != 0)
    {
      if (!v19)
        goto LABEL_15;
    }
    else
    {
      OUTLINED_FUNCTION_29();
      if ((v21 & 1) != 0)
        goto LABEL_15;
    }
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v22(v1, v5, v6);
    v22(v0, v3, v6);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_382(v0);
    OUTLINED_FUNCTION_382(v1);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_29();
  if ((v18 & 1) == 0)
    goto LABEL_13;
LABEL_15:
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXItnAlignment.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXItnAlignment, &lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXItnAlignment()
{
  return 0x6C416E74492E584DLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXItnAlignment()
{
  ModalityXItnAlignment.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXItnAlignment()
{
  ModalityXItnAlignment.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, type metadata accessor for ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, type metadata accessor for ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, type metadata accessor for ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
  return Message.hash(into:)();
}

unint64_t static ModalityXAcousticFeature.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(18);
}

uint64_t static ModalityXAcousticFeature._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAcousticFeature._protobuf_nameMap, a1);
}

void ModalityXAcousticFeature.decodeMessage<A>(decoder:)()
{
  ModalityXRecognitionChoice.decodeMessage<A>(decoder:)();
}

void ModalityXAcousticFeature.traverse<A>(visitor:)()
{
  ModalityXRecognitionChoice.traverse<A>(visitor:)();
}

void static ModalityXAcousticFeature.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  char v9;

  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_202_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_66_0();
  if (specialized static Array<A>.== infix(_:_:)(v4, v5))
  {
    v6 = OUTLINED_FUNCTION_242();
    OUTLINED_FUNCTION_25_0();
    if ((v8 & 1) != 0)
    {
      if (!v7)
        goto LABEL_7;
    }
    else
    {
      OUTLINED_FUNCTION_389();
      if ((v9 & 1) != 0)
        goto LABEL_7;
    }
    OUTLINED_FUNCTION_109_0();
    OUTLINED_FUNCTION_83_0(*(int *)(v6 + 20));
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_382(v0);
    OUTLINED_FUNCTION_382(v1);
  }
LABEL_7:
  OUTLINED_FUNCTION_262_0();
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXAcousticFeature.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXAcousticFeature, &lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAcousticFeature()
{
  static ModalityXAcousticFeature.protoMessageName.getter();
  return 0xD000000000000012;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAcousticFeature()
{
  ModalityXAcousticFeature.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAcousticFeature()
{
  ModalityXAcousticFeature.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, type metadata accessor for ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, type metadata accessor for ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, type metadata accessor for ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
  return Message.hash(into:)();
}

unint64_t static ModalityXSpeechRecognitionFeature.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(27);
}

uint64_t static ModalityXSpeechRecognitionFeature._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechRecognitionFeature._protobuf_nameMap, a1);
}

void ModalityXSpeechRecognitionFeature.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v5 = OUTLINED_FUNCTION_17();
  if (!v2)
  {
    v7 = (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0B0];
    while ((v6 & 1) == 0)
    {
      if (v5 == 2)
      {
        closure #2 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(v1, v0, v4, v3, type metadata accessor for ModalityXSpeechRecognitionFeature, v7);
      }
      else if (v5 == 1)
      {
        OUTLINED_FUNCTION_191_0();
      }
      v5 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_64();
}

void closure #1 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_70();
}

void ModalityXSpeechRecognitionFeature.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_95(v1, v2, v3, v4, type metadata accessor for ModalityXSpeechRecognitionFeature);
  if (!v0)
  {
    v5 = OUTLINED_FUNCTION_30();
    closure #1 in ModalityXAcousticFeature.traverse<A>(visitor:)(v5, v6, v7, v8, v9);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

void closure #1 in ModalityXAcousticFeature.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  char v5;

  OUTLINED_FUNCTION_53(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_285_0();
  if ((v5 & 1) == 0)
  {
    OUTLINED_FUNCTION_252_0();
    dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)();
  }
  OUTLINED_FUNCTION_70();
}

void static ModalityXSpeechRecognitionFeature.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  char v11;
  char v12;

  OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_92();
  type metadata accessor for ModalityXSpeechRecognitionFeature(v3);
  OUTLINED_FUNCTION_77();
  if (v6)
  {
    if (!v4)
      goto LABEL_15;
    OUTLINED_FUNCTION_24(v5);
    v9 = v9 && v7 == v8;
    if (!v9 && (OUTLINED_FUNCTION_75() & 1) == 0)
      goto LABEL_15;
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_25_0();
  if ((v11 & 1) != 0)
  {
    if (!v10)
      goto LABEL_15;
  }
  else
  {
    OUTLINED_FUNCTION_389();
    if ((v12 & 1) != 0)
      goto LABEL_15;
  }
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102();
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_159(v0);
LABEL_15:
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXSpeechRecognitionFeature.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXSpeechRecognitionFeature, &lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, (uint64_t)&protocol conformance descriptor for ModalityXSpeechRecognitionFeature);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechRecognitionFeature()
{
  static ModalityXSpeechRecognitionFeature.protoMessageName.getter();
  return 0xD00000000000001BLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechRecognitionFeature()
{
  ModalityXSpeechRecognitionFeature.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechRecognitionFeature()
{
  ModalityXSpeechRecognitionFeature.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechRecognitionFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, type metadata accessor for ModalityXSpeechRecognitionFeature, (uint64_t)&protocol conformance descriptor for ModalityXSpeechRecognitionFeature);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechRecognitionFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, type metadata accessor for ModalityXSpeechRecognitionFeature, (uint64_t)&protocol conformance descriptor for ModalityXSpeechRecognitionFeature);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechRecognitionFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, type metadata accessor for ModalityXSpeechRecognitionFeature, (uint64_t)&protocol conformance descriptor for ModalityXSpeechRecognitionFeature);
  return Message.hash(into:)();
}

unint64_t static ModalityXAudioAnalyticsAcousticFeature.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(32);
}

uint64_t static ModalityXAudioAnalyticsAcousticFeature._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioAnalyticsAcousticFeature._protobuf_nameMap, a1);
}

void ModalityXAudioAnalyticsAcousticFeature.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        OUTLINED_FUNCTION_8_1();
        closure #2 in ModalityXAudioAnalyticsAcousticFeature.decodeMessage<A>(decoder:)();
      }
      else if (v1 == 1)
      {
        OUTLINED_FUNCTION_191_0();
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_70();
}

uint64_t closure #2 in ModalityXAudioAnalyticsAcousticFeature.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  type metadata accessor for ModalityXAcousticFeature(0);
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, type metadata accessor for ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

void ModalityXAudioAnalyticsAcousticFeature.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_178();
  OUTLINED_FUNCTION_95(v1, v2, v3, v4, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature);
  if (!v0)
  {
    v5 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXAudioAnalyticsAcousticFeature.traverse<A>(visitor:)(v5);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

void closure #2 in ModalityXAudioAnalyticsAcousticFeature.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXAcousticFeature(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  outlined init with copy of ModalityXRecognitionSausage?(a1 + *(int *)(v8 + 24), (uint64_t)v4, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXAcousticFeature);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, type metadata accessor for ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXAcousticFeature);
  }
}

void static ModalityXAudioAnalyticsAcousticFeature.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_19();
  v3 = v2;
  v5 = v4;
  v38 = OUTLINED_FUNCTION_15();
  v41 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_144();
  MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)&v38 - v8;
  v9 = OUTLINED_FUNCTION_242();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAcousticFeature?, ModalityXAcousticFeature?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  OUTLINED_FUNCTION_0_0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_314_0();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v38 - v20;
  v22 = type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0);
  v23 = *(int *)(v22 + 20);
  v42 = v5;
  v43 = v3;
  v24 = *(_QWORD *)(v3 + v23 + 8);
  if (!*(_QWORD *)(v5 + v23 + 8))
  {
    if (v24)
      goto LABEL_21;
LABEL_10:
    OUTLINED_FUNCTION_255_0(v42 + *(int *)(v22 + 24), (uint64_t)v21);
    OUTLINED_FUNCTION_255_0(v43 + *(int *)(v22 + 24), v0);
    v28 = v1 + *(int *)(v13 + 48);
    OUTLINED_FUNCTION_255_0((uint64_t)v21, v1);
    OUTLINED_FUNCTION_255_0(v0, v28);
    OUTLINED_FUNCTION_14(v1, 1, v9);
    if (v27)
    {
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v21, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
      OUTLINED_FUNCTION_14(v28, 1, v9);
      if (v27)
      {
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
        goto LABEL_20;
      }
    }
    else
    {
      outlined init with copy of ModalityXRecognitionSausage?(v1, (uint64_t)v18, &demangling cache variable for type metadata for ModalityXAcousticFeature?);
      OUTLINED_FUNCTION_14(v28, 1, v9);
      if (!v29)
      {
        outlined init with take of ModalityXSessionMetadata(v28, (uint64_t)v12, type metadata accessor for ModalityXAcousticFeature);
        static ModalityXAcousticFeature.== infix(_:_:)();
        v31 = v30;
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v12, type metadata accessor for ModalityXAcousticFeature);
        OUTLINED_FUNCTION_410(v0);
        OUTLINED_FUNCTION_410((uint64_t)v21);
        outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v18, type metadata accessor for ModalityXAcousticFeature);
        OUTLINED_FUNCTION_410(v1);
        if ((v31 & 1) == 0)
          goto LABEL_21;
LABEL_20:
        v32 = v41;
        v33 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
        v34 = v38;
        v35 = v39;
        v33(v39, v42, v38);
        v36 = v40;
        v33(v40, v43, v34);
        lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        dispatch thunk of static Equatable.== infix(_:_:)();
        v37 = *(void (**)(char *, uint64_t))(v32 + 8);
        v37(v36, v34);
        v37(v35, v34);
        goto LABEL_21;
      }
      OUTLINED_FUNCTION_288(v0);
      OUTLINED_FUNCTION_288((uint64_t)v21);
      outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v18, type metadata accessor for ModalityXAcousticFeature);
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v1, &demangling cache variable for type metadata for (ModalityXAcousticFeature?, ModalityXAcousticFeature?));
    goto LABEL_21;
  }
  if (v24)
  {
    OUTLINED_FUNCTION_24(v5 + v23);
    v27 = v27 && v25 == v26;
    if (v27 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_10;
  }
LABEL_21:
  OUTLINED_FUNCTION_3_0();
}

Swift::Int ModalityXAudioAnalyticsAcousticFeature.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, &lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalyticsAcousticFeature);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAudioAnalyticsAcousticFeature()
{
  static ModalityXAudioAnalyticsAcousticFeature.protoMessageName.getter();
  return 0xD000000000000020;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAudioAnalyticsAcousticFeature()
{
  ModalityXAudioAnalyticsAcousticFeature.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAudioAnalyticsAcousticFeature()
{
  ModalityXAudioAnalyticsAcousticFeature.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAudioAnalyticsAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalyticsAcousticFeature);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAudioAnalyticsAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalyticsAcousticFeature);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioAnalyticsAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalyticsAcousticFeature);
  return Message.hash(into:)();
}

unint64_t static ModalityXAudioAnalytics.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(17);
}

uint64_t static ModalityXAudioAnalytics._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioAnalytics._protobuf_nameMap, a1);
}

void ModalityXAudioAnalytics.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (v1 == 2)
      {
        OUTLINED_FUNCTION_8_1();
        closure #2 in ModalityXChoiceAlignment.decodeMessage<A>(decoder:)();
      }
      else if (v1 == 1)
      {
        OUTLINED_FUNCTION_8_1();
        closure #1 in ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_54();
}

void closure #1 in ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  OUTLINED_FUNCTION_245_0();
  OUTLINED_FUNCTION_125(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_146_0();
  dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
  OUTLINED_FUNCTION_54();
}

void closure #2 in ModalityXChoiceAlignment.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  OUTLINED_FUNCTION_245_0();
  OUTLINED_FUNCTION_125(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_146_0();
  OUTLINED_FUNCTION_185_0();
  dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
  OUTLINED_FUNCTION_54();
}

void ModalityXAudioAnalytics.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_296_0();
  OUTLINED_FUNCTION_188_0();
  if (!v2
    || (type metadata accessor for ModalityXSpeechRecognitionFeature(0),
        lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, type metadata accessor for ModalityXSpeechRecognitionFeature, (uint64_t)&protocol conformance descriptor for ModalityXSpeechRecognitionFeature), OUTLINED_FUNCTION_60_0(), !v0))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v1 + 8) + 16)
      || (type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(0),
          lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalyticsAcousticFeature), OUTLINED_FUNCTION_60_0(), !v0))
    {
      type metadata accessor for ModalityXAudioAnalytics(0);
      OUTLINED_FUNCTION_59_0();
    }
  }
  OUTLINED_FUNCTION_142();
}

void static ModalityXAudioAnalytics.== infix(_:_:)()
{
  static ModalityXChoiceAlignment.== infix(_:_:)();
}

Swift::Int ModalityXAudioAnalytics.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXAudioAnalytics, &lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAudioAnalytics()
{
  static ModalityXAudioAnalytics.protoMessageName.getter();
  return 0xD000000000000011;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAudioAnalytics()
{
  ModalityXAudioAnalytics.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAudioAnalytics()
{
  ModalityXAudioAnalytics.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAudioAnalytics()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAudioAnalytics()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioAnalytics()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
  return Message.hash(into:)();
}

unint64_t static ModalityXFinalSpeechRecognitionResponse.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(33);
}

uint64_t static ModalityXFinalSpeechRecognitionResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXFinalSpeechRecognitionResponse._protobuf_nameMap, a1);
}

uint64_t ModalityXFinalSpeechRecognitionResponse._StorageClass.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  *(_DWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_BYTE *)(v0 + 52) = 1;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = 0;
  v1 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  v2 = type metadata accessor for ModalityXRecognitionResult(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes) = 5;
  v3 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  v4 = type metadata accessor for ModalityXAudioAnalytics(0);
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection) = 4;
  v5 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  *v6 = 0;
  v6[1] = 0;
  v7 = v0
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  v8 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
  v9 = (_QWORD *)(v0
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  *v9 = 0;
  v9[1] = 0;
  *(_BYTE *)(v0
           + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p) = 2;
  return v0;
}

uint64_t ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _BYTE *v65;
  uint64_t v66;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  MEMORY[0x24BDAC7A8](v3);
  v66 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  MEMORY[0x24BDAC7A8](v5);
  v62 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  MEMORY[0x24BDAC7A8](v7);
  v56 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_BYTE *)(v1 + 52) = 1;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  v9 = v1
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  v55 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  v10 = type metadata accessor for ModalityXRecognitionResult(0);
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  v11 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  *v11 = 5;
  v12 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  v57 = v11;
  v58 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  v13 = type metadata accessor for ModalityXAudioAnalytics(0);
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  v14 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  *v14 = 4;
  v15 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
  v59 = v14;
  v60 = v15;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  v61 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  *v16 = 0;
  v16[1] = 0;
  v17 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  v63 = v1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  v18 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  __swift_storeEnumTagSinglePayload(v17, 1, 1, v18);
  v19 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  v64 = (_QWORD *)(v1
                 + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  *v19 = 0;
  v19[1] = 0;
  v65 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p) = 2;
  swift_beginAccess();
  v20 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v20;
  *(_QWORD *)(v1 + 24) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v22 = *(_QWORD *)(a1 + 32);
  v23 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = v22;
  *(_QWORD *)(v1 + 40) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v22) = *(_DWORD *)(a1 + 48);
  LOBYTE(v23) = *(_BYTE *)(a1 + 52);
  swift_beginAccess();
  *(_DWORD *)(v1 + 48) = v22;
  *(_BYTE *)(v1 + 52) = v23;
  swift_beginAccess();
  v24 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = v24;
  *(_QWORD *)(v1 + 64) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  swift_beginAccess();
  v27 = v26;
  v28 = v56;
  outlined init with copy of ModalityXRecognitionSausage?(v27, v56, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  v29 = v55;
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v28, v29, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  swift_endAccess();
  v30 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  swift_beginAccess();
  LOBYTE(v24) = *v30;
  v31 = v57;
  swift_beginAccess();
  *v31 = v24;
  v32 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  swift_beginAccess();
  v33 = v32;
  v34 = v62;
  outlined init with copy of ModalityXRecognitionSausage?(v33, v62, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  v35 = v58;
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v34, v35, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  swift_endAccess();
  v36 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
  swift_beginAccess();
  LOBYTE(v24) = *v36;
  v37 = v59;
  swift_beginAccess();
  *v37 = v24;
  v38 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage);
  swift_beginAccess();
  v39 = *v38;
  LOBYTE(v38) = *((_BYTE *)v38 + 8);
  v40 = v60;
  swift_beginAccess();
  *(_QWORD *)v40 = v39;
  *(_BYTE *)(v40 + 8) = (_BYTE)v38;
  v41 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
  swift_beginAccess();
  v42 = *v41;
  v43 = v41[1];
  v44 = v61;
  swift_beginAccess();
  *v44 = v42;
  v44[1] = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a1
      + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  swift_beginAccess();
  v46 = v66;
  outlined init with copy of ModalityXRecognitionSausage?(v45, v66, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  v47 = v63;
  swift_beginAccess();
  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v46, v47, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  swift_endAccess();
  v48 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
  swift_beginAccess();
  v50 = *v48;
  v49 = v48[1];
  v51 = v64;
  swift_beginAccess();
  *v51 = v50;
  v51[1] = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  swift_beginAccess();
  LOBYTE(v52) = *v52;
  swift_release();
  v53 = v65;
  swift_beginAccess();
  *v53 = (_BYTE)v52;
  return v1;
}

uint64_t ModalityXFinalSpeechRecognitionResponse._StorageClass.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  swift_bridgeObjectRelease();
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v0+ OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ModalityXFinalSpeechRecognitionResponse._StorageClass.__deallocating_deinit()
{
  return ModalityXBeginRequest._StorageClass.__deallocating_deinit((void (*)(void))ModalityXFinalSpeechRecognitionResponse._StorageClass.deinit);
}

void ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)()
{
  ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
}

void closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t (*v22)();

  v9 = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(v9)
      {
        case 1:
          closure #1 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 2:
          closure #2 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 3:
          closure #3 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 4:
          closure #4 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 5:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
          v16 = type metadata accessor for ModalityXRecognitionResult;
          goto LABEL_16;
        case 6:
          v17 = a2;
          v18 = a1;
          v19 = a3;
          v20 = a4;
          v21 = &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes;
          v22 = lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes;
          goto LABEL_13;
        case 7:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
          v16 = type metadata accessor for ModalityXAudioAnalytics;
          goto LABEL_16;
        case 8:
          v17 = a2;
          v18 = a1;
          v19 = a3;
          v20 = a4;
          v21 = &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection;
          v22 = lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult;
LABEL_13:
          closure #8 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(v17, v18, v19, v20, (uint64_t)v21, (void (*)(uint64_t))v22);
          break;
        case 9:
          closure #7 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 10:
        case 12:
          closure #6 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)();
          break;
        case 11:
          v11 = a2;
          v12 = a1;
          v13 = a3;
          v14 = a4;
          v15 = &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
          v16 = type metadata accessor for ModalityXLatnnMitigatorResult;
LABEL_16:
          closure #5 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(v11, v12, v13, v14, (uint64_t)v15, (void (*)(_QWORD))v16);
          break;
        case 13:
          closure #13 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      v9 = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
}

void closure #1 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_313_0();
  OUTLINED_FUNCTION_131_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_298();
}

void closure #2 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_313_0();
  OUTLINED_FUNCTION_131_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_298();
}

void closure #3 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_313_0();
  OUTLINED_FUNCTION_131_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_165_0();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_298();
}

void closure #4 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_313_0();
  OUTLINED_FUNCTION_131_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_298();
}

void closure #8 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v7;

  v7 = OUTLINED_FUNCTION_7_0();
  a6(v7);
  dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_267();
}

void closure #7 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_313_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_252_0();
  dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_298();
}

uint64_t closure #5 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD))
{
  OUTLINED_FUNCTION_7_0();
  a6(0);
  OUTLINED_FUNCTION_146_0();
  OUTLINED_FUNCTION_185_0();
  dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
  return OUTLINED_FUNCTION_191();
}

void closure #6 in closure #1 in ModalityXRecognitionCandidate.decodeMessage<A>(decoder:)()
{
  OUTLINED_FUNCTION_313_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_298();
}

uint64_t closure #13 in closure #1 in ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)()
{
  swift_beginAccess();
  dispatch thunk of Decoder.decodeSingularBoolField(value:)();
  return swift_endAccess();
}

uint64_t ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, (uint64_t)type metadata accessor for ModalityXFinalSpeechRecognitionResponse, closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:));
}

uint64_t ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(_QWORD);
  uint64_t v11;
  uint64_t result;

  OUTLINED_FUNCTION_178();
  v10(0);
  v11 = swift_retain();
  a5(v11, v8, v7, v5);
  result = swift_release();
  if (!v6)
    return OUTLINED_FUNCTION_266_0();
  return result;
}

void closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  closure #1 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
  if (!v4)
  {
    closure #2 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #3 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1);
    closure #4 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #5 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
    closure #6 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
    closure #7 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
    closure #8 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(a1, a2, a3, a4, &OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection, (void (*)(uint64_t))lazy protocol witness table accessor for type ModalityXWatermarkDetectionResult and conformance ModalityXWatermarkDetectionResult);
    closure #7 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)();
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #11 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
    closure #7 in closure #1 in ModalityXBeginRequest.traverse<A>(visitor:)();
    closure #13 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1);
  }
}

void closure #1 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_148_0();
  OUTLINED_FUNCTION_7_0();
  if (*(_QWORD *)(v0 + 24))
  {
    OUTLINED_FUNCTION_227_0();
    OUTLINED_FUNCTION_143();
    OUTLINED_FUNCTION_213_0();
  }
  OUTLINED_FUNCTION_192();
}

void closure #2 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_148_0();
  OUTLINED_FUNCTION_7_0();
  if (*(_QWORD *)(v0 + 40))
  {
    OUTLINED_FUNCTION_227_0();
    OUTLINED_FUNCTION_143();
    OUTLINED_FUNCTION_213_0();
  }
  OUTLINED_FUNCTION_192();
}

void closure #3 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1)
{
  OUTLINED_FUNCTION_7_0();
  if ((*(_BYTE *)(a1 + 52) & 1) == 0)
    OUTLINED_FUNCTION_117_0();
  OUTLINED_FUNCTION_192();
}

void closure #4 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_148_0();
  OUTLINED_FUNCTION_7_0();
  if (*(_QWORD *)(v0 + 64))
  {
    OUTLINED_FUNCTION_227_0();
    OUTLINED_FUNCTION_143();
    OUTLINED_FUNCTION_213_0();
  }
  OUTLINED_FUNCTION_192();
}

void closure #5 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXRecognitionResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v8, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXRecognitionResult);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, type metadata accessor for ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXRecognitionResult);
  }
}

uint64_t closure #6 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t result;

  v1 = (_BYTE *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
  result = swift_beginAccess();
  if (*v1 != 5)
  {
    lazy protocol witness table accessor for type ModalityXLanguageProfileRecreateCodes and conformance ModalityXLanguageProfileRecreateCodes();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

void closure #7 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXAudioAnalytics(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v8, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXAudioAnalytics);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXAudioAnalytics);
  }
}

uint64_t closure #8 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, void (*a6)(uint64_t))
{
  _BYTE *v7;
  uint64_t result;

  v7 = (_BYTE *)(a1 + *a5);
  result = OUTLINED_FUNCTION_7_0();
  if (*v7 != 4)
  {
    a6(result);
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

void closure #7 in closure #1 in ModalityXRecognitionCandidate.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_297();
  v2 = v0 + v1;
  OUTLINED_FUNCTION_7_0();
  if ((*(_BYTE *)(v2 + 8) & 1) == 0)
  {
    OUTLINED_FUNCTION_252_0();
    dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  }
  OUTLINED_FUNCTION_192();
}

void closure #11 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1
     + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
  swift_beginAccess();
  outlined init with copy of ModalityXRecognitionSausage?(v8, (uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  }
  else
  {
    outlined init with take of ModalityXSessionMetadata((uint64_t)v4, (uint64_t)v7, type metadata accessor for ModalityXLatnnMitigatorResult);
    lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
    dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v7, type metadata accessor for ModalityXLatnnMitigatorResult);
  }
}

uint64_t closure #13 in closure #1 in ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(uint64_t a1)
{
  _BYTE *v1;
  uint64_t result;

  v1 = (_BYTE *)(a1
               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
  result = swift_beginAccess();
  if (*v1 != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #1 in static ModalityXFinalSpeechRecognitionResponse.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v37;
  int v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  char v55;
  char v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 *v67;
  int v68;
  uint64_t v69;
  unsigned __int8 *v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  char v76;
  uint64_t v77;
  double v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  BOOL v104;
  unsigned __int8 *v105;
  int v106;
  unsigned __int8 *v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;

  v114 = type metadata accessor for ModalityXLatnnMitigatorResult(0);
  MEMORY[0x24BDAC7A8](v114);
  v111 = (uint64_t)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXLatnnMitigatorResult?, ModalityXLatnnMitigatorResult?));
  MEMORY[0x24BDAC7A8](v113);
  v115 = (uint64_t)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v112 = (uint64_t)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v116 = (uint64_t)&v109 - v9;
  v121 = type metadata accessor for ModalityXAudioAnalytics(0);
  MEMORY[0x24BDAC7A8](v121);
  v117 = (uint64_t)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXAudioAnalytics?, ModalityXAudioAnalytics?));
  MEMORY[0x24BDAC7A8](v119);
  v120 = (uint64_t)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAudioAnalytics?);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v118 = (uint64_t)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v122 = (char *)&v109 - v15;
  v16 = type metadata accessor for ModalityXRecognitionResult(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXRecognitionResult?, ModalityXRecognitionResult?));
  MEMORY[0x24BDAC7A8](v19);
  v123 = (uint64_t)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionResult?);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v109 - v25;
  swift_beginAccess();
  v28 = *(_QWORD *)(a1 + 16);
  v27 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v29 = *(_QWORD *)(a2 + 24);
  if (!v27)
  {
    if (v29)
      return 0;
    goto LABEL_10;
  }
  if (!v29)
    return 0;
  v30 = v28 == *(_QWORD *)(a2 + 16) && v27 == v29;
  if (v30 || (v31 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v31 & 1) != 0))
  {
LABEL_10:
    swift_beginAccess();
    v33 = *(_QWORD *)(a1 + 32);
    v34 = *(_QWORD *)(a1 + 40);
    swift_beginAccess();
    v35 = *(_QWORD *)(a2 + 40);
    if (v34)
    {
      if (!v35)
        return 0;
      if (v33 != *(_QWORD *)(a2 + 32) || v34 != v35)
      {
        v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
        result = 0;
        if ((v37 & 1) == 0)
          return result;
      }
    }
    else if (v35)
    {
      return 0;
    }
    swift_beginAccess();
    v38 = *(_DWORD *)(a1 + 48);
    v109 = a1;
    v39 = *(_BYTE *)(a1 + 52);
    swift_beginAccess();
    v110 = a2;
    v40 = *(_BYTE *)(a2 + 52);
    if ((v39 & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 52))
        return 0;
    }
    else
    {
      if (v38 != *(_DWORD *)(a2 + 48))
        v40 = 1;
      if ((v40 & 1) != 0)
        return 0;
    }
    v41 = v109;
    swift_beginAccess();
    v42 = *(_QWORD *)(v41 + 56);
    v43 = *(_QWORD *)(v41 + 64);
    v44 = v110;
    swift_beginAccess();
    v45 = *(_QWORD *)(v44 + 64);
    if (v43)
    {
      if (v45)
      {
        if (v42 != *(_QWORD *)(v44 + 56) || v43 != v45)
        {
          v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
          result = 0;
          if ((v47 & 1) == 0)
            return result;
        }
LABEL_34:
        v48 = v41
            + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
        swift_beginAccess();
        outlined init with copy of ModalityXRecognitionSausage?(v48, (uint64_t)v26, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        v49 = v110
            + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__recognitionResult;
        swift_beginAccess();
        v50 = v123;
        v51 = v123 + *(int *)(v19 + 48);
        outlined init with copy of ModalityXRecognitionSausage?((uint64_t)v26, v123, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        outlined init with copy of ModalityXRecognitionSausage?(v49, v51, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
        if (__swift_getEnumTagSinglePayload(v50, 1, v16) == 1)
        {
          v52 = v109;
          swift_retain();
          swift_retain();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v26, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          if (__swift_getEnumTagSinglePayload(v51, 1, v16) == 1)
          {
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v50, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
LABEL_44:
            v57 = (unsigned __int8 *)(v52
                                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
            swift_beginAccess();
            v58 = *v57;
            v59 = (unsigned __int8 *)(v110
                                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__langProfileRecreateCodes);
            swift_beginAccess();
            v60 = *v59;
            if (v58 == 5)
            {
              v61 = (uint64_t)v122;
              if (v60 != 5)
                goto LABEL_41;
            }
            else
            {
              v61 = (uint64_t)v122;
              if (v60 == 5 || v58 != v60)
                goto LABEL_41;
            }
            v62 = v52
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
            swift_beginAccess();
            outlined init with copy of ModalityXRecognitionSausage?(v62, v61, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            v63 = v110
                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__audioAnalytics;
            swift_beginAccess();
            v64 = v120;
            v65 = v120 + *(int *)(v119 + 48);
            outlined init with copy of ModalityXRecognitionSausage?(v61, v120, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            outlined init with copy of ModalityXRecognitionSausage?(v63, v65, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            v66 = v121;
            if (__swift_getEnumTagSinglePayload(v64, 1, v121) == 1)
            {
              outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v61, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
              if (__swift_getEnumTagSinglePayload(v65, 1, v66) == 1)
              {
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v64, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
LABEL_52:
                v67 = (unsigned __int8 *)(v52
                                        + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
                swift_beginAccess();
                v68 = *v67;
                v69 = v110;
                v70 = (unsigned __int8 *)(v110
                                        + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkDetection);
                swift_beginAccess();
                v71 = *v70;
                if (v68 == 4)
                {
                  if (v71 != 4)
                    goto LABEL_41;
                }
                else if (v71 == 4 || v68 != v71)
                {
                  goto LABEL_41;
                }
                v77 = v52
                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
                swift_beginAccess();
                v78 = *(double *)v77;
                v79 = v69;
                v80 = *(_BYTE *)(v77 + 8);
                v81 = v79
                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__watermarkPeakAverage;
                swift_beginAccess();
                if ((v80 & 1) != 0)
                {
                  if ((*(_BYTE *)(v81 + 8) & 1) == 0)
                    goto LABEL_41;
                }
                else if ((*(_BYTE *)(v81 + 8) & 1) != 0 || v78 != *(double *)v81)
                {
                  goto LABEL_41;
                }
                v82 = (uint64_t *)(v52
                                + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
                swift_beginAccess();
                v83 = *v82;
                v84 = v82[1];
                v85 = v110;
                v86 = (_QWORD *)(v110
                               + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__language);
                swift_beginAccess();
                v87 = v86[1];
                if (v84)
                {
                  if (!v87)
                    goto LABEL_41;
                  v88 = v83 == *v86 && v84 == v87;
                  if (!v88 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                    goto LABEL_41;
                }
                else if (v87)
                {
                  goto LABEL_41;
                }
                v89 = v52
                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
                swift_beginAccess();
                v90 = v116;
                outlined init with copy of ModalityXRecognitionSausage?(v89, v116, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                v91 = v85
                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__latnnMitigatorResult;
                swift_beginAccess();
                v92 = v115;
                v93 = v115 + *(int *)(v113 + 48);
                outlined init with copy of ModalityXRecognitionSausage?(v90, v115, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                outlined init with copy of ModalityXRecognitionSausage?(v91, v93, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                v94 = v114;
                if (__swift_getEnumTagSinglePayload(v92, 1, v114) == 1)
                {
                  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v116, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  if (__swift_getEnumTagSinglePayload(v93, 1, v94) == 1)
                  {
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v92, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    goto LABEL_87;
                  }
                }
                else
                {
                  outlined init with copy of ModalityXRecognitionSausage?(v92, v112, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  if (__swift_getEnumTagSinglePayload(v93, 1, v94) != 1)
                  {
                    v95 = v111;
                    outlined init with take of ModalityXSessionMetadata(v93, v111, type metadata accessor for ModalityXLatnnMitigatorResult);
                    v96 = v112;
                    static ModalityXLatnnMitigatorResult.== infix(_:_:)();
                    v98 = v97;
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v95, type metadata accessor for ModalityXLatnnMitigatorResult);
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v116, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v96, type metadata accessor for ModalityXLatnnMitigatorResult);
                    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v115, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                    if ((v98 & 1) == 0)
                      goto LABEL_41;
LABEL_87:
                    v99 = (uint64_t *)(v109
                                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
                    swift_beginAccess();
                    v100 = *v99;
                    v101 = v99[1];
                    v102 = (_QWORD *)(v110
                                    + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__requestLocale);
                    swift_beginAccess();
                    v103 = v102[1];
                    if (v101)
                    {
                      if (!v103)
                        goto LABEL_41;
                      v104 = v100 == *v102 && v101 == v103;
                      if (!v104 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                        goto LABEL_41;
                    }
                    else if (v103)
                    {
                      goto LABEL_41;
                    }
                    v105 = (unsigned __int8 *)(v109
                                             + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
                    swift_beginAccess();
                    v106 = *v105;
                    swift_release();
                    v107 = (unsigned __int8 *)(v110
                                             + OBJC_IVAR____TtCV16ModalityXObjects39ModalityXFinalSpeechRecognitionResponseP33_75A932E5D6A2D682264742982DE931B513_StorageClass__hasResult_p);
                    swift_beginAccess();
                    v108 = *v107;
                    swift_release();
                    if (v106 == 2)
                    {
                      if (v108 != 2)
                        return 0;
                    }
                    else if (v108 == 2 || ((((v108 & 1) == 0) ^ v106) & 1) == 0)
                    {
                      return 0;
                    }
                    return 1;
                  }
                  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v116, &demangling cache variable for type metadata for ModalityXLatnnMitigatorResult?);
                  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v112, type metadata accessor for ModalityXLatnnMitigatorResult);
                  v92 = v115;
                }
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v92, &demangling cache variable for type metadata for (ModalityXLatnnMitigatorResult?, ModalityXLatnnMitigatorResult?));
LABEL_41:
                swift_release();
                swift_release();
                return 0;
              }
              goto LABEL_57;
            }
            v72 = v118;
            outlined init with copy of ModalityXRecognitionSausage?(v64, v118, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            if (__swift_getEnumTagSinglePayload(v65, 1, v66) == 1)
            {
              outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v61, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
              outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v72, type metadata accessor for ModalityXAudioAnalytics);
LABEL_57:
              v53 = &demangling cache variable for type metadata for (ModalityXAudioAnalytics?, ModalityXAudioAnalytics?);
              v54 = v64;
              goto LABEL_40;
            }
            v73 = v117;
            outlined init with take of ModalityXSessionMetadata(v65, v117, type metadata accessor for ModalityXAudioAnalytics);
            specialized static Array<A>.== infix(_:_:)();
            if ((v74 & 1) != 0)
            {
              specialized static Array<A>.== infix(_:_:)();
              if ((v75 & 1) != 0)
              {
                type metadata accessor for UnknownStorage();
                lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                v76 = dispatch thunk of static Equatable.== infix(_:_:)();
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v73, type metadata accessor for ModalityXAudioAnalytics);
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v61, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v72, type metadata accessor for ModalityXAudioAnalytics);
                outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v64, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
                if ((v76 & 1) == 0)
                  goto LABEL_41;
                goto LABEL_52;
              }
            }
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v73, type metadata accessor for ModalityXAudioAnalytics);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v61, &demangling cache variable for type metadata for ModalityXAudioAnalytics?);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload(v72, type metadata accessor for ModalityXAudioAnalytics);
            v54 = v64;
            v53 = &demangling cache variable for type metadata for ModalityXAudioAnalytics?;
LABEL_40:
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v54, v53);
            goto LABEL_41;
          }
        }
        else
        {
          v52 = v109;
          outlined init with copy of ModalityXRecognitionSausage?(v50, (uint64_t)v24, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          if (__swift_getEnumTagSinglePayload(v51, 1, v16) != 1)
          {
            outlined init with take of ModalityXSessionMetadata(v51, (uint64_t)v18, type metadata accessor for ModalityXRecognitionResult);
            swift_retain();
            swift_retain();
            static ModalityXRecognitionResult.== infix(_:_:)();
            v56 = v55;
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v18, type metadata accessor for ModalityXRecognitionResult);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v26, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v24, type metadata accessor for ModalityXRecognitionResult);
            outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v50, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
            if ((v56 & 1) == 0)
              goto LABEL_41;
            goto LABEL_44;
          }
          swift_retain();
          swift_retain();
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?((uint64_t)v26, &demangling cache variable for type metadata for ModalityXRecognitionResult?);
          outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v24, type metadata accessor for ModalityXRecognitionResult);
        }
        v53 = &demangling cache variable for type metadata for (ModalityXRecognitionResult?, ModalityXRecognitionResult?);
        v54 = v50;
        goto LABEL_40;
      }
    }
    else if (!v45)
    {
      goto LABEL_34;
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ModalityXRecognitionToken(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionToken);
}

uint64_t type metadata accessor for ModalityXRecognitionPhraseTokens(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionPhraseTokens);
}

uint64_t type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionPhraseTokensAlternatives);
}

uint64_t type metadata accessor for ModalityXRecognitionSausage(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionSausage);
}

uint64_t type metadata accessor for ModalityXSetAlternateRecognitionSausage(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSetAlternateRecognitionSausage);
}

uint64_t type metadata accessor for ModalityXRecognitionChoice(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionChoice);
}

uint64_t type metadata accessor for ModalityXRepeatedItnAlignment(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRepeatedItnAlignment);
}

uint64_t type metadata accessor for ModalityXChoiceAlignment(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXChoiceAlignment);
}

uint64_t type metadata accessor for ModalityXRecognitionResult(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionResult);
}

uint64_t type metadata accessor for ModalityXLatnnMitigatorResult(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXLatnnMitigatorResult);
}

uint64_t type metadata accessor for ModalityXRecognitionCandidate._StorageClass(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXRecognitionCandidate._StorageClass);
}

void outlined init with copy of ModalityXRecognitionSausage(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_360(a1, a2, a3);
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for ModalityXAudioAnalytics(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAudioAnalytics);
}

void outlined init with take of ModalityXRecognitionResult?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_359(a1, a2, a3);
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for ModalityXItnAlignment(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXItnAlignment);
}

uint64_t type metadata accessor for ModalityXAcousticFeature(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAcousticFeature);
}

uint64_t type metadata accessor for ModalityXSpeechRecognitionFeature(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechRecognitionFeature);
}

uint64_t type metadata accessor for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAudioAnalyticsAcousticFeature);
}

void outlined init with copy of ModalityXRecognitionSausage?(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_359(a1, a2, a3);
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXFinalSpeechRecognitionResponse._StorageClass);
}

Swift::Int ModalityXFinalSpeechRecognitionResponse.hashValue.getter()
{
  return ModalityXRecognitionToken.hashValue.getter(type metadata accessor for ModalityXFinalSpeechRecognitionResponse, &lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
}

Swift::Int ModalityXRecognitionToken.hashValue.getter(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  Hasher.init(_seed:)();
  a1(0);
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(a2, a1, a3);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXFinalSpeechRecognitionResponse()
{
  static ModalityXFinalSpeechRecognitionResponse.protoMessageName.getter();
  return 0xD000000000000021;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXFinalSpeechRecognitionResponse()
{
  ModalityXFinalSpeechRecognitionResponse.decodeMessage<A>(decoder:)();
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXFinalSpeechRecognitionResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXFinalSpeechRecognitionResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXFinalSpeechRecognitionResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXFinalSpeechRecognitionResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXFinalSpeechRecognitionResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
  return Message.hash(into:)();
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionToken()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, type metadata accessor for ModalityXRecognitionToken, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionToken);
}

void base witness table accessor for Message in ModalityXRecognitionToken()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, type metadata accessor for ModalityXRecognitionToken, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionToken);
}

void base witness table accessor for Hashable in ModalityXRecognitionToken()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, type metadata accessor for ModalityXRecognitionToken, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionToken);
}

void base witness table accessor for Equatable in ModalityXRecognitionToken()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionToken and conformance ModalityXRecognitionToken, type metadata accessor for ModalityXRecognitionToken, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionToken);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionPhraseTokens()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, type metadata accessor for ModalityXRecognitionPhraseTokens, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokens);
}

void base witness table accessor for Message in ModalityXRecognitionPhraseTokens()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, type metadata accessor for ModalityXRecognitionPhraseTokens, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokens);
}

void base witness table accessor for Hashable in ModalityXRecognitionPhraseTokens()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, type metadata accessor for ModalityXRecognitionPhraseTokens, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokens);
}

void base witness table accessor for Equatable in ModalityXRecognitionPhraseTokens()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokens and conformance ModalityXRecognitionPhraseTokens, type metadata accessor for ModalityXRecognitionPhraseTokens, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokens);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionPhraseTokensAlternatives()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives);
}

void base witness table accessor for Message in ModalityXRecognitionPhraseTokensAlternatives()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives);
}

void base witness table accessor for Hashable in ModalityXRecognitionPhraseTokensAlternatives()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives);
}

void base witness table accessor for Equatable in ModalityXRecognitionPhraseTokensAlternatives()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionPhraseTokensAlternatives and conformance ModalityXRecognitionPhraseTokensAlternatives, type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionPhraseTokensAlternatives);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
}

void base witness table accessor for Message in ModalityXRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
}

void base witness table accessor for Hashable in ModalityXRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
}

void base witness table accessor for Equatable in ModalityXRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionSausage and conformance ModalityXRecognitionSausage, type metadata accessor for ModalityXRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionSausage);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXSetAlternateRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, type metadata accessor for ModalityXSetAlternateRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXSetAlternateRecognitionSausage);
}

void base witness table accessor for Message in ModalityXSetAlternateRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, type metadata accessor for ModalityXSetAlternateRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXSetAlternateRecognitionSausage);
}

void base witness table accessor for Hashable in ModalityXSetAlternateRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, type metadata accessor for ModalityXSetAlternateRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXSetAlternateRecognitionSausage);
}

void base witness table accessor for Equatable in ModalityXSetAlternateRecognitionSausage()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSetAlternateRecognitionSausage and conformance ModalityXSetAlternateRecognitionSausage, type metadata accessor for ModalityXSetAlternateRecognitionSausage, (uint64_t)&protocol conformance descriptor for ModalityXSetAlternateRecognitionSausage);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionChoice()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, type metadata accessor for ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
}

void base witness table accessor for Message in ModalityXRecognitionChoice()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, type metadata accessor for ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
}

void base witness table accessor for Hashable in ModalityXRecognitionChoice()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, type metadata accessor for ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
}

void base witness table accessor for Equatable in ModalityXRecognitionChoice()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionChoice and conformance ModalityXRecognitionChoice, type metadata accessor for ModalityXRecognitionChoice, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionChoice);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRepeatedItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, type metadata accessor for ModalityXRepeatedItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXRepeatedItnAlignment);
}

void base witness table accessor for Message in ModalityXRepeatedItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, type metadata accessor for ModalityXRepeatedItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXRepeatedItnAlignment);
}

void base witness table accessor for Hashable in ModalityXRepeatedItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, type metadata accessor for ModalityXRepeatedItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXRepeatedItnAlignment);
}

void base witness table accessor for Equatable in ModalityXRepeatedItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRepeatedItnAlignment and conformance ModalityXRepeatedItnAlignment, type metadata accessor for ModalityXRepeatedItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXRepeatedItnAlignment);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXChoiceAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, type metadata accessor for ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
}

void base witness table accessor for Message in ModalityXChoiceAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, type metadata accessor for ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
}

void base witness table accessor for Hashable in ModalityXChoiceAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, type metadata accessor for ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
}

void base witness table accessor for Equatable in ModalityXChoiceAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXChoiceAlignment and conformance ModalityXChoiceAlignment, type metadata accessor for ModalityXChoiceAlignment, (uint64_t)&protocol conformance descriptor for ModalityXChoiceAlignment);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, type metadata accessor for ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
}

void base witness table accessor for Message in ModalityXRecognitionResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, type metadata accessor for ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
}

void base witness table accessor for Hashable in ModalityXRecognitionResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, type metadata accessor for ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
}

void base witness table accessor for Equatable in ModalityXRecognitionResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionResult and conformance ModalityXRecognitionResult, type metadata accessor for ModalityXRecognitionResult, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionResult);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXLatnnMitigatorResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
}

void base witness table accessor for Message in ModalityXLatnnMitigatorResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
}

void base witness table accessor for Hashable in ModalityXLatnnMitigatorResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
}

void base witness table accessor for Equatable in ModalityXLatnnMitigatorResult()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXLatnnMitigatorResult and conformance ModalityXLatnnMitigatorResult, type metadata accessor for ModalityXLatnnMitigatorResult, (uint64_t)&protocol conformance descriptor for ModalityXLatnnMitigatorResult);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXRecognitionCandidate()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
}

void base witness table accessor for Message in ModalityXRecognitionCandidate()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
}

void base witness table accessor for Hashable in ModalityXRecognitionCandidate()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
}

void base witness table accessor for Equatable in ModalityXRecognitionCandidate()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXRecognitionCandidate and conformance ModalityXRecognitionCandidate, type metadata accessor for ModalityXRecognitionCandidate, (uint64_t)&protocol conformance descriptor for ModalityXRecognitionCandidate);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, type metadata accessor for ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
}

void base witness table accessor for Message in ModalityXItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, type metadata accessor for ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
}

void base witness table accessor for Hashable in ModalityXItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, type metadata accessor for ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
}

void base witness table accessor for Equatable in ModalityXItnAlignment()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXItnAlignment and conformance ModalityXItnAlignment, type metadata accessor for ModalityXItnAlignment, (uint64_t)&protocol conformance descriptor for ModalityXItnAlignment);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, type metadata accessor for ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
}

void base witness table accessor for Message in ModalityXAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, type metadata accessor for ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
}

void base witness table accessor for Hashable in ModalityXAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, type metadata accessor for ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
}

void base witness table accessor for Equatable in ModalityXAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAcousticFeature and conformance ModalityXAcousticFeature, type metadata accessor for ModalityXAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAcousticFeature);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechRecognitionFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, type metadata accessor for ModalityXSpeechRecognitionFeature, (uint64_t)&protocol conformance descriptor for ModalityXSpeechRecognitionFeature);
}

void base witness table accessor for Message in ModalityXSpeechRecognitionFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, type metadata accessor for ModalityXSpeechRecognitionFeature, (uint64_t)&protocol conformance descriptor for ModalityXSpeechRecognitionFeature);
}

void base witness table accessor for Hashable in ModalityXSpeechRecognitionFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, type metadata accessor for ModalityXSpeechRecognitionFeature, (uint64_t)&protocol conformance descriptor for ModalityXSpeechRecognitionFeature);
}

void base witness table accessor for Equatable in ModalityXSpeechRecognitionFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXSpeechRecognitionFeature and conformance ModalityXSpeechRecognitionFeature, type metadata accessor for ModalityXSpeechRecognitionFeature, (uint64_t)&protocol conformance descriptor for ModalityXSpeechRecognitionFeature);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXAudioAnalyticsAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalyticsAcousticFeature);
}

void base witness table accessor for Message in ModalityXAudioAnalyticsAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalyticsAcousticFeature);
}

void base witness table accessor for Hashable in ModalityXAudioAnalyticsAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalyticsAcousticFeature);
}

void base witness table accessor for Equatable in ModalityXAudioAnalyticsAcousticFeature()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalyticsAcousticFeature and conformance ModalityXAudioAnalyticsAcousticFeature, type metadata accessor for ModalityXAudioAnalyticsAcousticFeature, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalyticsAcousticFeature);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXAudioAnalytics()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
}

void base witness table accessor for Message in ModalityXAudioAnalytics()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
}

void base witness table accessor for Hashable in ModalityXAudioAnalytics()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
}

void base witness table accessor for Equatable in ModalityXAudioAnalytics()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXAudioAnalytics and conformance ModalityXAudioAnalytics, type metadata accessor for ModalityXAudioAnalytics, (uint64_t)&protocol conformance descriptor for ModalityXAudioAnalytics);
}

void base witness table accessor for CustomDebugStringConvertible in ModalityXFinalSpeechRecognitionResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
}

void base witness table accessor for Message in ModalityXFinalSpeechRecognitionResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
}

void base witness table accessor for Hashable in ModalityXFinalSpeechRecognitionResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
}

void base witness table accessor for Equatable in ModalityXFinalSpeechRecognitionResponse()
{
  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(&lazy protocol witness table cache variable for type ModalityXFinalSpeechRecognitionResponse and conformance ModalityXFinalSpeechRecognitionResponse, type metadata accessor for ModalityXFinalSpeechRecognitionResponse, (uint64_t)&protocol conformance descriptor for ModalityXFinalSpeechRecognitionResponse);
}

void sub_242045FF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionToken.tokenText.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046014()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXRecognitionToken.startMilliSeconds.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046034(unsigned int *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_118_0(a1);
  ModalityXRecognitionToken.startMilliSeconds.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046050()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXRecognitionToken.endMilliSeconds.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046070(unsigned int *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_118_0(a1);
  ModalityXRecognitionToken.endMilliSeconds.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_24204608C()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXRecognitionToken.silenceStartMilliSeconds.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420460AC(unsigned int *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_118_0(a1);
  ModalityXRecognitionToken.silenceStartMilliSeconds.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420460C8()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXRecognitionToken.confidence.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420460E8(unsigned int *a1)
{
  OUTLINED_FUNCTION_118_0(a1);
  ModalityXRecognitionToken.confidence.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046104()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  v0 = ModalityXRecognitionToken.addSpaceAfter.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046124(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_161(a1);
  ModalityXRecognitionToken.addSpaceAfter.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046140()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionToken.phoneSeq.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046164()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionToken.ipaPhoneSeq.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046188()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  v0 = ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420461A8(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_161(a1);
  ModalityXRecognitionPhraseTokensAlternatives.hasUnsuggestedAlternatives_p.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420461C4()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXRecognitionChoice.confidence.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420461E4(unsigned int *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_118_0(a1);
  ModalityXRecognitionChoice.confidence.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046200(_QWORD *a1@<X8>)
{
  ModalityXRecognitionResult.preItn.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_24204621C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXRecognitionSausage, (void (*)(char *))ModalityXRecognitionResult.preItn.setter);
}

void sub_242046240(_QWORD *a1@<X8>)
{
  ModalityXRecognitionResult.postItn.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_24204625C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXRecognitionSausage, (void (*)(char *))ModalityXRecognitionResult.postItn.setter);
}

void sub_242046280()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  v0 = ModalityXLatnnMitigatorResult.processed.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420462A0(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_161(a1);
  ModalityXLatnnMitigatorResult.processed.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420462BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXLatnnMitigatorResult.version.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420462E0()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXLatnnMitigatorResult.threshold.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046300(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXLatnnMitigatorResult.threshold.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24204631C()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXLatnnMitigatorResult.score.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24204633C(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXLatnnMitigatorResult.score.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046358()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionCandidate.speechID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24204637C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionCandidate.sessionID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420463A0()
{
  _DWORD *v0;
  int v1;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionCandidate.returnCode.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420463C0(unsigned int *a1)
{
  OUTLINED_FUNCTION_118_0(a1);
  ModalityXRecognitionCandidate.returnCode.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420463DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionCandidate.returnStr.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046400()
{
  ModalityXRecognitionCandidate.recognitionResult.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24204641C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXRecognitionResult, (void (*)(char *))ModalityXRecognitionCandidate.recognitionResult.setter);
}

void sub_242046440()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionCandidate.resultID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046464()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXRecognitionCandidate.snr.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046484(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_251_0(a1);
  ModalityXRecognitionCandidate.snr.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420464A0(_BYTE *a1@<X8>)
{
  ModalityXRecognitionCandidate.fingerprintDetection.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420464C0()
{
  ModalityXRecognitionCandidate.audioAnalytics.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420464DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXAudioAnalytics, (void (*)(char *))ModalityXRecognitionCandidate.audioAnalytics.setter);
}

void sub_242046500(_BYTE *a1@<X8>)
{
  ModalityXRecognitionCandidate.watermarkDetection.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046520()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXRecognitionCandidate.watermarkPeakAverage.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046540(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_251_0(a1);
  ModalityXRecognitionCandidate.watermarkPeakAverage.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_24204655C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionCandidate.language.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046580()
{
  ModalityXRecognitionCandidate.latnnMitigatorResult.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24204659C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXLatnnMitigatorResult, (void (*)(char *))ModalityXRecognitionCandidate.latnnMitigatorResult.setter);
}

void sub_2420465C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXRecognitionCandidate.requestLocale.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420465E4()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXItnAlignment.firstPreItnTokenIndex.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046604(unsigned int *a1)
{
  OUTLINED_FUNCTION_118_0(a1);
  ModalityXItnAlignment.firstPreItnTokenIndex.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046620()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXItnAlignment.lastPreItnTokenIndex.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046640(unsigned int *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_118_0(a1);
  ModalityXItnAlignment.lastPreItnTokenIndex.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_24204665C()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXItnAlignment.firstPostItnCharPos.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24204667C(unsigned int *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_118_0(a1);
  ModalityXItnAlignment.firstPostItnCharPos.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046698()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXItnAlignment.lastPostItnCharPos.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420466B8(unsigned int *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_118_0(a1);
  ModalityXItnAlignment.lastPostItnCharPos.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420466D4()
{
  float *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXAcousticFeature.frameDuration.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420466F4(float *a1)
{
  ModalityXAcousticFeature.frameDuration.setter(*a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046714()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXSpeechRecognitionFeature.key.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046738()
{
  float *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXSpeechRecognitionFeature.value.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046758(float *a1)
{
  ModalityXSpeechRecognitionFeature.value.setter(*a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046778()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXAudioAnalyticsAcousticFeature.key.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24204679C(_QWORD *a1@<X8>)
{
  ModalityXAudioAnalyticsAcousticFeature.value.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420467B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXAcousticFeature, (void (*)(char *))ModalityXAudioAnalyticsAcousticFeature.value.setter);
}

void sub_2420467DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXFinalSpeechRecognitionResponse.speechID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046800()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXFinalSpeechRecognitionResponse.sessionID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046824()
{
  _DWORD *v0;
  int v1;

  OUTLINED_FUNCTION_20();
  ModalityXFinalSpeechRecognitionResponse.returnCode.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046844(unsigned int *a1)
{
  OUTLINED_FUNCTION_118_0(a1);
  ModalityXFinalSpeechRecognitionResponse.returnCode.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046860()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXFinalSpeechRecognitionResponse.returnStr.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046884()
{
  ModalityXFinalSpeechRecognitionResponse.recognitionResult.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420468A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXRecognitionResult, (void (*)(char *))ModalityXFinalSpeechRecognitionResponse.recognitionResult.setter);
}

void sub_2420468C4(_BYTE *a1@<X8>)
{
  ModalityXFinalSpeechRecognitionResponse.langProfileRecreateCodes.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_2420468E4()
{
  ModalityXFinalSpeechRecognitionResponse.audioAnalytics.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXAudioAnalytics, (void (*)(char *))ModalityXFinalSpeechRecognitionResponse.audioAnalytics.setter);
}

void sub_242046924(_BYTE *a1@<X8>)
{
  ModalityXFinalSpeechRecognitionResponse.watermarkDetection.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046944()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242046964(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_251_0(a1);
  ModalityXFinalSpeechRecognitionResponse.watermarkPeakAverage.setter(v1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046980()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXFinalSpeechRecognitionResponse.language.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420469A4()
{
  ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420469C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  key path setter for ModalityXRecognitionResult.preItn : ModalityXRecognitionResult(a1, a2, a3, a4, type metadata accessor for ModalityXLatnnMitigatorResult, (void (*)(char *))ModalityXFinalSpeechRecognitionResponse.latnnMitigatorResult.setter);
}

void sub_2420469E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXFinalSpeechRecognitionResponse.requestLocale.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242046A08()
{
  uint64_t v0;

  OUTLINED_FUNCTION_20();
  ModalityXFinalSpeechRecognitionResponse.hasResult_p.getter();
  OUTLINED_FUNCTION_151(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242046A28(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_161(a1);
  ModalityXFinalSpeechRecognitionResponse.hasResult_p.setter();
  OUTLINED_FUNCTION_1_0();
}

_QWORD *initializeBufferWithCopyOfBuffer for ModalityXRecognitionToken(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_DWORD *)v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    v15 = a3[7];
    v16 = a3[8];
    v17 = (char *)a1 + v15;
    v18 = (char *)a2 + v15;
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v19 = (char *)a1 + v16;
    v20 = (char *)a2 + v16;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    v21 = a3[9];
    v22 = a3[10];
    v23 = (char *)a1 + v21;
    v24 = (char *)a2 + v21;
    *(_DWORD *)v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
    v25 = a3[11];
    v26 = a3[12];
    v27 = (_QWORD *)((char *)a1 + v25);
    v28 = (_QWORD *)((char *)a2 + v25);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = (_QWORD *)((char *)a1 + v26);
    v31 = (_QWORD *)((char *)a2 + v26);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXRecognitionToken(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = a3[9];
  v21 = a3[10];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  v24 = a3[11];
  v25 = a3[12];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (_QWORD *)(a1 + v25);
  v30 = (_QWORD *)(a2 + v25);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  int v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (int *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 4) = *((_BYTE *)v12 + 4);
  *(_DWORD *)v11 = v13;
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = (int *)(a2 + v14);
  v17 = *v16;
  *(_BYTE *)(v15 + 4) = *((_BYTE *)v16 + 4);
  *(_DWORD *)v15 = v17;
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = (int *)(a2 + v18);
  v21 = *v20;
  *(_BYTE *)(v19 + 4) = *((_BYTE *)v20 + 4);
  *(_DWORD *)v19 = v21;
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = (int *)(a2 + v22);
  v25 = *v24;
  *(_BYTE *)(v23 + 4) = *((_BYTE *)v24 + 4);
  *(_DWORD *)v23 = v25;
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v26 = a3[11];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[12];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v10 = a3[7];
  v11 = a3[8];
  v12 = a1 + v10;
  v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  v14 = a1 + v11;
  v15 = a2 + v11;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a3[9];
  v17 = a3[10];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v20 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  return a1;
}

uint64_t assignWithTake for ModalityXRecognitionToken(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  v16 = a1 + v13;
  v17 = a2 + v13;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a3[8];
  v19 = a3[9];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  v22 = a1 + v19;
  v23 = a2 + v19;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[12];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionToken()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionToken()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for ModalityXRecognitionToken()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionPhraseTokens()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionPhraseTokens()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for ModalityXRecognitionPhraseTokensAlternatives(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *((_BYTE *)v7 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return v7;
}

_QWORD *initializeWithCopy for ModalityXRecognitionPhraseTokensAlternatives(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithCopy for ModalityXRecognitionPhraseTokensAlternatives(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *initializeWithTake for ModalityXRecognitionPhraseTokensAlternatives(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for ModalityXRecognitionPhraseTokensAlternatives(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionPhraseTokensAlternatives()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionPhraseTokensAlternatives()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void type metadata completion function for ModalityXRecognitionPhraseTokensAlternatives()
{
  type metadata completion function for ModalityXRecognitionPhraseTokensAlternatives();
}

{
  unint64_t v0;

  OUTLINED_FUNCTION_414();
  if (v0 <= 0x3F)
  {
    OUTLINED_FUNCTION_367();
    OUTLINED_FUNCTION_234_0();
    OUTLINED_FUNCTION_280_0();
  }
  OUTLINED_FUNCTION_114();
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionSausage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionSausage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ModalityXSetAlternateRecognitionSausage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXSetAlternateRecognitionSausage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionChoice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionChoice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void type metadata completion function for ModalityXRecognitionChoice()
{
  type metadata completion function for ModalityXRecognitionPhraseTokensAlternatives();
}

void initializeBufferWithCopyOfBuffer for ModalityXRecognitionPhraseTokens(_QWORD *a1, _QWORD *a2)
{
  int v2;

  OUTLINED_FUNCTION_319_0(a1, a2);
  if ((v2 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_40();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_243();
    OUTLINED_FUNCTION_267_0();
  }
  OUTLINED_FUNCTION_12();
}

void initializeWithCopy for ModalityXRecognitionPhraseTokens(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_267_0();
  OUTLINED_FUNCTION_12();
}

void assignWithCopy for ModalityXRecognitionPhraseTokens(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_94_0(a1, a2);
  OUTLINED_FUNCTION_275_0();
  v2 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24));
  OUTLINED_FUNCTION_9_0();
}

void initializeWithTake for ModalityXRecognitionPhraseTokens(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_184_0(v2);
  OUTLINED_FUNCTION_9_0();
}

void assignWithTake for ModalityXRecognitionPhraseTokens(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_95_0(a1, a2);
  v2 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  OUTLINED_FUNCTION_9_0();
}

uint64_t getEnumTagSinglePayload for ModalityXRepeatedItnAlignment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXRepeatedItnAlignment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void type metadata completion function for ModalityXRecognitionPhraseTokens()
{
  unint64_t v0;

  OUTLINED_FUNCTION_414();
  if (v0 <= 0x3F)
  {
    OUTLINED_FUNCTION_367();
    OUTLINED_FUNCTION_318();
    OUTLINED_FUNCTION_280_0();
  }
  OUTLINED_FUNCTION_424();
}

uint64_t getEnumTagSinglePayload for ModalityXChoiceAlignment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXChoiceAlignment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXRecognitionResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v29;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    a1[3] = a2[3];
    v9 = a3[8];
    v29 = (char *)a1 + v9;
    v10 = (char *)a2 + v9;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v29, v10, v11);
    v13 = a3[9];
    v14 = (uint64_t *)((char *)v7 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = type metadata accessor for ModalityXRecognitionSausage(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v18 = *(int *)(v16 + 20);
      v19 = (char *)v14 + v18;
      v20 = (char *)v15 + v18;
      swift_bridgeObjectRetain();
      v12(v19, v20, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    v21 = a3[10];
    v22 = (uint64_t *)((char *)v7 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v16))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *v22 = *v23;
      v25 = *(int *)(v16 + 20);
      v26 = (char *)v22 + v25;
      v27 = (char *)v23 + v25;
      swift_bridgeObjectRetain();
      v12(v26, v27, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v16);
    }
  }
  return v7;
}

uint64_t destroy for ModalityXRecognitionResult(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v10(v4, v5);
  v6 = a1 + a2[9];
  v7 = type metadata accessor for ModalityXRecognitionSausage(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v10(v6 + *(int *)(v7 + 20), v5);
  }
  v8 = a1 + a2[10];
  result = __swift_getEnumTagSinglePayload(v8, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8 + *(int *)(v7 + 20), v5);
  }
  return result;
}

_QWORD *initializeWithCopy for ModalityXRecognitionResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[8];
  v28 = (char *)a1 + v8;
  v9 = (char *)a2 + v8;
  v10 = type metadata accessor for UnknownStorage();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v28, v9, v10);
  v12 = a3[9];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for ModalityXRecognitionSausage(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = *(int *)(v15 + 20);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    swift_bridgeObjectRetain();
    v11(v18, v19, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v20 = a3[10];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v15))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    v24 = *(int *)(v15 + 20);
    v25 = (char *)v21 + v24;
    v26 = (char *)v22 + v24;
    swift_bridgeObjectRetain();
    v11(v25, v26, v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v15);
  }
  return a1;
}

_QWORD *assignWithCopy for ModalityXRecognitionResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v33;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v33 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v33 + 24);
  v10(v7, v8, v9);
  v11 = a3[9];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for ModalityXRecognitionSausage(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      *v12 = *v13;
      v17 = *(int *)(v14 + 20);
      v18 = (char *)v12 + v17;
      v19 = (char *)v13 + v17;
      v20 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      swift_bridgeObjectRetain();
      v20(v18, v19, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v12, type metadata accessor for ModalityXRecognitionSausage);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *v12 = *v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10((char *)v12 + *(int *)(v14 + 20), (char *)v13 + *(int *)(v14 + 20), v9);
LABEL_7:
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v22, 1, v14);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v14);
  if (!v25)
  {
    if (!v26)
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10(&v23[*(int *)(v14 + 20)], &v24[*(int *)(v14 + 20)], v9);
      return a1;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v23, type metadata accessor for ModalityXRecognitionSausage);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v27 = *(int *)(v14 + 20);
  v28 = &v23[v27];
  v29 = &v24[v27];
  v30 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
  swift_bridgeObjectRetain();
  v30(v28, v29, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v14);
  return a1;
}

_OWORD *initializeWithTake for ModalityXRecognitionResult(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[8];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for UnknownStorage();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v12 = a3[9];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = type metadata accessor for ModalityXRecognitionSausage(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v11((char *)v13 + *(int *)(v15 + 20), (char *)v14 + *(int *)(v15 + 20), v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[10];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v15))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    v11((char *)v18 + *(int *)(v15 + 20), (char *)v19 + *(int *)(v15 + 20), v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v15);
  }
  return a1;
}

_QWORD *assignWithTake for ModalityXRecognitionResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = a3[9];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for ModalityXRecognitionSausage(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (EnumTagSinglePayload)
  {
    if (!v17)
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v13, type metadata accessor for ModalityXRecognitionSausage);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v13 = *(_QWORD *)v14;
  swift_bridgeObjectRelease();
  v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v9);
LABEL_7:
  v19 = a3[10];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v19, 1, v15);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v15);
  if (!v22)
  {
    if (!v23)
    {
      *(_QWORD *)v20 = *(_QWORD *)v21;
      swift_bridgeObjectRelease();
      v11(&v20[*(int *)(v15 + 20)], &v21[*(int *)(v15 + 20)], v9);
      return a1;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v20, type metadata accessor for ModalityXRecognitionSausage);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v20 = *(_QWORD *)v21;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v20[*(int *)(v15 + 20)], &v21[*(int *)(v15 + 20)], v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2420481E8()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_270_0();
  if (v3)
  {
    OUTLINED_FUNCTION_412(*v0);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v4 = v2;
    v5 = v1;
    v6 = OUTLINED_FUNCTION_15();
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)v5)
    {
      v7 = v6;
      v8 = *(int *)(v4 + 32);
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
      v8 = *(int *)(v4 + 36);
    }
    OUTLINED_FUNCTION_35((uint64_t)v0 + v8, v5, v7);
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242048268()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_203_0();
  if (v2)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_127();
    if (!v2)
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXRecognitionSausage?);
    OUTLINED_FUNCTION_224();
    OUTLINED_FUNCTION_28(v3, v4, v5, v6);
  }
}

void type metadata completion function for ModalityXRecognitionResult()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXRecognitionSausage?, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionSausage);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ModalityXLatnnMitigatorResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = (char *)a1 + v12;
    v15 = (char *)a2 + v12;
    v14[8] = v15[8];
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v16 = (char *)a1 + v13;
    v17 = (char *)a2 + v13;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXLatnnMitigatorResult(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = a1 + v11;
  v14 = a2 + v11;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = a1 + v12;
  v16 = a2 + v12;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 8) = *((_BYTE *)v12 + 8);
  *(_QWORD *)v11 = v13;
  v14 = a3[8];
  v15 = a1 + v14;
  v16 = (uint64_t *)(a2 + v14);
  v17 = *v16;
  *(_BYTE *)(v15 + 8) = *((_BYTE *)v16 + 8);
  *(_QWORD *)v15 = v17;
  return a1;
}

uint64_t initializeWithTake for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v12 = a1 + v9;
  v13 = a2 + v9;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  return a1;
}

uint64_t assignWithTake for ModalityXLatnnMitigatorResult(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = a3[8];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = a1 + v13;
  v17 = a2 + v13;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXLatnnMitigatorResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_242048744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_287();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_280();
    OUTLINED_FUNCTION_35(v6, v7, v8);
  }
  else
  {
    OUTLINED_FUNCTION_63(a1 + *(int *)(a3 + 24));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXLatnnMitigatorResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242048798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_127();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_208();
    OUTLINED_FUNCTION_28(v6, v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_229(*(int *)(a4 + 24));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t type metadata completion function for ModalityXLatnnMitigatorResult()
{
  return type metadata completion function for ModalityXLatnnMitigatorResult();
}

{
  uint64_t result;
  unint64_t v1;

  result = OUTLINED_FUNCTION_414();
  if (v1 <= 0x3F)
  {
    OUTLINED_FUNCTION_367();
    swift_initStructMetadata();
    return OUTLINED_FUNCTION_280_0();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXRecognitionCandidate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXRecognitionCandidate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXItnAlignment(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }
  return a1;
}

uint64_t destroy for ModalityXItnAlignment(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for ModalityXItnAlignment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t assignWithCopy for ModalityXItnAlignment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  return a1;
}

uint64_t initializeWithTake for ModalityXItnAlignment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t assignWithTake for ModalityXItnAlignment(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXItnAlignment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_242048C44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_15();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ModalityXItnAlignment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_242048C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_208();
  return OUTLINED_FUNCTION_317(v0, v1, v2, v3);
}

uint64_t type metadata completion function for ModalityXItnAlignment()
{
  return type metadata completion function for ModalityXLatnnMitigatorResult();
}

void initializeBufferWithCopyOfBuffer for ModalityXRecognitionChoice()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  char *v9;

  OUTLINED_FUNCTION_163();
  v3 = *(_DWORD *)(*(_QWORD *)(v2 - 8) + 80);
  *v0 = *v1;
  if ((v3 & 0x20000) != 0)
  {
    swift_retain();
  }
  else
  {
    v4 = v2;
    v5 = v1;
    v6 = v0;
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_208_0();
    OUTLINED_FUNCTION_273_0();
    v7 = *(int *)(v4 + 24);
    v8 = (char *)v6 + v7;
    v9 = (char *)v5 + v7;
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v8[4] = v9[4];
  }
  OUTLINED_FUNCTION_90();
}

uint64_t destroy for ModalityXRecognitionPhraseTokens()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_249_0();
  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_299_0();
  return OUTLINED_FUNCTION_219(v0, v1, v2);
}

void initializeWithCopy for ModalityXRecognitionChoice()
{
  _QWORD *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_163();
  *v1 = *v0;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_208_0();
  OUTLINED_FUNCTION_273_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_90();
}

void assignWithCopy for ModalityXRecognitionChoice(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_94_0(a1, a2);
  OUTLINED_FUNCTION_275_0();
  v5 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_238_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  v6 = *(int *)(v2 + 24);
  v7 = v4 + v6;
  v8 = v3 + v6;
  v9 = *(_BYTE *)(v8 + 4);
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_BYTE *)(v7 + 4) = v9;
  OUTLINED_FUNCTION_12();
}

void initializeWithTake for ModalityXRecognitionChoice(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_238_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_12();
}

void assignWithTake for ModalityXRecognitionChoice(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_95_0(a1, a2);
  v2 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_238_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_12();
}

uint64_t getEnumTagSinglePayload for ModalityXAcousticFeature()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_103Tm()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_270_0();
  if (v3)
  {
    OUTLINED_FUNCTION_412(*v0);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v4 = v2;
    v5 = v1;
    v6 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_35((uint64_t)v0 + *(int *)(v4 + 20), v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXAcousticFeature()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_104Tm()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_203_0();
  if (v2)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_224();
    OUTLINED_FUNCTION_28(v3, v4, v5, v6);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXSpeechRecognitionFeature(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v13[4] = v14[4];
    *(_DWORD *)v13 = *(_DWORD *)v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXSpeechRecognitionFeature(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  int v13;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = (int *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 4) = *((_BYTE *)v12 + 4);
  *(_DWORD *)v11 = v13;
  return a1;
}

uint64_t initializeWithTake for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  return a1;
}

uint64_t assignWithTake for ModalityXSpeechRecognitionFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_DWORD *)v13 = *(_DWORD *)v14;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechRecognitionFeature()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechRecognitionFeature()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for ModalityXSpeechRecognitionFeature()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ModalityXAudioAnalyticsAcousticFeature(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = &a1[v9];
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *(_QWORD *)v11 = *v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = &a1[v10];
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = type metadata accessor for ModalityXAcousticFeature(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v14 = *v15;
      v19 = *(int *)(v16 + 20);
      v20 = &v14[v19];
      v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v8(v20, v21, v7);
      v22 = *(int *)(v16 + 24);
      v23 = &v14[v22];
      v24 = (char *)v15 + v22;
      *(_DWORD *)v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t destroy for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for ModalityXAcousticFeature(0);
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    return v8(v5 + *(int *)(v6 + 20), v4);
  }
  return result;
}

uint64_t initializeWithCopy for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = type metadata accessor for ModalityXAcousticFeature(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = *(int *)(v15 + 20);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    swift_bridgeObjectRetain();
    v7((uint64_t)v18, (uint64_t)v19, v6);
    v20 = *(int *)(v15 + 24);
    v21 = (char *)v13 + v20;
    v22 = (char *)v14 + v20;
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  char v31;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for ModalityXAcousticFeature(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      *v13 = *v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v6);
      v28 = *(int *)(v15 + 24);
      v29 = (char *)v13 + v28;
      v30 = (char *)v14 + v28;
      v31 = v30[4];
      *(_DWORD *)v29 = *(_DWORD *)v30;
      v29[4] = v31;
      return a1;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v13, type metadata accessor for ModalityXAcousticFeature);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  *v13 = *v14;
  v18 = *(int *)(v15 + 20);
  v19 = (char *)v13 + v18;
  v20 = (char *)v14 + v18;
  v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v6);
  v22 = *(int *)(v15 + 24);
  v23 = (char *)v13 + v22;
  v24 = (char *)v14 + v22;
  v25 = v24[4];
  *(_DWORD *)v23 = *(_DWORD *)v24;
  v23[4] = v25;
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t initializeWithTake for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for ModalityXAcousticFeature(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v9 = *v10;
    v7((uint64_t)v9 + *(int *)(v11 + 20), (uint64_t)v10 + *(int *)(v11 + 20), v6);
    v13 = *(int *)(v11 + 24);
    v14 = (char *)v9 + v13;
    v15 = (char *)v10 + v13;
    *(_DWORD *)v14 = *(_DWORD *)v15;
    v14[4] = v15[4];
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for ModalityXAudioAnalyticsAcousticFeature(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int EnumTagSinglePayload;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = type metadata accessor for ModalityXAcousticFeature(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (!EnumTagSinglePayload)
  {
    if (!v19)
    {
      *v15 = *v16;
      swift_bridgeObjectRelease();
      v8((uint64_t)v15 + *(int *)(v17 + 20), (uint64_t)v16 + *(int *)(v17 + 20), v6);
      v25 = *(int *)(v17 + 24);
      v26 = (char *)v15 + v25;
      v27 = (char *)v16 + v25;
      *(_DWORD *)v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      return a1;
    }
    outlined destroy of ModalityXServerBoundFrame.OneOf_Payload((uint64_t)v15, type metadata accessor for ModalityXAcousticFeature);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  *v15 = *v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v6);
  v20 = *(int *)(v17 + 24);
  v21 = (char *)v15 + v20;
  v22 = (char *)v16 + v20;
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXAudioAnalyticsAcousticFeature()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_242049B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_15();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 2147483646)
    {
      OUTLINED_FUNCTION_63(a1 + *(int *)(a3 + 20));
      OUTLINED_FUNCTION_9_0();
      return;
    }
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
    v8 = a1 + *(int *)(a3 + 24);
  }
  OUTLINED_FUNCTION_35(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ModalityXAudioAnalyticsAcousticFeature()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242049BE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_127();
  if (!v6)
  {
    if (a3 == 2147483646)
    {
      OUTLINED_FUNCTION_229(*(int *)(a4 + 20));
      OUTLINED_FUNCTION_9_0();
      return;
    }
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXAcousticFeature?);
  }
  OUTLINED_FUNCTION_224();
  OUTLINED_FUNCTION_28(v7, v8, v9, v10);
}

void type metadata completion function for ModalityXAudioAnalyticsAcousticFeature()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXAcousticFeature?, (void (*)(uint64_t))type metadata accessor for ModalityXAcousticFeature);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void initializeBufferWithCopyOfBuffer for ModalityXChoiceAlignment()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;

  OUTLINED_FUNCTION_163();
  v2 = OUTLINED_FUNCTION_319_0(v0, v1);
  if ((v4 & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_40();
  }
  else
  {
    v2[1] = *(_QWORD *)(v3 + 8);
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_197_0();
    OUTLINED_FUNCTION_277_0();
  }
  OUTLINED_FUNCTION_90();
}

uint64_t destroy for ModalityXChoiceAlignment()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_249_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_299_0();
  return OUTLINED_FUNCTION_219(v0, v1, v2);
}

void initializeWithCopy for ModalityXChoiceAlignment()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_163();
  v1 = v0[1];
  *v2 = *v0;
  v2[1] = v1;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_217_0();
  OUTLINED_FUNCTION_197_0();
  OUTLINED_FUNCTION_277_0();
  OUTLINED_FUNCTION_90();
}

void assignWithCopy for ModalityXChoiceAlignment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_94_0(a1, a2);
  OUTLINED_FUNCTION_275_0();
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(v2 + 8);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_275_0();
  v4 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24));
  OUTLINED_FUNCTION_9_0();
}

void initializeWithTake for ModalityXChoiceAlignment(_OWORD *a1, _OWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  v2 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_184_0(v2);
  OUTLINED_FUNCTION_9_0();
}

void assignWithTake for ModalityXChoiceAlignment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_95_0(a1, a2);
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(v2 + 8);
  swift_bridgeObjectRelease();
  v4 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  OUTLINED_FUNCTION_9_0();
}

uint64_t getEnumTagSinglePayload for ModalityXAudioAnalytics()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_index_115Tm()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_270_0();
  if (v3)
  {
    OUTLINED_FUNCTION_412(*v0);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v4 = v2;
    v5 = v1;
    v6 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_35((uint64_t)v0 + *(int *)(v4 + 24), v5, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXAudioAnalytics()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_index_116Tm()
{
  int v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_203_0();
  if (v2)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_224();
    OUTLINED_FUNCTION_28(v3, v4, v5, v6);
  }
}

void type metadata completion function for ModalityXChoiceAlignment()
{
  unint64_t v0;

  OUTLINED_FUNCTION_414();
  if (v0 <= 0x3F)
  {
    OUTLINED_FUNCTION_367();
    OUTLINED_FUNCTION_234_0();
    OUTLINED_FUNCTION_280_0();
  }
  OUTLINED_FUNCTION_114();
}

void initializeBufferWithCopyOfBuffer for ModalityXRecognitionCandidate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  if ((*(_DWORD *)(*(_QWORD *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
    *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  OUTLINED_FUNCTION_9_0();
}

uint64_t destroy for ModalityXRecognitionCandidate(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_15();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

void initializeWithCopy for ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_76_0(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  OUTLINED_FUNCTION_9_0();
}

void assignWithCopy for ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_76_0(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_9_0();
}

void initializeWithTake for ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_76_0(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  OUTLINED_FUNCTION_9_0();
}

void assignWithTake for ModalityXRecognitionCandidate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_76_0(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  OUTLINED_FUNCTION_9_0();
}

uint64_t getEnumTagSinglePayload for ModalityXFinalSpeechRecognitionResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXFinalSpeechRecognitionResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void type metadata completion function for ModalityXRecognitionCandidate()
{
  unint64_t v0;

  OUTLINED_FUNCTION_414();
  if (v0 <= 0x3F)
  {
    OUTLINED_FUNCTION_367();
    OUTLINED_FUNCTION_318();
    OUTLINED_FUNCTION_280_0();
  }
  OUTLINED_FUNCTION_424();
}

uint64_t ObjC metadata update function for ModalityXRecognitionCandidate._StorageClass()
{
  return type metadata accessor for ModalityXRecognitionCandidate._StorageClass(0);
}

void type metadata completion function for ModalityXRecognitionCandidate._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXRecognitionResult?, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXAudioAnalytics?, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXLatnnMitigatorResult?, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t ObjC metadata update function for ModalityXFinalSpeechRecognitionResponse._StorageClass()
{
  return type metadata accessor for ModalityXFinalSpeechRecognitionResponse._StorageClass(0);
}

void type metadata completion function for ModalityXFinalSpeechRecognitionResponse._StorageClass()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXRecognitionResult?, (void (*)(uint64_t))type metadata accessor for ModalityXRecognitionResult);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXAudioAnalytics?, (void (*)(uint64_t))type metadata accessor for ModalityXAudioAnalytics);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload?(319, &lazy cache variable for type metadata for ModalityXLatnnMitigatorResult?, (void (*)(uint64_t))type metadata accessor for ModalityXLatnnMitigatorResult);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_13_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  if (*(_BYTE *)(v2 + a1 + 4))
    v3 = 0;
  else
    v3 = *(_DWORD *)(v2 + a1);
  *(_DWORD *)(v1 + 8) = v3;
  *(_DWORD *)(v1 + 12) = a1;
}

uint64_t OUTLINED_FUNCTION_14_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_20_0@<X0>(uint64_t (*a1)(_QWORD)@<X8>)
{
  return a1(0);
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_56_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  outlined init with copy of ModalityXRecognitionSausage?(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_60_0()
{
  return dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)();
}

uint64_t OUTLINED_FUNCTION_61()
{
  return dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)();
}

void OUTLINED_FUNCTION_62_0(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 1;
}

uint64_t OUTLINED_FUNCTION_64_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE *v2;

  v2 = (_BYTE *)(v1 + a1);
  if (v2[4])
    return 0;
  else
    return *(unsigned int *)v2;
}

uint64_t OUTLINED_FUNCTION_66_0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
}

void OUTLINED_FUNCTION_69_0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v2, 1, a1);
  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, v1);
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_75_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(v0 + 36);
  v3 = type metadata accessor for ModalityXRecognitionSausage(0);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  return __swift_storeEnumTagSinglePayload(v1 + *(int *)(v0 + 40), 1, 1, v3);
}

uint64_t OUTLINED_FUNCTION_76_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(int *)(v0 + 24);
  v4 = v2 + v3;
  v5 = v1 + v3;
  *(_DWORD *)v4 = *(_DWORD *)v5;
  *(_BYTE *)(v4 + 4) = *(_BYTE *)(v5 + 4);
  return v2;
}

uint64_t OUTLINED_FUNCTION_79_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 88) = v2;
  result = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_80_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 88) = v2;
  result = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_81_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 88) = v2;
  result = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_83_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v1, v3 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_84_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t OUTLINED_FUNCTION_88_0(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  return type metadata accessor for ModalityXRecognitionToken(0);
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_94_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_95_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_96_0()
{
  char v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 + v1[5]) = 2;
  v3 = (_QWORD *)(v2 + v1[6]);
  *v3 = 0;
  v3[1] = 0;
  v4 = v2 + v1[7];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = v0;
  v5 = v2 + v1[8];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = v0;
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_98_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 72) = v2;
  result = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(result + 20);
  return result;
}

double OUTLINED_FUNCTION_99_0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(double *)(v1 + a1);
}

BOOL OUTLINED_FUNCTION_100_0@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(_BYTE *)(v1 + a1 + 4) & 1) == 0;
}

void OUTLINED_FUNCTION_102_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  outlined init with take of ModalityXSessionMetadata(a1, v3, a3);
}

void OUTLINED_FUNCTION_106_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ModalityXRecognitionSausage?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_109_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2 + *(int *)(v3 + 20), v0);
}

uint64_t OUTLINED_FUNCTION_117_0()
{
  return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
}

uint64_t OUTLINED_FUNCTION_118_0(unsigned int *a1)
{
  return *a1;
}

uint64_t OUTLINED_FUNCTION_121_0(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  return type metadata accessor for ModalityXItnAlignment(0);
}

uint64_t OUTLINED_FUNCTION_127_0(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = result;
  *(_QWORD *)(result + 24) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_128_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_129_0()
{
  type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  return swift_isUniquelyReferenced_nonNull_native();
}

double OUTLINED_FUNCTION_130_0()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t OUTLINED_FUNCTION_138_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
}

uint64_t OUTLINED_FUNCTION_139_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_140_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_141_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_144_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

void OUTLINED_FUNCTION_146_0()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);

  lazy protocol witness table accessor for type UnknownStorage and conformance UnknownStorage(v1, v2, v0);
}

BOOL OUTLINED_FUNCTION_149_0@<W0>(char a1@<W8>)
{
  return (a1 & 1) == 0;
}

void OUTLINED_FUNCTION_152_0()
{
  closure #1 in ModalityXRecognitionPhraseTokens.decodeMessage<A>(decoder:)();
}

void OUTLINED_FUNCTION_153_0()
{
  closure #2 in ModalityXChoiceAlignment.decodeMessage<A>(decoder:)();
}

void OUTLINED_FUNCTION_154_0(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + a1;
  *(_DWORD *)v3 = v1;
  *(_BYTE *)(v3 + 4) = 0;
}

void OUTLINED_FUNCTION_156_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ModalityXRecognitionSausage?(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_157_0(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL OUTLINED_FUNCTION_161_0@<W0>(uint64_t a1@<X8>)
{
  return a1 != 0;
}

uint64_t OUTLINED_FUNCTION_165_0()
{
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

uint64_t OUTLINED_FUNCTION_169_0(uint64_t result)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(result + 28);
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = v1;
  v4 = v2 + *(int *)(result + 32);
  *(_DWORD *)v4 = 0;
  *(_BYTE *)(v4 + 4) = v1;
  return result;
}

void OUTLINED_FUNCTION_170_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v5)(_QWORD);

  closure #2 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v5, v4);
}

uint64_t OUTLINED_FUNCTION_171_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXRecognitionToken(0);
}

void OUTLINED_FUNCTION_172_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_174_0()
{
  return type metadata accessor for ModalityXRecognitionResult(0);
}

uint64_t OUTLINED_FUNCTION_175_0()
{
  return type metadata accessor for ModalityXRecognitionResult(0);
}

void OUTLINED_FUNCTION_176_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  outlined init with take of ModalityXRecognitionResult?(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_177_0()
{
  return UnknownStorage.init()();
}

uint64_t OUTLINED_FUNCTION_180_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

void OUTLINED_FUNCTION_181_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  outlined init with copy of ModalityXRecognitionSausage?(v1 + a1, v3, v2);
}

void OUTLINED_FUNCTION_182_0(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  outlined init with copy of ModalityXRecognitionSausage?(v2 + a1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_183_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_184_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_185_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_186_0()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int v2;

  v2 = *v0;
  if (v2 == 4)
    LOBYTE(v2) = 0;
  *(_BYTE *)(v1 + 84) = v2;
}

void OUTLINED_FUNCTION_189_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #4 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

void OUTLINED_FUNCTION_190_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #3 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

void OUTLINED_FUNCTION_191_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  closure #1 in ModalityXRecognitionToken.decodeMessage<A>(decoder:)(v1, v0, v3, v2, v4);
}

uint64_t OUTLINED_FUNCTION_196_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_197_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_205_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 88) = v2;
  result = type metadata accessor for ModalityXFinalSpeechRecognitionResponse(0);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_206_0()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_208_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_211_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 80) = v2;
  result = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_212_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  *v1 = a1;
  *(_QWORD *)(a1 + 72) = v2;
  result = type metadata accessor for ModalityXRecognitionCandidate(0);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_213_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_214_0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_217_0()
{
  return swift_bridgeObjectRetain();
}

float OUTLINED_FUNCTION_218_0(uint64_t a1)
{
  uint64_t v1;

  return *(float *)(v1 + *(int *)(a1 + 24));
}

uint64_t OUTLINED_FUNCTION_219(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void OUTLINED_FUNCTION_220_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  closure #4 in ModalityXRecognitionToken.traverse<A>(visitor:)(v6, v8, v7, v5, a5);
}

void OUTLINED_FUNCTION_221_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  closure #2 in ModalityXRecognitionToken.traverse<A>(visitor:)(v6, v8, v7, v5, a5);
}

void OUTLINED_FUNCTION_222_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  closure #3 in ModalityXRecognitionToken.traverse<A>(visitor:)(v6, v8, v7, v5, a5);
}

uint64_t OUTLINED_FUNCTION_225_0()
{
  return type metadata accessor for ModalityXRecognitionResult(0);
}

uint64_t OUTLINED_FUNCTION_227_0()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_228_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  outlined init with take of ModalityXSessionMetadata(v3, v4, a3);
}

void OUTLINED_FUNCTION_229_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  outlined assign with take of ModalityXServerBoundFrame.OneOf_Payload?(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_232_0()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_233_0(uint64_t a1)
{
  return ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(a1);
}

uint64_t OUTLINED_FUNCTION_234_0()
{
  return swift_initStructMetadata();
}

void OUTLINED_FUNCTION_237_0(uint64_t a1)
{
  uint64_t *v1;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_238_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_240_0()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_242()
{
  return type metadata accessor for ModalityXAcousticFeature(0);
}

uint64_t OUTLINED_FUNCTION_243()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_249_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_250_0()
{
  return type metadata accessor for ModalityXRecognitionToken(0);
}

double OUTLINED_FUNCTION_251_0(uint64_t a1)
{
  return *(double *)a1;
}

void OUTLINED_FUNCTION_255_0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  outlined init with copy of ModalityXRecognitionSausage?(a1, a2, v2);
}

void OUTLINED_FUNCTION_258_0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v0 + 48);
  if (*(_BYTE *)(v0 + 52))
    v2 = 0;
  *(_DWORD *)(v1 + 80) = v2;
}

uint64_t OUTLINED_FUNCTION_260_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  return type metadata accessor for ModalityXLatnnMitigatorResult(0);
}

uint64_t OUTLINED_FUNCTION_262_0()
{
  char v0;

  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_264_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_265_0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t OUTLINED_FUNCTION_266_0()
{
  return UnknownStorage.traverse<A>(visitor:)();
}

uint64_t OUTLINED_FUNCTION_267_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_271_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_272_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  outlined destroy of ModalityXServerBoundFrame.OneOf_Payload?(v2, a2);
}

uint64_t OUTLINED_FUNCTION_273_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_275_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_277_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_279_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return type metadata accessor for ModalityXRecognitionResult(0);
}

uint64_t OUTLINED_FUNCTION_280_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_281_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_283_0()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_284_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_288_0(uint64_t a1)
{
  return ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(a1);
}

void OUTLINED_FUNCTION_292_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 + a1) = 2;
}

double OUTLINED_FUNCTION_295_0()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t OUTLINED_FUNCTION_297_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_298_0()
{
  return type metadata accessor for ModalityXRecognitionToken(0);
}

uint64_t OUTLINED_FUNCTION_299_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_300_0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_302_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_308_0()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_309_0()
{
  return type metadata accessor for ModalityXLatnnMitigatorResult(0);
}

uint64_t OUTLINED_FUNCTION_310_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_311_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_316_0(uint64_t a1)
{
  return ModalityXFinalSpeechRecognitionResponse._StorageClass.init(copying:)(a1);
}

uint64_t OUTLINED_FUNCTION_317_0()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_318_0()
{
  return type metadata accessor for ModalityXRecognitionPhraseTokensAlternatives(0);
}

_QWORD *OUTLINED_FUNCTION_319_0(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void ModalityXSpeechProfileSourceData.init()(_QWORD *a1@<X8>)
{
  ModalityXSpeechProfileSourceData.init()((void (*)(_QWORD))type metadata accessor for ModalityXSpeechProfileSourceData, a1);
}

uint64_t type metadata accessor for ModalityXSpeechProfileSourceData(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXSpeechProfileSourceData);
}

void ModalityXWordWithPronunciations.orthography.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXWordWithPronunciations(0);
  OUTLINED_FUNCTION_84(*(int *)(v0 + 24));
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for ModalityXWordWithPronunciations(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXWordWithPronunciations);
}

void key path setter for ModalityXWordWithPronunciations.orthography : ModalityXWordWithPronunciations()
{
  swift_bridgeObjectRetain();
  ModalityXWordWithPronunciations.orthography.setter();
}

void ModalityXWordWithPronunciations.orthography.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_250();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXWordWithPronunciations.orthography.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *(int *)(OUTLINED_FUNCTION_31(a1) + 24);
  *(_DWORD *)(v1 + 24) = v2;
  v3 = OUTLINED_FUNCTION_84(v2);
  if (v3)
  {
    v5 = *v4;
    v6 = v3;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *(_QWORD *)v1 = v5;
  *(_QWORD *)(v1 + 8) = v6;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXWordWithPronunciations.hasOrthography.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXWordWithPronunciations(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXWordWithPronunciations.clearOrthography()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXWordWithPronunciations(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXWordWithPronunciations.pronunciations.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXWordWithPronunciations.frequency.getter()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_9_1();
  if (v0[4])
    return 0;
  else
    return *(unsigned int *)v0;
}

void ModalityXWordWithPronunciations.frequency.setter(int a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_9_1();
  *(_DWORD *)v2 = a1;
  *(_BYTE *)(v2 + 4) = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXWordWithPronunciations.frequency.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for ModalityXWordWithPronunciations(0) + 28);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXWordWithPronunciations.hasFrequency.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_9_1();
  return (*(_BYTE *)(v0 + 4) & 1) == 0;
}

Swift::Void __swiftcall ModalityXWordWithPronunciations.clearFrequency()()
{
  uint64_t v0;

  OUTLINED_FUNCTION_9_1();
  *(_DWORD *)v0 = 0;
  *(_BYTE *)(v0 + 4) = 1;
}

void ModalityXWordWithPronunciations.tag.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXWordWithPronunciations(0);
  OUTLINED_FUNCTION_84(*(int *)(v0 + 32));
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXWordWithPronunciations.tag : ModalityXWordWithPronunciations()
{
  swift_bridgeObjectRetain();
  ModalityXWordWithPronunciations.tag.setter();
}

void ModalityXWordWithPronunciations.tag.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_250();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXWordWithPronunciations.tag.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *(int *)(OUTLINED_FUNCTION_31(a1) + 32);
  *(_DWORD *)(v1 + 24) = v2;
  v3 = OUTLINED_FUNCTION_84(v2);
  if (v3)
  {
    v5 = *v4;
    v6 = v3;
  }
  else
  {
    v5 = 0;
    v6 = 0xE000000000000000;
  }
  *(_QWORD *)v1 = v5;
  *(_QWORD *)(v1 + 8) = v6;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXWordWithPronunciations.hasTag.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXWordWithPronunciations(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 32));
}

Swift::Void __swiftcall ModalityXWordWithPronunciations.clearTag()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXWordWithPronunciations(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t ModalityXWordWithPronunciations.unknownFields.getter()
{
  return ModalityXWordWithPronunciations.unknownFields.getter((void (*)(_QWORD))type metadata accessor for ModalityXWordWithPronunciations);
}

uint64_t ModalityXWordWithPronunciations.unknownFields.setter(uint64_t a1)
{
  return ModalityXWordWithPronunciations.unknownFields.setter(a1, (void (*)(_QWORD))type metadata accessor for ModalityXWordWithPronunciations);
}

uint64_t (*ModalityXWordWithPronunciations.unknownFields.modify())()
{
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXWordWithPronunciations.init()(_QWORD *a1@<X8>)
{
  int *v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;

  *a1 = MEMORY[0x24BEE4AF8];
  v2 = (int *)OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_253();
  v3 = (_QWORD *)((char *)a1 + v2[6]);
  *v3 = 0;
  v3[1] = 0;
  v4 = (char *)a1 + v2[7];
  *(_DWORD *)v4 = 0;
  v4[4] = 1;
  v5 = (_QWORD *)((char *)a1 + v2[8]);
  *v5 = 0;
  v5[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t ModalityXEntityWords.words.getter()
{
  return swift_bridgeObjectRetain();
}

void ModalityXEntityWords.words.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXEntityWords.words.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXEntityWords.unknownFields.getter()
{
  return ModalityXWordWithPronunciations.unknownFields.getter((void (*)(_QWORD))type metadata accessor for ModalityXEntityWords);
}

uint64_t ModalityXWordWithPronunciations.unknownFields.getter(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  a1(0);
  OUTLINED_FUNCTION_15();
  v1 = OUTLINED_FUNCTION_120();
  return OUTLINED_FUNCTION_146(v1, v2, v3, v4);
}

uint64_t type metadata accessor for ModalityXEntityWords(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXEntityWords);
}

uint64_t ModalityXEntityWords.unknownFields.setter(uint64_t a1)
{
  return ModalityXWordWithPronunciations.unknownFields.setter(a1, (void (*)(_QWORD))type metadata accessor for ModalityXEntityWords);
}

uint64_t ModalityXWordWithPronunciations.unknownFields.setter(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  a2(0);
  OUTLINED_FUNCTION_15();
  v2 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_146(v2, v3, v4, v5);
}

uint64_t (*ModalityXEntityWords.unknownFields.modify())()
{
  type metadata accessor for ModalityXEntityWords(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXEntityWords.init()(_QWORD *a1@<X8>)
{
  ModalityXSpeechProfileSourceData.init()((void (*)(_QWORD))type metadata accessor for ModalityXEntityWords, a1);
}

void ModalityXSpeechProfileSourceData.init()(void (*a1)(_QWORD)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = MEMORY[0x24BEE4AF8];
  a1(0);
  OUTLINED_FUNCTION_253();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXEntities.entities.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXEntities.unknownFields.getter()
{
  return ModalityXWordWithPronunciations.unknownFields.getter((void (*)(_QWORD))type metadata accessor for ModalityXEntities);
}

uint64_t type metadata accessor for ModalityXEntities(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXEntities);
}

uint64_t ModalityXEntities.unknownFields.setter(uint64_t a1)
{
  return ModalityXWordWithPronunciations.unknownFields.setter(a1, (void (*)(_QWORD))type metadata accessor for ModalityXEntities);
}

uint64_t (*ModalityXEntities.unknownFields.modify())()
{
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXEntities.init()(_QWORD *a1@<X8>)
{
  ModalityXSpeechProfileSourceData.init()((void (*)(_QWORD))type metadata accessor for ModalityXEntities, a1);
}

uint64_t (*ModalityXSpeechProfileSourceData.entitiesByCategory.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXSpeechProfileSourceData.unknownFields.getter()
{
  return ModalityXWordWithPronunciations.unknownFields.getter((void (*)(_QWORD))type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t ModalityXSpeechProfileSourceData.unknownFields.setter(uint64_t a1)
{
  return ModalityXWordWithPronunciations.unknownFields.setter(a1, (void (*)(_QWORD))type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t (*ModalityXSpeechProfileSourceData.unknownFields.modify())()
{
  type metadata accessor for ModalityXSpeechProfileSourceData(0);
  OUTLINED_FUNCTION_431();
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXCategoryEntities.key.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXCategoryEntities(0);
  OUTLINED_FUNCTION_84(*(int *)(v0 + 20));
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for ModalityXCategoryEntities(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXCategoryEntities);
}

void key path setter for ModalityXCategoryEntities.key : ModalityXCategoryEntities(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXCategoryEntities.key.setter(v1, v2);
}

void ModalityXCategoryEntities.key.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_250();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXCategoryEntities.key.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  OUTLINED_FUNCTION_37_0();
  *(_DWORD *)(a1 + 24) = v3;
  v4 = OUTLINED_FUNCTION_84(v3);
  if (v4)
  {
    v6 = *v5;
    v7 = v4;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXCategoryEntities.hasKey.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXCategoryEntities(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXCategoryEntities.clearKey()()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXCategoryEntities.value.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_13_1();
  v6 = v5 - v4;
  v7 = type metadata accessor for ModalityXCategoryEntities(0);
  outlined init with copy of ModalityXEntities?(v1 + *(int *)(v7 + 24), v6);
  v8 = type metadata accessor for ModalityXEntities(0);
  if (__swift_getEnumTagSinglePayload(v6, 1, v8) == 1)
  {
    *a1 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_253();
    outlined destroy of ModalityXEntities?(v6, &demangling cache variable for type metadata for ModalityXEntities?);
  }
  else
  {
    outlined init with take of ModalityXEntities(v6, (uint64_t)a1);
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t outlined init with copy of ModalityXEntities?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined init with take of ModalityXEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModalityXEntities(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t key path setter for ModalityXCategoryEntities.value : ModalityXCategoryEntities(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for ModalityXEntities(0);
  MEMORY[0x24BDAC7A8](v2);
  outlined init with copy of ModalityXEntities(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return ModalityXCategoryEntities.value.setter();
}

uint64_t ModalityXCategoryEntities.value.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(int *)(type metadata accessor for ModalityXCategoryEntities(0) + 24);
  outlined destroy of ModalityXEntities?(v1, &demangling cache variable for type metadata for ModalityXEntities?);
  v2 = OUTLINED_FUNCTION_120();
  outlined init with take of ModalityXEntities(v2, v3);
  v4 = type metadata accessor for ModalityXEntities(0);
  return OUTLINED_FUNCTION_317(v1, 0, 1, v4);
}

void (*ModalityXCategoryEntities.value.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = type metadata accessor for ModalityXEntities(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[3] = malloc(v7);
  v8 = malloc(v7);
  v3[4] = v8;
  v9 = *(int *)(type metadata accessor for ModalityXCategoryEntities(0) + 24);
  *((_DWORD *)v3 + 10) = v9;
  outlined init with copy of ModalityXEntities?(v1 + v9, (uint64_t)v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    *v8 = MEMORY[0x24BEE4AF8];
    UnknownStorage.init()();
    outlined destroy of ModalityXEntities?((uint64_t)v5, &demangling cache variable for type metadata for ModalityXEntities?);
  }
  else
  {
    outlined init with take of ModalityXEntities((uint64_t)v5, (uint64_t)v8);
  }
  return ModalityXCategoryEntities.value.modify;
}

void ModalityXCategoryEntities.value.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 8);
  v6 = **(_QWORD **)a1 + *(int *)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    v7 = outlined init with copy of ModalityXEntities(*(_QWORD *)(*(_QWORD *)a1 + 32), (uint64_t)v3);
    OUTLINED_FUNCTION_53_0(v7, &demangling cache variable for type metadata for ModalityXEntities?);
    outlined init with take of ModalityXEntities((uint64_t)v3, v6);
    OUTLINED_FUNCTION_24_0();
    outlined destroy of ModalityXEntities((uint64_t)v4);
  }
  else
  {
    OUTLINED_FUNCTION_53_0(a1, &demangling cache variable for type metadata for ModalityXEntities?);
    outlined init with take of ModalityXEntities((uint64_t)v4, v6);
    OUTLINED_FUNCTION_24_0();
  }
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

uint64_t outlined init with copy of ModalityXEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModalityXEntities(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ModalityXEntities(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ModalityXEntities(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void ModalityXCategoryEntities.hasValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_13_1();
  v4 = v3 - v2;
  v5 = type metadata accessor for ModalityXCategoryEntities(0);
  outlined init with copy of ModalityXEntities?(v0 + *(int *)(v5 + 24), v4);
  v6 = OUTLINED_FUNCTION_52_0();
  __swift_getEnumTagSinglePayload(v4, 1, v6);
  outlined destroy of ModalityXEntities?(v4, &demangling cache variable for type metadata for ModalityXEntities?);
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ModalityXCategoryEntities.clearValue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ModalityXCategoryEntities(0);
  outlined destroy of ModalityXEntities?(v0 + *(int *)(v1 + 24), &demangling cache variable for type metadata for ModalityXEntities?);
  type metadata accessor for ModalityXEntities(0);
  v2 = OUTLINED_FUNCTION_139_0();
  OUTLINED_FUNCTION_317(v2, v3, v4, v5);
}

uint64_t ModalityXCategoryEntities.unknownFields.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_120();
  return OUTLINED_FUNCTION_146(v0, v1, v2, v3);
}

uint64_t ModalityXCategoryEntities.unknownFields.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_15();
  v0 = OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_146(v0, v1, v2, v3);
}

uint64_t (*ModalityXCategoryEntities.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t ModalityXCategoryEntities.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  UnknownStorage.init()();
  OUTLINED_FUNCTION_37_0();
  v3 = (_QWORD *)(a1 + v2);
  *v3 = 0;
  v3[1] = 0;
  type metadata accessor for ModalityXEntities(0);
  v4 = OUTLINED_FUNCTION_139_0();
  return OUTLINED_FUNCTION_317(v4, v5, v6, v7);
}

unint64_t static ModalityXWordWithPronunciations.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(25);
}

uint64_t static ModalityXWordWithPronunciations._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXWordWithPronunciations._protobuf_nameMap, a1);
}

uint64_t ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  OUTLINED_FUNCTION_20_1(a1, a2);
  result = dispatch thunk of Decoder.nextFieldNumber()();
  if (!v2)
  {
    while ((v4 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          OUTLINED_FUNCTION_8_1();
          closure #1 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)();
          break;
        case 2:
          dispatch thunk of Decoder.decodeRepeatedBytesField(value:)();
          break;
        case 3:
          OUTLINED_FUNCTION_8_1();
          closure #3 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)();
          break;
        case 4:
          OUTLINED_FUNCTION_8_1();
          closure #4 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      OUTLINED_FUNCTION_38_0();
      result = dispatch thunk of Decoder.nextFieldNumber()();
    }
  }
  return result;
}

uint64_t closure #1 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXWordWithPronunciations(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #3 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXWordWithPronunciations(0);
  return dispatch thunk of Decoder.decodeSingularInt32Field(value:)();
}

uint64_t closure #4 in ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXWordWithPronunciations(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t ModalityXWordWithPronunciations.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = closure #1 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(v0);
  if (!v1)
  {
    if (*(_QWORD *)(*(_QWORD *)v0 + 16))
      dispatch thunk of Visitor.visitRepeatedBytesField(value:fieldNumber:)();
    v3 = OUTLINED_FUNCTION_29_0();
    closure #2 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(v3);
    v4 = OUTLINED_FUNCTION_29_0();
    closure #3 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(v4);
    type metadata accessor for ModalityXWordWithPronunciations(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #1 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXWordWithPronunciations(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 24) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t closure #2 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXWordWithPronunciations(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 28) + 4) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)();
  return result;
}

uint64_t closure #3 in ModalityXWordWithPronunciations.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXWordWithPronunciations(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 32) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

void static ModalityXWordWithPronunciations.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - v8;
  v10 = OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_77();
  if (v13)
  {
    if (!v11)
      goto LABEL_26;
    OUTLINED_FUNCTION_24(v12);
    v16 = v16 && v14 == v15;
    if (!v16 && (OUTLINED_FUNCTION_75() & 1) == 0)
      goto LABEL_26;
  }
  else if (v11)
  {
    goto LABEL_26;
  }
  if ((specialized static Array<A>.== infix(_:_:)(*a1, *a2) & 1) == 0)
    goto LABEL_26;
  v17 = *(int *)(v10 + 28);
  v18 = (_DWORD *)((char *)a1 + v17);
  v19 = *((_BYTE *)a1 + v17 + 4);
  v20 = (_DWORD *)((char *)a2 + v17);
  v21 = *((unsigned __int8 *)a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_26;
LABEL_17:
    OUTLINED_FUNCTION_77();
    if (v24)
    {
      if (!v22)
        goto LABEL_26;
      OUTLINED_FUNCTION_24(v23);
      v27 = v16 && v25 == v26;
      if (!v27 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_26;
    }
    else if (v22)
    {
      goto LABEL_26;
    }
    OUTLINED_FUNCTION_25_1(*(int *)(v10 + 20));
    OUTLINED_FUNCTION_26_0();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    v28 = *(void (**)(uint64_t))(v3 + 8);
    v29 = OUTLINED_FUNCTION_120();
    v28(v29);
    ((void (*)(char *, uint64_t))v28)(v9, v2);
    goto LABEL_26;
  }
  if (*v18 != *v20)
    LOBYTE(v21) = 1;
  if ((v21 & 1) == 0)
    goto LABEL_17;
LABEL_26:
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXWordWithPronunciations.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter(type metadata accessor for ModalityXWordWithPronunciations, &lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXWordWithPronunciations()
{
  static ModalityXWordWithPronunciations.protoMessageName.getter();
  return 0xD000000000000019;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXWordWithPronunciations(uint64_t a1, uint64_t a2)
{
  return ModalityXWordWithPronunciations.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXWordWithPronunciations()
{
  return ModalityXWordWithPronunciations.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXWordWithPronunciations()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, type metadata accessor for ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXWordWithPronunciations()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, type metadata accessor for ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXWordWithPronunciations()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, type metadata accessor for ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations);
  return Message.hash(into:)();
}

uint64_t static ModalityXEntityWords.protoMessageName.getter()
{
  return 0x7469746E452E584DLL;
}

uint64_t one-time initialization function for _protobuf_nameMap(uint64_t a1)
{
  return one-time initialization function for _protobuf_nameMap(a1, static ModalityXEntityWords._protobuf_nameMap, (uint64_t)"words", 5, MEMORY[0x24BE5C318]);
}

{
  return one-time initialization function for _protobuf_nameMap(a1, static ModalityXEntities._protobuf_nameMap, (uint64_t)"entities", 8, MEMORY[0x24BE5C318]);
}

{
  return one-time initialization function for _protobuf_nameMap(a1, static ModalityXSpeechProfileSourceData._protobuf_nameMap, (uint64_t)"entities_by_category", 20, MEMORY[0x24BE5C328]);
}

uint64_t static ModalityXEntityWords._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXEntityWords._protobuf_nameMap, a1);
}

uint64_t ModalityXEntityWords.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for ModalityXWordWithPronunciations, &lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations);
}

uint64_t ModalityXEntityWords.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXWordWithPronunciations, &lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations, (void (*)(_QWORD))type metadata accessor for ModalityXEntityWords);
}

void static ModalityXEntityWords.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  static ModalityXEntityWords.== infix(_:_:)(a1, a2, (uint64_t (*)(_QWORD, _QWORD))specialized static Array<A>.== infix(_:_:), type metadata accessor for ModalityXEntityWords);
}

Swift::Int ModalityXEntityWords.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter(type metadata accessor for ModalityXEntityWords, &lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXEntityWords()
{
  return 0x7469746E452E584DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXEntityWords(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXEntityWords(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXEntityWords()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, type metadata accessor for ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXEntityWords()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, type metadata accessor for ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXEntityWords()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, type metadata accessor for ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords);
  return Message.hash(into:)();
}

uint64_t static ModalityXEntities.protoMessageName.getter()
{
  return 0x7469746E452E584DLL;
}

uint64_t static ModalityXEntities._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXEntities._protobuf_nameMap, a1);
}

uint64_t ModalityXEntities.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for ModalityXEntityWords, &lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords);
}

uint64_t ModalityXEntityWords.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t result;
  char v16;

  v11 = v6;
  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v7 || (v16 & 1) != 0)
      break;
    if (result == 1)
      closure #1 in ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, v11, a2, a3, a4, a5, a6);
  }
  return result;
}

uint64_t ModalityXEntities.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXEntityWords, &lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords, (void (*)(_QWORD))type metadata accessor for ModalityXEntities);
}

void static ModalityXEntities.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  static ModalityXEntityWords.== infix(_:_:)(a1, a2, (uint64_t (*)(_QWORD, _QWORD))specialized static Array<A>.== infix(_:_:), type metadata accessor for ModalityXEntities);
}

Swift::Int ModalityXEntities.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter(type metadata accessor for ModalityXEntities, &lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXEntities()
{
  return 0x7469746E452E584DLL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntities.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntities.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXEntities()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, type metadata accessor for ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXEntities()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, type metadata accessor for ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXEntities()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, type metadata accessor for ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
  return Message.hash(into:)();
}

unint64_t static ModalityXSpeechProfileSourceData.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(26);
}

uint64_t one-time initialization function for _protobuf_nameMap(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v9 = type metadata accessor for _NameMap();
  __swift_allocate_value_buffer(v9, a2);
  v10 = OUTLINED_FUNCTION_38_0();
  __swift_project_value_buffer(v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(Int, _NameMap.NameDescription)>);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (Int, _NameMap.NameDescription));
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24205B1B0;
  v16 = v15 + v14 + *(int *)(v12 + 48);
  *(_QWORD *)(v15 + v14) = 1;
  *(_QWORD *)v16 = a3;
  *(_QWORD *)(v16 + 8) = a4;
  *(_BYTE *)(v16 + 16) = 2;
  v17 = *a5;
  type metadata accessor for _NameMap.NameDescription();
  OUTLINED_FUNCTION_40_0();
  (*(void (**)(uint64_t, uint64_t))(v18 + 104))(v16, v17);
  return _NameMap.init(dictionaryLiteral:)();
}

uint64_t static ModalityXSpeechProfileSourceData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXSpeechProfileSourceData._protobuf_nameMap, a1);
}

uint64_t ModalityXSpeechProfileSourceData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.decodeMessage<A>(decoder:)(a1, a2, a3, type metadata accessor for ModalityXCategoryEntities, &lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities);
}

uint64_t closure #1 in ModalityXEntityWords.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  a5(0);
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(a6, a5, a7);
  return dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)();
}

uint64_t ModalityXSpeechProfileSourceData.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXEntityWords.traverse<A>(visitor:)(a1, a2, a3, type metadata accessor for ModalityXCategoryEntities, &lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities, (void (*)(_QWORD))type metadata accessor for ModalityXSpeechProfileSourceData);
}

uint64_t ModalityXEntityWords.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, void (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v13)(_QWORD);

  if (!*(_QWORD *)(*(_QWORD *)v7 + 16)
    || (v13 = a7,
        a4(0),
        _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(a5, a4, a6),
        result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(),
        a7 = v13,
        !v8))
  {
    a7(0);
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

void static ModalityXSpeechProfileSourceData.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  static ModalityXEntityWords.== infix(_:_:)(a1, a2, (uint64_t (*)(_QWORD, _QWORD))specialized static Array<A>.== infix(_:_:), type metadata accessor for ModalityXSpeechProfileSourceData);
}

void static ModalityXEntityWords.== infix(_:_:)(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - v12;
  if ((a3(*a1, *a2) & 1) != 0)
  {
    v14 = a4(0);
    OUTLINED_FUNCTION_25_1(*(int *)(v14 + 20));
    OUTLINED_FUNCTION_26_0();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    v15 = *(void (**)(uint64_t))(v5 + 8);
    v16 = OUTLINED_FUNCTION_120();
    v15(v16);
    ((void (*)(char *, uint64_t))v15)(v13, v4);
  }
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXSpeechProfileSourceData.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter(type metadata accessor for ModalityXSpeechProfileSourceData, &lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileSourceData);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXSpeechProfileSourceData()
{
  static ModalityXSpeechProfileSourceData.protoMessageName.getter();
  return 0xD00000000000001ALL;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXSpeechProfileSourceData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXSpeechProfileSourceData.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXSpeechProfileSourceData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ModalityXSpeechProfileSourceData.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXSpeechProfileSourceData()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileSourceData);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXSpeechProfileSourceData()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileSourceData);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXSpeechProfileSourceData()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileSourceData);
  return Message.hash(into:)();
}

unint64_t static ModalityXCategoryEntities.protoMessageName.getter()
{
  return OUTLINED_FUNCTION_132(19);
}

uint64_t static ModalityXCategoryEntities._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXCategoryEntities._protobuf_nameMap, a1);
}

uint64_t ModalityXCategoryEntities.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  OUTLINED_FUNCTION_20_1(a1, a2);
  while (1)
  {
    result = dispatch thunk of Decoder.nextFieldNumber()();
    if (v2 || (v4 & 1) != 0)
      break;
    if (result == 2)
    {
      OUTLINED_FUNCTION_8_1();
      closure #2 in ModalityXCategoryEntities.decodeMessage<A>(decoder:)();
    }
    else if (result == 1)
    {
      OUTLINED_FUNCTION_8_1();
      closure #1 in ModalityXCategoryEntities.decodeMessage<A>(decoder:)();
    }
    OUTLINED_FUNCTION_38_0();
  }
  return result;
}

uint64_t closure #1 in ModalityXCategoryEntities.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXCategoryEntities(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #2 in ModalityXCategoryEntities.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXCategoryEntities(0);
  type metadata accessor for ModalityXEntities(0);
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, type metadata accessor for ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t ModalityXCategoryEntities.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_30();
  result = closure #1 in ModalityXCategoryEntities.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    v3 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXCategoryEntities.traverse<A>(visitor:)(v3);
    OUTLINED_FUNCTION_38_0();
    return UnknownStorage.traverse<A>(visitor:)();
  }
  return result;
}

uint64_t closure #1 in ModalityXCategoryEntities.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXCategoryEntities(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 20) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t closure #2 in ModalityXCategoryEntities.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXEntities(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModalityXCategoryEntities(0);
  outlined init with copy of ModalityXEntities?(a1 + *(int *)(v8 + 24), (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
    return outlined destroy of ModalityXEntities?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXEntities?);
  outlined init with take of ModalityXEntities((uint64_t)v4, (uint64_t)v7);
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, type metadata accessor for ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXEntities((uint64_t)v7);
}

uint64_t static ModalityXCategoryEntities.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v52 = OUTLINED_FUNCTION_15();
  v4 = *(_QWORD *)(v52 - 8);
  v5 = MEMORY[0x24BDAC7A8](v52);
  v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)&v48 - v7;
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_13_1();
  v49 = v10 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXEntities?, ModalityXEntities?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_13_1();
  v15 = v14 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
  OUTLINED_FUNCTION_0_0();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v48 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v48 - v23;
  v25 = type metadata accessor for ModalityXCategoryEntities(0);
  v26 = *(int *)(v25 + 20);
  v53 = a1;
  v27 = *(_QWORD *)(a2 + v26 + 8);
  if (!*(_QWORD *)(a1 + v26 + 8))
  {
    v48 = v4;
    if (v27)
      goto LABEL_24;
    goto LABEL_10;
  }
  if (!v27)
    goto LABEL_24;
  v48 = v4;
  OUTLINED_FUNCTION_24(a1 + v26);
  v30 = v30 && v28 == v29;
  if (v30 || (v31 = 0, (OUTLINED_FUNCTION_75() & 1) != 0))
  {
LABEL_10:
    outlined init with copy of ModalityXEntities?(v53 + *(int *)(v25 + 24), (uint64_t)v24);
    v32 = a2;
    outlined init with copy of ModalityXEntities?(a2 + *(int *)(v25 + 24), (uint64_t)v22);
    v33 = v15 + *(int *)(v11 + 48);
    outlined init with copy of ModalityXEntities?((uint64_t)v24, v15);
    outlined init with copy of ModalityXEntities?((uint64_t)v22, v33);
    OUTLINED_FUNCTION_34_0(v15);
    if (v30)
    {
      OUTLINED_FUNCTION_21_0((uint64_t)v22);
      OUTLINED_FUNCTION_21_0((uint64_t)v24);
      v34 = OUTLINED_FUNCTION_34_0(v33);
      if (v30)
      {
        OUTLINED_FUNCTION_53_0(v34, &demangling cache variable for type metadata for ModalityXEntities?);
        v35 = v52;
LABEL_21:
        v42 = v48;
        v43 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
        v44 = v50;
        v43(v50, v53, v35);
        v45 = v51;
        v43(v51, v32, v35);
        _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v31 = dispatch thunk of static Equatable.== infix(_:_:)();
        v46 = *(void (**)(char *, uint64_t))(v42 + 8);
        v46(v45, v35);
        v46(v44, v35);
        return v31 & 1;
      }
    }
    else
    {
      outlined init with copy of ModalityXEntities?(v15, (uint64_t)v19);
      OUTLINED_FUNCTION_34_0(v33);
      if (!v36)
      {
        v39 = v49;
        outlined init with take of ModalityXEntities(v33, v49);
        specialized static Array<A>.== infix(_:_:)();
        if ((v40 & 1) != 0)
        {
          _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v35 = v52;
          v41 = dispatch thunk of static Equatable.== infix(_:_:)();
          outlined destroy of ModalityXEntities(v39);
          OUTLINED_FUNCTION_21_0((uint64_t)v22);
          OUTLINED_FUNCTION_21_0((uint64_t)v24);
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_21_0(v15);
          if ((v41 & 1) != 0)
            goto LABEL_21;
LABEL_24:
          v31 = 0;
          return v31 & 1;
        }
        outlined destroy of ModalityXEntities(v39);
        OUTLINED_FUNCTION_35_0((uint64_t)v22);
        OUTLINED_FUNCTION_35_0((uint64_t)v24);
        OUTLINED_FUNCTION_50_0();
        v38 = v15;
        v37 = &demangling cache variable for type metadata for ModalityXEntities?;
LABEL_23:
        outlined destroy of ModalityXEntities?(v38, v37);
        goto LABEL_24;
      }
      OUTLINED_FUNCTION_35_0((uint64_t)v22);
      OUTLINED_FUNCTION_35_0((uint64_t)v24);
      OUTLINED_FUNCTION_50_0();
    }
    v37 = &demangling cache variable for type metadata for (ModalityXEntities?, ModalityXEntities?);
    v38 = v15;
    goto LABEL_23;
  }
  return v31 & 1;
}

Swift::Int ModalityXCategoryEntities.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter(type metadata accessor for ModalityXCategoryEntities, &lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities);
}

Swift::Int ModalityXWordWithPronunciations.hashValue.getter(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  Hasher.init(_seed:)();
  a1(0);
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(a2, a1, a3);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXCategoryEntities()
{
  static ModalityXCategoryEntities.protoMessageName.getter();
  return 0xD000000000000013;
}

uint64_t protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXCategoryEntities(uint64_t a1, uint64_t a2)
{
  return ModalityXCategoryEntities.decodeMessage<A>(decoder:)(a1, a2);
}

uint64_t protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXCategoryEntities()
{
  return ModalityXCategoryEntities.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXCategoryEntities()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, type metadata accessor for ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXCategoryEntities()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, type metadata accessor for ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXCategoryEntities()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, type metadata accessor for ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities);
  return Message.hash(into:)();
}

uint64_t _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2426A3278](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t outlined destroy of ModalityXEntities?(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXWordWithPronunciations()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, type metadata accessor for ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations);
}

uint64_t base witness table accessor for Message in ModalityXWordWithPronunciations()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, type metadata accessor for ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations);
}

uint64_t base witness table accessor for Hashable in ModalityXWordWithPronunciations()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, type metadata accessor for ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations);
}

uint64_t base witness table accessor for Equatable in ModalityXWordWithPronunciations()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXWordWithPronunciations and conformance ModalityXWordWithPronunciations, type metadata accessor for ModalityXWordWithPronunciations, (uint64_t)&protocol conformance descriptor for ModalityXWordWithPronunciations);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXEntityWords()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, type metadata accessor for ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords);
}

uint64_t base witness table accessor for Message in ModalityXEntityWords()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, type metadata accessor for ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords);
}

uint64_t base witness table accessor for Hashable in ModalityXEntityWords()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, type metadata accessor for ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords);
}

uint64_t base witness table accessor for Equatable in ModalityXEntityWords()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntityWords and conformance ModalityXEntityWords, type metadata accessor for ModalityXEntityWords, (uint64_t)&protocol conformance descriptor for ModalityXEntityWords);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, type metadata accessor for ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
}

uint64_t base witness table accessor for Message in ModalityXEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, type metadata accessor for ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
}

uint64_t base witness table accessor for Hashable in ModalityXEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, type metadata accessor for ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
}

uint64_t base witness table accessor for Equatable in ModalityXEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXEntities and conformance ModalityXEntities, type metadata accessor for ModalityXEntities, (uint64_t)&protocol conformance descriptor for ModalityXEntities);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXSpeechProfileSourceData()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileSourceData);
}

uint64_t base witness table accessor for Message in ModalityXSpeechProfileSourceData()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileSourceData);
}

uint64_t base witness table accessor for Hashable in ModalityXSpeechProfileSourceData()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileSourceData);
}

uint64_t base witness table accessor for Equatable in ModalityXSpeechProfileSourceData()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXSpeechProfileSourceData and conformance ModalityXSpeechProfileSourceData, type metadata accessor for ModalityXSpeechProfileSourceData, (uint64_t)&protocol conformance descriptor for ModalityXSpeechProfileSourceData);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXCategoryEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, type metadata accessor for ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities);
}

uint64_t base witness table accessor for Message in ModalityXCategoryEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, type metadata accessor for ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities);
}

uint64_t base witness table accessor for Hashable in ModalityXCategoryEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, type metadata accessor for ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities);
}

uint64_t base witness table accessor for Equatable in ModalityXCategoryEntities()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXCategoryEntities and conformance ModalityXCategoryEntities, type metadata accessor for ModalityXCategoryEntities, (uint64_t)&protocol conformance descriptor for ModalityXCategoryEntities);
}

void sub_24204E05C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXWordWithPronunciations.orthography.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24204E080()
{
  _DWORD *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXWordWithPronunciations.frequency.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_24204E0A0(int *a1)
{
  ModalityXWordWithPronunciations.frequency.setter(*a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_24204E0C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXWordWithPronunciations.tag.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24204E0E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXCategoryEntities.key.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24204E108(_QWORD *a1@<X8>)
{
  ModalityXCategoryEntities.value.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXWordWithPronunciations(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for UnknownStorage();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (uint64_t *)((char *)v7 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)v7 + v14;
    v19 = (char *)a2 + v14;
    v18[4] = v19[4];
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v20 = a3[8];
    v21 = (uint64_t *)((char *)v7 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ModalityXWordWithPronunciations(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ModalityXWordWithPronunciations(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)((char *)a1 + v11);
  v14 = (_QWORD *)((char *)a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (char *)a1 + v12;
  v17 = (char *)a2 + v12;
  v16[4] = v17[4];
  *(_DWORD *)v16 = *(_DWORD *)v17;
  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ModalityXWordWithPronunciations(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_DWORD *)v15;
  v14[4] = v15[4];
  *(_DWORD *)v14 = v16;
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for ModalityXWordWithPronunciations(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v11[4] = v12[4];
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for ModalityXWordWithPronunciations(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for UnknownStorage();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = a3[8];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  v19 = (_QWORD *)((char *)a1 + v16);
  v20 = (_QWORD *)((char *)a2 + v16);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXWordWithPronunciations()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXWordWithPronunciations()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata completion function for ModalityXWordWithPronunciations()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ModalityXEntityWords()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXEntityWords()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for ModalityXEntities()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ModalityXEntities()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void initializeBufferWithCopyOfBuffer for ModalityXEntityWords(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    swift_retain();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_243();
    OUTLINED_FUNCTION_267_0();
  }
  OUTLINED_FUNCTION_12();
}

uint64_t destroy for ModalityXEntityWords(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = OUTLINED_FUNCTION_15();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void assignWithCopy for ModalityXEntityWords(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24));
  OUTLINED_FUNCTION_9_0();
}

void initializeWithTake for ModalityXEntityWords(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;

  *a1 = *a2;
  v3 = *(int *)(a3 + 20);
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_40_0();
  (*(void (**)(char *, char *))(v6 + 32))(v4, v5);
  OUTLINED_FUNCTION_9_0();
}

void assignWithTake for ModalityXEntityWords(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_148(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40));
  OUTLINED_FUNCTION_9_0();
}

uint64_t getEnumTagSinglePayload for ModalityXSpeechProfileSourceData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_35(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXSpeechProfileSourceData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_indexTm_0(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *a1 = (a2 - 1);
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_28((uint64_t)a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t type metadata completion function for ModalityXEntityWords()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ModalityXCategoryEntities(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(a3 + 20);
    v10 = *(int *)(a3 + 24);
    v11 = &a1[v9];
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *(_QWORD *)v11 = *v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = &a1[v10];
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = type metadata accessor for ModalityXEntities(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v14 = *v15;
      v19 = *(int *)(v16 + 20);
      v20 = &v14[v19];
      v21 = (char *)v15 + v19;
      swift_bridgeObjectRetain();
      v8(v20, v21, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t destroy for ModalityXCategoryEntities(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  v4 = type metadata accessor for UnknownStorage();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 24);
  v6 = type metadata accessor for ModalityXEntities(0);
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    return v8(v5 + *(int *)(v6 + 20), v4);
  }
  return result;
}

uint64_t initializeWithCopy for ModalityXCategoryEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = (_QWORD *)(a1 + v8);
  v11 = (_QWORD *)(a2 + v8);
  v12 = v11[1];
  *v10 = *v11;
  v10[1] = v12;
  v13 = (_QWORD *)(a1 + v9);
  v14 = (_QWORD *)(a2 + v9);
  v15 = type metadata accessor for ModalityXEntities(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = *(int *)(v15 + 20);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    swift_bridgeObjectRetain();
    v7((uint64_t)v18, (uint64_t)v19, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

uint64_t assignWithCopy for ModalityXCategoryEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for ModalityXEntities(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      *v13 = *v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8((uint64_t)v13 + *(int *)(v15 + 20), (uint64_t)v14 + *(int *)(v15 + 20), v6);
      return a1;
    }
    outlined destroy of ModalityXEntities((uint64_t)v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  *v13 = *v14;
  v18 = *(int *)(v15 + 20);
  v19 = (char *)v13 + v18;
  v20 = (char *)v14 + v18;
  v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v21(v19, v20, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  return a1;
}

char *initializeWithTake for ModalityXCategoryEntities(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for ModalityXEntities(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v7(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v6);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for ModalityXCategoryEntities(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  int EnumTagSinglePayload;
  int v19;
  uint64_t v20;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = *(int *)(a3 + 24);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = type metadata accessor for ModalityXEntities(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17);
  v19 = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17);
  if (!EnumTagSinglePayload)
  {
    if (!v19)
    {
      *v15 = *v16;
      swift_bridgeObjectRelease();
      v8((uint64_t)v15 + *(int *)(v17 + 20), (uint64_t)v16 + *(int *)(v17 + 20), v6);
      return a1;
    }
    outlined destroy of ModalityXEntities((uint64_t)v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  *v15 = *v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v15 + *(int *)(v17 + 20), (char *)v16 + *(int *)(v17 + 20), v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXCategoryEntities()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24204F050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_15();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    if ((_DWORD)a2 == 2147483646)
    {
      OUTLINED_FUNCTION_9_0();
      return;
    }
    v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    v8 = a1 + *(int *)(a3 + 24);
  }
  OUTLINED_FUNCTION_35(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for ModalityXCategoryEntities()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24204F0F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_15();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
      OUTLINED_FUNCTION_9_0();
      return;
    }
    v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXEntities?);
    v10 = a1 + *(int *)(a4 + 24);
  }
  OUTLINED_FUNCTION_28(v10, a2, a2, v9);
}

void type metadata completion function for ModalityXCategoryEntities()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXEntities?();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for ModalityXEntities?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for ModalityXEntities?)
  {
    type metadata accessor for ModalityXEntities(255);
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ModalityXEntities?);
  }
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return type metadata accessor for ModalityXWordWithPronunciations(0);
}

uint64_t OUTLINED_FUNCTION_20_1(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_21_0(uint64_t a1)
{
  uint64_t *v1;

  return outlined destroy of ModalityXEntities?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_25_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3 + a1, v1);
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  return v3(v0, v2 + *(int *)(v4 + 20), v1);
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_31(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXWordWithPronunciations(0);
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  return type metadata accessor for ModalityXWordWithPronunciations(0);
}

uint64_t OUTLINED_FUNCTION_34_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_35_0(uint64_t a1)
{
  uint64_t *v1;

  return outlined destroy of ModalityXEntities?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_37_0()
{
  return type metadata accessor for ModalityXCategoryEntities(0);
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  uint64_t v0;

  return outlined destroy of ModalityXEntities(v0);
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return type metadata accessor for ModalityXWordWithPronunciations(0);
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  return type metadata accessor for ModalityXEntities(0);
}

uint64_t OUTLINED_FUNCTION_53_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return outlined destroy of ModalityXEntities?(v2, a2);
}

void ModalityXDeviceInfo.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_261();
  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_83(*(int *)(v0 + 20));
  OUTLINED_FUNCTION_83(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_83(*(int *)(v2 + 28));
  OUTLINED_FUNCTION_83(*(int *)(v3 + 32));
  OUTLINED_FUNCTION_83(*(int *)(v4 + 36));
  OUTLINED_FUNCTION_1_0();
}

uint64_t type metadata accessor for ModalityXDeviceInfo(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXDeviceInfo);
}

void ModalityXAudioMetadata.init()()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_261();
  v1 = (int *)type metadata accessor for ModalityXAudioMetadata(0);
  *(_BYTE *)(v0 + v1[5]) = 8;
  *(_BYTE *)(v0 + v1[6]) = 8;
  *(_BYTE *)(v0 + v1[7]) = 2;
  v2 = v0 + v1[8];
  v3 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  *(_BYTE *)(v0 + v1[9]) = 2;
  OUTLINED_FUNCTION_83(v1[10]);
  OUTLINED_FUNCTION_9_0();
}

uint64_t type metadata accessor for ModalityXAudioMetadata(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXAudioMetadata);
}

uint64_t type metadata accessor for ModalityXVoiceTriggerInfo(uint64_t a1)
{
  return type metadata accessor for ModalityXServerBoundFrame.OneOf_Payload(a1, (uint64_t *)&type metadata singleton initialization cache for ModalityXVoiceTriggerInfo);
}

void ModalityXDeviceInfo.deviceName.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 20)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXDeviceInfo.deviceName : ModalityXDeviceInfo()
{
  swift_bridgeObjectRetain();
  ModalityXDeviceInfo.deviceName.setter();
}

void ModalityXDeviceInfo.deviceName.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_250();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXDeviceInfo.deviceName.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(int *)(OUTLINED_FUNCTION_21_1(a1) + 20);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_84(v2))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXDeviceInfo.hasDeviceName.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearDeviceName()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXDeviceInfo.deviceVersion.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 24)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXDeviceInfo.deviceVersion : ModalityXDeviceInfo()
{
  swift_bridgeObjectRetain();
  ModalityXDeviceInfo.deviceVersion.setter();
}

void ModalityXDeviceInfo.deviceVersion.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_250();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXDeviceInfo.deviceVersion.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(int *)(OUTLINED_FUNCTION_21_1(a1) + 24);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_84(v2))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXDeviceInfo.hasDeviceVersion.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearDeviceVersion()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXDeviceInfo.systemName.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 28)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXDeviceInfo.systemName : ModalityXDeviceInfo()
{
  swift_bridgeObjectRetain();
  ModalityXDeviceInfo.systemName.setter();
}

void ModalityXDeviceInfo.systemName.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_250();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXDeviceInfo.systemName.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(int *)(OUTLINED_FUNCTION_21_1(a1) + 28);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_84(v2))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXDeviceInfo.hasSystemName.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearSystemName()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXDeviceInfo.systemVersion.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 32)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXDeviceInfo.systemVersion : ModalityXDeviceInfo()
{
  swift_bridgeObjectRetain();
  ModalityXDeviceInfo.systemVersion.setter();
}

void ModalityXDeviceInfo.systemVersion.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_250();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXDeviceInfo.systemVersion.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(int *)(OUTLINED_FUNCTION_21_1(a1) + 32);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_84(v2))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXDeviceInfo.hasSystemVersion.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 32));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearSystemVersion()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXDeviceInfo.systemBuild.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 36)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXDeviceInfo.systemBuild : ModalityXDeviceInfo()
{
  swift_bridgeObjectRetain();
  ModalityXDeviceInfo.systemBuild.setter();
}

void ModalityXDeviceInfo.systemBuild.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_250();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXDeviceInfo.systemBuild.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(int *)(OUTLINED_FUNCTION_21_1(a1) + 36);
  *(_DWORD *)(v1 + 24) = v2;
  if (OUTLINED_FUNCTION_84(v2))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXDeviceInfo.hasSystemBuild.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXDeviceInfo(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 36));
}

Swift::Void __swiftcall ModalityXDeviceInfo.clearSystemBuild()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXDeviceInfo(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXDeviceInfo.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

void ModalityXAudioMetadata.codec.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_72_1(*(int *)(v0 + 20));
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXAudioMetadata.codec : ModalityXAudioMetadata()
{
  ModalityXAudioMetadata.codec.setter();
}

void ModalityXAudioMetadata.codec.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_70_0() + 20)) = v0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXAudioMetadata.codec.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_30_0(a1);
  OUTLINED_FUNCTION_59_1(*(int *)(v1 + 20));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXAudioMetadata.hasCodec.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 20)) != 8;
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearCodec()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 20)) = 8;
}

void ModalityXAudioMetadata.audioSource.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_72_1(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXAudioMetadata.audioSource : ModalityXAudioMetadata()
{
  ModalityXAudioMetadata.audioSource.setter();
}

void ModalityXAudioMetadata.audioSource.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_70_0() + 24)) = v0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXAudioMetadata.audioSource.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_30_0(a1);
  OUTLINED_FUNCTION_59_1(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXAudioMetadata.hasAudioSource.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 24)) != 8;
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearAudioSource()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 24)) = 8;
}

uint64_t ModalityXAudioMetadata.isFarField.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 28)) & 1;
}

void ModalityXAudioMetadata.isFarField.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_66_1() + 28)) = v0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXAudioMetadata.isFarField.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_30_0(a1);
  OUTLINED_FUNCTION_197(*(int *)(v1 + 28));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXAudioMetadata.hasIsFarField.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 28)) != 2;
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearIsFarField()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 28)) = 2;
}

void ModalityXAudioMetadata.voiceTriggerInfo.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_60_1(v5);
  OUTLINED_FUNCTION_62_1();
  if (v6)
  {
    ModalityXVoiceTriggerInfo.init()();
    outlined destroy of ModalityXEntities?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  }
  else
  {
    outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v4, a1);
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t outlined init with copy of ModalityXVoiceTriggerInfo?(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t key path setter for ModalityXAudioMetadata.voiceTriggerInfo : ModalityXAudioMetadata(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  MEMORY[0x24BDAC7A8](v2);
  outlined init with copy of ModalityXVoiceTriggerInfo(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return ModalityXAudioMetadata.voiceTriggerInfo.setter();
}

uint64_t ModalityXAudioMetadata.voiceTriggerInfo.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 32);
  outlined destroy of ModalityXEntities?(v1, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  v2 = OUTLINED_FUNCTION_120();
  outlined init with take of ModalityXVoiceTriggerInfo(v2, v3);
  v4 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_317(v1, 0, 1, v4);
}

void ModalityXVoiceTriggerInfo.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_261();
  v1 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  v2 = v0 + *(int *)(v1 + 20);
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  OUTLINED_FUNCTION_18(*(int *)(v1 + 24));
  OUTLINED_FUNCTION_18(*(int *)(v3 + 28));
  OUTLINED_FUNCTION_18(*(int *)(v4 + 32));
  OUTLINED_FUNCTION_18(*(int *)(v5 + 36));
  OUTLINED_FUNCTION_18(*(int *)(v6 + 40));
  OUTLINED_FUNCTION_83(*(int *)(v7 + 44));
  OUTLINED_FUNCTION_18(*(int *)(v8 + 48));
  OUTLINED_FUNCTION_18(*(int *)(v9 + 52));
  OUTLINED_FUNCTION_18(*(int *)(v10 + 56));
  OUTLINED_FUNCTION_1_0();
}

uint64_t outlined init with take of ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void (*ModalityXAudioMetadata.voiceTriggerInfo.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  v3[2] = v6;
  v7 = *(_QWORD *)(*((_QWORD *)v6 - 1) + 64);
  v3[3] = malloc(v7);
  v8 = (char *)malloc(v7);
  v3[4] = v8;
  v9 = *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 32);
  *((_DWORD *)v3 + 10) = v9;
  outlined init with copy of ModalityXVoiceTriggerInfo?(v1 + v9, (uint64_t)v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, (uint64_t)v6) == 1)
  {
    UnknownStorage.init()();
    OUTLINED_FUNCTION_16_0(v6[5]);
    OUTLINED_FUNCTION_16_0(v6[6]);
    OUTLINED_FUNCTION_16_0(v6[7]);
    OUTLINED_FUNCTION_16_0(v6[8]);
    OUTLINED_FUNCTION_16_0(v6[9]);
    OUTLINED_FUNCTION_16_0(v6[10]);
    v10 = &v8[v6[11]];
    *(_QWORD *)v10 = 0;
    *((_QWORD *)v10 + 1) = 0;
    OUTLINED_FUNCTION_16_0(v6[12]);
    OUTLINED_FUNCTION_16_0(v6[13]);
    OUTLINED_FUNCTION_16_0(v6[14]);
    outlined destroy of ModalityXEntities?((uint64_t)v5, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  }
  else
  {
    outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v5, (uint64_t)v8);
  }
  return ModalityXAudioMetadata.voiceTriggerInfo.modify;
}

void ModalityXAudioMetadata.voiceTriggerInfo.modify(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 8);
  v6 = **(_QWORD **)a1 + *(int *)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    v7 = outlined init with copy of ModalityXVoiceTriggerInfo(*(_QWORD *)(*(_QWORD *)a1 + 32), (uint64_t)v3);
    OUTLINED_FUNCTION_53_0(v7, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v3, v6);
    OUTLINED_FUNCTION_24_0();
    outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v4);
  }
  else
  {
    OUTLINED_FUNCTION_53_0(a1, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v4, v6);
    OUTLINED_FUNCTION_24_0();
  }
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

uint64_t outlined init with copy of ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of ModalityXVoiceTriggerInfo(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void ModalityXAudioMetadata.hasVoiceTriggerInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_60_1(v3);
  OUTLINED_FUNCTION_62_1();
  outlined destroy of ModalityXEntities?((uint64_t)v2, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearVoiceTriggerInfo()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 32);
  outlined destroy of ModalityXEntities?(v1, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  v2 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_317(v1, 1, 1, v2);
}

uint64_t ModalityXAudioMetadata.enableServerEndpoint.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 36)) & 1;
}

void ModalityXAudioMetadata.enableServerEndpoint.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_66_1() + 36)) = v0;
  OUTLINED_FUNCTION_1_0();
}

void ModalityXAudioMetadata.enableServerEndpoint.modify(_QWORD *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_30_0(a1);
  OUTLINED_FUNCTION_197(*(int *)(v1 + 36));
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXAudioMetadata.hasEnableServerEndpoint.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 36)) != 2;
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearEnableServerEndpoint()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 36)) = 2;
}

void ModalityXAudioMetadata.clientModelVersion.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXAudioMetadata(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 40)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXAudioMetadata.clientModelVersion : ModalityXAudioMetadata(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXAudioMetadata.clientModelVersion.setter(v1, v2);
}

void ModalityXAudioMetadata.clientModelVersion.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_250();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXAudioMetadata.clientModelVersion.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for ModalityXAudioMetadata(0) + 40);
  *(_DWORD *)(a1 + 24) = v3;
  if (OUTLINED_FUNCTION_84(v3))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXAudioMetadata.hasClientModelVersion.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXAudioMetadata(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 40));
}

Swift::Void __swiftcall ModalityXAudioMetadata.clearClientModelVersion()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXAudioMetadata(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*ModalityXAudioMetadata.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

double ModalityXVoiceTriggerInfo.triggerScore.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 20));
  if (!v3)
    return v2;
  return result;
}

void ModalityXVoiceTriggerInfo.triggerScore.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_15_0(*(int *)(v0 + 20));
  OUTLINED_FUNCTION_306_0();
}

void ModalityXVoiceTriggerInfo.triggerScore.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_6_1(a1) + 20);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasTriggerScore.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_8_2(*(int *)(v0 + 20));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearTriggerScore()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_7_1(*(int *)(v0 + 20));
}

double ModalityXVoiceTriggerInfo.triggerThreshold.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 24));
  if (!v3)
    return v2;
  return result;
}

void ModalityXVoiceTriggerInfo.triggerThreshold.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_15_0(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_306_0();
}

void ModalityXVoiceTriggerInfo.triggerThreshold.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_6_1(a1) + 24);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasTriggerThreshold.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_8_2(*(int *)(v0 + 24));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearTriggerThreshold()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_7_1(*(int *)(v0 + 24));
}

double ModalityXVoiceTriggerInfo.satScore.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 28));
  if (!v3)
    return v2;
  return result;
}

void ModalityXVoiceTriggerInfo.satScore.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_15_0(*(int *)(v0 + 28));
  OUTLINED_FUNCTION_306_0();
}

void ModalityXVoiceTriggerInfo.satScore.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_6_1(a1) + 28);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasSatScore.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_8_2(*(int *)(v0 + 28));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearSatScore()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_7_1(*(int *)(v0 + 28));
}

double ModalityXVoiceTriggerInfo.satThreshold.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 32));
  if (!v3)
    return v2;
  return result;
}

void ModalityXVoiceTriggerInfo.satThreshold.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_15_0(*(int *)(v0 + 32));
  OUTLINED_FUNCTION_306_0();
}

void ModalityXVoiceTriggerInfo.satThreshold.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_6_1(a1) + 32);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasSatThreshold.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_8_2(*(int *)(v0 + 32));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearSatThreshold()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_7_1(*(int *)(v0 + 32));
}

double ModalityXVoiceTriggerInfo.recognizerScore.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 36));
  if (!v3)
    return v2;
  return result;
}

void ModalityXVoiceTriggerInfo.recognizerScore.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_15_0(*(int *)(v0 + 36));
  OUTLINED_FUNCTION_306_0();
}

void ModalityXVoiceTriggerInfo.recognizerScore.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_6_1(a1) + 36);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasRecognizerScore.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_8_2(*(int *)(v0 + 36));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearRecognizerScore()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_7_1(*(int *)(v0 + 36));
}

double ModalityXVoiceTriggerInfo.recognizerThresholdOffset.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 40));
  if (!v3)
    return v2;
  return result;
}

void ModalityXVoiceTriggerInfo.recognizerThresholdOffset.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_15_0(*(int *)(v0 + 40));
  OUTLINED_FUNCTION_306_0();
}

void ModalityXVoiceTriggerInfo.recognizerThresholdOffset.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_6_1(a1) + 40);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasRecognizerThresholdOffset.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_8_2(*(int *)(v0 + 40));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearRecognizerThresholdOffset()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_7_1(*(int *)(v0 + 40));
}

void ModalityXVoiceTriggerInfo.configVersion.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (OUTLINED_FUNCTION_84(*(int *)(v0 + 44)))
    OUTLINED_FUNCTION_425();
  else
    OUTLINED_FUNCTION_306();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_120();
  OUTLINED_FUNCTION_1_0();
}

void key path setter for ModalityXVoiceTriggerInfo.configVersion : ModalityXVoiceTriggerInfo(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  ModalityXVoiceTriggerInfo.configVersion.setter(v1, v2);
}

void ModalityXVoiceTriggerInfo.configVersion.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_250();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_9_0();
}

void ModalityXVoiceTriggerInfo.configVersion.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for ModalityXVoiceTriggerInfo(0) + 44);
  *(_DWORD *)(a1 + 24) = v3;
  if (OUTLINED_FUNCTION_84(v3))
    OUTLINED_FUNCTION_113();
  else
    OUTLINED_FUNCTION_59();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasConfigVersion.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_209(*(int *)(v0 + 44));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearConfigVersion()()
{
  _QWORD *v0;

  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_238();
  *v0 = 0;
  v0[1] = 0;
  OUTLINED_FUNCTION_1_0();
}

double ModalityXVoiceTriggerInfo.hardwareSampleRate.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 48));
  if (!v3)
    return v2;
  return result;
}

void ModalityXVoiceTriggerInfo.hardwareSampleRate.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_15_0(*(int *)(v0 + 48));
  OUTLINED_FUNCTION_306_0();
}

void ModalityXVoiceTriggerInfo.hardwareSampleRate.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_6_1(a1) + 48);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasHardwareSampleRate.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_8_2(*(int *)(v0 + 48));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearHardwareSampleRate()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_7_1(*(int *)(v0 + 48));
}

double ModalityXVoiceTriggerInfo.extraSamplesAtStart.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 52));
  if (!v3)
    return v2;
  return result;
}

void ModalityXVoiceTriggerInfo.extraSamplesAtStart.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_15_0(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_306_0();
}

void ModalityXVoiceTriggerInfo.extraSamplesAtStart.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_6_1(a1) + 52);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasExtraSamplesAtStart.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_8_2(*(int *)(v0 + 52));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearExtraSamplesAtStart()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_7_1(*(int *)(v0 + 52));
}

double ModalityXVoiceTriggerInfo.triggerEnd.getter()
{
  uint64_t v0;
  double result;
  double v2;
  char v3;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  result = OUTLINED_FUNCTION_99_0(*(int *)(v0 + 56));
  if (!v3)
    return v2;
  return result;
}

void ModalityXVoiceTriggerInfo.triggerEnd.setter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_13_2();
  OUTLINED_FUNCTION_15_0(*(int *)(v0 + 56));
  OUTLINED_FUNCTION_306_0();
}

void ModalityXVoiceTriggerInfo.triggerEnd.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  char v5;

  v2 = *(int *)(OUTLINED_FUNCTION_6_1(a1) + 56);
  *(_DWORD *)(v1 + 16) = v2;
  v3 = OUTLINED_FUNCTION_99_0(v2);
  if (!v5)
    v3 = v4;
  *(double *)v1 = v3;
  OUTLINED_FUNCTION_1_0();
}

BOOL ModalityXVoiceTriggerInfo.hasTriggerEnd.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return OUTLINED_FUNCTION_8_2(*(int *)(v0 + 56));
}

Swift::Void __swiftcall ModalityXVoiceTriggerInfo.clearTriggerEnd()()
{
  uint64_t v0;

  v0 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_7_1(*(int *)(v0 + 56));
}

uint64_t (*ModalityXVoiceTriggerInfo.unknownFields.modify())()
{
  return destructiveProjectEnumData for ModalityXUserInterfaceIdiom;
}

uint64_t static ModalityXDeviceInfo.protoMessageName.getter()
{
  return 0x63697665442E584DLL;
}

uint64_t static ModalityXDeviceInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXDeviceInfo._protobuf_nameMap, a1);
}

void ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_8_1();
          closure #1 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
          break;
        case 2:
          OUTLINED_FUNCTION_8_1();
          closure #2 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
          break;
        case 3:
          OUTLINED_FUNCTION_8_1();
          closure #3 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
          break;
        case 4:
          OUTLINED_FUNCTION_8_1();
          closure #4 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
          break;
        case 5:
          OUTLINED_FUNCTION_8_1();
          closure #5 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_70();
}

uint64_t closure #1 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #2 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #3 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #4 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #5 in ModalityXDeviceInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXDeviceInfo(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

void ModalityXDeviceInfo.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_30();
  closure #1 in ModalityXDeviceInfo.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    v2 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXDeviceInfo.traverse<A>(visitor:)(v2);
    v3 = OUTLINED_FUNCTION_30();
    closure #3 in ModalityXDeviceInfo.traverse<A>(visitor:)(v3);
    v4 = OUTLINED_FUNCTION_30();
    closure #4 in ModalityXDeviceInfo.traverse<A>(visitor:)(v4);
    v5 = OUTLINED_FUNCTION_30();
    closure #5 in ModalityXDeviceInfo.traverse<A>(visitor:)(v5);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

uint64_t closure #1 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 20) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t closure #2 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 24) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t closure #3 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 28) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t closure #4 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 32) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t closure #5 in ModalityXDeviceInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXDeviceInfo(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 36) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

void static ModalityXDeviceInfo.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8]();
  v0 = OUTLINED_FUNCTION_92();
  type metadata accessor for ModalityXDeviceInfo(v0);
  OUTLINED_FUNCTION_77();
  if (!v3)
  {
    if (v1)
      goto LABEL_46;
LABEL_10:
    OUTLINED_FUNCTION_77();
    if (v9)
    {
      if (!v7)
        goto LABEL_46;
      OUTLINED_FUNCTION_24(v8);
      v12 = v6 && v10 == v11;
      if (!v12 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_46;
    }
    else if (v7)
    {
      goto LABEL_46;
    }
    OUTLINED_FUNCTION_77();
    if (v15)
    {
      if (!v13)
        goto LABEL_46;
      OUTLINED_FUNCTION_24(v14);
      v18 = v6 && v16 == v17;
      if (!v18 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_46;
    }
    else if (v13)
    {
      goto LABEL_46;
    }
    OUTLINED_FUNCTION_77();
    if (v21)
    {
      if (!v19)
        goto LABEL_46;
      OUTLINED_FUNCTION_24(v20);
      v24 = v6 && v22 == v23;
      if (!v24 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_46;
    }
    else if (v19)
    {
      goto LABEL_46;
    }
    OUTLINED_FUNCTION_77();
    if (v27)
    {
      if (!v25)
        goto LABEL_46;
      OUTLINED_FUNCTION_24(v26);
      v30 = v6 && v28 == v29;
      if (!v30 && (OUTLINED_FUNCTION_75() & 1) == 0)
        goto LABEL_46;
    }
    else if (v25)
    {
      goto LABEL_46;
    }
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_102();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_111();
    OUTLINED_FUNCTION_67_0();
    goto LABEL_46;
  }
  if (v1)
  {
    OUTLINED_FUNCTION_24(v2);
    v6 = v6 && v4 == v5;
    if (v6 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_10;
  }
LABEL_46:
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXDeviceInfo.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter(type metadata accessor for ModalityXDeviceInfo, &lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
}

uint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXDeviceInfo()
{
  return 0x63697665442E584DLL;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXDeviceInfo()
{
  ModalityXDeviceInfo.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXDeviceInfo()
{
  ModalityXDeviceInfo.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXDeviceInfo()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, type metadata accessor for ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXDeviceInfo()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, type metadata accessor for ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXDeviceInfo()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, type metadata accessor for ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
  return Message.hash(into:)();
}

unint64_t static ModalityXAudioMetadata.protoMessageName.getter()
{
  return 0xD000000000000010;
}

uint64_t static ModalityXAudioMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXAudioMetadata._protobuf_nameMap, a1);
}

void ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_8_1();
          closure #1 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
          break;
        case 2:
          OUTLINED_FUNCTION_8_1();
          closure #2 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
          break;
        case 3:
          OUTLINED_FUNCTION_8_1();
          closure #3 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
          break;
        case 4:
          OUTLINED_FUNCTION_8_1();
          closure #4 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
          break;
        case 5:
          OUTLINED_FUNCTION_8_1();
          closure #5 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
          break;
        case 6:
          OUTLINED_FUNCTION_8_1();
          closure #6 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_70();
}

uint64_t closure #1 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXAudioMetadata(0);
  lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec();
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t closure #2 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXAudioMetadata(0);
  lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource();
  return dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)();
}

uint64_t closure #3 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXAudioMetadata(0);
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t closure #4 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXAudioMetadata(0);
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, type metadata accessor for ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
  return dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)();
}

uint64_t closure #5 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXAudioMetadata(0);
  return dispatch thunk of Decoder.decodeSingularBoolField(value:)();
}

uint64_t closure #6 in ModalityXAudioMetadata.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXAudioMetadata(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

void ModalityXAudioMetadata.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OUTLINED_FUNCTION_30();
  closure #1 in ModalityXAudioMetadata.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    v2 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXAudioMetadata.traverse<A>(visitor:)(v2);
    v3 = OUTLINED_FUNCTION_30();
    closure #3 in ModalityXAudioMetadata.traverse<A>(visitor:)(v3);
    v4 = OUTLINED_FUNCTION_30();
    closure #4 in ModalityXAudioMetadata.traverse<A>(visitor:)(v4);
    v5 = OUTLINED_FUNCTION_30();
    closure #5 in ModalityXAudioMetadata.traverse<A>(visitor:)(v5);
    v6 = OUTLINED_FUNCTION_30();
    closure #6 in ModalityXAudioMetadata.traverse<A>(visitor:)(v6);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

uint64_t closure #1 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 20)) != 8)
  {
    lazy protocol witness table accessor for type ModalityXCodec and conformance ModalityXCodec();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #2 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 24)) != 8)
  {
    lazy protocol witness table accessor for type ModalityXAudioSource and conformance ModalityXAudioSource();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)();
  }
  return result;
}

uint64_t closure #3 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 28)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #4 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ModalityXAudioMetadata(0);
  outlined init with copy of ModalityXVoiceTriggerInfo?(a1 + *(int *)(v8 + 32), (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
    return outlined destroy of ModalityXEntities?((uint64_t)v4, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  outlined init with take of ModalityXVoiceTriggerInfo((uint64_t)v4, (uint64_t)v7);
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, type metadata accessor for ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)();
  return outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v7);
}

uint64_t closure #5 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 36)) != 2)
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)();
  return result;
}

uint64_t closure #6 in ModalityXAudioMetadata.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXAudioMetadata(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 40) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t static ModalityXAudioMetadata.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int *v24;
  int *v25;
  uint64_t v26;
  int v27;
  int v28;
  BOOL v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v42;
  char v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v4 = OUTLINED_FUNCTION_15();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  v5 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v60 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v59 - v7;
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (ModalityXVoiceTriggerInfo?, ModalityXVoiceTriggerInfo?));
  OUTLINED_FUNCTION_0_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  OUTLINED_FUNCTION_0_0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v59 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v59 - v22;
  v24 = (int *)type metadata accessor for ModalityXAudioMetadata(0);
  v25 = v24;
  v26 = v24[5];
  v27 = *(unsigned __int8 *)(a1 + v26);
  v28 = *(unsigned __int8 *)(a2 + v26);
  if (v27 == 8)
  {
    if (v28 != 8)
      goto LABEL_31;
  }
  else
  {
    v29 = v28 != 8 && v27 == v28;
    if (!v29)
      goto LABEL_31;
  }
  v30 = v24[6];
  v31 = *(unsigned __int8 *)(a1 + v30);
  v32 = *(unsigned __int8 *)(a2 + v30);
  if (v31 == 8)
  {
    if (v32 != 8)
      goto LABEL_31;
  }
  else if (v32 == 8 || v31 != v32)
  {
    goto LABEL_31;
  }
  v34 = v24[7];
  v35 = *(unsigned __int8 *)(a1 + v34);
  v36 = *(unsigned __int8 *)(a2 + v34);
  if (v35 == 2)
  {
    if (v36 != 2)
      goto LABEL_31;
  }
  else if (v36 == 2 || ((((v36 & 1) == 0) ^ v35) & 1) == 0)
  {
    goto LABEL_31;
  }
  outlined init with copy of ModalityXVoiceTriggerInfo?(a1 + v24[8], (uint64_t)v23);
  outlined init with copy of ModalityXVoiceTriggerInfo?(a2 + v25[8], (uint64_t)v21);
  v37 = (uint64_t)&v14[*(int *)(v11 + 48)];
  outlined init with copy of ModalityXVoiceTriggerInfo?((uint64_t)v23, (uint64_t)v14);
  outlined init with copy of ModalityXVoiceTriggerInfo?((uint64_t)v21, v37);
  OUTLINED_FUNCTION_34_0((uint64_t)v14);
  if (v29)
  {
    outlined destroy of ModalityXEntities?((uint64_t)v21, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    outlined destroy of ModalityXEntities?((uint64_t)v23, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    v38 = OUTLINED_FUNCTION_34_0(v37);
    if (v29)
    {
      OUTLINED_FUNCTION_53_0(v38, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
      goto LABEL_34;
    }
LABEL_30:
    OUTLINED_FUNCTION_53_0(v38, &demangling cache variable for type metadata for (ModalityXVoiceTriggerInfo?, ModalityXVoiceTriggerInfo?));
    goto LABEL_31;
  }
  outlined init with copy of ModalityXVoiceTriggerInfo?((uint64_t)v14, (uint64_t)v18);
  OUTLINED_FUNCTION_34_0(v37);
  if (v39)
  {
    outlined destroy of ModalityXEntities?((uint64_t)v21, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    outlined destroy of ModalityXEntities?((uint64_t)v23, &demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    v38 = outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v18);
    goto LABEL_30;
  }
  outlined init with take of ModalityXVoiceTriggerInfo(v37, (uint64_t)v10);
  static ModalityXVoiceTriggerInfo.== infix(_:_:)();
  v43 = v42;
  outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v10);
  OUTLINED_FUNCTION_64_1((uint64_t)v21);
  OUTLINED_FUNCTION_64_1((uint64_t)v23);
  outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v18);
  OUTLINED_FUNCTION_64_1((uint64_t)v14);
  if ((v43 & 1) == 0)
    goto LABEL_31;
LABEL_34:
  v44 = v25[9];
  v45 = *(unsigned __int8 *)(a1 + v44);
  v46 = *(unsigned __int8 *)(a2 + v44);
  if (v45 == 2)
  {
    if (v46 != 2)
      goto LABEL_31;
  }
  else if (v46 == 2 || ((((v46 & 1) == 0) ^ v45) & 1) == 0)
  {
    goto LABEL_31;
  }
  OUTLINED_FUNCTION_77();
  if (!v49)
  {
    if (!v47)
    {
LABEL_48:
      v54 = v61;
      v53 = v62;
      v55 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v56 = v59;
      v55(v59, a1, v62);
      v57 = v60;
      v55(v60, a2, v53);
      _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v40 = dispatch thunk of static Equatable.== infix(_:_:)();
      v58 = *(void (**)(char *, uint64_t))(v54 + 8);
      v58(v57, v53);
      v58(v56, v53);
      return v40 & 1;
    }
LABEL_31:
    v40 = 0;
    return v40 & 1;
  }
  if (!v47)
    goto LABEL_31;
  OUTLINED_FUNCTION_24(v48);
  if (v29 && v50 == v51)
    goto LABEL_48;
  v40 = 0;
  if ((OUTLINED_FUNCTION_75() & 1) != 0)
    goto LABEL_48;
  return v40 & 1;
}

Swift::Int ModalityXAudioMetadata.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter(type metadata accessor for ModalityXAudioMetadata, &lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXAudioMetadata()
{
  static ModalityXAudioMetadata.protoMessageName.getter();
  return 0xD000000000000010;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXAudioMetadata()
{
  ModalityXAudioMetadata.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXAudioMetadata()
{
  ModalityXAudioMetadata.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXAudioMetadata()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, type metadata accessor for ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXAudioMetadata()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, type metadata accessor for ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXAudioMetadata()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, type metadata accessor for ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
  return Message.hash(into:)();
}

unint64_t static ModalityXVoiceTriggerInfo.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t static ModalityXVoiceTriggerInfo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return static ModalityXUserInterfaceIdiom._protobuf_nameMap.getter(&one-time initialization token for _protobuf_nameMap, (uint64_t)static ModalityXVoiceTriggerInfo._protobuf_nameMap, a1);
}

void ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_17();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          OUTLINED_FUNCTION_8_1();
          closure #1 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        case 2:
          OUTLINED_FUNCTION_8_1();
          closure #2 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        case 3:
          OUTLINED_FUNCTION_8_1();
          closure #3 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        case 4:
          OUTLINED_FUNCTION_8_1();
          closure #4 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        case 5:
          OUTLINED_FUNCTION_8_1();
          closure #5 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        case 6:
          OUTLINED_FUNCTION_8_1();
          closure #6 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        case 7:
          OUTLINED_FUNCTION_8_1();
          closure #7 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        case 8:
          OUTLINED_FUNCTION_8_1();
          closure #8 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        case 9:
          OUTLINED_FUNCTION_8_1();
          closure #9 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        case 10:
          OUTLINED_FUNCTION_8_1();
          closure #10 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
          break;
        default:
          break;
      }
      v1 = OUTLINED_FUNCTION_93();
    }
  }
  OUTLINED_FUNCTION_70();
}

uint64_t closure #1 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #2 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #3 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #4 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #5 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #6 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #7 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularStringField(value:)();
}

uint64_t closure #8 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #9 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

uint64_t closure #10 in ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)()
{
  type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return dispatch thunk of Decoder.decodeSingularDoubleField(value:)();
}

void ModalityXVoiceTriggerInfo.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = OUTLINED_FUNCTION_30();
  closure #1 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v1);
  if (!v0)
  {
    v2 = OUTLINED_FUNCTION_30();
    closure #2 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v2);
    v3 = OUTLINED_FUNCTION_30();
    closure #3 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v3);
    v4 = OUTLINED_FUNCTION_30();
    closure #4 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v4);
    v5 = OUTLINED_FUNCTION_30();
    closure #5 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v5);
    v6 = OUTLINED_FUNCTION_30();
    closure #6 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v6);
    v7 = OUTLINED_FUNCTION_30();
    closure #7 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v7);
    v8 = OUTLINED_FUNCTION_30();
    closure #8 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v8);
    v9 = OUTLINED_FUNCTION_30();
    closure #9 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v9);
    v10 = OUTLINED_FUNCTION_30();
    closure #10 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(v10);
    OUTLINED_FUNCTION_69();
  }
  OUTLINED_FUNCTION_130();
}

uint64_t closure #1 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 20) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #2 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 24) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #3 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 28) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #4 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 32) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #5 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 36) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #6 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 40) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #7 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 44) + 8))
    return dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)();
  return result;
}

uint64_t closure #8 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 48) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #9 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 52) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

uint64_t closure #10 in ModalityXVoiceTriggerInfo.traverse<A>(visitor:)(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 56) + 8) & 1) == 0)
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)();
  return result;
}

void static ModalityXVoiceTriggerInfo.== infix(_:_:)()
{
  uint64_t v0;
  int v1;
  char v2;
  char v3;
  int v4;
  char v5;
  char v6;
  int v7;
  char v8;
  char v9;
  int v10;
  char v11;
  char v12;
  int v13;
  char v14;
  char v15;
  int v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  int v25;
  char v26;
  char v27;
  int v28;
  char v29;
  char v30;
  int v31;
  char v32;
  char v33;

  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_156();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_46();
  MEMORY[0x24BDAC7A8]();
  v0 = OUTLINED_FUNCTION_92();
  type metadata accessor for ModalityXVoiceTriggerInfo(v0);
  OUTLINED_FUNCTION_303_0();
  if ((v2 & 1) != 0)
  {
    if (!v1)
      goto LABEL_44;
  }
  else
  {
    OUTLINED_FUNCTION_295_0();
    if ((v3 & 1) != 0)
      goto LABEL_44;
  }
  OUTLINED_FUNCTION_303_0();
  if ((v5 & 1) != 0)
  {
    if (!v4)
      goto LABEL_44;
  }
  else
  {
    OUTLINED_FUNCTION_295_0();
    if ((v6 & 1) != 0)
      goto LABEL_44;
  }
  OUTLINED_FUNCTION_303_0();
  if ((v8 & 1) != 0)
  {
    if (!v7)
      goto LABEL_44;
  }
  else
  {
    OUTLINED_FUNCTION_295_0();
    if ((v9 & 1) != 0)
      goto LABEL_44;
  }
  OUTLINED_FUNCTION_303_0();
  if ((v11 & 1) != 0)
  {
    if (!v10)
      goto LABEL_44;
  }
  else
  {
    OUTLINED_FUNCTION_295_0();
    if ((v12 & 1) != 0)
      goto LABEL_44;
  }
  OUTLINED_FUNCTION_303_0();
  if ((v14 & 1) != 0)
  {
    if (!v13)
      goto LABEL_44;
  }
  else
  {
    OUTLINED_FUNCTION_295_0();
    if ((v15 & 1) != 0)
      goto LABEL_44;
  }
  OUTLINED_FUNCTION_303_0();
  if ((v17 & 1) != 0)
  {
    if (!v16)
      goto LABEL_44;
  }
  else
  {
    OUTLINED_FUNCTION_295_0();
    if ((v18 & 1) != 0)
      goto LABEL_44;
  }
  OUTLINED_FUNCTION_77();
  if (!v21)
  {
    if (v19)
      goto LABEL_44;
LABEL_34:
    OUTLINED_FUNCTION_303_0();
    if ((v26 & 1) != 0)
    {
      if (!v25)
        goto LABEL_44;
    }
    else
    {
      OUTLINED_FUNCTION_295_0();
      if ((v27 & 1) != 0)
        goto LABEL_44;
    }
    OUTLINED_FUNCTION_303_0();
    if ((v29 & 1) != 0)
    {
      if (!v28)
        goto LABEL_44;
    }
    else
    {
      OUTLINED_FUNCTION_295_0();
      if ((v30 & 1) != 0)
        goto LABEL_44;
    }
    OUTLINED_FUNCTION_303_0();
    if ((v32 & 1) != 0)
    {
      if (!v31)
        goto LABEL_44;
    }
    else
    {
      OUTLINED_FUNCTION_295_0();
      if ((v33 & 1) != 0)
        goto LABEL_44;
    }
    OUTLINED_FUNCTION_52_1();
    OUTLINED_FUNCTION_102();
    _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type UnknownStorage and conformance UnknownStorage, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_62();
    OUTLINED_FUNCTION_111();
    OUTLINED_FUNCTION_67_0();
    goto LABEL_44;
  }
  if (v19)
  {
    OUTLINED_FUNCTION_24(v20);
    v24 = v24 && v22 == v23;
    if (v24 || (OUTLINED_FUNCTION_75() & 1) != 0)
      goto LABEL_34;
  }
LABEL_44:
  OUTLINED_FUNCTION_90();
}

Swift::Int ModalityXVoiceTriggerInfo.hashValue.getter()
{
  return ModalityXWordWithPronunciations.hashValue.getter(type metadata accessor for ModalityXVoiceTriggerInfo, &lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
}

unint64_t protocol witness for static Message.protoMessageName.getter in conformance ModalityXVoiceTriggerInfo()
{
  static ModalityXVoiceTriggerInfo.protoMessageName.getter();
  return 0xD000000000000013;
}

void protocol witness for Message.decodeMessage<A>(decoder:) in conformance ModalityXVoiceTriggerInfo()
{
  ModalityXVoiceTriggerInfo.decodeMessage<A>(decoder:)();
}

void protocol witness for Message.traverse<A>(visitor:) in conformance ModalityXVoiceTriggerInfo()
{
  ModalityXVoiceTriggerInfo.traverse<A>(visitor:)();
}

uint64_t protocol witness for Message.isEqualTo(message:) in conformance ModalityXVoiceTriggerInfo()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, type metadata accessor for ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
  return _MessageImplementationBase.isEqualTo(message:)();
}

uint64_t protocol witness for CustomDebugStringConvertible.debugDescription.getter in conformance ModalityXVoiceTriggerInfo()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, type metadata accessor for ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
  return Message.debugDescription.getter();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance ModalityXVoiceTriggerInfo()
{
  _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, type metadata accessor for ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
  return Message.hash(into:)();
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXDeviceInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, type metadata accessor for ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
}

uint64_t base witness table accessor for Message in ModalityXDeviceInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, type metadata accessor for ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
}

uint64_t base witness table accessor for Hashable in ModalityXDeviceInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, type metadata accessor for ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
}

uint64_t base witness table accessor for Equatable in ModalityXDeviceInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXDeviceInfo and conformance ModalityXDeviceInfo, type metadata accessor for ModalityXDeviceInfo, (uint64_t)&protocol conformance descriptor for ModalityXDeviceInfo);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXAudioMetadata()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, type metadata accessor for ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
}

uint64_t base witness table accessor for Message in ModalityXAudioMetadata()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, type metadata accessor for ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
}

uint64_t base witness table accessor for Hashable in ModalityXAudioMetadata()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, type metadata accessor for ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
}

uint64_t base witness table accessor for Equatable in ModalityXAudioMetadata()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXAudioMetadata and conformance ModalityXAudioMetadata, type metadata accessor for ModalityXAudioMetadata, (uint64_t)&protocol conformance descriptor for ModalityXAudioMetadata);
}

uint64_t base witness table accessor for CustomDebugStringConvertible in ModalityXVoiceTriggerInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, type metadata accessor for ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
}

uint64_t base witness table accessor for Message in ModalityXVoiceTriggerInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, type metadata accessor for ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
}

uint64_t base witness table accessor for Hashable in ModalityXVoiceTriggerInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, type metadata accessor for ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
}

uint64_t base witness table accessor for Equatable in ModalityXVoiceTriggerInfo()
{
  return _s21InternalSwiftProtobuf14UnknownStorageVACSQAAWlTm_0(&lazy protocol witness table cache variable for type ModalityXVoiceTriggerInfo and conformance ModalityXVoiceTriggerInfo, type metadata accessor for ModalityXVoiceTriggerInfo, (uint64_t)&protocol conformance descriptor for ModalityXVoiceTriggerInfo);
}

void sub_2420538F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXDeviceInfo.deviceName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242053918()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXDeviceInfo.deviceVersion.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_24205393C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXDeviceInfo.systemName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242053960()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXDeviceInfo.systemVersion.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242053984()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXDeviceInfo.systemBuild.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_2420539A8()
{
  ModalityXAudioMetadata.codec.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420539C8()
{
  ModalityXAudioMetadata.audioSource.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_2420539E8()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXAudioMetadata.isFarField.getter() & 1;
  OUTLINED_FUNCTION_1_0();
}

void sub_242053A0C()
{
  ModalityXAudioMetadata.isFarField.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053A2C(uint64_t a1@<X8>)
{
  ModalityXAudioMetadata.voiceTriggerInfo.getter(a1);
  OUTLINED_FUNCTION_1_0();
}

void sub_242053A4C()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXAudioMetadata.enableServerEndpoint.getter() & 1;
  OUTLINED_FUNCTION_1_0();
}

void sub_242053A70()
{
  ModalityXAudioMetadata.enableServerEndpoint.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053A90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXAudioMetadata.clientModelVersion.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242053AB4()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXVoiceTriggerInfo.triggerScore.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053AD4(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXVoiceTriggerInfo.triggerScore.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053AF0()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXVoiceTriggerInfo.triggerThreshold.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053B10(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXVoiceTriggerInfo.triggerThreshold.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053B2C()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXVoiceTriggerInfo.satScore.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053B4C(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXVoiceTriggerInfo.satScore.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053B68()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXVoiceTriggerInfo.satThreshold.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053B88(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXVoiceTriggerInfo.satThreshold.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053BA4()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXVoiceTriggerInfo.recognizerScore.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053BC4(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXVoiceTriggerInfo.recognizerScore.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053BE0()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXVoiceTriggerInfo.recognizerThresholdOffset.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053C00(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXVoiceTriggerInfo.recognizerThresholdOffset.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053C1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20();
  ModalityXVoiceTriggerInfo.configVersion.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

void sub_242053C40()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXVoiceTriggerInfo.hardwareSampleRate.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053C60(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXVoiceTriggerInfo.hardwareSampleRate.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053C7C()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXVoiceTriggerInfo.extraSamplesAtStart.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053C9C(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXVoiceTriggerInfo.extraSamplesAtStart.setter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053CB8()
{
  double *v0;

  OUTLINED_FUNCTION_20();
  *v0 = ModalityXVoiceTriggerInfo.triggerEnd.getter();
  OUTLINED_FUNCTION_1_0();
}

void sub_242053CD8(uint64_t a1)
{
  OUTLINED_FUNCTION_251_0(a1);
  ModalityXVoiceTriggerInfo.triggerEnd.setter();
  OUTLINED_FUNCTION_1_0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXDeviceInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)a1 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[9];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXDeviceInfo(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (_QWORD *)(a1 + v16);
  v21 = (_QWORD *)(a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ModalityXDeviceInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = a3[9];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v31 = *v29;
  v30 = v29[1];
  *v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXDeviceInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2420541F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_35(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_63(a1 + *(int *)(a3 + 20));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXDeviceInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242054254()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_127();
  if (v1)
  {
    v2 = OUTLINED_FUNCTION_208();
    OUTLINED_FUNCTION_28(v2, v3, v4, v5);
  }
  else
  {
    OUTLINED_FUNCTION_229(*(int *)(v0 + 20));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t type metadata completion function for ModalityXDeviceInfo()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for ModalityXAudioMetadata(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    a1[v9] = a2[v9];
    v10 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      v16 = v13[5];
      v17 = &v11[v16];
      v18 = &v12[v16];
      *(_QWORD *)v17 = *(_QWORD *)v18;
      v17[8] = v18[8];
      v19 = v13[6];
      v20 = &v11[v19];
      v21 = &v12[v19];
      *(_QWORD *)v20 = *(_QWORD *)v21;
      v20[8] = v21[8];
      v22 = v13[7];
      v23 = &v11[v22];
      v24 = &v12[v22];
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v25 = v13[8];
      v26 = &v11[v25];
      v27 = &v12[v25];
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[8] = v27[8];
      v28 = v13[9];
      v29 = &v11[v28];
      v30 = &v12[v28];
      *(_QWORD *)v29 = *(_QWORD *)v30;
      v29[8] = v30[8];
      v31 = v13[10];
      v32 = &v11[v31];
      v33 = &v12[v31];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v32[8] = v33[8];
      v34 = v13[11];
      v35 = &v11[v34];
      v36 = &v12[v34];
      v37 = *((_QWORD *)v36 + 1);
      *(_QWORD *)v35 = *(_QWORD *)v36;
      *((_QWORD *)v35 + 1) = v37;
      v38 = v13[12];
      v39 = &v11[v38];
      v40 = &v12[v38];
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v39[8] = v40[8];
      v41 = v13[13];
      v42 = &v11[v41];
      v43 = &v12[v41];
      v42[8] = v43[8];
      *(_QWORD *)v42 = *(_QWORD *)v43;
      v44 = v13[14];
      v45 = &v11[v44];
      v46 = &v12[v44];
      *(_QWORD *)v45 = *(_QWORD *)v46;
      v45[8] = v46[8];
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
    }
    v47 = a3[10];
    a1[a3[9]] = a2[a3[9]];
    v48 = &a1[v47];
    v49 = &a2[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXAudioMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for UnknownStorage();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    v14 = v12[5];
    v15 = &v10[v14];
    v16 = &v11[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = v12[6];
    v18 = &v10[v17];
    v19 = &v11[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v12[7];
    v21 = &v10[v20];
    v22 = &v11[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v12[8];
    v24 = &v10[v23];
    v25 = &v11[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = v12[9];
    v27 = &v10[v26];
    v28 = &v11[v26];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = v12[10];
    v30 = &v10[v29];
    v31 = &v11[v29];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = v12[11];
    v33 = &v10[v32];
    v34 = &v11[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v36 = v12[12];
    v37 = &v10[v36];
    v38 = &v11[v36];
    *(_QWORD *)v37 = *(_QWORD *)v38;
    v37[8] = v38[8];
    v39 = v12[13];
    v40 = &v10[v39];
    v41 = &v11[v39];
    v40[8] = v41[8];
    *(_QWORD *)v40 = *(_QWORD *)v41;
    v42 = v12[14];
    v43 = &v10[v42];
    v44 = &v11[v42];
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
  }
  v45 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  v48 = v47[1];
  *v46 = *v47;
  v46[1] = v48;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v59;
  char *v60;
  char *v61;
  char v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v9 = a3[8];
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, (uint64_t)v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      v59 = v12[5];
      v60 = &v10[v59];
      v61 = &v11[v59];
      v62 = v61[8];
      *(_QWORD *)v60 = *(_QWORD *)v61;
      v60[8] = v62;
      v63 = v12[6];
      v64 = &v10[v63];
      v65 = &v11[v63];
      v66 = v65[8];
      *(_QWORD *)v64 = *(_QWORD *)v65;
      v64[8] = v66;
      v67 = v12[7];
      v68 = &v10[v67];
      v69 = &v11[v67];
      v70 = *(_QWORD *)v69;
      v68[8] = v69[8];
      *(_QWORD *)v68 = v70;
      v71 = v12[8];
      v72 = &v10[v71];
      v73 = &v11[v71];
      v74 = *(_QWORD *)v73;
      v72[8] = v73[8];
      *(_QWORD *)v72 = v74;
      v75 = v12[9];
      v76 = &v10[v75];
      v77 = &v11[v75];
      v78 = *(_QWORD *)v77;
      v76[8] = v77[8];
      *(_QWORD *)v76 = v78;
      v79 = v12[10];
      v80 = &v10[v79];
      v81 = &v11[v79];
      LOBYTE(v78) = v81[8];
      *(_QWORD *)v80 = *(_QWORD *)v81;
      v80[8] = v78;
      v82 = v12[11];
      v83 = &v10[v82];
      v84 = &v11[v82];
      *(_QWORD *)v83 = *(_QWORD *)v84;
      *((_QWORD *)v83 + 1) = *((_QWORD *)v84 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v85 = v12[12];
      v86 = &v10[v85];
      v87 = &v11[v85];
      v88 = *(_QWORD *)v87;
      v86[8] = v87[8];
      *(_QWORD *)v86 = v88;
      v89 = v12[13];
      v90 = &v10[v89];
      v91 = &v11[v89];
      LOBYTE(v88) = v91[8];
      *(_QWORD *)v90 = *(_QWORD *)v91;
      v90[8] = v88;
      v92 = v12[14];
      v93 = &v10[v92];
      v94 = &v11[v92];
      v95 = *(_QWORD *)v94;
      v93[8] = v94[8];
      *(_QWORD *)v93 = v95;
      goto LABEL_7;
    }
    outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  v15 = v12[5];
  v16 = &v10[v15];
  v17 = &v11[v15];
  v18 = v17[8];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v18;
  v19 = v12[6];
  v20 = &v10[v19];
  v21 = &v11[v19];
  v22 = v21[8];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v22;
  v23 = v12[7];
  v24 = &v10[v23];
  v25 = &v11[v23];
  v26 = v25[8];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v26;
  v27 = v12[8];
  v28 = &v10[v27];
  v29 = &v11[v27];
  v30 = v29[8];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v30;
  v31 = v12[9];
  v32 = &v10[v31];
  v33 = &v11[v31];
  v34 = v33[8];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v34;
  v35 = v12[10];
  v36 = &v10[v35];
  v37 = &v11[v35];
  v38 = v37[8];
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v38;
  v39 = v12[11];
  v40 = &v10[v39];
  v41 = &v11[v39];
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  v42 = v12[12];
  v43 = &v10[v42];
  v44 = &v11[v42];
  v45 = v44[8];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = v45;
  v46 = v12[13];
  v47 = &v10[v46];
  v48 = &v11[v46];
  v49 = v48[8];
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v47[8] = v49;
  v50 = v12[14];
  v51 = &v10[v50];
  v52 = &v11[v50];
  v53 = v52[8];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v51[8] = v53;
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
LABEL_7:
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v55 = a3[10];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  *v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    v14 = v12[5];
    v15 = &v10[v14];
    v16 = &v11[v14];
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    v17 = v12[6];
    v18 = &v10[v17];
    v19 = &v11[v17];
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = v12[7];
    v21 = &v10[v20];
    v22 = &v11[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v12[8];
    v24 = &v10[v23];
    v25 = &v11[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = v12[9];
    v27 = &v10[v26];
    v28 = &v11[v26];
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = v12[10];
    v30 = &v10[v29];
    v31 = &v11[v29];
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    *(_OWORD *)&v10[v12[11]] = *(_OWORD *)&v11[v12[11]];
    v32 = v12[12];
    v33 = &v10[v32];
    v34 = &v11[v32];
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    v35 = v12[13];
    v36 = &v10[v35];
    v37 = &v11[v35];
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    v38 = v12[14];
    v39 = &v10[v38];
    v40 = &v11[v38];
    *(_QWORD *)v39 = *(_QWORD *)v40;
    v39[8] = v40[8];
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, (uint64_t)v12);
  }
  v41 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v41) = *(_OWORD *)(a2 + v41);
  return a1;
}

uint64_t assignWithTake for ModalityXAudioMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;

  v6 = type metadata accessor for UnknownStorage();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = (int *)type metadata accessor for ModalityXVoiceTriggerInfo(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, (uint64_t)v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, (uint64_t)v13);
  if (!EnumTagSinglePayload)
  {
    if (!v15)
    {
      v8((uint64_t)v11, (uint64_t)v12, v6);
      v50 = v13[5];
      v51 = &v11[v50];
      v52 = &v12[v50];
      *(_QWORD *)v51 = *(_QWORD *)v52;
      v51[8] = v52[8];
      v53 = v13[6];
      v54 = &v11[v53];
      v55 = &v12[v53];
      *(_QWORD *)v54 = *(_QWORD *)v55;
      v54[8] = v55[8];
      v56 = v13[7];
      v57 = &v11[v56];
      v58 = &v12[v56];
      *(_QWORD *)v57 = *(_QWORD *)v58;
      v57[8] = v58[8];
      v59 = v13[8];
      v60 = &v11[v59];
      v61 = &v12[v59];
      *(_QWORD *)v60 = *(_QWORD *)v61;
      v60[8] = v61[8];
      v62 = v13[9];
      v63 = &v11[v62];
      v64 = &v12[v62];
      *(_QWORD *)v63 = *(_QWORD *)v64;
      v63[8] = v64[8];
      v65 = v13[10];
      v66 = &v11[v65];
      v67 = &v12[v65];
      *(_QWORD *)v66 = *(_QWORD *)v67;
      v66[8] = v67[8];
      v68 = v13[11];
      v69 = &v11[v68];
      v70 = &v12[v68];
      v72 = *(_QWORD *)v70;
      v71 = *((_QWORD *)v70 + 1);
      *(_QWORD *)v69 = v72;
      *((_QWORD *)v69 + 1) = v71;
      swift_bridgeObjectRelease();
      v73 = v13[12];
      v74 = &v11[v73];
      v75 = &v12[v73];
      *(_QWORD *)v74 = *(_QWORD *)v75;
      v74[8] = v75[8];
      v76 = v13[13];
      v77 = &v11[v76];
      v78 = &v12[v76];
      v77[8] = v78[8];
      *(_QWORD *)v77 = *(_QWORD *)v78;
      v79 = v13[14];
      v80 = &v11[v79];
      v81 = &v12[v79];
      v80[8] = v81[8];
      *(_QWORD *)v80 = *(_QWORD *)v81;
      goto LABEL_7;
    }
    outlined destroy of ModalityXVoiceTriggerInfo((uint64_t)v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
  v16 = v13[5];
  v17 = &v11[v16];
  v18 = &v12[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = v13[6];
  v20 = &v11[v19];
  v21 = &v12[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = v13[7];
  v23 = &v11[v22];
  v24 = &v12[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  v25 = v13[8];
  v26 = &v11[v25];
  v27 = &v12[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = v13[9];
  v29 = &v11[v28];
  v30 = &v12[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = v13[10];
  v32 = &v11[v31];
  v33 = &v12[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *(_OWORD *)&v11[v13[11]] = *(_OWORD *)&v12[v13[11]];
  v34 = v13[12];
  v35 = &v11[v34];
  v36 = &v12[v34];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v35[8] = v36[8];
  v37 = v13[13];
  v38 = &v11[v37];
  v39 = &v12[v37];
  *(_QWORD *)v38 = *(_QWORD *)v39;
  v38[8] = v39[8];
  v40 = v13[14];
  v41 = &v11[v40];
  v42 = &v12[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  v41[8] = v42[8];
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, (uint64_t)v13);
LABEL_7:
  v44 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v45 = (_QWORD *)(a1 + v44);
  v46 = (uint64_t *)(a2 + v44);
  v48 = *v46;
  v47 = v46[1];
  *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXAudioMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_242055174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = OUTLINED_FUNCTION_15();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
LABEL_5:
    OUTLINED_FUNCTION_35(v8, a2, v7);
    return;
  }
  v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = a1 + *(int *)(a3 + 32);
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_63(a1 + *(int *)(a3 + 40));
  OUTLINED_FUNCTION_9_0();
}

uint64_t storeEnumTagSinglePayload for ModalityXAudioMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242055204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_127();
  if (v6)
  {
    v4 = v3;
    v5 = v1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for ModalityXVoiceTriggerInfo?);
    OUTLINED_FUNCTION_127();
    if (!v6)
    {
      OUTLINED_FUNCTION_229(*(int *)(v2 + 40));
      OUTLINED_FUNCTION_9_0();
      return;
    }
    v4 = v7;
    v5 = v1 + *(int *)(v2 + 32);
  }
  OUTLINED_FUNCTION_28(v5, v0, v0, v4);
}

void type metadata completion function for ModalityXAudioMetadata()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for UnknownStorage();
  if (v0 <= 0x3F)
  {
    type metadata accessor for ModalityXVoiceTriggerInfo?();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void type metadata accessor for ModalityXVoiceTriggerInfo?()
{
  unint64_t v0;
  uint64_t v1;

  if (!lazy cache variable for type metadata for ModalityXVoiceTriggerInfo?)
  {
    type metadata accessor for ModalityXVoiceTriggerInfo(255);
    v0 = type metadata accessor for Optional();
    if (!v1)
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for ModalityXVoiceTriggerInfo?);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ModalityXVoiceTriggerInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for UnknownStorage();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    v24 = *(_QWORD *)v23;
    v22[8] = v23[8];
    *(_QWORD *)v22 = v24;
    v25 = (char *)a1 + v21;
    v26 = (char *)a2 + v21;
    v25[8] = v26[8];
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v27 = a3[11];
    v28 = a3[12];
    v29 = (uint64_t *)((char *)a1 + v27);
    v30 = (uint64_t *)((char *)a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = (char *)a1 + v28;
    v33 = (char *)a2 + v28;
    *(_QWORD *)v32 = *(_QWORD *)v33;
    v32[8] = v33[8];
    v34 = a3[13];
    v35 = a3[14];
    v36 = (char *)a1 + v34;
    v37 = (char *)a2 + v34;
    *(_QWORD *)v36 = *(_QWORD *)v37;
    v36[8] = v37[8];
    v38 = (char *)a1 + v35;
    v39 = (char *)a2 + v35;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    v38[8] = v39[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ModalityXVoiceTriggerInfo(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = (uint64_t *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = a3[11];
  v27 = a3[12];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a1 + v27;
  v32 = a2 + v27;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  v33 = a3[13];
  v34 = a3[14];
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  v37 = a1 + v34;
  v38 = a2 + v34;
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = *v17;
  *(_BYTE *)(v16 + 8) = *((_BYTE *)v17 + 8);
  *(_QWORD *)v16 = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = (uint64_t *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 8) = *((_BYTE *)v21 + 8);
  *(_QWORD *)v20 = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  *(_BYTE *)(v24 + 8) = *((_BYTE *)v25 + 8);
  *(_QWORD *)v24 = v26;
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  LOBYTE(v26) = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = v26;
  v30 = a3[11];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = a3[12];
  v34 = a1 + v33;
  v35 = (uint64_t *)(a2 + v33);
  v36 = *v35;
  *(_BYTE *)(v34 + 8) = *((_BYTE *)v35 + 8);
  *(_QWORD *)v34 = v36;
  v37 = a3[13];
  v38 = a1 + v37;
  v39 = a2 + v37;
  LOBYTE(v36) = *(_BYTE *)(v39 + 8);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = v36;
  v40 = a3[14];
  v41 = a1 + v40;
  v42 = (uint64_t *)(a2 + v40);
  v43 = *v42;
  *(_BYTE *)(v41 + 8) = *((_BYTE *)v42 + 8);
  *(_QWORD *)v41 = v43;
  return a1;
}

uint64_t initializeWithTake for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = (uint64_t *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  v26 = a3[11];
  v27 = a3[12];
  v28 = *(_OWORD *)(a2 + v26);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_OWORD *)(a1 + v26) = v28;
  v29 = a1 + v27;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(a2 + v27 + 8);
  *(_QWORD *)v29 = *(_QWORD *)(a2 + v27);
  v30 = a3[13];
  v31 = a3[14];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v34 = a1 + v31;
  v35 = a2 + v31;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  return a1;
}

uint64_t assignWithTake for ModalityXVoiceTriggerInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = type metadata accessor for UnknownStorage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = (uint64_t *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = a3[11];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[12];
  v32 = a3[13];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  v37 = a3[14];
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModalityXVoiceTriggerInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_242055A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_15();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    OUTLINED_FUNCTION_35(a1, a2, v6);
  }
  else
  {
    OUTLINED_FUNCTION_63(a1 + *(int *)(a3 + 44));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t storeEnumTagSinglePayload for ModalityXVoiceTriggerInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_242055AFC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_127();
  if (v1)
  {
    v2 = OUTLINED_FUNCTION_208();
    OUTLINED_FUNCTION_28(v2, v3, v4, v5);
  }
  else
  {
    OUTLINED_FUNCTION_229(*(int *)(v0 + 44));
    OUTLINED_FUNCTION_9_0();
  }
}

uint64_t type metadata completion function for ModalityXVoiceTriggerInfo()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UnknownStorage();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  return type metadata accessor for ModalityXVoiceTriggerInfo(0);
}

void OUTLINED_FUNCTION_7_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + a1;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
}

BOOL OUTLINED_FUNCTION_8_2@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(_BYTE *)(v1 + a1 + 8) & 1) == 0;
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return type metadata accessor for ModalityXVoiceTriggerInfo(0);
}

void OUTLINED_FUNCTION_15_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v1 + a1;
  *(_QWORD *)v3 = v2;
  *(_BYTE *)(v3 + 8) = 0;
}

void OUTLINED_FUNCTION_16_0(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + a1;
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = v1;
}

void OUTLINED_FUNCTION_18(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + a1;
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = v1;
}

uint64_t OUTLINED_FUNCTION_21_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  return type metadata accessor for ModalityXDeviceInfo(0);
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  return type metadata accessor for ModalityXDeviceInfo(0);
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return type metadata accessor for UnknownStorage();
}

uint64_t OUTLINED_FUNCTION_30_0(_QWORD *a1)
{
  uint64_t v1;

  *a1 = v1;
  return type metadata accessor for ModalityXAudioMetadata(0);
}

uint64_t OUTLINED_FUNCTION_52_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v2, v0);
}

void OUTLINED_FUNCTION_59_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  v3 = *(unsigned __int8 *)(v2 + a1);
  if (v3 == 8)
    LOBYTE(v3) = 0;
  *(_BYTE *)(v1 + 12) = v3;
  *(_DWORD *)(v1 + 8) = a1;
}

uint64_t OUTLINED_FUNCTION_60_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return outlined init with copy of ModalityXVoiceTriggerInfo?(v1 + *(int *)(a1 + 32), v2);
}

uint64_t OUTLINED_FUNCTION_62_1()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for ModalityXVoiceTriggerInfo(0);
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_64_1(uint64_t a1)
{
  uint64_t *v1;

  return outlined destroy of ModalityXEntities?(a1, v1);
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return type metadata accessor for ModalityXAudioMetadata(0);
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_70_0()
{
  return type metadata accessor for ModalityXAudioMetadata(0);
}

void OUTLINED_FUNCTION_72_1(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  int v3;

  v3 = *(unsigned __int8 *)(v2 + a1);
  if (v3 == 8)
    LOBYTE(v3) = 0;
  *v1 = v3;
}

uint64_t OUTLINED_FUNCTION_74_0()
{
  return type metadata accessor for ModalityXAudioMetadata(0);
}

uint64_t __DataStorage._bytes.getter()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t __DataStorage._length.getter()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t __DataStorage._offset.getter()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t static Data.== infix(_:_:)()
{
  return MEMORY[0x24BDCDCC8]();
}

uint64_t UnknownStorage.traverse<A>(visitor:)()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t UnknownStorage.init()()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t type metadata accessor for UnknownStorage()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t _MessageImplementationBase._protobuf_generated_isEqualTo(other:)()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t _MessageImplementationBase.isEqualTo(message:)()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t Enum.hash(into:)()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t dispatch thunk of Decoder.nextFieldNumber()()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t dispatch thunk of Decoder.handleConflictingOneOf()()
{
  return MEMORY[0x24BE5C048]();
}

uint64_t dispatch thunk of Decoder.decodeSingularBoolField(value:)()
{
  return MEMORY[0x24BE5C060]();
}

uint64_t dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)()
{
  return MEMORY[0x24BE5C070]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedBytesField(value:)()
{
  return MEMORY[0x24BE5C080]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)()
{
  return MEMORY[0x24BE5C090]();
}

uint64_t dispatch thunk of Decoder.decodeSingularBytesField(value:)()
{
  return MEMORY[0x24BE5C0A0]();
}

uint64_t dispatch thunk of Decoder.decodeSingularInt32Field(value:)()
{
  return MEMORY[0x24BE5C0C0]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedStringField(value:)()
{
  return MEMORY[0x24BE5C0E8]();
}

uint64_t dispatch thunk of Decoder.decodeSingularDoubleField(value:)()
{
  return MEMORY[0x24BE5C100]();
}

uint64_t dispatch thunk of Decoder.decodeSingularStringField(value:)()
{
  return MEMORY[0x24BE5C118]();
}

uint64_t dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t Message.isInitialized.getter()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t Message.debugDescription.getter()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t Message.hash(into:)()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C270]();
}

uint64_t dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedBytesField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C280]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C290]();
}

uint64_t dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C298]();
}

uint64_t dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2A0]();
}

uint64_t dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2A8]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedStringField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2C0]();
}

uint64_t dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2D8]();
}

uint64_t dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t type metadata accessor for _NameMap.NameDescription()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t _NameMap.init(dictionaryLiteral:)()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t type metadata accessor for _NameMap()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t type metadata accessor for Optional()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t Hasher.init(_seed:)()
{
  return MEMORY[0x24BEE42E0]();
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x24BE7AF80]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x24BE7AF88]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x24BE7AF90]();
}

uint64_t PBDataWriterWriteFloatField()
{
  return MEMORY[0x24BE7AFA0]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x24BE7AFA8]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x24BE7AFD8]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x24BE7AFE8]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x24BE7B018]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x24BE7B028]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x24BE7B030]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x24BE7B038]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x24BE7B048]();
}

uint64_t PBRepeatedFloatAdd()
{
  return MEMORY[0x24BE7B090]();
}

uint64_t PBRepeatedFloatClear()
{
  return MEMORY[0x24BE7B098]();
}

uint64_t PBRepeatedFloatCopy()
{
  return MEMORY[0x24BE7B0A0]();
}

uint64_t PBRepeatedFloatHash()
{
  return MEMORY[0x24BE7B0A8]();
}

uint64_t PBRepeatedFloatIsEqual()
{
  return MEMORY[0x24BE7B0B0]();
}

uint64_t PBRepeatedFloatNSArray()
{
  return MEMORY[0x24BE7B0B8]();
}

uint64_t PBRepeatedFloatSet()
{
  return MEMORY[0x24BE7B0C0]();
}

uint64_t PBRepeatedInt32Add()
{
  return MEMORY[0x24BE7B0C8]();
}

uint64_t PBRepeatedInt32Clear()
{
  return MEMORY[0x24BE7B0D0]();
}

uint64_t PBRepeatedInt32Copy()
{
  return MEMORY[0x24BE7B0D8]();
}

uint64_t PBRepeatedInt32Hash()
{
  return MEMORY[0x24BE7B0E0]();
}

uint64_t PBRepeatedInt32IsEqual()
{
  return MEMORY[0x24BE7B0E8]();
}

uint64_t PBRepeatedInt32NSArray()
{
  return MEMORY[0x24BE7B0F0]();
}

uint64_t PBRepeatedInt32Set()
{
  return MEMORY[0x24BE7B0F8]();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE3F0](__x, __y);
  return result;
}

float fmodf(float a1, float a2)
{
  float result;

  MEMORY[0x24BDAE3F8](a1, a2);
  return result;
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

