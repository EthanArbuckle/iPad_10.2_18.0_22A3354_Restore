@implementation SISchemaClientEvent

- (id)getComponentId
{
  SISchemaUUID *v3;
  void *v4;
  void *v5;
  SISchemaUUID *v6;
  SISchemaUUID *v7;
  void *v8;
  uint64_t v9;

  v3 = [SISchemaUUID alloc];
  -[SISchemaClientEvent eventMetadata](self, "eventMetadata");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "turnID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[SISchemaUUID initWithBytesAsData:](v3, "initWithBytesAsData:", v5);

  if (!v6)
    goto LABEL_5;
  -[SISchemaUUID value](v6, "value");
  v7 = (SISchemaUUID *)objc_claimAutoreleasedReturnValue();
  if (v7)
  {
    -[SISchemaUUID value](v6, "value");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "length");

    if (v9)
    {
      v7 = v6;
      goto LABEL_6;
    }
LABEL_5:
    v7 = 0;
  }
LABEL_6:

  return v7;
}

- (int)componentName
{
  SISchemaUUID *v3;
  void *v4;
  void *v5;
  SISchemaUUID *v6;
  void *v7;
  void *v8;
  _BOOL4 v9;

  v3 = [SISchemaUUID alloc];
  -[SISchemaClientEvent eventMetadata](self, "eventMetadata");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "turnID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[SISchemaUUID initWithBytesAsData:](v3, "initWithBytesAsData:", v5);

  if (v6)
  {
    -[SISchemaUUID value](v6, "value");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      -[SISchemaUUID value](v6, "value");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v8, "length") != 0;

      LODWORD(v7) = 2 * v9;
    }
  }
  else
  {
    LODWORD(v7) = 0;
  }

  return (int)v7;
}

+ (int)joinability
{
  return 2;
}

- (id)suppressMessageUnderConditions
{
  SISensitiveConditionsSet *v2;

  v2 = objc_alloc_init(SISensitiveConditionsSet);
  -[SISensitiveConditionsSet addCondition:](v2, "addCondition:", 1);
  return v2;
}

- (id)applySensitiveConditionsPolicy:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  int v17;
  void *v18;
  void *v19;
  int v20;
  void *v21;
  void *v22;
  int v23;
  void *v24;
  void *v25;
  int v26;
  void *v27;
  void *v28;
  int v29;
  void *v30;
  void *v31;
  int v32;
  void *v33;
  void *v34;
  int v35;
  void *v36;
  void *v37;
  int v38;
  void *v39;
  void *v40;
  int v41;
  void *v42;
  void *v43;
  int v44;
  void *v45;
  void *v46;
  int v47;
  void *v48;
  void *v49;
  int v50;
  void *v51;
  void *v52;
  int v53;
  void *v54;
  void *v55;
  int v56;
  void *v57;
  void *v58;
  int v59;
  void *v60;
  void *v61;
  int v62;
  void *v63;
  void *v64;
  int v65;
  void *v66;
  void *v67;
  int v68;
  void *v69;
  void *v70;
  int v71;
  void *v72;
  void *v73;
  int v74;
  void *v75;
  void *v76;
  int v77;
  void *v78;
  void *v79;
  int v80;
  void *v81;
  void *v82;
  int v83;
  void *v84;
  void *v85;
  int v86;
  void *v87;
  void *v88;
  int v89;
  void *v90;
  void *v91;
  int v92;
  void *v93;
  void *v94;
  int v95;
  void *v96;
  void *v97;
  int v98;
  void *v99;
  void *v100;
  int v101;
  void *v102;
  void *v103;
  int v104;
  void *v105;
  void *v106;
  int v107;
  void *v108;
  void *v109;
  int v110;
  void *v111;
  void *v112;
  int v113;
  void *v114;
  void *v115;
  int v116;
  void *v117;
  void *v118;
  int v119;
  void *v120;
  void *v121;
  int v122;
  void *v123;
  void *v124;
  int v125;
  void *v126;
  void *v127;
  int v128;
  void *v129;
  void *v130;
  int v131;
  void *v132;
  void *v133;
  int v134;
  void *v135;
  void *v136;
  int v137;
  void *v138;
  void *v139;
  int v140;
  void *v141;
  void *v142;
  int v143;
  void *v144;
  void *v145;
  int v146;
  void *v147;
  void *v148;
  int v149;
  void *v150;
  void *v151;
  int v152;
  void *v153;
  void *v154;
  int v155;
  void *v156;
  void *v157;
  int v158;
  void *v159;
  void *v160;
  int v161;
  void *v162;
  void *v163;
  int v164;
  void *v165;
  void *v166;
  int v167;
  void *v168;
  void *v169;
  int v170;
  void *v171;
  void *v172;
  int v173;
  void *v174;
  void *v175;
  int v176;
  void *v177;
  void *v178;
  int v179;
  void *v180;
  void *v181;
  int v182;
  void *v183;
  void *v184;
  int v185;
  void *v186;
  void *v187;
  int v188;
  void *v189;
  void *v190;
  int v191;
  void *v192;
  void *v193;
  int v194;
  void *v195;
  void *v196;
  int v197;
  void *v198;
  void *v199;
  int v200;
  void *v201;
  void *v202;
  int v203;
  void *v204;
  void *v205;
  int v206;
  void *v207;
  void *v208;
  int v209;
  void *v210;
  void *v211;
  int v212;
  void *v213;
  void *v214;
  int v215;
  void *v216;
  void *v217;
  int v218;
  void *v219;
  void *v220;
  int v221;
  void *v222;
  void *v223;
  int v224;
  id v225;
  objc_super v227;

  v4 = a3;
  v227.receiver = self;
  v227.super_class = (Class)SISchemaClientEvent;
  -[SISchemaInstrumentationMessage applySensitiveConditionsPolicy:](&v227, sel_applySensitiveConditionsPolicy_, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "isConditionSet:", 2))
  {
    -[SISchemaClientEvent deleteUufrShownTier1](self, "deleteUufrShownTier1");
    -[SISchemaClientEvent deleteDictationAlternativesSelected](self, "deleteDictationAlternativesSelected");
    -[SISchemaClientEvent deleteUeiDictationAlternativeTextPairsSelected](self, "deleteUeiDictationAlternativeTextPairsSelected");
    -[SISchemaClientEvent deleteUeiDictationContentEditedTier1](self, "deleteUeiDictationContentEditedTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidAlternativesEventTier1](self, "deleteUeiDictationEuclidAlternativesEventTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidSpeechAlternativesSelectedTier1](self, "deleteUeiDictationEuclidSpeechAlternativesSelectedTier1");
  }
  if (objc_msgSend(v4, "isConditionSet:", 4))
  {
    -[SISchemaClientEvent deleteUufrShownTier1](self, "deleteUufrShownTier1");
    -[SISchemaClientEvent deleteDictationAlternativesSelected](self, "deleteDictationAlternativesSelected");
    -[SISchemaClientEvent deleteUufrSelected](self, "deleteUufrSelected");
    -[SISchemaClientEvent deleteUeiDictationAlternativeTextPairsSelected](self, "deleteUeiDictationAlternativeTextPairsSelected");
    -[SISchemaClientEvent deleteUeiDictationContentEditedTier1](self, "deleteUeiDictationContentEditedTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidAlternativesEventTier1](self, "deleteUeiDictationEuclidAlternativesEventTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidSpeechAlternativesSelectedTier1](self, "deleteUeiDictationEuclidSpeechAlternativesSelectedTier1");
  }
  if (objc_msgSend(v4, "isConditionSet:", 5))
  {
    -[SISchemaClientEvent deleteUufrShownTier1](self, "deleteUufrShownTier1");
    -[SISchemaClientEvent deleteDictationAlternativesSelected](self, "deleteDictationAlternativesSelected");
    -[SISchemaClientEvent deleteUeiDictationAlternativeTextPairsSelected](self, "deleteUeiDictationAlternativeTextPairsSelected");
    -[SISchemaClientEvent deleteUeiDictationContentEditedTier1](self, "deleteUeiDictationContentEditedTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidAlternativesEventTier1](self, "deleteUeiDictationEuclidAlternativesEventTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidSpeechAlternativesSelectedTier1](self, "deleteUeiDictationEuclidSpeechAlternativesSelectedTier1");
  }
  if (objc_msgSend(v4, "isConditionSet:", 6))
  {
    -[SISchemaClientEvent deleteUufrShownTier1](self, "deleteUufrShownTier1");
    -[SISchemaClientEvent deleteDictationAlternativesSelected](self, "deleteDictationAlternativesSelected");
    -[SISchemaClientEvent deleteUeiDictationAlternativeTextPairsSelected](self, "deleteUeiDictationAlternativeTextPairsSelected");
    -[SISchemaClientEvent deleteUeiDictationContentEditedTier1](self, "deleteUeiDictationContentEditedTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidAlternativesEventTier1](self, "deleteUeiDictationEuclidAlternativesEventTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidSpeechAlternativesSelectedTier1](self, "deleteUeiDictationEuclidSpeechAlternativesSelectedTier1");
  }
  if (objc_msgSend(v4, "isConditionSet:", 7))
  {
    -[SISchemaClientEvent deleteUufrShownTier1](self, "deleteUufrShownTier1");
    -[SISchemaClientEvent deleteDictationAlternativesSelected](self, "deleteDictationAlternativesSelected");
    -[SISchemaClientEvent deleteUeiDictationAlternativeTextPairsSelected](self, "deleteUeiDictationAlternativeTextPairsSelected");
    -[SISchemaClientEvent deleteUeiDictationContentEditedTier1](self, "deleteUeiDictationContentEditedTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidAlternativesEventTier1](self, "deleteUeiDictationEuclidAlternativesEventTier1");
    -[SISchemaClientEvent deleteUeiDictationEuclidSpeechAlternativesSelectedTier1](self, "deleteUeiDictationEuclidSpeechAlternativesSelectedTier1");
  }
  -[SISchemaClientEvent eventMetadata](self, "eventMetadata");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "applySensitiveConditionsPolicy:", v4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "suppressMessage");

  if (v8)
    -[SISchemaClientEvent deleteEventMetadata](self, "deleteEventMetadata");
  -[SISchemaClientEvent transportMetadata](self, "transportMetadata");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "applySensitiveConditionsPolicy:", v4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "suppressMessage");

  if (v11)
    -[SISchemaClientEvent deleteTransportMetadata](self, "deleteTransportMetadata");
  -[SISchemaClientEvent audioFirstBufferRecorded](self, "audioFirstBufferRecorded");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "applySensitiveConditionsPolicy:", v4);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "suppressMessage");

  if (v14)
    -[SISchemaClientEvent deleteAudioFirstBufferRecorded](self, "deleteAudioFirstBufferRecorded");
  -[SISchemaClientEvent audioStopRecording](self, "audioStopRecording");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "applySensitiveConditionsPolicy:", v4);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "suppressMessage");

  if (v17)
    -[SISchemaClientEvent deleteAudioStopRecording](self, "deleteAudioStopRecording");
  -[SISchemaClientEvent clientConversationTrace](self, "clientConversationTrace");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "applySensitiveConditionsPolicy:", v4);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = objc_msgSend(v19, "suppressMessage");

  if (v20)
    -[SISchemaClientEvent deleteClientConversationTrace](self, "deleteClientConversationTrace");
  -[SISchemaClientEvent deviceDynamicContext](self, "deviceDynamicContext");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "applySensitiveConditionsPolicy:", v4);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "suppressMessage");

  if (v23)
    -[SISchemaClientEvent deleteDeviceDynamicContext](self, "deleteDeviceDynamicContext");
  -[SISchemaClientEvent deviceFixedContext](self, "deviceFixedContext");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "applySensitiveConditionsPolicy:", v4);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = objc_msgSend(v25, "suppressMessage");

  if (v26)
    -[SISchemaClientEvent deleteDeviceFixedContext](self, "deleteDeviceFixedContext");
  -[SISchemaClientEvent dictationContext](self, "dictationContext");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v27, "applySensitiveConditionsPolicy:", v4);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = objc_msgSend(v28, "suppressMessage");

  if (v29)
    -[SISchemaClientEvent deleteDictationContext](self, "deleteDictationContext");
  -[SISchemaClientEvent invocation](self, "invocation");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "applySensitiveConditionsPolicy:", v4);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v32 = objc_msgSend(v31, "suppressMessage");

  if (v32)
    -[SISchemaClientEvent deleteInvocation](self, "deleteInvocation");
  -[SISchemaClientEvent location](self, "location");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "applySensitiveConditionsPolicy:", v4);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = objc_msgSend(v34, "suppressMessage");

  if (v35)
    -[SISchemaClientEvent deleteLocation](self, "deleteLocation");
  -[SISchemaClientEvent punchOut](self, "punchOut");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "applySensitiveConditionsPolicy:", v4);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = objc_msgSend(v37, "suppressMessage");

  if (v38)
    -[SISchemaClientEvent deletePunchOut](self, "deletePunchOut");
  -[SISchemaClientEvent siriCue](self, "siriCue");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v39, "applySensitiveConditionsPolicy:", v4);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v41 = objc_msgSend(v40, "suppressMessage");

  if (v41)
    -[SISchemaClientEvent deleteSiriCue](self, "deleteSiriCue");
  -[SISchemaClientEvent uufrPresented](self, "uufrPresented");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v42, "applySensitiveConditionsPolicy:", v4);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v44 = objc_msgSend(v43, "suppressMessage");

  if (v44)
    -[SISchemaClientEvent deleteUufrPresented](self, "deleteUufrPresented");
  -[SISchemaClientEvent speechTranscription](self, "speechTranscription");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "applySensitiveConditionsPolicy:", v4);
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = objc_msgSend(v46, "suppressMessage");

  if (v47)
    -[SISchemaClientEvent deleteSpeechTranscription](self, "deleteSpeechTranscription");
  -[SISchemaClientEvent textToSpeechBegin](self, "textToSpeechBegin");
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v48, "applySensitiveConditionsPolicy:", v4);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  v50 = objc_msgSend(v49, "suppressMessage");

  if (v50)
    -[SISchemaClientEvent deleteTextToSpeechBegin](self, "deleteTextToSpeechBegin");
  -[SISchemaClientEvent textToSpeechEnd](self, "textToSpeechEnd");
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v51, "applySensitiveConditionsPolicy:", v4);
  v52 = (void *)objc_claimAutoreleasedReturnValue();
  v53 = objc_msgSend(v52, "suppressMessage");

  if (v53)
    -[SISchemaClientEvent deleteTextToSpeechEnd](self, "deleteTextToSpeechEnd");
  -[SISchemaClientEvent uiStateTransition](self, "uiStateTransition");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v54, "applySensitiveConditionsPolicy:", v4);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  v56 = objc_msgSend(v55, "suppressMessage");

  if (v56)
    -[SISchemaClientEvent deleteUiStateTransition](self, "deleteUiStateTransition");
  -[SISchemaClientEvent clientFlow](self, "clientFlow");
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v57, "applySensitiveConditionsPolicy:", v4);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v59 = objc_msgSend(v58, "suppressMessage");

  if (v59)
    -[SISchemaClientEvent deleteClientFlow](self, "deleteClientFlow");
  -[SISchemaClientEvent dialogOutput](self, "dialogOutput");
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v60, "applySensitiveConditionsPolicy:", v4);
  v61 = (void *)objc_claimAutoreleasedReturnValue();
  v62 = objc_msgSend(v61, "suppressMessage");

  if (v62)
    -[SISchemaClientEvent deleteDialogOutput](self, "deleteDialogOutput");
  -[SISchemaClientEvent dictationEndPointStop](self, "dictationEndPointStop");
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v63, "applySensitiveConditionsPolicy:", v4);
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v65 = objc_msgSend(v64, "suppressMessage");

  if (v65)
    -[SISchemaClientEvent deleteDictationEndPointStop](self, "deleteDictationEndPointStop");
  -[SISchemaClientEvent dictationEndPointCancel](self, "dictationEndPointCancel");
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v66, "applySensitiveConditionsPolicy:", v4);
  v67 = (void *)objc_claimAutoreleasedReturnValue();
  v68 = objc_msgSend(v67, "suppressMessage");

  if (v68)
    -[SISchemaClientEvent deleteDictationEndPointCancel](self, "deleteDictationEndPointCancel");
  -[SISchemaClientEvent dictationAlternativeSelected](self, "dictationAlternativeSelected");
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v69, "applySensitiveConditionsPolicy:", v4);
  v70 = (void *)objc_claimAutoreleasedReturnValue();
  v71 = objc_msgSend(v70, "suppressMessage");

  if (v71)
    -[SISchemaClientEvent deleteDictationAlternativeSelected](self, "deleteDictationAlternativeSelected");
  -[SISchemaClientEvent dictationTranscriptionMetadata](self, "dictationTranscriptionMetadata");
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v72, "applySensitiveConditionsPolicy:", v4);
  v73 = (void *)objc_claimAutoreleasedReturnValue();
  v74 = objc_msgSend(v73, "suppressMessage");

  if (v74)
    -[SISchemaClientEvent deleteDictationTranscriptionMetadata](self, "deleteDictationTranscriptionMetadata");
  -[SISchemaClientEvent carPlayHeadUnitContext](self, "carPlayHeadUnitContext");
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v75, "applySensitiveConditionsPolicy:", v4);
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  v77 = objc_msgSend(v76, "suppressMessage");

  if (v77)
    -[SISchemaClientEvent deleteCarPlayHeadUnitContext](self, "deleteCarPlayHeadUnitContext");
  -[SISchemaClientEvent uufrCompletion](self, "uufrCompletion");
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v78, "applySensitiveConditionsPolicy:", v4);
  v79 = (void *)objc_claimAutoreleasedReturnValue();
  v80 = objc_msgSend(v79, "suppressMessage");

  if (v80)
    -[SISchemaClientEvent deleteUufrCompletion](self, "deleteUufrCompletion");
  -[SISchemaClientEvent uufrShown](self, "uufrShown");
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v81, "applySensitiveConditionsPolicy:", v4);
  v82 = (void *)objc_claimAutoreleasedReturnValue();
  v83 = objc_msgSend(v82, "suppressMessage");

  if (v83)
    -[SISchemaClientEvent deleteUufrShown](self, "deleteUufrShown");
  -[SISchemaClientEvent uufrSaid](self, "uufrSaid");
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v84, "applySensitiveConditionsPolicy:", v4);
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  v86 = objc_msgSend(v85, "suppressMessage");

  if (v86)
    -[SISchemaClientEvent deleteUufrSaid](self, "deleteUufrSaid");
  -[SISchemaClientEvent uufrFatalError](self, "uufrFatalError");
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v87, "applySensitiveConditionsPolicy:", v4);
  v88 = (void *)objc_claimAutoreleasedReturnValue();
  v89 = objc_msgSend(v88, "suppressMessage");

  if (v89)
    -[SISchemaClientEvent deleteUufrFatalError](self, "deleteUufrFatalError");
  -[SISchemaClientEvent dictationAlternativesViewed](self, "dictationAlternativesViewed");
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v90, "applySensitiveConditionsPolicy:", v4);
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  v92 = objc_msgSend(v91, "suppressMessage");

  if (v92)
    -[SISchemaClientEvent deleteDictationAlternativesViewed](self, "deleteDictationAlternativesViewed");
  -[SISchemaClientEvent intercomMessageRecorded](self, "intercomMessageRecorded");
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v93, "applySensitiveConditionsPolicy:", v4);
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  v95 = objc_msgSend(v94, "suppressMessage");

  if (v95)
    -[SISchemaClientEvent deleteIntercomMessageRecorded](self, "deleteIntercomMessageRecorded");
  -[SISchemaClientEvent casinoRelationship](self, "casinoRelationship");
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v96, "applySensitiveConditionsPolicy:", v4);
  v97 = (void *)objc_claimAutoreleasedReturnValue();
  v98 = objc_msgSend(v97, "suppressMessage");

  if (v98)
    -[SISchemaClientEvent deleteCasinoRelationship](self, "deleteCasinoRelationship");
  -[SISchemaClientEvent userViewRegionInteraction](self, "userViewRegionInteraction");
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v99, "applySensitiveConditionsPolicy:", v4);
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  v101 = objc_msgSend(v100, "suppressMessage");

  if (v101)
    -[SISchemaClientEvent deleteUserViewRegionInteraction](self, "deleteUserViewRegionInteraction");
  -[SISchemaClientEvent deviceLockStateChanged](self, "deviceLockStateChanged");
  v102 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v102, "applySensitiveConditionsPolicy:", v4);
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  v104 = objc_msgSend(v103, "suppressMessage");

  if (v104)
    -[SISchemaClientEvent deleteDeviceLockStateChanged](self, "deleteDeviceLockStateChanged");
  -[SISchemaClientEvent ueiRequestCategorization](self, "ueiRequestCategorization");
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v105, "applySensitiveConditionsPolicy:", v4);
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  v107 = objc_msgSend(v106, "suppressMessage");

  if (v107)
    -[SISchemaClientEvent deleteUeiRequestCategorization](self, "deleteUeiRequestCategorization");
  -[SISchemaClientEvent audioStopRecordingStarted](self, "audioStopRecordingStarted");
  v108 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v108, "applySensitiveConditionsPolicy:", v4);
  v109 = (void *)objc_claimAutoreleasedReturnValue();
  v110 = objc_msgSend(v109, "suppressMessage");

  if (v110)
    -[SISchemaClientEvent deleteAudioStopRecordingStarted](self, "deleteAudioStopRecordingStarted");
  -[SISchemaClientEvent ueiLaunchContext](self, "ueiLaunchContext");
  v111 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v111, "applySensitiveConditionsPolicy:", v4);
  v112 = (void *)objc_claimAutoreleasedReturnValue();
  v113 = objc_msgSend(v112, "suppressMessage");

  if (v113)
    -[SISchemaClientEvent deleteUeiLaunchContext](self, "deleteUeiLaunchContext");
  -[SISchemaClientEvent ueiUserSpeakingContext](self, "ueiUserSpeakingContext");
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v114, "applySensitiveConditionsPolicy:", v4);
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  v116 = objc_msgSend(v115, "suppressMessage");

  if (v116)
    -[SISchemaClientEvent deleteUeiUserSpeakingContext](self, "deleteUeiUserSpeakingContext");
  -[SISchemaClientEvent ueiUUFRReady](self, "ueiUUFRReady");
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v117, "applySensitiveConditionsPolicy:", v4);
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  v119 = objc_msgSend(v118, "suppressMessage");

  if (v119)
    -[SISchemaClientEvent deleteUeiUUFRReady](self, "deleteUeiUUFRReady");
  -[SISchemaClientEvent ueiUIRenderingContext](self, "ueiUIRenderingContext");
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v120, "applySensitiveConditionsPolicy:", v4);
  v121 = (void *)objc_claimAutoreleasedReturnValue();
  v122 = objc_msgSend(v121, "suppressMessage");

  if (v122)
    -[SISchemaClientEvent deleteUeiUIRenderingContext](self, "deleteUeiUIRenderingContext");
  -[SISchemaClientEvent pnrTextToSpeechRequestReceived](self, "pnrTextToSpeechRequestReceived");
  v123 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v123, "applySensitiveConditionsPolicy:", v4);
  v124 = (void *)objc_claimAutoreleasedReturnValue();
  v125 = objc_msgSend(v124, "suppressMessage");

  if (v125)
    -[SISchemaClientEvent deletePnrTextToSpeechRequestReceived](self, "deletePnrTextToSpeechRequestReceived");
  -[SISchemaClientEvent pnrSpeechRecognitionSourceContext](self, "pnrSpeechRecognitionSourceContext");
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v126, "applySensitiveConditionsPolicy:", v4);
  v127 = (void *)objc_claimAutoreleasedReturnValue();
  v128 = objc_msgSend(v127, "suppressMessage");

  if (v128)
    -[SISchemaClientEvent deletePnrSpeechRecognitionSourceContext](self, "deletePnrSpeechRecognitionSourceContext");
  -[SISchemaClientEvent pnrFatalError](self, "pnrFatalError");
  v129 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v129, "applySensitiveConditionsPolicy:", v4);
  v130 = (void *)objc_claimAutoreleasedReturnValue();
  v131 = objc_msgSend(v130, "suppressMessage");

  if (v131)
    -[SISchemaClientEvent deletePnrFatalError](self, "deletePnrFatalError");
  -[SISchemaClientEvent turnMTERequest](self, "turnMTERequest");
  v132 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v132, "applySensitiveConditionsPolicy:", v4);
  v133 = (void *)objc_claimAutoreleasedReturnValue();
  v134 = objc_msgSend(v133, "suppressMessage");

  if (v134)
    -[SISchemaClientEvent deleteTurnMTERequest](self, "deleteTurnMTERequest");
  -[SISchemaClientEvent keyboardDismissed](self, "keyboardDismissed");
  v135 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v135, "applySensitiveConditionsPolicy:", v4);
  v136 = (void *)objc_claimAutoreleasedReturnValue();
  v137 = objc_msgSend(v136, "suppressMessage");

  if (v137)
    -[SISchemaClientEvent deleteKeyboardDismissed](self, "deleteKeyboardDismissed");
  -[SISchemaClientEvent engagedAccessoryContext](self, "engagedAccessoryContext");
  v138 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v138, "applySensitiveConditionsPolicy:", v4);
  v139 = (void *)objc_claimAutoreleasedReturnValue();
  v140 = objc_msgSend(v139, "suppressMessage");

  if (v140)
    -[SISchemaClientEvent deleteEngagedAccessoryContext](self, "deleteEngagedAccessoryContext");
  -[SISchemaClientEvent announceCarPlayBannerTapped](self, "announceCarPlayBannerTapped");
  v141 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v141, "applySensitiveConditionsPolicy:", v4);
  v142 = (void *)objc_claimAutoreleasedReturnValue();
  v143 = objc_msgSend(v142, "suppressMessage");

  if (v143)
    -[SISchemaClientEvent deleteAnnounceCarPlayBannerTapped](self, "deleteAnnounceCarPlayBannerTapped");
  -[SISchemaClientEvent announceCarPlayGlyphSettingToggled](self, "announceCarPlayGlyphSettingToggled");
  v144 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v144, "applySensitiveConditionsPolicy:", v4);
  v145 = (void *)objc_claimAutoreleasedReturnValue();
  v146 = objc_msgSend(v145, "suppressMessage");

  if (v146)
    -[SISchemaClientEvent deleteAnnounceCarPlayGlyphSettingToggled](self, "deleteAnnounceCarPlayGlyphSettingToggled");
  -[SISchemaClientEvent dictationContentEdited](self, "dictationContentEdited");
  v147 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v147, "applySensitiveConditionsPolicy:", v4);
  v148 = (void *)objc_claimAutoreleasedReturnValue();
  v149 = objc_msgSend(v148, "suppressMessage");

  if (v149)
    -[SISchemaClientEvent deleteDictationContentEdited](self, "deleteDictationContentEdited");
  -[SISchemaClientEvent uufrShownTier1](self, "uufrShownTier1");
  v150 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v150, "applySensitiveConditionsPolicy:", v4);
  v151 = (void *)objc_claimAutoreleasedReturnValue();
  v152 = objc_msgSend(v151, "suppressMessage");

  if (v152)
    -[SISchemaClientEvent deleteUufrShownTier1](self, "deleteUufrShownTier1");
  -[SISchemaClientEvent ueiDictationPartialResultUpdated](self, "ueiDictationPartialResultUpdated");
  v153 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v153, "applySensitiveConditionsPolicy:", v4);
  v154 = (void *)objc_claimAutoreleasedReturnValue();
  v155 = objc_msgSend(v154, "suppressMessage");

  if (v155)
    -[SISchemaClientEvent deleteUeiDictationPartialResultUpdated](self, "deleteUeiDictationPartialResultUpdated");
  -[SISchemaClientEvent ueiDictationVoiceCommandExecuted](self, "ueiDictationVoiceCommandExecuted");
  v156 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v156, "applySensitiveConditionsPolicy:", v4);
  v157 = (void *)objc_claimAutoreleasedReturnValue();
  v158 = objc_msgSend(v157, "suppressMessage");

  if (v158)
    -[SISchemaClientEvent deleteUeiDictationVoiceCommandExecuted](self, "deleteUeiDictationVoiceCommandExecuted");
  -[SISchemaClientEvent ueiDictationInputModeSwitchContext](self, "ueiDictationInputModeSwitchContext");
  v159 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v159, "applySensitiveConditionsPolicy:", v4);
  v160 = (void *)objc_claimAutoreleasedReturnValue();
  v161 = objc_msgSend(v160, "suppressMessage");

  if (v161)
    -[SISchemaClientEvent deleteUeiDictationInputModeSwitchContext](self, "deleteUeiDictationInputModeSwitchContext");
  -[SISchemaClientEvent ueiDictationToolTipDisplayContext](self, "ueiDictationToolTipDisplayContext");
  v162 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v162, "applySensitiveConditionsPolicy:", v4);
  v163 = (void *)objc_claimAutoreleasedReturnValue();
  v164 = objc_msgSend(v163, "suppressMessage");

  if (v164)
    -[SISchemaClientEvent deleteUeiDictationToolTipDisplayContext](self, "deleteUeiDictationToolTipDisplayContext");
  -[SISchemaClientEvent hostPlatformViewAppearContext](self, "hostPlatformViewAppearContext");
  v165 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v165, "applySensitiveConditionsPolicy:", v4);
  v166 = (void *)objc_claimAutoreleasedReturnValue();
  v167 = objc_msgSend(v166, "suppressMessage");

  if (v167)
    -[SISchemaClientEvent deleteHostPlatformViewAppearContext](self, "deleteHostPlatformViewAppearContext");
  -[SISchemaClientEvent hostPlatformViewDisappearContext](self, "hostPlatformViewDisappearContext");
  v168 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v168, "applySensitiveConditionsPolicy:", v4);
  v169 = (void *)objc_claimAutoreleasedReturnValue();
  v170 = objc_msgSend(v169, "suppressMessage");

  if (v170)
    -[SISchemaClientEvent deleteHostPlatformViewDisappearContext](self, "deleteHostPlatformViewDisappearContext");
  -[SISchemaClientEvent ueiDictationTranscriptionTokenized](self, "ueiDictationTranscriptionTokenized");
  v171 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v171, "applySensitiveConditionsPolicy:", v4);
  v172 = (void *)objc_claimAutoreleasedReturnValue();
  v173 = objc_msgSend(v172, "suppressMessage");

  if (v173)
    -[SISchemaClientEvent deleteUeiDictationTranscriptionTokenized](self, "deleteUeiDictationTranscriptionTokenized");
  -[SISchemaClientEvent dictationAlternativesSelected](self, "dictationAlternativesSelected");
  v174 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v174, "applySensitiveConditionsPolicy:", v4);
  v175 = (void *)objc_claimAutoreleasedReturnValue();
  v176 = objc_msgSend(v175, "suppressMessage");

  if (v176)
    -[SISchemaClientEvent deleteDictationAlternativesSelected](self, "deleteDictationAlternativesSelected");
  -[SISchemaClientEvent uufrSelected](self, "uufrSelected");
  v177 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v177, "applySensitiveConditionsPolicy:", v4);
  v178 = (void *)objc_claimAutoreleasedReturnValue();
  v179 = objc_msgSend(v178, "suppressMessage");

  if (v179)
    -[SISchemaClientEvent deleteUufrSelected](self, "deleteUufrSelected");
  -[SISchemaClientEvent ueiDictationAlternativeTextPairsSelected](self, "ueiDictationAlternativeTextPairsSelected");
  v180 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v180, "applySensitiveConditionsPolicy:", v4);
  v181 = (void *)objc_claimAutoreleasedReturnValue();
  v182 = objc_msgSend(v181, "suppressMessage");

  if (v182)
    -[SISchemaClientEvent deleteUeiDictationAlternativeTextPairsSelected](self, "deleteUeiDictationAlternativeTextPairsSelected");
  -[SISchemaClientEvent ueiUserBargeInDetected](self, "ueiUserBargeInDetected");
  v183 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v183, "applySensitiveConditionsPolicy:", v4);
  v184 = (void *)objc_claimAutoreleasedReturnValue();
  v185 = objc_msgSend(v184, "suppressMessage");

  if (v185)
    -[SISchemaClientEvent deleteUeiUserBargeInDetected](self, "deleteUeiUserBargeInDetected");
  -[SISchemaClientEvent ueiDictationEnablementPromptShown](self, "ueiDictationEnablementPromptShown");
  v186 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v186, "applySensitiveConditionsPolicy:", v4);
  v187 = (void *)objc_claimAutoreleasedReturnValue();
  v188 = objc_msgSend(v187, "suppressMessage");

  if (v188)
    -[SISchemaClientEvent deleteUeiDictationEnablementPromptShown](self, "deleteUeiDictationEnablementPromptShown");
  -[SISchemaClientEvent ueiSiriCarCommandContext](self, "ueiSiriCarCommandContext");
  v189 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v189, "applySensitiveConditionsPolicy:", v4);
  v190 = (void *)objc_claimAutoreleasedReturnValue();
  v191 = objc_msgSend(v190, "suppressMessage");

  if (v191)
    -[SISchemaClientEvent deleteUeiSiriCarCommandContext](self, "deleteUeiSiriCarCommandContext");
  -[SISchemaClientEvent ueiVisionSnippetDismissed](self, "ueiVisionSnippetDismissed");
  v192 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v192, "applySensitiveConditionsPolicy:", v4);
  v193 = (void *)objc_claimAutoreleasedReturnValue();
  v194 = objc_msgSend(v193, "suppressMessage");

  if (v194)
    -[SISchemaClientEvent deleteUeiVisionSnippetDismissed](self, "deleteUeiVisionSnippetDismissed");
  -[SISchemaClientEvent ueiSiriWasUnavailable](self, "ueiSiriWasUnavailable");
  v195 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v195, "applySensitiveConditionsPolicy:", v4);
  v196 = (void *)objc_claimAutoreleasedReturnValue();
  v197 = objc_msgSend(v196, "suppressMessage");

  if (v197)
    -[SISchemaClientEvent deleteUeiSiriWasUnavailable](self, "deleteUeiSiriWasUnavailable");
  -[SISchemaClientEvent preferredAudioRouteChanged](self, "preferredAudioRouteChanged");
  v198 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v198, "applySensitiveConditionsPolicy:", v4);
  v199 = (void *)objc_claimAutoreleasedReturnValue();
  v200 = objc_msgSend(v199, "suppressMessage");

  if (v200)
    -[SISchemaClientEvent deletePreferredAudioRouteChanged](self, "deletePreferredAudioRouteChanged");
  -[SISchemaClientEvent ueiDictationContentEditedTier1](self, "ueiDictationContentEditedTier1");
  v201 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v201, "applySensitiveConditionsPolicy:", v4);
  v202 = (void *)objc_claimAutoreleasedReturnValue();
  v203 = objc_msgSend(v202, "suppressMessage");

  if (v203)
    -[SISchemaClientEvent deleteUeiDictationContentEditedTier1](self, "deleteUeiDictationContentEditedTier1");
  -[SISchemaClientEvent ueiDictationVoiceCommandUndoTapAction](self, "ueiDictationVoiceCommandUndoTapAction");
  v204 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v204, "applySensitiveConditionsPolicy:", v4);
  v205 = (void *)objc_claimAutoreleasedReturnValue();
  v206 = objc_msgSend(v205, "suppressMessage");

  if (v206)
    -[SISchemaClientEvent deleteUeiDictationVoiceCommandUndoTapAction](self, "deleteUeiDictationVoiceCommandUndoTapAction");
  -[SISchemaClientEvent ueiDictationVoiceCommandDisambiguationAction](self, "ueiDictationVoiceCommandDisambiguationAction");
  v207 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v207, "applySensitiveConditionsPolicy:", v4);
  v208 = (void *)objc_claimAutoreleasedReturnValue();
  v209 = objc_msgSend(v208, "suppressMessage");

  if (v209)
    -[SISchemaClientEvent deleteUeiDictationVoiceCommandDisambiguationAction](self, "deleteUeiDictationVoiceCommandDisambiguationAction");
  -[SISchemaClientEvent ueiDictationVoiceCommandKeyboardAction](self, "ueiDictationVoiceCommandKeyboardAction");
  v210 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v210, "applySensitiveConditionsPolicy:", v4);
  v211 = (void *)objc_claimAutoreleasedReturnValue();
  v212 = objc_msgSend(v211, "suppressMessage");

  if (v212)
    -[SISchemaClientEvent deleteUeiDictationVoiceCommandKeyboardAction](self, "deleteUeiDictationVoiceCommandKeyboardAction");
  -[SISchemaClientEvent ueiDictationEuclidAlternativesEvent](self, "ueiDictationEuclidAlternativesEvent");
  v213 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v213, "applySensitiveConditionsPolicy:", v4);
  v214 = (void *)objc_claimAutoreleasedReturnValue();
  v215 = objc_msgSend(v214, "suppressMessage");

  if (v215)
    -[SISchemaClientEvent deleteUeiDictationEuclidAlternativesEvent](self, "deleteUeiDictationEuclidAlternativesEvent");
  -[SISchemaClientEvent ueiDictationEuclidAlternativesEventTier1](self, "ueiDictationEuclidAlternativesEventTier1");
  v216 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v216, "applySensitiveConditionsPolicy:", v4);
  v217 = (void *)objc_claimAutoreleasedReturnValue();
  v218 = objc_msgSend(v217, "suppressMessage");

  if (v218)
    -[SISchemaClientEvent deleteUeiDictationEuclidAlternativesEventTier1](self, "deleteUeiDictationEuclidAlternativesEventTier1");
  -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelected](self, "ueiDictationEuclidSpeechAlternativesSelected");
  v219 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v219, "applySensitiveConditionsPolicy:", v4);
  v220 = (void *)objc_claimAutoreleasedReturnValue();
  v221 = objc_msgSend(v220, "suppressMessage");

  if (v221)
    -[SISchemaClientEvent deleteUeiDictationEuclidSpeechAlternativesSelected](self, "deleteUeiDictationEuclidSpeechAlternativesSelected");
  -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelectedTier1](self, "ueiDictationEuclidSpeechAlternativesSelectedTier1");
  v222 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v222, "applySensitiveConditionsPolicy:", v4);
  v223 = (void *)objc_claimAutoreleasedReturnValue();
  v224 = objc_msgSend(v223, "suppressMessage");

  if (v224)
    -[SISchemaClientEvent deleteUeiDictationEuclidSpeechAlternativesSelectedTier1](self, "deleteUeiDictationEuclidSpeechAlternativesSelectedTier1");
  v225 = v5;

  return v225;
}

- (SISchemaInstrumentationMessage)innerEvent
{
  unint64_t v3;
  id v4;
  unint64_t v5;
  int *v6;

  v3 = -[SISchemaClientEvent whichEvent_Type](self, "whichEvent_Type");
  v4 = 0;
  v5 = v3 - 101;
  v6 = &OBJC_IVAR___SISchemaClientEvent__audioFirstBufferRecorded;
  switch(v5)
  {
    case 0uLL:
      goto LABEL_72;
    case 1uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__audioStopRecording;
      goto LABEL_72;
    case 2uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__clientConversationTrace;
      goto LABEL_72;
    case 3uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__deviceDynamicContext;
      goto LABEL_72;
    case 4uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__deviceFixedContext;
      goto LABEL_72;
    case 5uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__dictationContext;
      goto LABEL_72;
    case 6uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__invocation;
      goto LABEL_72;
    case 7uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__location;
      goto LABEL_72;
    case 8uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__punchOut;
      goto LABEL_72;
    case 0xAuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__siriCue;
      goto LABEL_72;
    case 0xBuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__uufrPresented;
      goto LABEL_72;
    case 0xCuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__speechTranscription;
      goto LABEL_72;
    case 0xDuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__textToSpeechBegin;
      goto LABEL_72;
    case 0xEuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__textToSpeechEnd;
      goto LABEL_72;
    case 0xFuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__uiStateTransition;
      goto LABEL_72;
    case 0x10uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__clientFlow;
      goto LABEL_72;
    case 0x11uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__dialogOutput;
      goto LABEL_72;
    case 0x12uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__dictationEndPointStop;
      goto LABEL_72;
    case 0x13uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__dictationEndPointCancel;
      goto LABEL_72;
    case 0x14uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__dictationAlternativeSelected;
      goto LABEL_72;
    case 0x15uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__dictationTranscriptionMetadata;
      goto LABEL_72;
    case 0x16uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__carPlayHeadUnitContext;
      goto LABEL_72;
    case 0x17uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__uufrCompletion;
      goto LABEL_72;
    case 0x18uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__uufrShown;
      goto LABEL_72;
    case 0x19uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__uufrSaid;
      goto LABEL_72;
    case 0x1AuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__uufrFatalError;
      goto LABEL_72;
    case 0x1BuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__dictationAlternativesViewed;
      goto LABEL_72;
    case 0x1CuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__intercomMessageRecorded;
      goto LABEL_72;
    case 0x1DuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__casinoRelationship;
      goto LABEL_72;
    case 0x1EuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__userViewRegionInteraction;
      goto LABEL_72;
    case 0x1FuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__deviceLockStateChanged;
      goto LABEL_72;
    case 0x20uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiRequestCategorization;
      goto LABEL_72;
    case 0x21uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__audioStopRecordingStarted;
      goto LABEL_72;
    case 0x22uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiLaunchContext;
      goto LABEL_72;
    case 0x23uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiUserSpeakingContext;
      goto LABEL_72;
    case 0x24uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiUUFRReady;
      goto LABEL_72;
    case 0x25uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiUIRenderingContext;
      goto LABEL_72;
    case 0x26uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__pnrTextToSpeechRequestReceived;
      goto LABEL_72;
    case 0x27uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__pnrSpeechRecognitionSourceContext;
      goto LABEL_72;
    case 0x28uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__pnrFatalError;
      goto LABEL_72;
    case 0x29uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__turnMTERequest;
      goto LABEL_72;
    case 0x2AuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__keyboardDismissed;
      goto LABEL_72;
    case 0x2BuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__engagedAccessoryContext;
      goto LABEL_72;
    case 0x2CuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__announceCarPlayBannerTapped;
      goto LABEL_72;
    case 0x2DuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__announceCarPlayGlyphSettingToggled;
      goto LABEL_72;
    case 0x2EuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__dictationContentEdited;
      goto LABEL_72;
    case 0x2FuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__uufrShownTier1;
      goto LABEL_72;
    case 0x31uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationPartialResultUpdated;
      goto LABEL_72;
    case 0x32uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationVoiceCommandExecuted;
      goto LABEL_72;
    case 0x33uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationInputModeSwitchContext;
      goto LABEL_72;
    case 0x34uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationToolTipDisplayContext;
      goto LABEL_72;
    case 0x35uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__hostPlatformViewAppearContext;
      goto LABEL_72;
    case 0x36uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__hostPlatformViewDisappearContext;
      goto LABEL_72;
    case 0x37uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationTranscriptionTokenized;
      goto LABEL_72;
    case 0x38uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__dictationAlternativesSelected;
      goto LABEL_72;
    case 0x39uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__uufrSelected;
      goto LABEL_72;
    case 0x3AuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationAlternativeTextPairsSelected;
      goto LABEL_72;
    case 0x3BuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiUserBargeInDetected;
      goto LABEL_72;
    case 0x3CuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEnablementPromptShown;
      goto LABEL_72;
    case 0x3DuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiSiriCarCommandContext;
      goto LABEL_72;
    case 0x3EuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiVisionSnippetDismissed;
      goto LABEL_72;
    case 0x3FuLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiSiriWasUnavailable;
      goto LABEL_72;
    case 0x40uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__preferredAudioRouteChanged;
      goto LABEL_72;
    case 0x41uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationContentEditedTier1;
      goto LABEL_72;
    case 0x42uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationVoiceCommandUndoTapAction;
      goto LABEL_72;
    case 0x43uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationVoiceCommandDisambiguationAction;
      goto LABEL_72;
    case 0x44uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationVoiceCommandKeyboardAction;
      goto LABEL_72;
    case 0x45uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEuclidAlternativesEvent;
      goto LABEL_72;
    case 0x46uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEuclidAlternativesEventTier1;
      goto LABEL_72;
    case 0x47uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEuclidSpeechAlternativesSelected;
      goto LABEL_72;
    case 0x48uLL:
      v6 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEuclidSpeechAlternativesSelectedTier1;
LABEL_72:
      v4 = *(id *)((char *)&self->super.super.super.super.isa + *v6);
      break;
    default:
      return (SISchemaInstrumentationMessage *)v4;
  }
  return (SISchemaInstrumentationMessage *)v4;
}

+ (id)getInnerTypeStringByTag:(unint64_t)a3
{
  if (a3 - 101 > 0x48)
    return 0;
  else
    return off_1E56291A0[a3 - 101];
}

- (id)qualifiedMessageName
{
  unint64_t v2;

  v2 = -[SISchemaClientEvent whichEvent_Type](self, "whichEvent_Type");
  if (v2 - 101 > 0x48)
    return CFSTR("com.apple.aiml.siri.uei.ClientEvent");
  else
    return off_1E56349D0[v2 - 101];
}

- (BOOL)hasEventMetadata
{
  return self->_eventMetadata != 0;
}

- (void)deleteEventMetadata
{
  -[SISchemaClientEvent setEventMetadata:](self, "setEventMetadata:", 0);
}

- (BOOL)hasTransportMetadata
{
  return self->_transportMetadata != 0;
}

- (void)deleteTransportMetadata
{
  -[SISchemaClientEvent setTransportMetadata:](self, "setTransportMetadata:", 0);
}

- (void)setAudioFirstBufferRecorded:(id)a3
{
  SISchemaAudioFirstBufferRecorded *v4;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;

  v4 = (SISchemaAudioFirstBufferRecorded *)a3;
  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 101;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = v4;

}

- (SISchemaAudioFirstBufferRecorded)audioFirstBufferRecorded
{
  if (self->_whichEvent_Type == 101)
    return self->_audioFirstBufferRecorded;
  else
    return (SISchemaAudioFirstBufferRecorded *)0;
}

- (void)deleteAudioFirstBufferRecorded
{
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;

  if (self->_whichEvent_Type == 101)
  {
    self->_whichEvent_Type = 0;
    audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
    self->_audioFirstBufferRecorded = 0;

  }
}

- (void)setAudioStopRecording:(id)a3
{
  SISchemaAudioStopRecording *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaAudioStopRecording *audioStopRecording;

  v4 = (SISchemaAudioStopRecording *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 102;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = v4;

}

- (SISchemaAudioStopRecording)audioStopRecording
{
  if (self->_whichEvent_Type == 102)
    return self->_audioStopRecording;
  else
    return (SISchemaAudioStopRecording *)0;
}

- (void)deleteAudioStopRecording
{
  SISchemaAudioStopRecording *audioStopRecording;

  if (self->_whichEvent_Type == 102)
  {
    self->_whichEvent_Type = 0;
    audioStopRecording = self->_audioStopRecording;
    self->_audioStopRecording = 0;

  }
}

- (void)setClientConversationTrace:(id)a3
{
  SISchemaConversationTrace *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaConversationTrace *clientConversationTrace;

  v4 = (SISchemaConversationTrace *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 103;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = v4;

}

- (SISchemaConversationTrace)clientConversationTrace
{
  if (self->_whichEvent_Type == 103)
    return self->_clientConversationTrace;
  else
    return (SISchemaConversationTrace *)0;
}

- (void)deleteClientConversationTrace
{
  SISchemaConversationTrace *clientConversationTrace;

  if (self->_whichEvent_Type == 103)
  {
    self->_whichEvent_Type = 0;
    clientConversationTrace = self->_clientConversationTrace;
    self->_clientConversationTrace = 0;

  }
}

- (void)setDeviceDynamicContext:(id)a3
{
  SISchemaDeviceDynamicContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDeviceDynamicContext *deviceDynamicContext;

  v4 = (SISchemaDeviceDynamicContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 104;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = v4;

}

- (SISchemaDeviceDynamicContext)deviceDynamicContext
{
  if (self->_whichEvent_Type == 104)
    return self->_deviceDynamicContext;
  else
    return (SISchemaDeviceDynamicContext *)0;
}

- (void)deleteDeviceDynamicContext
{
  SISchemaDeviceDynamicContext *deviceDynamicContext;

  if (self->_whichEvent_Type == 104)
  {
    self->_whichEvent_Type = 0;
    deviceDynamicContext = self->_deviceDynamicContext;
    self->_deviceDynamicContext = 0;

  }
}

- (void)setDeviceFixedContext:(id)a3
{
  SISchemaDeviceFixedContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDeviceFixedContext *deviceFixedContext;

  v4 = (SISchemaDeviceFixedContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 105;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = v4;

}

- (SISchemaDeviceFixedContext)deviceFixedContext
{
  if (self->_whichEvent_Type == 105)
    return self->_deviceFixedContext;
  else
    return (SISchemaDeviceFixedContext *)0;
}

- (void)deleteDeviceFixedContext
{
  SISchemaDeviceFixedContext *deviceFixedContext;

  if (self->_whichEvent_Type == 105)
  {
    self->_whichEvent_Type = 0;
    deviceFixedContext = self->_deviceFixedContext;
    self->_deviceFixedContext = 0;

  }
}

- (void)setDictationContext:(id)a3
{
  SISchemaDictationContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDictationContext *dictationContext;

  v4 = (SISchemaDictationContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 106;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  dictationContext = self->_dictationContext;
  self->_dictationContext = v4;

}

- (SISchemaDictationContext)dictationContext
{
  if (self->_whichEvent_Type == 106)
    return self->_dictationContext;
  else
    return (SISchemaDictationContext *)0;
}

- (void)deleteDictationContext
{
  SISchemaDictationContext *dictationContext;

  if (self->_whichEvent_Type == 106)
  {
    self->_whichEvent_Type = 0;
    dictationContext = self->_dictationContext;
    self->_dictationContext = 0;

  }
}

- (void)setInvocation:(id)a3
{
  SISchemaInvocation *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaInvocation *invocation;

  v4 = (SISchemaInvocation *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 107;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  invocation = self->_invocation;
  self->_invocation = v4;

}

- (SISchemaInvocation)invocation
{
  if (self->_whichEvent_Type == 107)
    return self->_invocation;
  else
    return (SISchemaInvocation *)0;
}

- (void)deleteInvocation
{
  SISchemaInvocation *invocation;

  if (self->_whichEvent_Type == 107)
  {
    self->_whichEvent_Type = 0;
    invocation = self->_invocation;
    self->_invocation = 0;

  }
}

- (void)setLocation:(id)a3
{
  SISchemaLocation *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaLocation *location;

  v4 = (SISchemaLocation *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 108;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  location = self->_location;
  self->_location = v4;

}

- (SISchemaLocation)location
{
  if (self->_whichEvent_Type == 108)
    return self->_location;
  else
    return (SISchemaLocation *)0;
}

- (void)deleteLocation
{
  SISchemaLocation *location;

  if (self->_whichEvent_Type == 108)
  {
    self->_whichEvent_Type = 0;
    location = self->_location;
    self->_location = 0;

  }
}

- (void)setPunchOut:(id)a3
{
  SISchemaPunchOut *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaPunchOut *punchOut;

  v4 = (SISchemaPunchOut *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 109;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  punchOut = self->_punchOut;
  self->_punchOut = v4;

}

- (SISchemaPunchOut)punchOut
{
  if (self->_whichEvent_Type == 109)
    return self->_punchOut;
  else
    return (SISchemaPunchOut *)0;
}

- (void)deletePunchOut
{
  SISchemaPunchOut *punchOut;

  if (self->_whichEvent_Type == 109)
  {
    self->_whichEvent_Type = 0;
    punchOut = self->_punchOut;
    self->_punchOut = 0;

  }
}

- (void)setSiriCue:(id)a3
{
  SISchemaSiriCue *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaSiriCue *siriCue;

  v4 = (SISchemaSiriCue *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 111;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  siriCue = self->_siriCue;
  self->_siriCue = v4;

}

- (SISchemaSiriCue)siriCue
{
  if (self->_whichEvent_Type == 111)
    return self->_siriCue;
  else
    return (SISchemaSiriCue *)0;
}

- (void)deleteSiriCue
{
  SISchemaSiriCue *siriCue;

  if (self->_whichEvent_Type == 111)
  {
    self->_whichEvent_Type = 0;
    siriCue = self->_siriCue;
    self->_siriCue = 0;

  }
}

- (void)setUufrPresented:(id)a3
{
  SISchemaUUFRPresented *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUUFRPresented *uufrPresented;

  v4 = (SISchemaUUFRPresented *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 112;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = v4;

}

- (SISchemaUUFRPresented)uufrPresented
{
  if (self->_whichEvent_Type == 112)
    return self->_uufrPresented;
  else
    return (SISchemaUUFRPresented *)0;
}

- (void)deleteUufrPresented
{
  SISchemaUUFRPresented *uufrPresented;

  if (self->_whichEvent_Type == 112)
  {
    self->_whichEvent_Type = 0;
    uufrPresented = self->_uufrPresented;
    self->_uufrPresented = 0;

  }
}

- (void)setSpeechTranscription:(id)a3
{
  SISchemaSpeechTranscription *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaSpeechTranscription *speechTranscription;

  v4 = (SISchemaSpeechTranscription *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 113;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = v4;

}

- (SISchemaSpeechTranscription)speechTranscription
{
  if (self->_whichEvent_Type == 113)
    return self->_speechTranscription;
  else
    return (SISchemaSpeechTranscription *)0;
}

- (void)deleteSpeechTranscription
{
  SISchemaSpeechTranscription *speechTranscription;

  if (self->_whichEvent_Type == 113)
  {
    self->_whichEvent_Type = 0;
    speechTranscription = self->_speechTranscription;
    self->_speechTranscription = 0;

  }
}

- (void)setTextToSpeechBegin:(id)a3
{
  SISchemaTextToSpeechBegin *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaTextToSpeechBegin *textToSpeechBegin;

  v4 = (SISchemaTextToSpeechBegin *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 114;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = v4;

}

- (SISchemaTextToSpeechBegin)textToSpeechBegin
{
  if (self->_whichEvent_Type == 114)
    return self->_textToSpeechBegin;
  else
    return (SISchemaTextToSpeechBegin *)0;
}

- (void)deleteTextToSpeechBegin
{
  SISchemaTextToSpeechBegin *textToSpeechBegin;

  if (self->_whichEvent_Type == 114)
  {
    self->_whichEvent_Type = 0;
    textToSpeechBegin = self->_textToSpeechBegin;
    self->_textToSpeechBegin = 0;

  }
}

- (void)setTextToSpeechEnd:(id)a3
{
  SISchemaTextToSpeechEnd *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaTextToSpeechEnd *textToSpeechEnd;

  v4 = (SISchemaTextToSpeechEnd *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 115;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = v4;

}

- (SISchemaTextToSpeechEnd)textToSpeechEnd
{
  if (self->_whichEvent_Type == 115)
    return self->_textToSpeechEnd;
  else
    return (SISchemaTextToSpeechEnd *)0;
}

- (void)deleteTextToSpeechEnd
{
  SISchemaTextToSpeechEnd *textToSpeechEnd;

  if (self->_whichEvent_Type == 115)
  {
    self->_whichEvent_Type = 0;
    textToSpeechEnd = self->_textToSpeechEnd;
    self->_textToSpeechEnd = 0;

  }
}

- (void)setUiStateTransition:(id)a3
{
  SISchemaUIStateTransition *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUIStateTransition *uiStateTransition;

  v4 = (SISchemaUIStateTransition *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 116;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = v4;

}

- (SISchemaUIStateTransition)uiStateTransition
{
  if (self->_whichEvent_Type == 116)
    return self->_uiStateTransition;
  else
    return (SISchemaUIStateTransition *)0;
}

- (void)deleteUiStateTransition
{
  SISchemaUIStateTransition *uiStateTransition;

  if (self->_whichEvent_Type == 116)
  {
    self->_whichEvent_Type = 0;
    uiStateTransition = self->_uiStateTransition;
    self->_uiStateTransition = 0;

  }
}

- (void)setClientFlow:(id)a3
{
  SISchemaClientFlow *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaClientFlow *clientFlow;

  v4 = (SISchemaClientFlow *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 117;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  clientFlow = self->_clientFlow;
  self->_clientFlow = v4;

}

- (SISchemaClientFlow)clientFlow
{
  if (self->_whichEvent_Type == 117)
    return self->_clientFlow;
  else
    return (SISchemaClientFlow *)0;
}

- (void)deleteClientFlow
{
  SISchemaClientFlow *clientFlow;

  if (self->_whichEvent_Type == 117)
  {
    self->_whichEvent_Type = 0;
    clientFlow = self->_clientFlow;
    self->_clientFlow = 0;

  }
}

- (void)setDialogOutput:(id)a3
{
  SISchemaDialogOutput *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDialogOutput *dialogOutput;

  v4 = (SISchemaDialogOutput *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 118;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = v4;

}

- (SISchemaDialogOutput)dialogOutput
{
  if (self->_whichEvent_Type == 118)
    return self->_dialogOutput;
  else
    return (SISchemaDialogOutput *)0;
}

- (void)deleteDialogOutput
{
  SISchemaDialogOutput *dialogOutput;

  if (self->_whichEvent_Type == 118)
  {
    self->_whichEvent_Type = 0;
    dialogOutput = self->_dialogOutput;
    self->_dialogOutput = 0;

  }
}

- (void)setDictationEndPointStop:(id)a3
{
  SISchemaDictationEndPointStop *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDictationEndPointStop *dictationEndPointStop;

  v4 = (SISchemaDictationEndPointStop *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 119;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = v4;

}

- (SISchemaDictationEndPointStop)dictationEndPointStop
{
  if (self->_whichEvent_Type == 119)
    return self->_dictationEndPointStop;
  else
    return (SISchemaDictationEndPointStop *)0;
}

- (void)deleteDictationEndPointStop
{
  SISchemaDictationEndPointStop *dictationEndPointStop;

  if (self->_whichEvent_Type == 119)
  {
    self->_whichEvent_Type = 0;
    dictationEndPointStop = self->_dictationEndPointStop;
    self->_dictationEndPointStop = 0;

  }
}

- (void)setDictationEndPointCancel:(id)a3
{
  SISchemaDictationEndPointCancel *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;

  v4 = (SISchemaDictationEndPointCancel *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 120;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = v4;

}

- (SISchemaDictationEndPointCancel)dictationEndPointCancel
{
  if (self->_whichEvent_Type == 120)
    return self->_dictationEndPointCancel;
  else
    return (SISchemaDictationEndPointCancel *)0;
}

- (void)deleteDictationEndPointCancel
{
  SISchemaDictationEndPointCancel *dictationEndPointCancel;

  if (self->_whichEvent_Type == 120)
  {
    self->_whichEvent_Type = 0;
    dictationEndPointCancel = self->_dictationEndPointCancel;
    self->_dictationEndPointCancel = 0;

  }
}

- (void)setDictationAlternativeSelected:(id)a3
{
  SISchemaDictationAlternativeSelected *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;

  v4 = (SISchemaDictationAlternativeSelected *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 121;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = v4;

}

- (SISchemaDictationAlternativeSelected)dictationAlternativeSelected
{
  if (self->_whichEvent_Type == 121)
    return self->_dictationAlternativeSelected;
  else
    return (SISchemaDictationAlternativeSelected *)0;
}

- (void)deleteDictationAlternativeSelected
{
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;

  if (self->_whichEvent_Type == 121)
  {
    self->_whichEvent_Type = 0;
    dictationAlternativeSelected = self->_dictationAlternativeSelected;
    self->_dictationAlternativeSelected = 0;

  }
}

- (void)setDictationTranscriptionMetadata:(id)a3
{
  SISchemaDictationTranscriptionMetadata *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;

  v4 = (SISchemaDictationTranscriptionMetadata *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 122;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = v4;

}

- (SISchemaDictationTranscriptionMetadata)dictationTranscriptionMetadata
{
  if (self->_whichEvent_Type == 122)
    return self->_dictationTranscriptionMetadata;
  else
    return (SISchemaDictationTranscriptionMetadata *)0;
}

- (void)deleteDictationTranscriptionMetadata
{
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;

  if (self->_whichEvent_Type == 122)
  {
    self->_whichEvent_Type = 0;
    dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
    self->_dictationTranscriptionMetadata = 0;

  }
}

- (void)setCarPlayHeadUnitContext:(id)a3
{
  SISchemaCarPlayHeadUnitContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;

  v4 = (SISchemaCarPlayHeadUnitContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 123;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = v4;

}

- (SISchemaCarPlayHeadUnitContext)carPlayHeadUnitContext
{
  if (self->_whichEvent_Type == 123)
    return self->_carPlayHeadUnitContext;
  else
    return (SISchemaCarPlayHeadUnitContext *)0;
}

- (void)deleteCarPlayHeadUnitContext
{
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;

  if (self->_whichEvent_Type == 123)
  {
    self->_whichEvent_Type = 0;
    carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
    self->_carPlayHeadUnitContext = 0;

  }
}

- (void)setUufrCompletion:(id)a3
{
  SISchemaUUFRCompletion *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUUFRCompletion *uufrCompletion;

  v4 = (SISchemaUUFRCompletion *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 124;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = v4;

}

- (SISchemaUUFRCompletion)uufrCompletion
{
  if (self->_whichEvent_Type == 124)
    return self->_uufrCompletion;
  else
    return (SISchemaUUFRCompletion *)0;
}

- (void)deleteUufrCompletion
{
  SISchemaUUFRCompletion *uufrCompletion;

  if (self->_whichEvent_Type == 124)
  {
    self->_whichEvent_Type = 0;
    uufrCompletion = self->_uufrCompletion;
    self->_uufrCompletion = 0;

  }
}

- (void)setUufrShown:(id)a3
{
  SISchemaUUFRShown *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUUFRShown *uufrShown;

  v4 = (SISchemaUUFRShown *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 125;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  uufrShown = self->_uufrShown;
  self->_uufrShown = v4;

}

- (SISchemaUUFRShown)uufrShown
{
  if (self->_whichEvent_Type == 125)
    return self->_uufrShown;
  else
    return (SISchemaUUFRShown *)0;
}

- (void)deleteUufrShown
{
  SISchemaUUFRShown *uufrShown;

  if (self->_whichEvent_Type == 125)
  {
    self->_whichEvent_Type = 0;
    uufrShown = self->_uufrShown;
    self->_uufrShown = 0;

  }
}

- (void)setUufrSaid:(id)a3
{
  SISchemaUUFRSaid *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUUFRSaid *uufrSaid;

  v4 = (SISchemaUUFRSaid *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 126;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = v4;

}

- (SISchemaUUFRSaid)uufrSaid
{
  if (self->_whichEvent_Type == 126)
    return self->_uufrSaid;
  else
    return (SISchemaUUFRSaid *)0;
}

- (void)deleteUufrSaid
{
  SISchemaUUFRSaid *uufrSaid;

  if (self->_whichEvent_Type == 126)
  {
    self->_whichEvent_Type = 0;
    uufrSaid = self->_uufrSaid;
    self->_uufrSaid = 0;

  }
}

- (void)setUufrFatalError:(id)a3
{
  SISchemaUUFRFatalError *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUUFRFatalError *uufrFatalError;

  v4 = (SISchemaUUFRFatalError *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 127;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = v4;

}

- (SISchemaUUFRFatalError)uufrFatalError
{
  if (self->_whichEvent_Type == 127)
    return self->_uufrFatalError;
  else
    return (SISchemaUUFRFatalError *)0;
}

- (void)deleteUufrFatalError
{
  SISchemaUUFRFatalError *uufrFatalError;

  if (self->_whichEvent_Type == 127)
  {
    self->_whichEvent_Type = 0;
    uufrFatalError = self->_uufrFatalError;
    self->_uufrFatalError = 0;

  }
}

- (void)setDictationAlternativesViewed:(id)a3
{
  SISchemaDictationAlternativesViewed *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;

  v4 = (SISchemaDictationAlternativesViewed *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  self->_whichEvent_Type = (unint64_t)(v4 != 0) << 7;
  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = v4;

}

- (SISchemaDictationAlternativesViewed)dictationAlternativesViewed
{
  if (self->_whichEvent_Type == 128)
    return self->_dictationAlternativesViewed;
  else
    return (SISchemaDictationAlternativesViewed *)0;
}

- (void)deleteDictationAlternativesViewed
{
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;

  if (self->_whichEvent_Type == 128)
  {
    self->_whichEvent_Type = 0;
    dictationAlternativesViewed = self->_dictationAlternativesViewed;
    self->_dictationAlternativesViewed = 0;

  }
}

- (void)setIntercomMessageRecorded:(id)a3
{
  SISchemaIntercomMessageRecorded *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;

  v4 = (SISchemaIntercomMessageRecorded *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 129;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = v4;

}

- (SISchemaIntercomMessageRecorded)intercomMessageRecorded
{
  if (self->_whichEvent_Type == 129)
    return self->_intercomMessageRecorded;
  else
    return (SISchemaIntercomMessageRecorded *)0;
}

- (void)deleteIntercomMessageRecorded
{
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;

  if (self->_whichEvent_Type == 129)
  {
    self->_whichEvent_Type = 0;
    intercomMessageRecorded = self->_intercomMessageRecorded;
    self->_intercomMessageRecorded = 0;

  }
}

- (void)setCasinoRelationship:(id)a3
{
  SISchemaCasinoRelationship *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaCasinoRelationship *casinoRelationship;

  v4 = (SISchemaCasinoRelationship *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 130;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = v4;

}

- (SISchemaCasinoRelationship)casinoRelationship
{
  if (self->_whichEvent_Type == 130)
    return self->_casinoRelationship;
  else
    return (SISchemaCasinoRelationship *)0;
}

- (void)deleteCasinoRelationship
{
  SISchemaCasinoRelationship *casinoRelationship;

  if (self->_whichEvent_Type == 130)
  {
    self->_whichEvent_Type = 0;
    casinoRelationship = self->_casinoRelationship;
    self->_casinoRelationship = 0;

  }
}

- (void)setUserViewRegionInteraction:(id)a3
{
  SISchemaUserViewRegionInteraction *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;

  v4 = (SISchemaUserViewRegionInteraction *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 131;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = v4;

}

- (SISchemaUserViewRegionInteraction)userViewRegionInteraction
{
  if (self->_whichEvent_Type == 131)
    return self->_userViewRegionInteraction;
  else
    return (SISchemaUserViewRegionInteraction *)0;
}

- (void)deleteUserViewRegionInteraction
{
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;

  if (self->_whichEvent_Type == 131)
  {
    self->_whichEvent_Type = 0;
    userViewRegionInteraction = self->_userViewRegionInteraction;
    self->_userViewRegionInteraction = 0;

  }
}

- (void)setDeviceLockStateChanged:(id)a3
{
  SISchemaDeviceLockStateChanged *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;

  v4 = (SISchemaDeviceLockStateChanged *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 132;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = v4;

}

- (SISchemaDeviceLockStateChanged)deviceLockStateChanged
{
  if (self->_whichEvent_Type == 132)
    return self->_deviceLockStateChanged;
  else
    return (SISchemaDeviceLockStateChanged *)0;
}

- (void)deleteDeviceLockStateChanged
{
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;

  if (self->_whichEvent_Type == 132)
  {
    self->_whichEvent_Type = 0;
    deviceLockStateChanged = self->_deviceLockStateChanged;
    self->_deviceLockStateChanged = 0;

  }
}

- (void)setUeiRequestCategorization:(id)a3
{
  SISchemaUEIRequestCategorization *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;

  v4 = (SISchemaUEIRequestCategorization *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 133;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = v4;

}

- (SISchemaUEIRequestCategorization)ueiRequestCategorization
{
  if (self->_whichEvent_Type == 133)
    return self->_ueiRequestCategorization;
  else
    return (SISchemaUEIRequestCategorization *)0;
}

- (void)deleteUeiRequestCategorization
{
  SISchemaUEIRequestCategorization *ueiRequestCategorization;

  if (self->_whichEvent_Type == 133)
  {
    self->_whichEvent_Type = 0;
    ueiRequestCategorization = self->_ueiRequestCategorization;
    self->_ueiRequestCategorization = 0;

  }
}

- (void)setAudioStopRecordingStarted:(id)a3
{
  SISchemaAudioStopRecordingStarted *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;

  v4 = (SISchemaAudioStopRecordingStarted *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 134;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = v4;

}

- (SISchemaAudioStopRecordingStarted)audioStopRecordingStarted
{
  if (self->_whichEvent_Type == 134)
    return self->_audioStopRecordingStarted;
  else
    return (SISchemaAudioStopRecordingStarted *)0;
}

- (void)deleteAudioStopRecordingStarted
{
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;

  if (self->_whichEvent_Type == 134)
  {
    self->_whichEvent_Type = 0;
    audioStopRecordingStarted = self->_audioStopRecordingStarted;
    self->_audioStopRecordingStarted = 0;

  }
}

- (void)setUeiLaunchContext:(id)a3
{
  SISchemaUEILaunchContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEILaunchContext *ueiLaunchContext;

  v4 = (SISchemaUEILaunchContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 135;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = v4;

}

- (SISchemaUEILaunchContext)ueiLaunchContext
{
  if (self->_whichEvent_Type == 135)
    return self->_ueiLaunchContext;
  else
    return (SISchemaUEILaunchContext *)0;
}

- (void)deleteUeiLaunchContext
{
  SISchemaUEILaunchContext *ueiLaunchContext;

  if (self->_whichEvent_Type == 135)
  {
    self->_whichEvent_Type = 0;
    ueiLaunchContext = self->_ueiLaunchContext;
    self->_ueiLaunchContext = 0;

  }
}

- (void)setUeiUserSpeakingContext:(id)a3
{
  SISchemaUEIUserSpeakingContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;

  v4 = (SISchemaUEIUserSpeakingContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 136;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = v4;

}

- (SISchemaUEIUserSpeakingContext)ueiUserSpeakingContext
{
  if (self->_whichEvent_Type == 136)
    return self->_ueiUserSpeakingContext;
  else
    return (SISchemaUEIUserSpeakingContext *)0;
}

- (void)deleteUeiUserSpeakingContext
{
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;

  if (self->_whichEvent_Type == 136)
  {
    self->_whichEvent_Type = 0;
    ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
    self->_ueiUserSpeakingContext = 0;

  }
}

- (void)setUeiUUFRReady:(id)a3
{
  SISchemaUEIUUFRReady *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIUUFRReady *ueiUUFRReady;

  v4 = (SISchemaUEIUUFRReady *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 137;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = v4;

}

- (SISchemaUEIUUFRReady)ueiUUFRReady
{
  if (self->_whichEvent_Type == 137)
    return self->_ueiUUFRReady;
  else
    return (SISchemaUEIUUFRReady *)0;
}

- (void)deleteUeiUUFRReady
{
  SISchemaUEIUUFRReady *ueiUUFRReady;

  if (self->_whichEvent_Type == 137)
  {
    self->_whichEvent_Type = 0;
    ueiUUFRReady = self->_ueiUUFRReady;
    self->_ueiUUFRReady = 0;

  }
}

- (void)setUeiUIRenderingContext:(id)a3
{
  SISchemaUEIUIRenderingContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;

  v4 = (SISchemaUEIUIRenderingContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 138;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = v4;

}

- (SISchemaUEIUIRenderingContext)ueiUIRenderingContext
{
  if (self->_whichEvent_Type == 138)
    return self->_ueiUIRenderingContext;
  else
    return (SISchemaUEIUIRenderingContext *)0;
}

- (void)deleteUeiUIRenderingContext
{
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;

  if (self->_whichEvent_Type == 138)
  {
    self->_whichEvent_Type = 0;
    ueiUIRenderingContext = self->_ueiUIRenderingContext;
    self->_ueiUIRenderingContext = 0;

  }
}

- (void)setPnrTextToSpeechRequestReceived:(id)a3
{
  SISchemaPNRTextToSpeechRequestReceived *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;

  v4 = (SISchemaPNRTextToSpeechRequestReceived *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 139;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = v4;

}

- (SISchemaPNRTextToSpeechRequestReceived)pnrTextToSpeechRequestReceived
{
  if (self->_whichEvent_Type == 139)
    return self->_pnrTextToSpeechRequestReceived;
  else
    return (SISchemaPNRTextToSpeechRequestReceived *)0;
}

- (void)deletePnrTextToSpeechRequestReceived
{
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;

  if (self->_whichEvent_Type == 139)
  {
    self->_whichEvent_Type = 0;
    pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
    self->_pnrTextToSpeechRequestReceived = 0;

  }
}

- (void)setPnrSpeechRecognitionSourceContext:(id)a3
{
  SISchemaPNRSpeechRecognitionSourceContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;

  v4 = (SISchemaPNRSpeechRecognitionSourceContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 140;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = v4;

}

- (SISchemaPNRSpeechRecognitionSourceContext)pnrSpeechRecognitionSourceContext
{
  if (self->_whichEvent_Type == 140)
    return self->_pnrSpeechRecognitionSourceContext;
  else
    return (SISchemaPNRSpeechRecognitionSourceContext *)0;
}

- (void)deletePnrSpeechRecognitionSourceContext
{
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;

  if (self->_whichEvent_Type == 140)
  {
    self->_whichEvent_Type = 0;
    pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
    self->_pnrSpeechRecognitionSourceContext = 0;

  }
}

- (void)setPnrFatalError:(id)a3
{
  SISchemaPNRFatalError *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaPNRFatalError *pnrFatalError;

  v4 = (SISchemaPNRFatalError *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 141;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = v4;

}

- (SISchemaPNRFatalError)pnrFatalError
{
  if (self->_whichEvent_Type == 141)
    return self->_pnrFatalError;
  else
    return (SISchemaPNRFatalError *)0;
}

- (void)deletePnrFatalError
{
  SISchemaPNRFatalError *pnrFatalError;

  if (self->_whichEvent_Type == 141)
  {
    self->_whichEvent_Type = 0;
    pnrFatalError = self->_pnrFatalError;
    self->_pnrFatalError = 0;

  }
}

- (void)setTurnMTERequest:(id)a3
{
  SISchemaTurnMTERequest *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaTurnMTERequest *turnMTERequest;

  v4 = (SISchemaTurnMTERequest *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 142;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = v4;

}

- (SISchemaTurnMTERequest)turnMTERequest
{
  if (self->_whichEvent_Type == 142)
    return self->_turnMTERequest;
  else
    return (SISchemaTurnMTERequest *)0;
}

- (void)deleteTurnMTERequest
{
  SISchemaTurnMTERequest *turnMTERequest;

  if (self->_whichEvent_Type == 142)
  {
    self->_whichEvent_Type = 0;
    turnMTERequest = self->_turnMTERequest;
    self->_turnMTERequest = 0;

  }
}

- (void)setKeyboardDismissed:(id)a3
{
  SISchemaKeyboardDismissed *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaKeyboardDismissed *keyboardDismissed;

  v4 = (SISchemaKeyboardDismissed *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 143;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = v4;

}

- (SISchemaKeyboardDismissed)keyboardDismissed
{
  if (self->_whichEvent_Type == 143)
    return self->_keyboardDismissed;
  else
    return (SISchemaKeyboardDismissed *)0;
}

- (void)deleteKeyboardDismissed
{
  SISchemaKeyboardDismissed *keyboardDismissed;

  if (self->_whichEvent_Type == 143)
  {
    self->_whichEvent_Type = 0;
    keyboardDismissed = self->_keyboardDismissed;
    self->_keyboardDismissed = 0;

  }
}

- (void)setEngagedAccessoryContext:(id)a3
{
  SISchemaEngagedAccessoryContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;

  v4 = (SISchemaEngagedAccessoryContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 144;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = v4;

}

- (SISchemaEngagedAccessoryContext)engagedAccessoryContext
{
  if (self->_whichEvent_Type == 144)
    return self->_engagedAccessoryContext;
  else
    return (SISchemaEngagedAccessoryContext *)0;
}

- (void)deleteEngagedAccessoryContext
{
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;

  if (self->_whichEvent_Type == 144)
  {
    self->_whichEvent_Type = 0;
    engagedAccessoryContext = self->_engagedAccessoryContext;
    self->_engagedAccessoryContext = 0;

  }
}

- (void)setAnnounceCarPlayBannerTapped:(id)a3
{
  SISchemaAnnounceCarPlayBannerTapped *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;

  v4 = (SISchemaAnnounceCarPlayBannerTapped *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 145;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = v4;

}

- (SISchemaAnnounceCarPlayBannerTapped)announceCarPlayBannerTapped
{
  if (self->_whichEvent_Type == 145)
    return self->_announceCarPlayBannerTapped;
  else
    return (SISchemaAnnounceCarPlayBannerTapped *)0;
}

- (void)deleteAnnounceCarPlayBannerTapped
{
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;

  if (self->_whichEvent_Type == 145)
  {
    self->_whichEvent_Type = 0;
    announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
    self->_announceCarPlayBannerTapped = 0;

  }
}

- (void)setAnnounceCarPlayGlyphSettingToggled:(id)a3
{
  SISchemaAnnounceCarPlayGlyphSettingToggled *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;

  v4 = (SISchemaAnnounceCarPlayGlyphSettingToggled *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 146;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = v4;

}

- (SISchemaAnnounceCarPlayGlyphSettingToggled)announceCarPlayGlyphSettingToggled
{
  if (self->_whichEvent_Type == 146)
    return self->_announceCarPlayGlyphSettingToggled;
  else
    return (SISchemaAnnounceCarPlayGlyphSettingToggled *)0;
}

- (void)deleteAnnounceCarPlayGlyphSettingToggled
{
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;

  if (self->_whichEvent_Type == 146)
  {
    self->_whichEvent_Type = 0;
    announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
    self->_announceCarPlayGlyphSettingToggled = 0;

  }
}

- (void)setDictationContentEdited:(id)a3
{
  SISchemaDictationContentEdited *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaDictationContentEdited *dictationContentEdited;

  v4 = (SISchemaDictationContentEdited *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 147;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = v4;

}

- (SISchemaDictationContentEdited)dictationContentEdited
{
  if (self->_whichEvent_Type == 147)
    return self->_dictationContentEdited;
  else
    return (SISchemaDictationContentEdited *)0;
}

- (void)deleteDictationContentEdited
{
  SISchemaDictationContentEdited *dictationContentEdited;

  if (self->_whichEvent_Type == 147)
  {
    self->_whichEvent_Type = 0;
    dictationContentEdited = self->_dictationContentEdited;
    self->_dictationContentEdited = 0;

  }
}

- (void)setUufrShownTier1:(id)a3
{
  SISchemaUUFRShownTier1 *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUUFRShownTier1 *uufrShownTier1;

  v4 = (SISchemaUUFRShownTier1 *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 148;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = v4;

}

- (SISchemaUUFRShownTier1)uufrShownTier1
{
  if (self->_whichEvent_Type == 148)
    return self->_uufrShownTier1;
  else
    return (SISchemaUUFRShownTier1 *)0;
}

- (void)deleteUufrShownTier1
{
  SISchemaUUFRShownTier1 *uufrShownTier1;

  if (self->_whichEvent_Type == 148)
  {
    self->_whichEvent_Type = 0;
    uufrShownTier1 = self->_uufrShownTier1;
    self->_uufrShownTier1 = 0;

  }
}

- (void)setUeiDictationPartialResultUpdated:(id)a3
{
  SISchemaUEIDictationPartialResultUpdated *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;

  v4 = (SISchemaUEIDictationPartialResultUpdated *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 150;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = v4;

}

- (SISchemaUEIDictationPartialResultUpdated)ueiDictationPartialResultUpdated
{
  if (self->_whichEvent_Type == 150)
    return self->_ueiDictationPartialResultUpdated;
  else
    return (SISchemaUEIDictationPartialResultUpdated *)0;
}

- (void)deleteUeiDictationPartialResultUpdated
{
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;

  if (self->_whichEvent_Type == 150)
  {
    self->_whichEvent_Type = 0;
    ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
    self->_ueiDictationPartialResultUpdated = 0;

  }
}

- (void)setUeiDictationVoiceCommandExecuted:(id)a3
{
  SISchemaUEIDictationVoiceCommandExecuted *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;

  v4 = (SISchemaUEIDictationVoiceCommandExecuted *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 151;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = v4;

}

- (SISchemaUEIDictationVoiceCommandExecuted)ueiDictationVoiceCommandExecuted
{
  if (self->_whichEvent_Type == 151)
    return self->_ueiDictationVoiceCommandExecuted;
  else
    return (SISchemaUEIDictationVoiceCommandExecuted *)0;
}

- (void)deleteUeiDictationVoiceCommandExecuted
{
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;

  if (self->_whichEvent_Type == 151)
  {
    self->_whichEvent_Type = 0;
    ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
    self->_ueiDictationVoiceCommandExecuted = 0;

  }
}

- (void)setUeiDictationInputModeSwitchContext:(id)a3
{
  SISchemaUEIDictationInputModeSwitchContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;

  v4 = (SISchemaUEIDictationInputModeSwitchContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 152;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = v4;

}

- (SISchemaUEIDictationInputModeSwitchContext)ueiDictationInputModeSwitchContext
{
  if (self->_whichEvent_Type == 152)
    return self->_ueiDictationInputModeSwitchContext;
  else
    return (SISchemaUEIDictationInputModeSwitchContext *)0;
}

- (void)deleteUeiDictationInputModeSwitchContext
{
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;

  if (self->_whichEvent_Type == 152)
  {
    self->_whichEvent_Type = 0;
    ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
    self->_ueiDictationInputModeSwitchContext = 0;

  }
}

- (void)setUeiDictationToolTipDisplayContext:(id)a3
{
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;

  v4 = (SISchemaUEIDictationDiscoveryToolTipDisplayContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 153;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = v4;

}

- (SISchemaUEIDictationDiscoveryToolTipDisplayContext)ueiDictationToolTipDisplayContext
{
  if (self->_whichEvent_Type == 153)
    return self->_ueiDictationToolTipDisplayContext;
  else
    return (SISchemaUEIDictationDiscoveryToolTipDisplayContext *)0;
}

- (void)deleteUeiDictationToolTipDisplayContext
{
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;

  if (self->_whichEvent_Type == 153)
  {
    self->_whichEvent_Type = 0;
    ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
    self->_ueiDictationToolTipDisplayContext = 0;

  }
}

- (void)setHostPlatformViewAppearContext:(id)a3
{
  SISchemaUEIHostingPlatformViewAppearContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;

  v4 = (SISchemaUEIHostingPlatformViewAppearContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 154;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = v4;

}

- (SISchemaUEIHostingPlatformViewAppearContext)hostPlatformViewAppearContext
{
  if (self->_whichEvent_Type == 154)
    return self->_hostPlatformViewAppearContext;
  else
    return (SISchemaUEIHostingPlatformViewAppearContext *)0;
}

- (void)deleteHostPlatformViewAppearContext
{
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;

  if (self->_whichEvent_Type == 154)
  {
    self->_whichEvent_Type = 0;
    hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
    self->_hostPlatformViewAppearContext = 0;

  }
}

- (void)setHostPlatformViewDisappearContext:(id)a3
{
  SISchemaUEIHostingPlatformViewDisappearContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;

  v4 = (SISchemaUEIHostingPlatformViewDisappearContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 155;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = v4;

}

- (SISchemaUEIHostingPlatformViewDisappearContext)hostPlatformViewDisappearContext
{
  if (self->_whichEvent_Type == 155)
    return self->_hostPlatformViewDisappearContext;
  else
    return (SISchemaUEIHostingPlatformViewDisappearContext *)0;
}

- (void)deleteHostPlatformViewDisappearContext
{
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;

  if (self->_whichEvent_Type == 155)
  {
    self->_whichEvent_Type = 0;
    hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
    self->_hostPlatformViewDisappearContext = 0;

  }
}

- (void)setUeiDictationTranscriptionTokenized:(id)a3
{
  SISchemaUEIDictationTranscriptionTokenized *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;

  v4 = (SISchemaUEIDictationTranscriptionTokenized *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 156;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = v4;

}

- (SISchemaUEIDictationTranscriptionTokenized)ueiDictationTranscriptionTokenized
{
  if (self->_whichEvent_Type == 156)
    return self->_ueiDictationTranscriptionTokenized;
  else
    return (SISchemaUEIDictationTranscriptionTokenized *)0;
}

- (void)deleteUeiDictationTranscriptionTokenized
{
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;

  if (self->_whichEvent_Type == 156)
  {
    self->_whichEvent_Type = 0;
    ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
    self->_ueiDictationTranscriptionTokenized = 0;

  }
}

- (void)setDictationAlternativesSelected:(id)a3
{
  SISchemaUEIDictationAlternativeConfusionPairsSelected *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;

  v4 = (SISchemaUEIDictationAlternativeConfusionPairsSelected *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 157;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = v4;

}

- (SISchemaUEIDictationAlternativeConfusionPairsSelected)dictationAlternativesSelected
{
  if (self->_whichEvent_Type == 157)
    return self->_dictationAlternativesSelected;
  else
    return (SISchemaUEIDictationAlternativeConfusionPairsSelected *)0;
}

- (void)deleteDictationAlternativesSelected
{
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;

  if (self->_whichEvent_Type == 157)
  {
    self->_whichEvent_Type = 0;
    dictationAlternativesSelected = self->_dictationAlternativesSelected;
    self->_dictationAlternativesSelected = 0;

  }
}

- (void)setUufrSelected:(id)a3
{
  SISchemaUUFRSelected *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUUFRSelected *uufrSelected;

  v4 = (SISchemaUUFRSelected *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 158;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = v4;

}

- (SISchemaUUFRSelected)uufrSelected
{
  if (self->_whichEvent_Type == 158)
    return self->_uufrSelected;
  else
    return (SISchemaUUFRSelected *)0;
}

- (void)deleteUufrSelected
{
  SISchemaUUFRSelected *uufrSelected;

  if (self->_whichEvent_Type == 158)
  {
    self->_whichEvent_Type = 0;
    uufrSelected = self->_uufrSelected;
    self->_uufrSelected = 0;

  }
}

- (void)setUeiDictationAlternativeTextPairsSelected:(id)a3
{
  SISchemaUEIDictationAlternativeTextPairsSelected *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;

  v4 = (SISchemaUEIDictationAlternativeTextPairsSelected *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 159;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = v4;

}

- (SISchemaUEIDictationAlternativeTextPairsSelected)ueiDictationAlternativeTextPairsSelected
{
  if (self->_whichEvent_Type == 159)
    return self->_ueiDictationAlternativeTextPairsSelected;
  else
    return (SISchemaUEIDictationAlternativeTextPairsSelected *)0;
}

- (void)deleteUeiDictationAlternativeTextPairsSelected
{
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;

  if (self->_whichEvent_Type == 159)
  {
    self->_whichEvent_Type = 0;
    ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
    self->_ueiDictationAlternativeTextPairsSelected = 0;

  }
}

- (void)setUeiUserBargeInDetected:(id)a3
{
  SISchemaUEIUserBargeInDetected *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;

  v4 = (SISchemaUEIUserBargeInDetected *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 160;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = v4;

}

- (SISchemaUEIUserBargeInDetected)ueiUserBargeInDetected
{
  if (self->_whichEvent_Type == 160)
    return self->_ueiUserBargeInDetected;
  else
    return (SISchemaUEIUserBargeInDetected *)0;
}

- (void)deleteUeiUserBargeInDetected
{
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;

  if (self->_whichEvent_Type == 160)
  {
    self->_whichEvent_Type = 0;
    ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
    self->_ueiUserBargeInDetected = 0;

  }
}

- (void)setUeiDictationEnablementPromptShown:(id)a3
{
  SISchemaUEIDictationEnablementPromptShown *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;

  v4 = (SISchemaUEIDictationEnablementPromptShown *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 161;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = v4;

}

- (SISchemaUEIDictationEnablementPromptShown)ueiDictationEnablementPromptShown
{
  if (self->_whichEvent_Type == 161)
    return self->_ueiDictationEnablementPromptShown;
  else
    return (SISchemaUEIDictationEnablementPromptShown *)0;
}

- (void)deleteUeiDictationEnablementPromptShown
{
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;

  if (self->_whichEvent_Type == 161)
  {
    self->_whichEvent_Type = 0;
    ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
    self->_ueiDictationEnablementPromptShown = 0;

  }
}

- (void)setUeiSiriCarCommandContext:(id)a3
{
  SISchemaUEISiriCarCommandContext *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;

  v4 = (SISchemaUEISiriCarCommandContext *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 162;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = v4;

}

- (SISchemaUEISiriCarCommandContext)ueiSiriCarCommandContext
{
  if (self->_whichEvent_Type == 162)
    return self->_ueiSiriCarCommandContext;
  else
    return (SISchemaUEISiriCarCommandContext *)0;
}

- (void)deleteUeiSiriCarCommandContext
{
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;

  if (self->_whichEvent_Type == 162)
  {
    self->_whichEvent_Type = 0;
    ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
    self->_ueiSiriCarCommandContext = 0;

  }
}

- (void)setUeiVisionSnippetDismissed:(id)a3
{
  SISchemaUEIVisionSnippetDismissed *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;

  v4 = (SISchemaUEIVisionSnippetDismissed *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 163;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = v4;

}

- (SISchemaUEIVisionSnippetDismissed)ueiVisionSnippetDismissed
{
  if (self->_whichEvent_Type == 163)
    return self->_ueiVisionSnippetDismissed;
  else
    return (SISchemaUEIVisionSnippetDismissed *)0;
}

- (void)deleteUeiVisionSnippetDismissed
{
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;

  if (self->_whichEvent_Type == 163)
  {
    self->_whichEvent_Type = 0;
    ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
    self->_ueiVisionSnippetDismissed = 0;

  }
}

- (void)setUeiSiriWasUnavailable:(id)a3
{
  SISchemaUEISiriWasUnavailable *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;

  v4 = (SISchemaUEISiriWasUnavailable *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 164;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = v4;

}

- (SISchemaUEISiriWasUnavailable)ueiSiriWasUnavailable
{
  if (self->_whichEvent_Type == 164)
    return self->_ueiSiriWasUnavailable;
  else
    return (SISchemaUEISiriWasUnavailable *)0;
}

- (void)deleteUeiSiriWasUnavailable
{
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;

  if (self->_whichEvent_Type == 164)
  {
    self->_whichEvent_Type = 0;
    ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
    self->_ueiSiriWasUnavailable = 0;

  }
}

- (void)setPreferredAudioRouteChanged:(id)a3
{
  SISchemaBluetoothCarPreferredAudioRouteChanged *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;

  v4 = (SISchemaBluetoothCarPreferredAudioRouteChanged *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 165;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = v4;

}

- (SISchemaBluetoothCarPreferredAudioRouteChanged)preferredAudioRouteChanged
{
  if (self->_whichEvent_Type == 165)
    return self->_preferredAudioRouteChanged;
  else
    return (SISchemaBluetoothCarPreferredAudioRouteChanged *)0;
}

- (void)deletePreferredAudioRouteChanged
{
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;

  if (self->_whichEvent_Type == 165)
  {
    self->_whichEvent_Type = 0;
    preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
    self->_preferredAudioRouteChanged = 0;

  }
}

- (void)setUeiDictationContentEditedTier1:(id)a3
{
  SISchemaUEIDictationContentEditedTier1 *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;

  v4 = (SISchemaUEIDictationContentEditedTier1 *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 166;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = v4;

}

- (SISchemaUEIDictationContentEditedTier1)ueiDictationContentEditedTier1
{
  if (self->_whichEvent_Type == 166)
    return self->_ueiDictationContentEditedTier1;
  else
    return (SISchemaUEIDictationContentEditedTier1 *)0;
}

- (void)deleteUeiDictationContentEditedTier1
{
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;

  if (self->_whichEvent_Type == 166)
  {
    self->_whichEvent_Type = 0;
    ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
    self->_ueiDictationContentEditedTier1 = 0;

  }
}

- (void)setUeiDictationVoiceCommandUndoTapAction:(id)a3
{
  SISchemaUEIDictationVoiceCommandUndoTapAction *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;

  v4 = (SISchemaUEIDictationVoiceCommandUndoTapAction *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 167;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = v4;

}

- (SISchemaUEIDictationVoiceCommandUndoTapAction)ueiDictationVoiceCommandUndoTapAction
{
  if (self->_whichEvent_Type == 167)
    return self->_ueiDictationVoiceCommandUndoTapAction;
  else
    return (SISchemaUEIDictationVoiceCommandUndoTapAction *)0;
}

- (void)deleteUeiDictationVoiceCommandUndoTapAction
{
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;

  if (self->_whichEvent_Type == 167)
  {
    self->_whichEvent_Type = 0;
    ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
    self->_ueiDictationVoiceCommandUndoTapAction = 0;

  }
}

- (void)setUeiDictationVoiceCommandDisambiguationAction:(id)a3
{
  SISchemaUEIDictationVoiceCommandDisambiguationAction *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;

  v4 = (SISchemaUEIDictationVoiceCommandDisambiguationAction *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 168;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = v4;

}

- (SISchemaUEIDictationVoiceCommandDisambiguationAction)ueiDictationVoiceCommandDisambiguationAction
{
  if (self->_whichEvent_Type == 168)
    return self->_ueiDictationVoiceCommandDisambiguationAction;
  else
    return (SISchemaUEIDictationVoiceCommandDisambiguationAction *)0;
}

- (void)deleteUeiDictationVoiceCommandDisambiguationAction
{
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;

  if (self->_whichEvent_Type == 168)
  {
    self->_whichEvent_Type = 0;
    ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
    self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  }
}

- (void)setUeiDictationVoiceCommandKeyboardAction:(id)a3
{
  SISchemaUEIDictationVoiceCommandKeyboardAction *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;

  v4 = (SISchemaUEIDictationVoiceCommandKeyboardAction *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 169;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = v4;

}

- (SISchemaUEIDictationVoiceCommandKeyboardAction)ueiDictationVoiceCommandKeyboardAction
{
  if (self->_whichEvent_Type == 169)
    return self->_ueiDictationVoiceCommandKeyboardAction;
  else
    return (SISchemaUEIDictationVoiceCommandKeyboardAction *)0;
}

- (void)deleteUeiDictationVoiceCommandKeyboardAction
{
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;

  if (self->_whichEvent_Type == 169)
  {
    self->_whichEvent_Type = 0;
    ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
    self->_ueiDictationVoiceCommandKeyboardAction = 0;

  }
}

- (void)setUeiDictationEuclidAlternativesEvent:(id)a3
{
  SISchemaUEIDictationEuclidAlternativesEvent *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;

  v4 = (SISchemaUEIDictationEuclidAlternativesEvent *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 170;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = v4;

}

- (SISchemaUEIDictationEuclidAlternativesEvent)ueiDictationEuclidAlternativesEvent
{
  if (self->_whichEvent_Type == 170)
    return self->_ueiDictationEuclidAlternativesEvent;
  else
    return (SISchemaUEIDictationEuclidAlternativesEvent *)0;
}

- (void)deleteUeiDictationEuclidAlternativesEvent
{
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;

  if (self->_whichEvent_Type == 170)
  {
    self->_whichEvent_Type = 0;
    ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
    self->_ueiDictationEuclidAlternativesEvent = 0;

  }
}

- (void)setUeiDictationEuclidAlternativesEventTier1:(id)a3
{
  SISchemaUEIDictationEuclidAlternativesEventTier1 *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;

  v4 = (SISchemaUEIDictationEuclidAlternativesEventTier1 *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 171;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = v4;

}

- (SISchemaUEIDictationEuclidAlternativesEventTier1)ueiDictationEuclidAlternativesEventTier1
{
  if (self->_whichEvent_Type == 171)
    return self->_ueiDictationEuclidAlternativesEventTier1;
  else
    return (SISchemaUEIDictationEuclidAlternativesEventTier1 *)0;
}

- (void)deleteUeiDictationEuclidAlternativesEventTier1
{
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;

  if (self->_whichEvent_Type == 171)
  {
    self->_whichEvent_Type = 0;
    ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
    self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  }
}

- (void)setUeiDictationEuclidSpeechAlternativesSelected:(id)a3
{
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;
  unint64_t v75;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;

  v4 = (SISchemaUEIDictationEuclidSpeechAlternativesSelected *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  v75 = 172;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = v4;

}

- (SISchemaUEIDictationEuclidSpeechAlternativesSelected)ueiDictationEuclidSpeechAlternativesSelected
{
  if (self->_whichEvent_Type == 172)
    return self->_ueiDictationEuclidSpeechAlternativesSelected;
  else
    return (SISchemaUEIDictationEuclidSpeechAlternativesSelected *)0;
}

- (void)deleteUeiDictationEuclidSpeechAlternativesSelected
{
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;

  if (self->_whichEvent_Type == 172)
  {
    self->_whichEvent_Type = 0;
    ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
    self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  }
}

- (void)setUeiDictationEuclidSpeechAlternativesSelectedTier1:(id)a3
{
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *v4;
  SISchemaAudioFirstBufferRecorded *audioFirstBufferRecorded;
  SISchemaAudioStopRecording *audioStopRecording;
  SISchemaConversationTrace *clientConversationTrace;
  SISchemaDeviceDynamicContext *deviceDynamicContext;
  SISchemaDeviceFixedContext *deviceFixedContext;
  SISchemaDictationContext *dictationContext;
  SISchemaInvocation *invocation;
  SISchemaLocation *location;
  SISchemaPunchOut *punchOut;
  SISchemaSiriCue *siriCue;
  SISchemaUUFRPresented *uufrPresented;
  SISchemaSpeechTranscription *speechTranscription;
  SISchemaTextToSpeechBegin *textToSpeechBegin;
  SISchemaTextToSpeechEnd *textToSpeechEnd;
  SISchemaUIStateTransition *uiStateTransition;
  SISchemaClientFlow *clientFlow;
  SISchemaDialogOutput *dialogOutput;
  SISchemaDictationEndPointStop *dictationEndPointStop;
  SISchemaDictationEndPointCancel *dictationEndPointCancel;
  SISchemaDictationAlternativeSelected *dictationAlternativeSelected;
  SISchemaDictationTranscriptionMetadata *dictationTranscriptionMetadata;
  SISchemaCarPlayHeadUnitContext *carPlayHeadUnitContext;
  SISchemaUUFRCompletion *uufrCompletion;
  SISchemaUUFRShown *uufrShown;
  SISchemaUUFRSaid *uufrSaid;
  SISchemaUUFRFatalError *uufrFatalError;
  SISchemaDictationAlternativesViewed *dictationAlternativesViewed;
  SISchemaIntercomMessageRecorded *intercomMessageRecorded;
  SISchemaCasinoRelationship *casinoRelationship;
  SISchemaUserViewRegionInteraction *userViewRegionInteraction;
  SISchemaDeviceLockStateChanged *deviceLockStateChanged;
  SISchemaUEIRequestCategorization *ueiRequestCategorization;
  SISchemaAudioStopRecordingStarted *audioStopRecordingStarted;
  SISchemaUEILaunchContext *ueiLaunchContext;
  SISchemaUEIUserSpeakingContext *ueiUserSpeakingContext;
  SISchemaUEIUUFRReady *ueiUUFRReady;
  SISchemaUEIUIRenderingContext *ueiUIRenderingContext;
  SISchemaPNRTextToSpeechRequestReceived *pnrTextToSpeechRequestReceived;
  SISchemaPNRSpeechRecognitionSourceContext *pnrSpeechRecognitionSourceContext;
  SISchemaPNRFatalError *pnrFatalError;
  SISchemaTurnMTERequest *turnMTERequest;
  SISchemaKeyboardDismissed *keyboardDismissed;
  SISchemaEngagedAccessoryContext *engagedAccessoryContext;
  SISchemaAnnounceCarPlayBannerTapped *announceCarPlayBannerTapped;
  SISchemaAnnounceCarPlayGlyphSettingToggled *announceCarPlayGlyphSettingToggled;
  SISchemaDictationContentEdited *dictationContentEdited;
  SISchemaUUFRShownTier1 *uufrShownTier1;
  SISchemaUEIDictationPartialResultUpdated *ueiDictationPartialResultUpdated;
  SISchemaUEIDictationVoiceCommandExecuted *ueiDictationVoiceCommandExecuted;
  SISchemaUEIDictationInputModeSwitchContext *ueiDictationInputModeSwitchContext;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *ueiDictationToolTipDisplayContext;
  SISchemaUEIHostingPlatformViewAppearContext *hostPlatformViewAppearContext;
  SISchemaUEIHostingPlatformViewDisappearContext *hostPlatformViewDisappearContext;
  SISchemaUEIDictationTranscriptionTokenized *ueiDictationTranscriptionTokenized;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *dictationAlternativesSelected;
  SISchemaUUFRSelected *uufrSelected;
  SISchemaUEIDictationAlternativeTextPairsSelected *ueiDictationAlternativeTextPairsSelected;
  SISchemaUEIUserBargeInDetected *ueiUserBargeInDetected;
  SISchemaUEIDictationEnablementPromptShown *ueiDictationEnablementPromptShown;
  SISchemaUEISiriCarCommandContext *ueiSiriCarCommandContext;
  SISchemaUEIVisionSnippetDismissed *ueiVisionSnippetDismissed;
  SISchemaUEISiriWasUnavailable *ueiSiriWasUnavailable;
  SISchemaBluetoothCarPreferredAudioRouteChanged *preferredAudioRouteChanged;
  SISchemaUEIDictationContentEditedTier1 *ueiDictationContentEditedTier1;
  SISchemaUEIDictationVoiceCommandUndoTapAction *ueiDictationVoiceCommandUndoTapAction;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *ueiDictationVoiceCommandDisambiguationAction;
  SISchemaUEIDictationVoiceCommandKeyboardAction *ueiDictationVoiceCommandKeyboardAction;
  SISchemaUEIDictationEuclidAlternativesEvent *ueiDictationEuclidAlternativesEvent;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *ueiDictationEuclidAlternativesEventTier1;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *ueiDictationEuclidSpeechAlternativesSelected;
  unint64_t v75;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;

  v4 = (SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *)a3;
  audioFirstBufferRecorded = self->_audioFirstBufferRecorded;
  self->_audioFirstBufferRecorded = 0;

  audioStopRecording = self->_audioStopRecording;
  self->_audioStopRecording = 0;

  clientConversationTrace = self->_clientConversationTrace;
  self->_clientConversationTrace = 0;

  deviceDynamicContext = self->_deviceDynamicContext;
  self->_deviceDynamicContext = 0;

  deviceFixedContext = self->_deviceFixedContext;
  self->_deviceFixedContext = 0;

  dictationContext = self->_dictationContext;
  self->_dictationContext = 0;

  invocation = self->_invocation;
  self->_invocation = 0;

  location = self->_location;
  self->_location = 0;

  punchOut = self->_punchOut;
  self->_punchOut = 0;

  siriCue = self->_siriCue;
  self->_siriCue = 0;

  uufrPresented = self->_uufrPresented;
  self->_uufrPresented = 0;

  speechTranscription = self->_speechTranscription;
  self->_speechTranscription = 0;

  textToSpeechBegin = self->_textToSpeechBegin;
  self->_textToSpeechBegin = 0;

  textToSpeechEnd = self->_textToSpeechEnd;
  self->_textToSpeechEnd = 0;

  uiStateTransition = self->_uiStateTransition;
  self->_uiStateTransition = 0;

  clientFlow = self->_clientFlow;
  self->_clientFlow = 0;

  dialogOutput = self->_dialogOutput;
  self->_dialogOutput = 0;

  dictationEndPointStop = self->_dictationEndPointStop;
  self->_dictationEndPointStop = 0;

  dictationEndPointCancel = self->_dictationEndPointCancel;
  self->_dictationEndPointCancel = 0;

  dictationAlternativeSelected = self->_dictationAlternativeSelected;
  self->_dictationAlternativeSelected = 0;

  dictationTranscriptionMetadata = self->_dictationTranscriptionMetadata;
  self->_dictationTranscriptionMetadata = 0;

  carPlayHeadUnitContext = self->_carPlayHeadUnitContext;
  self->_carPlayHeadUnitContext = 0;

  uufrCompletion = self->_uufrCompletion;
  self->_uufrCompletion = 0;

  uufrShown = self->_uufrShown;
  self->_uufrShown = 0;

  uufrSaid = self->_uufrSaid;
  self->_uufrSaid = 0;

  uufrFatalError = self->_uufrFatalError;
  self->_uufrFatalError = 0;

  dictationAlternativesViewed = self->_dictationAlternativesViewed;
  self->_dictationAlternativesViewed = 0;

  intercomMessageRecorded = self->_intercomMessageRecorded;
  self->_intercomMessageRecorded = 0;

  casinoRelationship = self->_casinoRelationship;
  self->_casinoRelationship = 0;

  userViewRegionInteraction = self->_userViewRegionInteraction;
  self->_userViewRegionInteraction = 0;

  deviceLockStateChanged = self->_deviceLockStateChanged;
  self->_deviceLockStateChanged = 0;

  ueiRequestCategorization = self->_ueiRequestCategorization;
  self->_ueiRequestCategorization = 0;

  audioStopRecordingStarted = self->_audioStopRecordingStarted;
  self->_audioStopRecordingStarted = 0;

  ueiLaunchContext = self->_ueiLaunchContext;
  self->_ueiLaunchContext = 0;

  ueiUserSpeakingContext = self->_ueiUserSpeakingContext;
  self->_ueiUserSpeakingContext = 0;

  ueiUUFRReady = self->_ueiUUFRReady;
  self->_ueiUUFRReady = 0;

  ueiUIRenderingContext = self->_ueiUIRenderingContext;
  self->_ueiUIRenderingContext = 0;

  pnrTextToSpeechRequestReceived = self->_pnrTextToSpeechRequestReceived;
  self->_pnrTextToSpeechRequestReceived = 0;

  pnrSpeechRecognitionSourceContext = self->_pnrSpeechRecognitionSourceContext;
  self->_pnrSpeechRecognitionSourceContext = 0;

  pnrFatalError = self->_pnrFatalError;
  self->_pnrFatalError = 0;

  turnMTERequest = self->_turnMTERequest;
  self->_turnMTERequest = 0;

  keyboardDismissed = self->_keyboardDismissed;
  self->_keyboardDismissed = 0;

  engagedAccessoryContext = self->_engagedAccessoryContext;
  self->_engagedAccessoryContext = 0;

  announceCarPlayBannerTapped = self->_announceCarPlayBannerTapped;
  self->_announceCarPlayBannerTapped = 0;

  announceCarPlayGlyphSettingToggled = self->_announceCarPlayGlyphSettingToggled;
  self->_announceCarPlayGlyphSettingToggled = 0;

  dictationContentEdited = self->_dictationContentEdited;
  self->_dictationContentEdited = 0;

  uufrShownTier1 = self->_uufrShownTier1;
  self->_uufrShownTier1 = 0;

  ueiDictationPartialResultUpdated = self->_ueiDictationPartialResultUpdated;
  self->_ueiDictationPartialResultUpdated = 0;

  ueiDictationVoiceCommandExecuted = self->_ueiDictationVoiceCommandExecuted;
  self->_ueiDictationVoiceCommandExecuted = 0;

  ueiDictationInputModeSwitchContext = self->_ueiDictationInputModeSwitchContext;
  self->_ueiDictationInputModeSwitchContext = 0;

  ueiDictationToolTipDisplayContext = self->_ueiDictationToolTipDisplayContext;
  self->_ueiDictationToolTipDisplayContext = 0;

  hostPlatformViewAppearContext = self->_hostPlatformViewAppearContext;
  self->_hostPlatformViewAppearContext = 0;

  hostPlatformViewDisappearContext = self->_hostPlatformViewDisappearContext;
  self->_hostPlatformViewDisappearContext = 0;

  ueiDictationTranscriptionTokenized = self->_ueiDictationTranscriptionTokenized;
  self->_ueiDictationTranscriptionTokenized = 0;

  dictationAlternativesSelected = self->_dictationAlternativesSelected;
  self->_dictationAlternativesSelected = 0;

  uufrSelected = self->_uufrSelected;
  self->_uufrSelected = 0;

  ueiDictationAlternativeTextPairsSelected = self->_ueiDictationAlternativeTextPairsSelected;
  self->_ueiDictationAlternativeTextPairsSelected = 0;

  ueiUserBargeInDetected = self->_ueiUserBargeInDetected;
  self->_ueiUserBargeInDetected = 0;

  ueiDictationEnablementPromptShown = self->_ueiDictationEnablementPromptShown;
  self->_ueiDictationEnablementPromptShown = 0;

  ueiSiriCarCommandContext = self->_ueiSiriCarCommandContext;
  self->_ueiSiriCarCommandContext = 0;

  ueiVisionSnippetDismissed = self->_ueiVisionSnippetDismissed;
  self->_ueiVisionSnippetDismissed = 0;

  ueiSiriWasUnavailable = self->_ueiSiriWasUnavailable;
  self->_ueiSiriWasUnavailable = 0;

  preferredAudioRouteChanged = self->_preferredAudioRouteChanged;
  self->_preferredAudioRouteChanged = 0;

  ueiDictationContentEditedTier1 = self->_ueiDictationContentEditedTier1;
  self->_ueiDictationContentEditedTier1 = 0;

  ueiDictationVoiceCommandUndoTapAction = self->_ueiDictationVoiceCommandUndoTapAction;
  self->_ueiDictationVoiceCommandUndoTapAction = 0;

  ueiDictationVoiceCommandDisambiguationAction = self->_ueiDictationVoiceCommandDisambiguationAction;
  self->_ueiDictationVoiceCommandDisambiguationAction = 0;

  ueiDictationVoiceCommandKeyboardAction = self->_ueiDictationVoiceCommandKeyboardAction;
  self->_ueiDictationVoiceCommandKeyboardAction = 0;

  ueiDictationEuclidAlternativesEvent = self->_ueiDictationEuclidAlternativesEvent;
  self->_ueiDictationEuclidAlternativesEvent = 0;

  ueiDictationEuclidAlternativesEventTier1 = self->_ueiDictationEuclidAlternativesEventTier1;
  self->_ueiDictationEuclidAlternativesEventTier1 = 0;

  ueiDictationEuclidSpeechAlternativesSelected = self->_ueiDictationEuclidSpeechAlternativesSelected;
  self->_ueiDictationEuclidSpeechAlternativesSelected = 0;

  v75 = 173;
  if (!v4)
    v75 = 0;
  self->_whichEvent_Type = v75;
  ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = v4;

}

- (SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1)ueiDictationEuclidSpeechAlternativesSelectedTier1
{
  if (self->_whichEvent_Type == 173)
    return self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
  else
    return (SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *)0;
}

- (void)deleteUeiDictationEuclidSpeechAlternativesSelectedTier1
{
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *ueiDictationEuclidSpeechAlternativesSelectedTier1;

  if (self->_whichEvent_Type == 173)
  {
    self->_whichEvent_Type = 0;
    ueiDictationEuclidSpeechAlternativesSelectedTier1 = self->_ueiDictationEuclidSpeechAlternativesSelectedTier1;
    self->_ueiDictationEuclidSpeechAlternativesSelectedTier1 = 0;

  }
}

- (BOOL)readFrom:(id)a3
{
  return SISchemaClientEventReadFrom(self, (uint64_t)a3);
}

- (void)writeTo:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  id v150;

  v150 = a3;
  -[SISchemaClientEvent eventMetadata](self, "eventMetadata");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    -[SISchemaClientEvent eventMetadata](self, "eventMetadata");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent transportMetadata](self, "transportMetadata");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    -[SISchemaClientEvent transportMetadata](self, "transportMetadata");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent audioFirstBufferRecorded](self, "audioFirstBufferRecorded");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    -[SISchemaClientEvent audioFirstBufferRecorded](self, "audioFirstBufferRecorded");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent audioStopRecording](self, "audioStopRecording");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    -[SISchemaClientEvent audioStopRecording](self, "audioStopRecording");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent clientConversationTrace](self, "clientConversationTrace");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
  {
    -[SISchemaClientEvent clientConversationTrace](self, "clientConversationTrace");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent deviceDynamicContext](self, "deviceDynamicContext");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    -[SISchemaClientEvent deviceDynamicContext](self, "deviceDynamicContext");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent deviceFixedContext](self, "deviceFixedContext");
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16)
  {
    -[SISchemaClientEvent deviceFixedContext](self, "deviceFixedContext");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent dictationContext](self, "dictationContext");
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  if (v18)
  {
    -[SISchemaClientEvent dictationContext](self, "dictationContext");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent invocation](self, "invocation");
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  if (v20)
  {
    -[SISchemaClientEvent invocation](self, "invocation");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent location](self, "location");
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  if (v22)
  {
    -[SISchemaClientEvent location](self, "location");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent punchOut](self, "punchOut");
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  if (v24)
  {
    -[SISchemaClientEvent punchOut](self, "punchOut");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent siriCue](self, "siriCue");
  v26 = (void *)objc_claimAutoreleasedReturnValue();

  if (v26)
  {
    -[SISchemaClientEvent siriCue](self, "siriCue");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent uufrPresented](self, "uufrPresented");
  v28 = (void *)objc_claimAutoreleasedReturnValue();

  if (v28)
  {
    -[SISchemaClientEvent uufrPresented](self, "uufrPresented");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent speechTranscription](self, "speechTranscription");
  v30 = (void *)objc_claimAutoreleasedReturnValue();

  if (v30)
  {
    -[SISchemaClientEvent speechTranscription](self, "speechTranscription");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent textToSpeechBegin](self, "textToSpeechBegin");
  v32 = (void *)objc_claimAutoreleasedReturnValue();

  if (v32)
  {
    -[SISchemaClientEvent textToSpeechBegin](self, "textToSpeechBegin");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent textToSpeechEnd](self, "textToSpeechEnd");
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  if (v34)
  {
    -[SISchemaClientEvent textToSpeechEnd](self, "textToSpeechEnd");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent uiStateTransition](self, "uiStateTransition");
  v36 = (void *)objc_claimAutoreleasedReturnValue();

  if (v36)
  {
    -[SISchemaClientEvent uiStateTransition](self, "uiStateTransition");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent clientFlow](self, "clientFlow");
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  if (v38)
  {
    -[SISchemaClientEvent clientFlow](self, "clientFlow");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent dialogOutput](self, "dialogOutput");
  v40 = (void *)objc_claimAutoreleasedReturnValue();

  if (v40)
  {
    -[SISchemaClientEvent dialogOutput](self, "dialogOutput");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent dictationEndPointStop](self, "dictationEndPointStop");
  v42 = (void *)objc_claimAutoreleasedReturnValue();

  if (v42)
  {
    -[SISchemaClientEvent dictationEndPointStop](self, "dictationEndPointStop");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent dictationEndPointCancel](self, "dictationEndPointCancel");
  v44 = (void *)objc_claimAutoreleasedReturnValue();

  if (v44)
  {
    -[SISchemaClientEvent dictationEndPointCancel](self, "dictationEndPointCancel");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent dictationAlternativeSelected](self, "dictationAlternativeSelected");
  v46 = (void *)objc_claimAutoreleasedReturnValue();

  if (v46)
  {
    -[SISchemaClientEvent dictationAlternativeSelected](self, "dictationAlternativeSelected");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent dictationTranscriptionMetadata](self, "dictationTranscriptionMetadata");
  v48 = (void *)objc_claimAutoreleasedReturnValue();

  if (v48)
  {
    -[SISchemaClientEvent dictationTranscriptionMetadata](self, "dictationTranscriptionMetadata");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent carPlayHeadUnitContext](self, "carPlayHeadUnitContext");
  v50 = (void *)objc_claimAutoreleasedReturnValue();

  if (v50)
  {
    -[SISchemaClientEvent carPlayHeadUnitContext](self, "carPlayHeadUnitContext");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent uufrCompletion](self, "uufrCompletion");
  v52 = (void *)objc_claimAutoreleasedReturnValue();

  if (v52)
  {
    -[SISchemaClientEvent uufrCompletion](self, "uufrCompletion");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent uufrShown](self, "uufrShown");
  v54 = (void *)objc_claimAutoreleasedReturnValue();

  if (v54)
  {
    -[SISchemaClientEvent uufrShown](self, "uufrShown");
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent uufrSaid](self, "uufrSaid");
  v56 = (void *)objc_claimAutoreleasedReturnValue();

  if (v56)
  {
    -[SISchemaClientEvent uufrSaid](self, "uufrSaid");
    v57 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent uufrFatalError](self, "uufrFatalError");
  v58 = (void *)objc_claimAutoreleasedReturnValue();

  if (v58)
  {
    -[SISchemaClientEvent uufrFatalError](self, "uufrFatalError");
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent dictationAlternativesViewed](self, "dictationAlternativesViewed");
  v60 = (void *)objc_claimAutoreleasedReturnValue();

  if (v60)
  {
    -[SISchemaClientEvent dictationAlternativesViewed](self, "dictationAlternativesViewed");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent intercomMessageRecorded](self, "intercomMessageRecorded");
  v62 = (void *)objc_claimAutoreleasedReturnValue();

  if (v62)
  {
    -[SISchemaClientEvent intercomMessageRecorded](self, "intercomMessageRecorded");
    v63 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent casinoRelationship](self, "casinoRelationship");
  v64 = (void *)objc_claimAutoreleasedReturnValue();

  if (v64)
  {
    -[SISchemaClientEvent casinoRelationship](self, "casinoRelationship");
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent userViewRegionInteraction](self, "userViewRegionInteraction");
  v66 = (void *)objc_claimAutoreleasedReturnValue();

  if (v66)
  {
    -[SISchemaClientEvent userViewRegionInteraction](self, "userViewRegionInteraction");
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent deviceLockStateChanged](self, "deviceLockStateChanged");
  v68 = (void *)objc_claimAutoreleasedReturnValue();

  if (v68)
  {
    -[SISchemaClientEvent deviceLockStateChanged](self, "deviceLockStateChanged");
    v69 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiRequestCategorization](self, "ueiRequestCategorization");
  v70 = (void *)objc_claimAutoreleasedReturnValue();

  if (v70)
  {
    -[SISchemaClientEvent ueiRequestCategorization](self, "ueiRequestCategorization");
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent audioStopRecordingStarted](self, "audioStopRecordingStarted");
  v72 = (void *)objc_claimAutoreleasedReturnValue();

  if (v72)
  {
    -[SISchemaClientEvent audioStopRecordingStarted](self, "audioStopRecordingStarted");
    v73 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiLaunchContext](self, "ueiLaunchContext");
  v74 = (void *)objc_claimAutoreleasedReturnValue();

  if (v74)
  {
    -[SISchemaClientEvent ueiLaunchContext](self, "ueiLaunchContext");
    v75 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiUserSpeakingContext](self, "ueiUserSpeakingContext");
  v76 = (void *)objc_claimAutoreleasedReturnValue();

  if (v76)
  {
    -[SISchemaClientEvent ueiUserSpeakingContext](self, "ueiUserSpeakingContext");
    v77 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiUUFRReady](self, "ueiUUFRReady");
  v78 = (void *)objc_claimAutoreleasedReturnValue();

  if (v78)
  {
    -[SISchemaClientEvent ueiUUFRReady](self, "ueiUUFRReady");
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiUIRenderingContext](self, "ueiUIRenderingContext");
  v80 = (void *)objc_claimAutoreleasedReturnValue();

  if (v80)
  {
    -[SISchemaClientEvent ueiUIRenderingContext](self, "ueiUIRenderingContext");
    v81 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent pnrTextToSpeechRequestReceived](self, "pnrTextToSpeechRequestReceived");
  v82 = (void *)objc_claimAutoreleasedReturnValue();

  if (v82)
  {
    -[SISchemaClientEvent pnrTextToSpeechRequestReceived](self, "pnrTextToSpeechRequestReceived");
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent pnrSpeechRecognitionSourceContext](self, "pnrSpeechRecognitionSourceContext");
  v84 = (void *)objc_claimAutoreleasedReturnValue();

  if (v84)
  {
    -[SISchemaClientEvent pnrSpeechRecognitionSourceContext](self, "pnrSpeechRecognitionSourceContext");
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent pnrFatalError](self, "pnrFatalError");
  v86 = (void *)objc_claimAutoreleasedReturnValue();

  if (v86)
  {
    -[SISchemaClientEvent pnrFatalError](self, "pnrFatalError");
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent turnMTERequest](self, "turnMTERequest");
  v88 = (void *)objc_claimAutoreleasedReturnValue();

  if (v88)
  {
    -[SISchemaClientEvent turnMTERequest](self, "turnMTERequest");
    v89 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent keyboardDismissed](self, "keyboardDismissed");
  v90 = (void *)objc_claimAutoreleasedReturnValue();

  if (v90)
  {
    -[SISchemaClientEvent keyboardDismissed](self, "keyboardDismissed");
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent engagedAccessoryContext](self, "engagedAccessoryContext");
  v92 = (void *)objc_claimAutoreleasedReturnValue();

  if (v92)
  {
    -[SISchemaClientEvent engagedAccessoryContext](self, "engagedAccessoryContext");
    v93 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent announceCarPlayBannerTapped](self, "announceCarPlayBannerTapped");
  v94 = (void *)objc_claimAutoreleasedReturnValue();

  if (v94)
  {
    -[SISchemaClientEvent announceCarPlayBannerTapped](self, "announceCarPlayBannerTapped");
    v95 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent announceCarPlayGlyphSettingToggled](self, "announceCarPlayGlyphSettingToggled");
  v96 = (void *)objc_claimAutoreleasedReturnValue();

  if (v96)
  {
    -[SISchemaClientEvent announceCarPlayGlyphSettingToggled](self, "announceCarPlayGlyphSettingToggled");
    v97 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent dictationContentEdited](self, "dictationContentEdited");
  v98 = (void *)objc_claimAutoreleasedReturnValue();

  if (v98)
  {
    -[SISchemaClientEvent dictationContentEdited](self, "dictationContentEdited");
    v99 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent uufrShownTier1](self, "uufrShownTier1");
  v100 = (void *)objc_claimAutoreleasedReturnValue();

  if (v100)
  {
    -[SISchemaClientEvent uufrShownTier1](self, "uufrShownTier1");
    v101 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationPartialResultUpdated](self, "ueiDictationPartialResultUpdated");
  v102 = (void *)objc_claimAutoreleasedReturnValue();

  if (v102)
  {
    -[SISchemaClientEvent ueiDictationPartialResultUpdated](self, "ueiDictationPartialResultUpdated");
    v103 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationVoiceCommandExecuted](self, "ueiDictationVoiceCommandExecuted");
  v104 = (void *)objc_claimAutoreleasedReturnValue();

  if (v104)
  {
    -[SISchemaClientEvent ueiDictationVoiceCommandExecuted](self, "ueiDictationVoiceCommandExecuted");
    v105 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationInputModeSwitchContext](self, "ueiDictationInputModeSwitchContext");
  v106 = (void *)objc_claimAutoreleasedReturnValue();

  if (v106)
  {
    -[SISchemaClientEvent ueiDictationInputModeSwitchContext](self, "ueiDictationInputModeSwitchContext");
    v107 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationToolTipDisplayContext](self, "ueiDictationToolTipDisplayContext");
  v108 = (void *)objc_claimAutoreleasedReturnValue();

  if (v108)
  {
    -[SISchemaClientEvent ueiDictationToolTipDisplayContext](self, "ueiDictationToolTipDisplayContext");
    v109 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent hostPlatformViewAppearContext](self, "hostPlatformViewAppearContext");
  v110 = (void *)objc_claimAutoreleasedReturnValue();

  if (v110)
  {
    -[SISchemaClientEvent hostPlatformViewAppearContext](self, "hostPlatformViewAppearContext");
    v111 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent hostPlatformViewDisappearContext](self, "hostPlatformViewDisappearContext");
  v112 = (void *)objc_claimAutoreleasedReturnValue();

  if (v112)
  {
    -[SISchemaClientEvent hostPlatformViewDisappearContext](self, "hostPlatformViewDisappearContext");
    v113 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationTranscriptionTokenized](self, "ueiDictationTranscriptionTokenized");
  v114 = (void *)objc_claimAutoreleasedReturnValue();

  if (v114)
  {
    -[SISchemaClientEvent ueiDictationTranscriptionTokenized](self, "ueiDictationTranscriptionTokenized");
    v115 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent dictationAlternativesSelected](self, "dictationAlternativesSelected");
  v116 = (void *)objc_claimAutoreleasedReturnValue();

  if (v116)
  {
    -[SISchemaClientEvent dictationAlternativesSelected](self, "dictationAlternativesSelected");
    v117 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent uufrSelected](self, "uufrSelected");
  v118 = (void *)objc_claimAutoreleasedReturnValue();

  if (v118)
  {
    -[SISchemaClientEvent uufrSelected](self, "uufrSelected");
    v119 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationAlternativeTextPairsSelected](self, "ueiDictationAlternativeTextPairsSelected");
  v120 = (void *)objc_claimAutoreleasedReturnValue();

  if (v120)
  {
    -[SISchemaClientEvent ueiDictationAlternativeTextPairsSelected](self, "ueiDictationAlternativeTextPairsSelected");
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiUserBargeInDetected](self, "ueiUserBargeInDetected");
  v122 = (void *)objc_claimAutoreleasedReturnValue();

  if (v122)
  {
    -[SISchemaClientEvent ueiUserBargeInDetected](self, "ueiUserBargeInDetected");
    v123 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationEnablementPromptShown](self, "ueiDictationEnablementPromptShown");
  v124 = (void *)objc_claimAutoreleasedReturnValue();

  if (v124)
  {
    -[SISchemaClientEvent ueiDictationEnablementPromptShown](self, "ueiDictationEnablementPromptShown");
    v125 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiSiriCarCommandContext](self, "ueiSiriCarCommandContext");
  v126 = (void *)objc_claimAutoreleasedReturnValue();

  if (v126)
  {
    -[SISchemaClientEvent ueiSiriCarCommandContext](self, "ueiSiriCarCommandContext");
    v127 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiVisionSnippetDismissed](self, "ueiVisionSnippetDismissed");
  v128 = (void *)objc_claimAutoreleasedReturnValue();

  if (v128)
  {
    -[SISchemaClientEvent ueiVisionSnippetDismissed](self, "ueiVisionSnippetDismissed");
    v129 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiSiriWasUnavailable](self, "ueiSiriWasUnavailable");
  v130 = (void *)objc_claimAutoreleasedReturnValue();

  if (v130)
  {
    -[SISchemaClientEvent ueiSiriWasUnavailable](self, "ueiSiriWasUnavailable");
    v131 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent preferredAudioRouteChanged](self, "preferredAudioRouteChanged");
  v132 = (void *)objc_claimAutoreleasedReturnValue();

  if (v132)
  {
    -[SISchemaClientEvent preferredAudioRouteChanged](self, "preferredAudioRouteChanged");
    v133 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationContentEditedTier1](self, "ueiDictationContentEditedTier1");
  v134 = (void *)objc_claimAutoreleasedReturnValue();

  if (v134)
  {
    -[SISchemaClientEvent ueiDictationContentEditedTier1](self, "ueiDictationContentEditedTier1");
    v135 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationVoiceCommandUndoTapAction](self, "ueiDictationVoiceCommandUndoTapAction");
  v136 = (void *)objc_claimAutoreleasedReturnValue();

  if (v136)
  {
    -[SISchemaClientEvent ueiDictationVoiceCommandUndoTapAction](self, "ueiDictationVoiceCommandUndoTapAction");
    v137 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationVoiceCommandDisambiguationAction](self, "ueiDictationVoiceCommandDisambiguationAction");
  v138 = (void *)objc_claimAutoreleasedReturnValue();

  if (v138)
  {
    -[SISchemaClientEvent ueiDictationVoiceCommandDisambiguationAction](self, "ueiDictationVoiceCommandDisambiguationAction");
    v139 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationVoiceCommandKeyboardAction](self, "ueiDictationVoiceCommandKeyboardAction");
  v140 = (void *)objc_claimAutoreleasedReturnValue();

  if (v140)
  {
    -[SISchemaClientEvent ueiDictationVoiceCommandKeyboardAction](self, "ueiDictationVoiceCommandKeyboardAction");
    v141 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationEuclidAlternativesEvent](self, "ueiDictationEuclidAlternativesEvent");
  v142 = (void *)objc_claimAutoreleasedReturnValue();

  if (v142)
  {
    -[SISchemaClientEvent ueiDictationEuclidAlternativesEvent](self, "ueiDictationEuclidAlternativesEvent");
    v143 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationEuclidAlternativesEventTier1](self, "ueiDictationEuclidAlternativesEventTier1");
  v144 = (void *)objc_claimAutoreleasedReturnValue();

  if (v144)
  {
    -[SISchemaClientEvent ueiDictationEuclidAlternativesEventTier1](self, "ueiDictationEuclidAlternativesEventTier1");
    v145 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelected](self, "ueiDictationEuclidSpeechAlternativesSelected");
  v146 = (void *)objc_claimAutoreleasedReturnValue();

  if (v146)
  {
    -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelected](self, "ueiDictationEuclidSpeechAlternativesSelected");
    v147 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
  -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelectedTier1](self, "ueiDictationEuclidSpeechAlternativesSelectedTier1");
  v148 = (void *)objc_claimAutoreleasedReturnValue();

  if (v148)
  {
    -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelectedTier1](self, "ueiDictationEuclidSpeechAlternativesSelectedTier1");
    v149 = (void *)objc_claimAutoreleasedReturnValue();
    PBDataWriterWriteSubmessage();

  }
}

- (BOOL)isEqual:(id)a3
{
  id v4;
  unint64_t whichEvent_Type;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  int v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  int v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  int v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  int v32;
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  int v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  int v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  int v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  int v52;
  uint64_t v53;
  void *v54;
  void *v55;
  void *v56;
  int v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  int v62;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  int v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  int v72;
  uint64_t v73;
  void *v74;
  void *v75;
  void *v76;
  int v77;
  uint64_t v78;
  void *v79;
  void *v80;
  void *v81;
  int v82;
  uint64_t v83;
  void *v84;
  void *v85;
  void *v86;
  int v87;
  uint64_t v88;
  void *v89;
  void *v90;
  void *v91;
  int v92;
  uint64_t v93;
  void *v94;
  void *v95;
  void *v96;
  int v97;
  uint64_t v98;
  void *v99;
  void *v100;
  void *v101;
  int v102;
  uint64_t v103;
  void *v104;
  void *v105;
  void *v106;
  int v107;
  uint64_t v108;
  void *v109;
  void *v110;
  void *v111;
  int v112;
  uint64_t v113;
  void *v114;
  void *v115;
  void *v116;
  int v117;
  uint64_t v118;
  void *v119;
  void *v120;
  void *v121;
  int v122;
  uint64_t v123;
  void *v124;
  void *v125;
  void *v126;
  int v127;
  uint64_t v128;
  void *v129;
  void *v130;
  void *v131;
  int v132;
  uint64_t v133;
  void *v134;
  void *v135;
  void *v136;
  int v137;
  uint64_t v138;
  void *v139;
  void *v140;
  void *v141;
  int v142;
  uint64_t v143;
  void *v144;
  void *v145;
  void *v146;
  int v147;
  uint64_t v148;
  void *v149;
  void *v150;
  void *v151;
  int v152;
  uint64_t v153;
  void *v154;
  void *v155;
  void *v156;
  int v157;
  uint64_t v158;
  void *v159;
  void *v160;
  void *v161;
  int v162;
  uint64_t v163;
  void *v164;
  void *v165;
  void *v166;
  int v167;
  uint64_t v168;
  void *v169;
  void *v170;
  void *v171;
  int v172;
  uint64_t v173;
  void *v174;
  void *v175;
  void *v176;
  int v177;
  uint64_t v178;
  void *v179;
  void *v180;
  void *v181;
  int v182;
  uint64_t v183;
  void *v184;
  void *v185;
  void *v186;
  int v187;
  uint64_t v188;
  void *v189;
  void *v190;
  void *v191;
  int v192;
  uint64_t v193;
  void *v194;
  void *v195;
  void *v196;
  int v197;
  uint64_t v198;
  void *v199;
  void *v200;
  void *v201;
  int v202;
  uint64_t v203;
  void *v204;
  void *v205;
  void *v206;
  int v207;
  uint64_t v208;
  void *v209;
  void *v210;
  void *v211;
  int v212;
  uint64_t v213;
  void *v214;
  void *v215;
  void *v216;
  int v217;
  uint64_t v218;
  void *v219;
  void *v220;
  void *v221;
  int v222;
  uint64_t v223;
  void *v224;
  void *v225;
  void *v226;
  int v227;
  uint64_t v228;
  void *v229;
  void *v230;
  void *v231;
  int v232;
  uint64_t v233;
  void *v234;
  void *v235;
  void *v236;
  int v237;
  uint64_t v238;
  void *v239;
  void *v240;
  void *v241;
  int v242;
  uint64_t v243;
  void *v244;
  void *v245;
  void *v246;
  int v247;
  uint64_t v248;
  void *v249;
  void *v250;
  void *v251;
  int v252;
  uint64_t v253;
  void *v254;
  void *v255;
  void *v256;
  int v257;
  uint64_t v258;
  void *v259;
  void *v260;
  void *v261;
  int v262;
  uint64_t v263;
  void *v264;
  void *v265;
  void *v266;
  int v267;
  uint64_t v268;
  void *v269;
  void *v270;
  void *v271;
  int v272;
  uint64_t v273;
  void *v274;
  void *v275;
  void *v276;
  int v277;
  uint64_t v278;
  void *v279;
  void *v280;
  void *v281;
  int v282;
  uint64_t v283;
  void *v284;
  void *v285;
  void *v286;
  int v287;
  uint64_t v288;
  void *v289;
  void *v290;
  void *v291;
  int v292;
  uint64_t v293;
  void *v294;
  void *v295;
  void *v296;
  int v297;
  uint64_t v298;
  void *v299;
  void *v300;
  void *v301;
  int v302;
  uint64_t v303;
  void *v304;
  void *v305;
  void *v306;
  int v307;
  uint64_t v308;
  void *v309;
  void *v310;
  void *v311;
  int v312;
  uint64_t v313;
  void *v314;
  void *v315;
  void *v316;
  int v317;
  uint64_t v318;
  void *v319;
  void *v320;
  void *v321;
  int v322;
  uint64_t v323;
  void *v324;
  void *v325;
  void *v326;
  int v327;
  uint64_t v328;
  void *v329;
  void *v330;
  void *v331;
  int v332;
  uint64_t v333;
  void *v334;
  void *v335;
  void *v336;
  int v337;
  uint64_t v338;
  void *v339;
  void *v340;
  void *v341;
  int v342;
  uint64_t v343;
  void *v344;
  void *v345;
  void *v346;
  int v347;
  uint64_t v348;
  void *v349;
  void *v350;
  void *v351;
  int v352;
  uint64_t v353;
  void *v354;
  void *v355;
  void *v356;
  int v357;
  uint64_t v358;
  void *v359;
  void *v360;
  void *v361;
  int v362;
  uint64_t v363;
  void *v364;
  void *v365;
  void *v366;
  int v367;
  uint64_t v368;
  void *v369;
  void *v370;
  void *v371;
  char v372;
  BOOL v373;

  v4 = a3;
  if (!objc_msgSend(v4, "isMemberOfClass:", objc_opt_class()))
    goto LABEL_368;
  whichEvent_Type = self->_whichEvent_Type;
  if (whichEvent_Type != objc_msgSend(v4, "whichEvent_Type"))
    goto LABEL_368;
  -[SISchemaClientEvent eventMetadata](self, "eventMetadata");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "eventMetadata");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent eventMetadata](self, "eventMetadata");
  v8 = objc_claimAutoreleasedReturnValue();
  if (v8)
  {
    v9 = (void *)v8;
    -[SISchemaClientEvent eventMetadata](self, "eventMetadata");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "eventMetadata");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v10, "isEqual:", v11);

    if (!v12)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent transportMetadata](self, "transportMetadata");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "transportMetadata");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent transportMetadata](self, "transportMetadata");
  v13 = objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    v14 = (void *)v13;
    -[SISchemaClientEvent transportMetadata](self, "transportMetadata");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "transportMetadata");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v15, "isEqual:", v16);

    if (!v17)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent audioFirstBufferRecorded](self, "audioFirstBufferRecorded");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "audioFirstBufferRecorded");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent audioFirstBufferRecorded](self, "audioFirstBufferRecorded");
  v18 = objc_claimAutoreleasedReturnValue();
  if (v18)
  {
    v19 = (void *)v18;
    -[SISchemaClientEvent audioFirstBufferRecorded](self, "audioFirstBufferRecorded");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "audioFirstBufferRecorded");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v20, "isEqual:", v21);

    if (!v22)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent audioStopRecording](self, "audioStopRecording");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "audioStopRecording");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent audioStopRecording](self, "audioStopRecording");
  v23 = objc_claimAutoreleasedReturnValue();
  if (v23)
  {
    v24 = (void *)v23;
    -[SISchemaClientEvent audioStopRecording](self, "audioStopRecording");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "audioStopRecording");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v25, "isEqual:", v26);

    if (!v27)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent clientConversationTrace](self, "clientConversationTrace");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "clientConversationTrace");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent clientConversationTrace](self, "clientConversationTrace");
  v28 = objc_claimAutoreleasedReturnValue();
  if (v28)
  {
    v29 = (void *)v28;
    -[SISchemaClientEvent clientConversationTrace](self, "clientConversationTrace");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "clientConversationTrace");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = objc_msgSend(v30, "isEqual:", v31);

    if (!v32)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent deviceDynamicContext](self, "deviceDynamicContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "deviceDynamicContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent deviceDynamicContext](self, "deviceDynamicContext");
  v33 = objc_claimAutoreleasedReturnValue();
  if (v33)
  {
    v34 = (void *)v33;
    -[SISchemaClientEvent deviceDynamicContext](self, "deviceDynamicContext");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "deviceDynamicContext");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    v37 = objc_msgSend(v35, "isEqual:", v36);

    if (!v37)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent deviceFixedContext](self, "deviceFixedContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "deviceFixedContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent deviceFixedContext](self, "deviceFixedContext");
  v38 = objc_claimAutoreleasedReturnValue();
  if (v38)
  {
    v39 = (void *)v38;
    -[SISchemaClientEvent deviceFixedContext](self, "deviceFixedContext");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "deviceFixedContext");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = objc_msgSend(v40, "isEqual:", v41);

    if (!v42)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent dictationContext](self, "dictationContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dictationContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent dictationContext](self, "dictationContext");
  v43 = objc_claimAutoreleasedReturnValue();
  if (v43)
  {
    v44 = (void *)v43;
    -[SISchemaClientEvent dictationContext](self, "dictationContext");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dictationContext");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    v47 = objc_msgSend(v45, "isEqual:", v46);

    if (!v47)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent invocation](self, "invocation");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "invocation");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent invocation](self, "invocation");
  v48 = objc_claimAutoreleasedReturnValue();
  if (v48)
  {
    v49 = (void *)v48;
    -[SISchemaClientEvent invocation](self, "invocation");
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "invocation");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    v52 = objc_msgSend(v50, "isEqual:", v51);

    if (!v52)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent location](self, "location");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "location");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent location](self, "location");
  v53 = objc_claimAutoreleasedReturnValue();
  if (v53)
  {
    v54 = (void *)v53;
    -[SISchemaClientEvent location](self, "location");
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "location");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    v57 = objc_msgSend(v55, "isEqual:", v56);

    if (!v57)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent punchOut](self, "punchOut");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "punchOut");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent punchOut](self, "punchOut");
  v58 = objc_claimAutoreleasedReturnValue();
  if (v58)
  {
    v59 = (void *)v58;
    -[SISchemaClientEvent punchOut](self, "punchOut");
    v60 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "punchOut");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    v62 = objc_msgSend(v60, "isEqual:", v61);

    if (!v62)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent siriCue](self, "siriCue");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "siriCue");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent siriCue](self, "siriCue");
  v63 = objc_claimAutoreleasedReturnValue();
  if (v63)
  {
    v64 = (void *)v63;
    -[SISchemaClientEvent siriCue](self, "siriCue");
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "siriCue");
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    v67 = objc_msgSend(v65, "isEqual:", v66);

    if (!v67)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent uufrPresented](self, "uufrPresented");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "uufrPresented");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent uufrPresented](self, "uufrPresented");
  v68 = objc_claimAutoreleasedReturnValue();
  if (v68)
  {
    v69 = (void *)v68;
    -[SISchemaClientEvent uufrPresented](self, "uufrPresented");
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uufrPresented");
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    v72 = objc_msgSend(v70, "isEqual:", v71);

    if (!v72)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent speechTranscription](self, "speechTranscription");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "speechTranscription");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent speechTranscription](self, "speechTranscription");
  v73 = objc_claimAutoreleasedReturnValue();
  if (v73)
  {
    v74 = (void *)v73;
    -[SISchemaClientEvent speechTranscription](self, "speechTranscription");
    v75 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "speechTranscription");
    v76 = (void *)objc_claimAutoreleasedReturnValue();
    v77 = objc_msgSend(v75, "isEqual:", v76);

    if (!v77)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent textToSpeechBegin](self, "textToSpeechBegin");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "textToSpeechBegin");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent textToSpeechBegin](self, "textToSpeechBegin");
  v78 = objc_claimAutoreleasedReturnValue();
  if (v78)
  {
    v79 = (void *)v78;
    -[SISchemaClientEvent textToSpeechBegin](self, "textToSpeechBegin");
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "textToSpeechBegin");
    v81 = (void *)objc_claimAutoreleasedReturnValue();
    v82 = objc_msgSend(v80, "isEqual:", v81);

    if (!v82)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent textToSpeechEnd](self, "textToSpeechEnd");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "textToSpeechEnd");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent textToSpeechEnd](self, "textToSpeechEnd");
  v83 = objc_claimAutoreleasedReturnValue();
  if (v83)
  {
    v84 = (void *)v83;
    -[SISchemaClientEvent textToSpeechEnd](self, "textToSpeechEnd");
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "textToSpeechEnd");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    v87 = objc_msgSend(v85, "isEqual:", v86);

    if (!v87)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent uiStateTransition](self, "uiStateTransition");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "uiStateTransition");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent uiStateTransition](self, "uiStateTransition");
  v88 = objc_claimAutoreleasedReturnValue();
  if (v88)
  {
    v89 = (void *)v88;
    -[SISchemaClientEvent uiStateTransition](self, "uiStateTransition");
    v90 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uiStateTransition");
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    v92 = objc_msgSend(v90, "isEqual:", v91);

    if (!v92)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent clientFlow](self, "clientFlow");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "clientFlow");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent clientFlow](self, "clientFlow");
  v93 = objc_claimAutoreleasedReturnValue();
  if (v93)
  {
    v94 = (void *)v93;
    -[SISchemaClientEvent clientFlow](self, "clientFlow");
    v95 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "clientFlow");
    v96 = (void *)objc_claimAutoreleasedReturnValue();
    v97 = objc_msgSend(v95, "isEqual:", v96);

    if (!v97)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent dialogOutput](self, "dialogOutput");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dialogOutput");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent dialogOutput](self, "dialogOutput");
  v98 = objc_claimAutoreleasedReturnValue();
  if (v98)
  {
    v99 = (void *)v98;
    -[SISchemaClientEvent dialogOutput](self, "dialogOutput");
    v100 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dialogOutput");
    v101 = (void *)objc_claimAutoreleasedReturnValue();
    v102 = objc_msgSend(v100, "isEqual:", v101);

    if (!v102)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent dictationEndPointStop](self, "dictationEndPointStop");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dictationEndPointStop");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent dictationEndPointStop](self, "dictationEndPointStop");
  v103 = objc_claimAutoreleasedReturnValue();
  if (v103)
  {
    v104 = (void *)v103;
    -[SISchemaClientEvent dictationEndPointStop](self, "dictationEndPointStop");
    v105 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dictationEndPointStop");
    v106 = (void *)objc_claimAutoreleasedReturnValue();
    v107 = objc_msgSend(v105, "isEqual:", v106);

    if (!v107)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent dictationEndPointCancel](self, "dictationEndPointCancel");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dictationEndPointCancel");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent dictationEndPointCancel](self, "dictationEndPointCancel");
  v108 = objc_claimAutoreleasedReturnValue();
  if (v108)
  {
    v109 = (void *)v108;
    -[SISchemaClientEvent dictationEndPointCancel](self, "dictationEndPointCancel");
    v110 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dictationEndPointCancel");
    v111 = (void *)objc_claimAutoreleasedReturnValue();
    v112 = objc_msgSend(v110, "isEqual:", v111);

    if (!v112)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent dictationAlternativeSelected](self, "dictationAlternativeSelected");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dictationAlternativeSelected");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent dictationAlternativeSelected](self, "dictationAlternativeSelected");
  v113 = objc_claimAutoreleasedReturnValue();
  if (v113)
  {
    v114 = (void *)v113;
    -[SISchemaClientEvent dictationAlternativeSelected](self, "dictationAlternativeSelected");
    v115 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dictationAlternativeSelected");
    v116 = (void *)objc_claimAutoreleasedReturnValue();
    v117 = objc_msgSend(v115, "isEqual:", v116);

    if (!v117)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent dictationTranscriptionMetadata](self, "dictationTranscriptionMetadata");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dictationTranscriptionMetadata");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent dictationTranscriptionMetadata](self, "dictationTranscriptionMetadata");
  v118 = objc_claimAutoreleasedReturnValue();
  if (v118)
  {
    v119 = (void *)v118;
    -[SISchemaClientEvent dictationTranscriptionMetadata](self, "dictationTranscriptionMetadata");
    v120 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dictationTranscriptionMetadata");
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    v122 = objc_msgSend(v120, "isEqual:", v121);

    if (!v122)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent carPlayHeadUnitContext](self, "carPlayHeadUnitContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "carPlayHeadUnitContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent carPlayHeadUnitContext](self, "carPlayHeadUnitContext");
  v123 = objc_claimAutoreleasedReturnValue();
  if (v123)
  {
    v124 = (void *)v123;
    -[SISchemaClientEvent carPlayHeadUnitContext](self, "carPlayHeadUnitContext");
    v125 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "carPlayHeadUnitContext");
    v126 = (void *)objc_claimAutoreleasedReturnValue();
    v127 = objc_msgSend(v125, "isEqual:", v126);

    if (!v127)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent uufrCompletion](self, "uufrCompletion");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "uufrCompletion");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent uufrCompletion](self, "uufrCompletion");
  v128 = objc_claimAutoreleasedReturnValue();
  if (v128)
  {
    v129 = (void *)v128;
    -[SISchemaClientEvent uufrCompletion](self, "uufrCompletion");
    v130 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uufrCompletion");
    v131 = (void *)objc_claimAutoreleasedReturnValue();
    v132 = objc_msgSend(v130, "isEqual:", v131);

    if (!v132)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent uufrShown](self, "uufrShown");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "uufrShown");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent uufrShown](self, "uufrShown");
  v133 = objc_claimAutoreleasedReturnValue();
  if (v133)
  {
    v134 = (void *)v133;
    -[SISchemaClientEvent uufrShown](self, "uufrShown");
    v135 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uufrShown");
    v136 = (void *)objc_claimAutoreleasedReturnValue();
    v137 = objc_msgSend(v135, "isEqual:", v136);

    if (!v137)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent uufrSaid](self, "uufrSaid");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "uufrSaid");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent uufrSaid](self, "uufrSaid");
  v138 = objc_claimAutoreleasedReturnValue();
  if (v138)
  {
    v139 = (void *)v138;
    -[SISchemaClientEvent uufrSaid](self, "uufrSaid");
    v140 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uufrSaid");
    v141 = (void *)objc_claimAutoreleasedReturnValue();
    v142 = objc_msgSend(v140, "isEqual:", v141);

    if (!v142)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent uufrFatalError](self, "uufrFatalError");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "uufrFatalError");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent uufrFatalError](self, "uufrFatalError");
  v143 = objc_claimAutoreleasedReturnValue();
  if (v143)
  {
    v144 = (void *)v143;
    -[SISchemaClientEvent uufrFatalError](self, "uufrFatalError");
    v145 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uufrFatalError");
    v146 = (void *)objc_claimAutoreleasedReturnValue();
    v147 = objc_msgSend(v145, "isEqual:", v146);

    if (!v147)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent dictationAlternativesViewed](self, "dictationAlternativesViewed");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dictationAlternativesViewed");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent dictationAlternativesViewed](self, "dictationAlternativesViewed");
  v148 = objc_claimAutoreleasedReturnValue();
  if (v148)
  {
    v149 = (void *)v148;
    -[SISchemaClientEvent dictationAlternativesViewed](self, "dictationAlternativesViewed");
    v150 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dictationAlternativesViewed");
    v151 = (void *)objc_claimAutoreleasedReturnValue();
    v152 = objc_msgSend(v150, "isEqual:", v151);

    if (!v152)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent intercomMessageRecorded](self, "intercomMessageRecorded");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "intercomMessageRecorded");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent intercomMessageRecorded](self, "intercomMessageRecorded");
  v153 = objc_claimAutoreleasedReturnValue();
  if (v153)
  {
    v154 = (void *)v153;
    -[SISchemaClientEvent intercomMessageRecorded](self, "intercomMessageRecorded");
    v155 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "intercomMessageRecorded");
    v156 = (void *)objc_claimAutoreleasedReturnValue();
    v157 = objc_msgSend(v155, "isEqual:", v156);

    if (!v157)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent casinoRelationship](self, "casinoRelationship");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "casinoRelationship");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent casinoRelationship](self, "casinoRelationship");
  v158 = objc_claimAutoreleasedReturnValue();
  if (v158)
  {
    v159 = (void *)v158;
    -[SISchemaClientEvent casinoRelationship](self, "casinoRelationship");
    v160 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "casinoRelationship");
    v161 = (void *)objc_claimAutoreleasedReturnValue();
    v162 = objc_msgSend(v160, "isEqual:", v161);

    if (!v162)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent userViewRegionInteraction](self, "userViewRegionInteraction");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "userViewRegionInteraction");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent userViewRegionInteraction](self, "userViewRegionInteraction");
  v163 = objc_claimAutoreleasedReturnValue();
  if (v163)
  {
    v164 = (void *)v163;
    -[SISchemaClientEvent userViewRegionInteraction](self, "userViewRegionInteraction");
    v165 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "userViewRegionInteraction");
    v166 = (void *)objc_claimAutoreleasedReturnValue();
    v167 = objc_msgSend(v165, "isEqual:", v166);

    if (!v167)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent deviceLockStateChanged](self, "deviceLockStateChanged");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "deviceLockStateChanged");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent deviceLockStateChanged](self, "deviceLockStateChanged");
  v168 = objc_claimAutoreleasedReturnValue();
  if (v168)
  {
    v169 = (void *)v168;
    -[SISchemaClientEvent deviceLockStateChanged](self, "deviceLockStateChanged");
    v170 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "deviceLockStateChanged");
    v171 = (void *)objc_claimAutoreleasedReturnValue();
    v172 = objc_msgSend(v170, "isEqual:", v171);

    if (!v172)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiRequestCategorization](self, "ueiRequestCategorization");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiRequestCategorization");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiRequestCategorization](self, "ueiRequestCategorization");
  v173 = objc_claimAutoreleasedReturnValue();
  if (v173)
  {
    v174 = (void *)v173;
    -[SISchemaClientEvent ueiRequestCategorization](self, "ueiRequestCategorization");
    v175 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiRequestCategorization");
    v176 = (void *)objc_claimAutoreleasedReturnValue();
    v177 = objc_msgSend(v175, "isEqual:", v176);

    if (!v177)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent audioStopRecordingStarted](self, "audioStopRecordingStarted");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "audioStopRecordingStarted");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent audioStopRecordingStarted](self, "audioStopRecordingStarted");
  v178 = objc_claimAutoreleasedReturnValue();
  if (v178)
  {
    v179 = (void *)v178;
    -[SISchemaClientEvent audioStopRecordingStarted](self, "audioStopRecordingStarted");
    v180 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "audioStopRecordingStarted");
    v181 = (void *)objc_claimAutoreleasedReturnValue();
    v182 = objc_msgSend(v180, "isEqual:", v181);

    if (!v182)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiLaunchContext](self, "ueiLaunchContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiLaunchContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiLaunchContext](self, "ueiLaunchContext");
  v183 = objc_claimAutoreleasedReturnValue();
  if (v183)
  {
    v184 = (void *)v183;
    -[SISchemaClientEvent ueiLaunchContext](self, "ueiLaunchContext");
    v185 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiLaunchContext");
    v186 = (void *)objc_claimAutoreleasedReturnValue();
    v187 = objc_msgSend(v185, "isEqual:", v186);

    if (!v187)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiUserSpeakingContext](self, "ueiUserSpeakingContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiUserSpeakingContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiUserSpeakingContext](self, "ueiUserSpeakingContext");
  v188 = objc_claimAutoreleasedReturnValue();
  if (v188)
  {
    v189 = (void *)v188;
    -[SISchemaClientEvent ueiUserSpeakingContext](self, "ueiUserSpeakingContext");
    v190 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiUserSpeakingContext");
    v191 = (void *)objc_claimAutoreleasedReturnValue();
    v192 = objc_msgSend(v190, "isEqual:", v191);

    if (!v192)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiUUFRReady](self, "ueiUUFRReady");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiUUFRReady");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiUUFRReady](self, "ueiUUFRReady");
  v193 = objc_claimAutoreleasedReturnValue();
  if (v193)
  {
    v194 = (void *)v193;
    -[SISchemaClientEvent ueiUUFRReady](self, "ueiUUFRReady");
    v195 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiUUFRReady");
    v196 = (void *)objc_claimAutoreleasedReturnValue();
    v197 = objc_msgSend(v195, "isEqual:", v196);

    if (!v197)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiUIRenderingContext](self, "ueiUIRenderingContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiUIRenderingContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiUIRenderingContext](self, "ueiUIRenderingContext");
  v198 = objc_claimAutoreleasedReturnValue();
  if (v198)
  {
    v199 = (void *)v198;
    -[SISchemaClientEvent ueiUIRenderingContext](self, "ueiUIRenderingContext");
    v200 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiUIRenderingContext");
    v201 = (void *)objc_claimAutoreleasedReturnValue();
    v202 = objc_msgSend(v200, "isEqual:", v201);

    if (!v202)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent pnrTextToSpeechRequestReceived](self, "pnrTextToSpeechRequestReceived");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pnrTextToSpeechRequestReceived");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent pnrTextToSpeechRequestReceived](self, "pnrTextToSpeechRequestReceived");
  v203 = objc_claimAutoreleasedReturnValue();
  if (v203)
  {
    v204 = (void *)v203;
    -[SISchemaClientEvent pnrTextToSpeechRequestReceived](self, "pnrTextToSpeechRequestReceived");
    v205 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pnrTextToSpeechRequestReceived");
    v206 = (void *)objc_claimAutoreleasedReturnValue();
    v207 = objc_msgSend(v205, "isEqual:", v206);

    if (!v207)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent pnrSpeechRecognitionSourceContext](self, "pnrSpeechRecognitionSourceContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pnrSpeechRecognitionSourceContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent pnrSpeechRecognitionSourceContext](self, "pnrSpeechRecognitionSourceContext");
  v208 = objc_claimAutoreleasedReturnValue();
  if (v208)
  {
    v209 = (void *)v208;
    -[SISchemaClientEvent pnrSpeechRecognitionSourceContext](self, "pnrSpeechRecognitionSourceContext");
    v210 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pnrSpeechRecognitionSourceContext");
    v211 = (void *)objc_claimAutoreleasedReturnValue();
    v212 = objc_msgSend(v210, "isEqual:", v211);

    if (!v212)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent pnrFatalError](self, "pnrFatalError");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "pnrFatalError");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent pnrFatalError](self, "pnrFatalError");
  v213 = objc_claimAutoreleasedReturnValue();
  if (v213)
  {
    v214 = (void *)v213;
    -[SISchemaClientEvent pnrFatalError](self, "pnrFatalError");
    v215 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pnrFatalError");
    v216 = (void *)objc_claimAutoreleasedReturnValue();
    v217 = objc_msgSend(v215, "isEqual:", v216);

    if (!v217)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent turnMTERequest](self, "turnMTERequest");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "turnMTERequest");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent turnMTERequest](self, "turnMTERequest");
  v218 = objc_claimAutoreleasedReturnValue();
  if (v218)
  {
    v219 = (void *)v218;
    -[SISchemaClientEvent turnMTERequest](self, "turnMTERequest");
    v220 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "turnMTERequest");
    v221 = (void *)objc_claimAutoreleasedReturnValue();
    v222 = objc_msgSend(v220, "isEqual:", v221);

    if (!v222)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent keyboardDismissed](self, "keyboardDismissed");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "keyboardDismissed");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent keyboardDismissed](self, "keyboardDismissed");
  v223 = objc_claimAutoreleasedReturnValue();
  if (v223)
  {
    v224 = (void *)v223;
    -[SISchemaClientEvent keyboardDismissed](self, "keyboardDismissed");
    v225 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "keyboardDismissed");
    v226 = (void *)objc_claimAutoreleasedReturnValue();
    v227 = objc_msgSend(v225, "isEqual:", v226);

    if (!v227)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent engagedAccessoryContext](self, "engagedAccessoryContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "engagedAccessoryContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent engagedAccessoryContext](self, "engagedAccessoryContext");
  v228 = objc_claimAutoreleasedReturnValue();
  if (v228)
  {
    v229 = (void *)v228;
    -[SISchemaClientEvent engagedAccessoryContext](self, "engagedAccessoryContext");
    v230 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "engagedAccessoryContext");
    v231 = (void *)objc_claimAutoreleasedReturnValue();
    v232 = objc_msgSend(v230, "isEqual:", v231);

    if (!v232)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent announceCarPlayBannerTapped](self, "announceCarPlayBannerTapped");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "announceCarPlayBannerTapped");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent announceCarPlayBannerTapped](self, "announceCarPlayBannerTapped");
  v233 = objc_claimAutoreleasedReturnValue();
  if (v233)
  {
    v234 = (void *)v233;
    -[SISchemaClientEvent announceCarPlayBannerTapped](self, "announceCarPlayBannerTapped");
    v235 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "announceCarPlayBannerTapped");
    v236 = (void *)objc_claimAutoreleasedReturnValue();
    v237 = objc_msgSend(v235, "isEqual:", v236);

    if (!v237)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent announceCarPlayGlyphSettingToggled](self, "announceCarPlayGlyphSettingToggled");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "announceCarPlayGlyphSettingToggled");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent announceCarPlayGlyphSettingToggled](self, "announceCarPlayGlyphSettingToggled");
  v238 = objc_claimAutoreleasedReturnValue();
  if (v238)
  {
    v239 = (void *)v238;
    -[SISchemaClientEvent announceCarPlayGlyphSettingToggled](self, "announceCarPlayGlyphSettingToggled");
    v240 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "announceCarPlayGlyphSettingToggled");
    v241 = (void *)objc_claimAutoreleasedReturnValue();
    v242 = objc_msgSend(v240, "isEqual:", v241);

    if (!v242)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent dictationContentEdited](self, "dictationContentEdited");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dictationContentEdited");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent dictationContentEdited](self, "dictationContentEdited");
  v243 = objc_claimAutoreleasedReturnValue();
  if (v243)
  {
    v244 = (void *)v243;
    -[SISchemaClientEvent dictationContentEdited](self, "dictationContentEdited");
    v245 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dictationContentEdited");
    v246 = (void *)objc_claimAutoreleasedReturnValue();
    v247 = objc_msgSend(v245, "isEqual:", v246);

    if (!v247)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent uufrShownTier1](self, "uufrShownTier1");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "uufrShownTier1");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent uufrShownTier1](self, "uufrShownTier1");
  v248 = objc_claimAutoreleasedReturnValue();
  if (v248)
  {
    v249 = (void *)v248;
    -[SISchemaClientEvent uufrShownTier1](self, "uufrShownTier1");
    v250 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uufrShownTier1");
    v251 = (void *)objc_claimAutoreleasedReturnValue();
    v252 = objc_msgSend(v250, "isEqual:", v251);

    if (!v252)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationPartialResultUpdated](self, "ueiDictationPartialResultUpdated");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationPartialResultUpdated");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationPartialResultUpdated](self, "ueiDictationPartialResultUpdated");
  v253 = objc_claimAutoreleasedReturnValue();
  if (v253)
  {
    v254 = (void *)v253;
    -[SISchemaClientEvent ueiDictationPartialResultUpdated](self, "ueiDictationPartialResultUpdated");
    v255 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationPartialResultUpdated");
    v256 = (void *)objc_claimAutoreleasedReturnValue();
    v257 = objc_msgSend(v255, "isEqual:", v256);

    if (!v257)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationVoiceCommandExecuted](self, "ueiDictationVoiceCommandExecuted");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationVoiceCommandExecuted");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationVoiceCommandExecuted](self, "ueiDictationVoiceCommandExecuted");
  v258 = objc_claimAutoreleasedReturnValue();
  if (v258)
  {
    v259 = (void *)v258;
    -[SISchemaClientEvent ueiDictationVoiceCommandExecuted](self, "ueiDictationVoiceCommandExecuted");
    v260 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationVoiceCommandExecuted");
    v261 = (void *)objc_claimAutoreleasedReturnValue();
    v262 = objc_msgSend(v260, "isEqual:", v261);

    if (!v262)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationInputModeSwitchContext](self, "ueiDictationInputModeSwitchContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationInputModeSwitchContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationInputModeSwitchContext](self, "ueiDictationInputModeSwitchContext");
  v263 = objc_claimAutoreleasedReturnValue();
  if (v263)
  {
    v264 = (void *)v263;
    -[SISchemaClientEvent ueiDictationInputModeSwitchContext](self, "ueiDictationInputModeSwitchContext");
    v265 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationInputModeSwitchContext");
    v266 = (void *)objc_claimAutoreleasedReturnValue();
    v267 = objc_msgSend(v265, "isEqual:", v266);

    if (!v267)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationToolTipDisplayContext](self, "ueiDictationToolTipDisplayContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationToolTipDisplayContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationToolTipDisplayContext](self, "ueiDictationToolTipDisplayContext");
  v268 = objc_claimAutoreleasedReturnValue();
  if (v268)
  {
    v269 = (void *)v268;
    -[SISchemaClientEvent ueiDictationToolTipDisplayContext](self, "ueiDictationToolTipDisplayContext");
    v270 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationToolTipDisplayContext");
    v271 = (void *)objc_claimAutoreleasedReturnValue();
    v272 = objc_msgSend(v270, "isEqual:", v271);

    if (!v272)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent hostPlatformViewAppearContext](self, "hostPlatformViewAppearContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "hostPlatformViewAppearContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent hostPlatformViewAppearContext](self, "hostPlatformViewAppearContext");
  v273 = objc_claimAutoreleasedReturnValue();
  if (v273)
  {
    v274 = (void *)v273;
    -[SISchemaClientEvent hostPlatformViewAppearContext](self, "hostPlatformViewAppearContext");
    v275 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "hostPlatformViewAppearContext");
    v276 = (void *)objc_claimAutoreleasedReturnValue();
    v277 = objc_msgSend(v275, "isEqual:", v276);

    if (!v277)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent hostPlatformViewDisappearContext](self, "hostPlatformViewDisappearContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "hostPlatformViewDisappearContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent hostPlatformViewDisappearContext](self, "hostPlatformViewDisappearContext");
  v278 = objc_claimAutoreleasedReturnValue();
  if (v278)
  {
    v279 = (void *)v278;
    -[SISchemaClientEvent hostPlatformViewDisappearContext](self, "hostPlatformViewDisappearContext");
    v280 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "hostPlatformViewDisappearContext");
    v281 = (void *)objc_claimAutoreleasedReturnValue();
    v282 = objc_msgSend(v280, "isEqual:", v281);

    if (!v282)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationTranscriptionTokenized](self, "ueiDictationTranscriptionTokenized");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationTranscriptionTokenized");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationTranscriptionTokenized](self, "ueiDictationTranscriptionTokenized");
  v283 = objc_claimAutoreleasedReturnValue();
  if (v283)
  {
    v284 = (void *)v283;
    -[SISchemaClientEvent ueiDictationTranscriptionTokenized](self, "ueiDictationTranscriptionTokenized");
    v285 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationTranscriptionTokenized");
    v286 = (void *)objc_claimAutoreleasedReturnValue();
    v287 = objc_msgSend(v285, "isEqual:", v286);

    if (!v287)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent dictationAlternativesSelected](self, "dictationAlternativesSelected");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dictationAlternativesSelected");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent dictationAlternativesSelected](self, "dictationAlternativesSelected");
  v288 = objc_claimAutoreleasedReturnValue();
  if (v288)
  {
    v289 = (void *)v288;
    -[SISchemaClientEvent dictationAlternativesSelected](self, "dictationAlternativesSelected");
    v290 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dictationAlternativesSelected");
    v291 = (void *)objc_claimAutoreleasedReturnValue();
    v292 = objc_msgSend(v290, "isEqual:", v291);

    if (!v292)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent uufrSelected](self, "uufrSelected");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "uufrSelected");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent uufrSelected](self, "uufrSelected");
  v293 = objc_claimAutoreleasedReturnValue();
  if (v293)
  {
    v294 = (void *)v293;
    -[SISchemaClientEvent uufrSelected](self, "uufrSelected");
    v295 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "uufrSelected");
    v296 = (void *)objc_claimAutoreleasedReturnValue();
    v297 = objc_msgSend(v295, "isEqual:", v296);

    if (!v297)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationAlternativeTextPairsSelected](self, "ueiDictationAlternativeTextPairsSelected");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationAlternativeTextPairsSelected");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationAlternativeTextPairsSelected](self, "ueiDictationAlternativeTextPairsSelected");
  v298 = objc_claimAutoreleasedReturnValue();
  if (v298)
  {
    v299 = (void *)v298;
    -[SISchemaClientEvent ueiDictationAlternativeTextPairsSelected](self, "ueiDictationAlternativeTextPairsSelected");
    v300 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationAlternativeTextPairsSelected");
    v301 = (void *)objc_claimAutoreleasedReturnValue();
    v302 = objc_msgSend(v300, "isEqual:", v301);

    if (!v302)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiUserBargeInDetected](self, "ueiUserBargeInDetected");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiUserBargeInDetected");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiUserBargeInDetected](self, "ueiUserBargeInDetected");
  v303 = objc_claimAutoreleasedReturnValue();
  if (v303)
  {
    v304 = (void *)v303;
    -[SISchemaClientEvent ueiUserBargeInDetected](self, "ueiUserBargeInDetected");
    v305 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiUserBargeInDetected");
    v306 = (void *)objc_claimAutoreleasedReturnValue();
    v307 = objc_msgSend(v305, "isEqual:", v306);

    if (!v307)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationEnablementPromptShown](self, "ueiDictationEnablementPromptShown");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationEnablementPromptShown");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationEnablementPromptShown](self, "ueiDictationEnablementPromptShown");
  v308 = objc_claimAutoreleasedReturnValue();
  if (v308)
  {
    v309 = (void *)v308;
    -[SISchemaClientEvent ueiDictationEnablementPromptShown](self, "ueiDictationEnablementPromptShown");
    v310 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationEnablementPromptShown");
    v311 = (void *)objc_claimAutoreleasedReturnValue();
    v312 = objc_msgSend(v310, "isEqual:", v311);

    if (!v312)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiSiriCarCommandContext](self, "ueiSiriCarCommandContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiSiriCarCommandContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiSiriCarCommandContext](self, "ueiSiriCarCommandContext");
  v313 = objc_claimAutoreleasedReturnValue();
  if (v313)
  {
    v314 = (void *)v313;
    -[SISchemaClientEvent ueiSiriCarCommandContext](self, "ueiSiriCarCommandContext");
    v315 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiSiriCarCommandContext");
    v316 = (void *)objc_claimAutoreleasedReturnValue();
    v317 = objc_msgSend(v315, "isEqual:", v316);

    if (!v317)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiVisionSnippetDismissed](self, "ueiVisionSnippetDismissed");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiVisionSnippetDismissed");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiVisionSnippetDismissed](self, "ueiVisionSnippetDismissed");
  v318 = objc_claimAutoreleasedReturnValue();
  if (v318)
  {
    v319 = (void *)v318;
    -[SISchemaClientEvent ueiVisionSnippetDismissed](self, "ueiVisionSnippetDismissed");
    v320 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiVisionSnippetDismissed");
    v321 = (void *)objc_claimAutoreleasedReturnValue();
    v322 = objc_msgSend(v320, "isEqual:", v321);

    if (!v322)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiSiriWasUnavailable](self, "ueiSiriWasUnavailable");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiSiriWasUnavailable");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiSiriWasUnavailable](self, "ueiSiriWasUnavailable");
  v323 = objc_claimAutoreleasedReturnValue();
  if (v323)
  {
    v324 = (void *)v323;
    -[SISchemaClientEvent ueiSiriWasUnavailable](self, "ueiSiriWasUnavailable");
    v325 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiSiriWasUnavailable");
    v326 = (void *)objc_claimAutoreleasedReturnValue();
    v327 = objc_msgSend(v325, "isEqual:", v326);

    if (!v327)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent preferredAudioRouteChanged](self, "preferredAudioRouteChanged");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "preferredAudioRouteChanged");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent preferredAudioRouteChanged](self, "preferredAudioRouteChanged");
  v328 = objc_claimAutoreleasedReturnValue();
  if (v328)
  {
    v329 = (void *)v328;
    -[SISchemaClientEvent preferredAudioRouteChanged](self, "preferredAudioRouteChanged");
    v330 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "preferredAudioRouteChanged");
    v331 = (void *)objc_claimAutoreleasedReturnValue();
    v332 = objc_msgSend(v330, "isEqual:", v331);

    if (!v332)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationContentEditedTier1](self, "ueiDictationContentEditedTier1");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationContentEditedTier1");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationContentEditedTier1](self, "ueiDictationContentEditedTier1");
  v333 = objc_claimAutoreleasedReturnValue();
  if (v333)
  {
    v334 = (void *)v333;
    -[SISchemaClientEvent ueiDictationContentEditedTier1](self, "ueiDictationContentEditedTier1");
    v335 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationContentEditedTier1");
    v336 = (void *)objc_claimAutoreleasedReturnValue();
    v337 = objc_msgSend(v335, "isEqual:", v336);

    if (!v337)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationVoiceCommandUndoTapAction](self, "ueiDictationVoiceCommandUndoTapAction");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationVoiceCommandUndoTapAction");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationVoiceCommandUndoTapAction](self, "ueiDictationVoiceCommandUndoTapAction");
  v338 = objc_claimAutoreleasedReturnValue();
  if (v338)
  {
    v339 = (void *)v338;
    -[SISchemaClientEvent ueiDictationVoiceCommandUndoTapAction](self, "ueiDictationVoiceCommandUndoTapAction");
    v340 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationVoiceCommandUndoTapAction");
    v341 = (void *)objc_claimAutoreleasedReturnValue();
    v342 = objc_msgSend(v340, "isEqual:", v341);

    if (!v342)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationVoiceCommandDisambiguationAction](self, "ueiDictationVoiceCommandDisambiguationAction");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationVoiceCommandDisambiguationAction");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationVoiceCommandDisambiguationAction](self, "ueiDictationVoiceCommandDisambiguationAction");
  v343 = objc_claimAutoreleasedReturnValue();
  if (v343)
  {
    v344 = (void *)v343;
    -[SISchemaClientEvent ueiDictationVoiceCommandDisambiguationAction](self, "ueiDictationVoiceCommandDisambiguationAction");
    v345 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationVoiceCommandDisambiguationAction");
    v346 = (void *)objc_claimAutoreleasedReturnValue();
    v347 = objc_msgSend(v345, "isEqual:", v346);

    if (!v347)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationVoiceCommandKeyboardAction](self, "ueiDictationVoiceCommandKeyboardAction");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationVoiceCommandKeyboardAction");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationVoiceCommandKeyboardAction](self, "ueiDictationVoiceCommandKeyboardAction");
  v348 = objc_claimAutoreleasedReturnValue();
  if (v348)
  {
    v349 = (void *)v348;
    -[SISchemaClientEvent ueiDictationVoiceCommandKeyboardAction](self, "ueiDictationVoiceCommandKeyboardAction");
    v350 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationVoiceCommandKeyboardAction");
    v351 = (void *)objc_claimAutoreleasedReturnValue();
    v352 = objc_msgSend(v350, "isEqual:", v351);

    if (!v352)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationEuclidAlternativesEvent](self, "ueiDictationEuclidAlternativesEvent");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationEuclidAlternativesEvent");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationEuclidAlternativesEvent](self, "ueiDictationEuclidAlternativesEvent");
  v353 = objc_claimAutoreleasedReturnValue();
  if (v353)
  {
    v354 = (void *)v353;
    -[SISchemaClientEvent ueiDictationEuclidAlternativesEvent](self, "ueiDictationEuclidAlternativesEvent");
    v355 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationEuclidAlternativesEvent");
    v356 = (void *)objc_claimAutoreleasedReturnValue();
    v357 = objc_msgSend(v355, "isEqual:", v356);

    if (!v357)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationEuclidAlternativesEventTier1](self, "ueiDictationEuclidAlternativesEventTier1");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationEuclidAlternativesEventTier1");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationEuclidAlternativesEventTier1](self, "ueiDictationEuclidAlternativesEventTier1");
  v358 = objc_claimAutoreleasedReturnValue();
  if (v358)
  {
    v359 = (void *)v358;
    -[SISchemaClientEvent ueiDictationEuclidAlternativesEventTier1](self, "ueiDictationEuclidAlternativesEventTier1");
    v360 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationEuclidAlternativesEventTier1");
    v361 = (void *)objc_claimAutoreleasedReturnValue();
    v362 = objc_msgSend(v360, "isEqual:", v361);

    if (!v362)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelected](self, "ueiDictationEuclidSpeechAlternativesSelected");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationEuclidSpeechAlternativesSelected");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) == (v7 != 0))
    goto LABEL_367;
  -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelected](self, "ueiDictationEuclidSpeechAlternativesSelected");
  v363 = objc_claimAutoreleasedReturnValue();
  if (v363)
  {
    v364 = (void *)v363;
    -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelected](self, "ueiDictationEuclidSpeechAlternativesSelected");
    v365 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationEuclidSpeechAlternativesSelected");
    v366 = (void *)objc_claimAutoreleasedReturnValue();
    v367 = objc_msgSend(v365, "isEqual:", v366);

    if (!v367)
      goto LABEL_368;
  }
  else
  {

  }
  -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelectedTier1](self, "ueiDictationEuclidSpeechAlternativesSelectedTier1");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "ueiDictationEuclidSpeechAlternativesSelectedTier1");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v6 == 0) != (v7 != 0))
  {
    -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelectedTier1](self, "ueiDictationEuclidSpeechAlternativesSelectedTier1");
    v368 = objc_claimAutoreleasedReturnValue();
    if (!v368)
    {

LABEL_371:
      v373 = 1;
      goto LABEL_369;
    }
    v369 = (void *)v368;
    -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelectedTier1](self, "ueiDictationEuclidSpeechAlternativesSelectedTier1");
    v370 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ueiDictationEuclidSpeechAlternativesSelectedTier1");
    v371 = (void *)objc_claimAutoreleasedReturnValue();
    v372 = objc_msgSend(v370, "isEqual:", v371);

    if ((v372 & 1) != 0)
      goto LABEL_371;
  }
  else
  {
LABEL_367:

  }
LABEL_368:
  v373 = 0;
LABEL_369:

  return v373;
}

- (unint64_t)hash
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;

  v3 = -[SISchemaClientEventMetadata hash](self->_eventMetadata, "hash");
  v4 = -[SISchemaClientTransportEventMetadata hash](self->_transportMetadata, "hash") ^ v3;
  v5 = -[SISchemaAudioFirstBufferRecorded hash](self->_audioFirstBufferRecorded, "hash");
  v6 = v4 ^ v5 ^ -[SISchemaAudioStopRecording hash](self->_audioStopRecording, "hash");
  v7 = -[SISchemaConversationTrace hash](self->_clientConversationTrace, "hash");
  v8 = v7 ^ -[SISchemaDeviceDynamicContext hash](self->_deviceDynamicContext, "hash");
  v9 = v6 ^ v8 ^ -[SISchemaDeviceFixedContext hash](self->_deviceFixedContext, "hash");
  v10 = -[SISchemaDictationContext hash](self->_dictationContext, "hash");
  v11 = v10 ^ -[SISchemaInvocation hash](self->_invocation, "hash");
  v12 = v11 ^ -[SISchemaLocation hash](self->_location, "hash");
  v13 = v9 ^ v12 ^ -[SISchemaPunchOut hash](self->_punchOut, "hash");
  v14 = -[SISchemaSiriCue hash](self->_siriCue, "hash");
  v15 = v14 ^ -[SISchemaUUFRPresented hash](self->_uufrPresented, "hash");
  v16 = v15 ^ -[SISchemaSpeechTranscription hash](self->_speechTranscription, "hash");
  v17 = v16 ^ -[SISchemaTextToSpeechBegin hash](self->_textToSpeechBegin, "hash");
  v18 = v13 ^ v17 ^ -[SISchemaTextToSpeechEnd hash](self->_textToSpeechEnd, "hash");
  v19 = -[SISchemaUIStateTransition hash](self->_uiStateTransition, "hash");
  v20 = v19 ^ -[SISchemaClientFlow hash](self->_clientFlow, "hash");
  v21 = v20 ^ -[SISchemaDialogOutput hash](self->_dialogOutput, "hash");
  v22 = v21 ^ -[SISchemaDictationEndPointStop hash](self->_dictationEndPointStop, "hash");
  v23 = v22 ^ -[SISchemaDictationEndPointCancel hash](self->_dictationEndPointCancel, "hash");
  v24 = v18 ^ v23 ^ -[SISchemaDictationAlternativeSelected hash](self->_dictationAlternativeSelected, "hash");
  v25 = -[SISchemaDictationTranscriptionMetadata hash](self->_dictationTranscriptionMetadata, "hash");
  v26 = v25 ^ -[SISchemaCarPlayHeadUnitContext hash](self->_carPlayHeadUnitContext, "hash");
  v27 = v26 ^ -[SISchemaUUFRCompletion hash](self->_uufrCompletion, "hash");
  v28 = v27 ^ -[SISchemaUUFRShown hash](self->_uufrShown, "hash");
  v29 = v28 ^ -[SISchemaUUFRSaid hash](self->_uufrSaid, "hash");
  v30 = v29 ^ -[SISchemaUUFRFatalError hash](self->_uufrFatalError, "hash");
  v31 = v24 ^ v30 ^ -[SISchemaDictationAlternativesViewed hash](self->_dictationAlternativesViewed, "hash");
  v32 = -[SISchemaIntercomMessageRecorded hash](self->_intercomMessageRecorded, "hash");
  v33 = v32 ^ -[SISchemaCasinoRelationship hash](self->_casinoRelationship, "hash");
  v34 = v33 ^ -[SISchemaUserViewRegionInteraction hash](self->_userViewRegionInteraction, "hash");
  v35 = v34 ^ -[SISchemaDeviceLockStateChanged hash](self->_deviceLockStateChanged, "hash");
  v36 = v35 ^ -[SISchemaUEIRequestCategorization hash](self->_ueiRequestCategorization, "hash");
  v37 = v36 ^ -[SISchemaAudioStopRecordingStarted hash](self->_audioStopRecordingStarted, "hash");
  v38 = v37 ^ -[SISchemaUEILaunchContext hash](self->_ueiLaunchContext, "hash");
  v39 = v31 ^ v38 ^ -[SISchemaUEIUserSpeakingContext hash](self->_ueiUserSpeakingContext, "hash");
  v40 = -[SISchemaUEIUUFRReady hash](self->_ueiUUFRReady, "hash");
  v41 = v40 ^ -[SISchemaUEIUIRenderingContext hash](self->_ueiUIRenderingContext, "hash");
  v42 = v41 ^ -[SISchemaPNRTextToSpeechRequestReceived hash](self->_pnrTextToSpeechRequestReceived, "hash");
  v43 = v42 ^ -[SISchemaPNRSpeechRecognitionSourceContext hash](self->_pnrSpeechRecognitionSourceContext, "hash");
  v44 = v43 ^ -[SISchemaPNRFatalError hash](self->_pnrFatalError, "hash");
  v45 = v44 ^ -[SISchemaTurnMTERequest hash](self->_turnMTERequest, "hash");
  v46 = v45 ^ -[SISchemaKeyboardDismissed hash](self->_keyboardDismissed, "hash");
  v47 = v46 ^ -[SISchemaEngagedAccessoryContext hash](self->_engagedAccessoryContext, "hash");
  v48 = v39 ^ v47 ^ -[SISchemaAnnounceCarPlayBannerTapped hash](self->_announceCarPlayBannerTapped, "hash");
  v49 = -[SISchemaAnnounceCarPlayGlyphSettingToggled hash](self->_announceCarPlayGlyphSettingToggled, "hash");
  v50 = v49 ^ -[SISchemaDictationContentEdited hash](self->_dictationContentEdited, "hash");
  v51 = v50 ^ -[SISchemaUUFRShownTier1 hash](self->_uufrShownTier1, "hash");
  v52 = v51 ^ -[SISchemaUEIDictationPartialResultUpdated hash](self->_ueiDictationPartialResultUpdated, "hash");
  v53 = v52 ^ -[SISchemaUEIDictationVoiceCommandExecuted hash](self->_ueiDictationVoiceCommandExecuted, "hash");
  v54 = v53 ^ -[SISchemaUEIDictationInputModeSwitchContext hash](self->_ueiDictationInputModeSwitchContext, "hash");
  v55 = v54 ^ -[SISchemaUEIDictationDiscoveryToolTipDisplayContext hash](self->_ueiDictationToolTipDisplayContext, "hash");
  v56 = v55 ^ -[SISchemaUEIHostingPlatformViewAppearContext hash](self->_hostPlatformViewAppearContext, "hash");
  v57 = v56 ^ -[SISchemaUEIHostingPlatformViewDisappearContext hash](self->_hostPlatformViewDisappearContext, "hash");
  v58 = v48 ^ v57 ^ -[SISchemaUEIDictationTranscriptionTokenized hash](self->_ueiDictationTranscriptionTokenized, "hash");
  v59 = -[SISchemaUEIDictationAlternativeConfusionPairsSelected hash](self->_dictationAlternativesSelected, "hash");
  v60 = v59 ^ -[SISchemaUUFRSelected hash](self->_uufrSelected, "hash");
  v61 = v60 ^ -[SISchemaUEIDictationAlternativeTextPairsSelected hash](self->_ueiDictationAlternativeTextPairsSelected, "hash");
  v62 = v61 ^ -[SISchemaUEIUserBargeInDetected hash](self->_ueiUserBargeInDetected, "hash");
  v63 = v62 ^ -[SISchemaUEIDictationEnablementPromptShown hash](self->_ueiDictationEnablementPromptShown, "hash");
  v64 = v63 ^ -[SISchemaUEISiriCarCommandContext hash](self->_ueiSiriCarCommandContext, "hash");
  v65 = v64 ^ -[SISchemaUEIVisionSnippetDismissed hash](self->_ueiVisionSnippetDismissed, "hash");
  v66 = v65 ^ -[SISchemaUEISiriWasUnavailable hash](self->_ueiSiriWasUnavailable, "hash");
  v67 = v66 ^ -[SISchemaBluetoothCarPreferredAudioRouteChanged hash](self->_preferredAudioRouteChanged, "hash");
  v68 = v67 ^ -[SISchemaUEIDictationContentEditedTier1 hash](self->_ueiDictationContentEditedTier1, "hash");
  v69 = v58 ^ v68 ^ -[SISchemaUEIDictationVoiceCommandUndoTapAction hash](self->_ueiDictationVoiceCommandUndoTapAction, "hash");
  v70 = -[SISchemaUEIDictationVoiceCommandDisambiguationAction hash](self->_ueiDictationVoiceCommandDisambiguationAction, "hash");
  v71 = v70 ^ -[SISchemaUEIDictationVoiceCommandKeyboardAction hash](self->_ueiDictationVoiceCommandKeyboardAction, "hash");
  v72 = v71 ^ -[SISchemaUEIDictationEuclidAlternativesEvent hash](self->_ueiDictationEuclidAlternativesEvent, "hash");
  v73 = v72 ^ -[SISchemaUEIDictationEuclidAlternativesEventTier1 hash](self->_ueiDictationEuclidAlternativesEventTier1, "hash");
  v74 = v73 ^ -[SISchemaUEIDictationEuclidSpeechAlternativesSelected hash](self->_ueiDictationEuclidSpeechAlternativesSelected, "hash");
  return v69 ^ v74 ^ -[SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 hash](self->_ueiDictationEuclidSpeechAlternativesSelectedTier1, "hash");
}

- (id)dictionaryRepresentation
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *v151;
  void *v152;
  void *v153;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  void *v183;
  void *v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  void *v196;
  void *v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  void *v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  void *v212;
  void *v213;
  void *v214;
  void *v215;
  void *v216;
  void *v217;
  void *v218;
  void *v219;
  void *v220;
  void *v221;
  void *v222;
  id v223;

  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (self->_announceCarPlayBannerTapped)
  {
    -[SISchemaClientEvent announceCarPlayBannerTapped](self, "announceCarPlayBannerTapped");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "dictionaryRepresentation");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v5, CFSTR("announceCarPlayBannerTapped"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v6, CFSTR("announceCarPlayBannerTapped"));

    }
  }
  if (self->_announceCarPlayGlyphSettingToggled)
  {
    -[SISchemaClientEvent announceCarPlayGlyphSettingToggled](self, "announceCarPlayGlyphSettingToggled");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "dictionaryRepresentation");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v8, CFSTR("announceCarPlayGlyphSettingToggled"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v9, CFSTR("announceCarPlayGlyphSettingToggled"));

    }
  }
  if (self->_audioFirstBufferRecorded)
  {
    -[SISchemaClientEvent audioFirstBufferRecorded](self, "audioFirstBufferRecorded");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "dictionaryRepresentation");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v11, CFSTR("audioFirstBufferRecorded"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v12, CFSTR("audioFirstBufferRecorded"));

    }
  }
  if (self->_audioStopRecording)
  {
    -[SISchemaClientEvent audioStopRecording](self, "audioStopRecording");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "dictionaryRepresentation");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (v14)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v14, CFSTR("audioStopRecording"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v15, CFSTR("audioStopRecording"));

    }
  }
  if (self->_audioStopRecordingStarted)
  {
    -[SISchemaClientEvent audioStopRecordingStarted](self, "audioStopRecordingStarted");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "dictionaryRepresentation");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (v17)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v17, CFSTR("audioStopRecordingStarted"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v18, CFSTR("audioStopRecordingStarted"));

    }
  }
  if (self->_carPlayHeadUnitContext)
  {
    -[SISchemaClientEvent carPlayHeadUnitContext](self, "carPlayHeadUnitContext");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "dictionaryRepresentation");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    if (v20)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v20, CFSTR("carPlayHeadUnitContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v21, CFSTR("carPlayHeadUnitContext"));

    }
  }
  if (self->_casinoRelationship)
  {
    -[SISchemaClientEvent casinoRelationship](self, "casinoRelationship");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "dictionaryRepresentation");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    if (v23)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v23, CFSTR("casinoRelationship"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v24, CFSTR("casinoRelationship"));

    }
  }
  if (self->_clientConversationTrace)
  {
    -[SISchemaClientEvent clientConversationTrace](self, "clientConversationTrace");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "dictionaryRepresentation");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    if (v26)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v26, CFSTR("clientConversationTrace"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v27, CFSTR("clientConversationTrace"));

    }
  }
  if (self->_clientFlow)
  {
    -[SISchemaClientEvent clientFlow](self, "clientFlow");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "dictionaryRepresentation");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    if (v29)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v29, CFSTR("clientFlow"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v30, CFSTR("clientFlow"));

    }
  }
  if (self->_deviceDynamicContext)
  {
    -[SISchemaClientEvent deviceDynamicContext](self, "deviceDynamicContext");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "dictionaryRepresentation");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    if (v32)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v32, CFSTR("deviceDynamicContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v33, CFSTR("deviceDynamicContext"));

    }
  }
  if (self->_deviceFixedContext)
  {
    -[SISchemaClientEvent deviceFixedContext](self, "deviceFixedContext");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "dictionaryRepresentation");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    if (v35)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v35, CFSTR("deviceFixedContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v36, CFSTR("deviceFixedContext"));

    }
  }
  if (self->_deviceLockStateChanged)
  {
    -[SISchemaClientEvent deviceLockStateChanged](self, "deviceLockStateChanged");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "dictionaryRepresentation");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    if (v38)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v38, CFSTR("deviceLockStateChanged"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v39, CFSTR("deviceLockStateChanged"));

    }
  }
  if (self->_dialogOutput)
  {
    -[SISchemaClientEvent dialogOutput](self, "dialogOutput");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "dictionaryRepresentation");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    if (v41)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v41, CFSTR("dialogOutput"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v42, CFSTR("dialogOutput"));

    }
  }
  if (self->_dictationAlternativeSelected)
  {
    -[SISchemaClientEvent dictationAlternativeSelected](self, "dictationAlternativeSelected");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v43, "dictionaryRepresentation");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    if (v44)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v44, CFSTR("dictationAlternativeSelected"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v45, CFSTR("dictationAlternativeSelected"));

    }
  }
  if (self->_dictationAlternativesSelected)
  {
    -[SISchemaClientEvent dictationAlternativesSelected](self, "dictationAlternativesSelected");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v46, "dictionaryRepresentation");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    if (v47)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v47, CFSTR("dictationAlternativesSelected"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v48, CFSTR("dictationAlternativesSelected"));

    }
  }
  if (self->_dictationAlternativesViewed)
  {
    -[SISchemaClientEvent dictationAlternativesViewed](self, "dictationAlternativesViewed");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v49, "dictionaryRepresentation");
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    if (v50)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v50, CFSTR("dictationAlternativesViewed"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v51 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v51, CFSTR("dictationAlternativesViewed"));

    }
  }
  if (self->_dictationContentEdited)
  {
    -[SISchemaClientEvent dictationContentEdited](self, "dictationContentEdited");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v52, "dictionaryRepresentation");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    if (v53)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v53, CFSTR("dictationContentEdited"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v54, CFSTR("dictationContentEdited"));

    }
  }
  if (self->_dictationContext)
  {
    -[SISchemaClientEvent dictationContext](self, "dictationContext");
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v55, "dictionaryRepresentation");
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    if (v56)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v56, CFSTR("dictationContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v57, CFSTR("dictationContext"));

    }
  }
  if (self->_dictationEndPointCancel)
  {
    -[SISchemaClientEvent dictationEndPointCancel](self, "dictationEndPointCancel");
    v58 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v58, "dictionaryRepresentation");
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    if (v59)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v59, CFSTR("dictationEndPointCancel"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v60, CFSTR("dictationEndPointCancel"));

    }
  }
  if (self->_dictationEndPointStop)
  {
    -[SISchemaClientEvent dictationEndPointStop](self, "dictationEndPointStop");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v61, "dictionaryRepresentation");
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    if (v62)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v62, CFSTR("dictationEndPointStop"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v63 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v63, CFSTR("dictationEndPointStop"));

    }
  }
  if (self->_dictationTranscriptionMetadata)
  {
    -[SISchemaClientEvent dictationTranscriptionMetadata](self, "dictationTranscriptionMetadata");
    v64 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v64, "dictionaryRepresentation");
    v65 = (void *)objc_claimAutoreleasedReturnValue();
    if (v65)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v65, CFSTR("dictationTranscriptionMetadata"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v66 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v66, CFSTR("dictationTranscriptionMetadata"));

    }
  }
  if (self->_engagedAccessoryContext)
  {
    -[SISchemaClientEvent engagedAccessoryContext](self, "engagedAccessoryContext");
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v67, "dictionaryRepresentation");
    v68 = (void *)objc_claimAutoreleasedReturnValue();
    if (v68)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v68, CFSTR("engagedAccessoryContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v69, CFSTR("engagedAccessoryContext"));

    }
  }
  if (self->_eventMetadata)
  {
    -[SISchemaClientEvent eventMetadata](self, "eventMetadata");
    v70 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v70, "dictionaryRepresentation");
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    if (v71)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v71, CFSTR("eventMetadata"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v72 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v72, CFSTR("eventMetadata"));

    }
  }
  if (self->_hostPlatformViewAppearContext)
  {
    -[SISchemaClientEvent hostPlatformViewAppearContext](self, "hostPlatformViewAppearContext");
    v73 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v73, "dictionaryRepresentation");
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    if (v74)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v74, CFSTR("hostPlatformViewAppearContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v75, CFSTR("hostPlatformViewAppearContext"));

    }
  }
  if (self->_hostPlatformViewDisappearContext)
  {
    -[SISchemaClientEvent hostPlatformViewDisappearContext](self, "hostPlatformViewDisappearContext");
    v76 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v76, "dictionaryRepresentation");
    v77 = (void *)objc_claimAutoreleasedReturnValue();
    if (v77)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v77, CFSTR("hostPlatformViewDisappearContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v78 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v78, CFSTR("hostPlatformViewDisappearContext"));

    }
  }
  if (self->_intercomMessageRecorded)
  {
    -[SISchemaClientEvent intercomMessageRecorded](self, "intercomMessageRecorded");
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v79, "dictionaryRepresentation");
    v80 = (void *)objc_claimAutoreleasedReturnValue();
    if (v80)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v80, CFSTR("intercomMessageRecorded"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v81 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v81, CFSTR("intercomMessageRecorded"));

    }
  }
  if (self->_invocation)
  {
    -[SISchemaClientEvent invocation](self, "invocation");
    v82 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v82, "dictionaryRepresentation");
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    if (v83)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v83, CFSTR("invocation"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v84 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v84, CFSTR("invocation"));

    }
  }
  if (self->_keyboardDismissed)
  {
    -[SISchemaClientEvent keyboardDismissed](self, "keyboardDismissed");
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v85, "dictionaryRepresentation");
    v86 = (void *)objc_claimAutoreleasedReturnValue();
    if (v86)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v86, CFSTR("keyboardDismissed"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v87 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v87, CFSTR("keyboardDismissed"));

    }
  }
  if (self->_location)
  {
    -[SISchemaClientEvent location](self, "location");
    v88 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v88, "dictionaryRepresentation");
    v89 = (void *)objc_claimAutoreleasedReturnValue();
    if (v89)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v89, CFSTR("location"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v90 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v90, CFSTR("location"));

    }
  }
  if (self->_pnrFatalError)
  {
    -[SISchemaClientEvent pnrFatalError](self, "pnrFatalError");
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v91, "dictionaryRepresentation");
    v92 = (void *)objc_claimAutoreleasedReturnValue();
    if (v92)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v92, CFSTR("pnrFatalError"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v93 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v93, CFSTR("pnrFatalError"));

    }
  }
  if (self->_pnrSpeechRecognitionSourceContext)
  {
    -[SISchemaClientEvent pnrSpeechRecognitionSourceContext](self, "pnrSpeechRecognitionSourceContext");
    v94 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v94, "dictionaryRepresentation");
    v95 = (void *)objc_claimAutoreleasedReturnValue();
    if (v95)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v95, CFSTR("pnrSpeechRecognitionSourceContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v96 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v96, CFSTR("pnrSpeechRecognitionSourceContext"));

    }
  }
  if (self->_pnrTextToSpeechRequestReceived)
  {
    -[SISchemaClientEvent pnrTextToSpeechRequestReceived](self, "pnrTextToSpeechRequestReceived");
    v97 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v97, "dictionaryRepresentation");
    v98 = (void *)objc_claimAutoreleasedReturnValue();
    if (v98)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v98, CFSTR("pnrTextToSpeechRequestReceived"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v99 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v99, CFSTR("pnrTextToSpeechRequestReceived"));

    }
  }
  if (self->_preferredAudioRouteChanged)
  {
    -[SISchemaClientEvent preferredAudioRouteChanged](self, "preferredAudioRouteChanged");
    v100 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v100, "dictionaryRepresentation");
    v101 = (void *)objc_claimAutoreleasedReturnValue();
    if (v101)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v101, CFSTR("preferredAudioRouteChanged"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v102 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v102, CFSTR("preferredAudioRouteChanged"));

    }
  }
  if (self->_punchOut)
  {
    -[SISchemaClientEvent punchOut](self, "punchOut");
    v103 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v103, "dictionaryRepresentation");
    v104 = (void *)objc_claimAutoreleasedReturnValue();
    if (v104)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v104, CFSTR("punchOut"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v105 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v105, CFSTR("punchOut"));

    }
  }
  if (self->_siriCue)
  {
    -[SISchemaClientEvent siriCue](self, "siriCue");
    v106 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v106, "dictionaryRepresentation");
    v107 = (void *)objc_claimAutoreleasedReturnValue();
    if (v107)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v107, CFSTR("siriCue"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v108 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v108, CFSTR("siriCue"));

    }
  }
  if (self->_speechTranscription)
  {
    -[SISchemaClientEvent speechTranscription](self, "speechTranscription");
    v109 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v109, "dictionaryRepresentation");
    v110 = (void *)objc_claimAutoreleasedReturnValue();
    if (v110)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v110, CFSTR("speechTranscription"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v111 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v111, CFSTR("speechTranscription"));

    }
  }
  if (self->_textToSpeechBegin)
  {
    -[SISchemaClientEvent textToSpeechBegin](self, "textToSpeechBegin");
    v112 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v112, "dictionaryRepresentation");
    v113 = (void *)objc_claimAutoreleasedReturnValue();
    if (v113)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v113, CFSTR("textToSpeechBegin"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v114 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v114, CFSTR("textToSpeechBegin"));

    }
  }
  if (self->_textToSpeechEnd)
  {
    -[SISchemaClientEvent textToSpeechEnd](self, "textToSpeechEnd");
    v115 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v115, "dictionaryRepresentation");
    v116 = (void *)objc_claimAutoreleasedReturnValue();
    if (v116)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v116, CFSTR("textToSpeechEnd"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v117 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v117, CFSTR("textToSpeechEnd"));

    }
  }
  if (self->_transportMetadata)
  {
    -[SISchemaClientEvent transportMetadata](self, "transportMetadata");
    v118 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v118, "dictionaryRepresentation");
    v119 = (void *)objc_claimAutoreleasedReturnValue();
    if (v119)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v119, CFSTR("transportMetadata"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v120 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v120, CFSTR("transportMetadata"));

    }
  }
  if (self->_turnMTERequest)
  {
    -[SISchemaClientEvent turnMTERequest](self, "turnMTERequest");
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v121, "dictionaryRepresentation");
    v122 = (void *)objc_claimAutoreleasedReturnValue();
    if (v122)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v122, CFSTR("turnMTERequest"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v123 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v123, CFSTR("turnMTERequest"));

    }
  }
  if (self->_ueiDictationAlternativeTextPairsSelected)
  {
    -[SISchemaClientEvent ueiDictationAlternativeTextPairsSelected](self, "ueiDictationAlternativeTextPairsSelected");
    v124 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v124, "dictionaryRepresentation");
    v125 = (void *)objc_claimAutoreleasedReturnValue();
    if (v125)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v125, CFSTR("ueiDictationAlternativeTextPairsSelected"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v126 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v126, CFSTR("ueiDictationAlternativeTextPairsSelected"));

    }
  }
  if (self->_ueiDictationContentEditedTier1)
  {
    -[SISchemaClientEvent ueiDictationContentEditedTier1](self, "ueiDictationContentEditedTier1");
    v127 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v127, "dictionaryRepresentation");
    v128 = (void *)objc_claimAutoreleasedReturnValue();
    if (v128)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v128, CFSTR("ueiDictationContentEditedTier1"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v129 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v129, CFSTR("ueiDictationContentEditedTier1"));

    }
  }
  if (self->_ueiDictationEnablementPromptShown)
  {
    -[SISchemaClientEvent ueiDictationEnablementPromptShown](self, "ueiDictationEnablementPromptShown");
    v130 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v130, "dictionaryRepresentation");
    v131 = (void *)objc_claimAutoreleasedReturnValue();
    if (v131)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v131, CFSTR("ueiDictationEnablementPromptShown"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v132 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v132, CFSTR("ueiDictationEnablementPromptShown"));

    }
  }
  if (self->_ueiDictationEuclidAlternativesEvent)
  {
    -[SISchemaClientEvent ueiDictationEuclidAlternativesEvent](self, "ueiDictationEuclidAlternativesEvent");
    v133 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v133, "dictionaryRepresentation");
    v134 = (void *)objc_claimAutoreleasedReturnValue();
    if (v134)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v134, CFSTR("ueiDictationEuclidAlternativesEvent"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v135 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v135, CFSTR("ueiDictationEuclidAlternativesEvent"));

    }
  }
  if (self->_ueiDictationEuclidAlternativesEventTier1)
  {
    -[SISchemaClientEvent ueiDictationEuclidAlternativesEventTier1](self, "ueiDictationEuclidAlternativesEventTier1");
    v136 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v136, "dictionaryRepresentation");
    v137 = (void *)objc_claimAutoreleasedReturnValue();
    if (v137)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v137, CFSTR("ueiDictationEuclidAlternativesEventTier1"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v138 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v138, CFSTR("ueiDictationEuclidAlternativesEventTier1"));

    }
  }
  if (self->_ueiDictationEuclidSpeechAlternativesSelected)
  {
    -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelected](self, "ueiDictationEuclidSpeechAlternativesSelected");
    v139 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v139, "dictionaryRepresentation");
    v140 = (void *)objc_claimAutoreleasedReturnValue();
    if (v140)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v140, CFSTR("ueiDictationEuclidSpeechAlternativesSelected"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v141 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v141, CFSTR("ueiDictationEuclidSpeechAlternativesSelected"));

    }
  }
  if (self->_ueiDictationEuclidSpeechAlternativesSelectedTier1)
  {
    -[SISchemaClientEvent ueiDictationEuclidSpeechAlternativesSelectedTier1](self, "ueiDictationEuclidSpeechAlternativesSelectedTier1");
    v142 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v142, "dictionaryRepresentation");
    v143 = (void *)objc_claimAutoreleasedReturnValue();
    if (v143)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v143, CFSTR("ueiDictationEuclidSpeechAlternativesSelectedTier1"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v144 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v144, CFSTR("ueiDictationEuclidSpeechAlternativesSelectedTier1"));

    }
  }
  if (self->_ueiDictationInputModeSwitchContext)
  {
    -[SISchemaClientEvent ueiDictationInputModeSwitchContext](self, "ueiDictationInputModeSwitchContext");
    v145 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v145, "dictionaryRepresentation");
    v146 = (void *)objc_claimAutoreleasedReturnValue();
    if (v146)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v146, CFSTR("ueiDictationInputModeSwitchContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v147 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v147, CFSTR("ueiDictationInputModeSwitchContext"));

    }
  }
  if (self->_ueiDictationPartialResultUpdated)
  {
    -[SISchemaClientEvent ueiDictationPartialResultUpdated](self, "ueiDictationPartialResultUpdated");
    v148 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v148, "dictionaryRepresentation");
    v149 = (void *)objc_claimAutoreleasedReturnValue();
    if (v149)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v149, CFSTR("ueiDictationPartialResultUpdated"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v150 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v150, CFSTR("ueiDictationPartialResultUpdated"));

    }
  }
  if (self->_ueiDictationToolTipDisplayContext)
  {
    -[SISchemaClientEvent ueiDictationToolTipDisplayContext](self, "ueiDictationToolTipDisplayContext");
    v151 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v151, "dictionaryRepresentation");
    v152 = (void *)objc_claimAutoreleasedReturnValue();
    if (v152)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v152, CFSTR("ueiDictationToolTipDisplayContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v153 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v153, CFSTR("ueiDictationToolTipDisplayContext"));

    }
  }
  if (self->_ueiDictationTranscriptionTokenized)
  {
    -[SISchemaClientEvent ueiDictationTranscriptionTokenized](self, "ueiDictationTranscriptionTokenized");
    v154 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v154, "dictionaryRepresentation");
    v155 = (void *)objc_claimAutoreleasedReturnValue();
    if (v155)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v155, CFSTR("ueiDictationTranscriptionTokenized"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v156 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v156, CFSTR("ueiDictationTranscriptionTokenized"));

    }
  }
  if (self->_ueiDictationVoiceCommandDisambiguationAction)
  {
    -[SISchemaClientEvent ueiDictationVoiceCommandDisambiguationAction](self, "ueiDictationVoiceCommandDisambiguationAction");
    v157 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v157, "dictionaryRepresentation");
    v158 = (void *)objc_claimAutoreleasedReturnValue();
    if (v158)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v158, CFSTR("ueiDictationVoiceCommandDisambiguationAction"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v159 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v159, CFSTR("ueiDictationVoiceCommandDisambiguationAction"));

    }
  }
  if (self->_ueiDictationVoiceCommandExecuted)
  {
    -[SISchemaClientEvent ueiDictationVoiceCommandExecuted](self, "ueiDictationVoiceCommandExecuted");
    v160 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v160, "dictionaryRepresentation");
    v161 = (void *)objc_claimAutoreleasedReturnValue();
    if (v161)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v161, CFSTR("ueiDictationVoiceCommandExecuted"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v162 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v162, CFSTR("ueiDictationVoiceCommandExecuted"));

    }
  }
  if (self->_ueiDictationVoiceCommandKeyboardAction)
  {
    -[SISchemaClientEvent ueiDictationVoiceCommandKeyboardAction](self, "ueiDictationVoiceCommandKeyboardAction");
    v163 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v163, "dictionaryRepresentation");
    v164 = (void *)objc_claimAutoreleasedReturnValue();
    if (v164)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v164, CFSTR("ueiDictationVoiceCommandKeyboardAction"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v165 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v165, CFSTR("ueiDictationVoiceCommandKeyboardAction"));

    }
  }
  if (self->_ueiDictationVoiceCommandUndoTapAction)
  {
    -[SISchemaClientEvent ueiDictationVoiceCommandUndoTapAction](self, "ueiDictationVoiceCommandUndoTapAction");
    v166 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v166, "dictionaryRepresentation");
    v167 = (void *)objc_claimAutoreleasedReturnValue();
    if (v167)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v167, CFSTR("ueiDictationVoiceCommandUndoTapAction"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v168 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v168, CFSTR("ueiDictationVoiceCommandUndoTapAction"));

    }
  }
  if (self->_ueiLaunchContext)
  {
    -[SISchemaClientEvent ueiLaunchContext](self, "ueiLaunchContext");
    v169 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v169, "dictionaryRepresentation");
    v170 = (void *)objc_claimAutoreleasedReturnValue();
    if (v170)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v170, CFSTR("ueiLaunchContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v171 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v171, CFSTR("ueiLaunchContext"));

    }
  }
  if (self->_ueiRequestCategorization)
  {
    -[SISchemaClientEvent ueiRequestCategorization](self, "ueiRequestCategorization");
    v172 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v172, "dictionaryRepresentation");
    v173 = (void *)objc_claimAutoreleasedReturnValue();
    if (v173)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v173, CFSTR("ueiRequestCategorization"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v174 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v174, CFSTR("ueiRequestCategorization"));

    }
  }
  if (self->_ueiSiriCarCommandContext)
  {
    -[SISchemaClientEvent ueiSiriCarCommandContext](self, "ueiSiriCarCommandContext");
    v175 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v175, "dictionaryRepresentation");
    v176 = (void *)objc_claimAutoreleasedReturnValue();
    if (v176)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v176, CFSTR("ueiSiriCarCommandContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v177 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v177, CFSTR("ueiSiriCarCommandContext"));

    }
  }
  if (self->_ueiSiriWasUnavailable)
  {
    -[SISchemaClientEvent ueiSiriWasUnavailable](self, "ueiSiriWasUnavailable");
    v178 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v178, "dictionaryRepresentation");
    v179 = (void *)objc_claimAutoreleasedReturnValue();
    if (v179)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v179, CFSTR("ueiSiriWasUnavailable"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v180 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v180, CFSTR("ueiSiriWasUnavailable"));

    }
  }
  if (self->_ueiUIRenderingContext)
  {
    -[SISchemaClientEvent ueiUIRenderingContext](self, "ueiUIRenderingContext");
    v181 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v181, "dictionaryRepresentation");
    v182 = (void *)objc_claimAutoreleasedReturnValue();
    if (v182)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v182, CFSTR("ueiUIRenderingContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v183 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v183, CFSTR("ueiUIRenderingContext"));

    }
  }
  if (self->_ueiUUFRReady)
  {
    -[SISchemaClientEvent ueiUUFRReady](self, "ueiUUFRReady");
    v184 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v184, "dictionaryRepresentation");
    v185 = (void *)objc_claimAutoreleasedReturnValue();
    if (v185)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v185, CFSTR("ueiUUFRReady"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v186 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v186, CFSTR("ueiUUFRReady"));

    }
  }
  if (self->_ueiUserBargeInDetected)
  {
    -[SISchemaClientEvent ueiUserBargeInDetected](self, "ueiUserBargeInDetected");
    v187 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v187, "dictionaryRepresentation");
    v188 = (void *)objc_claimAutoreleasedReturnValue();
    if (v188)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v188, CFSTR("ueiUserBargeInDetected"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v189 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v189, CFSTR("ueiUserBargeInDetected"));

    }
  }
  if (self->_ueiUserSpeakingContext)
  {
    -[SISchemaClientEvent ueiUserSpeakingContext](self, "ueiUserSpeakingContext");
    v190 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v190, "dictionaryRepresentation");
    v191 = (void *)objc_claimAutoreleasedReturnValue();
    if (v191)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v191, CFSTR("ueiUserSpeakingContext"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v192 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v192, CFSTR("ueiUserSpeakingContext"));

    }
  }
  if (self->_ueiVisionSnippetDismissed)
  {
    -[SISchemaClientEvent ueiVisionSnippetDismissed](self, "ueiVisionSnippetDismissed");
    v193 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v193, "dictionaryRepresentation");
    v194 = (void *)objc_claimAutoreleasedReturnValue();
    if (v194)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v194, CFSTR("ueiVisionSnippetDismissed"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v195 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v195, CFSTR("ueiVisionSnippetDismissed"));

    }
  }
  if (self->_uiStateTransition)
  {
    -[SISchemaClientEvent uiStateTransition](self, "uiStateTransition");
    v196 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v196, "dictionaryRepresentation");
    v197 = (void *)objc_claimAutoreleasedReturnValue();
    if (v197)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v197, CFSTR("uiStateTransition"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v198 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v198, CFSTR("uiStateTransition"));

    }
  }
  if (self->_userViewRegionInteraction)
  {
    -[SISchemaClientEvent userViewRegionInteraction](self, "userViewRegionInteraction");
    v199 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v199, "dictionaryRepresentation");
    v200 = (void *)objc_claimAutoreleasedReturnValue();
    if (v200)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v200, CFSTR("userViewRegionInteraction"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v201 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v201, CFSTR("userViewRegionInteraction"));

    }
  }
  if (self->_uufrCompletion)
  {
    -[SISchemaClientEvent uufrCompletion](self, "uufrCompletion");
    v202 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v202, "dictionaryRepresentation");
    v203 = (void *)objc_claimAutoreleasedReturnValue();
    if (v203)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v203, CFSTR("uufrCompletion"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v204 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v204, CFSTR("uufrCompletion"));

    }
  }
  if (self->_uufrFatalError)
  {
    -[SISchemaClientEvent uufrFatalError](self, "uufrFatalError");
    v205 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v205, "dictionaryRepresentation");
    v206 = (void *)objc_claimAutoreleasedReturnValue();
    if (v206)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v206, CFSTR("uufrFatalError"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v207 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v207, CFSTR("uufrFatalError"));

    }
  }
  if (self->_uufrPresented)
  {
    -[SISchemaClientEvent uufrPresented](self, "uufrPresented");
    v208 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v208, "dictionaryRepresentation");
    v209 = (void *)objc_claimAutoreleasedReturnValue();
    if (v209)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v209, CFSTR("uufrPresented"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v210 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v210, CFSTR("uufrPresented"));

    }
  }
  if (self->_uufrSaid)
  {
    -[SISchemaClientEvent uufrSaid](self, "uufrSaid");
    v211 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v211, "dictionaryRepresentation");
    v212 = (void *)objc_claimAutoreleasedReturnValue();
    if (v212)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v212, CFSTR("uufrSaid"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v213 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v213, CFSTR("uufrSaid"));

    }
  }
  if (self->_uufrSelected)
  {
    -[SISchemaClientEvent uufrSelected](self, "uufrSelected");
    v214 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v214, "dictionaryRepresentation");
    v215 = (void *)objc_claimAutoreleasedReturnValue();
    if (v215)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v215, CFSTR("uufrSelected"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v216 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v216, CFSTR("uufrSelected"));

    }
  }
  if (self->_uufrShown)
  {
    -[SISchemaClientEvent uufrShown](self, "uufrShown");
    v217 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v217, "dictionaryRepresentation");
    v218 = (void *)objc_claimAutoreleasedReturnValue();
    if (v218)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v218, CFSTR("uufrShown"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v219 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v219, CFSTR("uufrShown"));

    }
  }
  if (self->_uufrShownTier1)
  {
    -[SISchemaClientEvent uufrShownTier1](self, "uufrShownTier1");
    v220 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v220, "dictionaryRepresentation");
    v221 = (void *)objc_claimAutoreleasedReturnValue();
    if (v221)
    {
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v221, CFSTR("uufrShownTier1"));
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v222 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "setObject:forKeyedSubscript:", v222, CFSTR("uufrShownTier1"));

    }
  }
  -[SISchemaInstrumentationMessage willProduceDictionaryRepresentation:](self, "willProduceDictionaryRepresentation:", v3);
  v223 = v3;

  return v223;
}

- (NSData)jsonData
{
  void *v2;
  void *v3;

  -[SISchemaClientEvent dictionaryRepresentation](self, "dictionaryRepresentation");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(MEMORY[0x1E0CB36D8], "isValidJSONObject:", v2))
  {
    objc_msgSend(MEMORY[0x1E0CB36D8], "dataWithJSONObject:options:error:", v2, 0, 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  return (NSData *)v3;
}

- (SISchemaClientEvent)initWithJSON:(id)a3
{
  void *v4;
  SISchemaClientEvent *v5;
  uint64_t v7;

  v7 = 0;
  objc_msgSend(MEMORY[0x1E0CB36D8], "JSONObjectWithData:options:error:", a3, 0, &v7);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v7 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    v5 = 0;
  }
  else
  {
    self = -[SISchemaClientEvent initWithDictionary:](self, "initWithDictionary:", v4);
    v5 = self;
  }

  return v5;
}

- (SISchemaClientEvent)initWithDictionary:(id)a3
{
  id v4;
  SISchemaClientEvent *v5;
  uint64_t v6;
  SISchemaClientEventMetadata *v7;
  uint64_t v8;
  SISchemaClientTransportEventMetadata *v9;
  uint64_t v10;
  SISchemaAudioFirstBufferRecorded *v11;
  uint64_t v12;
  SISchemaAudioStopRecording *v13;
  uint64_t v14;
  SISchemaConversationTrace *v15;
  uint64_t v16;
  SISchemaDeviceDynamicContext *v17;
  uint64_t v18;
  SISchemaDeviceFixedContext *v19;
  uint64_t v20;
  SISchemaDictationContext *v21;
  uint64_t v22;
  SISchemaInvocation *v23;
  uint64_t v24;
  SISchemaLocation *v25;
  uint64_t v26;
  SISchemaPunchOut *v27;
  uint64_t v28;
  SISchemaSiriCue *v29;
  uint64_t v30;
  SISchemaUUFRPresented *v31;
  uint64_t v32;
  SISchemaSpeechTranscription *v33;
  uint64_t v34;
  SISchemaTextToSpeechBegin *v35;
  uint64_t v36;
  SISchemaTextToSpeechEnd *v37;
  uint64_t v38;
  SISchemaUIStateTransition *v39;
  uint64_t v40;
  SISchemaClientFlow *v41;
  uint64_t v42;
  SISchemaDialogOutput *v43;
  uint64_t v44;
  SISchemaDictationEndPointStop *v45;
  uint64_t v46;
  SISchemaDictationEndPointCancel *v47;
  uint64_t v48;
  SISchemaDictationAlternativeSelected *v49;
  uint64_t v50;
  SISchemaDictationTranscriptionMetadata *v51;
  uint64_t v52;
  SISchemaCarPlayHeadUnitContext *v53;
  uint64_t v54;
  SISchemaUUFRCompletion *v55;
  uint64_t v56;
  SISchemaUUFRShown *v57;
  uint64_t v58;
  SISchemaUUFRSaid *v59;
  uint64_t v60;
  SISchemaUUFRFatalError *v61;
  uint64_t v62;
  SISchemaDictationAlternativesViewed *v63;
  uint64_t v64;
  SISchemaIntercomMessageRecorded *v65;
  uint64_t v66;
  SISchemaCasinoRelationship *v67;
  uint64_t v68;
  SISchemaUserViewRegionInteraction *v69;
  uint64_t v70;
  SISchemaDeviceLockStateChanged *v71;
  uint64_t v72;
  SISchemaUEIRequestCategorization *v73;
  uint64_t v74;
  SISchemaAudioStopRecordingStarted *v75;
  uint64_t v76;
  SISchemaUEILaunchContext *v77;
  uint64_t v78;
  SISchemaUEIUserSpeakingContext *v79;
  uint64_t v80;
  SISchemaUEIUUFRReady *v81;
  uint64_t v82;
  SISchemaUEIUIRenderingContext *v83;
  uint64_t v84;
  SISchemaPNRTextToSpeechRequestReceived *v85;
  uint64_t v86;
  SISchemaPNRSpeechRecognitionSourceContext *v87;
  uint64_t v88;
  SISchemaPNRFatalError *v89;
  uint64_t v90;
  SISchemaTurnMTERequest *v91;
  uint64_t v92;
  SISchemaKeyboardDismissed *v93;
  uint64_t v94;
  SISchemaEngagedAccessoryContext *v95;
  uint64_t v96;
  SISchemaAnnounceCarPlayBannerTapped *v97;
  uint64_t v98;
  SISchemaAnnounceCarPlayGlyphSettingToggled *v99;
  uint64_t v100;
  SISchemaDictationContentEdited *v101;
  uint64_t v102;
  SISchemaUUFRShownTier1 *v103;
  uint64_t v104;
  SISchemaUEIDictationPartialResultUpdated *v105;
  uint64_t v106;
  SISchemaUEIDictationVoiceCommandExecuted *v107;
  uint64_t v108;
  SISchemaUEIDictationInputModeSwitchContext *v109;
  uint64_t v110;
  SISchemaUEIDictationDiscoveryToolTipDisplayContext *v111;
  uint64_t v112;
  SISchemaUEIHostingPlatformViewAppearContext *v113;
  uint64_t v114;
  SISchemaUEIHostingPlatformViewDisappearContext *v115;
  uint64_t v116;
  SISchemaUEIDictationTranscriptionTokenized *v117;
  uint64_t v118;
  SISchemaUEIDictationAlternativeConfusionPairsSelected *v119;
  uint64_t v120;
  SISchemaUUFRSelected *v121;
  uint64_t v122;
  SISchemaUEIDictationAlternativeTextPairsSelected *v123;
  uint64_t v124;
  SISchemaUEIUserBargeInDetected *v125;
  uint64_t v126;
  SISchemaUEIDictationEnablementPromptShown *v127;
  uint64_t v128;
  SISchemaUEISiriCarCommandContext *v129;
  uint64_t v130;
  SISchemaUEIVisionSnippetDismissed *v131;
  uint64_t v132;
  SISchemaUEISiriWasUnavailable *v133;
  uint64_t v134;
  SISchemaBluetoothCarPreferredAudioRouteChanged *v135;
  uint64_t v136;
  SISchemaUEIDictationContentEditedTier1 *v137;
  void *v138;
  SISchemaUEIDictationVoiceCommandUndoTapAction *v139;
  void *v140;
  SISchemaUEIDictationVoiceCommandDisambiguationAction *v141;
  void *v142;
  SISchemaUEIDictationVoiceCommandKeyboardAction *v143;
  void *v144;
  SISchemaUEIDictationEuclidAlternativesEvent *v145;
  void *v146;
  SISchemaUEIDictationEuclidAlternativesEventTier1 *v147;
  void *v148;
  SISchemaUEIDictationEuclidSpeechAlternativesSelected *v149;
  void *v150;
  SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 *v151;
  SISchemaClientEvent *v152;
  void *v154;
  void *v155;
  void *v156;
  void *v157;
  void *v158;
  void *v159;
  void *v160;
  void *v161;
  void *v162;
  void *v163;
  void *v164;
  void *v165;
  void *v166;
  void *v167;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  void *v176;
  void *v177;
  void *v178;
  void *v179;
  void *v180;
  void *v181;
  void *v182;
  void *v183;
  void *v184;
  void *v185;
  void *v186;
  void *v187;
  void *v188;
  void *v189;
  void *v190;
  void *v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  void *v196;
  void *v197;
  void *v198;
  void *v199;
  void *v200;
  void *v201;
  void *v202;
  void *v203;
  void *v204;
  void *v205;
  void *v206;
  void *v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  void *v212;
  void *v213;
  void *v214;
  void *v215;
  void *v216;
  void *v217;
  void *v218;
  void *v219;
  objc_super v220;

  v4 = a3;
  v220.receiver = self;
  v220.super_class = (Class)SISchemaClientEvent;
  v5 = -[SISchemaClientEvent init](&v220, sel_init);

  if (v5)
  {
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("eventMetadata"));
    v6 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v7 = -[SISchemaClientEventMetadata initWithDictionary:]([SISchemaClientEventMetadata alloc], "initWithDictionary:", v6);
      -[SISchemaClientEvent setEventMetadata:](v5, "setEventMetadata:", v7);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("transportMetadata"));
    v8 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v9 = -[SISchemaClientTransportEventMetadata initWithDictionary:]([SISchemaClientTransportEventMetadata alloc], "initWithDictionary:", v8);
      -[SISchemaClientEvent setTransportMetadata:](v5, "setTransportMetadata:", v9);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("audioFirstBufferRecorded"));
    v10 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v11 = -[SISchemaAudioFirstBufferRecorded initWithDictionary:]([SISchemaAudioFirstBufferRecorded alloc], "initWithDictionary:", v10);
      -[SISchemaClientEvent setAudioFirstBufferRecorded:](v5, "setAudioFirstBufferRecorded:", v11);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("audioStopRecording"));
    v12 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v13 = -[SISchemaAudioStopRecording initWithDictionary:]([SISchemaAudioStopRecording alloc], "initWithDictionary:", v12);
      -[SISchemaClientEvent setAudioStopRecording:](v5, "setAudioStopRecording:", v13);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("clientConversationTrace"));
    v14 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v15 = -[SISchemaConversationTrace initWithDictionary:]([SISchemaConversationTrace alloc], "initWithDictionary:", v14);
      -[SISchemaClientEvent setClientConversationTrace:](v5, "setClientConversationTrace:", v15);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("deviceDynamicContext"));
    v16 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v17 = -[SISchemaDeviceDynamicContext initWithDictionary:]([SISchemaDeviceDynamicContext alloc], "initWithDictionary:", v16);
      -[SISchemaClientEvent setDeviceDynamicContext:](v5, "setDeviceDynamicContext:", v17);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("deviceFixedContext"));
    v18 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v219 = (void *)v18;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v19 = -[SISchemaDeviceFixedContext initWithDictionary:]([SISchemaDeviceFixedContext alloc], "initWithDictionary:", v18);
      -[SISchemaClientEvent setDeviceFixedContext:](v5, "setDeviceFixedContext:", v19);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dictationContext"));
    v20 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v218 = (void *)v20;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v21 = -[SISchemaDictationContext initWithDictionary:]([SISchemaDictationContext alloc], "initWithDictionary:", v20);
      -[SISchemaClientEvent setDictationContext:](v5, "setDictationContext:", v21);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("invocation"));
    v22 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v217 = (void *)v22;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v23 = -[SISchemaInvocation initWithDictionary:]([SISchemaInvocation alloc], "initWithDictionary:", v22);
      -[SISchemaClientEvent setInvocation:](v5, "setInvocation:", v23);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("location"));
    v24 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v216 = (void *)v24;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v25 = -[SISchemaLocation initWithDictionary:]([SISchemaLocation alloc], "initWithDictionary:", v24);
      -[SISchemaClientEvent setLocation:](v5, "setLocation:", v25);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("punchOut"));
    v26 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v215 = (void *)v26;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v27 = -[SISchemaPunchOut initWithDictionary:]([SISchemaPunchOut alloc], "initWithDictionary:", v26);
      -[SISchemaClientEvent setPunchOut:](v5, "setPunchOut:", v27);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("siriCue"));
    v28 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v214 = (void *)v28;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v29 = -[SISchemaSiriCue initWithDictionary:]([SISchemaSiriCue alloc], "initWithDictionary:", v28);
      -[SISchemaClientEvent setSiriCue:](v5, "setSiriCue:", v29);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("uufrPresented"));
    v30 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v213 = (void *)v30;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v31 = -[SISchemaUUFRPresented initWithDictionary:]([SISchemaUUFRPresented alloc], "initWithDictionary:", v30);
      -[SISchemaClientEvent setUufrPresented:](v5, "setUufrPresented:", v31);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("speechTranscription"));
    v32 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v212 = (void *)v32;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v33 = -[SISchemaSpeechTranscription initWithDictionary:]([SISchemaSpeechTranscription alloc], "initWithDictionary:", v32);
      -[SISchemaClientEvent setSpeechTranscription:](v5, "setSpeechTranscription:", v33);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("textToSpeechBegin"));
    v34 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v211 = (void *)v34;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v35 = -[SISchemaTextToSpeechBegin initWithDictionary:]([SISchemaTextToSpeechBegin alloc], "initWithDictionary:", v34);
      -[SISchemaClientEvent setTextToSpeechBegin:](v5, "setTextToSpeechBegin:", v35);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("textToSpeechEnd"));
    v36 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v210 = (void *)v36;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v37 = -[SISchemaTextToSpeechEnd initWithDictionary:]([SISchemaTextToSpeechEnd alloc], "initWithDictionary:", v36);
      -[SISchemaClientEvent setTextToSpeechEnd:](v5, "setTextToSpeechEnd:", v37);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("uiStateTransition"));
    v38 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v209 = (void *)v38;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v39 = -[SISchemaUIStateTransition initWithDictionary:]([SISchemaUIStateTransition alloc], "initWithDictionary:", v38);
      -[SISchemaClientEvent setUiStateTransition:](v5, "setUiStateTransition:", v39);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("clientFlow"));
    v40 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v208 = (void *)v40;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v41 = -[SISchemaClientFlow initWithDictionary:]([SISchemaClientFlow alloc], "initWithDictionary:", v40);
      -[SISchemaClientEvent setClientFlow:](v5, "setClientFlow:", v41);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dialogOutput"));
    v42 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v207 = (void *)v42;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v43 = -[SISchemaDialogOutput initWithDictionary:]([SISchemaDialogOutput alloc], "initWithDictionary:", v42);
      -[SISchemaClientEvent setDialogOutput:](v5, "setDialogOutput:", v43);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dictationEndPointStop"));
    v44 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v206 = (void *)v44;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v45 = -[SISchemaDictationEndPointStop initWithDictionary:]([SISchemaDictationEndPointStop alloc], "initWithDictionary:", v44);
      -[SISchemaClientEvent setDictationEndPointStop:](v5, "setDictationEndPointStop:", v45);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dictationEndPointCancel"));
    v46 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v205 = (void *)v46;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v47 = -[SISchemaDictationEndPointCancel initWithDictionary:]([SISchemaDictationEndPointCancel alloc], "initWithDictionary:", v46);
      -[SISchemaClientEvent setDictationEndPointCancel:](v5, "setDictationEndPointCancel:", v47);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dictationAlternativeSelected"));
    v48 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v204 = (void *)v48;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v49 = -[SISchemaDictationAlternativeSelected initWithDictionary:]([SISchemaDictationAlternativeSelected alloc], "initWithDictionary:", v48);
      -[SISchemaClientEvent setDictationAlternativeSelected:](v5, "setDictationAlternativeSelected:", v49);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dictationTranscriptionMetadata"));
    v50 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v203 = (void *)v50;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v51 = -[SISchemaDictationTranscriptionMetadata initWithDictionary:]([SISchemaDictationTranscriptionMetadata alloc], "initWithDictionary:", v50);
      -[SISchemaClientEvent setDictationTranscriptionMetadata:](v5, "setDictationTranscriptionMetadata:", v51);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("carPlayHeadUnitContext"));
    v52 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v202 = (void *)v52;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v53 = -[SISchemaCarPlayHeadUnitContext initWithDictionary:]([SISchemaCarPlayHeadUnitContext alloc], "initWithDictionary:", v52);
      -[SISchemaClientEvent setCarPlayHeadUnitContext:](v5, "setCarPlayHeadUnitContext:", v53);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("uufrCompletion"));
    v54 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v201 = (void *)v54;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v55 = -[SISchemaUUFRCompletion initWithDictionary:]([SISchemaUUFRCompletion alloc], "initWithDictionary:", v54);
      -[SISchemaClientEvent setUufrCompletion:](v5, "setUufrCompletion:", v55);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("uufrShown"));
    v56 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v200 = (void *)v56;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v57 = -[SISchemaUUFRShown initWithDictionary:]([SISchemaUUFRShown alloc], "initWithDictionary:", v56);
      -[SISchemaClientEvent setUufrShown:](v5, "setUufrShown:", v57);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("uufrSaid"));
    v58 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v199 = (void *)v58;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v59 = -[SISchemaUUFRSaid initWithDictionary:]([SISchemaUUFRSaid alloc], "initWithDictionary:", v58);
      -[SISchemaClientEvent setUufrSaid:](v5, "setUufrSaid:", v59);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("uufrFatalError"));
    v60 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v198 = (void *)v60;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v61 = -[SISchemaUUFRFatalError initWithDictionary:]([SISchemaUUFRFatalError alloc], "initWithDictionary:", v60);
      -[SISchemaClientEvent setUufrFatalError:](v5, "setUufrFatalError:", v61);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dictationAlternativesViewed"));
    v62 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v197 = (void *)v62;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v63 = -[SISchemaDictationAlternativesViewed initWithDictionary:]([SISchemaDictationAlternativesViewed alloc], "initWithDictionary:", v62);
      -[SISchemaClientEvent setDictationAlternativesViewed:](v5, "setDictationAlternativesViewed:", v63);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("intercomMessageRecorded"));
    v64 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v196 = (void *)v64;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v65 = -[SISchemaIntercomMessageRecorded initWithDictionary:]([SISchemaIntercomMessageRecorded alloc], "initWithDictionary:", v64);
      -[SISchemaClientEvent setIntercomMessageRecorded:](v5, "setIntercomMessageRecorded:", v65);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("casinoRelationship"));
    v66 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v195 = (void *)v66;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v67 = -[SISchemaCasinoRelationship initWithDictionary:]([SISchemaCasinoRelationship alloc], "initWithDictionary:", v66);
      -[SISchemaClientEvent setCasinoRelationship:](v5, "setCasinoRelationship:", v67);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("userViewRegionInteraction"));
    v68 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v194 = (void *)v68;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v69 = -[SISchemaUserViewRegionInteraction initWithDictionary:]([SISchemaUserViewRegionInteraction alloc], "initWithDictionary:", v68);
      -[SISchemaClientEvent setUserViewRegionInteraction:](v5, "setUserViewRegionInteraction:", v69);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("deviceLockStateChanged"));
    v70 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v193 = (void *)v70;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v71 = -[SISchemaDeviceLockStateChanged initWithDictionary:]([SISchemaDeviceLockStateChanged alloc], "initWithDictionary:", v70);
      -[SISchemaClientEvent setDeviceLockStateChanged:](v5, "setDeviceLockStateChanged:", v71);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiRequestCategorization"));
    v72 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v192 = (void *)v72;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v73 = -[SISchemaUEIRequestCategorization initWithDictionary:]([SISchemaUEIRequestCategorization alloc], "initWithDictionary:", v72);
      -[SISchemaClientEvent setUeiRequestCategorization:](v5, "setUeiRequestCategorization:", v73);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("audioStopRecordingStarted"));
    v74 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v191 = (void *)v74;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v75 = -[SISchemaAudioStopRecordingStarted initWithDictionary:]([SISchemaAudioStopRecordingStarted alloc], "initWithDictionary:", v74);
      -[SISchemaClientEvent setAudioStopRecordingStarted:](v5, "setAudioStopRecordingStarted:", v75);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiLaunchContext"));
    v76 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v190 = (void *)v76;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v77 = -[SISchemaUEILaunchContext initWithDictionary:]([SISchemaUEILaunchContext alloc], "initWithDictionary:", v76);
      -[SISchemaClientEvent setUeiLaunchContext:](v5, "setUeiLaunchContext:", v77);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiUserSpeakingContext"));
    v78 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v189 = (void *)v78;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v79 = -[SISchemaUEIUserSpeakingContext initWithDictionary:]([SISchemaUEIUserSpeakingContext alloc], "initWithDictionary:", v78);
      -[SISchemaClientEvent setUeiUserSpeakingContext:](v5, "setUeiUserSpeakingContext:", v79);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiUUFRReady"));
    v80 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v188 = (void *)v80;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v81 = -[SISchemaUEIUUFRReady initWithDictionary:]([SISchemaUEIUUFRReady alloc], "initWithDictionary:", v80);
      -[SISchemaClientEvent setUeiUUFRReady:](v5, "setUeiUUFRReady:", v81);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiUIRenderingContext"));
    v82 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v187 = (void *)v82;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v83 = -[SISchemaUEIUIRenderingContext initWithDictionary:]([SISchemaUEIUIRenderingContext alloc], "initWithDictionary:", v82);
      -[SISchemaClientEvent setUeiUIRenderingContext:](v5, "setUeiUIRenderingContext:", v83);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("pnrTextToSpeechRequestReceived"));
    v84 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v186 = (void *)v84;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v85 = -[SISchemaPNRTextToSpeechRequestReceived initWithDictionary:]([SISchemaPNRTextToSpeechRequestReceived alloc], "initWithDictionary:", v84);
      -[SISchemaClientEvent setPnrTextToSpeechRequestReceived:](v5, "setPnrTextToSpeechRequestReceived:", v85);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("pnrSpeechRecognitionSourceContext"));
    v86 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v185 = (void *)v86;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v87 = -[SISchemaPNRSpeechRecognitionSourceContext initWithDictionary:]([SISchemaPNRSpeechRecognitionSourceContext alloc], "initWithDictionary:", v86);
      -[SISchemaClientEvent setPnrSpeechRecognitionSourceContext:](v5, "setPnrSpeechRecognitionSourceContext:", v87);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("pnrFatalError"));
    v88 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v184 = (void *)v88;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v89 = -[SISchemaPNRFatalError initWithDictionary:]([SISchemaPNRFatalError alloc], "initWithDictionary:", v88);
      -[SISchemaClientEvent setPnrFatalError:](v5, "setPnrFatalError:", v89);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("turnMTERequest"));
    v90 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v183 = (void *)v90;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v91 = -[SISchemaTurnMTERequest initWithDictionary:]([SISchemaTurnMTERequest alloc], "initWithDictionary:", v90);
      -[SISchemaClientEvent setTurnMTERequest:](v5, "setTurnMTERequest:", v91);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("keyboardDismissed"));
    v92 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v182 = (void *)v92;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v93 = -[SISchemaKeyboardDismissed initWithDictionary:]([SISchemaKeyboardDismissed alloc], "initWithDictionary:", v92);
      -[SISchemaClientEvent setKeyboardDismissed:](v5, "setKeyboardDismissed:", v93);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("engagedAccessoryContext"));
    v94 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v181 = (void *)v94;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v95 = -[SISchemaEngagedAccessoryContext initWithDictionary:]([SISchemaEngagedAccessoryContext alloc], "initWithDictionary:", v94);
      -[SISchemaClientEvent setEngagedAccessoryContext:](v5, "setEngagedAccessoryContext:", v95);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("announceCarPlayBannerTapped"));
    v96 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v180 = (void *)v96;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v97 = -[SISchemaAnnounceCarPlayBannerTapped initWithDictionary:]([SISchemaAnnounceCarPlayBannerTapped alloc], "initWithDictionary:", v96);
      -[SISchemaClientEvent setAnnounceCarPlayBannerTapped:](v5, "setAnnounceCarPlayBannerTapped:", v97);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("announceCarPlayGlyphSettingToggled"));
    v98 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v179 = (void *)v98;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v99 = -[SISchemaAnnounceCarPlayGlyphSettingToggled initWithDictionary:]([SISchemaAnnounceCarPlayGlyphSettingToggled alloc], "initWithDictionary:", v98);
      -[SISchemaClientEvent setAnnounceCarPlayGlyphSettingToggled:](v5, "setAnnounceCarPlayGlyphSettingToggled:", v99);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dictationContentEdited"));
    v100 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v178 = (void *)v100;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v101 = -[SISchemaDictationContentEdited initWithDictionary:]([SISchemaDictationContentEdited alloc], "initWithDictionary:", v100);
      -[SISchemaClientEvent setDictationContentEdited:](v5, "setDictationContentEdited:", v101);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("uufrShownTier1"));
    v102 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v177 = (void *)v102;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v103 = -[SISchemaUUFRShownTier1 initWithDictionary:]([SISchemaUUFRShownTier1 alloc], "initWithDictionary:", v102);
      -[SISchemaClientEvent setUufrShownTier1:](v5, "setUufrShownTier1:", v103);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationPartialResultUpdated"));
    v104 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v176 = (void *)v104;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v105 = -[SISchemaUEIDictationPartialResultUpdated initWithDictionary:]([SISchemaUEIDictationPartialResultUpdated alloc], "initWithDictionary:", v104);
      -[SISchemaClientEvent setUeiDictationPartialResultUpdated:](v5, "setUeiDictationPartialResultUpdated:", v105);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationVoiceCommandExecuted"));
    v106 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v175 = (void *)v106;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v107 = -[SISchemaUEIDictationVoiceCommandExecuted initWithDictionary:]([SISchemaUEIDictationVoiceCommandExecuted alloc], "initWithDictionary:", v106);
      -[SISchemaClientEvent setUeiDictationVoiceCommandExecuted:](v5, "setUeiDictationVoiceCommandExecuted:", v107);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationInputModeSwitchContext"));
    v108 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v174 = (void *)v108;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v109 = -[SISchemaUEIDictationInputModeSwitchContext initWithDictionary:]([SISchemaUEIDictationInputModeSwitchContext alloc], "initWithDictionary:", v108);
      -[SISchemaClientEvent setUeiDictationInputModeSwitchContext:](v5, "setUeiDictationInputModeSwitchContext:", v109);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationToolTipDisplayContext"));
    v110 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v173 = (void *)v110;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v111 = -[SISchemaUEIDictationDiscoveryToolTipDisplayContext initWithDictionary:]([SISchemaUEIDictationDiscoveryToolTipDisplayContext alloc], "initWithDictionary:", v110);
      -[SISchemaClientEvent setUeiDictationToolTipDisplayContext:](v5, "setUeiDictationToolTipDisplayContext:", v111);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("hostPlatformViewAppearContext"));
    v112 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v172 = (void *)v112;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v113 = -[SISchemaUEIHostingPlatformViewAppearContext initWithDictionary:]([SISchemaUEIHostingPlatformViewAppearContext alloc], "initWithDictionary:", v112);
      -[SISchemaClientEvent setHostPlatformViewAppearContext:](v5, "setHostPlatformViewAppearContext:", v113);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("hostPlatformViewDisappearContext"));
    v114 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v171 = (void *)v114;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v115 = -[SISchemaUEIHostingPlatformViewDisappearContext initWithDictionary:]([SISchemaUEIHostingPlatformViewDisappearContext alloc], "initWithDictionary:", v114);
      -[SISchemaClientEvent setHostPlatformViewDisappearContext:](v5, "setHostPlatformViewDisappearContext:", v115);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationTranscriptionTokenized"));
    v116 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v170 = (void *)v116;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v117 = -[SISchemaUEIDictationTranscriptionTokenized initWithDictionary:]([SISchemaUEIDictationTranscriptionTokenized alloc], "initWithDictionary:", v116);
      -[SISchemaClientEvent setUeiDictationTranscriptionTokenized:](v5, "setUeiDictationTranscriptionTokenized:", v117);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("dictationAlternativesSelected"));
    v118 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v169 = (void *)v118;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v119 = -[SISchemaUEIDictationAlternativeConfusionPairsSelected initWithDictionary:]([SISchemaUEIDictationAlternativeConfusionPairsSelected alloc], "initWithDictionary:", v118);
      -[SISchemaClientEvent setDictationAlternativesSelected:](v5, "setDictationAlternativesSelected:", v119);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("uufrSelected"));
    v120 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v168 = (void *)v120;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v121 = -[SISchemaUUFRSelected initWithDictionary:]([SISchemaUUFRSelected alloc], "initWithDictionary:", v120);
      -[SISchemaClientEvent setUufrSelected:](v5, "setUufrSelected:", v121);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationAlternativeTextPairsSelected"));
    v122 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v167 = (void *)v122;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v123 = -[SISchemaUEIDictationAlternativeTextPairsSelected initWithDictionary:]([SISchemaUEIDictationAlternativeTextPairsSelected alloc], "initWithDictionary:", v122);
      -[SISchemaClientEvent setUeiDictationAlternativeTextPairsSelected:](v5, "setUeiDictationAlternativeTextPairsSelected:", v123);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiUserBargeInDetected"));
    v124 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v166 = (void *)v124;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v125 = -[SISchemaUEIUserBargeInDetected initWithDictionary:]([SISchemaUEIUserBargeInDetected alloc], "initWithDictionary:", v124);
      -[SISchemaClientEvent setUeiUserBargeInDetected:](v5, "setUeiUserBargeInDetected:", v125);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationEnablementPromptShown"));
    v126 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v165 = (void *)v126;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v127 = -[SISchemaUEIDictationEnablementPromptShown initWithDictionary:]([SISchemaUEIDictationEnablementPromptShown alloc], "initWithDictionary:", v126);
      -[SISchemaClientEvent setUeiDictationEnablementPromptShown:](v5, "setUeiDictationEnablementPromptShown:", v127);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiSiriCarCommandContext"));
    v128 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v164 = (void *)v128;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v129 = -[SISchemaUEISiriCarCommandContext initWithDictionary:]([SISchemaUEISiriCarCommandContext alloc], "initWithDictionary:", v128);
      -[SISchemaClientEvent setUeiSiriCarCommandContext:](v5, "setUeiSiriCarCommandContext:", v129);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiVisionSnippetDismissed"));
    v130 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v163 = (void *)v130;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v131 = -[SISchemaUEIVisionSnippetDismissed initWithDictionary:]([SISchemaUEIVisionSnippetDismissed alloc], "initWithDictionary:", v130);
      -[SISchemaClientEvent setUeiVisionSnippetDismissed:](v5, "setUeiVisionSnippetDismissed:", v131);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiSiriWasUnavailable"));
    v132 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v162 = (void *)v132;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v133 = -[SISchemaUEISiriWasUnavailable initWithDictionary:]([SISchemaUEISiriWasUnavailable alloc], "initWithDictionary:", v132);
      -[SISchemaClientEvent setUeiSiriWasUnavailable:](v5, "setUeiSiriWasUnavailable:", v133);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("preferredAudioRouteChanged"));
    v134 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    v161 = (void *)v134;
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v135 = -[SISchemaBluetoothCarPreferredAudioRouteChanged initWithDictionary:]([SISchemaBluetoothCarPreferredAudioRouteChanged alloc], "initWithDictionary:", v134);
      -[SISchemaClientEvent setPreferredAudioRouteChanged:](v5, "setPreferredAudioRouteChanged:", v135);

    }
    v160 = (void *)v6;
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationContentEditedTier1"));
    v136 = objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v137 = -[SISchemaUEIDictationContentEditedTier1 initWithDictionary:]([SISchemaUEIDictationContentEditedTier1 alloc], "initWithDictionary:", v136);
      -[SISchemaClientEvent setUeiDictationContentEditedTier1:](v5, "setUeiDictationContentEditedTier1:", v137);

    }
    v154 = (void *)v136;
    v159 = (void *)v8;
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationVoiceCommandUndoTapAction"));
    v138 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v139 = -[SISchemaUEIDictationVoiceCommandUndoTapAction initWithDictionary:]([SISchemaUEIDictationVoiceCommandUndoTapAction alloc], "initWithDictionary:", v138);
      -[SISchemaClientEvent setUeiDictationVoiceCommandUndoTapAction:](v5, "setUeiDictationVoiceCommandUndoTapAction:", v139);

    }
    v158 = (void *)v10;
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationVoiceCommandDisambiguationAction"));
    v140 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v141 = -[SISchemaUEIDictationVoiceCommandDisambiguationAction initWithDictionary:]([SISchemaUEIDictationVoiceCommandDisambiguationAction alloc], "initWithDictionary:", v140);
      -[SISchemaClientEvent setUeiDictationVoiceCommandDisambiguationAction:](v5, "setUeiDictationVoiceCommandDisambiguationAction:", v141);

    }
    v157 = (void *)v12;
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationVoiceCommandKeyboardAction"));
    v142 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v143 = -[SISchemaUEIDictationVoiceCommandKeyboardAction initWithDictionary:]([SISchemaUEIDictationVoiceCommandKeyboardAction alloc], "initWithDictionary:", v142);
      -[SISchemaClientEvent setUeiDictationVoiceCommandKeyboardAction:](v5, "setUeiDictationVoiceCommandKeyboardAction:", v143);

    }
    v156 = (void *)v14;
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationEuclidAlternativesEvent"));
    v144 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v145 = -[SISchemaUEIDictationEuclidAlternativesEvent initWithDictionary:]([SISchemaUEIDictationEuclidAlternativesEvent alloc], "initWithDictionary:", v144);
      -[SISchemaClientEvent setUeiDictationEuclidAlternativesEvent:](v5, "setUeiDictationEuclidAlternativesEvent:", v145);

    }
    v155 = (void *)v16;
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationEuclidAlternativesEventTier1"));
    v146 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v147 = -[SISchemaUEIDictationEuclidAlternativesEventTier1 initWithDictionary:]([SISchemaUEIDictationEuclidAlternativesEventTier1 alloc], "initWithDictionary:", v146);
      -[SISchemaClientEvent setUeiDictationEuclidAlternativesEventTier1:](v5, "setUeiDictationEuclidAlternativesEventTier1:", v147);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationEuclidSpeechAlternativesSelected"));
    v148 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v149 = -[SISchemaUEIDictationEuclidSpeechAlternativesSelected initWithDictionary:]([SISchemaUEIDictationEuclidSpeechAlternativesSelected alloc], "initWithDictionary:", v148);
      -[SISchemaClientEvent setUeiDictationEuclidSpeechAlternativesSelected:](v5, "setUeiDictationEuclidSpeechAlternativesSelected:", v149);

    }
    objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("ueiDictationEuclidSpeechAlternativesSelectedTier1"));
    v150 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v151 = -[SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 initWithDictionary:]([SISchemaUEIDictationEuclidSpeechAlternativesSelectedTier1 alloc], "initWithDictionary:", v150);
      -[SISchemaClientEvent setUeiDictationEuclidSpeechAlternativesSelectedTier1:](v5, "setUeiDictationEuclidSpeechAlternativesSelectedTier1:", v151);

    }
    v152 = v5;

  }
  return v5;
}

- (void)setEventType:(id)a3
{
  id v4;

  v4 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[SISchemaClientEvent setAudioFirstBufferRecorded:](self, "setAudioFirstBufferRecorded:", v4);
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      -[SISchemaClientEvent setAudioStopRecording:](self, "setAudioStopRecording:", v4);
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        -[SISchemaClientEvent setClientConversationTrace:](self, "setClientConversationTrace:", v4);
      }
      else
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          -[SISchemaClientEvent setDeviceDynamicContext:](self, "setDeviceDynamicContext:", v4);
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            -[SISchemaClientEvent setDeviceFixedContext:](self, "setDeviceFixedContext:", v4);
          }
          else
          {
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) != 0)
            {
              -[SISchemaClientEvent setDictationContext:](self, "setDictationContext:", v4);
            }
            else
            {
              objc_opt_class();
              if ((objc_opt_isKindOfClass() & 1) != 0)
              {
                -[SISchemaClientEvent setInvocation:](self, "setInvocation:", v4);
              }
              else
              {
                objc_opt_class();
                if ((objc_opt_isKindOfClass() & 1) != 0)
                {
                  -[SISchemaClientEvent setLocation:](self, "setLocation:", v4);
                }
                else
                {
                  objc_opt_class();
                  if ((objc_opt_isKindOfClass() & 1) != 0)
                  {
                    -[SISchemaClientEvent setPunchOut:](self, "setPunchOut:", v4);
                  }
                  else
                  {
                    objc_opt_class();
                    if ((objc_opt_isKindOfClass() & 1) != 0)
                    {
                      -[SISchemaClientEvent setSiriCue:](self, "setSiriCue:", v4);
                    }
                    else
                    {
                      objc_opt_class();
                      if ((objc_opt_isKindOfClass() & 1) != 0)
                      {
                        -[SISchemaClientEvent setUufrPresented:](self, "setUufrPresented:", v4);
                      }
                      else
                      {
                        objc_opt_class();
                        if ((objc_opt_isKindOfClass() & 1) != 0)
                        {
                          -[SISchemaClientEvent setSpeechTranscription:](self, "setSpeechTranscription:", v4);
                        }
                        else
                        {
                          objc_opt_class();
                          if ((objc_opt_isKindOfClass() & 1) != 0)
                          {
                            -[SISchemaClientEvent setTextToSpeechBegin:](self, "setTextToSpeechBegin:", v4);
                          }
                          else
                          {
                            objc_opt_class();
                            if ((objc_opt_isKindOfClass() & 1) != 0)
                            {
                              -[SISchemaClientEvent setTextToSpeechEnd:](self, "setTextToSpeechEnd:", v4);
                            }
                            else
                            {
                              objc_opt_class();
                              if ((objc_opt_isKindOfClass() & 1) != 0)
                              {
                                -[SISchemaClientEvent setUiStateTransition:](self, "setUiStateTransition:", v4);
                              }
                              else
                              {
                                objc_opt_class();
                                if ((objc_opt_isKindOfClass() & 1) != 0)
                                {
                                  -[SISchemaClientEvent setClientFlow:](self, "setClientFlow:", v4);
                                }
                                else
                                {
                                  objc_opt_class();
                                  if ((objc_opt_isKindOfClass() & 1) != 0)
                                  {
                                    -[SISchemaClientEvent setDialogOutput:](self, "setDialogOutput:", v4);
                                  }
                                  else
                                  {
                                    objc_opt_class();
                                    if ((objc_opt_isKindOfClass() & 1) != 0)
                                    {
                                      -[SISchemaClientEvent setDictationEndPointStop:](self, "setDictationEndPointStop:", v4);
                                    }
                                    else
                                    {
                                      objc_opt_class();
                                      if ((objc_opt_isKindOfClass() & 1) != 0)
                                      {
                                        -[SISchemaClientEvent setDictationEndPointCancel:](self, "setDictationEndPointCancel:", v4);
                                      }
                                      else
                                      {
                                        objc_opt_class();
                                        if ((objc_opt_isKindOfClass() & 1) != 0)
                                        {
                                          -[SISchemaClientEvent setDictationAlternativeSelected:](self, "setDictationAlternativeSelected:", v4);
                                        }
                                        else
                                        {
                                          objc_opt_class();
                                          if ((objc_opt_isKindOfClass() & 1) != 0)
                                          {
                                            -[SISchemaClientEvent setDictationTranscriptionMetadata:](self, "setDictationTranscriptionMetadata:", v4);
                                          }
                                          else
                                          {
                                            objc_opt_class();
                                            if ((objc_opt_isKindOfClass() & 1) != 0)
                                            {
                                              -[SISchemaClientEvent setCarPlayHeadUnitContext:](self, "setCarPlayHeadUnitContext:", v4);
                                            }
                                            else
                                            {
                                              objc_opt_class();
                                              if ((objc_opt_isKindOfClass() & 1) != 0)
                                              {
                                                -[SISchemaClientEvent setUufrCompletion:](self, "setUufrCompletion:", v4);
                                              }
                                              else
                                              {
                                                objc_opt_class();
                                                if ((objc_opt_isKindOfClass() & 1) != 0)
                                                {
                                                  -[SISchemaClientEvent setUufrShown:](self, "setUufrShown:", v4);
                                                }
                                                else
                                                {
                                                  objc_opt_class();
                                                  if ((objc_opt_isKindOfClass() & 1) != 0)
                                                  {
                                                    -[SISchemaClientEvent setUufrSaid:](self, "setUufrSaid:", v4);
                                                  }
                                                  else
                                                  {
                                                    objc_opt_class();
                                                    if ((objc_opt_isKindOfClass() & 1) != 0)
                                                    {
                                                      -[SISchemaClientEvent setUufrFatalError:](self, "setUufrFatalError:", v4);
                                                    }
                                                    else
                                                    {
                                                      objc_opt_class();
                                                      if ((objc_opt_isKindOfClass() & 1) != 0)
                                                      {
                                                        -[SISchemaClientEvent setDictationAlternativesViewed:](self, "setDictationAlternativesViewed:", v4);
                                                      }
                                                      else
                                                      {
                                                        objc_opt_class();
                                                        if ((objc_opt_isKindOfClass() & 1) != 0)
                                                        {
                                                          -[SISchemaClientEvent setIntercomMessageRecorded:](self, "setIntercomMessageRecorded:", v4);
                                                        }
                                                        else
                                                        {
                                                          objc_opt_class();
                                                          if ((objc_opt_isKindOfClass() & 1) != 0)
                                                          {
                                                            -[SISchemaClientEvent setCasinoRelationship:](self, "setCasinoRelationship:", v4);
                                                          }
                                                          else
                                                          {
                                                            objc_opt_class();
                                                            if ((objc_opt_isKindOfClass() & 1) != 0)
                                                            {
                                                              -[SISchemaClientEvent setUserViewRegionInteraction:](self, "setUserViewRegionInteraction:", v4);
                                                            }
                                                            else
                                                            {
                                                              objc_opt_class();
                                                              if ((objc_opt_isKindOfClass() & 1) != 0)
                                                              {
                                                                -[SISchemaClientEvent setDeviceLockStateChanged:](self, "setDeviceLockStateChanged:", v4);
                                                              }
                                                              else
                                                              {
                                                                objc_opt_class();
                                                                if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                {
                                                                  -[SISchemaClientEvent setUeiRequestCategorization:](self, "setUeiRequestCategorization:", v4);
                                                                }
                                                                else
                                                                {
                                                                  objc_opt_class();
                                                                  if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                  {
                                                                    -[SISchemaClientEvent setAudioStopRecordingStarted:](self, "setAudioStopRecordingStarted:", v4);
                                                                  }
                                                                  else
                                                                  {
                                                                    objc_opt_class();
                                                                    if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                    {
                                                                      -[SISchemaClientEvent setUeiLaunchContext:](self, "setUeiLaunchContext:", v4);
                                                                    }
                                                                    else
                                                                    {
                                                                      objc_opt_class();
                                                                      if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                      {
                                                                        -[SISchemaClientEvent setUeiUserSpeakingContext:](self, "setUeiUserSpeakingContext:", v4);
                                                                      }
                                                                      else
                                                                      {
                                                                        objc_opt_class();
                                                                        if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                        {
                                                                          -[SISchemaClientEvent setUeiUUFRReady:](self, "setUeiUUFRReady:", v4);
                                                                        }
                                                                        else
                                                                        {
                                                                          objc_opt_class();
                                                                          if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                          {
                                                                            -[SISchemaClientEvent setUeiUIRenderingContext:](self, "setUeiUIRenderingContext:", v4);
                                                                          }
                                                                          else
                                                                          {
                                                                            objc_opt_class();
                                                                            if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                            {
                                                                              -[SISchemaClientEvent setPnrTextToSpeechRequestReceived:](self, "setPnrTextToSpeechRequestReceived:", v4);
                                                                            }
                                                                            else
                                                                            {
                                                                              objc_opt_class();
                                                                              if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                              {
                                                                                -[SISchemaClientEvent setPnrSpeechRecognitionSourceContext:](self, "setPnrSpeechRecognitionSourceContext:", v4);
                                                                              }
                                                                              else
                                                                              {
                                                                                objc_opt_class();
                                                                                if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                {
                                                                                  -[SISchemaClientEvent setPnrFatalError:](self, "setPnrFatalError:", v4);
                                                                                }
                                                                                else
                                                                                {
                                                                                  objc_opt_class();
                                                                                  if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                  {
                                                                                    -[SISchemaClientEvent setTurnMTERequest:](self, "setTurnMTERequest:", v4);
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    objc_opt_class();
                                                                                    if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                    {
                                                                                      -[SISchemaClientEvent setKeyboardDismissed:](self, "setKeyboardDismissed:", v4);
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      objc_opt_class();
                                                                                      if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                      {
                                                                                        -[SISchemaClientEvent setEngagedAccessoryContext:](self, "setEngagedAccessoryContext:", v4);
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        objc_opt_class();
                                                                                        if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                        {
                                                                                          -[SISchemaClientEvent setAnnounceCarPlayBannerTapped:](self, "setAnnounceCarPlayBannerTapped:", v4);
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          objc_opt_class();
                                                                                          if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                          {
                                                                                            -[SISchemaClientEvent setAnnounceCarPlayGlyphSettingToggled:](self, "setAnnounceCarPlayGlyphSettingToggled:", v4);
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            objc_opt_class();
                                                                                            if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                            {
                                                                                              -[SISchemaClientEvent setDictationContentEdited:](self, "setDictationContentEdited:", v4);
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              objc_opt_class();
                                                                                              if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                              {
                                                                                                -[SISchemaClientEvent setUufrShownTier1:](self, "setUufrShownTier1:", v4);
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                objc_opt_class();
                                                                                                if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                {
                                                                                                  -[SISchemaClientEvent setUeiDictationPartialResultUpdated:](self, "setUeiDictationPartialResultUpdated:", v4);
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  objc_opt_class();
                                                                                                  if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                  {
                                                                                                    -[SISchemaClientEvent setUeiDictationVoiceCommandExecuted:](self, "setUeiDictationVoiceCommandExecuted:", v4);
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    objc_opt_class();
                                                                                                    if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                    {
                                                                                                      -[SISchemaClientEvent setUeiDictationInputModeSwitchContext:](self, "setUeiDictationInputModeSwitchContext:", v4);
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      objc_opt_class();
                                                                                                      if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                      {
                                                                                                        -[SISchemaClientEvent setUeiDictationToolTipDisplayContext:](self, "setUeiDictationToolTipDisplayContext:", v4);
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        objc_opt_class();
                                                                                                        if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                        {
                                                                                                          -[SISchemaClientEvent setHostPlatformViewAppearContext:](self, "setHostPlatformViewAppearContext:", v4);
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          objc_opt_class();
                                                                                                          if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                          {
                                                                                                            -[SISchemaClientEvent setHostPlatformViewDisappearContext:](self, "setHostPlatformViewDisappearContext:", v4);
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            objc_opt_class();
                                                                                                            if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                            {
                                                                                                              -[SISchemaClientEvent setUeiDictationTranscriptionTokenized:](self, "setUeiDictationTranscriptionTokenized:", v4);
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              objc_opt_class();
                                                                                                              if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                              {
                                                                                                                -[SISchemaClientEvent setDictationAlternativesSelected:](self, "setDictationAlternativesSelected:", v4);
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                objc_opt_class();
                                                                                                                if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                {
                                                                                                                  -[SISchemaClientEvent setUufrSelected:](self, "setUufrSelected:", v4);
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                  objc_opt_class();
                                                                                                                  if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                  {
                                                                                                                    -[SISchemaClientEvent setUeiDictationAlternativeTextPairsSelected:](self, "setUeiDictationAlternativeTextPairsSelected:", v4);
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    objc_opt_class();
                                                                                                                    if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                    {
                                                                                                                      -[SISchemaClientEvent setUeiUserBargeInDetected:](self, "setUeiUserBargeInDetected:", v4);
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      objc_opt_class();
                                                                                                                      if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                      {
                                                                                                                        -[SISchemaClientEvent setUeiDictationEnablementPromptShown:](self, "setUeiDictationEnablementPromptShown:", v4);
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        objc_opt_class();
                                                                                                                        if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                        {
                                                                                                                          -[SISchemaClientEvent setUeiSiriCarCommandContext:](self, "setUeiSiriCarCommandContext:", v4);
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          objc_opt_class();
                                                                                                                          if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                          {
                                                                                                                            -[SISchemaClientEvent setUeiVisionSnippetDismissed:](self, "setUeiVisionSnippetDismissed:", v4);
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            objc_opt_class();
                                                                                                                            if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                            {
                                                                                                                              -[SISchemaClientEvent setUeiSiriWasUnavailable:](self, "setUeiSiriWasUnavailable:", v4);
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              objc_opt_class();
                                                                                                                              if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                              {
                                                                                                                                -[SISchemaClientEvent setPreferredAudioRouteChanged:](self, "setPreferredAudioRouteChanged:", v4);
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                objc_opt_class();
                                                                                                                                if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                                {
                                                                                                                                  -[SISchemaClientEvent setUeiDictationContentEditedTier1:](self, "setUeiDictationContentEditedTier1:", v4);
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                  objc_opt_class();
                                                                                                                                  if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                                  {
                                                                                                                                    -[SISchemaClientEvent setUeiDictationVoiceCommandUndoTapAction:](self, "setUeiDictationVoiceCommandUndoTapAction:", v4);
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                    objc_opt_class();
                                                                                                                                    if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                                    {
                                                                                                                                      -[SISchemaClientEvent setUeiDictationVoiceCommandDisambiguationAction:](self, "setUeiDictationVoiceCommandDisambiguationAction:", v4);
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      objc_opt_class();
                                                                                                                                      if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                                      {
                                                                                                                                        -[SISchemaClientEvent setUeiDictationVoiceCommandKeyboardAction:](self, "setUeiDictationVoiceCommandKeyboardAction:", v4);
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
                                                                                                                                        objc_opt_class();
                                                                                                                                        if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                                        {
                                                                                                                                          -[SISchemaClientEvent setUeiDictationEuclidAlternativesEvent:](self, "setUeiDictationEuclidAlternativesEvent:", v4);
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                          objc_opt_class();
                                                                                                                                          if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                                          {
                                                                                                                                            -[SISchemaClientEvent setUeiDictationEuclidAlternativesEventTier1:](self, "setUeiDictationEuclidAlternativesEventTier1:", v4);
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            objc_opt_class();
                                                                                                                                            if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                                            {
                                                                                                                                              -[SISchemaClientEvent setUeiDictationEuclidSpeechAlternativesSelected:](self, "setUeiDictationEuclidSpeechAlternativesSelected:", v4);
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                              objc_opt_class();
                                                                                                                                              if ((objc_opt_isKindOfClass() & 1) != 0)
                                                                                                                                                -[SISchemaClientEvent setUeiDictationEuclidSpeechAlternativesSelectedTier1:](self, "setUeiDictationEuclidSpeechAlternativesSelectedTier1:", v4);
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

}

- (id)getEventType
{
  id v2;
  int *v3;

  v2 = 0;
  v3 = &OBJC_IVAR___SISchemaClientEvent__audioFirstBufferRecorded;
  switch(self->_whichEvent_Type)
  {
    case 0x65uLL:
      goto LABEL_72;
    case 0x66uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__audioStopRecording;
      goto LABEL_72;
    case 0x67uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__clientConversationTrace;
      goto LABEL_72;
    case 0x68uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__deviceDynamicContext;
      goto LABEL_72;
    case 0x69uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__deviceFixedContext;
      goto LABEL_72;
    case 0x6AuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__dictationContext;
      goto LABEL_72;
    case 0x6BuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__invocation;
      goto LABEL_72;
    case 0x6CuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__location;
      goto LABEL_72;
    case 0x6DuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__punchOut;
      goto LABEL_72;
    case 0x6FuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__siriCue;
      goto LABEL_72;
    case 0x70uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__uufrPresented;
      goto LABEL_72;
    case 0x71uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__speechTranscription;
      goto LABEL_72;
    case 0x72uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__textToSpeechBegin;
      goto LABEL_72;
    case 0x73uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__textToSpeechEnd;
      goto LABEL_72;
    case 0x74uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__uiStateTransition;
      goto LABEL_72;
    case 0x75uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__clientFlow;
      goto LABEL_72;
    case 0x76uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__dialogOutput;
      goto LABEL_72;
    case 0x77uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__dictationEndPointStop;
      goto LABEL_72;
    case 0x78uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__dictationEndPointCancel;
      goto LABEL_72;
    case 0x79uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__dictationAlternativeSelected;
      goto LABEL_72;
    case 0x7AuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__dictationTranscriptionMetadata;
      goto LABEL_72;
    case 0x7BuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__carPlayHeadUnitContext;
      goto LABEL_72;
    case 0x7CuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__uufrCompletion;
      goto LABEL_72;
    case 0x7DuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__uufrShown;
      goto LABEL_72;
    case 0x7EuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__uufrSaid;
      goto LABEL_72;
    case 0x7FuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__uufrFatalError;
      goto LABEL_72;
    case 0x80uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__dictationAlternativesViewed;
      goto LABEL_72;
    case 0x81uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__intercomMessageRecorded;
      goto LABEL_72;
    case 0x82uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__casinoRelationship;
      goto LABEL_72;
    case 0x83uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__userViewRegionInteraction;
      goto LABEL_72;
    case 0x84uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__deviceLockStateChanged;
      goto LABEL_72;
    case 0x85uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiRequestCategorization;
      goto LABEL_72;
    case 0x86uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__audioStopRecordingStarted;
      goto LABEL_72;
    case 0x87uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiLaunchContext;
      goto LABEL_72;
    case 0x88uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiUserSpeakingContext;
      goto LABEL_72;
    case 0x89uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiUUFRReady;
      goto LABEL_72;
    case 0x8AuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiUIRenderingContext;
      goto LABEL_72;
    case 0x8BuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__pnrTextToSpeechRequestReceived;
      goto LABEL_72;
    case 0x8CuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__pnrSpeechRecognitionSourceContext;
      goto LABEL_72;
    case 0x8DuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__pnrFatalError;
      goto LABEL_72;
    case 0x8EuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__turnMTERequest;
      goto LABEL_72;
    case 0x8FuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__keyboardDismissed;
      goto LABEL_72;
    case 0x90uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__engagedAccessoryContext;
      goto LABEL_72;
    case 0x91uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__announceCarPlayBannerTapped;
      goto LABEL_72;
    case 0x92uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__announceCarPlayGlyphSettingToggled;
      goto LABEL_72;
    case 0x93uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__dictationContentEdited;
      goto LABEL_72;
    case 0x94uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__uufrShownTier1;
      goto LABEL_72;
    case 0x96uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationPartialResultUpdated;
      goto LABEL_72;
    case 0x97uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationVoiceCommandExecuted;
      goto LABEL_72;
    case 0x98uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationInputModeSwitchContext;
      goto LABEL_72;
    case 0x99uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationToolTipDisplayContext;
      goto LABEL_72;
    case 0x9AuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__hostPlatformViewAppearContext;
      goto LABEL_72;
    case 0x9BuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__hostPlatformViewDisappearContext;
      goto LABEL_72;
    case 0x9CuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationTranscriptionTokenized;
      goto LABEL_72;
    case 0x9DuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__dictationAlternativesSelected;
      goto LABEL_72;
    case 0x9EuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__uufrSelected;
      goto LABEL_72;
    case 0x9FuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationAlternativeTextPairsSelected;
      goto LABEL_72;
    case 0xA0uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiUserBargeInDetected;
      goto LABEL_72;
    case 0xA1uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEnablementPromptShown;
      goto LABEL_72;
    case 0xA2uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiSiriCarCommandContext;
      goto LABEL_72;
    case 0xA3uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiVisionSnippetDismissed;
      goto LABEL_72;
    case 0xA4uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiSiriWasUnavailable;
      goto LABEL_72;
    case 0xA5uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__preferredAudioRouteChanged;
      goto LABEL_72;
    case 0xA6uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationContentEditedTier1;
      goto LABEL_72;
    case 0xA7uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationVoiceCommandUndoTapAction;
      goto LABEL_72;
    case 0xA8uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationVoiceCommandDisambiguationAction;
      goto LABEL_72;
    case 0xA9uLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationVoiceCommandKeyboardAction;
      goto LABEL_72;
    case 0xAAuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEuclidAlternativesEvent;
      goto LABEL_72;
    case 0xABuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEuclidAlternativesEventTier1;
      goto LABEL_72;
    case 0xACuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEuclidSpeechAlternativesSelected;
      goto LABEL_72;
    case 0xADuLL:
      v3 = &OBJC_IVAR___SISchemaClientEvent__ueiDictationEuclidSpeechAlternativesSelectedTier1;
LABEL_72:
      v2 = *(id *)((char *)&self->super.super.super.super.isa + *v3);
      break;
    default:
      return v2;
  }
  return v2;
}

- (unint64_t)whichEvent_Type
{
  return self->_whichEvent_Type;
}

- (SISchemaClientEventMetadata)eventMetadata
{
  return self->_eventMetadata;
}

- (void)setEventMetadata:(id)a3
{
  objc_storeStrong((id *)&self->_eventMetadata, a3);
}

- (SISchemaClientTransportEventMetadata)transportMetadata
{
  return self->_transportMetadata;
}

- (void)setTransportMetadata:(id)a3
{
  objc_storeStrong((id *)&self->_transportMetadata, a3);
}

- (void)setHasEventMetadata:(BOOL)a3
{
  self->_hasEventMetadata = a3;
}

- (void)setHasTransportMetadata:(BOOL)a3
{
  self->_hasTransportMetadata = a3;
}

- (BOOL)hasAudioFirstBufferRecorded
{
  return self->_hasAudioFirstBufferRecorded;
}

- (void)setHasAudioFirstBufferRecorded:(BOOL)a3
{
  self->_hasAudioFirstBufferRecorded = a3;
}

- (BOOL)hasAudioStopRecording
{
  return self->_hasAudioStopRecording;
}

- (void)setHasAudioStopRecording:(BOOL)a3
{
  self->_hasAudioStopRecording = a3;
}

- (BOOL)hasClientConversationTrace
{
  return self->_hasClientConversationTrace;
}

- (void)setHasClientConversationTrace:(BOOL)a3
{
  self->_hasClientConversationTrace = a3;
}

- (BOOL)hasDeviceDynamicContext
{
  return self->_hasDeviceDynamicContext;
}

- (void)setHasDeviceDynamicContext:(BOOL)a3
{
  self->_hasDeviceDynamicContext = a3;
}

- (BOOL)hasDeviceFixedContext
{
  return self->_hasDeviceFixedContext;
}

- (void)setHasDeviceFixedContext:(BOOL)a3
{
  self->_hasDeviceFixedContext = a3;
}

- (BOOL)hasDictationContext
{
  return self->_hasDictationContext;
}

- (void)setHasDictationContext:(BOOL)a3
{
  self->_hasDictationContext = a3;
}

- (BOOL)hasInvocation
{
  return self->_hasInvocation;
}

- (void)setHasInvocation:(BOOL)a3
{
  self->_hasInvocation = a3;
}

- (BOOL)hasLocation
{
  return self->_hasLocation;
}

- (void)setHasLocation:(BOOL)a3
{
  self->_hasLocation = a3;
}

- (BOOL)hasPunchOut
{
  return self->_hasPunchOut;
}

- (void)setHasPunchOut:(BOOL)a3
{
  self->_hasPunchOut = a3;
}

- (BOOL)hasSiriCue
{
  return self->_hasSiriCue;
}

- (void)setHasSiriCue:(BOOL)a3
{
  self->_hasSiriCue = a3;
}

- (BOOL)hasUufrPresented
{
  return self->_hasUufrPresented;
}

- (void)setHasUufrPresented:(BOOL)a3
{
  self->_hasUufrPresented = a3;
}

- (BOOL)hasSpeechTranscription
{
  return self->_hasSpeechTranscription;
}

- (void)setHasSpeechTranscription:(BOOL)a3
{
  self->_hasSpeechTranscription = a3;
}

- (BOOL)hasTextToSpeechBegin
{
  return self->_hasTextToSpeechBegin;
}

- (void)setHasTextToSpeechBegin:(BOOL)a3
{
  self->_hasTextToSpeechBegin = a3;
}

- (BOOL)hasTextToSpeechEnd
{
  return self->_hasTextToSpeechEnd;
}

- (void)setHasTextToSpeechEnd:(BOOL)a3
{
  self->_hasTextToSpeechEnd = a3;
}

- (BOOL)hasUiStateTransition
{
  return self->_hasUiStateTransition;
}

- (void)setHasUiStateTransition:(BOOL)a3
{
  self->_hasUiStateTransition = a3;
}

- (BOOL)hasClientFlow
{
  return self->_hasClientFlow;
}

- (void)setHasClientFlow:(BOOL)a3
{
  self->_hasClientFlow = a3;
}

- (BOOL)hasDialogOutput
{
  return self->_hasDialogOutput;
}

- (void)setHasDialogOutput:(BOOL)a3
{
  self->_hasDialogOutput = a3;
}

- (BOOL)hasDictationEndPointStop
{
  return self->_hasDictationEndPointStop;
}

- (void)setHasDictationEndPointStop:(BOOL)a3
{
  self->_hasDictationEndPointStop = a3;
}

- (BOOL)hasDictationEndPointCancel
{
  return self->_hasDictationEndPointCancel;
}

- (void)setHasDictationEndPointCancel:(BOOL)a3
{
  self->_hasDictationEndPointCancel = a3;
}

- (BOOL)hasDictationAlternativeSelected
{
  return self->_hasDictationAlternativeSelected;
}

- (void)setHasDictationAlternativeSelected:(BOOL)a3
{
  self->_hasDictationAlternativeSelected = a3;
}

- (BOOL)hasDictationTranscriptionMetadata
{
  return self->_hasDictationTranscriptionMetadata;
}

- (void)setHasDictationTranscriptionMetadata:(BOOL)a3
{
  self->_hasDictationTranscriptionMetadata = a3;
}

- (BOOL)hasCarPlayHeadUnitContext
{
  return self->_hasCarPlayHeadUnitContext;
}

- (void)setHasCarPlayHeadUnitContext:(BOOL)a3
{
  self->_hasCarPlayHeadUnitContext = a3;
}

- (BOOL)hasUufrCompletion
{
  return self->_hasUufrCompletion;
}

- (void)setHasUufrCompletion:(BOOL)a3
{
  self->_hasUufrCompletion = a3;
}

- (BOOL)hasUufrShown
{
  return self->_hasUufrShown;
}

- (void)setHasUufrShown:(BOOL)a3
{
  self->_hasUufrShown = a3;
}

- (BOOL)hasUufrSaid
{
  return self->_hasUufrSaid;
}

- (void)setHasUufrSaid:(BOOL)a3
{
  self->_hasUufrSaid = a3;
}

- (BOOL)hasUufrFatalError
{
  return self->_hasUufrFatalError;
}

- (void)setHasUufrFatalError:(BOOL)a3
{
  self->_hasUufrFatalError = a3;
}

- (BOOL)hasDictationAlternativesViewed
{
  return self->_hasDictationAlternativesViewed;
}

- (void)setHasDictationAlternativesViewed:(BOOL)a3
{
  self->_hasDictationAlternativesViewed = a3;
}

- (BOOL)hasIntercomMessageRecorded
{
  return self->_hasIntercomMessageRecorded;
}

- (void)setHasIntercomMessageRecorded:(BOOL)a3
{
  self->_hasIntercomMessageRecorded = a3;
}

- (BOOL)hasCasinoRelationship
{
  return self->_hasCasinoRelationship;
}

- (void)setHasCasinoRelationship:(BOOL)a3
{
  self->_hasCasinoRelationship = a3;
}

- (BOOL)hasUserViewRegionInteraction
{
  return self->_hasUserViewRegionInteraction;
}

- (void)setHasUserViewRegionInteraction:(BOOL)a3
{
  self->_hasUserViewRegionInteraction = a3;
}

- (BOOL)hasDeviceLockStateChanged
{
  return self->_hasDeviceLockStateChanged;
}

- (void)setHasDeviceLockStateChanged:(BOOL)a3
{
  self->_hasDeviceLockStateChanged = a3;
}

- (BOOL)hasUeiRequestCategorization
{
  return self->_hasUeiRequestCategorization;
}

- (void)setHasUeiRequestCategorization:(BOOL)a3
{
  self->_hasUeiRequestCategorization = a3;
}

- (BOOL)hasAudioStopRecordingStarted
{
  return self->_hasAudioStopRecordingStarted;
}

- (void)setHasAudioStopRecordingStarted:(BOOL)a3
{
  self->_hasAudioStopRecordingStarted = a3;
}

- (BOOL)hasUeiLaunchContext
{
  return self->_hasUeiLaunchContext;
}

- (void)setHasUeiLaunchContext:(BOOL)a3
{
  self->_hasUeiLaunchContext = a3;
}

- (BOOL)hasUeiUserSpeakingContext
{
  return self->_hasUeiUserSpeakingContext;
}

- (void)setHasUeiUserSpeakingContext:(BOOL)a3
{
  self->_hasUeiUserSpeakingContext = a3;
}

- (BOOL)hasUeiUUFRReady
{
  return self->_hasUeiUUFRReady;
}

- (void)setHasUeiUUFRReady:(BOOL)a3
{
  self->_hasUeiUUFRReady = a3;
}

- (BOOL)hasUeiUIRenderingContext
{
  return self->_hasUeiUIRenderingContext;
}

- (void)setHasUeiUIRenderingContext:(BOOL)a3
{
  self->_hasUeiUIRenderingContext = a3;
}

- (BOOL)hasPnrTextToSpeechRequestReceived
{
  return self->_hasPnrTextToSpeechRequestReceived;
}

- (void)setHasPnrTextToSpeechRequestReceived:(BOOL)a3
{
  self->_hasPnrTextToSpeechRequestReceived = a3;
}

- (BOOL)hasPnrSpeechRecognitionSourceContext
{
  return self->_hasPnrSpeechRecognitionSourceContext;
}

- (void)setHasPnrSpeechRecognitionSourceContext:(BOOL)a3
{
  self->_hasPnrSpeechRecognitionSourceContext = a3;
}

- (BOOL)hasPnrFatalError
{
  return self->_hasPnrFatalError;
}

- (void)setHasPnrFatalError:(BOOL)a3
{
  self->_hasPnrFatalError = a3;
}

- (BOOL)hasTurnMTERequest
{
  return self->_hasTurnMTERequest;
}

- (void)setHasTurnMTERequest:(BOOL)a3
{
  self->_hasTurnMTERequest = a3;
}

- (BOOL)hasKeyboardDismissed
{
  return self->_hasKeyboardDismissed;
}

- (void)setHasKeyboardDismissed:(BOOL)a3
{
  self->_hasKeyboardDismissed = a3;
}

- (BOOL)hasEngagedAccessoryContext
{
  return self->_hasEngagedAccessoryContext;
}

- (void)setHasEngagedAccessoryContext:(BOOL)a3
{
  self->_hasEngagedAccessoryContext = a3;
}

- (BOOL)hasAnnounceCarPlayBannerTapped
{
  return self->_hasAnnounceCarPlayBannerTapped;
}

- (void)setHasAnnounceCarPlayBannerTapped:(BOOL)a3
{
  self->_hasAnnounceCarPlayBannerTapped = a3;
}

- (BOOL)hasAnnounceCarPlayGlyphSettingToggled
{
  return self->_hasAnnounceCarPlayGlyphSettingToggled;
}

- (void)setHasAnnounceCarPlayGlyphSettingToggled:(BOOL)a3
{
  self->_hasAnnounceCarPlayGlyphSettingToggled = a3;
}

- (BOOL)hasDictationContentEdited
{
  return self->_hasDictationContentEdited;
}

- (void)setHasDictationContentEdited:(BOOL)a3
{
  self->_hasDictationContentEdited = a3;
}

- (BOOL)hasUufrShownTier1
{
  return self->_hasUufrShownTier1;
}

- (void)setHasUufrShownTier1:(BOOL)a3
{
  self->_hasUufrShownTier1 = a3;
}

- (BOOL)hasUeiDictationPartialResultUpdated
{
  return self->_hasUeiDictationPartialResultUpdated;
}

- (void)setHasUeiDictationPartialResultUpdated:(BOOL)a3
{
  self->_hasUeiDictationPartialResultUpdated = a3;
}

- (BOOL)hasUeiDictationVoiceCommandExecuted
{
  return self->_hasUeiDictationVoiceCommandExecuted;
}

- (void)setHasUeiDictationVoiceCommandExecuted:(BOOL)a3
{
  self->_hasUeiDictationVoiceCommandExecuted = a3;
}

- (BOOL)hasUeiDictationInputModeSwitchContext
{
  return self->_hasUeiDictationInputModeSwitchContext;
}

- (void)setHasUeiDictationInputModeSwitchContext:(BOOL)a3
{
  self->_hasUeiDictationInputModeSwitchContext = a3;
}

- (BOOL)hasUeiDictationToolTipDisplayContext
{
  return self->_hasUeiDictationToolTipDisplayContext;
}

- (void)setHasUeiDictationToolTipDisplayContext:(BOOL)a3
{
  self->_hasUeiDictationToolTipDisplayContext = a3;
}

- (BOOL)hasHostPlatformViewAppearContext
{
  return self->_hasHostPlatformViewAppearContext;
}

- (void)setHasHostPlatformViewAppearContext:(BOOL)a3
{
  self->_hasHostPlatformViewAppearContext = a3;
}

- (BOOL)hasHostPlatformViewDisappearContext
{
  return self->_hasHostPlatformViewDisappearContext;
}

- (void)setHasHostPlatformViewDisappearContext:(BOOL)a3
{
  self->_hasHostPlatformViewDisappearContext = a3;
}

- (BOOL)hasUeiDictationTranscriptionTokenized
{
  return self->_hasUeiDictationTranscriptionTokenized;
}

- (void)setHasUeiDictationTranscriptionTokenized:(BOOL)a3
{
  self->_hasUeiDictationTranscriptionTokenized = a3;
}

- (BOOL)hasDictationAlternativesSelected
{
  return self->_hasDictationAlternativesSelected;
}

- (void)setHasDictationAlternativesSelected:(BOOL)a3
{
  self->_hasDictationAlternativesSelected = a3;
}

- (BOOL)hasUufrSelected
{
  return self->_hasUufrSelected;
}

- (void)setHasUufrSelected:(BOOL)a3
{
  self->_hasUufrSelected = a3;
}

- (BOOL)hasUeiDictationAlternativeTextPairsSelected
{
  return self->_hasUeiDictationAlternativeTextPairsSelected;
}

- (void)setHasUeiDictationAlternativeTextPairsSelected:(BOOL)a3
{
  self->_hasUeiDictationAlternativeTextPairsSelected = a3;
}

- (BOOL)hasUeiUserBargeInDetected
{
  return self->_hasUeiUserBargeInDetected;
}

- (void)setHasUeiUserBargeInDetected:(BOOL)a3
{
  self->_hasUeiUserBargeInDetected = a3;
}

- (BOOL)hasUeiDictationEnablementPromptShown
{
  return self->_hasUeiDictationEnablementPromptShown;
}

- (void)setHasUeiDictationEnablementPromptShown:(BOOL)a3
{
  self->_hasUeiDictationEnablementPromptShown = a3;
}

- (BOOL)hasUeiSiriCarCommandContext
{
  return self->_hasUeiSiriCarCommandContext;
}

- (void)setHasUeiSiriCarCommandContext:(BOOL)a3
{
  self->_hasUeiSiriCarCommandContext = a3;
}

- (BOOL)hasUeiVisionSnippetDismissed
{
  return self->_hasUeiVisionSnippetDismissed;
}

- (void)setHasUeiVisionSnippetDismissed:(BOOL)a3
{
  self->_hasUeiVisionSnippetDismissed = a3;
}

- (BOOL)hasUeiSiriWasUnavailable
{
  return self->_hasUeiSiriWasUnavailable;
}

- (void)setHasUeiSiriWasUnavailable:(BOOL)a3
{
  self->_hasUeiSiriWasUnavailable = a3;
}

- (BOOL)hasPreferredAudioRouteChanged
{
  return self->_hasPreferredAudioRouteChanged;
}

- (void)setHasPreferredAudioRouteChanged:(BOOL)a3
{
  self->_hasPreferredAudioRouteChanged = a3;
}

- (BOOL)hasUeiDictationContentEditedTier1
{
  return self->_hasUeiDictationContentEditedTier1;
}

- (void)setHasUeiDictationContentEditedTier1:(BOOL)a3
{
  self->_hasUeiDictationContentEditedTier1 = a3;
}

- (BOOL)hasUeiDictationVoiceCommandUndoTapAction
{
  return self->_hasUeiDictationVoiceCommandUndoTapAction;
}

- (void)setHasUeiDictationVoiceCommandUndoTapAction:(BOOL)a3
{
  self->_hasUeiDictationVoiceCommandUndoTapAction = a3;
}

- (BOOL)hasUeiDictationVoiceCommandDisambiguationAction
{
  return self->_hasUeiDictationVoiceCommandDisambiguationAction;
}

- (void)setHasUeiDictationVoiceCommandDisambiguationAction:(BOOL)a3
{
  self->_hasUeiDictationVoiceCommandDisambiguationAction = a3;
}

- (BOOL)hasUeiDictationVoiceCommandKeyboardAction
{
  return self->_hasUeiDictationVoiceCommandKeyboardAction;
}

- (void)setHasUeiDictationVoiceCommandKeyboardAction:(BOOL)a3
{
  self->_hasUeiDictationVoiceCommandKeyboardAction = a3;
}

- (BOOL)hasUeiDictationEuclidAlternativesEvent
{
  return self->_hasUeiDictationEuclidAlternativesEvent;
}

- (void)setHasUeiDictationEuclidAlternativesEvent:(BOOL)a3
{
  self->_hasUeiDictationEuclidAlternativesEvent = a3;
}

- (BOOL)hasUeiDictationEuclidAlternativesEventTier1
{
  return self->_hasUeiDictationEuclidAlternativesEventTier1;
}

- (void)setHasUeiDictationEuclidAlternativesEventTier1:(BOOL)a3
{
  self->_hasUeiDictationEuclidAlternativesEventTier1 = a3;
}

- (BOOL)hasUeiDictationEuclidSpeechAlternativesSelected
{
  return self->_hasUeiDictationEuclidSpeechAlternativesSelected;
}

- (void)setHasUeiDictationEuclidSpeechAlternativesSelected:(BOOL)a3
{
  self->_hasUeiDictationEuclidSpeechAlternativesSelected = a3;
}

- (BOOL)hasUeiDictationEuclidSpeechAlternativesSelectedTier1
{
  return self->_hasUeiDictationEuclidSpeechAlternativesSelectedTier1;
}

- (void)setHasUeiDictationEuclidSpeechAlternativesSelectedTier1:(BOOL)a3
{
  self->_hasUeiDictationEuclidSpeechAlternativesSelectedTier1 = a3;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_ueiDictationEuclidSpeechAlternativesSelectedTier1, 0);
  objc_storeStrong((id *)&self->_ueiDictationEuclidSpeechAlternativesSelected, 0);
  objc_storeStrong((id *)&self->_ueiDictationEuclidAlternativesEventTier1, 0);
  objc_storeStrong((id *)&self->_ueiDictationEuclidAlternativesEvent, 0);
  objc_storeStrong((id *)&self->_ueiDictationVoiceCommandKeyboardAction, 0);
  objc_storeStrong((id *)&self->_ueiDictationVoiceCommandDisambiguationAction, 0);
  objc_storeStrong((id *)&self->_ueiDictationVoiceCommandUndoTapAction, 0);
  objc_storeStrong((id *)&self->_ueiDictationContentEditedTier1, 0);
  objc_storeStrong((id *)&self->_preferredAudioRouteChanged, 0);
  objc_storeStrong((id *)&self->_ueiSiriWasUnavailable, 0);
  objc_storeStrong((id *)&self->_ueiVisionSnippetDismissed, 0);
  objc_storeStrong((id *)&self->_ueiSiriCarCommandContext, 0);
  objc_storeStrong((id *)&self->_ueiDictationEnablementPromptShown, 0);
  objc_storeStrong((id *)&self->_ueiUserBargeInDetected, 0);
  objc_storeStrong((id *)&self->_ueiDictationAlternativeTextPairsSelected, 0);
  objc_storeStrong((id *)&self->_uufrSelected, 0);
  objc_storeStrong((id *)&self->_dictationAlternativesSelected, 0);
  objc_storeStrong((id *)&self->_ueiDictationTranscriptionTokenized, 0);
  objc_storeStrong((id *)&self->_hostPlatformViewDisappearContext, 0);
  objc_storeStrong((id *)&self->_hostPlatformViewAppearContext, 0);
  objc_storeStrong((id *)&self->_ueiDictationToolTipDisplayContext, 0);
  objc_storeStrong((id *)&self->_ueiDictationInputModeSwitchContext, 0);
  objc_storeStrong((id *)&self->_ueiDictationVoiceCommandExecuted, 0);
  objc_storeStrong((id *)&self->_ueiDictationPartialResultUpdated, 0);
  objc_storeStrong((id *)&self->_uufrShownTier1, 0);
  objc_storeStrong((id *)&self->_dictationContentEdited, 0);
  objc_storeStrong((id *)&self->_announceCarPlayGlyphSettingToggled, 0);
  objc_storeStrong((id *)&self->_announceCarPlayBannerTapped, 0);
  objc_storeStrong((id *)&self->_engagedAccessoryContext, 0);
  objc_storeStrong((id *)&self->_keyboardDismissed, 0);
  objc_storeStrong((id *)&self->_turnMTERequest, 0);
  objc_storeStrong((id *)&self->_pnrFatalError, 0);
  objc_storeStrong((id *)&self->_pnrSpeechRecognitionSourceContext, 0);
  objc_storeStrong((id *)&self->_pnrTextToSpeechRequestReceived, 0);
  objc_storeStrong((id *)&self->_ueiUIRenderingContext, 0);
  objc_storeStrong((id *)&self->_ueiUUFRReady, 0);
  objc_storeStrong((id *)&self->_ueiUserSpeakingContext, 0);
  objc_storeStrong((id *)&self->_ueiLaunchContext, 0);
  objc_storeStrong((id *)&self->_audioStopRecordingStarted, 0);
  objc_storeStrong((id *)&self->_ueiRequestCategorization, 0);
  objc_storeStrong((id *)&self->_deviceLockStateChanged, 0);
  objc_storeStrong((id *)&self->_userViewRegionInteraction, 0);
  objc_storeStrong((id *)&self->_casinoRelationship, 0);
  objc_storeStrong((id *)&self->_intercomMessageRecorded, 0);
  objc_storeStrong((id *)&self->_dictationAlternativesViewed, 0);
  objc_storeStrong((id *)&self->_uufrFatalError, 0);
  objc_storeStrong((id *)&self->_uufrSaid, 0);
  objc_storeStrong((id *)&self->_uufrShown, 0);
  objc_storeStrong((id *)&self->_uufrCompletion, 0);
  objc_storeStrong((id *)&self->_carPlayHeadUnitContext, 0);
  objc_storeStrong((id *)&self->_dictationTranscriptionMetadata, 0);
  objc_storeStrong((id *)&self->_dictationAlternativeSelected, 0);
  objc_storeStrong((id *)&self->_dictationEndPointCancel, 0);
  objc_storeStrong((id *)&self->_dictationEndPointStop, 0);
  objc_storeStrong((id *)&self->_dialogOutput, 0);
  objc_storeStrong((id *)&self->_clientFlow, 0);
  objc_storeStrong((id *)&self->_uiStateTransition, 0);
  objc_storeStrong((id *)&self->_textToSpeechEnd, 0);
  objc_storeStrong((id *)&self->_textToSpeechBegin, 0);
  objc_storeStrong((id *)&self->_speechTranscription, 0);
  objc_storeStrong((id *)&self->_uufrPresented, 0);
  objc_storeStrong((id *)&self->_siriCue, 0);
  objc_storeStrong((id *)&self->_punchOut, 0);
  objc_storeStrong((id *)&self->_location, 0);
  objc_storeStrong((id *)&self->_invocation, 0);
  objc_storeStrong((id *)&self->_dictationContext, 0);
  objc_storeStrong((id *)&self->_deviceFixedContext, 0);
  objc_storeStrong((id *)&self->_deviceDynamicContext, 0);
  objc_storeStrong((id *)&self->_clientConversationTrace, 0);
  objc_storeStrong((id *)&self->_audioStopRecording, 0);
  objc_storeStrong((id *)&self->_audioFirstBufferRecorded, 0);
  objc_storeStrong((id *)&self->_transportMetadata, 0);
  objc_storeStrong((id *)&self->_eventMetadata, 0);
}

+ (Class)getEventTypeClassForTag:(int)a3
{
  void *v3;

  v3 = 0;
  switch(a3)
  {
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
      objc_opt_class();
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      return (Class)v3;
  }
  return (Class)v3;
}

+ (id)getTagForEventTypeClass:(Class)a3
{
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C58D0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C58E8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5900;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5918;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5930;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5948;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5960;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5978;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5990;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C59A8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C59C0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C59D8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C59F0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5A08;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5A20;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5A38;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5A50;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5A68;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5A80;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5A98;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5AB0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5AC8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5AE0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5AF8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5B10;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5B28;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5B40;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5B58;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5B70;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5B88;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5BA0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5BB8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5BD0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5BE8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5C00;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5C18;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5C30;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5C48;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5C60;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5C78;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5C90;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5CA8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5CC0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5CD8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5CF0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5D08;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5D20;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5D38;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5D50;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5D68;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5D80;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5D98;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5DB0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5DC8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5DE0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5DF8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5E10;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5E28;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5E40;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5E58;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5E70;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5E88;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5EA0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5EB8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5ED0;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5EE8;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5F00;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5F18;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5F30;
  if ((-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()) & 1) != 0)
    return &unk_1E57C5F48;
  if (-[objc_class isEqual:](a3, "isEqual:", objc_opt_class()))
    return &unk_1E57C5F60;
  return 0;
}

- (int)getAnyEventType
{
  return 1;
}

@end
