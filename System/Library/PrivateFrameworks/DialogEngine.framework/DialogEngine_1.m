void sub_1BF7FC7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::Clear(google::protobuf::MethodOptions *this)
{
  google::protobuf::internal::InternalMetadataWithArena *v2;
  char v3;

  google::protobuf::internal::ExtensionSet::Clear((google::protobuf::MethodOptions *)((char *)this + 8));
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48);
  if ((*((_BYTE *)this + 40) & 3) != 0)
    *((_QWORD *)this + 9) = 0;
  v3 = *((_BYTE *)this + 32);
  v2 = (google::protobuf::MethodOptions *)((char *)this + 32);
  *((_DWORD *)v2 + 2) = 0;
  if ((v3 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v2);
}

google::protobuf::internal *google::protobuf::MethodDescriptorProto::_InternalParse(google::protobuf::MethodDescriptorProto *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  int v6;
  std::string **v8;
  std::string **v9;
  std::string **v10;
  google::protobuf::internal *v11;
  char *v12;
  uint64_t v13;
  google::protobuf::Arena *v14;
  std::string *v15;
  char *v16;
  const char *v17;
  void *v18;
  size_t v19;
  char *v20;
  uint64_t v21;
  google::protobuf::Arena *v22;
  std::string *v23;
  const char *v24;
  uint64_t v25;
  google::protobuf::Arena *v26;
  std::string *v27;
  const char *v28;
  google::protobuf::MethodOptions *v29;
  google::protobuf::Arena *v30;
  char *v31;
  google::protobuf::internal *v32;
  unint64_t v33;
  int v34;
  google::protobuf::internal *v35;
  unint64_t v36;
  int v37;
  BOOL v38;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v40;
  uint64_t v41;
  google::protobuf::internal *v42;
  uint64_t v43;
  uint64_t *v44;
  google::protobuf::internal *v45;
  void *v46;
  size_t v47;

  v45 = a2;
  v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v45, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    v44 = (uint64_t *)((char *)this + 8);
    v8 = (std::string **)((char *)this + 40);
    v9 = (std::string **)((char *)this + 32);
    v10 = (std::string **)((char *)this + 24);
    while (1)
    {
      v11 = (google::protobuf::internal *)((char *)v45 + 1);
      v12 = (char *)*(unsigned __int8 *)v45;
      if (*(char *)v45 < 0)
      {
        v12 = (char *)(v12 + (*(unsigned __int8 *)v11 << 7) - 128);
        if (*(char *)v11 < 0)
        {
          TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v45, v12);
          v45 = TagFallback;
          if (!TagFallback)
            goto LABEL_60;
          v11 = TagFallback;
          goto LABEL_8;
        }
        v11 = (google::protobuf::internal *)((char *)v45 + 2);
      }
      v45 = v11;
LABEL_8:
      switch(v12 >> 3)
      {
        case 1u:
          if (v12 != 10)
            goto LABEL_45;
          *((_DWORD *)this + 4) |= 1u;
          v13 = *((_QWORD *)this + 1);
          v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
          if ((v13 & 1) != 0)
            v14 = (google::protobuf::Arena *)*((_QWORD *)v14 + 3);
          v15 = *v10;
          if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, v14, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
            v15 = *v10;
            v11 = v45;
          }
          v16 = google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)v11, (uint64_t)a3);
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v46, (uint64_t *)v15, v17);
          v18 = v46;
          v19 = v47;
          v20 = "google.protobuf.MethodDescriptorProto.name";
          goto LABEL_27;
        case 2u:
          if (v12 != 18)
            goto LABEL_45;
          *((_DWORD *)this + 4) |= 2u;
          v21 = *((_QWORD *)this + 1);
          v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
          if ((v21 & 1) != 0)
            v22 = (google::protobuf::Arena *)*((_QWORD *)v22 + 3);
          v23 = *v9;
          if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, v22, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
            v23 = *v9;
            v11 = v45;
          }
          v16 = google::protobuf::internal::InlineGreedyStringParser(v23, (std::string::value_type *)v11, (uint64_t)a3);
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v46, (uint64_t *)v23, v24);
          v18 = v46;
          v19 = v47;
          v20 = "google.protobuf.MethodDescriptorProto.input_type";
          goto LABEL_27;
        case 3u:
          if (v12 != 26)
            goto LABEL_45;
          *((_DWORD *)this + 4) |= 4u;
          v25 = *((_QWORD *)this + 1);
          v26 = (google::protobuf::Arena *)(v25 & 0xFFFFFFFFFFFFFFFELL);
          if ((v25 & 1) != 0)
            v26 = (google::protobuf::Arena *)*((_QWORD *)v26 + 3);
          v27 = *v8;
          if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, v26, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
            v27 = *v8;
            v11 = v45;
          }
          v16 = google::protobuf::internal::InlineGreedyStringParser(v27, (std::string::value_type *)v11, (uint64_t)a3);
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v46, (uint64_t *)v27, v28);
          v18 = v46;
          v19 = v47;
          v20 = "google.protobuf.MethodDescriptorProto.output_type";
LABEL_27:
          google::protobuf::internal::VerifyUTF8(v18, v19, (google::protobuf::internal *)v20);
          v45 = (google::protobuf::internal *)v16;
          if (!v16)
            goto LABEL_60;
          goto LABEL_51;
        case 4u:
          if (v12 != 34)
            goto LABEL_45;
          *((_DWORD *)this + 4) |= 8u;
          v29 = (google::protobuf::MethodOptions *)*((_QWORD *)this + 6);
          if (!v29)
          {
            v30 = (google::protobuf::Arena *)(*v44 & 0xFFFFFFFFFFFFFFFELL);
            if ((*v44 & 1) != 0)
              v30 = (google::protobuf::Arena *)*((_QWORD *)v30 + 3);
            v29 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v30);
            *((_QWORD *)this + 6) = v29;
            v11 = v45;
          }
          v31 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MethodOptions>(a3, v29, v11);
          goto LABEL_50;
        case 5u:
          if (v12 != 40)
            goto LABEL_45;
          v6 |= 0x10u;
          v32 = (google::protobuf::internal *)((char *)v11 + 1);
          v33 = *(unsigned __int8 *)v11;
          if ((*(char *)v11 & 0x80000000) == 0)
            goto LABEL_39;
          v34 = *(char *)v32;
          v33 = v33 + (v34 << 7) - 128;
          if (v34 < 0)
          {
            v40 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v11, v33);
            v45 = v40;
            *((_BYTE *)this + 56) = v41 != 0;
            if (!v40)
              goto LABEL_60;
          }
          else
          {
            v32 = (google::protobuf::internal *)((char *)v11 + 2);
LABEL_39:
            v45 = v32;
            *((_BYTE *)this + 56) = v33 != 0;
          }
          goto LABEL_51;
        case 6u:
          if (v12 != 48)
            goto LABEL_45;
          v6 |= 0x20u;
          v35 = (google::protobuf::internal *)((char *)v11 + 1);
          v36 = *(unsigned __int8 *)v11;
          if ((*(char *)v11 & 0x80000000) == 0)
            goto LABEL_44;
          v37 = *(char *)v35;
          v36 = v36 + (v37 << 7) - 128;
          if (v37 < 0)
          {
            v42 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v11, v36);
            v45 = v42;
            *((_BYTE *)this + 57) = v43 != 0;
            if (!v42)
              goto LABEL_60;
          }
          else
          {
            v35 = (google::protobuf::internal *)((char *)v11 + 2);
LABEL_44:
            v45 = v35;
            *((_BYTE *)this + 57) = v36 != 0;
          }
          goto LABEL_51;
        default:
LABEL_45:
          if ((_DWORD)v12)
            v38 = (v12 & 7) == 4;
          else
            v38 = 1;
          if (v38)
          {
            *((_DWORD *)a3 + 20) = (_DWORD)v12 - 1;
            goto LABEL_2;
          }
          v31 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v12, v44, v11, a3, v5);
LABEL_50:
          v45 = (google::protobuf::internal *)v31;
          if (!v31)
          {
LABEL_60:
            v45 = 0;
            goto LABEL_2;
          }
LABEL_51:
          if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v45, *((_DWORD *)a3 + 23)) & 1) != 0)goto LABEL_2;
          break;
      }
    }
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return v45;
}

char *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MethodOptions>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::MethodOptions *a2, google::protobuf::internal *a3)
{
  int v6;
  const char *v7;
  char *v8;
  char *result;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  int v15;

  v6 = *(char *)a3;
  v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result)
      return result;
    v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    v8 = (char *)a3 + 1;
  }
  v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  v12 = *((_DWORD *)this + 22);
  v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13)
    return 0;
  v14 = v11;
  result = (char *)google::protobuf::MethodOptions::_InternalParse(a2, (google::protobuf::internal *)v8, (int32x2_t *)this);
  if (!result)
    return result;
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20))
    return 0;
  v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(_QWORD *)this = *((_QWORD *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::MethodDescriptorProto::InternalSerializeWithCachedSizesToArray(google::protobuf::MethodDescriptorProto *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7;
  unsigned __int8 *v8;
  const char *v9;
  unsigned __int8 *v10;
  const char *v11;
  unsigned __int8 *v12;
  const char *v13;
  google::protobuf::MethodOptions *v14;
  unsigned int v15;
  char *v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  char v20;
  char v21;
  uint64_t v22;

  v7 = *((_DWORD *)this + 4);
  if ((v7 & 1) != 0)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)this + 3);
    if ((char)v8[23] < 0)
    {
      v8 = *(unsigned __int8 **)v8;
      v9 = *(const char **)(*((_QWORD *)this + 3) + 8);
    }
    else
    {
      v9 = (const char *)v8[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v8, v9, 1, (google::protobuf::internal *)"google.protobuf.MethodDescriptorProto.name");
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3), (char *)a2);
    if ((v7 & 2) == 0)
    {
LABEL_3:
      if ((v7 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = (unsigned __int8 *)*((_QWORD *)this + 4);
  if ((char)v10[23] < 0)
  {
    v10 = *(unsigned __int8 **)v10;
    v11 = *(const char **)(*((_QWORD *)this + 4) + 8);
  }
  else
  {
    v11 = (const char *)v10[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v10, v11, 1, (google::protobuf::internal *)"google.protobuf.MethodDescriptorProto.input_type");
  a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 4), (char *)a2);
  if ((v7 & 4) == 0)
  {
LABEL_4:
    if ((v7 & 8) == 0)
      goto LABEL_5;
    goto LABEL_20;
  }
LABEL_16:
  v12 = (unsigned __int8 *)*((_QWORD *)this + 5);
  if ((char)v12[23] < 0)
  {
    v12 = *(unsigned __int8 **)v12;
    v13 = *(const char **)(*((_QWORD *)this + 5) + 8);
  }
  else
  {
    v13 = (const char *)v12[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v12, v13, 1, (google::protobuf::internal *)"google.protobuf.MethodDescriptorProto.output_type");
  a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 5), (char *)a2);
  if ((v7 & 8) == 0)
  {
LABEL_5:
    if ((v7 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_30;
  }
LABEL_20:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
  v14 = (google::protobuf::MethodOptions *)*((_QWORD *)this + 6);
  *(_BYTE *)a2 = 34;
  v15 = *((_DWORD *)v14 + 11);
  if (v15 > 0x7F)
  {
    *((_BYTE *)a2 + 1) = v15 | 0x80;
    v17 = v15 >> 7;
    if (v15 >> 14)
    {
      v16 = (char *)a2 + 3;
      do
      {
        *(v16 - 1) = v17 | 0x80;
        v18 = v17 >> 7;
        ++v16;
        v19 = v17 >> 14;
        v17 >>= 7;
      }
      while (v19);
      *(v16 - 1) = v18;
    }
    else
    {
      *((_BYTE *)a2 + 2) = v17;
      v16 = (char *)a2 + 3;
    }
  }
  else
  {
    *((_BYTE *)a2 + 1) = v15;
    v16 = (char *)a2 + 2;
  }
  a2 = google::protobuf::MethodOptions::InternalSerializeWithCachedSizesToArray(v14, v16, a3);
  if ((v7 & 0x10) == 0)
  {
LABEL_6:
    if ((v7 & 0x20) == 0)
      goto LABEL_36;
    goto LABEL_33;
  }
LABEL_30:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
  v20 = *((_BYTE *)this + 56);
  *(_BYTE *)a2 = 40;
  *((_BYTE *)a2 + 1) = v20;
  a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  if ((v7 & 0x20) != 0)
  {
LABEL_33:
    if ((unint64_t)a2 >= *(_QWORD *)a3)
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    v21 = *((_BYTE *)this + 57);
    *(_BYTE *)a2 = 48;
    *((_BYTE *)a2 + 1) = v21;
    a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }
LABEL_36:
  v22 = *((_QWORD *)this + 1);
  if ((v22 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v22 & 0xFFFFFFFFFFFFFFFELL), a2, a3, a4);
  else
    return a2;
}

char *google::protobuf::MethodDescriptorProto::ByteSizeLong(google::protobuf::MethodDescriptorProto *this)
{
  int v2;
  uint64_t v3;
  const google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x3F) == 0)
  {
    v4 = 0;
    goto LABEL_20;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v5 = *((_QWORD *)this + 3);
  v6 = *(unsigned __int8 *)(v5 + 23);
  v7 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v7 = v6;
  v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    v8 = *((_QWORD *)this + 4);
    v9 = *(unsigned __int8 *)(v8 + 23);
    v10 = *(_QWORD *)(v8 + 8);
    if ((v9 & 0x80u) == 0)
      v10 = v9;
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    v14 = *((_QWORD *)this + 5);
    v15 = *(unsigned __int8 *)(v14 + 23);
    v16 = *(_QWORD *)(v14 + 8);
    if ((v15 & 0x80u) == 0)
      v16 = v15;
    v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  if ((v2 & 8) != 0)
  {
LABEL_14:
    v11 = google::protobuf::MethodOptions::ByteSizeLong(*((google::protobuf::MethodOptions **)this + 6));
    v3 += (uint64_t)&v11[((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
LABEL_15:
  v12 = v3 + 2;
  if ((v2 & 0x10) == 0)
    v12 = v3;
  if ((v2 & 0x20) != 0)
    v4 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
  else
    v4 = (const google::protobuf::UnknownFieldSet *)v12;
LABEL_20:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MethodDescriptorProto *)((char *)this + 8), v4, (_DWORD *)this + 5);
  *((_DWORD *)this + 5) = (_DWORD)v4;
  return (char *)v4;
}

void google::protobuf::MethodDescriptorProto::MergeFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  std::string *v4;
  const google::protobuf::MethodDescriptorProto *v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 6206);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::MethodDescriptorProto::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1BF7FD170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodDescriptorProto::MergeFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::MethodDescriptorProto *a2)
{
  std::string *v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  __int128 *v8;
  std::string **v9;
  uint64_t v10;
  google::protobuf::Arena *v11;
  __int128 *v12;
  std::string **v13;
  uint64_t v14;
  google::protobuf::Arena *v15;
  __int128 *v16;
  std::string **v17;
  uint64_t v18;
  google::protobuf::Arena *v19;
  signed int **v20;
  google::protobuf::Arena *v21;
  signed int **v22;
  char v23;
  std::string v24[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 6221);
    v4 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  v5 = (_QWORD *)((char *)this + 8);
  v6 = *((_QWORD *)a2 + 1);
  if ((v6 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((google::protobuf::MethodDescriptorProto *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v6 & 0xFFFFFFFFFFFFFFFELL));
  v7 = *((_DWORD *)a2 + 4);
  if ((v7 & 0x3F) != 0)
  {
    if ((v7 & 1) == 0)
    {
      if ((v7 & 2) == 0)
        goto LABEL_8;
LABEL_21:
      v12 = (__int128 *)*((_QWORD *)a2 + 4);
      *((_DWORD *)this + 4) |= 2u;
      v13 = (std::string **)((char *)this + 32);
      v14 = *((_QWORD *)this + 1);
      v15 = (google::protobuf::Arena *)(v14 & 0xFFFFFFFFFFFFFFFELL);
      if ((v14 & 1) != 0)
        v15 = (google::protobuf::Arena *)*((_QWORD *)v15 + 3);
      if (*v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v13, v15, v12);
        if ((v7 & 4) != 0)
          goto LABEL_27;
      }
      else
      {
        std::string::operator=(*v13, (const std::string *)v12);
        if ((v7 & 4) != 0)
          goto LABEL_27;
      }
LABEL_9:
      if ((v7 & 8) == 0)
        goto LABEL_10;
LABEL_33:
      *((_DWORD *)this + 4) |= 8u;
      v20 = (signed int **)*((_QWORD *)this + 6);
      if (!v20)
      {
        v21 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
        if ((*v5 & 1) != 0)
          v21 = (google::protobuf::Arena *)*((_QWORD *)v21 + 3);
        v20 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v21);
        *((_QWORD *)this + 6) = v20;
      }
      if (*((_QWORD *)a2 + 6))
        v22 = (signed int **)*((_QWORD *)a2 + 6);
      else
        v22 = (signed int **)&google::protobuf::_MethodOptions_default_instance_;
      google::protobuf::MethodOptions::MergeFrom(v20, v22);
      if ((v7 & 0x10) == 0)
      {
LABEL_11:
        if ((v7 & 0x20) == 0)
        {
LABEL_13:
          *((_DWORD *)this + 4) |= v7;
          return;
        }
LABEL_12:
        *((_BYTE *)this + 57) = *((_BYTE *)a2 + 57);
        goto LABEL_13;
      }
LABEL_41:
      *((_BYTE *)this + 56) = *((_BYTE *)a2 + 56);
      if ((v7 & 0x20) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    v8 = (__int128 *)*((_QWORD *)a2 + 3);
    *((_DWORD *)this + 4) |= 1u;
    v9 = (std::string **)((char *)this + 24);
    v10 = *((_QWORD *)this + 1);
    v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
    if ((v10 & 1) != 0)
      v11 = (google::protobuf::Arena *)*((_QWORD *)v11 + 3);
    if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v9, v11, v8);
      if ((v7 & 2) != 0)
        goto LABEL_21;
    }
    else
    {
      std::string::operator=(*v9, (const std::string *)v8);
      if ((v7 & 2) != 0)
        goto LABEL_21;
    }
LABEL_8:
    if ((v7 & 4) == 0)
      goto LABEL_9;
LABEL_27:
    v16 = (__int128 *)*((_QWORD *)a2 + 5);
    *((_DWORD *)this + 4) |= 4u;
    v17 = (std::string **)((char *)this + 40);
    v18 = *((_QWORD *)this + 1);
    v19 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
    if ((v18 & 1) != 0)
      v19 = (google::protobuf::Arena *)*((_QWORD *)v19 + 3);
    if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v17, v19, v16);
      if ((v7 & 8) != 0)
        goto LABEL_33;
    }
    else
    {
      std::string::operator=(*v17, (const std::string *)v16);
      if ((v7 & 8) != 0)
        goto LABEL_33;
    }
LABEL_10:
    if ((v7 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_41;
  }
}

void sub_1BF7FD3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::MergeFrom(signed int **this, signed int **a2)
{
  std::string *v4;
  unint64_t v5;
  int v6;
  char v7;
  std::string v8[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 9356);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)(this + 1), (const google::protobuf::internal::ExtensionSet *)(a2 + 1));
  v5 = (unint64_t)a2[4];
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((google::protobuf::internal::InternalMetadataWithArena *)(this + 4), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(this + 6, (uint64_t)(a2 + 6));
  v6 = *((_DWORD *)a2 + 10);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) != 0)
      *((_BYTE *)this + 72) = *((_BYTE *)a2 + 72);
    if ((v6 & 2) != 0)
      *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)this + 10) |= v6;
  }
}

void sub_1BF7FD488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodDescriptorProto::CopyFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::MethodDescriptorProto::Clear(this);
    google::protobuf::MethodDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::MethodDescriptorProto::IsInitialized(google::protobuf::MethodDescriptorProto *this)
{
  uint64_t result;
  uint64_t v3;
  std::string *v4;
  char v5;
  std::string v6[2];

  if ((*((_DWORD *)this + 4) & 8) == 0)
    return 1;
  v3 = *((_QWORD *)this + 6);
  if (!v3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 10667);
    v4 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !value || options_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    v3 = *((_QWORD *)this + 6);
  }
  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v3 + 8));
  if ((_DWORD)result)
  {
    result = google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>>(v3 + 48);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

void sub_1BF7FD56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::MethodOptions::IsInitialized(google::protobuf::MethodOptions *this)
{
  uint64_t result;

  result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::MethodOptions *)((char *)this + 8));
  if ((_DWORD)result)
    return google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>>((uint64_t)this + 48);
  return result;
}

uint64_t google::protobuf::MethodDescriptorProto::GetMetadata(google::protobuf::MethodDescriptorProto *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF5811A8;
}

google::protobuf::FileOptions *google::protobuf::FileOptions::FileOptions(google::protobuf::FileOptions *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7928950;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 8, (uint64_t)a2);
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 10) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 19) = 0;
  *((_BYTE *)this + 160) = 0;
  *((_DWORD *)this + 41) = 1;
  return this;
}

void sub_1BF7FD698(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  uint64_t *v2;
  google::protobuf::internal::ArenaImpl **v3;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::FileOptions::default_instance(google::protobuf::FileOptions *this)
{
  if (atomic_load(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return &google::protobuf::_FileOptions_default_instance_;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileOptions::InternalSerializeWithCachedSizesToArray(google::protobuf::FileOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6;
  unsigned __int8 *v7;
  const char *v8;
  unsigned __int8 *v9;
  const char *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 *v16;
  const char *v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 *v25;
  const char *v26;
  unsigned __int8 *v27;
  const char *v28;
  unsigned __int8 *v29;
  const char *v30;
  unsigned __int8 *v31;
  const char *v32;
  unsigned __int8 *v33;
  const char *v34;
  unsigned __int8 v35;
  unsigned __int8 *v36;
  const char *v37;
  unsigned __int8 *v38;
  const char *v39;
  int v40;
  int i;
  google::protobuf::UninterpretedOption *v42;
  google::protobuf::io::EpsCopyOutputStream *v43;
  unsigned int v44;
  unsigned __int8 *v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v50;
  uint64_t v51;

  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    v7 = (unsigned __int8 *)*((_QWORD *)this + 9);
    if ((char)v7[23] < 0)
    {
      v7 = *(unsigned __int8 **)v7;
      v8 = *(const char **)(*((_QWORD *)this + 9) + 8);
    }
    else
    {
      v8 = (const char *)v7[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.java_package");
    a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 9), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x80000) == 0)
        goto LABEL_4;
LABEL_30:
      if ((unint64_t)a2 >= *(_QWORD *)a3)
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v11 = *((int *)this + 41);
      *a2 = 72;
      if (v11 > 0x7F)
      {
        a2[1] = v11 | 0x80;
        v12 = v11 >> 7;
        if (v11 >> 14)
        {
          a2 += 3;
          do
          {
            *(a2 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++a2;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(a2 - 1) = v13;
          if ((v6 & 0x400) != 0)
            goto LABEL_41;
        }
        else
        {
          a2[2] = v12;
          a2 += 3;
          if ((v6 & 0x400) != 0)
            goto LABEL_41;
        }
      }
      else
      {
        a2[1] = v11;
        a2 += 2;
        if ((v6 & 0x400) != 0)
          goto LABEL_41;
      }
LABEL_5:
      if ((v6 & 4) == 0)
        goto LABEL_6;
      goto LABEL_44;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v9 = (unsigned __int8 *)*((_QWORD *)this + 10);
  if ((char)v9[23] < 0)
  {
    v9 = *(unsigned __int8 **)v9;
    v10 = *(const char **)(*((_QWORD *)this + 10) + 8);
  }
  else
  {
    v10 = (const char *)v9[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v9, v10, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.java_outer_classname");
  a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((_QWORD *)this + 10), a2);
  if ((v6 & 0x80000) != 0)
    goto LABEL_30;
LABEL_4:
  if ((v6 & 0x400) == 0)
    goto LABEL_5;
LABEL_41:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v15 = *((_BYTE *)this + 152);
  *a2 = 80;
  a2[1] = v15;
  a2 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_6:
    if ((v6 & 0x2000) == 0)
      goto LABEL_7;
    goto LABEL_48;
  }
LABEL_44:
  v16 = (unsigned __int8 *)*((_QWORD *)this + 11);
  if ((char)v16[23] < 0)
  {
    v16 = *(unsigned __int8 **)v16;
    v17 = *(const char **)(*((_QWORD *)this + 11) + 8);
  }
  else
  {
    v17 = (const char *)v16[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v16, v17, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.go_package");
  a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 11, *((_QWORD *)this + 11), a2);
  if ((v6 & 0x2000) == 0)
  {
LABEL_7:
    if ((v6 & 0x4000) == 0)
      goto LABEL_8;
    goto LABEL_51;
  }
LABEL_48:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v18 = *((_BYTE *)this + 155);
  *(_WORD *)a2 = 384;
  a2[2] = v18;
  a2 += 3;
  if ((v6 & 0x4000) == 0)
  {
LABEL_8:
    if ((v6 & 0x8000) == 0)
      goto LABEL_9;
    goto LABEL_54;
  }
LABEL_51:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v19 = *((_BYTE *)this + 156);
  *(_WORD *)a2 = 392;
  a2[2] = v19;
  a2 += 3;
  if ((v6 & 0x8000) == 0)
  {
LABEL_9:
    if ((v6 & 0x800) == 0)
      goto LABEL_10;
    goto LABEL_57;
  }
LABEL_54:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v20 = *((_BYTE *)this + 157);
  *(_WORD *)a2 = 400;
  a2[2] = v20;
  a2 += 3;
  if ((v6 & 0x800) == 0)
  {
LABEL_10:
    if ((v6 & 0x20000) == 0)
      goto LABEL_11;
    goto LABEL_60;
  }
LABEL_57:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v21 = *((_BYTE *)this + 153);
  *(_WORD *)a2 = 416;
  a2[2] = v21;
  a2 += 3;
  if ((v6 & 0x20000) == 0)
  {
LABEL_11:
    if ((v6 & 0x1000) == 0)
      goto LABEL_12;
    goto LABEL_63;
  }
LABEL_60:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v22 = *((_BYTE *)this + 159);
  *(_WORD *)a2 = 440;
  a2[2] = v22;
  a2 += 3;
  if ((v6 & 0x1000) == 0)
  {
LABEL_12:
    if ((v6 & 0x40000) == 0)
      goto LABEL_13;
    goto LABEL_66;
  }
LABEL_63:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v23 = *((_BYTE *)this + 154);
  *(_WORD *)a2 = 472;
  a2[2] = v23;
  a2 += 3;
  if ((v6 & 0x40000) == 0)
  {
LABEL_13:
    if ((v6 & 8) == 0)
      goto LABEL_14;
    goto LABEL_69;
  }
LABEL_66:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v24 = *((_BYTE *)this + 160);
  *(_WORD *)a2 = 504;
  a2[2] = v24;
  a2 += 3;
  if ((v6 & 8) == 0)
  {
LABEL_14:
    if ((v6 & 0x10) == 0)
      goto LABEL_15;
    goto LABEL_73;
  }
LABEL_69:
  v25 = (unsigned __int8 *)*((_QWORD *)this + 12);
  if ((char)v25[23] < 0)
  {
    v25 = *(unsigned __int8 **)v25;
    v26 = *(const char **)(*((_QWORD *)this + 12) + 8);
  }
  else
  {
    v26 = (const char *)v25[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v25, v26, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.objc_class_prefix");
  a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 36, *((_QWORD *)this + 12), a2);
  if ((v6 & 0x10) == 0)
  {
LABEL_15:
    if ((v6 & 0x20) == 0)
      goto LABEL_16;
    goto LABEL_77;
  }
LABEL_73:
  v27 = (unsigned __int8 *)*((_QWORD *)this + 13);
  if ((char)v27[23] < 0)
  {
    v27 = *(unsigned __int8 **)v27;
    v28 = *(const char **)(*((_QWORD *)this + 13) + 8);
  }
  else
  {
    v28 = (const char *)v27[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v27, v28, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.csharp_namespace");
  a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 37, *((_QWORD *)this + 13), a2);
  if ((v6 & 0x20) == 0)
  {
LABEL_16:
    if ((v6 & 0x40) == 0)
      goto LABEL_17;
    goto LABEL_81;
  }
LABEL_77:
  v29 = (unsigned __int8 *)*((_QWORD *)this + 14);
  if ((char)v29[23] < 0)
  {
    v29 = *(unsigned __int8 **)v29;
    v30 = *(const char **)(*((_QWORD *)this + 14) + 8);
  }
  else
  {
    v30 = (const char *)v29[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v29, v30, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.swift_prefix");
  a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 39, *((_QWORD *)this + 14), a2);
  if ((v6 & 0x40) == 0)
  {
LABEL_17:
    if ((v6 & 0x80) == 0)
      goto LABEL_18;
    goto LABEL_85;
  }
LABEL_81:
  v31 = (unsigned __int8 *)*((_QWORD *)this + 15);
  if ((char)v31[23] < 0)
  {
    v31 = *(unsigned __int8 **)v31;
    v32 = *(const char **)(*((_QWORD *)this + 15) + 8);
  }
  else
  {
    v32 = (const char *)v31[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v31, v32, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.php_class_prefix");
  a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 40, *((_QWORD *)this + 15), a2);
  if ((v6 & 0x80) == 0)
  {
LABEL_18:
    if ((v6 & 0x10000) == 0)
      goto LABEL_19;
    goto LABEL_89;
  }
LABEL_85:
  v33 = (unsigned __int8 *)*((_QWORD *)this + 16);
  if ((char)v33[23] < 0)
  {
    v33 = *(unsigned __int8 **)v33;
    v34 = *(const char **)(*((_QWORD *)this + 16) + 8);
  }
  else
  {
    v34 = (const char *)v33[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v33, v34, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.php_namespace");
  a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 41, *((_QWORD *)this + 16), a2);
  if ((v6 & 0x10000) == 0)
  {
LABEL_19:
    if ((v6 & 0x100) == 0)
      goto LABEL_20;
    goto LABEL_92;
  }
LABEL_89:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  v35 = *((_BYTE *)this + 158);
  *(_WORD *)a2 = 720;
  a2[2] = v35;
  a2 += 3;
  if ((v6 & 0x100) == 0)
  {
LABEL_20:
    if ((v6 & 0x200) == 0)
      goto LABEL_100;
    goto LABEL_96;
  }
LABEL_92:
  v36 = (unsigned __int8 *)*((_QWORD *)this + 17);
  if ((char)v36[23] < 0)
  {
    v36 = *(unsigned __int8 **)v36;
    v37 = *(const char **)(*((_QWORD *)this + 17) + 8);
  }
  else
  {
    v37 = (const char *)v36[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v36, v37, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.php_metadata_namespace");
  a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 44, *((_QWORD *)this + 17), a2);
  if ((v6 & 0x200) != 0)
  {
LABEL_96:
    v38 = (unsigned __int8 *)*((_QWORD *)this + 18);
    if ((char)v38[23] < 0)
    {
      v38 = *(unsigned __int8 **)v38;
      v39 = *(const char **)(*((_QWORD *)this + 18) + 8);
    }
    else
    {
      v39 = (const char *)v38[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v38, v39, 1, (google::protobuf::internal *)"google.protobuf.FileOptions.ruby_package");
    a2 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 45, *((_QWORD *)this + 18), a2);
  }
LABEL_100:
  v40 = *((_DWORD *)this + 14);
  if (v40)
  {
    for (i = 0; i != v40; ++i)
    {
      if ((unint64_t)a2 >= *(_QWORD *)a3)
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v42 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)a2 = 16058;
      v44 = *((_DWORD *)v42 + 5);
      if (v44 > 0x7F)
      {
        a2[2] = v44 | 0x80;
        v46 = v44 >> 7;
        if (v44 >> 14)
        {
          v45 = (unsigned __int8 *)(a2 + 4);
          do
          {
            *(v45 - 1) = v46 | 0x80;
            v47 = v46 >> 7;
            ++v45;
            v48 = v46 >> 14;
            v46 >>= 7;
          }
          while (v48);
          *(v45 - 1) = v47;
        }
        else
        {
          a2[3] = v46;
          v45 = (unsigned __int8 *)(a2 + 4);
        }
      }
      else
      {
        a2[2] = v44;
        v45 = (unsigned __int8 *)(a2 + 3);
      }
      a2 = (char *)google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray(v42, v45, a3, v43);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray((google::protobuf::FileOptions *)((char *)this + 8), 1000, 0x20000000, (unsigned __int8 *)a2, a3);
  v51 = *((_QWORD *)this + 4);
  if ((v51 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v51 & 0xFFFFFFFFFFFFFFFELL), result, a3, v50);
  return result;
}

char *google::protobuf::FileOptions::ByteSizeLong(google::protobuf::FileOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  const google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  google::protobuf::UninterpretedOption **v6;
  uint64_t v7;
  google::protobuf::UninterpretedOption *v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const google::protobuf::UnknownFieldSet *v20;
  const google::protobuf::UnknownFieldSet *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::FileOptions *)((char *)this + 8));
  v3 = *((int *)this + 14);
  v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  v5 = *((_QWORD *)this + 8);
  if (v5)
    v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  else
    v6 = 0;
  if ((_DWORD)v3)
  {
    v7 = 8 * v3;
    do
    {
      v8 = *v6++;
      v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (_QWORD)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  v10 = *((_DWORD *)this + 10);
  if (!(_BYTE)v10)
    goto LABEL_19;
  if ((v10 & 1) != 0)
  {
    v26 = *((_QWORD *)this + 9);
    v27 = *(unsigned __int8 *)(v26 + 23);
    v28 = *(_QWORD *)(v26 + 8);
    if ((v27 & 0x80u) == 0)
      v28 = v27;
    v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0)
        goto LABEL_11;
      goto LABEL_62;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  v29 = *((_QWORD *)this + 10);
  v30 = *(unsigned __int8 *)(v29 + 23);
  v31 = *(_QWORD *)(v29 + 8);
  if ((v30 & 0x80u) == 0)
    v31 = v30;
  v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0)
      goto LABEL_12;
    goto LABEL_65;
  }
LABEL_62:
  v32 = *((_QWORD *)this + 11);
  v33 = *(unsigned __int8 *)(v32 + 23);
  v34 = *(_QWORD *)(v32 + 8);
  if ((v33 & 0x80u) == 0)
    v34 = v33;
  v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0)
      goto LABEL_13;
    goto LABEL_68;
  }
LABEL_65:
  v35 = *((_QWORD *)this + 12);
  v36 = *(unsigned __int8 *)(v35 + 23);
  v37 = *(_QWORD *)(v35 + 8);
  if ((v36 & 0x80u) == 0)
    v37 = v36;
  v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0)
      goto LABEL_14;
LABEL_71:
    v41 = *((_QWORD *)this + 14);
    v42 = *(unsigned __int8 *)(v41 + 23);
    v43 = *(_QWORD *)(v41 + 8);
    if ((v42 & 0x80u) == 0)
      v43 = v42;
    v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2);
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0)
        goto LABEL_19;
      goto LABEL_16;
    }
    goto LABEL_74;
  }
LABEL_68:
  v38 = *((_QWORD *)this + 13);
  v39 = *(unsigned __int8 *)(v38 + 23);
  v40 = *(_QWORD *)(v38 + 8);
  if ((v39 & 0x80u) == 0)
    v40 = v39;
  v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v10 & 0x20) != 0)
    goto LABEL_71;
LABEL_14:
  if ((v10 & 0x40) == 0)
    goto LABEL_15;
LABEL_74:
  v44 = *((_QWORD *)this + 15);
  v45 = *(unsigned __int8 *)(v44 + 23);
  v46 = *(_QWORD *)(v44 + 8);
  if ((v45 & 0x80u) == 0)
    v46 = v45;
  v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v10 & 0x80) != 0)
  {
LABEL_16:
    v11 = *((_QWORD *)this + 16);
    v12 = *(unsigned __int8 *)(v11 + 23);
    v13 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x80u) == 0)
      v13 = v12;
    v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2);
  }
LABEL_19:
  if ((v10 & 0xFF00) != 0)
  {
    if ((v10 & 0x100) != 0)
    {
      v14 = *((_QWORD *)this + 17);
      v15 = *(unsigned __int8 *)(v14 + 23);
      v16 = *(_QWORD *)(v14 + 8);
      if ((v15 & 0x80u) == 0)
        v16 = v15;
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2);
    }
    if ((v10 & 0x200) != 0)
    {
      v17 = *((_QWORD *)this + 18);
      v18 = *(unsigned __int8 *)(v17 + 23);
      v19 = *(_QWORD *)(v17 + 8);
      if ((v18 & 0x80u) == 0)
        v19 = v18;
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2);
    }
    v20 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v10 & 0x400) == 0)
      v20 = v4;
    if ((v10 & 0x800) != 0)
      v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    if ((v10 & 0x1000) != 0)
      v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    if ((v10 & 0x2000) != 0)
      v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    if ((v10 & 0x4000) != 0)
      v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    if ((v10 & 0x8000) != 0)
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    else
      v4 = v20;
  }
  if ((v10 & 0xF0000) != 0)
  {
    v21 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    if ((v10 & 0x10000) == 0)
      v21 = v4;
    if ((v10 & 0x20000) != 0)
      v21 = (const google::protobuf::UnknownFieldSet *)((char *)v21 + 3);
    if ((v10 & 0x40000) != 0)
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v21 + 3);
    else
      v4 = v21;
    if ((v10 & 0x80000) != 0)
    {
      v22 = *((_DWORD *)this + 41);
      v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v22 >= 0)
        v24 = v23;
      else
        v24 = 11;
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v24);
    }
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileOptions *)((char *)this + 32), v4, (_DWORD *)this + 11);
  *((_DWORD *)this + 11) = (_DWORD)v4;
  return (char *)v4;
}

void google::protobuf::FileOptions::MergeFrom(signed int **this, signed int **lpsrc)
{
  std::string *v4;
  signed int **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 7093);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::FileOptions::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF7FE270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileOptions::CopyFrom(signed int **this, signed int **a2)
{
  if (a2 != this)
  {
    google::protobuf::FileOptions::Clear((google::protobuf::FileOptions *)this);
    google::protobuf::FileOptions::MergeFrom(this, a2);
  }
}

{
  if (a2 != this)
  {
    google::protobuf::FileOptions::Clear((google::protobuf::FileOptions *)this);
    google::protobuf::FileOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::FileOptions::GetMetadata(google::protobuf::FileOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF5811B8;
}

google::protobuf::MessageOptions *google::protobuf::MessageOptions::MessageOptions(google::protobuf::MessageOptions *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7928A10;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 8, (uint64_t)a2);
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_DWORD *)this + 18) = 0;
  return this;
}

void sub_1BF7FE3AC(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  uint64_t *v2;
  google::protobuf::internal::ArenaImpl **v3;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::MessageOptions::~MessageOptions(google::protobuf::MessageOptions *this)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  *(_QWORD *)this = &off_1E7928A10;
  v3 = (uint64_t *)((char *)this + 32);
  v2 = *((_QWORD *)this + 4);
  v4 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) != 0)
  {
    if (!*(_QWORD *)(v4 + 24))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 7313);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v3);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::MessageOptions *)((char *)this + 8));
}

{
  google::protobuf::MessageOptions::~MessageOptions(this);
  JUMPOUT(0x1C3B8D890);
}

void sub_1BF7FE478(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::MessageOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::MessageOptions::default_instance(google::protobuf::MessageOptions *this)
{
  if (atomic_load(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return &google::protobuf::_MessageOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::MessageOptions::_InternalParse(google::protobuf::MessageOptions *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  int v6;
  google::protobuf::internal *v8;
  char *v9;
  google::protobuf::internal *v10;
  unint64_t v11;
  int v12;
  char *v13;
  google::protobuf::internal *v14;
  int *v15;
  uint64_t v16;
  int v17;
  google::protobuf::UninterpretedOption *v18;
  uint64_t v19;
  uint64_t v20;
  google::protobuf::internal *v21;
  unint64_t v22;
  int v23;
  google::protobuf::internal *v24;
  unint64_t v25;
  int v26;
  google::protobuf::internal *v27;
  unint64_t v28;
  int v29;
  BOOL v30;
  char *v31;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v33;
  uint64_t v34;
  google::protobuf::internal *v35;
  uint64_t v36;
  google::protobuf::internal *v37;
  uint64_t v38;
  google::protobuf::internal *v39;
  uint64_t v40;
  google::protobuf::internal *v41;

  v41 = a2;
  v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v41, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    while (1)
    {
      v8 = (google::protobuf::internal *)((char *)v41 + 1);
      v9 = (char *)*(unsigned __int8 *)v41;
      if (*(char *)v41 < 0)
      {
        v9 = (char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
        if (*(char *)v8 < 0)
        {
          TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v41, v9);
          v41 = TagFallback;
          if (!TagFallback)
            goto LABEL_61;
          v8 = TagFallback;
          goto LABEL_7;
        }
        v8 = (google::protobuf::internal *)((char *)v41 + 2);
      }
      v41 = v8;
LABEL_7:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8)
            goto LABEL_42;
          v6 |= 1u;
          v10 = (google::protobuf::internal *)((char *)v8 + 1);
          v11 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0)
            goto LABEL_12;
          v12 = *(char *)v10;
          v11 = v11 + (v12 << 7) - 128;
          if ((v12 & 0x80000000) == 0)
          {
            v10 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_12:
            v41 = v10;
            *((_BYTE *)this + 72) = v11 != 0;
            goto LABEL_52;
          }
          v33 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v11);
          v41 = v33;
          *((_BYTE *)this + 72) = v34 != 0;
          if (!v33)
            goto LABEL_61;
          goto LABEL_52;
        case 2u:
          if (v9 != 16)
            goto LABEL_42;
          v6 |= 2u;
          v21 = (google::protobuf::internal *)((char *)v8 + 1);
          v22 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0)
            goto LABEL_31;
          v23 = *(char *)v21;
          v22 = v22 + (v23 << 7) - 128;
          if (v23 < 0)
          {
            v35 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v22);
            v41 = v35;
            *((_BYTE *)this + 73) = v36 != 0;
            if (!v35)
              goto LABEL_61;
          }
          else
          {
            v21 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
            v41 = v21;
            *((_BYTE *)this + 73) = v22 != 0;
          }
          goto LABEL_52;
        case 3u:
          if (v9 != 24)
            goto LABEL_42;
          v6 |= 4u;
          v24 = (google::protobuf::internal *)((char *)v8 + 1);
          v25 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0)
            goto LABEL_36;
          v26 = *(char *)v24;
          v25 = v25 + (v26 << 7) - 128;
          if (v26 < 0)
          {
            v37 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v25);
            v41 = v37;
            *((_BYTE *)this + 74) = v38 != 0;
            if (!v37)
              goto LABEL_61;
          }
          else
          {
            v24 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_36:
            v41 = v24;
            *((_BYTE *)this + 74) = v25 != 0;
          }
          goto LABEL_52;
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_42;
        case 7u:
          if (v9 != 56)
            goto LABEL_42;
          v6 |= 8u;
          v27 = (google::protobuf::internal *)((char *)v8 + 1);
          v28 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0)
            goto LABEL_41;
          v29 = *(char *)v27;
          v28 = v28 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            v39 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v28);
            v41 = v39;
            *((_BYTE *)this + 75) = v40 != 0;
            if (!v39)
              goto LABEL_61;
          }
          else
          {
            v27 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_41:
            v41 = v27;
            *((_BYTE *)this + 75) = v28 != 0;
          }
          goto LABEL_52;
        default:
          if (v9 >> 3 == 999 && v9 == 58)
          {
            v13 = (char *)v8 - 2;
            while (1)
            {
              v14 = (google::protobuf::internal *)(v13 + 2);
              v41 = (google::protobuf::internal *)(v13 + 2);
              v15 = (int *)*((_QWORD *)this + 8);
              if (!v15)
                break;
              v16 = *((int *)this + 14);
              v17 = *v15;
              if ((int)v16 >= *v15)
              {
                if (v17 == *((_DWORD *)this + 15))
                {
LABEL_21:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v17 + 1);
                  v15 = (int *)*((_QWORD *)this + 8);
                  v17 = *v15;
                }
                *v15 = v17 + 1;
                v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
                v19 = *((_QWORD *)this + 8);
                v20 = *((int *)this + 14);
                *((_DWORD *)this + 14) = v20 + 1;
                *(_QWORD *)(v19 + 8 * v20 + 8) = v18;
                v14 = v41;
                goto LABEL_23;
              }
              *((_DWORD *)this + 14) = v16 + 1;
              v18 = *(google::protobuf::UninterpretedOption **)&v15[2 * v16 + 2];
LABEL_23:
              v13 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>(a3, v18, v14);
              v41 = (google::protobuf::internal *)v13;
              if (!v13)
                goto LABEL_61;
              if (*(_QWORD *)a3 <= (unint64_t)v13 || *(_WORD *)v13 != 16058)
                goto LABEL_52;
            }
            v17 = *((_DWORD *)this + 15);
            goto LABEL_21;
          }
LABEL_42:
          if ((_DWORD)v9)
            v30 = (v9 & 7) == 4;
          else
            v30 = 1;
          if (v30)
          {
            *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
            goto LABEL_2;
          }
          if (v9 >> 6 < 0x7D)
            v31 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v9, (uint64_t *)this + 4, v8, a3, v5);
          else
            v31 = google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::MessageOptions *)((char *)this + 8), (google::protobuf::internal *)v9, v8, (const google::protobuf::Message *)&google::protobuf::_MessageOptions_default_instance_, (google::protobuf::MessageOptions *)((char *)this + 32), (int32x2_t *)a3);
          v41 = (google::protobuf::internal *)v31;
          if (!v31)
          {
LABEL_61:
            v41 = 0;
            goto LABEL_2;
          }
LABEL_52:
          if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v41, *((_DWORD *)a3 + 23)) & 1) != 0)goto LABEL_2;
          break;
      }
    }
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v41;
}

const google::protobuf::UnknownFieldSet *google::protobuf::MessageOptions::InternalSerializeWithCachedSizesToArray(google::protobuf::MessageOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  char v7;
  char v8;
  char v9;
  char v10;
  int v11;
  int i;
  google::protobuf::UninterpretedOption *v13;
  google::protobuf::io::EpsCopyOutputStream *v14;
  unsigned int v15;
  unsigned __int8 *v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v21;
  uint64_t v22;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v7 = *((_BYTE *)this + 72);
    *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v8 = *((_BYTE *)this + 73);
  *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_18;
    goto LABEL_15;
  }
LABEL_12:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v9 = *((_BYTE *)this + 74);
  *v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if ((unint64_t)v4 >= *(_QWORD *)a3)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v10 = *((_BYTE *)this + 75);
    *v4 = 56;
    v4[1] = v10;
    v4 += 2;
  }
LABEL_18:
  v11 = *((_DWORD *)this + 14);
  if (v11)
  {
    for (i = 0; i != v11; ++i)
    {
      if ((unint64_t)v4 >= *(_QWORD *)a3)
        v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v13 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)v4 = 16058;
      v15 = *((_DWORD *)v13 + 5);
      if (v15 > 0x7F)
      {
        v4[2] = v15 | 0x80;
        v17 = v15 >> 7;
        if (v15 >> 14)
        {
          v16 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v16 - 1) = v17 | 0x80;
            v18 = v17 >> 7;
            ++v16;
            v19 = v17 >> 14;
            v17 >>= 7;
          }
          while (v19);
          *(v16 - 1) = v18;
        }
        else
        {
          v4[3] = v17;
          v16 = (unsigned __int8 *)(v4 + 4);
        }
      }
      else
      {
        v4[2] = v15;
        v16 = (unsigned __int8 *)(v4 + 3);
      }
      v4 = (char *)google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray(v13, v16, a3, v14);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray((google::protobuf::MessageOptions *)((char *)this + 8), 1000, 0x20000000, (unsigned __int8 *)v4, a3);
  v22 = *((_QWORD *)this + 4);
  if ((v22 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v22 & 0xFFFFFFFFFFFFFFFELL), result, a3, v21);
  return result;
}

char *google::protobuf::MessageOptions::ByteSizeLong(google::protobuf::MessageOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  const google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  google::protobuf::UninterpretedOption **v6;
  uint64_t v7;
  google::protobuf::UninterpretedOption *v8;
  char *v9;
  int v10;
  const google::protobuf::UnknownFieldSet *v11;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::MessageOptions *)((char *)this + 8));
  v3 = *((int *)this + 14);
  v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  v5 = *((_QWORD *)this + 8);
  if (v5)
    v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  else
    v6 = 0;
  if ((_DWORD)v3)
  {
    v7 = 8 * v3;
    do
    {
      v8 = *v6++;
      v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (_QWORD)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  v10 = *((_DWORD *)this + 10);
  if ((v10 & 0xF) != 0)
  {
    v11 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v10 & 1) == 0)
      v11 = v4;
    if ((v10 & 2) != 0)
      v11 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
    if ((v10 & 4) != 0)
      v11 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
    if ((v10 & 8) != 0)
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
    else
      v4 = v11;
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MessageOptions *)((char *)this + 32), v4, (_DWORD *)this + 11);
  *((_DWORD *)this + 11) = (_DWORD)v4;
  return (char *)v4;
}

void google::protobuf::MessageOptions::MergeFrom(signed int **this, signed int **lpsrc)
{
  std::string *v4;
  signed int **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 7528);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::MessageOptions::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF7FECB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MessageOptions::CopyFrom(signed int **this, signed int **a2)
{
  if (a2 != this)
  {
    google::protobuf::MessageOptions::Clear((google::protobuf::MessageOptions *)this);
    google::protobuf::MessageOptions::MergeFrom(this, a2);
  }
}

{
  if (a2 != this)
  {
    google::protobuf::MessageOptions::Clear((google::protobuf::MessageOptions *)this);
    google::protobuf::MessageOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::MessageOptions::GetMetadata(google::protobuf::MessageOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF5811C8;
}

google::protobuf::FieldOptions *google::protobuf::FieldOptions::FieldOptions(google::protobuf::FieldOptions *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7928AD0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 8, (uint64_t)a2);
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_DWORD *)this + 20) = 0;
  *((_QWORD *)this + 9) = 0;
  return this;
}

void sub_1BF7FEDF0(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  uint64_t *v2;
  google::protobuf::internal::ArenaImpl **v3;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FieldOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::FieldOptions::default_instance(google::protobuf::FieldOptions *this)
{
  if (atomic_load(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return &google::protobuf::_FieldOptions_default_instance_;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FieldOptions::InternalSerializeWithCachedSizesToArray(google::protobuf::FieldOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  int i;
  google::protobuf::UninterpretedOption *v21;
  google::protobuf::io::EpsCopyOutputStream *v22;
  unsigned int v23;
  unsigned __int8 *v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v29;
  uint64_t v30;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v7 = *((int *)this + 18);
    *v4 = 8;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      v8 = v7 >> 7;
      if (v7 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - 1) = v8 | 0x80;
          v9 = v8 >> 7;
          ++v4;
          v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(v4 - 1) = v9;
        if ((v6 & 2) != 0)
          goto LABEL_19;
      }
      else
      {
        v4[2] = v8;
        v4 += 3;
        if ((v6 & 2) != 0)
          goto LABEL_19;
      }
    }
    else
    {
      v4[1] = v7;
      v4 += 2;
      if ((v6 & 2) != 0)
        goto LABEL_19;
    }
LABEL_3:
    if ((v6 & 8) == 0)
      goto LABEL_4;
    goto LABEL_22;
  }
  if ((v6 & 2) == 0)
    goto LABEL_3;
LABEL_19:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v11 = *((_BYTE *)this + 76);
  *v4 = 16;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0)
      goto LABEL_5;
    goto LABEL_25;
  }
LABEL_22:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v12 = *((_BYTE *)this + 78);
  *v4 = 24;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0)
      goto LABEL_6;
    goto LABEL_28;
  }
LABEL_25:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v13 = *((_BYTE *)this + 77);
  *v4 = 40;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0)
      goto LABEL_42;
    goto LABEL_39;
  }
LABEL_28:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v14 = *((int *)this + 20);
  *v4 = 48;
  if (v14 > 0x7F)
  {
    v4[1] = v14 | 0x80;
    v15 = v14 >> 7;
    if (v14 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - 1) = v15 | 0x80;
        v16 = v15 >> 7;
        ++v4;
        v17 = v15 >> 14;
        v15 >>= 7;
      }
      while (v17);
      *(v4 - 1) = v16;
      if ((v6 & 0x10) == 0)
        goto LABEL_42;
    }
    else
    {
      v4[2] = v15;
      v4 += 3;
      if ((v6 & 0x10) == 0)
        goto LABEL_42;
    }
  }
  else
  {
    v4[1] = v14;
    v4 += 2;
    if ((v6 & 0x10) == 0)
      goto LABEL_42;
  }
LABEL_39:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v18 = *((_BYTE *)this + 79);
  *v4 = 80;
  v4[1] = v18;
  v4 += 2;
LABEL_42:
  v19 = *((_DWORD *)this + 14);
  if (v19)
  {
    for (i = 0; i != v19; ++i)
    {
      if ((unint64_t)v4 >= *(_QWORD *)a3)
        v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v21 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)v4 = 16058;
      v23 = *((_DWORD *)v21 + 5);
      if (v23 > 0x7F)
      {
        v4[2] = v23 | 0x80;
        v25 = v23 >> 7;
        if (v23 >> 14)
        {
          v24 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v24 - 1) = v25 | 0x80;
            v26 = v25 >> 7;
            ++v24;
            v27 = v25 >> 14;
            v25 >>= 7;
          }
          while (v27);
          *(v24 - 1) = v26;
        }
        else
        {
          v4[3] = v25;
          v24 = (unsigned __int8 *)(v4 + 4);
        }
      }
      else
      {
        v4[2] = v23;
        v24 = (unsigned __int8 *)(v4 + 3);
      }
      v4 = (char *)google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray(v21, v24, a3, v22);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray((google::protobuf::FieldOptions *)((char *)this + 8), 1000, 0x20000000, (unsigned __int8 *)v4, a3);
  v30 = *((_QWORD *)this + 4);
  if ((v30 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v30 & 0xFFFFFFFFFFFFFFFELL), result, a3, v29);
  return result;
}

char *google::protobuf::FieldOptions::ByteSizeLong(google::protobuf::FieldOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  const google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  google::protobuf::UninterpretedOption **v6;
  uint64_t v7;
  google::protobuf::UninterpretedOption *v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v12;
  const google::protobuf::UnknownFieldSet *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::FieldOptions *)((char *)this + 8));
  v3 = *((int *)this + 14);
  v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  v5 = *((_QWORD *)this + 8);
  if (v5)
    v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  else
    v6 = 0;
  if ((_DWORD)v3)
  {
    v7 = 8 * v3;
    do
    {
      v8 = *v6++;
      v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (_QWORD)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  v10 = *((_DWORD *)this + 10);
  if ((v10 & 0x3F) != 0)
  {
    if ((v10 & 1) != 0)
    {
      v11 = *((_DWORD *)this + 18);
      if (v11 < 0)
        v12 = 11;
      else
        v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v12);
    }
    v13 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v10 & 2) == 0)
      v13 = v4;
    if ((v10 & 4) != 0)
      v13 = (const google::protobuf::UnknownFieldSet *)((char *)v13 + 2);
    if ((v10 & 8) != 0)
      v13 = (const google::protobuf::UnknownFieldSet *)((char *)v13 + 2);
    if ((v10 & 0x10) != 0)
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v13 + 2);
    else
      v4 = v13;
    if ((v10 & 0x20) != 0)
    {
      v14 = *((_DWORD *)this + 20);
      v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v14 >= 0)
        v16 = v15;
      else
        v16 = 11;
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v16);
    }
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FieldOptions *)((char *)this + 32), v4, (_DWORD *)this + 11);
  *((_DWORD *)this + 11) = (_DWORD)v4;
  return (char *)v4;
}

void google::protobuf::FieldOptions::MergeFrom(google::protobuf::Arena **this, google::protobuf::Arena **lpsrc)
{
  std::string *v4;
  google::protobuf::Arena **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 7943);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::FieldOptions::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF7FF3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldOptions::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::FieldOptions::Clear((google::protobuf::FieldOptions *)this);
    google::protobuf::FieldOptions::MergeFrom(this, a2);
  }
}

{
  if (a2 != this)
  {
    google::protobuf::FieldOptions::Clear((google::protobuf::FieldOptions *)this);
    google::protobuf::FieldOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::FieldOptions::GetMetadata(google::protobuf::FieldOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF5811D8;
}

google::protobuf::OneofOptions *google::protobuf::OneofOptions::OneofOptions(google::protobuf::OneofOptions *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7928B90;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 8, (uint64_t)a2);
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return this;
}

void sub_1BF7FF4E0(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  uint64_t *v2;
  google::protobuf::internal::ArenaImpl **v3;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofOptions::~OneofOptions(google::protobuf::OneofOptions *this)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  *(_QWORD *)this = &off_1E7928B90;
  v3 = (uint64_t *)((char *)this + 32);
  v2 = *((_QWORD *)this + 4);
  v4 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) != 0)
  {
    if (!*(_QWORD *)(v4 + 24))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 8074);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v3);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::OneofOptions *)((char *)this + 8));
}

{
  google::protobuf::OneofOptions::~OneofOptions(this);
  JUMPOUT(0x1C3B8D890);
}

void sub_1BF7FF5AC(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::OneofOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::OneofOptions::default_instance(google::protobuf::OneofOptions *this)
{
  if (atomic_load(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return &google::protobuf::_OneofOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::OneofOptions::_InternalParse(google::protobuf::OneofOptions *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  google::protobuf::internal::InternalMetadataWithArena *v6;
  char *v7;
  BOOL v8;
  char *v9;
  char *v10;
  google::protobuf::internal *v11;
  int *v12;
  uint64_t v13;
  int v14;
  google::protobuf::UninterpretedOption *v15;
  uint64_t v16;
  uint64_t v17;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v20;

  v20 = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v20, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    while (1)
    {
      v6 = (google::protobuf::internal *)((char *)v20 + 1);
      v7 = (char *)*(unsigned __int8 *)v20;
      if ((*(char *)v20 & 0x80000000) == 0)
        goto LABEL_5;
      v7 = (char *)(v7 + (*(unsigned __int8 *)v6 << 7) - 128);
      if ((*(char *)v6 & 0x80000000) == 0)
        break;
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v20, v7);
      v20 = TagFallback;
      if (!TagFallback)
        return 0;
      v6 = TagFallback;
LABEL_6:
      if ((_DWORD)v7 == 7994)
      {
        v10 = (char *)v6 - 2;
        while (1)
        {
          v11 = (google::protobuf::internal *)(v10 + 2);
          v20 = (google::protobuf::internal *)(v10 + 2);
          v12 = (int *)*((_QWORD *)this + 8);
          if (!v12)
            break;
          v13 = *((int *)this + 14);
          v14 = *v12;
          if ((int)v13 >= *v12)
          {
            if (v14 == *((_DWORD *)this + 15))
            {
LABEL_19:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v14 + 1);
              v12 = (int *)*((_QWORD *)this + 8);
              v14 = *v12;
            }
            *v12 = v14 + 1;
            v15 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
            v16 = *((_QWORD *)this + 8);
            v17 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v17 + 1;
            *(_QWORD *)(v16 + 8 * v17 + 8) = v15;
            v11 = v20;
            goto LABEL_21;
          }
          *((_DWORD *)this + 14) = v13 + 1;
          v15 = *(google::protobuf::UninterpretedOption **)&v12[2 * v13 + 2];
LABEL_21:
          v10 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>(a3, v15, v11);
          v20 = (google::protobuf::internal *)v10;
          if (!v10)
            return 0;
          if (*(_QWORD *)a3 <= (unint64_t)v10 || *(_WORD *)v10 != 16058)
            goto LABEL_27;
        }
        v14 = *((_DWORD *)this + 15);
        goto LABEL_19;
      }
      if ((_DWORD)v7)
        v8 = (v7 & 7) == 4;
      else
        v8 = 1;
      if (v8)
      {
        *((_DWORD *)a3 + 20) = (_DWORD)v7 - 1;
        return v20;
      }
      if (v7 >> 6 < 0x7D)
        v9 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v7, (uint64_t *)this + 4, v6, a3, v5);
      else
        v9 = google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::OneofOptions *)((char *)this + 8), (google::protobuf::internal *)v7, v6, (const google::protobuf::Message *)&google::protobuf::_OneofOptions_default_instance_, (google::protobuf::OneofOptions *)((char *)this + 32), (int32x2_t *)a3);
      v20 = (google::protobuf::internal *)v9;
      if (!v9)
        return 0;
LABEL_27:
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v20, *((_DWORD *)a3 + 23)) & 1) != 0)
        return v20;
    }
    v6 = (google::protobuf::internal *)((char *)v20 + 2);
LABEL_5:
    v20 = v6;
    goto LABEL_6;
  }
  return v20;
}

const google::protobuf::UnknownFieldSet *google::protobuf::OneofOptions::InternalSerializeWithCachedSizesToArray(google::protobuf::OneofOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6;
  int i;
  google::protobuf::UninterpretedOption *v8;
  google::protobuf::io::EpsCopyOutputStream *v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v16;
  uint64_t v17;

  v6 = *((_DWORD *)this + 14);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((unint64_t)a2 >= *(_QWORD *)a3)
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v8 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)a2 = 16058;
      v10 = *((_DWORD *)v8 + 5);
      if (v10 > 0x7F)
      {
        a2[2] = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v11 = (unsigned __int8 *)(a2 + 4);
          do
          {
            *(v11 - 1) = v12 | 0x80;
            v13 = v12 >> 7;
            ++v11;
            v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          a2[3] = v12;
          v11 = (unsigned __int8 *)(a2 + 4);
        }
      }
      else
      {
        a2[2] = v10;
        v11 = (unsigned __int8 *)(a2 + 3);
      }
      a2 = (char *)google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray(v8, v11, a3, v9);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray((google::protobuf::OneofOptions *)((char *)this + 8), 1000, 0x20000000, (unsigned __int8 *)a2, a3);
  v17 = *((_QWORD *)this + 4);
  if ((v17 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v17 & 0xFFFFFFFFFFFFFFFELL), result, a3, v16);
  return result;
}

char *google::protobuf::OneofOptions::ByteSizeLong(google::protobuf::OneofOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  const google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  google::protobuf::UninterpretedOption **v6;
  uint64_t v7;
  google::protobuf::UninterpretedOption *v8;
  char *v9;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::OneofOptions *)((char *)this + 8));
  v3 = *((int *)this + 14);
  v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  v5 = *((_QWORD *)this + 8);
  if (v5)
    v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  else
    v6 = 0;
  if ((_DWORD)v3)
  {
    v7 = 8 * v3;
    do
    {
      v8 = *v6++;
      v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (_QWORD)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::OneofOptions *)((char *)this + 32), v4, (_DWORD *)this + 11);
  *((_DWORD *)this + 11) = (_DWORD)v4;
  return (char *)v4;
}

void google::protobuf::OneofOptions::MergeFrom(signed int **this, signed int **lpsrc)
{
  std::string *v4;
  signed int **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 8204);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::OneofOptions::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF7FFABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofOptions::CopyFrom(signed int **this, signed int **a2)
{
  if (a2 != this)
  {
    google::protobuf::OneofOptions::Clear((google::protobuf::OneofOptions *)this);
    google::protobuf::OneofOptions::MergeFrom(this, a2);
  }
}

{
  if (a2 != this)
  {
    google::protobuf::OneofOptions::Clear((google::protobuf::OneofOptions *)this);
    google::protobuf::OneofOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::OneofOptions::GetMetadata(google::protobuf::OneofOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF5811E8;
}

google::protobuf::EnumOptions *google::protobuf::EnumOptions::EnumOptions(google::protobuf::EnumOptions *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7928C50;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 8, (uint64_t)a2);
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_WORD *)this + 36) = 0;
  return this;
}

void sub_1BF7FFBF8(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  uint64_t *v2;
  google::protobuf::internal::ArenaImpl **v3;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumOptions::~EnumOptions(google::protobuf::EnumOptions *this)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  *(_QWORD *)this = &off_1E7928C50;
  v3 = (uint64_t *)((char *)this + 32);
  v2 = *((_QWORD *)this + 4);
  v4 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) != 0)
  {
    if (!*(_QWORD *)(v4 + 24))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 8319);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v3);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::EnumOptions *)((char *)this + 8));
}

{
  google::protobuf::EnumOptions::~EnumOptions(this);
  JUMPOUT(0x1C3B8D890);
}

void sub_1BF7FFCC4(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::EnumOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::EnumOptions::default_instance(google::protobuf::EnumOptions *this)
{
  if (atomic_load(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return &google::protobuf::_EnumOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::EnumOptions::_InternalParse(google::protobuf::EnumOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  google::protobuf::internal::ParseContext *v5;
  int v6;
  google::protobuf::internal::InternalMetadataWithArena *v8;
  char *v9;
  unsigned int v10;
  BOOL v12;
  char *v13;
  char *v14;
  google::protobuf::internal *v15;
  int *v16;
  uint64_t v17;
  int v18;
  google::protobuf::UninterpretedOption *v19;
  uint64_t v20;
  uint64_t v21;
  google::protobuf::internal *v22;
  unint64_t v23;
  int v24;
  google::protobuf::internal *v25;
  unint64_t v26;
  int v27;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v29;
  uint64_t v30;
  google::protobuf::internal *v31;
  uint64_t v32;
  google::protobuf::internal *v33;

  v33 = a2;
  v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v33, a3[11].i32[1]) & 1) == 0)
  {
    while (1)
    {
      v8 = (google::protobuf::internal *)((char *)v33 + 1);
      v9 = (char *)*(unsigned __int8 *)v33;
      if ((*(char *)v33 & 0x80000000) == 0)
        goto LABEL_6;
      v9 = (char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
      if ((*(char *)v8 & 0x80000000) == 0)
        break;
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v33, v9);
      v33 = TagFallback;
      if (!TagFallback)
        goto LABEL_50;
      v8 = TagFallback;
LABEL_7:
      v10 = v9 >> 3;
      if (v9 >> 3 == 999)
      {
        if (v9 != 58)
        {
LABEL_13:
          if ((_DWORD)v9)
            v12 = (v9 & 7) == 4;
          else
            v12 = 1;
          if (v12)
          {
            a3[10].i32[0] = (_DWORD)v9 - 1;
            goto LABEL_2;
          }
          if (v9 >> 6 < 0x7D)
            v13 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v9, (uint64_t *)this + 4, v8, (google::protobuf::internal::ParseContext *)a3, v5);
          else
            v13 = google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::EnumOptions *)((char *)this + 8), (google::protobuf::internal *)v9, v8, (const google::protobuf::Message *)&google::protobuf::_EnumOptions_default_instance_, (google::protobuf::EnumOptions *)((char *)this + 32), a3);
          v33 = (google::protobuf::internal *)v13;
          if (!v13)
          {
LABEL_50:
            v33 = 0;
            goto LABEL_2;
          }
          goto LABEL_45;
        }
        v14 = (char *)v8 - 2;
        while (2)
        {
          v15 = (google::protobuf::internal *)(v14 + 2);
          v33 = (google::protobuf::internal *)(v14 + 2);
          v16 = (int *)*((_QWORD *)this + 8);
          if (v16)
          {
            v17 = *((int *)this + 14);
            v18 = *v16;
            if ((int)v17 < *v16)
            {
              *((_DWORD *)this + 14) = v17 + 1;
              v19 = *(google::protobuf::UninterpretedOption **)&v16[2 * v17 + 2];
              goto LABEL_28;
            }
            if (v18 == *((_DWORD *)this + 15))
            {
LABEL_26:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v18 + 1);
              v16 = (int *)*((_QWORD *)this + 8);
              v18 = *v16;
            }
            *v16 = v18 + 1;
            v19 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
            v20 = *((_QWORD *)this + 8);
            v21 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v21 + 1;
            *(_QWORD *)(v20 + 8 * v21 + 8) = v19;
            v15 = v33;
LABEL_28:
            v14 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((google::protobuf::internal::EpsCopyInputStream *)a3, v19, v15);
            v33 = (google::protobuf::internal *)v14;
            if (!v14)
              goto LABEL_50;
            if (*(_QWORD *)a3 <= (unint64_t)v14 || *(_WORD *)v14 != 16058)
              goto LABEL_45;
            continue;
          }
          break;
        }
        v18 = *((_DWORD *)this + 15);
        goto LABEL_26;
      }
      if (v10 == 3)
      {
        if (v9 != 24)
          goto LABEL_13;
        v6 |= 2u;
        v22 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v8 + 1);
        v23 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0)
          goto LABEL_36;
        v24 = *(char *)v22;
        v23 = v23 + (v24 << 7) - 128;
        if ((v24 & 0x80000000) == 0)
        {
          v22 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v8 + 2);
LABEL_36:
          v33 = v22;
          *((_BYTE *)this + 73) = v23 != 0;
          goto LABEL_45;
        }
        v29 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v23);
        v33 = v29;
        *((_BYTE *)this + 73) = v30 != 0;
        if (!v29)
          goto LABEL_50;
      }
      else
      {
        if (v10 != 2 || v9 != 16)
          goto LABEL_13;
        v6 |= 1u;
        v25 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v8 + 1);
        v26 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0)
          goto LABEL_40;
        v27 = *(char *)v25;
        v26 = v26 + (v27 << 7) - 128;
        if ((v27 & 0x80000000) == 0)
        {
          v25 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v8 + 2);
LABEL_40:
          v33 = v25;
          *((_BYTE *)this + 72) = v26 != 0;
          goto LABEL_45;
        }
        v31 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v26);
        v33 = v31;
        *((_BYTE *)this + 72) = v32 != 0;
        if (!v31)
          goto LABEL_50;
      }
LABEL_45:
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v33, a3[11].i32[1]) & 1) != 0)goto LABEL_2;
    }
    v8 = (google::protobuf::internal *)((char *)v33 + 2);
LABEL_6:
    v33 = v8;
    goto LABEL_7;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v33;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumOptions::InternalSerializeWithCachedSizesToArray(google::protobuf::EnumOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  char v7;
  char v8;
  int v9;
  int i;
  google::protobuf::UninterpretedOption *v11;
  google::protobuf::io::EpsCopyOutputStream *v12;
  unsigned int v13;
  unsigned __int8 *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v19;
  uint64_t v20;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v7 = *((_BYTE *)this + 72);
    *v4 = 16;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if ((unint64_t)v4 >= *(_QWORD *)a3)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v8 = *((_BYTE *)this + 73);
    *v4 = 24;
    v4[1] = v8;
    v4 += 2;
  }
  v9 = *((_DWORD *)this + 14);
  if (v9)
  {
    for (i = 0; i != v9; ++i)
    {
      if ((unint64_t)v4 >= *(_QWORD *)a3)
        v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v11 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)v4 = 16058;
      v13 = *((_DWORD *)v11 + 5);
      if (v13 > 0x7F)
      {
        v4[2] = v13 | 0x80;
        v15 = v13 >> 7;
        if (v13 >> 14)
        {
          v14 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v14 - 1) = v15 | 0x80;
            v16 = v15 >> 7;
            ++v14;
            v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v14 - 1) = v16;
        }
        else
        {
          v4[3] = v15;
          v14 = (unsigned __int8 *)(v4 + 4);
        }
      }
      else
      {
        v4[2] = v13;
        v14 = (unsigned __int8 *)(v4 + 3);
      }
      v4 = (char *)google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray(v11, v14, a3, v12);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray((google::protobuf::EnumOptions *)((char *)this + 8), 1000, 0x20000000, (unsigned __int8 *)v4, a3);
  v20 = *((_QWORD *)this + 4);
  if ((v20 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v20 & 0xFFFFFFFFFFFFFFFELL), result, a3, v19);
  return result;
}

char *google::protobuf::EnumOptions::ByteSizeLong(google::protobuf::EnumOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  const google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  google::protobuf::UninterpretedOption **v6;
  uint64_t v7;
  google::protobuf::UninterpretedOption *v8;
  char *v9;
  int v10;
  const google::protobuf::UnknownFieldSet *v11;
  const google::protobuf::UnknownFieldSet *v12;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::EnumOptions *)((char *)this + 8));
  v3 = *((int *)this + 14);
  v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  v5 = *((_QWORD *)this + 8);
  if (v5)
    v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  else
    v6 = 0;
  if ((_DWORD)v3)
  {
    v7 = 8 * v3;
    do
    {
      v8 = *v6++;
      v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (_QWORD)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  v10 = *((_DWORD *)this + 10);
  v11 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((v10 & 1) == 0)
    v11 = v4;
  if ((v10 & 2) != 0)
    v11 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
  if ((v10 & 3) != 0)
    v12 = v11;
  else
    v12 = v4;
  if ((*((_BYTE *)this + 32) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumOptions *)((char *)this + 32), v12, (_DWORD *)this + 11);
  *((_DWORD *)this + 11) = (_DWORD)v12;
  return (char *)v12;
}

void google::protobuf::EnumOptions::MergeFrom(signed int **this, signed int **lpsrc)
{
  std::string *v4;
  signed int **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 8496);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::EnumOptions::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF800368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumOptions::CopyFrom(signed int **this, signed int **a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumOptions::Clear((google::protobuf::EnumOptions *)this);
    google::protobuf::EnumOptions::MergeFrom(this, a2);
  }
}

{
  if (a2 != this)
  {
    google::protobuf::EnumOptions::Clear((google::protobuf::EnumOptions *)this);
    google::protobuf::EnumOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::EnumOptions::GetMetadata(google::protobuf::EnumOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF5811F8;
}

google::protobuf::EnumValueOptions *google::protobuf::EnumValueOptions::EnumValueOptions(google::protobuf::EnumValueOptions *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7928D10;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 8, (uint64_t)a2);
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_BYTE *)this + 72) = 0;
  return this;
}

void sub_1BF8004A4(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  uint64_t *v2;
  google::protobuf::internal::ArenaImpl **v3;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueOptions::~EnumValueOptions(google::protobuf::EnumValueOptions *this)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  *(_QWORD *)this = &off_1E7928D10;
  v3 = (uint64_t *)((char *)this + 32);
  v2 = *((_QWORD *)this + 4);
  v4 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) != 0)
  {
    if (!*(_QWORD *)(v4 + 24))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 8616);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v3);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::EnumValueOptions *)((char *)this + 8));
}

{
  google::protobuf::EnumValueOptions::~EnumValueOptions(this);
  JUMPOUT(0x1C3B8D890);
}

void sub_1BF800570(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::EnumValueOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::EnumValueOptions::default_instance(google::protobuf::EnumValueOptions *this)
{
  if (atomic_load(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return &google::protobuf::_EnumValueOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::EnumValueOptions::_InternalParse(google::protobuf::EnumValueOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  google::protobuf::internal::ParseContext *v5;
  int v6;
  google::protobuf::internal::InternalMetadataWithArena *v8;
  char *v9;
  BOOL v11;
  char *v12;
  char *v13;
  google::protobuf::internal *v14;
  int *v15;
  uint64_t v16;
  int v17;
  google::protobuf::UninterpretedOption *v18;
  uint64_t v19;
  uint64_t v20;
  google::protobuf::internal *v21;
  unint64_t v22;
  int v23;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v25;
  uint64_t v26;
  google::protobuf::internal *v27;

  v27 = a2;
  v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v27, a3[11].i32[1]) & 1) == 0)
  {
    while (1)
    {
      v8 = (google::protobuf::internal *)((char *)v27 + 1);
      v9 = (char *)*(unsigned __int8 *)v27;
      if ((*(char *)v27 & 0x80000000) == 0)
        goto LABEL_6;
      v9 = (char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
      if ((*(char *)v8 & 0x80000000) == 0)
        break;
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v27, v9);
      v27 = TagFallback;
      if (!TagFallback)
        goto LABEL_42;
      v8 = TagFallback;
LABEL_7:
      if (v9 >> 3 == 999)
      {
        if (v9 != 58)
        {
LABEL_12:
          if ((_DWORD)v9)
            v11 = (v9 & 7) == 4;
          else
            v11 = 1;
          if (v11)
          {
            a3[10].i32[0] = (_DWORD)v9 - 1;
            goto LABEL_2;
          }
          if (v9 >> 6 < 0x7D)
            v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v9, (uint64_t *)this + 4, v8, (google::protobuf::internal::ParseContext *)a3, v5);
          else
            v12 = google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::EnumValueOptions *)((char *)this + 8), (google::protobuf::internal *)v9, v8, (const google::protobuf::Message *)&google::protobuf::_EnumValueOptions_default_instance_, (google::protobuf::EnumValueOptions *)((char *)this + 32), a3);
          v27 = (google::protobuf::internal *)v12;
          if (!v12)
          {
LABEL_42:
            v27 = 0;
            goto LABEL_2;
          }
          goto LABEL_37;
        }
        v13 = (char *)v8 - 2;
        while (2)
        {
          v14 = (google::protobuf::internal *)(v13 + 2);
          v27 = (google::protobuf::internal *)(v13 + 2);
          v15 = (int *)*((_QWORD *)this + 8);
          if (v15)
          {
            v16 = *((int *)this + 14);
            v17 = *v15;
            if ((int)v16 < *v15)
            {
              *((_DWORD *)this + 14) = v16 + 1;
              v18 = *(google::protobuf::UninterpretedOption **)&v15[2 * v16 + 2];
              goto LABEL_27;
            }
            if (v17 == *((_DWORD *)this + 15))
            {
LABEL_25:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v17 + 1);
              v15 = (int *)*((_QWORD *)this + 8);
              v17 = *v15;
            }
            *v15 = v17 + 1;
            v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
            v19 = *((_QWORD *)this + 8);
            v20 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v20 + 1;
            *(_QWORD *)(v19 + 8 * v20 + 8) = v18;
            v14 = v27;
LABEL_27:
            v13 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((google::protobuf::internal::EpsCopyInputStream *)a3, v18, v14);
            v27 = (google::protobuf::internal *)v13;
            if (!v13)
              goto LABEL_42;
            if (*(_QWORD *)a3 <= (unint64_t)v13 || *(_WORD *)v13 != 16058)
              goto LABEL_37;
            continue;
          }
          break;
        }
        v17 = *((_DWORD *)this + 15);
        goto LABEL_25;
      }
      if (v9 >> 3 != 1 || v9 != 8)
        goto LABEL_12;
      v21 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v8 + 1);
      v22 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0)
        goto LABEL_34;
      v23 = *(char *)v21;
      v22 = v22 + (v23 << 7) - 128;
      if ((v23 & 0x80000000) == 0)
      {
        v21 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v8 + 2);
LABEL_34:
        v27 = v21;
        *((_BYTE *)this + 72) = v22 != 0;
        v6 = 1;
        goto LABEL_37;
      }
      v25 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v22);
      v27 = v25;
      *((_BYTE *)this + 72) = v26 != 0;
      v6 = 1;
      if (!v25)
        goto LABEL_42;
LABEL_37:
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v27, a3[11].i32[1]) & 1) != 0)goto LABEL_2;
    }
    v8 = (google::protobuf::internal *)((char *)v27 + 2);
LABEL_6:
    v27 = v8;
    goto LABEL_7;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v27;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumValueOptions::InternalSerializeWithCachedSizesToArray(google::protobuf::EnumValueOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  char v6;
  int v7;
  int i;
  google::protobuf::UninterpretedOption *v9;
  google::protobuf::io::EpsCopyOutputStream *v10;
  unsigned int v11;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v17;
  uint64_t v18;

  v4 = a2;
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v6 = *((_BYTE *)this + 72);
    *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(_QWORD *)a3)
        v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v9 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)v4 = 16058;
      v11 = *((_DWORD *)v9 + 5);
      if (v11 > 0x7F)
      {
        v4[2] = v11 | 0x80;
        v13 = v11 >> 7;
        if (v11 >> 14)
        {
          v12 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v12 - 1) = v13 | 0x80;
            v14 = v13 >> 7;
            ++v12;
            v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *(v12 - 1) = v14;
        }
        else
        {
          v4[3] = v13;
          v12 = (unsigned __int8 *)(v4 + 4);
        }
      }
      else
      {
        v4[2] = v11;
        v12 = (unsigned __int8 *)(v4 + 3);
      }
      v4 = (char *)google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray(v9, v12, a3, v10);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray((google::protobuf::EnumValueOptions *)((char *)this + 8), 1000, 0x20000000, (unsigned __int8 *)v4, a3);
  v18 = *((_QWORD *)this + 4);
  if ((v18 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v18 & 0xFFFFFFFFFFFFFFFELL), result, a3, v17);
  return result;
}

char *google::protobuf::EnumValueOptions::ByteSizeLong(google::protobuf::EnumValueOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  google::protobuf::UninterpretedOption **v6;
  uint64_t v7;
  google::protobuf::UninterpretedOption *v8;
  char *v9;
  const google::protobuf::UnknownFieldSet *v10;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::EnumValueOptions *)((char *)this + 8));
  v3 = *((int *)this + 14);
  v4 = v2 + 2 * v3;
  v5 = *((_QWORD *)this + 8);
  if (v5)
    v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  else
    v6 = 0;
  if ((_DWORD)v3)
  {
    v7 = 8 * v3;
    do
    {
      v8 = *v6++;
      v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 += (uint64_t)&v9[(9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6];
      v7 -= 8;
    }
    while (v7);
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
    v10 = (const google::protobuf::UnknownFieldSet *)(v4 + 2);
  else
    v10 = (const google::protobuf::UnknownFieldSet *)v4;
  if ((*((_BYTE *)this + 32) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumValueOptions *)((char *)this + 32), v10, (_DWORD *)this + 11);
  *((_DWORD *)this + 11) = (_DWORD)v10;
  return (char *)v10;
}

void google::protobuf::EnumValueOptions::MergeFrom(google::protobuf::Arena **this, google::protobuf::Arena **lpsrc)
{
  std::string *v4;
  google::protobuf::Arena **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 8770);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::EnumValueOptions::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF800B58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueOptions::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumValueOptions::Clear((google::protobuf::EnumValueOptions *)this);
    google::protobuf::EnumValueOptions::MergeFrom(this, a2);
  }
}

{
  if (a2 != this)
  {
    google::protobuf::EnumValueOptions::Clear((google::protobuf::EnumValueOptions *)this);
    google::protobuf::EnumValueOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::EnumValueOptions::GetMetadata(google::protobuf::EnumValueOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF581208;
}

google::protobuf::ServiceOptions *google::protobuf::ServiceOptions::ServiceOptions(google::protobuf::ServiceOptions *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7928DD0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 8, (uint64_t)a2);
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_BYTE *)this + 72) = 0;
  return this;
}

void sub_1BF800C94(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  uint64_t *v2;
  google::protobuf::internal::ArenaImpl **v3;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceOptions::~ServiceOptions(google::protobuf::ServiceOptions *this)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  *(_QWORD *)this = &off_1E7928DD0;
  v3 = (uint64_t *)((char *)this + 32);
  v2 = *((_QWORD *)this + 4);
  v4 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) != 0)
  {
    if (!*(_QWORD *)(v4 + 24))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 8882);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v3);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::ServiceOptions *)((char *)this + 8));
}

{
  google::protobuf::ServiceOptions::~ServiceOptions(this);
  JUMPOUT(0x1C3B8D890);
}

void sub_1BF800D60(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::ServiceOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::ServiceOptions::default_instance(google::protobuf::ServiceOptions *this)
{
  if (atomic_load(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return &google::protobuf::_ServiceOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::ServiceOptions::_InternalParse(google::protobuf::ServiceOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  google::protobuf::internal::ParseContext *v5;
  int v6;
  google::protobuf::internal::InternalMetadataWithArena *v8;
  char *v9;
  BOOL v11;
  char *v12;
  char *v13;
  google::protobuf::internal *v14;
  int *v15;
  uint64_t v16;
  int v17;
  google::protobuf::UninterpretedOption *v18;
  uint64_t v19;
  uint64_t v20;
  google::protobuf::internal *v21;
  unint64_t v22;
  int v23;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v25;
  uint64_t v26;
  google::protobuf::internal *v27;

  v27 = a2;
  v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v27, a3[11].i32[1]) & 1) == 0)
  {
    while (1)
    {
      v8 = (google::protobuf::internal *)((char *)v27 + 1);
      v9 = (char *)*(unsigned __int8 *)v27;
      if ((*(char *)v27 & 0x80000000) == 0)
        goto LABEL_6;
      v9 = (char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
      if ((*(char *)v8 & 0x80000000) == 0)
        break;
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v27, v9);
      v27 = TagFallback;
      if (!TagFallback)
        goto LABEL_42;
      v8 = TagFallback;
LABEL_7:
      if (v9 >> 3 == 999)
      {
        if (v9 != 58)
        {
LABEL_12:
          if ((_DWORD)v9)
            v11 = (v9 & 7) == 4;
          else
            v11 = 1;
          if (v11)
          {
            a3[10].i32[0] = (_DWORD)v9 - 1;
            goto LABEL_2;
          }
          if (v9 >> 6 < 0x7D)
            v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v9, (uint64_t *)this + 4, v8, (google::protobuf::internal::ParseContext *)a3, v5);
          else
            v12 = google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::ServiceOptions *)((char *)this + 8), (google::protobuf::internal *)v9, v8, (const google::protobuf::Message *)&google::protobuf::_ServiceOptions_default_instance_, (google::protobuf::ServiceOptions *)((char *)this + 32), a3);
          v27 = (google::protobuf::internal *)v12;
          if (!v12)
          {
LABEL_42:
            v27 = 0;
            goto LABEL_2;
          }
          goto LABEL_37;
        }
        v13 = (char *)v8 - 2;
        while (2)
        {
          v14 = (google::protobuf::internal *)(v13 + 2);
          v27 = (google::protobuf::internal *)(v13 + 2);
          v15 = (int *)*((_QWORD *)this + 8);
          if (v15)
          {
            v16 = *((int *)this + 14);
            v17 = *v15;
            if ((int)v16 < *v15)
            {
              *((_DWORD *)this + 14) = v16 + 1;
              v18 = *(google::protobuf::UninterpretedOption **)&v15[2 * v16 + 2];
              goto LABEL_27;
            }
            if (v17 == *((_DWORD *)this + 15))
            {
LABEL_25:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v17 + 1);
              v15 = (int *)*((_QWORD *)this + 8);
              v17 = *v15;
            }
            *v15 = v17 + 1;
            v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
            v19 = *((_QWORD *)this + 8);
            v20 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v20 + 1;
            *(_QWORD *)(v19 + 8 * v20 + 8) = v18;
            v14 = v27;
LABEL_27:
            v13 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((google::protobuf::internal::EpsCopyInputStream *)a3, v18, v14);
            v27 = (google::protobuf::internal *)v13;
            if (!v13)
              goto LABEL_42;
            if (*(_QWORD *)a3 <= (unint64_t)v13 || *(_WORD *)v13 != 16058)
              goto LABEL_37;
            continue;
          }
          break;
        }
        v17 = *((_DWORD *)this + 15);
        goto LABEL_25;
      }
      if (v9 >> 3 != 33 || v9 != 8)
        goto LABEL_12;
      v21 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v8 + 1);
      v22 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0)
        goto LABEL_34;
      v23 = *(char *)v21;
      v22 = v22 + (v23 << 7) - 128;
      if ((v23 & 0x80000000) == 0)
      {
        v21 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v8 + 2);
LABEL_34:
        v27 = v21;
        *((_BYTE *)this + 72) = v22 != 0;
        v6 = 1;
        goto LABEL_37;
      }
      v25 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v22);
      v27 = v25;
      *((_BYTE *)this + 72) = v26 != 0;
      v6 = 1;
      if (!v25)
        goto LABEL_42;
LABEL_37:
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v27, a3[11].i32[1]) & 1) != 0)goto LABEL_2;
    }
    v8 = (google::protobuf::internal *)((char *)v27 + 2);
LABEL_6:
    v27 = v8;
    goto LABEL_7;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v27;
}

const google::protobuf::UnknownFieldSet *google::protobuf::ServiceOptions::InternalSerializeWithCachedSizesToArray(google::protobuf::ServiceOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  char v6;
  int v7;
  int i;
  google::protobuf::UninterpretedOption *v9;
  google::protobuf::io::EpsCopyOutputStream *v10;
  unsigned int v11;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v17;
  uint64_t v18;

  v4 = a2;
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v6 = *((_BYTE *)this + 72);
    *(_WORD *)v4 = 648;
    v4[2] = v6;
    v4 += 3;
  }
  v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(_QWORD *)a3)
        v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v9 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)v4 = 16058;
      v11 = *((_DWORD *)v9 + 5);
      if (v11 > 0x7F)
      {
        v4[2] = v11 | 0x80;
        v13 = v11 >> 7;
        if (v11 >> 14)
        {
          v12 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v12 - 1) = v13 | 0x80;
            v14 = v13 >> 7;
            ++v12;
            v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *(v12 - 1) = v14;
        }
        else
        {
          v4[3] = v13;
          v12 = (unsigned __int8 *)(v4 + 4);
        }
      }
      else
      {
        v4[2] = v11;
        v12 = (unsigned __int8 *)(v4 + 3);
      }
      v4 = (char *)google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray(v9, v12, a3, v10);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray((google::protobuf::ServiceOptions *)((char *)this + 8), 1000, 0x20000000, (unsigned __int8 *)v4, a3);
  v18 = *((_QWORD *)this + 4);
  if ((v18 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v18 & 0xFFFFFFFFFFFFFFFELL), result, a3, v17);
  return result;
}

char *google::protobuf::ServiceOptions::ByteSizeLong(google::protobuf::ServiceOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  google::protobuf::UninterpretedOption **v6;
  uint64_t v7;
  google::protobuf::UninterpretedOption *v8;
  char *v9;
  const google::protobuf::UnknownFieldSet *v10;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::ServiceOptions *)((char *)this + 8));
  v3 = *((int *)this + 14);
  v4 = v2 + 2 * v3;
  v5 = *((_QWORD *)this + 8);
  if (v5)
    v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  else
    v6 = 0;
  if ((_DWORD)v3)
  {
    v7 = 8 * v3;
    do
    {
      v8 = *v6++;
      v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 += (uint64_t)&v9[(9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6];
      v7 -= 8;
    }
    while (v7);
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
    v10 = (const google::protobuf::UnknownFieldSet *)(v4 + 3);
  else
    v10 = (const google::protobuf::UnknownFieldSet *)v4;
  if ((*((_BYTE *)this + 32) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ServiceOptions *)((char *)this + 32), v10, (_DWORD *)this + 11);
  *((_DWORD *)this + 11) = (_DWORD)v10;
  return (char *)v10;
}

void google::protobuf::ServiceOptions::MergeFrom(signed int **this, signed int **lpsrc)
{
  std::string *v4;
  signed int **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 9036);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::ServiceOptions::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF801348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceOptions::CopyFrom(signed int **this, signed int **a2)
{
  if (a2 != this)
  {
    google::protobuf::ServiceOptions::Clear((google::protobuf::ServiceOptions *)this);
    google::protobuf::ServiceOptions::MergeFrom(this, a2);
  }
}

{
  if (a2 != this)
  {
    google::protobuf::ServiceOptions::Clear((google::protobuf::ServiceOptions *)this);
    google::protobuf::ServiceOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::ServiceOptions::GetMetadata(google::protobuf::ServiceOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF581218;
}

google::protobuf::MethodOptions *google::protobuf::MethodOptions::MethodOptions(google::protobuf::MethodOptions *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7928E90;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)this + 8, (uint64_t)a2);
  *((_QWORD *)this + 4) = a2;
  *((_QWORD *)this + 6) = a2;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  if (atomic_load(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 9) = 0;
  return this;
}

void sub_1BF801484(_Unwind_Exception *a1)
{
  google::protobuf::internal::ExtensionSet *v1;
  uint64_t *v2;
  google::protobuf::internal::ArenaImpl **v3;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::~MethodOptions(google::protobuf::MethodOptions *this)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  *(_QWORD *)this = &off_1E7928E90;
  v3 = (uint64_t *)((char *)this + 32);
  v2 = *((_QWORD *)this + 4);
  v4 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) != 0)
  {
    if (!*(_QWORD *)(v4 + 24))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 9155);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 6);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v3);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::MethodOptions *)((char *)this + 8));
}

{
  google::protobuf::MethodOptions::~MethodOptions(this);
  JUMPOUT(0x1C3B8D890);
}

void sub_1BF801550(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::MethodOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::MethodOptions::default_instance(google::protobuf::MethodOptions *this)
{
  if (atomic_load(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
  return &google::protobuf::_MethodOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::MethodOptions::_InternalParse(google::protobuf::MethodOptions *this, google::protobuf::internal *a2, int32x2_t *a3)
{
  google::protobuf::internal::ParseContext *v5;
  int v6;
  _QWORD *v8;
  google::protobuf::internal::InternalMetadataWithArena *v9;
  char *v10;
  unsigned int v11;
  BOOL v13;
  char *v14;
  char *v15;
  google::protobuf::internal *v16;
  int *v17;
  uint64_t v18;
  int v19;
  google::protobuf::UninterpretedOption *v20;
  uint64_t v21;
  uint64_t v22;
  google::protobuf::internal *v23;
  unint64_t v24;
  int v25;
  google::protobuf::internal *v26;
  unint64_t v27;
  int v28;
  google::protobuf::internal *TagFallback;
  unint64_t v30;
  google::protobuf::internal *v31;
  uint64_t v32;
  google::protobuf::UnknownFieldSet *v33;
  unint64_t v34;
  google::protobuf::internal *v35;

  v35 = a2;
  v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v35, a3[11].i32[1]) & 1) == 0)
  {
    v8 = (_QWORD *)((char *)this + 32);
    while (1)
    {
      v9 = (google::protobuf::internal *)((char *)v35 + 1);
      v10 = (char *)*(unsigned __int8 *)v35;
      if ((*(char *)v35 & 0x80000000) == 0)
        goto LABEL_7;
      v10 = (char *)(v10 + (*(unsigned __int8 *)v9 << 7) - 128);
      if ((*(char *)v9 & 0x80000000) == 0)
        break;
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v35, v10);
      v35 = TagFallback;
      if (!TagFallback)
        goto LABEL_59;
      v9 = TagFallback;
LABEL_8:
      v11 = v10 >> 3;
      if (v10 >> 3 == 999)
      {
        if (v10 != 58)
        {
LABEL_14:
          if ((_DWORD)v10)
            v13 = (v10 & 7) == 4;
          else
            v13 = 1;
          if (v13)
          {
            a3[10].i32[0] = (_DWORD)v10 - 1;
            goto LABEL_2;
          }
          if (v10 >> 6 < 0x7D)
            v14 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, (uint64_t *)this + 4, v9, (google::protobuf::internal::ParseContext *)a3, v5);
          else
            v14 = google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::MethodOptions *)((char *)this + 8), (google::protobuf::internal *)v10, v9, (const google::protobuf::Message *)&google::protobuf::_MethodOptions_default_instance_, (google::protobuf::MethodOptions *)((char *)this + 32), a3);
          v35 = (google::protobuf::internal *)v14;
          if (!v14)
          {
LABEL_59:
            v35 = 0;
            goto LABEL_2;
          }
          goto LABEL_48;
        }
        v15 = (char *)v9 - 2;
        while (2)
        {
          v16 = (google::protobuf::internal *)(v15 + 2);
          v35 = (google::protobuf::internal *)(v15 + 2);
          v17 = (int *)*((_QWORD *)this + 8);
          if (v17)
          {
            v18 = *((int *)this + 14);
            v19 = *v17;
            if ((int)v18 < *v17)
            {
              *((_DWORD *)this + 14) = v18 + 1;
              v20 = *(google::protobuf::UninterpretedOption **)&v17[2 * v18 + 2];
              goto LABEL_29;
            }
            if (v19 == *((_DWORD *)this + 15))
            {
LABEL_27:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 12, v19 + 1);
              v17 = (int *)*((_QWORD *)this + 8);
              v19 = *v17;
            }
            *v17 = v19 + 1;
            v20 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*((google::protobuf::Arena **)this + 6));
            v21 = *((_QWORD *)this + 8);
            v22 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v22 + 1;
            *(_QWORD *)(v21 + 8 * v22 + 8) = v20;
            v16 = v35;
LABEL_29:
            v15 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption>((google::protobuf::internal::EpsCopyInputStream *)a3, v20, v16);
            v35 = (google::protobuf::internal *)v15;
            if (!v15)
              goto LABEL_59;
            if (*(_QWORD *)a3 <= (unint64_t)v15 || *(_WORD *)v15 != 16058)
              goto LABEL_48;
            continue;
          }
          break;
        }
        v19 = *((_DWORD *)this + 15);
        goto LABEL_27;
      }
      if (v11 == 34)
      {
        if (v10 == 16)
        {
          v23 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v9 + 1);
          v24 = *(unsigned __int8 *)v9;
          if ((*(char *)v9 & 0x80000000) == 0)
            goto LABEL_37;
          v25 = *(char *)v23;
          v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            v35 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v9, v24);
            if (!v35)
              goto LABEL_59;
            v24 = v30;
          }
          else
          {
            v23 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v9 + 2);
LABEL_37:
            v35 = v23;
          }
          if (v24 > 2)
          {
            if ((*v8 & 1) != 0)
            {
              v33 = (google::protobuf::UnknownFieldSet *)(*v8 & 0xFFFFFFFFFFFFFFFELL);
            }
            else
            {
              v34 = v24;
              google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((uint64_t *)this + 4);
              v24 = v34;
            }
            google::protobuf::UnknownFieldSet::AddVarint(v33, 0x22u, v24);
          }
          else
          {
            *((_DWORD *)this + 10) |= 2u;
            *((_DWORD *)this + 19) = v24;
          }
          goto LABEL_48;
        }
        goto LABEL_14;
      }
      if (v11 != 33 || v10 != 8)
        goto LABEL_14;
      v26 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v9 + 1);
      v27 = *(unsigned __int8 *)v9;
      if ((*(char *)v9 & 0x80000000) == 0)
        goto LABEL_43;
      v28 = *(char *)v26;
      v27 = v27 + (v28 << 7) - 128;
      if ((v28 & 0x80000000) == 0)
      {
        v26 = (google::protobuf::internal::InternalMetadataWithArena *)((char *)v9 + 2);
LABEL_43:
        v35 = v26;
        *((_BYTE *)this + 72) = v27 != 0;
        v6 = 1;
        goto LABEL_48;
      }
      v31 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v9, v27);
      v35 = v31;
      *((_BYTE *)this + 72) = v32 != 0;
      v6 = 1;
      if (!v31)
        goto LABEL_59;
LABEL_48:
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck((google::protobuf::internal::EpsCopyInputStream *)a3, (const char **)&v35, a3[11].i32[1]) & 1) != 0)goto LABEL_2;
    }
    v9 = (google::protobuf::internal *)((char *)v35 + 2);
LABEL_7:
    v35 = v9;
    goto LABEL_8;
  }
LABEL_2:
  *((_DWORD *)this + 10) |= v6;
  return v35;
}

const google::protobuf::UnknownFieldSet *google::protobuf::MethodOptions::InternalSerializeWithCachedSizesToArray(google::protobuf::MethodOptions *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  int i;
  google::protobuf::UninterpretedOption *v14;
  google::protobuf::io::EpsCopyOutputStream *v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  const google::protobuf::UnknownFieldSet *result;
  google::protobuf::io::EpsCopyOutputStream *v22;
  uint64_t v23;

  v4 = a2;
  v6 = *((_DWORD *)this + 10);
  if ((v6 & 1) != 0)
  {
    if (*(_QWORD *)a3 <= (unint64_t)a2)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v7 = *((_BYTE *)this + 72);
    *(_WORD *)v4 = 648;
    v4[2] = v7;
    v4 += 3;
  }
  if ((v6 & 2) != 0)
  {
    if ((unint64_t)v4 >= *(_QWORD *)a3)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v8 = *((int *)this + 19);
    *(_WORD *)v4 = 656;
    if (v8 > 0x7F)
    {
      v4[2] = v8 | 0x80;
      v9 = v8 >> 7;
      if (v8 >> 14)
      {
        v4 += 4;
        do
        {
          *(v4 - 1) = v9 | 0x80;
          v10 = v9 >> 7;
          ++v4;
          v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v4 - 1) = v10;
      }
      else
      {
        v4[3] = v9;
        v4 += 4;
      }
    }
    else
    {
      v4[2] = v8;
      v4 += 3;
    }
  }
  v12 = *((_DWORD *)this + 14);
  if (v12)
  {
    for (i = 0; i != v12; ++i)
    {
      if ((unint64_t)v4 >= *(_QWORD *)a3)
        v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v14 = (google::protobuf::UninterpretedOption *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((uint64_t)this + 48, i);
      *(_WORD *)v4 = 16058;
      v16 = *((_DWORD *)v14 + 5);
      if (v16 > 0x7F)
      {
        v4[2] = v16 | 0x80;
        v18 = v16 >> 7;
        if (v16 >> 14)
        {
          v17 = (unsigned __int8 *)(v4 + 4);
          do
          {
            *(v17 - 1) = v18 | 0x80;
            v19 = v18 >> 7;
            ++v17;
            v20 = v18 >> 14;
            v18 >>= 7;
          }
          while (v20);
          *(v17 - 1) = v19;
        }
        else
        {
          v4[3] = v18;
          v17 = (unsigned __int8 *)(v4 + 4);
        }
      }
      else
      {
        v4[2] = v16;
        v17 = (unsigned __int8 *)(v4 + 3);
      }
      v4 = (char *)google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray(v14, v17, a3, v15);
    }
  }
  result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray((google::protobuf::MethodOptions *)((char *)this + 8), 1000, 0x20000000, (unsigned __int8 *)v4, a3);
  v23 = *((_QWORD *)this + 4);
  if ((v23 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v23 & 0xFFFFFFFFFFFFFFFELL), result, a3, v22);
  return result;
}

char *google::protobuf::MethodOptions::ByteSizeLong(google::protobuf::MethodOptions *this)
{
  uint64_t v2;
  uint64_t v3;
  const google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  google::protobuf::UninterpretedOption **v6;
  uint64_t v7;
  google::protobuf::UninterpretedOption *v8;
  char *v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::MethodOptions *)((char *)this + 8));
  v3 = *((int *)this + 14);
  v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  v5 = *((_QWORD *)this + 8);
  if (v5)
    v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  else
    v6 = 0;
  if ((_DWORD)v3)
  {
    v7 = 8 * v3;
    do
    {
      v8 = *v6++;
      v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (_QWORD)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  v10 = *((_DWORD *)this + 10);
  if ((v10 & 3) != 0)
  {
    if ((v10 & 1) != 0)
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    if ((v10 & 2) != 0)
    {
      v11 = *((_DWORD *)this + 19);
      v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v11 >= 0)
        v13 = v12;
      else
        v13 = 12;
      v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v13);
    }
  }
  if ((*((_BYTE *)this + 32) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MethodOptions *)((char *)this + 32), v4, (_DWORD *)this + 11);
  *((_DWORD *)this + 11) = (_DWORD)v4;
  return (char *)v4;
}

void google::protobuf::MethodOptions::MergeFrom(signed int **this, signed int **lpsrc)
{
  std::string *v4;
  signed int **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 9341);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::MethodOptions::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF801CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::CopyFrom(signed int **this, signed int **a2)
{
  if (a2 != this)
  {
    google::protobuf::MethodOptions::Clear((google::protobuf::MethodOptions *)this);
    google::protobuf::MethodOptions::MergeFrom(this, a2);
  }
}

{
  if (a2 != this)
  {
    google::protobuf::MethodOptions::Clear((google::protobuf::MethodOptions *)this);
    google::protobuf::MethodOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::MethodOptions::GetMetadata(google::protobuf::MethodOptions *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF581228;
}

google::protobuf::UninterpretedOption_NamePart *google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart(google::protobuf::UninterpretedOption_NamePart *this, google::protobuf::Arena *a2)
{
  *((_QWORD *)this + 1) = a2;
  *(_QWORD *)this = &off_1E7928F50;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_BYTE *)this + 32) = 0;
  return this;
}

void sub_1BF801DC4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(google::protobuf::UninterpretedOption_NamePart *this)
{
  *(_QWORD *)this = &off_1E7928F50;
  google::protobuf::UninterpretedOption_NamePart::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(this);
  JUMPOUT(0x1C3B8D890);
}

void google::protobuf::UninterpretedOption_NamePart::SharedDtor(google::protobuf::UninterpretedOption_NamePart *this)
{
  uint64_t v2;
  unint64_t v3;
  std::string *v4;
  uint64_t v5;
  char v7;
  std::string v8[2];

  v2 = *((_QWORD *)this + 1);
  v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) == 0)
  {
    if (!v3)
      goto LABEL_4;
    goto LABEL_3;
  }
  if (*(_QWORD *)(v3 + 24))
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 9466);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  v5 = *((_QWORD *)this + 3);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    MEMORY[0x1C3B8D890](v5, 0x1012C40EC159624);
  }
}

void sub_1BF801ED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::UninterpretedOption_NamePart::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void google::protobuf::UninterpretedOption_NamePart::Clear(google::protobuf::UninterpretedOption_NamePart *this)
{
  uint64_t v1;
  char *v2;
  char v3;

  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v1 = *((_QWORD *)this + 3);
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  v3 = *((_BYTE *)this + 8);
  v2 = (char *)this + 8;
  v2[24] = 0;
  *((_DWORD *)v2 + 2) = 0;
  if ((v3 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoClear((google::protobuf::internal::InternalMetadataWithArena *)v2);
}

google::protobuf::internal *google::protobuf::UninterpretedOption_NamePart::_InternalParse(google::protobuf::UninterpretedOption_NamePart *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  int v6;
  std::string **v8;
  std::string::value_type *v9;
  char *v10;
  BOOL v12;
  google::protobuf::internal *v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  google::protobuf::Arena *v17;
  std::string *v18;
  char *v19;
  const char *v20;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v22;
  uint64_t v23;
  google::protobuf::internal *v24;
  void *v25[2];

  v24 = a2;
  v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v24, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    v8 = (std::string **)((char *)this + 24);
    while (1)
    {
      v9 = (char *)v24 + 1;
      v10 = (char *)*(unsigned __int8 *)v24;
      if ((*(char *)v24 & 0x80000000) == 0)
        goto LABEL_7;
      v10 = (char *)(v10 + (*v9 << 7) - 128);
      if ((*v9 & 0x80000000) == 0)
        break;
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, v10);
      v24 = TagFallback;
      if (!TagFallback)
        goto LABEL_36;
      v9 = (std::string::value_type *)TagFallback;
LABEL_8:
      if (v10 >> 3 != 2)
      {
        if (v10 >> 3 == 1 && v10 == 10)
        {
          *((_DWORD *)this + 4) |= 1u;
          v16 = *((_QWORD *)this + 1);
          v17 = (google::protobuf::Arena *)(v16 & 0xFFFFFFFFFFFFFFFELL);
          if ((v16 & 1) != 0)
            v17 = (google::protobuf::Arena *)*((_QWORD *)v17 + 3);
          v18 = *v8;
          if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, v17, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
            v18 = *v8;
            v9 = (std::string::value_type *)v24;
          }
          v19 = google::protobuf::internal::InlineGreedyStringParser(v18, v9, (uint64_t)a3);
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v25, (uint64_t *)v18, v20);
          google::protobuf::internal::VerifyUTF8(v25[0], (size_t)v25[1], (google::protobuf::internal *)"google.protobuf.UninterpretedOption.NamePart.name_part");
          v24 = (google::protobuf::internal *)v19;
          if (!v19)
            goto LABEL_36;
          goto LABEL_29;
        }
LABEL_13:
        if ((_DWORD)v10)
          v12 = (v10 & 7) == 4;
        else
          v12 = 1;
        if (v12)
        {
          *((_DWORD *)a3 + 20) = (_DWORD)v10 - 1;
          goto LABEL_2;
        }
        v24 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, (uint64_t *)this + 1, (google::protobuf::internal::InternalMetadataWithArena *)v9, a3, v5);
        if (!v24)
        {
LABEL_36:
          v24 = 0;
          goto LABEL_2;
        }
        goto LABEL_29;
      }
      if (v10 != 16)
        goto LABEL_13;
      v6 |= 2u;
      v13 = (google::protobuf::internal *)(v9 + 1);
      v14 = *v9;
      if ((*v9 & 0x80000000) == 0)
        goto LABEL_23;
      v15 = *(char *)v13;
      v14 = v14 + (v15 << 7) - 128;
      if ((v15 & 0x80000000) == 0)
      {
        v13 = (google::protobuf::internal *)(v9 + 2);
LABEL_23:
        v24 = v13;
        *((_BYTE *)this + 32) = v14 != 0;
        goto LABEL_29;
      }
      v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v9, v14);
      v24 = v22;
      *((_BYTE *)this + 32) = v23 != 0;
      if (!v22)
        goto LABEL_36;
LABEL_29:
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v24, *((_DWORD *)a3 + 23)) & 1) != 0)
        goto LABEL_2;
    }
    v9 = (char *)v24 + 2;
LABEL_7:
    v24 = (google::protobuf::internal *)v9;
    goto LABEL_8;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return v24;
}

const google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption_NamePart::InternalSerializeWithCachedSizesToArray(google::protobuf::UninterpretedOption_NamePart *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7;
  unsigned __int8 *v8;
  const char *v9;
  char v10;
  uint64_t v11;

  v7 = *((_DWORD *)this + 4);
  if ((v7 & 1) != 0)
  {
    v8 = (unsigned __int8 *)*((_QWORD *)this + 3);
    if ((char)v8[23] < 0)
    {
      v8 = *(unsigned __int8 **)v8;
      v9 = *(const char **)(*((_QWORD *)this + 3) + 8);
    }
    else
    {
      v9 = (const char *)v8[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v8, v9, 1, (google::protobuf::internal *)"google.protobuf.UninterpretedOption.NamePart.name_part");
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3), (char *)a2);
  }
  if ((v7 & 2) != 0)
  {
    if ((unint64_t)a2 >= *(_QWORD *)a3)
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
    v10 = *((_BYTE *)this + 32);
    *(_BYTE *)a2 = 16;
    *((_BYTE *)a2 + 1) = v10;
    a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }
  v11 = *((_QWORD *)this + 1);
  if ((v11 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v11 & 0xFFFFFFFFFFFFFFFELL), a2, a3, a4);
  else
    return a2;
}

uint64_t google::protobuf::UninterpretedOption_NamePart::RequiredFieldsByteSizeFallback(google::protobuf::UninterpretedOption_NamePart *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 1) != 0)
  {
    v3 = *((_QWORD *)this + 3);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v5 = v4;
    v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v2 = 0;
  }
  if ((v1 & 2) != 0)
    return v2 + 2;
  else
    return v2;
}

char *google::protobuf::UninterpretedOption_NamePart::ByteSizeLong(google::protobuf::UninterpretedOption_NamePart *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  const google::protobuf::UnknownFieldSet *v5;

  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    v5 = (const google::protobuf::UnknownFieldSet *)google::protobuf::UninterpretedOption_NamePart::RequiredFieldsByteSizeFallback(this);
  }
  else
  {
    v2 = *((_QWORD *)this + 3);
    v3 = *(unsigned __int8 *)(v2 + 23);
    v4 = *(_QWORD *)(v2 + 8);
    if ((v3 & 0x80u) == 0)
      v4 = v3;
    v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 3);
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UninterpretedOption_NamePart *)((char *)this + 8), v5, (_DWORD *)this + 5);
  *((_DWORD *)this + 5) = (_DWORD)v5;
  return (char *)v5;
}

void google::protobuf::UninterpretedOption_NamePart::MergeFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::Message *lpsrc)
{
  std::string *v4;
  const google::protobuf::UninterpretedOption_NamePart *v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 9625);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1BF8023EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption_NamePart::MergeFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::UninterpretedOption_NamePart *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  __int128 *v7;
  std::string **v8;
  uint64_t v9;
  google::protobuf::Arena *v10;
  char v11;
  std::string v12[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 9640);
    v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((google::protobuf::UninterpretedOption_NamePart *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (__int128 *)*((_QWORD *)a2 + 3);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (std::string **)((char *)this + 24);
      v9 = *((_QWORD *)this + 1);
      v10 = (google::protobuf::Arena *)(v9 & 0xFFFFFFFFFFFFFFFELL);
      if ((v9 & 1) != 0)
        v10 = (google::protobuf::Arena *)*((_QWORD *)v10 + 3);
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v8, v10, v7);
        if ((v6 & 2) == 0)
          goto LABEL_13;
        goto LABEL_12;
      }
      std::string::operator=(*v8, (const std::string *)v7);
    }
    if ((v6 & 2) == 0)
    {
LABEL_13:
      *((_DWORD *)this + 4) |= v6;
      return;
    }
LABEL_12:
    *((_BYTE *)this + 32) = *((_BYTE *)a2 + 32);
    goto LABEL_13;
  }
}

void sub_1BF802508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption_NamePart::CopyFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::UninterpretedOption_NamePart::Clear(this);
    google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, a2);
  }
}

BOOL google::protobuf::UninterpretedOption_NamePart::IsInitialized(google::protobuf::UninterpretedOption_NamePart *this)
{
  return (~*((_DWORD *)this + 4) & 3) == 0;
}

uint64_t google::protobuf::UninterpretedOption_NamePart::GetMetadata(google::protobuf::UninterpretedOption_NamePart *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF581238;
}

google::protobuf::UninterpretedOption *google::protobuf::UninterpretedOption::UninterpretedOption(google::protobuf::UninterpretedOption *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7929010;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 3) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  if (atomic_load(scc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  return this;
}

void sub_1BF802614(_Unwind_Exception *a1)
{
  uint64_t *v1;
  google::protobuf::internal::ArenaImpl **v2;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption::~UninterpretedOption(google::protobuf::UninterpretedOption *this)
{
  *(_QWORD *)this = &off_1E7929010;
  google::protobuf::UninterpretedOption::SharedDtor(this);
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  google::protobuf::UninterpretedOption::~UninterpretedOption(this);
  JUMPOUT(0x1C3B8D890);
}

void google::protobuf::UninterpretedOption::SharedDtor(google::protobuf::UninterpretedOption *this)
{
  uint64_t v2;
  unint64_t v3;
  std::string *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  char v10;
  std::string v11[2];

  v2 = *((_QWORD *)this + 1);
  v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) == 0)
  {
    if (!v3)
      goto LABEL_4;
    goto LABEL_3;
  }
  if (*(_QWORD *)(v3 + 24))
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 9773);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  v5 = *((_QWORD *)this + 6);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    MEMORY[0x1C3B8D890](v5, 0x1012C40EC159624);
  }
  v7 = *((_QWORD *)this + 7);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    MEMORY[0x1C3B8D890](v7, 0x1012C40EC159624);
  }
  v9 = *((_QWORD *)this + 8);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v9)
  {
    if (*(char *)(v9 + 23) < 0)
      operator delete(*(void **)v9);
    MEMORY[0x1C3B8D890](v9, 0x1012C40EC159624);
  }
}

void sub_1BF8027A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::UninterpretedOption::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void google::protobuf::UninterpretedOption::Clear(google::protobuf::UninterpretedOption *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  google::protobuf::internal::InternalMetadataWithArena *v6;
  char v7;

  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((uint64_t)this + 24);
  v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) != 0)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0)
        goto LABEL_4;
LABEL_10:
      v4 = *((_QWORD *)this + 7);
      if (*(char *)(v4 + 23) < 0)
      {
        **(_BYTE **)v4 = 0;
        *(_QWORD *)(v4 + 8) = 0;
        if ((v2 & 4) == 0)
          goto LABEL_17;
      }
      else
      {
        *(_BYTE *)v4 = 0;
        *(_BYTE *)(v4 + 23) = 0;
        if ((v2 & 4) == 0)
          goto LABEL_17;
      }
      goto LABEL_14;
    }
    v3 = *((_QWORD *)this + 6);
    if (*(char *)(v3 + 23) < 0)
    {
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
      if ((v2 & 2) != 0)
        goto LABEL_10;
    }
    else
    {
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
      if ((v2 & 2) != 0)
        goto LABEL_10;
    }
LABEL_4:
    if ((v2 & 4) == 0)
      goto LABEL_17;
LABEL_14:
    v5 = *((_QWORD *)this + 8);
    if (*(char *)(v5 + 23) < 0)
    {
      **(_BYTE **)v5 = 0;
      *(_QWORD *)(v5 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v5 = 0;
      *(_BYTE *)(v5 + 23) = 0;
    }
  }
LABEL_17:
  if ((v2 & 0x38) != 0)
  {
    *((_QWORD *)this + 9) = 0;
    *((_QWORD *)this + 10) = 0;
    *((_QWORD *)this + 11) = 0;
  }
  v7 = *((_BYTE *)this + 8);
  v6 = (google::protobuf::UninterpretedOption *)((char *)this + 8);
  *((_DWORD *)v6 + 2) = 0;
  if ((v7 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v6);
}

google::protobuf::internal *google::protobuf::UninterpretedOption::_InternalParse(google::protobuf::UninterpretedOption *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  int v6;
  std::string **v8;
  std::string **v9;
  std::string::value_type *v10;
  char *v11;
  char *v12;
  google::protobuf::internal *v13;
  int *v14;
  uint64_t v15;
  int v16;
  google::protobuf::UninterpretedOption_NamePart *v17;
  uint64_t v18;
  uint64_t v19;
  google::protobuf::internal *TagFallback;
  uint64_t v21;
  google::protobuf::Arena *v22;
  std::string *v23;
  char *v24;
  const char *v25;
  void *v26;
  size_t v27;
  char *v28;
  google::protobuf::internal *v29;
  unint64_t v30;
  int v31;
  google::protobuf::internal *v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  google::protobuf::Arena *v36;
  std::string *v37;
  char *v38;
  uint64_t v39;
  google::protobuf::Arena *v40;
  std::string *v41;
  const char *v42;
  BOOL v43;
  google::protobuf::internal *v44;
  uint64_t v45;
  google::protobuf::internal *v46;
  uint64_t v47;
  std::string **v48;
  google::protobuf::internal *v49;
  void *v50;
  size_t v51;

  v49 = a2;
  v6 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v49, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    v48 = (std::string **)((char *)this + 64);
    v8 = (std::string **)((char *)this + 56);
    v9 = (std::string **)((char *)this + 48);
    while (2)
    {
      v10 = (char *)v49 + 1;
      v11 = (char *)*(unsigned __int8 *)v49;
      if (*(char *)v49 < 0)
      {
        v11 = (char *)(v11 + (*v10 << 7) - 128);
        if (*v10 < 0)
        {
          TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v49, v11);
          v49 = TagFallback;
          if (!TagFallback)
            goto LABEL_69;
          v10 = (std::string::value_type *)TagFallback;
LABEL_8:
          switch(v11 >> 3)
          {
            case 2u:
              if (v11 != 18)
                goto LABEL_56;
              v12 = v10 - 1;
              break;
            case 3u:
              if (v11 != 26)
                goto LABEL_56;
              *((_DWORD *)this + 4) |= 1u;
              v21 = *((_QWORD *)this + 1);
              v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
              if ((v21 & 1) != 0)
                v22 = (google::protobuf::Arena *)*((_QWORD *)v22 + 3);
              v23 = *v9;
              if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, v22, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
                v23 = *v9;
                v10 = (std::string::value_type *)v49;
              }
              v24 = google::protobuf::internal::InlineGreedyStringParser(v23, v10, (uint64_t)a3);
              google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v50, (uint64_t *)v23, v25);
              v26 = v50;
              v27 = v51;
              v28 = "google.protobuf.UninterpretedOption.identifier_value";
              goto LABEL_54;
            case 4u:
              if (v11 != 32)
                goto LABEL_56;
              v6 |= 8u;
              v29 = (google::protobuf::internal *)(v10 + 1);
              v30 = *v10;
              if ((*v10 & 0x80000000) == 0)
                goto LABEL_34;
              v31 = *(char *)v29;
              v30 = v30 + (v31 << 7) - 128;
              if (v31 < 0)
              {
                v44 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v10, v30);
                v49 = v44;
                *((_QWORD *)this + 9) = v45;
                if (!v44)
                  goto LABEL_69;
              }
              else
              {
                v29 = (google::protobuf::internal *)(v10 + 2);
LABEL_34:
                v49 = v29;
                *((_QWORD *)this + 9) = v30;
              }
              goto LABEL_62;
            case 5u:
              if (v11 != 40)
                goto LABEL_56;
              v6 |= 0x10u;
              v32 = (google::protobuf::internal *)(v10 + 1);
              v33 = *v10;
              if ((*v10 & 0x80000000) == 0)
                goto LABEL_39;
              v34 = *(char *)v32;
              v33 = v33 + (v34 << 7) - 128;
              if (v34 < 0)
              {
                v46 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v10, v33);
                v49 = v46;
                *((_QWORD *)this + 10) = v47;
                if (!v46)
                  goto LABEL_69;
              }
              else
              {
                v32 = (google::protobuf::internal *)(v10 + 2);
LABEL_39:
                v49 = v32;
                *((_QWORD *)this + 10) = v33;
              }
              goto LABEL_62;
            case 6u:
              if (v11 != 49)
                goto LABEL_56;
              v6 |= 0x20u;
              *((_QWORD *)this + 11) = *(_QWORD *)v10;
              v49 = (google::protobuf::internal *)(v10 + 8);
              goto LABEL_62;
            case 7u:
              if (v11 != 58)
                goto LABEL_56;
              *((_DWORD *)this + 4) |= 2u;
              v35 = *((_QWORD *)this + 1);
              v36 = (google::protobuf::Arena *)(v35 & 0xFFFFFFFFFFFFFFFELL);
              if ((v35 & 1) != 0)
                v36 = (google::protobuf::Arena *)*((_QWORD *)v36 + 3);
              v37 = *v8;
              if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, v36, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
                v37 = *v8;
                v10 = (std::string::value_type *)v49;
              }
              v38 = google::protobuf::internal::InlineGreedyStringParser(v37, v10, (uint64_t)a3);
              goto LABEL_61;
            case 8u:
              if (v11 != 66)
                goto LABEL_56;
              *((_DWORD *)this + 4) |= 4u;
              v39 = *((_QWORD *)this + 1);
              v40 = (google::protobuf::Arena *)(v39 & 0xFFFFFFFFFFFFFFFELL);
              if ((v39 & 1) != 0)
                v40 = (google::protobuf::Arena *)*((_QWORD *)v40 + 3);
              v41 = *v48;
              if (*v48 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstance(v48, v40, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
                v41 = *v48;
                v10 = (std::string::value_type *)v49;
              }
              v24 = google::protobuf::internal::InlineGreedyStringParser(v41, v10, (uint64_t)a3);
              google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v50, (uint64_t *)v41, v42);
              v26 = v50;
              v27 = v51;
              v28 = "google.protobuf.UninterpretedOption.aggregate_value";
LABEL_54:
              google::protobuf::internal::VerifyUTF8(v26, v27, (google::protobuf::internal *)v28);
              v49 = (google::protobuf::internal *)v24;
              if (!v24)
                goto LABEL_69;
              goto LABEL_62;
            default:
LABEL_56:
              if ((_DWORD)v11)
                v43 = (v11 & 7) == 4;
              else
                v43 = 1;
              if (v43)
              {
                *((_DWORD *)a3 + 20) = (_DWORD)v11 - 1;
                goto LABEL_2;
              }
              v38 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (uint64_t *)this + 1, (google::protobuf::internal::InternalMetadataWithArena *)v10, a3, v5);
LABEL_61:
              v49 = (google::protobuf::internal *)v38;
              if (!v38)
              {
LABEL_69:
                v49 = 0;
                goto LABEL_2;
              }
LABEL_62:
              if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v49, *((_DWORD *)a3 + 23)) & 1) != 0)goto LABEL_2;
              continue;
          }
          while (1)
          {
            v13 = (google::protobuf::internal *)(v12 + 1);
            v49 = (google::protobuf::internal *)(v12 + 1);
            v14 = (int *)*((_QWORD *)this + 5);
            if (!v14)
              break;
            v15 = *((int *)this + 8);
            v16 = *v14;
            if ((int)v15 >= *v14)
            {
              if (v16 == *((_DWORD *)this + 9))
              {
LABEL_16:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v16 + 1);
                v14 = (int *)*((_QWORD *)this + 5);
                v16 = *v14;
              }
              *v14 = v16 + 1;
              v17 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(*((google::protobuf::Arena **)this + 3));
              v18 = *((_QWORD *)this + 5);
              v19 = *((int *)this + 8);
              *((_DWORD *)this + 8) = v19 + 1;
              *(_QWORD *)(v18 + 8 * v19 + 8) = v17;
              v13 = v49;
              goto LABEL_18;
            }
            *((_DWORD *)this + 8) = v15 + 1;
            v17 = *(google::protobuf::UninterpretedOption_NamePart **)&v14[2 * v15 + 2];
LABEL_18:
            v12 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption_NamePart>(a3, v17, v13);
            v49 = (google::protobuf::internal *)v12;
            if (!v12)
              goto LABEL_69;
            if (*(_QWORD *)a3 <= (unint64_t)v12 || *v12 != 18)
              goto LABEL_62;
          }
          v16 = *((_DWORD *)this + 9);
          goto LABEL_16;
        }
        v10 = (char *)v49 + 2;
      }
      break;
    }
    v49 = (google::protobuf::internal *)v10;
    goto LABEL_8;
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v6;
  return v49;
}

char *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::UninterpretedOption_NamePart>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::UninterpretedOption_NamePart *a2, google::protobuf::internal *a3)
{
  int v6;
  const char *v7;
  char *v8;
  char *result;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  int v15;

  v6 = *(char *)a3;
  v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result)
      return result;
    v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    v8 = (char *)a3 + 1;
  }
  v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  v12 = *((_DWORD *)this + 22);
  v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13)
    return 0;
  v14 = v11;
  result = (char *)google::protobuf::UninterpretedOption_NamePart::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result)
    return result;
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20))
    return 0;
  v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(_QWORD *)this = *((_QWORD *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption::InternalSerializeWithCachedSizesToArray(google::protobuf::UninterpretedOption *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7;
  int i;
  google::protobuf::UninterpretedOption_NamePart *v9;
  google::protobuf::io::EpsCopyOutputStream *v10;
  unsigned int v11;
  unsigned __int8 *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned __int8 *v17;
  const char *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  const char *v29;
  uint64_t v30;

  v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((unint64_t)a2 >= *(_QWORD *)a3)
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      v9 = (google::protobuf::UninterpretedOption_NamePart *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((uint64_t)this + 24, i);
      *a2 = 18;
      v11 = *((_DWORD *)v9 + 5);
      if (v11 > 0x7F)
      {
        a2[1] = v11 | 0x80;
        v13 = v11 >> 7;
        if (v11 >> 14)
        {
          v12 = a2 + 3;
          do
          {
            *(v12 - 1) = v13 | 0x80;
            v14 = v13 >> 7;
            ++v12;
            v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *(v12 - 1) = v14;
        }
        else
        {
          a2[2] = v13;
          v12 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v11;
        v12 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::UninterpretedOption_NamePart::InternalSerializeWithCachedSizesToArray(v9, (google::protobuf::UnknownFieldSet *)v12, a3, v10);
    }
  }
  v16 = *((_DWORD *)this + 4);
  if ((v16 & 1) != 0)
  {
    v17 = (unsigned __int8 *)*((_QWORD *)this + 6);
    if ((char)v17[23] < 0)
    {
      v17 = *(unsigned __int8 **)v17;
      v18 = *(const char **)(*((_QWORD *)this + 6) + 8);
    }
    else
    {
      v18 = (const char *)v17[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v17, v18, 1, (google::protobuf::internal *)"google.protobuf.UninterpretedOption.identifier_value");
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 6), (char *)a2);
    if ((v16 & 8) == 0)
    {
LABEL_15:
      if ((v16 & 0x10) == 0)
        goto LABEL_16;
LABEL_35:
      if ((unint64_t)a2 >= *(_QWORD *)a3)
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      v23 = *((_QWORD *)this + 10);
      *a2 = 40;
      if (v23 > 0x7F)
      {
        a2[1] = v23 | 0x80;
        v24 = v23 >> 7;
        if (v23 >> 14)
        {
          a2 += 3;
          do
          {
            *(a2 - 1) = v24 | 0x80;
            v25 = v24 >> 7;
            ++a2;
            v26 = v24 >> 14;
            v24 >>= 7;
          }
          while (v26);
          *(a2 - 1) = v25;
          if ((v16 & 0x20) != 0)
            goto LABEL_46;
        }
        else
        {
          a2[2] = v24;
          a2 += 3;
          if ((v16 & 0x20) != 0)
            goto LABEL_46;
        }
      }
      else
      {
        a2[1] = v23;
        a2 += 2;
        if ((v16 & 0x20) != 0)
          goto LABEL_46;
      }
LABEL_17:
      if ((v16 & 2) == 0)
        goto LABEL_18;
      goto LABEL_49;
    }
  }
  else if ((v16 & 8) == 0)
  {
    goto LABEL_15;
  }
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
  v19 = *((_QWORD *)this + 9);
  *a2 = 32;
  if (v19 > 0x7F)
  {
    a2[1] = v19 | 0x80;
    v20 = v19 >> 7;
    if (v19 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - 1) = v20 | 0x80;
        v21 = v20 >> 7;
        ++a2;
        v22 = v20 >> 14;
        v20 >>= 7;
      }
      while (v22);
      *(a2 - 1) = v21;
      if ((v16 & 0x10) != 0)
        goto LABEL_35;
    }
    else
    {
      a2[2] = v20;
      a2 += 3;
      if ((v16 & 0x10) != 0)
        goto LABEL_35;
    }
  }
  else
  {
    a2[1] = v19;
    a2 += 2;
    if ((v16 & 0x10) != 0)
      goto LABEL_35;
  }
LABEL_16:
  if ((v16 & 0x20) == 0)
    goto LABEL_17;
LABEL_46:
  if ((unint64_t)a2 >= *(_QWORD *)a3)
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
  v27 = *((_QWORD *)this + 11);
  *a2 = 49;
  *(_QWORD *)(a2 + 1) = v27;
  a2 += 9;
  if ((v16 & 2) == 0)
  {
LABEL_18:
    if ((v16 & 4) == 0)
      goto LABEL_54;
    goto LABEL_50;
  }
LABEL_49:
  a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((_QWORD *)this + 7), (char *)a2);
  if ((v16 & 4) == 0)
    goto LABEL_54;
LABEL_50:
  v28 = (unsigned __int8 *)*((_QWORD *)this + 8);
  if ((char)v28[23] < 0)
  {
    v28 = *(unsigned __int8 **)v28;
    v29 = *(const char **)(*((_QWORD *)this + 8) + 8);
  }
  else
  {
    v29 = (const char *)v28[23];
  }
  google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v28, v29, 1, (google::protobuf::internal *)"google.protobuf.UninterpretedOption.aggregate_value");
  a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((_QWORD *)this + 8), (char *)a2);
LABEL_54:
  v30 = *((_QWORD *)this + 1);
  if ((v30 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v30 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
  else
    return (const google::protobuf::UnknownFieldSet *)a2;
}

char *google::protobuf::UninterpretedOption::ByteSizeLong(google::protobuf::UninterpretedOption *this)
{
  const google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  google::protobuf::UninterpretedOption_NamePart **v4;
  uint64_t v5;
  google::protobuf::UninterpretedOption_NamePart *v6;
  char *v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = (google::protobuf::UninterpretedOption_NamePart **)(v3 + 8);
  else
    v4 = 0;
  if ((_DWORD)v2)
  {
    v5 = 8 * (_QWORD)v2;
    do
    {
      v6 = *v4++;
      v7 = google::protobuf::UninterpretedOption_NamePart::ByteSizeLong(v6);
      v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (_QWORD)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    v2 = 0;
  }
  v8 = *((_DWORD *)this + 4);
  if ((v8 & 0x3F) == 0)
    goto LABEL_18;
  if ((v8 & 1) != 0)
  {
    v10 = *((_QWORD *)this + 6);
    v11 = *(unsigned __int8 *)(v10 + 23);
    v12 = *(_QWORD *)(v10 + 8);
    if ((v11 & 0x80u) == 0)
      v12 = v11;
    v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0)
        goto LABEL_13;
      goto LABEL_26;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  v13 = *((_QWORD *)this + 7);
  v14 = *(unsigned __int8 *)(v13 + 23);
  v15 = *(_QWORD *)(v13 + 8);
  if ((v14 & 0x80u) == 0)
    v15 = v14;
  v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0)
      goto LABEL_14;
    goto LABEL_29;
  }
LABEL_26:
  v16 = *((_QWORD *)this + 8);
  v17 = *(unsigned __int8 *)(v16 + 23);
  v18 = *(_QWORD *)(v16 + 8);
  if ((v17 & 0x80u) == 0)
    v18 = v17;
  v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_29:
  v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                 + ((9 * (__clz(*((_QWORD *)this + 9) | 1) ^ 0x3F) + 73) >> 6)
                                                 + 1);
  if ((v8 & 0x10) != 0)
LABEL_15:
    v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                   + ((9 * (__clz(*((_QWORD *)this + 10) | 1) ^ 0x3F) + 73) >> 6)
                                                   + 1);
LABEL_16:
  if ((v8 & 0x20) != 0)
    v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + 9);
LABEL_18:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UninterpretedOption *)((char *)this + 8), v2, (_DWORD *)this + 5);
  *((_DWORD *)this + 5) = (_DWORD)v2;
  return (char *)v2;
}

void google::protobuf::UninterpretedOption::MergeFrom(signed int **this, signed int **lpsrc)
{
  std::string *v4;
  signed int **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 10045);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::UninterpretedOption::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF8033B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption::MergeFrom(signed int **this, signed int **a2)
{
  std::string *v4;
  unint64_t v5;
  int v6;
  __int128 *v7;
  std::string **v8;
  unint64_t v9;
  google::protobuf::Arena *v10;
  __int128 *v11;
  std::string **v12;
  unint64_t v13;
  google::protobuf::Arena *v14;
  __int128 *v15;
  std::string **v16;
  unint64_t v17;
  google::protobuf::Arena *v18;
  char v19;
  std::string v20[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 10060);
    v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  v5 = (unint64_t)a2[1];
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((google::protobuf::internal::InternalMetadataWithArena *)(this + 1), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(this + 3, (uint64_t)(a2 + 3));
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x3F) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0)
        goto LABEL_8;
LABEL_21:
      v11 = (__int128 *)a2[7];
      *((_DWORD *)this + 4) |= 2u;
      v12 = (std::string **)(this + 7);
      v13 = (unint64_t)this[1];
      v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
      if ((v13 & 1) != 0)
        v14 = (google::protobuf::Arena *)*((_QWORD *)v14 + 3);
      if (*v12 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v12, v14, v11);
        if ((v6 & 4) != 0)
          goto LABEL_27;
      }
      else
      {
        std::string::operator=(*v12, (const std::string *)v11);
        if ((v6 & 4) != 0)
          goto LABEL_27;
      }
LABEL_9:
      if ((v6 & 8) == 0)
        goto LABEL_10;
LABEL_33:
      this[9] = a2[9];
      if ((v6 & 0x10) == 0)
      {
LABEL_11:
        if ((v6 & 0x20) == 0)
        {
LABEL_13:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_12:
        this[11] = a2[11];
        goto LABEL_13;
      }
LABEL_34:
      this[10] = a2[10];
      if ((v6 & 0x20) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    v7 = (__int128 *)a2[6];
    *((_DWORD *)this + 4) |= 1u;
    v8 = (std::string **)(this + 6);
    v9 = (unint64_t)this[1];
    v10 = (google::protobuf::Arena *)(v9 & 0xFFFFFFFFFFFFFFFELL);
    if ((v9 & 1) != 0)
      v10 = (google::protobuf::Arena *)*((_QWORD *)v10 + 3);
    if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v8, v10, v7);
      if ((v6 & 2) != 0)
        goto LABEL_21;
    }
    else
    {
      std::string::operator=(*v8, (const std::string *)v7);
      if ((v6 & 2) != 0)
        goto LABEL_21;
    }
LABEL_8:
    if ((v6 & 4) == 0)
      goto LABEL_9;
LABEL_27:
    v15 = (__int128 *)a2[8];
    *((_DWORD *)this + 4) |= 4u;
    v16 = (std::string **)(this + 8);
    v17 = (unint64_t)this[1];
    v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
    if ((v17 & 1) != 0)
      v18 = (google::protobuf::Arena *)*((_QWORD *)v18 + 3);
    if (*v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v16, v18, v15);
      if ((v6 & 8) != 0)
        goto LABEL_33;
    }
    else
    {
      std::string::operator=(*v16, (const std::string *)v15);
      if ((v6 & 8) != 0)
        goto LABEL_33;
    }
LABEL_10:
    if ((v6 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_34;
  }
}

void sub_1BF8035B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption::CopyFrom(signed int **this, signed int **a2)
{
  if (a2 != this)
  {
    google::protobuf::UninterpretedOption::Clear((google::protobuf::UninterpretedOption *)this);
    google::protobuf::UninterpretedOption::MergeFrom(this, a2);
  }
}

BOOL google::protobuf::UninterpretedOption::IsInitialized(google::protobuf::UninterpretedOption *this)
{
  char *v1;
  int v2;
  int v3;
  BOOL v4;

  v1 = (char *)this + 24;
  v2 = *((_DWORD *)this + 8);
  do
  {
    v3 = v2;
    v4 = __OFSUB__(v2--, 1);
  }
  while (v2 < 0 == v4
       && (~*(_DWORD *)(google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((uint64_t)v1, v2)+ 16) & 3) == 0);
  return v3 < 1;
}

uint64_t google::protobuf::UninterpretedOption::GetMetadata(google::protobuf::UninterpretedOption *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF581248;
}

google::protobuf::SourceCodeInfo_Location *google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(google::protobuf::SourceCodeInfo_Location *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E79290D0;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = a2;
  *((_DWORD *)this + 12) = 0;
  *((_DWORD *)this + 13) = 0;
  *((_QWORD *)this + 9) = a2;
  *((_QWORD *)this + 7) = a2;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  if (atomic_load(scc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1BF803714(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v4);
  google::protobuf::RepeatedField<int>::~RepeatedField(v3);
  google::protobuf::RepeatedField<int>::~RepeatedField(v2 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(google::protobuf::SourceCodeInfo_Location *this)
{
  *(_QWORD *)this = &off_1E79290D0;
  google::protobuf::SourceCodeInfo_Location::SharedDtor(this);
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 72);
  google::protobuf::RepeatedField<int>::~RepeatedField((char *)this + 48);
  google::protobuf::RepeatedField<int>::~RepeatedField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(this);
  JUMPOUT(0x1C3B8D890);
}

void google::protobuf::SourceCodeInfo_Location::SharedDtor(google::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v2;
  unint64_t v3;
  std::string *v4;
  uint64_t v5;
  uint64_t v7;
  char v9;
  std::string v10[2];

  v2 = *((_QWORD *)this + 1);
  v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) == 0)
  {
    if (!v3)
      goto LABEL_4;
    goto LABEL_3;
  }
  if (*(_QWORD *)(v3 + 24))
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 10193);
    v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  v5 = *((_QWORD *)this + 12);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    MEMORY[0x1C3B8D890](v5, 0x1012C40EC159624);
  }
  v7 = *((_QWORD *)this + 13);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0)
      operator delete(*(void **)v7);
    MEMORY[0x1C3B8D890](v7, 0x1012C40EC159624);
  }
}

void sub_1BF803894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::SourceCodeInfo_Location::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void google::protobuf::SourceCodeInfo_Location::Clear(google::protobuf::SourceCodeInfo_Location *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  google::protobuf::internal::InternalMetadataWithArena *v5;
  char v6;

  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 12) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72);
  v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0)
    goto LABEL_11;
  if ((v2 & 1) == 0)
  {
LABEL_5:
    if ((v2 & 2) != 0)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = *((_QWORD *)this + 12);
  if ((*(char *)(v3 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v3 = 0;
    *(_BYTE *)(v3 + 23) = 0;
    goto LABEL_5;
  }
  **(_BYTE **)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  if ((v2 & 2) != 0)
  {
LABEL_6:
    v4 = *((_QWORD *)this + 13);
    if (*(char *)(v4 + 23) < 0)
    {
      **(_BYTE **)v4 = 0;
      *(_QWORD *)(v4 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v4 = 0;
      *(_BYTE *)(v4 + 23) = 0;
    }
  }
LABEL_11:
  v6 = *((_BYTE *)this + 8);
  v5 = (google::protobuf::SourceCodeInfo_Location *)((char *)this + 8);
  *((_DWORD *)v5 + 2) = 0;
  if ((v6 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v5);
}

google::protobuf::internal *google::protobuf::SourceCodeInfo_Location::_InternalParse(google::protobuf::SourceCodeInfo_Location *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  google::protobuf::internal::ParseContext *v6;
  uint64_t *v8;
  std::string **v9;
  std::string **v10;
  google::protobuf::internal *v11;
  char *v12;
  google::protobuf::internal *v13;
  char *v14;
  uint64_t v15;
  google::protobuf::Arena *v16;
  std::string *v17;
  char *v18;
  const char *v19;
  void *v20;
  size_t v21;
  char *v22;
  uint64_t v23;
  google::protobuf::Arena *v24;
  std::string *v25;
  const char *v26;
  char *v27;
  std::string::value_type *v28;
  int *v29;
  uint64_t v30;
  int v31;
  std::string *v32;
  google::protobuf::internal::ArenaImpl *v33;
  std::string *AlignedAndAddCleanup;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  google::protobuf::internal *TagFallback;
  int v39;
  int v40;
  BOOL v41;
  google::protobuf::internal *v42;
  void *v43;
  size_t v44;

  v42 = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v42, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    v8 = (uint64_t *)((char *)this + 72);
    v9 = (std::string **)((char *)this + 104);
    v10 = (std::string **)((char *)this + 96);
    while (2)
    {
      v11 = (google::protobuf::internal *)((char *)v42 + 1);
      v12 = (char *)*(unsigned __int8 *)v42;
      if (*(char *)v42 < 0)
      {
        v12 = (char *)(v12 + (*(unsigned __int8 *)v11 << 7) - 128);
        if (*(char *)v11 < 0)
        {
          TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v42, v12);
          v42 = TagFallback;
          if (!TagFallback)
            return 0;
          v11 = TagFallback;
LABEL_8:
          switch(v12 >> 3)
          {
            case 1u:
              if (v12 == 10)
              {
                v13 = (google::protobuf::SourceCodeInfo_Location *)((char *)this + 24);
                goto LABEL_13;
              }
              if (v12 != 8)
                goto LABEL_54;
              v39 = google::protobuf::internal::ReadVarint(&v42, (const char **)v12);
              google::protobuf::SourceCodeInfo_Location::_internal_add_path(this, v39);
              goto LABEL_52;
            case 2u:
              if (v12 == 18)
              {
                v13 = (google::protobuf::SourceCodeInfo_Location *)((char *)this + 48);
LABEL_13:
                v14 = google::protobuf::internal::PackedInt32Parser(v13, v11, a3, v5);
LABEL_59:
                v42 = (google::protobuf::internal *)v14;
                if (!v14)
                  return 0;
                goto LABEL_60;
              }
              if (v12 != 16)
              {
LABEL_54:
                if ((_DWORD)v12)
                  v41 = (v12 & 7) == 4;
                else
                  v41 = 1;
                if (v41)
                {
                  *((_DWORD *)a3 + 20) = (_DWORD)v12 - 1;
                  return v42;
                }
                v14 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v12, (uint64_t *)this + 1, v11, a3, v6);
                goto LABEL_59;
              }
              v40 = google::protobuf::internal::ReadVarint(&v42, (const char **)v12);
              google::protobuf::SourceCodeInfo_Location::_internal_add_span(this, v40);
LABEL_52:
              if (!v42)
                return 0;
LABEL_60:
              if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v42, *((_DWORD *)a3 + 23)) & 1) != 0)return v42;
              continue;
            case 3u:
              if (v12 != 26)
                goto LABEL_54;
              *((_DWORD *)this + 4) |= 1u;
              v15 = *((_QWORD *)this + 1);
              v16 = (google::protobuf::Arena *)(v15 & 0xFFFFFFFFFFFFFFFELL);
              if ((v15 & 1) != 0)
                v16 = (google::protobuf::Arena *)*((_QWORD *)v16 + 3);
              v17 = *v10;
              if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, v16, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
                v17 = *v10;
                v11 = v42;
              }
              v18 = google::protobuf::internal::InlineGreedyStringParser(v17, (std::string::value_type *)v11, (uint64_t)a3);
              google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v43, (uint64_t *)v17, v19);
              v20 = v43;
              v21 = v44;
              v22 = "google.protobuf.SourceCodeInfo.Location.leading_comments";
              goto LABEL_26;
            case 4u:
              if (v12 != 34)
                goto LABEL_54;
              *((_DWORD *)this + 4) |= 2u;
              v23 = *((_QWORD *)this + 1);
              v24 = (google::protobuf::Arena *)(v23 & 0xFFFFFFFFFFFFFFFELL);
              if ((v23 & 1) != 0)
                v24 = (google::protobuf::Arena *)*((_QWORD *)v24 + 3);
              v25 = *v9;
              if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 13, v24, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
                v25 = *v9;
                v11 = v42;
              }
              v18 = google::protobuf::internal::InlineGreedyStringParser(v25, (std::string::value_type *)v11, (uint64_t)a3);
              google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v43, (uint64_t *)v25, v26);
              v20 = v43;
              v21 = v44;
              v22 = "google.protobuf.SourceCodeInfo.Location.trailing_comments";
LABEL_26:
              google::protobuf::internal::VerifyUTF8(v20, v21, (google::protobuf::internal *)v22);
              v42 = (google::protobuf::internal *)v18;
              if (!v18)
                return 0;
              goto LABEL_60;
            case 6u:
              if (v12 != 50)
                goto LABEL_54;
              v27 = (char *)v11 - 1;
              break;
            default:
              goto LABEL_54;
          }
          while (1)
          {
            v28 = v27 + 1;
            v42 = (google::protobuf::internal *)(v27 + 1);
            v29 = (int *)*((_QWORD *)this + 11);
            if (!v29)
              break;
            v30 = *((int *)this + 20);
            v31 = *v29;
            if ((int)v30 >= *v29)
            {
              if (v31 == *((_DWORD *)this + 21))
              {
LABEL_35:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 18, v31 + 1);
                v29 = (int *)*((_QWORD *)this + 11);
                v31 = *v29;
              }
              *v29 = v31 + 1;
              v33 = (google::protobuf::internal::ArenaImpl *)*v8;
              if (*v8)
              {
                if (*((_QWORD *)v33 + 14))
                AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v33, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
              }
              else
              {
                AlignedAndAddCleanup = (std::string *)operator new();
              }
              v32 = AlignedAndAddCleanup;
              AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
              AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
              AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
              v35 = *((_QWORD *)this + 11);
              v36 = *((int *)this + 20);
              *((_DWORD *)this + 20) = v36 + 1;
              *(_QWORD *)(v35 + 8 * v36 + 8) = AlignedAndAddCleanup;
              v28 = (std::string::value_type *)v42;
              goto LABEL_42;
            }
            *((_DWORD *)this + 20) = v30 + 1;
            v32 = *(std::string **)&v29[2 * v30 + 2];
LABEL_42:
            v27 = google::protobuf::internal::InlineGreedyStringParser(v32, v28, (uint64_t)a3);
            google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v43, (uint64_t *)v32, v37);
            google::protobuf::internal::VerifyUTF8(v43, v44, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.leading_detached_comments");
            v42 = (google::protobuf::internal *)v27;
            if (!v27)
              return 0;
            if (*(_QWORD *)a3 <= (unint64_t)v27 || *v27 != 50)
              goto LABEL_60;
          }
          v31 = *((_DWORD *)this + 21);
          goto LABEL_35;
        }
        v11 = (google::protobuf::internal *)((char *)v42 + 2);
      }
      break;
    }
    v42 = v11;
    goto LABEL_8;
  }
  return v42;
}

uint64_t google::protobuf::SourceCodeInfo_Location::_internal_add_path(google::protobuf::SourceCodeInfo_Location *this, int a2)
{
  int v3;
  int *v4;
  uint64_t result;
  uint64_t v6;

  v3 = *((_DWORD *)this + 6);
  v4 = (int *)((char *)this + 24);
  if (v3 == *((_DWORD *)this + 7))
    google::protobuf::RepeatedField<int>::Reserve((int *)this + 6, v3 + 1);
  result = google::protobuf::RepeatedField<int>::elements((uint64_t)v4);
  v6 = *v4;
  *v4 = v6 + 1;
  *(_DWORD *)(result + 4 * v6) = a2;
  return result;
}

uint64_t google::protobuf::SourceCodeInfo_Location::_internal_add_span(google::protobuf::SourceCodeInfo_Location *this, int a2)
{
  int v3;
  int *v4;
  uint64_t result;
  uint64_t v6;

  v3 = *((_DWORD *)this + 12);
  v4 = (int *)((char *)this + 48);
  if (v3 == *((_DWORD *)this + 13))
    google::protobuf::RepeatedField<int>::Reserve((int *)this + 12, v3 + 1);
  result = google::protobuf::RepeatedField<int>::elements((uint64_t)v4);
  v6 = *v4;
  *v4 = v6 + 1;
  *(_DWORD *)(result + 4 * v6) = a2;
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo_Location::InternalSerializeWithCachedSizesToArray(google::protobuf::SourceCodeInfo_Location *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  char *v5;
  unsigned int v7;
  unint64_t v8;
  std::string *v9;
  _BYTE *v10;
  int *v11;
  int *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unsigned int v18;
  unint64_t v19;
  std::string *v20;
  _BYTE *v21;
  int *v22;
  int *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  unsigned __int8 *v30;
  const char *v31;
  unsigned __int8 *v32;
  const char *v33;
  int v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  int64_t v41;
  const void *v42;
  uint64_t v43;
  unsigned int v45;
  unsigned int v46;
  google::protobuf::SourceCodeInfo_Location *v47;
  char v48;
  std::string v49[2];

  v5 = (char *)a2;
  v7 = *((_DWORD *)this + 10);
  if ((int)v7 >= 1)
  {
    v8 = *(_QWORD *)a3;
    if (*(_QWORD *)a3 <= (unint64_t)a2)
    {
      v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      v8 = *(_QWORD *)a3;
    }
    if (v8 <= (unint64_t)v5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.h", 856);
      v9 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: ptr < end_: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
    }
    *v5 = 10;
    v10 = v5 + 1;
    if (v7 >= 0x80)
    {
      do
      {
        *v10++ = v7 | 0x80;
        v45 = v7 >> 14;
        v7 >>= 7;
      }
      while (v45);
      v5 = v10 - 1;
    }
    v5 += 2;
    *v10 = v7;
    v11 = (int *)*((_QWORD *)this + 4);
    v12 = &v11[*((int *)this + 6)];
    do
    {
      if ((unint64_t)v5 >= *(_QWORD *)a3)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      v14 = *v11++;
      v13 = v14;
      if (v14 > 0x7F)
      {
        *v5 = v13 | 0x80;
        v15 = v13 >> 7;
        if (v13 >> 14)
        {
          v5 += 2;
          do
          {
            *(v5 - 1) = v15 | 0x80;
            v16 = v15 >> 7;
            ++v5;
            v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v5 - 1) = v16;
        }
        else
        {
          v5[1] = v15;
          v5 += 2;
        }
      }
      else
      {
        *v5++ = v13;
      }
    }
    while (v11 < v12);
  }
  v18 = *((_DWORD *)this + 16);
  if ((int)v18 >= 1)
  {
    v19 = *(_QWORD *)a3;
    if ((unint64_t)v5 >= *(_QWORD *)a3)
    {
      v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      v19 = *(_QWORD *)a3;
    }
    if (v19 <= (unint64_t)v5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v49, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.h", 856);
      v20 = google::protobuf::internal::LogMessage::operator<<(v49, "CHECK failed: ptr < end_: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v49[0].__r_.__value_.__l.__data_);
    }
    *v5 = 18;
    v21 = v5 + 1;
    if (v18 >= 0x80)
    {
      do
      {
        *v21++ = v18 | 0x80;
        v46 = v18 >> 14;
        v18 >>= 7;
      }
      while (v46);
      v5 = v21 - 1;
    }
    v5 += 2;
    *v21 = v18;
    v22 = (int *)*((_QWORD *)this + 7);
    v23 = &v22[*((int *)this + 12)];
    do
    {
      if ((unint64_t)v5 >= *(_QWORD *)a3)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      v25 = *v22++;
      v24 = v25;
      if (v25 > 0x7F)
      {
        *v5 = v24 | 0x80;
        v26 = v24 >> 7;
        if (v24 >> 14)
        {
          v5 += 2;
          do
          {
            *(v5 - 1) = v26 | 0x80;
            v27 = v26 >> 7;
            ++v5;
            v28 = v26 >> 14;
            v26 >>= 7;
          }
          while (v28);
          *(v5 - 1) = v27;
        }
        else
        {
          v5[1] = v26;
          v5 += 2;
        }
      }
      else
      {
        *v5++ = v24;
      }
    }
    while (v22 < v23);
  }
  v29 = *((_DWORD *)this + 4);
  if ((v29 & 1) != 0)
  {
    v30 = (unsigned __int8 *)*((_QWORD *)this + 12);
    if ((char)v30[23] < 0)
    {
      v30 = *(unsigned __int8 **)v30;
      v31 = *(const char **)(*((_QWORD *)this + 12) + 8);
    }
    else
    {
      v31 = (const char *)v30[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v30, v31, 1, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.leading_comments");
    v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 12), v5);
  }
  if ((v29 & 2) != 0)
  {
    v32 = (unsigned __int8 *)*((_QWORD *)this + 13);
    if ((char)v32[23] < 0)
    {
      v32 = *(unsigned __int8 **)v32;
      v33 = *(const char **)(*((_QWORD *)this + 13) + 8);
    }
    else
    {
      v33 = (const char *)v32[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v32, v33, 1, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.trailing_comments");
    v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((_QWORD *)this + 13), v5);
  }
  v34 = *((_DWORD *)this + 20);
  v47 = this;
  if (v34 >= 1)
  {
    v35 = 0;
    v36 = (char *)this + 72;
    do
    {
      v37 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v36, v35);
      v38 = v37;
      v39 = *(_DWORD *)(v37 + 8);
      if (*(char *)(v37 + 23) >= 0)
      {
        v40 = *(unsigned __int8 *)(v37 + 23);
      }
      else
      {
        v37 = *(_QWORD *)v37;
        v40 = v39;
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v37, (const char *)v40, 1, (google::protobuf::internal *)"google.protobuf.SourceCodeInfo.Location.leading_detached_comments");
      if (*(char *)(v38 + 23) < 0)
      {
        v41 = *(_QWORD *)(v38 + 8);
        if (v41 > 127)
          goto LABEL_60;
      }
      else
      {
        v41 = *(unsigned __int8 *)(v38 + 23);
      }
      if (*(_QWORD *)a3 - (_QWORD)v5 + 14 >= v41)
      {
        *v5 = 50;
        v5[1] = v41;
        if (*(char *)(v38 + 23) >= 0)
          v42 = (const void *)v38;
        else
          v42 = *(const void **)v38;
        memcpy(v5 + 2, v42, v41);
        v5 += v41 + 2;
        goto LABEL_58;
      }
LABEL_60:
      v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 6, v38, v5);
LABEL_58:
      ++v35;
    }
    while (v34 != v35);
  }
  v43 = *((_QWORD *)v47 + 1);
  if ((v43 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v43 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
  return (const google::protobuf::UnknownFieldSet *)v5;
}

void sub_1BF8042A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::SourceCodeInfo_Location::ByteSizeLong(google::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  const google::protobuf::UnknownFieldSet *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 6);
  if (v2)
  {
    v3 = v2;
    if ((v2 & 0x80000000) != 0)
      v4 = 11;
    else
      v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
  *((_DWORD *)this + 10) = v3;
  v5 = v4 + v2;
  v6 = google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 12);
  if (v6)
  {
    v7 = v6;
    if ((v6 & 0x80000000) != 0)
      v8 = 11;
    else
      v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v5 += v8;
  }
  else
  {
    v7 = 0;
  }
  *((_DWORD *)this + 16) = v7;
  v9 = *((unsigned int *)this + 20);
  v10 = (const google::protobuf::UnknownFieldSet *)(v5 + v6 + v9);
  if ((int)v9 >= 1)
  {
    v11 = 0;
    do
    {
      v12 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 72, v11);
      v13 = *(unsigned __int8 *)(v12 + 23);
      if ((v13 & 0x80u) != 0)
        v13 = *(_QWORD *)(v12 + 8);
      v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6));
      ++v11;
    }
    while ((_DWORD)v9 != v11);
  }
  v14 = *((_DWORD *)this + 4);
  if ((v14 & 3) != 0)
  {
    if ((v14 & 1) != 0)
    {
      v15 = *((_QWORD *)this + 12);
      v16 = *(unsigned __int8 *)(v15 + 23);
      v17 = *(_QWORD *)(v15 + 8);
      if ((v16 & 0x80u) == 0)
        v17 = v16;
      v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v17
                                                                    + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
    }
    if ((v14 & 2) != 0)
    {
      v18 = *((_QWORD *)this + 13);
      v19 = *(unsigned __int8 *)(v18 + 23);
      v20 = *(_QWORD *)(v18 + 8);
      if ((v19 & 0x80u) == 0)
        v20 = v19;
      v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v20
                                                                    + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
    }
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::SourceCodeInfo_Location *)((char *)this + 8), v10, (_DWORD *)this + 5);
  *((_DWORD *)this + 5) = (_DWORD)v10;
  return (char *)v10;
}

void google::protobuf::SourceCodeInfo_Location::MergeFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::Message *lpsrc)
{
  std::string *v4;
  const google::protobuf::SourceCodeInfo_Location *v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 10448);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::SourceCodeInfo_Location::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1BF804554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo_Location::MergeFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::SourceCodeInfo_Location *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  __int128 *v7;
  std::string **v8;
  uint64_t v9;
  google::protobuf::Arena *v10;
  __int128 *v11;
  std::string **v12;
  uint64_t v13;
  google::protobuf::Arena *v14;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 10463);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((google::protobuf::SourceCodeInfo_Location *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  google::protobuf::RepeatedField<int>::MergeFrom((int *)this + 6, (int *)a2 + 6);
  google::protobuf::RepeatedField<int>::MergeFrom((int *)this + 12, (int *)a2 + 12);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (__int128 *)*((_QWORD *)a2 + 12);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (std::string **)((char *)this + 96);
      v9 = *((_QWORD *)this + 1);
      v10 = (google::protobuf::Arena *)(v9 & 0xFFFFFFFFFFFFFFFELL);
      if ((v9 & 1) != 0)
        v10 = (google::protobuf::Arena *)*((_QWORD *)v10 + 3);
      if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstance(v8, v10, v7);
        if ((v6 & 2) == 0)
          return;
        goto LABEL_12;
      }
      std::string::operator=(*v8, (const std::string *)v7);
    }
    if ((v6 & 2) == 0)
      return;
LABEL_12:
    v11 = (__int128 *)*((_QWORD *)a2 + 13);
    *((_DWORD *)this + 4) |= 2u;
    v12 = (std::string **)((char *)this + 104);
    v13 = *((_QWORD *)this + 1);
    v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
    if ((v13 & 1) != 0)
      v14 = (google::protobuf::Arena *)*((_QWORD *)v14 + 3);
    if (*v12 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v12, v14, v11);
    else
      std::string::operator=(*v12, (const std::string *)v11);
  }
}

void sub_1BF8046C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo_Location::CopyFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::SourceCodeInfo_Location::Clear(this);
    google::protobuf::SourceCodeInfo_Location::MergeFrom(this, a2);
  }
}

void google::protobuf::SourceCodeInfo_Location::CopyFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::SourceCodeInfo_Location *a2)
{
  if (a2 != this)
  {
    google::protobuf::SourceCodeInfo_Location::Clear(this);
    google::protobuf::SourceCodeInfo_Location::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::SourceCodeInfo_Location::IsInitialized(google::protobuf::SourceCodeInfo_Location *this)
{
  return 1;
}

uint64_t google::protobuf::SourceCodeInfo_Location::GetMetadata(google::protobuf::SourceCodeInfo_Location *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF581258;
}

google::protobuf::SourceCodeInfo *google::protobuf::SourceCodeInfo::SourceCodeInfo(google::protobuf::SourceCodeInfo *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7929190;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 3) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  if (atomic_load(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  return this;
}

void sub_1BF8047F0(_Unwind_Exception *a1)
{
  uint64_t *v1;
  google::protobuf::internal::ArenaImpl **v2;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo::~SourceCodeInfo(google::protobuf::SourceCodeInfo *this)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  *(_QWORD *)this = &off_1E7929190;
  v3 = (uint64_t *)((char *)this + 8);
  v2 = *((_QWORD *)this + 1);
  v4 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) != 0)
  {
    if (!*(_QWORD *)(v4 + 24))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 10559);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v3);
}

{
  google::protobuf::SourceCodeInfo::~SourceCodeInfo(this);
  JUMPOUT(0x1C3B8D890);
}

void sub_1BF8048AC(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::SourceCodeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *google::protobuf::SourceCodeInfo::default_instance(google::protobuf::SourceCodeInfo *this)
{
  if (atomic_load(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  return &google::protobuf::_SourceCodeInfo_default_instance_;
}

google::protobuf::internal *google::protobuf::SourceCodeInfo::_InternalParse(google::protobuf::SourceCodeInfo *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  google::protobuf::internal::InternalMetadataWithArena *v6;
  char *v7;
  BOOL v8;
  char *v9;
  google::protobuf::internal *v10;
  int *v11;
  uint64_t v12;
  int v13;
  google::protobuf::SourceCodeInfo_Location *v14;
  uint64_t v15;
  uint64_t v16;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v19;

  v19 = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v19, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    while (1)
    {
      v6 = (google::protobuf::internal *)((char *)v19 + 1);
      v7 = (char *)*(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0)
        goto LABEL_5;
      v7 = (char *)(v7 + (*(unsigned __int8 *)v6 << 7) - 128);
      if ((*(char *)v6 & 0x80000000) == 0)
        break;
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, v7);
      v19 = TagFallback;
      if (!TagFallback)
        return 0;
      v6 = TagFallback;
LABEL_6:
      if ((_DWORD)v7 == 10)
      {
        v9 = (char *)v6 - 1;
        while (1)
        {
          v10 = (google::protobuf::internal *)(v9 + 1);
          v19 = (google::protobuf::internal *)(v9 + 1);
          v11 = (int *)*((_QWORD *)this + 5);
          if (!v11)
            break;
          v12 = *((int *)this + 8);
          v13 = *v11;
          if ((int)v12 >= *v11)
          {
            if (v13 == *((_DWORD *)this + 9))
            {
LABEL_19:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v13 + 1);
              v11 = (int *)*((_QWORD *)this + 5);
              v13 = *v11;
            }
            *v11 = v13 + 1;
            v14 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(*((google::protobuf::Arena **)this + 3));
            v15 = *((_QWORD *)this + 5);
            v16 = *((int *)this + 8);
            *((_DWORD *)this + 8) = v16 + 1;
            *(_QWORD *)(v15 + 8 * v16 + 8) = v14;
            v10 = v19;
            goto LABEL_21;
          }
          *((_DWORD *)this + 8) = v12 + 1;
          v14 = *(google::protobuf::SourceCodeInfo_Location **)&v11[2 * v12 + 2];
LABEL_21:
          v9 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::SourceCodeInfo_Location>(a3, v14, v10);
          v19 = (google::protobuf::internal *)v9;
          if (!v9)
            return 0;
          if (*(_QWORD *)a3 <= (unint64_t)v9 || *v9 != 10)
            goto LABEL_24;
        }
        v13 = *((_DWORD *)this + 9);
        goto LABEL_19;
      }
      if ((_DWORD)v7)
        v8 = (v7 & 7) == 4;
      else
        v8 = 1;
      if (v8)
      {
        *((_DWORD *)a3 + 20) = (_DWORD)v7 - 1;
        return v19;
      }
      v19 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v7, (uint64_t *)this + 1, v6, a3, v5);
      if (!v19)
        return 0;
LABEL_24:
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v19, *((_DWORD *)a3 + 23)) & 1) != 0)
        return v19;
    }
    v6 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_5:
    v19 = v6;
    goto LABEL_6;
  }
  return v19;
}

char *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::SourceCodeInfo_Location>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::SourceCodeInfo_Location *a2, google::protobuf::internal *a3)
{
  int v6;
  const char *v7;
  char *v8;
  char *result;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  int v15;

  v6 = *(char *)a3;
  v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result)
      return result;
    v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    v8 = (char *)a3 + 1;
  }
  v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  v12 = *((_DWORD *)this + 22);
  v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13)
    return 0;
  v14 = v11;
  result = (char *)google::protobuf::SourceCodeInfo_Location::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result)
    return result;
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20))
    return 0;
  v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(_QWORD *)this = *((_QWORD *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo::InternalSerializeWithCachedSizesToArray(google::protobuf::SourceCodeInfo *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7;
  int i;
  google::protobuf::SourceCodeInfo_Location *v9;
  google::protobuf::io::EpsCopyOutputStream *v10;
  unsigned int v11;
  google::protobuf::UnknownFieldSet *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;

  v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((unint64_t)a2 >= *(_QWORD *)a3)
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      v9 = (google::protobuf::SourceCodeInfo_Location *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((uint64_t)this + 24, i);
      *(_BYTE *)a2 = 10;
      v11 = *((_DWORD *)v9 + 5);
      if (v11 > 0x7F)
      {
        *((_BYTE *)a2 + 1) = v11 | 0x80;
        v13 = v11 >> 7;
        if (v11 >> 14)
        {
          v12 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((_BYTE *)v12 - 1) = v13 | 0x80;
            v14 = v13 >> 7;
            v12 = (google::protobuf::UnknownFieldSet *)((char *)v12 + 1);
            v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *((_BYTE *)v12 - 1) = v14;
        }
        else
        {
          *((_BYTE *)a2 + 2) = v13;
          v12 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((_BYTE *)a2 + 1) = v11;
        v12 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::SourceCodeInfo_Location::InternalSerializeWithCachedSizesToArray(v9, v12, a3, v10);
    }
  }
  v16 = *((_QWORD *)this + 1);
  if ((v16 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v16 & 0xFFFFFFFFFFFFFFFELL), a2, a3, a4);
  else
    return a2;
}

char *google::protobuf::SourceCodeInfo::ByteSizeLong(google::protobuf::SourceCodeInfo *this)
{
  const google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  google::protobuf::SourceCodeInfo_Location **v4;
  uint64_t v5;
  google::protobuf::SourceCodeInfo_Location *v6;
  char *v7;

  v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = (google::protobuf::SourceCodeInfo_Location **)(v3 + 8);
  else
    v4 = 0;
  if ((_DWORD)v2)
  {
    v5 = 8 * (_QWORD)v2;
    do
    {
      v6 = *v4++;
      v7 = google::protobuf::SourceCodeInfo_Location::ByteSizeLong(v6);
      v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (_QWORD)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    v2 = 0;
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::SourceCodeInfo *)((char *)this + 8), v2, (_DWORD *)this + 5);
  *((_DWORD *)this + 5) = (_DWORD)v2;
  return (char *)v2;
}

void google::protobuf::SourceCodeInfo::MergeFrom(signed int **this, signed int **lpsrc)
{
  std::string *v4;
  signed int **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 10676);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::SourceCodeInfo::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF804E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo::CopyFrom(signed int **this, signed int **a2)
{
  if (a2 != this)
  {
    google::protobuf::SourceCodeInfo::Clear((google::protobuf::SourceCodeInfo *)this);
    google::protobuf::SourceCodeInfo::MergeFrom(this, a2);
  }
}

{
  if (a2 != this)
  {
    google::protobuf::SourceCodeInfo::Clear((google::protobuf::SourceCodeInfo *)this);
    google::protobuf::SourceCodeInfo::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::SourceCodeInfo::IsInitialized(google::protobuf::SourceCodeInfo *this)
{
  return 1;
}

uint64_t google::protobuf::SourceCodeInfo::GetMetadata(google::protobuf::SourceCodeInfo *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF581268;
}

google::protobuf::GeneratedCodeInfo_Annotation *google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation(google::protobuf::GeneratedCodeInfo_Annotation *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7929250;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = a2;
  if (atomic_load(scc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = 0;
  return this;
}

void sub_1BF804F40(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t *v2;

  google::protobuf::RepeatedField<int>::~RepeatedField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  *(_QWORD *)this = &off_1E7929250;
  google::protobuf::GeneratedCodeInfo_Annotation::SharedDtor(this);
  google::protobuf::RepeatedField<int>::~RepeatedField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(this);
  JUMPOUT(0x1C3B8D890);
}

void google::protobuf::GeneratedCodeInfo_Annotation::SharedDtor(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  uint64_t v2;
  unint64_t v3;
  std::string *v4;
  uint64_t v5;
  char v7;
  std::string v8[2];

  v2 = *((_QWORD *)this + 1);
  v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) == 0)
  {
    if (!v3)
      goto LABEL_4;
    goto LABEL_3;
  }
  if (*(_QWORD *)(v3 + 24))
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 10791);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  v5 = *((_QWORD *)this + 6);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    MEMORY[0x1C3B8D890](v5, 0x1012C40EC159624);
  }
}

void sub_1BF80505C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void google::protobuf::GeneratedCodeInfo_Annotation::Clear(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  int v1;
  uint64_t v2;
  google::protobuf::internal::InternalMetadataWithArena *v3;
  char v4;

  *((_DWORD *)this + 6) = 0;
  v1 = *((_DWORD *)this + 4);
  if ((v1 & 1) != 0)
  {
    v2 = *((_QWORD *)this + 6);
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
    *((_QWORD *)this + 7) = 0;
  v4 = *((_BYTE *)this + 8);
  v3 = (google::protobuf::GeneratedCodeInfo_Annotation *)((char *)this + 8);
  *((_DWORD *)v3 + 2) = 0;
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v3);
}

google::protobuf::internal *google::protobuf::GeneratedCodeInfo_Annotation::_InternalParse(google::protobuf::GeneratedCodeInfo_Annotation *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  google::protobuf::internal::ParseContext *v6;
  int v7;
  std::string **v9;
  google::protobuf::internal *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  google::protobuf::Arena *v14;
  std::string *v15;
  char *v16;
  const char *v17;
  unint64_t v18;
  google::protobuf::internal *v19;
  int v20;
  unint64_t v21;
  google::protobuf::internal *v22;
  int v23;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v25;
  int v26;
  google::protobuf::internal *v27;
  int v28;
  int v29;
  BOOL v30;
  google::protobuf::internal *v31;
  void *v32[2];

  v31 = a2;
  v7 = 0;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v31, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    v9 = (std::string **)((char *)this + 48);
    while (1)
    {
      v10 = (google::protobuf::internal *)((char *)v31 + 1);
      v11 = (char *)*(unsigned __int8 *)v31;
      if (*(char *)v31 < 0)
      {
        v11 = (char *)(v11 + (*(unsigned __int8 *)v10 << 7) - 128);
        if (*(char *)v10 < 0)
        {
          TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, v11);
          v31 = TagFallback;
          if (!TagFallback)
            goto LABEL_46;
          v10 = TagFallback;
          goto LABEL_8;
        }
        v10 = (google::protobuf::internal *)((char *)v31 + 2);
      }
      v31 = v10;
LABEL_8:
      switch(v11 >> 3)
      {
        case 1u:
          if (v11 == 10)
          {
            v12 = google::protobuf::internal::PackedInt32Parser((google::protobuf::GeneratedCodeInfo_Annotation *)((char *)this + 24), v10, a3, v5);
            goto LABEL_42;
          }
          if (v11 != 8)
            goto LABEL_37;
          v29 = google::protobuf::internal::ReadVarint(&v31, (const char **)v11);
          google::protobuf::SourceCodeInfo_Location::_internal_add_path(this, v29);
          if (!v31)
            goto LABEL_46;
          goto LABEL_43;
        case 2u:
          if (v11 != 18)
            goto LABEL_37;
          *((_DWORD *)this + 4) |= 1u;
          v13 = *((_QWORD *)this + 1);
          v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
          if ((v13 & 1) != 0)
            v14 = (google::protobuf::Arena *)*((_QWORD *)v14 + 3);
          v15 = *v9;
          if (*v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, v14, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
            v15 = *v9;
            v10 = v31;
          }
          v16 = google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)v10, (uint64_t)a3);
          google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v32, (uint64_t *)v15, v17);
          google::protobuf::internal::VerifyUTF8(v32[0], (size_t)v32[1], (google::protobuf::internal *)"google.protobuf.GeneratedCodeInfo.Annotation.source_file");
          v31 = (google::protobuf::internal *)v16;
          if (!v16)
            goto LABEL_46;
          goto LABEL_43;
        case 3u:
          if (v11 != 24)
            goto LABEL_37;
          v7 |= 2u;
          v19 = (google::protobuf::internal *)((char *)v10 + 1);
          LODWORD(v18) = *(unsigned __int8 *)v10;
          if ((v18 & 0x80) == 0)
            goto LABEL_22;
          v20 = *(char *)v19;
          v18 = v18 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            v25 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v18);
            v31 = v25;
            *((_DWORD *)this + 14) = v26;
            if (!v25)
              goto LABEL_46;
          }
          else
          {
            v19 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_22:
            v31 = v19;
            *((_DWORD *)this + 14) = v18;
          }
          goto LABEL_43;
        case 4u:
          if (v11 != 32)
            goto LABEL_37;
          v7 |= 4u;
          v22 = (google::protobuf::internal *)((char *)v10 + 1);
          LODWORD(v21) = *(unsigned __int8 *)v10;
          if ((v21 & 0x80) == 0)
            goto LABEL_27;
          v23 = *(char *)v22;
          v21 = v21 + (v23 << 7) - 128;
          if (v23 < 0)
          {
            v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v10, v21);
            v31 = v27;
            *((_DWORD *)this + 15) = v28;
            if (!v27)
              goto LABEL_46;
          }
          else
          {
            v22 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_27:
            v31 = v22;
            *((_DWORD *)this + 15) = v21;
          }
          goto LABEL_43;
        default:
LABEL_37:
          if ((_DWORD)v11)
            v30 = (v11 & 7) == 4;
          else
            v30 = 1;
          if (v30)
          {
            *((_DWORD *)a3 + 20) = (_DWORD)v11 - 1;
            goto LABEL_2;
          }
          v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, (uint64_t *)this + 1, v10, a3, v6);
LABEL_42:
          v31 = (google::protobuf::internal *)v12;
          if (!v12)
          {
LABEL_46:
            v31 = 0;
            goto LABEL_2;
          }
LABEL_43:
          if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v31, *((_DWORD *)a3 + 23)) & 1) != 0)goto LABEL_2;
          break;
      }
    }
  }
LABEL_2:
  *((_DWORD *)this + 4) |= v7;
  return v31;
}

const google::protobuf::UnknownFieldSet *google::protobuf::GeneratedCodeInfo_Annotation::InternalSerializeWithCachedSizesToArray(google::protobuf::GeneratedCodeInfo_Annotation *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  char *v5;
  unsigned int v7;
  unint64_t v8;
  std::string *v9;
  _BYTE *v10;
  int *v11;
  int *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unsigned __int8 *v19;
  const char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v31;
  char v32;
  std::string v33[2];

  v5 = (char *)a2;
  v7 = *((_DWORD *)this + 10);
  if ((int)v7 >= 1)
  {
    v8 = *(_QWORD *)a3;
    if (*(_QWORD *)a3 <= (unint64_t)a2)
    {
      v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      v8 = *(_QWORD *)a3;
    }
    if (v8 <= (unint64_t)v5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.h", 856);
      v9 = google::protobuf::internal::LogMessage::operator<<(v33, "CHECK failed: ptr < end_: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v32, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
    }
    *v5 = 10;
    v10 = v5 + 1;
    if (v7 >= 0x80)
    {
      do
      {
        *v10++ = v7 | 0x80;
        v31 = v7 >> 14;
        v7 >>= 7;
      }
      while (v31);
      v5 = v10 - 1;
    }
    v5 += 2;
    *v10 = v7;
    v11 = (int *)*((_QWORD *)this + 4);
    v12 = &v11[*((int *)this + 6)];
    do
    {
      if ((unint64_t)v5 >= *(_QWORD *)a3)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      v14 = *v11++;
      v13 = v14;
      if (v14 > 0x7F)
      {
        *v5 = v13 | 0x80;
        v15 = v13 >> 7;
        if (v13 >> 14)
        {
          v5 += 2;
          do
          {
            *(v5 - 1) = v15 | 0x80;
            v16 = v15 >> 7;
            ++v5;
            v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v5 - 1) = v16;
        }
        else
        {
          v5[1] = v15;
          v5 += 2;
        }
      }
      else
      {
        *v5++ = v13;
      }
    }
    while (v11 < v12);
  }
  v18 = *((_DWORD *)this + 4);
  if ((v18 & 1) != 0)
  {
    v19 = (unsigned __int8 *)*((_QWORD *)this + 6);
    if ((char)v19[23] < 0)
    {
      v19 = *(unsigned __int8 **)v19;
      v20 = *(const char **)(*((_QWORD *)this + 6) + 8);
    }
    else
    {
      v20 = (const char *)v19[23];
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v19, v20, 1, (google::protobuf::internal *)"google.protobuf.GeneratedCodeInfo.Annotation.source_file");
    v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 6), v5);
    if ((v18 & 2) == 0)
    {
LABEL_20:
      if ((v18 & 4) == 0)
        goto LABEL_46;
      goto LABEL_37;
    }
  }
  else if ((v18 & 2) == 0)
  {
    goto LABEL_20;
  }
  if ((unint64_t)v5 >= *(_QWORD *)a3)
    v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
  v21 = *((int *)this + 14);
  *v5 = 24;
  if (v21 > 0x7F)
  {
    v5[1] = v21 | 0x80;
    v22 = v21 >> 7;
    if (v21 >> 14)
    {
      v5 += 3;
      do
      {
        *(v5 - 1) = v22 | 0x80;
        v23 = v22 >> 7;
        ++v5;
        v24 = v22 >> 14;
        v22 >>= 7;
      }
      while (v24);
      *(v5 - 1) = v23;
      if ((v18 & 4) == 0)
        goto LABEL_46;
    }
    else
    {
      v5[2] = v22;
      v5 += 3;
      if ((v18 & 4) == 0)
        goto LABEL_46;
    }
  }
  else
  {
    v5[1] = v21;
    v5 += 2;
    if ((v18 & 4) == 0)
      goto LABEL_46;
  }
LABEL_37:
  if ((unint64_t)v5 >= *(_QWORD *)a3)
    v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
  v25 = *((int *)this + 15);
  *v5 = 32;
  if (v25 > 0x7F)
  {
    v5[1] = v25 | 0x80;
    v26 = v25 >> 7;
    if (v25 >> 14)
    {
      v5 += 3;
      do
      {
        *(v5 - 1) = v26 | 0x80;
        v27 = v26 >> 7;
        ++v5;
        v28 = v26 >> 14;
        v26 >>= 7;
      }
      while (v28);
      *(v5 - 1) = v27;
    }
    else
    {
      v5[2] = v26;
      v5 += 3;
    }
  }
  else
  {
    v5[1] = v25;
    v5 += 2;
  }
LABEL_46:
  v29 = *((_QWORD *)this + 1);
  if ((v29 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v29 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
  return (const google::protobuf::UnknownFieldSet *)v5;
}

void sub_1BF8056C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::GeneratedCodeInfo_Annotation::ByteSizeLong(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  const google::protobuf::UnknownFieldSet *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v2 = google::protobuf::internal::WireFormatLite::Int32Size((int *)this + 6);
  if (v2)
  {
    v3 = v2;
    if ((v2 & 0x80000000) != 0)
      v4 = 11;
    else
      v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
  *((_DWORD *)this + 10) = v3;
  v5 = (const google::protobuf::UnknownFieldSet *)(v4 + v2);
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 7) == 0)
    goto LABEL_22;
  if ((v6 & 1) != 0)
  {
    v7 = *((_QWORD *)this + 6);
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = *(_QWORD *)(v7 + 8);
    if ((v8 & 0x80u) == 0)
      v9 = v8;
    v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v6 & 2) == 0)
    {
LABEL_9:
      if ((v6 & 4) == 0)
        goto LABEL_22;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_9;
  }
  v10 = *((_DWORD *)this + 14);
  if (v10 < 0)
    v11 = 11;
  else
    v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v11);
  if ((v6 & 4) != 0)
  {
LABEL_18:
    v12 = *((_DWORD *)this + 15);
    if (v12 < 0)
      v13 = 11;
    else
      v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v13);
  }
LABEL_22:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::GeneratedCodeInfo_Annotation *)((char *)this + 8), v5, (_DWORD *)this + 5);
  *((_DWORD *)this + 5) = (_DWORD)v5;
  return (char *)v5;
}

void google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(google::protobuf::GeneratedCodeInfo_Annotation *this, const google::protobuf::Message *lpsrc)
{
  std::string *v4;
  const google::protobuf::GeneratedCodeInfo_Annotation *v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 10997);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1BF8058D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(google::protobuf::GeneratedCodeInfo_Annotation *this, const google::protobuf::GeneratedCodeInfo_Annotation *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  __int128 *v7;
  std::string **v8;
  uint64_t v9;
  google::protobuf::Arena *v10;
  char v11;
  std::string v12[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 11012);
    v4 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((google::protobuf::GeneratedCodeInfo_Annotation *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  google::protobuf::RepeatedField<int>::MergeFrom((int *)this + 6, (int *)a2 + 6);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0)
        goto LABEL_8;
LABEL_18:
      *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
      if ((v6 & 4) == 0)
        goto LABEL_10;
      goto LABEL_9;
    }
    v7 = (__int128 *)*((_QWORD *)a2 + 6);
    *((_DWORD *)this + 4) |= 1u;
    v8 = (std::string **)((char *)this + 48);
    v9 = *((_QWORD *)this + 1);
    v10 = (google::protobuf::Arena *)(v9 & 0xFFFFFFFFFFFFFFFELL);
    if ((v9 & 1) != 0)
      v10 = (google::protobuf::Arena *)*((_QWORD *)v10 + 3);
    if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v8, v10, v7);
      if ((v6 & 2) != 0)
        goto LABEL_18;
    }
    else
    {
      std::string::operator=(*v8, (const std::string *)v7);
      if ((v6 & 2) != 0)
        goto LABEL_18;
    }
LABEL_8:
    if ((v6 & 4) == 0)
    {
LABEL_10:
      *((_DWORD *)this + 4) |= v6;
      return;
    }
LABEL_9:
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    goto LABEL_10;
  }
}

void sub_1BF805A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::GeneratedCodeInfo_Annotation::CopyFrom(google::protobuf::GeneratedCodeInfo_Annotation *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::GeneratedCodeInfo_Annotation::Clear(this);
    google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::IsInitialized(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return 1;
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::GetMetadata(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF581278;
}

google::protobuf::GeneratedCodeInfo *google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo(google::protobuf::GeneratedCodeInfo *this, google::protobuf::Arena *a2)
{
  *(_QWORD *)this = &off_1E7929310;
  *((_QWORD *)this + 1) = a2;
  *((_QWORD *)this + 3) = a2;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  if (atomic_load(scc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  return this;
}

void sub_1BF805AFC(_Unwind_Exception *a1)
{
  uint64_t *v1;
  google::protobuf::internal::ArenaImpl **v2;

  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::GeneratedCodeInfo::~GeneratedCodeInfo(google::protobuf::GeneratedCodeInfo *this)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  *(_QWORD *)this = &off_1E7929310;
  v3 = (uint64_t *)((char *)this + 8);
  v2 = *((_QWORD *)this + 1);
  v4 = v2 & 0xFFFFFFFFFFFFFFFELL;
  if ((v2 & 1) != 0)
  {
    if (!*(_QWORD *)(v4 + 24))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (v4)
  {
LABEL_3:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 11108);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GetArenaNoVirtual() == nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
LABEL_4:
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField((google::protobuf::internal::ArenaImpl **)this + 3);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v3);
}

{
  google::protobuf::GeneratedCodeInfo::~GeneratedCodeInfo(this);
  JUMPOUT(0x1C3B8D890);
}

void sub_1BF805BB8(void *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  __clang_call_terminate(a1);
}

uint64_t google::protobuf::GeneratedCodeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void google::protobuf::GeneratedCodeInfo::Clear(google::protobuf::GeneratedCodeInfo *this)
{
  google::protobuf::internal::InternalMetadataWithArena *v2;
  char v3;

  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>((uint64_t)this + 24);
  v3 = *((_BYTE *)this + 8);
  v2 = (google::protobuf::GeneratedCodeInfo *)((char *)this + 8);
  *((_DWORD *)v2 + 2) = 0;
  if ((v3 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v2);
}

google::protobuf::internal *google::protobuf::GeneratedCodeInfo::_InternalParse(google::protobuf::GeneratedCodeInfo *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  google::protobuf::internal::InternalMetadataWithArena *v6;
  char *v7;
  BOOL v8;
  char *v9;
  google::protobuf::internal *v10;
  int *v11;
  uint64_t v12;
  int v13;
  google::protobuf::GeneratedCodeInfo_Annotation *v14;
  uint64_t v15;
  uint64_t v16;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v19;

  v19 = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v19, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    while (1)
    {
      v6 = (google::protobuf::internal *)((char *)v19 + 1);
      v7 = (char *)*(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0)
        goto LABEL_5;
      v7 = (char *)(v7 + (*(unsigned __int8 *)v6 << 7) - 128);
      if ((*(char *)v6 & 0x80000000) == 0)
        break;
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, v7);
      v19 = TagFallback;
      if (!TagFallback)
        return 0;
      v6 = TagFallback;
LABEL_6:
      if ((_DWORD)v7 == 10)
      {
        v9 = (char *)v6 - 1;
        while (1)
        {
          v10 = (google::protobuf::internal *)(v9 + 1);
          v19 = (google::protobuf::internal *)(v9 + 1);
          v11 = (int *)*((_QWORD *)this + 5);
          if (!v11)
            break;
          v12 = *((int *)this + 8);
          v13 = *v11;
          if ((int)v12 >= *v11)
          {
            if (v13 == *((_DWORD *)this + 9))
            {
LABEL_19:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)this + 6, v13 + 1);
              v11 = (int *)*((_QWORD *)this + 5);
              v13 = *v11;
            }
            *v11 = v13 + 1;
            v14 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(*((google::protobuf::Arena **)this + 3));
            v15 = *((_QWORD *)this + 5);
            v16 = *((int *)this + 8);
            *((_DWORD *)this + 8) = v16 + 1;
            *(_QWORD *)(v15 + 8 * v16 + 8) = v14;
            v10 = v19;
            goto LABEL_21;
          }
          *((_DWORD *)this + 8) = v12 + 1;
          v14 = *(google::protobuf::GeneratedCodeInfo_Annotation **)&v11[2 * v12 + 2];
LABEL_21:
          v9 = google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::GeneratedCodeInfo_Annotation>(a3, v14, v10);
          v19 = (google::protobuf::internal *)v9;
          if (!v9)
            return 0;
          if (*(_QWORD *)a3 <= (unint64_t)v9 || *v9 != 10)
            goto LABEL_24;
        }
        v13 = *((_DWORD *)this + 9);
        goto LABEL_19;
      }
      if ((_DWORD)v7)
        v8 = (v7 & 7) == 4;
      else
        v8 = 1;
      if (v8)
      {
        *((_DWORD *)a3 + 20) = (_DWORD)v7 - 1;
        return v19;
      }
      v19 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v7, (uint64_t *)this + 1, v6, a3, v5);
      if (!v19)
        return 0;
LABEL_24:
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v19, *((_DWORD *)a3 + 23)) & 1) != 0)
        return v19;
    }
    v6 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_5:
    v19 = v6;
    goto LABEL_6;
  }
  return v19;
}

char *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::GeneratedCodeInfo_Annotation>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::GeneratedCodeInfo_Annotation *a2, google::protobuf::internal *a3)
{
  int v6;
  const char *v7;
  char *v8;
  char *result;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  int v15;

  v6 = *(char *)a3;
  v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result)
      return result;
    v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    v8 = (char *)a3 + 1;
  }
  v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  v12 = *((_DWORD *)this + 22);
  v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13)
    return 0;
  v14 = v11;
  result = (char *)google::protobuf::GeneratedCodeInfo_Annotation::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result)
    return result;
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20))
    return 0;
  v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(_QWORD *)this = *((_QWORD *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::GeneratedCodeInfo::InternalSerializeWithCachedSizesToArray(google::protobuf::GeneratedCodeInfo *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7;
  int i;
  google::protobuf::GeneratedCodeInfo_Annotation *v9;
  google::protobuf::io::EpsCopyOutputStream *v10;
  unsigned int v11;
  google::protobuf::UnknownFieldSet *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;

  v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((unint64_t)a2 >= *(_QWORD *)a3)
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      v9 = (google::protobuf::GeneratedCodeInfo_Annotation *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>((uint64_t)this + 24, i);
      *(_BYTE *)a2 = 10;
      v11 = *((_DWORD *)v9 + 5);
      if (v11 > 0x7F)
      {
        *((_BYTE *)a2 + 1) = v11 | 0x80;
        v13 = v11 >> 7;
        if (v11 >> 14)
        {
          v12 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((_BYTE *)v12 - 1) = v13 | 0x80;
            v14 = v13 >> 7;
            v12 = (google::protobuf::UnknownFieldSet *)((char *)v12 + 1);
            v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *((_BYTE *)v12 - 1) = v14;
        }
        else
        {
          *((_BYTE *)a2 + 2) = v13;
          v12 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((_BYTE *)a2 + 1) = v11;
        v12 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::GeneratedCodeInfo_Annotation::InternalSerializeWithCachedSizesToArray(v9, v12, a3, v10);
    }
  }
  v16 = *((_QWORD *)this + 1);
  if ((v16 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v16 & 0xFFFFFFFFFFFFFFFELL), a2, a3, a4);
  else
    return a2;
}

char *google::protobuf::GeneratedCodeInfo::ByteSizeLong(google::protobuf::GeneratedCodeInfo *this)
{
  const google::protobuf::UnknownFieldSet *v2;
  uint64_t v3;
  google::protobuf::GeneratedCodeInfo_Annotation **v4;
  uint64_t v5;
  google::protobuf::GeneratedCodeInfo_Annotation *v6;
  char *v7;

  v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = (google::protobuf::GeneratedCodeInfo_Annotation **)(v3 + 8);
  else
    v4 = 0;
  if ((_DWORD)v2)
  {
    v5 = 8 * (_QWORD)v2;
    do
    {
      v6 = *v4++;
      v7 = google::protobuf::GeneratedCodeInfo_Annotation::ByteSizeLong(v6);
      v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (_QWORD)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    v2 = 0;
  }
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::GeneratedCodeInfo *)((char *)this + 8), v2, (_DWORD *)this + 5);
  *((_DWORD *)this + 5) = (_DWORD)v2;
  return (char *)v2;
}

void google::protobuf::GeneratedCodeInfo::MergeFrom(signed int **this, signed int **lpsrc)
{
  std::string *v4;
  signed int **v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 11225);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::GeneratedCodeInfo::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge((google::protobuf::internal::ReflectionOps *)lpsrc, (const google::protobuf::Message *)this, v6);
}

void sub_1BF80612C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::GeneratedCodeInfo::MergeFrom(signed int **this, signed int **a2)
{
  std::string *v4;
  unint64_t v5;
  char v6;
  std::string v7[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.cc", 11240);
    v4 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  v5 = (unint64_t)a2[1];
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((google::protobuf::internal::InternalMetadataWithArena *)(this + 1), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>(this + 3, (uint64_t)(a2 + 3));
}

void sub_1BF8061D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::GeneratedCodeInfo::CopyFrom(signed int **this, signed int **a2)
{
  if (a2 != this)
  {
    google::protobuf::GeneratedCodeInfo::Clear((google::protobuf::GeneratedCodeInfo *)this);
    google::protobuf::GeneratedCodeInfo::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::GeneratedCodeInfo::IsInitialized(google::protobuf::GeneratedCodeInfo *this)
{
  return 1;
}

uint64_t google::protobuf::GeneratedCodeInfo::GetMetadata(google::protobuf::GeneratedCodeInfo *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return qword_1EF581288;
}

google::protobuf::FileDescriptorSet *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorSet>(google::protobuf::Arena *this)
{
  google::protobuf::FileDescriptorSet *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::FileDescriptorSet *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x30uLL);
    google::protobuf::FileDescriptorSet::FileDescriptorSet(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::FileDescriptorSet *)operator new();
    google::protobuf::FileDescriptorSet::FileDescriptorSet(Aligned);
  }
  return Aligned;
}

void sub_1BF8062D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4050885234);
  _Unwind_Resume(a1);
}

google::protobuf::FileDescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(google::protobuf::Arena *this)
{
  google::protobuf::FileDescriptorProto *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::FileDescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0xD8uLL);
    google::protobuf::FileDescriptorProto::FileDescriptorProto(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::FileDescriptorProto *)operator new();
    google::protobuf::FileDescriptorProto::FileDescriptorProto(Aligned);
  }
  return Aligned;
}

void sub_1BF806374(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40B5C49449);
  _Unwind_Resume(a1);
}

google::protobuf::ExtensionRangeOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(google::protobuf::Arena *this)
{
  google::protobuf::ExtensionRangeOptions *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::ExtensionRangeOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x48uLL);
    google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::ExtensionRangeOptions *)operator new();
    google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions(Aligned);
  }
  return Aligned;
}

void sub_1BF806418(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C407F58948DLL);
  _Unwind_Resume(a1);
}

google::protobuf::OneofDescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(google::protobuf::Arena *this)
{
  google::protobuf::OneofDescriptorProto *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::OneofDescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x28uLL);
    google::protobuf::OneofDescriptorProto::OneofDescriptorProto(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::OneofDescriptorProto *)operator new();
    google::protobuf::OneofDescriptorProto::OneofDescriptorProto(Aligned);
  }
  return Aligned;
}

void sub_1BF8064BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40DFBAE579);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(google::protobuf::Arena *this)
{
  _QWORD *result;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    result = (_QWORD *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x20uLL);
    *result = &off_1E7928590;
    result[1] = this;
  }
  else
  {
    result = (_QWORD *)operator new();
    *result = &off_1E7928590;
    result[1] = 0;
  }
  result[2] = 0;
  result[3] = 0;
  return result;
}

google::protobuf::ServiceDescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(google::protobuf::Arena *this)
{
  google::protobuf::ServiceDescriptorProto *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::ServiceDescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x40uLL);
    google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::ServiceDescriptorProto *)operator new();
    google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(Aligned);
  }
  return Aligned;
}

void sub_1BF8065E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4071667EE6);
  _Unwind_Resume(a1);
}

google::protobuf::MethodDescriptorProto *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(google::protobuf::Arena *this)
{
  google::protobuf::MethodDescriptorProto *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::MethodDescriptorProto *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x40uLL);
    google::protobuf::MethodDescriptorProto::MethodDescriptorProto(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::MethodDescriptorProto *)operator new();
    google::protobuf::MethodDescriptorProto::MethodDescriptorProto(Aligned);
  }
  return Aligned;
}

void sub_1BF806688(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4014782234);
  _Unwind_Resume(a1);
}

google::protobuf::MessageOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(google::protobuf::Arena *this)
{
  google::protobuf::MessageOptions *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::MessageOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::MessageOptions::MessageOptions(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::MessageOptions *)operator new();
    google::protobuf::MessageOptions::MessageOptions(Aligned);
  }
  return Aligned;
}

void sub_1BF80672C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40EEA76D0DLL);
  _Unwind_Resume(a1);
}

google::protobuf::OneofOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(google::protobuf::Arena *this)
{
  google::protobuf::OneofOptions *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::OneofOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x48uLL);
    google::protobuf::OneofOptions::OneofOptions(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::OneofOptions *)operator new();
    google::protobuf::OneofOptions::OneofOptions(Aligned);
  }
  return Aligned;
}

void sub_1BF8067D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C407F58948DLL);
  _Unwind_Resume(a1);
}

google::protobuf::EnumOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(google::protobuf::Arena *this)
{
  google::protobuf::EnumOptions *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::EnumOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::EnumOptions::EnumOptions(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::EnumOptions *)operator new();
    google::protobuf::EnumOptions::EnumOptions(Aligned);
  }
  return Aligned;
}

void sub_1BF806874(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C401313E481);
  _Unwind_Resume(a1);
}

google::protobuf::EnumValueOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(google::protobuf::Arena *this)
{
  google::protobuf::EnumValueOptions *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::EnumValueOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::EnumValueOptions::EnumValueOptions(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::EnumValueOptions *)operator new();
    google::protobuf::EnumValueOptions::EnumValueOptions(Aligned);
  }
  return Aligned;
}

void sub_1BF806918(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C404EC876AALL);
  _Unwind_Resume(a1);
}

google::protobuf::ServiceOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(google::protobuf::Arena *this)
{
  google::protobuf::ServiceOptions *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::ServiceOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::ServiceOptions::ServiceOptions(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::ServiceOptions *)operator new();
    google::protobuf::ServiceOptions::ServiceOptions(Aligned);
  }
  return Aligned;
}

void sub_1BF8069BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C404EC876AALL);
  _Unwind_Resume(a1);
}

google::protobuf::MethodOptions *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(google::protobuf::Arena *this)
{
  google::protobuf::MethodOptions *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::MethodOptions *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x50uLL);
    google::protobuf::MethodOptions::MethodOptions(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::MethodOptions *)operator new();
    google::protobuf::MethodOptions::MethodOptions(Aligned);
  }
  return Aligned;
}

void sub_1BF806A60(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4073C1A025);
  _Unwind_Resume(a1);
}

google::protobuf::UninterpretedOption_NamePart *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(google::protobuf::Arena *this)
{
  google::protobuf::UninterpretedOption_NamePart *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::UninterpretedOption_NamePart *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x28uLL);
    google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::UninterpretedOption_NamePart *)operator new();
    google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart(Aligned);
  }
  return Aligned;
}

void sub_1BF806B04(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C404E984866);
  _Unwind_Resume(a1);
}

google::protobuf::UninterpretedOption *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(google::protobuf::Arena *this)
{
  google::protobuf::UninterpretedOption *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::UninterpretedOption *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x60uLL);
    google::protobuf::UninterpretedOption::UninterpretedOption(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::UninterpretedOption *)operator new();
    google::protobuf::UninterpretedOption::UninterpretedOption(Aligned);
  }
  return Aligned;
}

void sub_1BF806BA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40C001F04BLL);
  _Unwind_Resume(a1);
}

google::protobuf::SourceCodeInfo_Location *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(google::protobuf::Arena *this)
{
  google::protobuf::SourceCodeInfo_Location *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::SourceCodeInfo_Location *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x70uLL);
    google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::SourceCodeInfo_Location *)operator new();
    google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(Aligned);
  }
  return Aligned;
}

void sub_1BF806C4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C400AE9656DLL);
  _Unwind_Resume(a1);
}

google::protobuf::SourceCodeInfo *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(google::protobuf::Arena *this)
{
  google::protobuf::SourceCodeInfo *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::SourceCodeInfo *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x30uLL);
    google::protobuf::SourceCodeInfo::SourceCodeInfo(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::SourceCodeInfo *)operator new();
    google::protobuf::SourceCodeInfo::SourceCodeInfo(Aligned);
  }
  return Aligned;
}

void sub_1BF806CF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4050885234);
  _Unwind_Resume(a1);
}

google::protobuf::GeneratedCodeInfo_Annotation *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(google::protobuf::Arena *this)
{
  google::protobuf::GeneratedCodeInfo_Annotation *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::GeneratedCodeInfo_Annotation *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x40uLL);
    google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::GeneratedCodeInfo_Annotation *)operator new();
    google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation(Aligned);
  }
  return Aligned;
}

void sub_1BF806D94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4041E65941);
  _Unwind_Resume(a1);
}

google::protobuf::GeneratedCodeInfo *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo>(google::protobuf::Arena *this)
{
  google::protobuf::GeneratedCodeInfo *Aligned;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    Aligned = (google::protobuf::GeneratedCodeInfo *)google::protobuf::internal::ArenaImpl::AllocateAligned(this, 0x30uLL);
    google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo(Aligned, this);
  }
  else
  {
    Aligned = (google::protobuf::GeneratedCodeInfo *)operator new();
    google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo(Aligned);
  }
  return Aligned;
}

void sub_1BF806E38(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4050885234);
  _Unwind_Resume(a1);
}

google::protobuf::FileDescriptorSet *google::protobuf::FileDescriptorSet::New(google::protobuf::FileDescriptorSet *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorSet>(0);
}

google::protobuf::FileDescriptorSet *google::protobuf::FileDescriptorSet::New(google::protobuf::FileDescriptorSet *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorSet>(a2);
}

unint64_t google::protobuf::FileDescriptorSet::GetArena(google::protobuf::FileDescriptorSet *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::FileDescriptorSet::GetMaybeArenaPointer(google::protobuf::FileDescriptorSet *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::FileDescriptorSet::GetCachedSize(google::protobuf::FileDescriptorSet *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::FileDescriptorProto *google::protobuf::FileDescriptorProto::New(google::protobuf::FileDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(0);
}

google::protobuf::FileDescriptorProto *google::protobuf::FileDescriptorProto::New(google::protobuf::FileDescriptorProto *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(a2);
}

unint64_t google::protobuf::FileDescriptorProto::GetArena(google::protobuf::FileDescriptorProto *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::FileDescriptorProto::GetMaybeArenaPointer(google::protobuf::FileDescriptorProto *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::FileDescriptorProto::GetCachedSize(google::protobuf::FileDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::DescriptorProto_ExtensionRange *google::protobuf::DescriptorProto_ExtensionRange::New(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(0);
}

google::protobuf::DescriptorProto_ExtensionRange *google::protobuf::DescriptorProto_ExtensionRange::New(google::protobuf::DescriptorProto_ExtensionRange *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(a2);
}

unint64_t google::protobuf::DescriptorProto_ExtensionRange::GetArena(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::GetMaybeArenaPointer(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::GetCachedSize(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return *((unsigned int *)this + 5);
}

_QWORD *google::protobuf::DescriptorProto_ReservedRange::New(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(0);
}

_QWORD *google::protobuf::DescriptorProto_ReservedRange::New(google::protobuf::DescriptorProto_ReservedRange *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(a2);
}

unint64_t google::protobuf::DescriptorProto_ReservedRange::GetArena(google::protobuf::DescriptorProto_ReservedRange *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::GetMaybeArenaPointer(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::GetCachedSize(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::DescriptorProto *google::protobuf::DescriptorProto::New(google::protobuf::DescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(0);
}

google::protobuf::DescriptorProto *google::protobuf::DescriptorProto::New(google::protobuf::DescriptorProto *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(a2);
}

unint64_t google::protobuf::DescriptorProto::GetArena(google::protobuf::DescriptorProto *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::DescriptorProto::GetMaybeArenaPointer(google::protobuf::DescriptorProto *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::DescriptorProto::GetCachedSize(google::protobuf::DescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::ExtensionRangeOptions *google::protobuf::ExtensionRangeOptions::New(google::protobuf::ExtensionRangeOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(0);
}

google::protobuf::ExtensionRangeOptions *google::protobuf::ExtensionRangeOptions::New(google::protobuf::ExtensionRangeOptions *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(a2);
}

unint64_t google::protobuf::ExtensionRangeOptions::GetArena(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 4);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::ExtensionRangeOptions::GetMaybeArenaPointer(google::protobuf::ExtensionRangeOptions *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t google::protobuf::ExtensionRangeOptions::GetCachedSize(google::protobuf::ExtensionRangeOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::FieldDescriptorProto *google::protobuf::FieldDescriptorProto::New(google::protobuf::FieldDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(0);
}

google::protobuf::FieldDescriptorProto *google::protobuf::FieldDescriptorProto::New(google::protobuf::FieldDescriptorProto *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(a2);
}

unint64_t google::protobuf::FieldDescriptorProto::GetArena(google::protobuf::FieldDescriptorProto *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::FieldDescriptorProto::GetMaybeArenaPointer(google::protobuf::FieldDescriptorProto *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::FieldDescriptorProto::GetCachedSize(google::protobuf::FieldDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::OneofDescriptorProto *google::protobuf::OneofDescriptorProto::New(google::protobuf::OneofDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(0);
}

google::protobuf::OneofDescriptorProto *google::protobuf::OneofDescriptorProto::New(google::protobuf::OneofDescriptorProto *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(a2);
}

unint64_t google::protobuf::OneofDescriptorProto::GetArena(google::protobuf::OneofDescriptorProto *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::OneofDescriptorProto::GetMaybeArenaPointer(google::protobuf::OneofDescriptorProto *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::OneofDescriptorProto::GetCachedSize(google::protobuf::OneofDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

_QWORD *google::protobuf::EnumDescriptorProto_EnumReservedRange::New(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(0);
}

_QWORD *google::protobuf::EnumDescriptorProto_EnumReservedRange::New(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(a2);
}

unint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::GetArena(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::GetMaybeArenaPointer(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::GetCachedSize(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::EnumDescriptorProto *google::protobuf::EnumDescriptorProto::New(google::protobuf::EnumDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(0);
}

google::protobuf::EnumDescriptorProto *google::protobuf::EnumDescriptorProto::New(google::protobuf::EnumDescriptorProto *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(a2);
}

unint64_t google::protobuf::EnumDescriptorProto::GetArena(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::EnumDescriptorProto::GetMaybeArenaPointer(google::protobuf::EnumDescriptorProto *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::EnumDescriptorProto::GetCachedSize(google::protobuf::EnumDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::EnumValueDescriptorProto *google::protobuf::EnumValueDescriptorProto::New(google::protobuf::EnumValueDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(0);
}

google::protobuf::EnumValueDescriptorProto *google::protobuf::EnumValueDescriptorProto::New(google::protobuf::EnumValueDescriptorProto *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(a2);
}

unint64_t google::protobuf::EnumValueDescriptorProto::GetArena(google::protobuf::EnumValueDescriptorProto *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::EnumValueDescriptorProto::GetMaybeArenaPointer(google::protobuf::EnumValueDescriptorProto *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::EnumValueDescriptorProto::GetCachedSize(google::protobuf::EnumValueDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::ServiceDescriptorProto *google::protobuf::ServiceDescriptorProto::New(google::protobuf::ServiceDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(0);
}

google::protobuf::ServiceDescriptorProto *google::protobuf::ServiceDescriptorProto::New(google::protobuf::ServiceDescriptorProto *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(a2);
}

unint64_t google::protobuf::ServiceDescriptorProto::GetArena(google::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::ServiceDescriptorProto::GetMaybeArenaPointer(google::protobuf::ServiceDescriptorProto *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::ServiceDescriptorProto::GetCachedSize(google::protobuf::ServiceDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::MethodDescriptorProto *google::protobuf::MethodDescriptorProto::New(google::protobuf::MethodDescriptorProto *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(0);
}

google::protobuf::MethodDescriptorProto *google::protobuf::MethodDescriptorProto::New(google::protobuf::MethodDescriptorProto *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(a2);
}

unint64_t google::protobuf::MethodDescriptorProto::GetArena(google::protobuf::MethodDescriptorProto *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::MethodDescriptorProto::GetMaybeArenaPointer(google::protobuf::MethodDescriptorProto *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::MethodDescriptorProto::GetCachedSize(google::protobuf::MethodDescriptorProto *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::FileOptions *google::protobuf::FileOptions::New(google::protobuf::FileOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(0);
}

google::protobuf::FileOptions *google::protobuf::FileOptions::New(google::protobuf::FileOptions *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(a2);
}

unint64_t google::protobuf::FileOptions::GetArena(google::protobuf::FileOptions *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 4);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::FileOptions::GetMaybeArenaPointer(google::protobuf::FileOptions *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t google::protobuf::FileOptions::GetCachedSize(google::protobuf::FileOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::MessageOptions *google::protobuf::MessageOptions::New(google::protobuf::MessageOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(0);
}

google::protobuf::MessageOptions *google::protobuf::MessageOptions::New(google::protobuf::MessageOptions *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(a2);
}

unint64_t google::protobuf::MessageOptions::GetArena(google::protobuf::MessageOptions *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 4);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::MessageOptions::GetMaybeArenaPointer(google::protobuf::MessageOptions *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t google::protobuf::MessageOptions::GetCachedSize(google::protobuf::MessageOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::FieldOptions *google::protobuf::FieldOptions::New(google::protobuf::FieldOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(0);
}

google::protobuf::FieldOptions *google::protobuf::FieldOptions::New(google::protobuf::FieldOptions *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(a2);
}

unint64_t google::protobuf::FieldOptions::GetArena(google::protobuf::FieldOptions *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 4);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::FieldOptions::GetMaybeArenaPointer(google::protobuf::FieldOptions *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t google::protobuf::FieldOptions::GetCachedSize(google::protobuf::FieldOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::OneofOptions *google::protobuf::OneofOptions::New(google::protobuf::OneofOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(0);
}

google::protobuf::OneofOptions *google::protobuf::OneofOptions::New(google::protobuf::OneofOptions *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(a2);
}

unint64_t google::protobuf::OneofOptions::GetArena(google::protobuf::OneofOptions *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 4);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::OneofOptions::GetMaybeArenaPointer(google::protobuf::OneofOptions *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t google::protobuf::OneofOptions::GetCachedSize(google::protobuf::OneofOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::EnumOptions *google::protobuf::EnumOptions::New(google::protobuf::EnumOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(0);
}

google::protobuf::EnumOptions *google::protobuf::EnumOptions::New(google::protobuf::EnumOptions *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(a2);
}

unint64_t google::protobuf::EnumOptions::GetArena(google::protobuf::EnumOptions *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 4);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::EnumOptions::GetMaybeArenaPointer(google::protobuf::EnumOptions *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t google::protobuf::EnumOptions::GetCachedSize(google::protobuf::EnumOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::EnumValueOptions *google::protobuf::EnumValueOptions::New(google::protobuf::EnumValueOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(0);
}

google::protobuf::EnumValueOptions *google::protobuf::EnumValueOptions::New(google::protobuf::EnumValueOptions *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(a2);
}

unint64_t google::protobuf::EnumValueOptions::GetArena(google::protobuf::EnumValueOptions *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 4);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::EnumValueOptions::GetMaybeArenaPointer(google::protobuf::EnumValueOptions *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t google::protobuf::EnumValueOptions::GetCachedSize(google::protobuf::EnumValueOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::ServiceOptions *google::protobuf::ServiceOptions::New(google::protobuf::ServiceOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(0);
}

google::protobuf::ServiceOptions *google::protobuf::ServiceOptions::New(google::protobuf::ServiceOptions *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(a2);
}

unint64_t google::protobuf::ServiceOptions::GetArena(google::protobuf::ServiceOptions *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 4);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::ServiceOptions::GetMaybeArenaPointer(google::protobuf::ServiceOptions *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t google::protobuf::ServiceOptions::GetCachedSize(google::protobuf::ServiceOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::MethodOptions *google::protobuf::MethodOptions::New(google::protobuf::MethodOptions *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(0);
}

google::protobuf::MethodOptions *google::protobuf::MethodOptions::New(google::protobuf::MethodOptions *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(a2);
}

unint64_t google::protobuf::MethodOptions::GetArena(google::protobuf::MethodOptions *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 4);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::MethodOptions::GetMaybeArenaPointer(google::protobuf::MethodOptions *this)
{
  return *((_QWORD *)this + 4);
}

uint64_t google::protobuf::MethodOptions::GetCachedSize(google::protobuf::MethodOptions *this)
{
  return *((unsigned int *)this + 11);
}

google::protobuf::UninterpretedOption_NamePart *google::protobuf::UninterpretedOption_NamePart::New(google::protobuf::UninterpretedOption_NamePart *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(0);
}

google::protobuf::UninterpretedOption_NamePart *google::protobuf::UninterpretedOption_NamePart::New(google::protobuf::UninterpretedOption_NamePart *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(a2);
}

unint64_t google::protobuf::UninterpretedOption_NamePart::GetArena(google::protobuf::UninterpretedOption_NamePart *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::UninterpretedOption_NamePart::GetMaybeArenaPointer(google::protobuf::UninterpretedOption_NamePart *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::UninterpretedOption_NamePart::GetCachedSize(google::protobuf::UninterpretedOption_NamePart *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::UninterpretedOption *google::protobuf::UninterpretedOption::New(google::protobuf::UninterpretedOption *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(0);
}

google::protobuf::UninterpretedOption *google::protobuf::UninterpretedOption::New(google::protobuf::UninterpretedOption *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(a2);
}

unint64_t google::protobuf::UninterpretedOption::GetArena(google::protobuf::UninterpretedOption *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::UninterpretedOption::GetMaybeArenaPointer(google::protobuf::UninterpretedOption *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::UninterpretedOption::GetCachedSize(google::protobuf::UninterpretedOption *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::SourceCodeInfo_Location *google::protobuf::SourceCodeInfo_Location::New(google::protobuf::SourceCodeInfo_Location *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(0);
}

google::protobuf::SourceCodeInfo_Location *google::protobuf::SourceCodeInfo_Location::New(google::protobuf::SourceCodeInfo_Location *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(a2);
}

unint64_t google::protobuf::SourceCodeInfo_Location::GetArena(google::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::SourceCodeInfo_Location::GetMaybeArenaPointer(google::protobuf::SourceCodeInfo_Location *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::SourceCodeInfo_Location::GetCachedSize(google::protobuf::SourceCodeInfo_Location *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::SourceCodeInfo *google::protobuf::SourceCodeInfo::New(google::protobuf::SourceCodeInfo *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(0);
}

google::protobuf::SourceCodeInfo *google::protobuf::SourceCodeInfo::New(google::protobuf::SourceCodeInfo *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(a2);
}

unint64_t google::protobuf::SourceCodeInfo::GetArena(google::protobuf::SourceCodeInfo *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::SourceCodeInfo::GetMaybeArenaPointer(google::protobuf::SourceCodeInfo *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::SourceCodeInfo::GetCachedSize(google::protobuf::SourceCodeInfo *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::GeneratedCodeInfo_Annotation *google::protobuf::GeneratedCodeInfo_Annotation::New(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(0);
}

google::protobuf::GeneratedCodeInfo_Annotation *google::protobuf::GeneratedCodeInfo_Annotation::New(google::protobuf::GeneratedCodeInfo_Annotation *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(a2);
}

unint64_t google::protobuf::GeneratedCodeInfo_Annotation::GetArena(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::GetMaybeArenaPointer(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::GetCachedSize(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::GeneratedCodeInfo *google::protobuf::GeneratedCodeInfo::New(google::protobuf::GeneratedCodeInfo *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo>(0);
}

google::protobuf::GeneratedCodeInfo *google::protobuf::GeneratedCodeInfo::New(google::protobuf::GeneratedCodeInfo *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo>(a2);
}

unint64_t google::protobuf::GeneratedCodeInfo::GetArena(google::protobuf::GeneratedCodeInfo *this)
{
  uint64_t v1;
  unint64_t result;

  v1 = *((_QWORD *)this + 1);
  result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if ((v1 & 1) != 0)
    return *(_QWORD *)(result + 24);
  return result;
}

uint64_t google::protobuf::GeneratedCodeInfo::GetMaybeArenaPointer(google::protobuf::GeneratedCodeInfo *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t google::protobuf::GeneratedCodeInfo::GetCachedSize(google::protobuf::GeneratedCodeInfo *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF807500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF8075DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF8076B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF807794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF807870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF80794C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF807A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF807B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF807BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF807CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::FileDescriptorProto **v3;
  google::protobuf::FileDescriptorProto *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::FileDescriptorProto **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::FileDescriptorProto::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF807D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::DescriptorProto_ExtensionRange **v3;
  google::protobuf::DescriptorProto_ExtensionRange *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::DescriptorProto_ExtensionRange **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::DescriptorProto_ExtensionRange::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF807E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::OneofDescriptorProto **v3;
  google::protobuf::OneofDescriptorProto *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::OneofDescriptorProto **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::OneofDescriptorProto::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF807EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::DescriptorProto_ReservedRange **v3;
  google::protobuf::DescriptorProto_ReservedRange *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::DescriptorProto_ReservedRange **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::DescriptorProto_ReservedRange::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF807F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::UninterpretedOption **v3;
  google::protobuf::UninterpretedOption *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::UninterpretedOption **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::UninterpretedOption::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF808020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::EnumValueDescriptorProto **v3;
  google::protobuf::EnumValueDescriptorProto *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::EnumValueDescriptorProto **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::EnumValueDescriptorProto::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF8080CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::EnumDescriptorProto_EnumReservedRange **v3;
  google::protobuf::EnumDescriptorProto_EnumReservedRange *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::EnumDescriptorProto_EnumReservedRange **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF808178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::MethodDescriptorProto **v3;
  google::protobuf::MethodDescriptorProto *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::MethodDescriptorProto **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::MethodDescriptorProto::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF808224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::UninterpretedOption_NamePart **v3;
  google::protobuf::UninterpretedOption_NamePart *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::UninterpretedOption_NamePart **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::UninterpretedOption_NamePart::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF8082D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::SourceCodeInfo_Location **v3;
  google::protobuf::SourceCodeInfo_Location *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::SourceCodeInfo_Location **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::SourceCodeInfo_Location::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF80837C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>(uint64_t a1)
{
  uint64_t v1;
  google::protobuf::GeneratedCodeInfo_Annotation **v3;
  google::protobuf::GeneratedCodeInfo_Annotation *v4;
  std::string *v5;
  char v6;
  std::string v7[2];

  v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v1)
  {
    v3 = (google::protobuf::GeneratedCodeInfo_Annotation **)(*(_QWORD *)(a1 + 16) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::GeneratedCodeInfo_Annotation::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1BF808428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>(signed int **this, uint64_t a2)
{
  std::string *v4;
  unsigned int v5;
  google::protobuf::FileDescriptorProto **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;
  std::string v11[2];

  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (google::protobuf::FileDescriptorProto **)(*(_QWORD *)(a2 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>((google::protobuf::Arena **)this, (google::protobuf::FileDescriptorProto **)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    v9 = this[2];
    if (*v9 < v8)
      *v9 = v8;
  }
}

void sub_1BF808514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FileDescriptorProto>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::FileDescriptorProto **a2, google::protobuf::FileDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::FileDescriptorProto **v11;
  google::protobuf::FileDescriptorProto **v12;
  google::protobuf::FileDescriptorProto *v13;
  google::protobuf::FileDescriptorProto *v14;
  google::protobuf::FileDescriptorProto *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::FileDescriptorProto **v19;
  google::protobuf::FileDescriptorProto **v20;
  google::protobuf::FileDescriptorProto *v21;
  google::protobuf::FileDescriptorProto *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::FileDescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::FileDescriptorProto>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::FileDescriptorProto>::Merge(google::protobuf::FileDescriptorProto *a1, google::protobuf::FileDescriptorProto *this)
{
  google::protobuf::FileDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(signed int **this, uint64_t a2)
{
  std::string *v4;
  unsigned int v5;
  google::protobuf::DescriptorProto **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;
  std::string v11[2];

  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (google::protobuf::DescriptorProto **)(*(_QWORD *)(a2 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((google::protobuf::Arena **)this, (google::protobuf::DescriptorProto **)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    v9 = this[2];
    if (*v9 < v8)
      *v9 = v8;
  }
}

void sub_1BF8086BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::DescriptorProto **a2, google::protobuf::DescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::DescriptorProto **v11;
  google::protobuf::DescriptorProto **v12;
  google::protobuf::DescriptorProto *v13;
  google::protobuf::DescriptorProto *v14;
  google::protobuf::DescriptorProto *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::DescriptorProto **v19;
  google::protobuf::DescriptorProto **v20;
  google::protobuf::DescriptorProto *v21;
  google::protobuf::DescriptorProto *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto>::Merge(google::protobuf::DescriptorProto *a1, google::protobuf::DescriptorProto *this)
{
  google::protobuf::DescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>(google::protobuf::Arena **a1, signed int ***a2, signed int ***a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  signed int ***v11;
  signed int ***v12;
  signed int **v13;
  signed int **v14;
  signed int **v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  signed int ***v19;
  signed int ***v20;
  signed int **v21;
  signed int **v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto>::Merge(signed int **a1, signed int **this)
{
  google::protobuf::EnumDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>(google::protobuf::Arena **a1, signed int ***a2, signed int ***a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  signed int ***v11;
  signed int ***v12;
  signed int **v13;
  signed int **v14;
  signed int **v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  signed int ***v19;
  signed int ***v20;
  signed int **v21;
  signed int **v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::ServiceDescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::ServiceDescriptorProto>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::ServiceDescriptorProto>::Merge(signed int **a1, signed int **this)
{
  google::protobuf::ServiceDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::FieldDescriptorProto **a2, google::protobuf::FieldDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::FieldDescriptorProto **v11;
  google::protobuf::FieldDescriptorProto **v12;
  google::protobuf::FieldDescriptorProto *v13;
  google::protobuf::FieldDescriptorProto *v14;
  google::protobuf::FieldDescriptorProto *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::FieldDescriptorProto **v19;
  google::protobuf::FieldDescriptorProto **v20;
  google::protobuf::FieldDescriptorProto *v21;
  google::protobuf::FieldDescriptorProto *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::FieldDescriptorProto>::Merge(google::protobuf::FieldDescriptorProto *a1, google::protobuf::FieldDescriptorProto *this)
{
  google::protobuf::FieldDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::DescriptorProto_ExtensionRange **a2, google::protobuf::DescriptorProto_ExtensionRange **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::DescriptorProto_ExtensionRange **v11;
  google::protobuf::DescriptorProto_ExtensionRange **v12;
  google::protobuf::DescriptorProto_ExtensionRange *v13;
  google::protobuf::DescriptorProto_ExtensionRange *v14;
  google::protobuf::DescriptorProto_ExtensionRange *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::DescriptorProto_ExtensionRange **v19;
  google::protobuf::DescriptorProto_ExtensionRange **v20;
  google::protobuf::DescriptorProto_ExtensionRange *v21;
  google::protobuf::DescriptorProto_ExtensionRange *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ExtensionRange>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ExtensionRange>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ExtensionRange>::Merge(google::protobuf::DescriptorProto_ExtensionRange *a1, google::protobuf::DescriptorProto_ExtensionRange *this)
{
  google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::OneofDescriptorProto **a2, google::protobuf::OneofDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::OneofDescriptorProto **v11;
  google::protobuf::OneofDescriptorProto **v12;
  google::protobuf::OneofDescriptorProto *v13;
  google::protobuf::OneofDescriptorProto *v14;
  google::protobuf::OneofDescriptorProto *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::OneofDescriptorProto **v19;
  google::protobuf::OneofDescriptorProto **v20;
  google::protobuf::OneofDescriptorProto *v21;
  google::protobuf::OneofDescriptorProto *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::OneofDescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::OneofDescriptorProto>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::OneofDescriptorProto>::Merge(google::protobuf::OneofDescriptorProto *a1, google::protobuf::OneofDescriptorProto *this)
{
  google::protobuf::OneofDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::DescriptorProto_ReservedRange **a2, google::protobuf::DescriptorProto_ReservedRange **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::DescriptorProto_ReservedRange **v11;
  google::protobuf::DescriptorProto_ReservedRange **v12;
  google::protobuf::DescriptorProto_ReservedRange *v13;
  google::protobuf::DescriptorProto_ReservedRange *v14;
  google::protobuf::DescriptorProto_ReservedRange *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::DescriptorProto_ReservedRange **v19;
  google::protobuf::DescriptorProto_ReservedRange **v20;
  google::protobuf::DescriptorProto_ReservedRange *v21;
  google::protobuf::DescriptorProto_ReservedRange *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = (google::protobuf::DescriptorProto_ReservedRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::DescriptorProto_ReservedRange>::Merge(google::protobuf::DescriptorProto_ReservedRange *a1, google::protobuf::DescriptorProto_ReservedRange *this)
{
  google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(signed int **this, uint64_t a2)
{
  std::string *v4;
  unsigned int v5;
  signed int ***v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;
  std::string v11[2];

  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (signed int ***)(*(_QWORD *)(a2 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>((google::protobuf::Arena **)this, (signed int ***)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    v9 = this[2];
    if (*v9 < v8)
      *v9 = v8;
  }
}

void sub_1BF808CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption>::TypeHandler>(google::protobuf::Arena **a1, signed int ***a2, signed int ***a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  signed int ***v11;
  signed int ***v12;
  signed int **v13;
  signed int **v14;
  signed int **v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  signed int ***v19;
  signed int ***v20;
  signed int **v21;
  signed int **v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption>::Merge(signed int **a1, signed int **this)
{
  google::protobuf::UninterpretedOption::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>(signed int **this, uint64_t a2)
{
  std::string *v4;
  unsigned int v5;
  google::protobuf::EnumValueDescriptorProto **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;
  std::string v11[2];

  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (google::protobuf::EnumValueDescriptorProto **)(*(_QWORD *)(a2 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((google::protobuf::Arena **)this, (google::protobuf::EnumValueDescriptorProto **)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    v9 = this[2];
    if (*v9 < v8)
      *v9 = v8;
  }
}

void sub_1BF808E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::EnumValueDescriptorProto **a2, google::protobuf::EnumValueDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::EnumValueDescriptorProto **v11;
  google::protobuf::EnumValueDescriptorProto **v12;
  google::protobuf::EnumValueDescriptorProto *v13;
  google::protobuf::EnumValueDescriptorProto *v14;
  google::protobuf::EnumValueDescriptorProto *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::EnumValueDescriptorProto **v19;
  google::protobuf::EnumValueDescriptorProto **v20;
  google::protobuf::EnumValueDescriptorProto *v21;
  google::protobuf::EnumValueDescriptorProto *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumValueDescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumValueDescriptorProto>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumValueDescriptorProto>::Merge(google::protobuf::EnumValueDescriptorProto *a1, google::protobuf::EnumValueDescriptorProto *this)
{
  google::protobuf::EnumValueDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>(signed int **this, uint64_t a2)
{
  std::string *v4;
  unsigned int v5;
  google::protobuf::EnumDescriptorProto_EnumReservedRange **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;
  std::string v11[2];

  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (google::protobuf::EnumDescriptorProto_EnumReservedRange **)(*(_QWORD *)(a2 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((google::protobuf::Arena **)this, (google::protobuf::EnumDescriptorProto_EnumReservedRange **)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    v9 = this[2];
    if (*v9 < v8)
      *v9 = v8;
  }
}

void sub_1BF80901C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::EnumDescriptorProto_EnumReservedRange **a2, google::protobuf::EnumDescriptorProto_EnumReservedRange **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::EnumDescriptorProto_EnumReservedRange **v11;
  google::protobuf::EnumDescriptorProto_EnumReservedRange **v12;
  google::protobuf::EnumDescriptorProto_EnumReservedRange *v13;
  google::protobuf::EnumDescriptorProto_EnumReservedRange *v14;
  google::protobuf::EnumDescriptorProto_EnumReservedRange *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::EnumDescriptorProto_EnumReservedRange **v19;
  google::protobuf::EnumDescriptorProto_EnumReservedRange **v20;
  google::protobuf::EnumDescriptorProto_EnumReservedRange *v21;
  google::protobuf::EnumDescriptorProto_EnumReservedRange *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = (google::protobuf::EnumDescriptorProto_EnumReservedRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::EnumDescriptorProto_EnumReservedRange>::Merge(google::protobuf::EnumDescriptorProto_EnumReservedRange *a1, google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>(signed int **this, uint64_t a2)
{
  std::string *v4;
  unsigned int v5;
  google::protobuf::MethodDescriptorProto **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;
  std::string v11[2];

  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (google::protobuf::MethodDescriptorProto **)(*(_QWORD *)(a2 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>((google::protobuf::Arena **)this, (google::protobuf::MethodDescriptorProto **)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    v9 = this[2];
    if (*v9 < v8)
      *v9 = v8;
  }
}

void sub_1BF8091C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::MethodDescriptorProto **a2, google::protobuf::MethodDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::MethodDescriptorProto **v11;
  google::protobuf::MethodDescriptorProto **v12;
  google::protobuf::MethodDescriptorProto *v13;
  google::protobuf::MethodDescriptorProto *v14;
  google::protobuf::MethodDescriptorProto *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::MethodDescriptorProto **v19;
  google::protobuf::MethodDescriptorProto **v20;
  google::protobuf::MethodDescriptorProto *v21;
  google::protobuf::MethodDescriptorProto *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::MethodDescriptorProto>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::MethodDescriptorProto>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::MethodDescriptorProto>::Merge(google::protobuf::MethodDescriptorProto *a1, google::protobuf::MethodDescriptorProto *this)
{
  google::protobuf::MethodDescriptorProto::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(signed int **this, uint64_t a2)
{
  std::string *v4;
  unsigned int v5;
  google::protobuf::UninterpretedOption_NamePart **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;
  std::string v11[2];

  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (google::protobuf::UninterpretedOption_NamePart **)(*(_QWORD *)(a2 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>((google::protobuf::Arena **)this, (google::protobuf::UninterpretedOption_NamePart **)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    v9 = this[2];
    if (*v9 < v8)
      *v9 = v8;
  }
}

void sub_1BF80936C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::UninterpretedOption_NamePart **a2, google::protobuf::UninterpretedOption_NamePart **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::UninterpretedOption_NamePart **v11;
  google::protobuf::UninterpretedOption_NamePart **v12;
  google::protobuf::UninterpretedOption_NamePart *v13;
  google::protobuf::UninterpretedOption_NamePart *v14;
  google::protobuf::UninterpretedOption_NamePart *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::UninterpretedOption_NamePart **v19;
  google::protobuf::UninterpretedOption_NamePart **v20;
  google::protobuf::UninterpretedOption_NamePart *v21;
  google::protobuf::UninterpretedOption_NamePart *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption_NamePart>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption_NamePart>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::UninterpretedOption_NamePart>::Merge(google::protobuf::UninterpretedOption_NamePart *a1, google::protobuf::UninterpretedOption_NamePart *this)
{
  google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(signed int **this, uint64_t a2)
{
  std::string *v4;
  unsigned int v5;
  google::protobuf::SourceCodeInfo_Location **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;
  std::string v11[2];

  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (google::protobuf::SourceCodeInfo_Location **)(*(_QWORD *)(a2 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((google::protobuf::Arena **)this, (google::protobuf::SourceCodeInfo_Location **)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    v9 = this[2];
    if (*v9 < v8)
      *v9 = v8;
  }
}

void sub_1BF809514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::SourceCodeInfo_Location **a2, google::protobuf::SourceCodeInfo_Location **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::SourceCodeInfo_Location **v11;
  google::protobuf::SourceCodeInfo_Location **v12;
  google::protobuf::SourceCodeInfo_Location *v13;
  google::protobuf::SourceCodeInfo_Location *v14;
  google::protobuf::SourceCodeInfo_Location *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::SourceCodeInfo_Location **v19;
  google::protobuf::SourceCodeInfo_Location **v20;
  google::protobuf::SourceCodeInfo_Location *v21;
  google::protobuf::SourceCodeInfo_Location *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::SourceCodeInfo_Location>::Merge(google::protobuf::SourceCodeInfo_Location *a1, google::protobuf::SourceCodeInfo_Location *this)
{
  google::protobuf::SourceCodeInfo_Location::MergeFrom(this, a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>(signed int **this, uint64_t a2)
{
  std::string *v4;
  unsigned int v5;
  google::protobuf::GeneratedCodeInfo_Annotation **v6;
  unsigned int *v7;
  signed int v8;
  signed int *v9;
  char v10;
  std::string v11[2];

  if ((signed int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = (google::protobuf::GeneratedCodeInfo_Annotation **)(*(_QWORD *)(a2 + 16) + 8);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v5);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>((google::protobuf::Arena **)this, (google::protobuf::GeneratedCodeInfo_Annotation **)v7, v6, v5, *this[2] - *((_DWORD *)this + 2));
    v8 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v8;
    v9 = this[2];
    if (*v9 < v8)
      *v9 = v8;
  }
}

void sub_1BF8096BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop<google::protobuf::RepeatedPtrField<google::protobuf::GeneratedCodeInfo_Annotation>::TypeHandler>(google::protobuf::Arena **a1, google::protobuf::GeneratedCodeInfo_Annotation **a2, google::protobuf::GeneratedCodeInfo_Annotation **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v10;
  google::protobuf::GeneratedCodeInfo_Annotation **v11;
  google::protobuf::GeneratedCodeInfo_Annotation **v12;
  google::protobuf::GeneratedCodeInfo_Annotation *v13;
  google::protobuf::GeneratedCodeInfo_Annotation *v14;
  google::protobuf::GeneratedCodeInfo_Annotation *v15;
  BOOL v16;
  int v17;
  google::protobuf::Arena *v18;
  google::protobuf::GeneratedCodeInfo_Annotation **v19;
  google::protobuf::GeneratedCodeInfo_Annotation **v20;
  google::protobuf::GeneratedCodeInfo_Annotation *v21;
  google::protobuf::GeneratedCodeInfo_Annotation *v22;

  if ((int)a5 >= (int)a4)
    v10 = a4;
  else
    v10 = a5;
  if ((int)v10 >= 1)
  {
    v11 = a3;
    v12 = a2;
    do
    {
      v14 = *v11++;
      v13 = v14;
      v15 = *v12++;
      google::protobuf::internal::GenericTypeHandler<google::protobuf::GeneratedCodeInfo_Annotation>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  v16 = __OFSUB__(a4, a5);
  v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    v18 = *a1;
    v19 = &a3[a5];
    v20 = &a2[a5];
    do
    {
      v21 = *v19++;
      v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(v18);
      google::protobuf::internal::GenericTypeHandler<google::protobuf::GeneratedCodeInfo_Annotation>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void google::protobuf::internal::GenericTypeHandler<google::protobuf::GeneratedCodeInfo_Annotation>::Merge(google::protobuf::GeneratedCodeInfo_Annotation *a1, google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(this, a1);
}

void google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(google::protobuf::EncodedDescriptorDatabase *this)
{
  void **v2;
  unint64_t v3;

  *(_QWORD *)this = &off_1E7929658;
  v2 = (void **)*((_QWORD *)this + 11);
  if (v2 != *((void ***)this + 10))
  {
    v3 = 0;
    v2 = (void **)*((_QWORD *)this + 10);
    do
    {
      operator delete(v2[v3++]);
      v2 = (void **)*((_QWORD *)this + 10);
    }
    while (v3 < (uint64_t)(*((_QWORD *)this + 11) - (_QWORD)v2) >> 3);
  }
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  std::__tree<std::string>::destroy((uint64_t)this + 56, *((char **)this + 8));
  std::__tree<std::string>::destroy((uint64_t)this + 32, *((char **)this + 5));
  std::__tree<std::string>::destroy((uint64_t)this + 8, *((char **)this + 2));
}

{
  google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(this);
  JUMPOUT(0x1C3B8D890);
}

BOOL google::protobuf::EncodedDescriptorDatabase::FindFileByName(uint64_t a1, const void **a2, google::protobuf::MessageLite *a3)
{
  uint64_t v5;
  const void *v6;

  v5 = std::__tree<std::string>::find<std::string>(a1 + 8, a2);
  if (a1 + 16 == v5)
    return 0;
  v6 = *(const void **)(v5 + 56);
  return v6 && google::protobuf::MessageLite::ParseFromArray(a3, v6, *(_DWORD *)(v5 + 64));
}

const void *google::protobuf::EncodedDescriptorDatabase::FindFileContainingSymbol(uint64_t a1, const void **a2, google::protobuf::MessageLite *a3)
{
  const void *result;
  unsigned int v5;

  result = (const void *)google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindSymbol(a1 + 8, a2);
  if (result)
    return (const void *)google::protobuf::MessageLite::ParseFromArray(a3, result, v5);
  return result;
}

uint64_t google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindSymbol(uint64_t a1, const void **a2)
{
  unsigned __int8 *LastLessOrEqual;
  unsigned __int8 *v5;

  LastLessOrEqual = (unsigned __int8 *)google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindLastLessOrEqual(a1, a2);
  if ((unsigned __int8 *)(a1 + 32) == LastLessOrEqual)
    return 0;
  v5 = LastLessOrEqual;
  if (!google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::IsSubSymbol(a1, LastLessOrEqual + 32, (unsigned __int8 *)a2))return 0;
  else
    return *((_QWORD *)v5 + 7);
}

const void *google::protobuf::EncodedDescriptorDatabase::FindFileContainingExtension(uint64_t a1, uint64_t a2, int a3, google::protobuf::MessageLite *a4)
{
  const void *result;
  unsigned int v6;

  result = (const void *)google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindExtension(a1 + 8, a2, a3);
  if (result)
    return (const void *)google::protobuf::MessageLite::ParseFromArray(a4, result, v6);
  return result;
}

uint64_t google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindExtension(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::string v9;
  int v10;

  v5 = a1 + 48;
  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&v9, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    v9 = *(std::string *)a2;
  v10 = a3;
  v6 = std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::find<std::pair<std::string,int>>(v5, (const void **)&v9.__r_.__value_.__l.__data_);
  if (a1 + 56 == v6)
    v7 = 0;
  else
    v7 = *(_QWORD *)(v6 + 64);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v9.__r_.__value_.__l.__data_);
  return v7;
}

void sub_1BF809A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindAllExtensionNumbers(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindAllExtensionNumbers(a1 + 8, a2, a3);
}

uint64_t google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindAllExtensionNumbers(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _BOOL4 v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  const void **v17;
  const std::string::value_type *v18;
  unint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  _DWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  int v29;
  _QWORD *v30;
  _QWORD *v31;
  BOOL v32;
  std::string __p;
  int v35;

  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  v35 = 0;
  v6 = (_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 56);
  if (v7)
  {
    v8 = a1 + 64;
    v9 = v6;
    do
    {
      v10 = std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v8, (const void **)(v7 + 32), (const void **)&__p.__r_.__value_.__l.__data_);
      v11 = (uint64_t *)(v7 + 8);
      if (!v10)
      {
        v11 = (uint64_t *)v7;
        v9 = (_QWORD *)v7;
      }
      v7 = *v11;
    }
    while (*v11);
  }
  else
  {
    v9 = (_QWORD *)(a1 + 56);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v9 == v6)
  {
    v12 = 0;
  }
  else
  {
    v12 = 0;
    do
    {
      v13 = *((unsigned __int8 *)v9 + 55);
      if ((v13 & 0x80u) == 0)
        v14 = *((unsigned __int8 *)v9 + 55);
      else
        v14 = v9[5];
      v15 = *(unsigned __int8 *)(a2 + 23);
      v16 = (char)v15;
      if ((v15 & 0x80u) != 0)
        v15 = *(_QWORD *)(a2 + 8);
      if (v14 != v15)
        break;
      v17 = (const void **)(v9 + 4);
      if (v16 >= 0)
        v18 = (const std::string::value_type *)a2;
      else
        v18 = *(const std::string::value_type **)a2;
      if ((v13 & 0x80) != 0)
      {
        if (memcmp(*v17, v18, v9[5]))
          return v12 & 1;
      }
      else if (*((_BYTE *)v9 + 55))
      {
        while (*(unsigned __int8 *)v17 == *(unsigned __int8 *)v18)
        {
          v17 = (const void **)((char *)v17 + 1);
          ++v18;
          if (!--v13)
            goto LABEL_30;
        }
        return v12 & 1;
      }
LABEL_30:
      v20 = *(_DWORD **)(a3 + 8);
      v19 = *(_QWORD *)(a3 + 16);
      if ((unint64_t)v20 >= v19)
      {
        v22 = *(_DWORD **)a3;
        v23 = ((uint64_t)v20 - *(_QWORD *)a3) >> 2;
        v24 = v23 + 1;
        if ((unint64_t)(v23 + 1) >> 62)
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        v25 = v19 - (_QWORD)v22;
        if (v25 >> 1 > v24)
          v24 = v25 >> 1;
        if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFFCLL)
          v26 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v26 = v24;
        if (v26)
        {
          v27 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a3 + 16, v26);
          v22 = *(_DWORD **)a3;
          v20 = *(_DWORD **)(a3 + 8);
        }
        else
        {
          v27 = 0;
        }
        v28 = &v27[4 * v23];
        *(_DWORD *)v28 = *((_DWORD *)v9 + 14);
        v21 = v28 + 4;
        while (v20 != v22)
        {
          v29 = *--v20;
          *((_DWORD *)v28 - 1) = v29;
          v28 -= 4;
        }
        *(_QWORD *)a3 = v28;
        *(_QWORD *)(a3 + 8) = v21;
        *(_QWORD *)(a3 + 16) = &v27[4 * v26];
        if (v22)
          operator delete(v22);
      }
      else
      {
        *v20 = *((_DWORD *)v9 + 14);
        v21 = v20 + 1;
      }
      *(_QWORD *)(a3 + 8) = v21;
      v30 = (_QWORD *)v9[1];
      if (v30)
      {
        do
        {
          v31 = v30;
          v30 = (_QWORD *)*v30;
        }
        while (v30);
      }
      else
      {
        do
        {
          v31 = (_QWORD *)v9[2];
          v32 = *v31 == (_QWORD)v9;
          v9 = v31;
        }
        while (!v32);
      }
      v12 = 1;
      v9 = v31;
    }
    while (v31 != v6);
  }
  return v12 & 1;
}

void sub_1BF809CAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindAllFileNames(uint64_t a1, std::vector<std::string> *a2)
{
  google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindAllFileNames((_QWORD *)(a1 + 8), a2);
  return 1;
}

void google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::FindAllFileNames(_QWORD *a1, std::vector<std::string> *this)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v10;

  std::vector<std::string>::resize(this, a1[2]);
  v6 = (_QWORD *)*a1;
  v4 = a1 + 1;
  v5 = v6;
  if (v6 != v4)
  {
    v7 = 0;
    do
    {
      std::string::operator=(&this->__begin_[v7], (const std::string *)(v5 + 4));
      v8 = (_QWORD *)v5[1];
      if (v8)
      {
        do
        {
          v9 = v8;
          v8 = (_QWORD *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = (_QWORD *)v5[2];
          v10 = *v9 == (_QWORD)v5;
          v5 = v9;
        }
        while (!v10);
      }
      ++v7;
      v5 = v9;
    }
    while (v9 != v4);
  }
}

uint64_t *std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t **v5;
  uint64_t *result;
  uint64_t *v7;
  uint64_t v8;

  v5 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v8, a2);
  result = *v5;
  if (!*v5)
  {
    std::__tree<std::string>::__construct_node<std::string const&>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::string>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void std::__tree<std::string>::__construct_node<std::string const&>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  std::string *v7;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x38uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v7 = (std::string *)(v6 + 32);
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    v7->__r_.__value_.__r.__words[2] = *(_QWORD *)(a2 + 16);
  }
  *(_BYTE *)(a3 + 16) = 1;
}

void sub_1BF809E7C(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](uint64_t a1, void **__p)
{
  if (*(_BYTE *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0)
      operator delete(__p[4]);
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

BOOL std::less<std::pair<std::string,int>>::operator()[abi:ne180100](uint64_t a1, const void **a2, const void **a3)
{
  int v5;
  int v6;
  size_t v7;
  const void *v8;
  size_t v9;
  const void *v10;
  size_t v11;
  int v12;
  BOOL v13;
  int v15;
  BOOL v16;

  v5 = *((char *)a3 + 23);
  v6 = *((char *)a2 + 23);
  if (v6 >= 0)
    v7 = *((unsigned __int8 *)a2 + 23);
  else
    v7 = (size_t)a2[1];
  if (v6 >= 0)
    v8 = a2;
  else
    v8 = *a2;
  if (v5 >= 0)
    v9 = *((unsigned __int8 *)a3 + 23);
  else
    v9 = (size_t)a3[1];
  if (v5 >= 0)
    v10 = a3;
  else
    v10 = *a3;
  if (v9 >= v7)
    v11 = v7;
  else
    v11 = v9;
  v12 = memcmp(v8, v10, v11);
  v13 = v7 < v9;
  if (v12)
    v13 = v12 < 0;
  if (v13)
    return 1;
  v15 = memcmp(v10, v8, v11);
  v16 = v9 < v7;
  if (v15)
    v16 = v15 < 0;
  return !v16 && *((_DWORD *)a2 + 6) < *((_DWORD *)a3 + 6);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(4 * a2);
}

void std::vector<std::string>::resize(std::vector<std::string> *this, std::vector<std::string>::size_type __sz)
{
  std::vector<std::string>::pointer end;
  std::vector<std::string>::size_type v4;
  BOOL v5;
  std::vector<std::string>::size_type v6;
  std::string *v7;

  end = this->__end_;
  v4 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)this->__begin_) >> 3);
  v5 = __sz >= v4;
  v6 = __sz - v4;
  if (v6 != 0 && v5)
  {
    std::vector<std::string>::__append(this, v6);
  }
  else if (!v5)
  {
    v7 = &this->__begin_[__sz];
    while (end != v7)
    {
      if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0)
        operator delete(end[-1].__r_.__value_.__l.__data_);
      --end;
    }
    this->__end_ = v7;
  }
}

void std::vector<std::string>::__append(std::vector<std::string> *this, std::vector<std::string>::size_type __n)
{
  std::__compressed_pair<std::string *> *p_end_cap;
  std::string *v5;
  std::string *value;
  std::string *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  std::string *v12;
  size_t v13;
  size_t v14;
  std::__split_buffer<std::string> __v;

  value = this->__end_cap_.__value_;
  p_end_cap = &this->__end_cap_;
  v5 = value;
  v7 = p_end_cap[-1].__value_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)value - (char *)v7) >> 3) >= __n)
  {
    if (__n)
    {
      v13 = 24 * ((24 * __n - 24) / 0x18) + 24;
      bzero(p_end_cap[-1].__value_, v13);
      v7 = (std::string *)((char *)v7 + v13);
    }
    this->__end_ = v7;
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (char *)this->__begin_) >> 3);
    v9 = v8 + __n;
    if (v8 + __n > 0xAAAAAAAAAAAAAAALL)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (char *)this->__begin_) >> 3);
    if (2 * v10 > v9)
      v9 = 2 * v10;
    if (v10 >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v9;
    __v.__end_cap_.__value_ = (std::allocator<std::string> *)p_end_cap;
    if (v11)
      v12 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)p_end_cap, v11);
    else
      v12 = 0;
    __v.__first_ = v12;
    __v.__begin_ = v12 + v8;
    __v.__end_cap_.__value_ = &v12[v11];
    v14 = 24 * ((24 * __n - 24) / 0x18) + 24;
    bzero(__v.__begin_, v14);
    __v.__end_ = (std::__split_buffer<std::string>::pointer)((char *)__v.__begin_ + v14);
    std::vector<std::string>::__swap_out_circular_buffer(this, &__v);
    std::__split_buffer<std::string>::~__split_buffer(&__v);
  }
}

void sub_1BF80A1D4(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)&a10);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::SimpleDescriptorDatabase::DescriptorIndex<std::pair<void const*,int>>::AddExtension(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  _BYTE *v9;
  int v10;
  char v11;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  std::string *v16;
  std::string *v17;
  std::string *v18;
  std::string *v19;
  std::string *v20;
  std::string __p;
  int v22;
  std::string v23;
  __int128 v24;
  char v25;

  *(_QWORD *)&v24 = a4;
  *((_QWORD *)&v24 + 1) = a5;
  v8 = *(_QWORD *)(a3 + 32);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(_QWORD *)(v8 + 8))
      return 1;
    v9 = *(_BYTE **)v8;
  }
  else
  {
    v9 = *(_BYTE **)(a3 + 32);
    if (!*(_BYTE *)(v8 + 23))
      return 1;
  }
  if (*v9 != 46)
    return 1;
  std::string::basic_string(&v23, (const std::string *)v8, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v25);
  v10 = *(_DWORD *)(a3 + 72);
  __p = v23;
  memset(&v23, 0, sizeof(v23));
  v22 = v10;
  v11 = google::protobuf::InsertIfNotPresent<std::map<std::pair<std::string,int>,std::pair<void const*,int>>>((uint64_t **)(a1 + 48), (uint64_t)&__p, &v24);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((v11 & 1) != 0)
      return 1;
  }
  else if ((v11 & 1) != 0)
  {
    return 1;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor_database.cc", 232);
  v13 = google::protobuf::internal::LogMessage::operator<<(&__p, "Extension conflicts with extension already in database: extend ");
  v14 = google::protobuf::internal::LogMessage::operator<<(v13, *(const std::string::value_type **)(a3 + 32));
  v15 = google::protobuf::internal::LogMessage::operator<<(v14, " { ");
  v16 = google::protobuf::internal::LogMessage::operator<<(v15, *(const std::string::value_type **)(a3 + 24));
  v17 = google::protobuf::internal::LogMessage::operator<<(v16, " = ");
  v18 = google::protobuf::internal::LogMessage::operator<<(v17, *(_DWORD *)(a3 + 72));
  v19 = google::protobuf::internal::LogMessage::operator<<(v18, " } from:");
  v20 = google::protobuf::internal::LogMessage::operator<<(v19, a2);
  google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v20->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&__p.__r_.__value_.__l.__data_);
  return 0;
}

void sub_1BF80A34C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  _Unwind_Resume(a1);
}

const void **std::__tree<std::__value_type<std::string,std::pair<void const*,int>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::pair<void const*,int>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::pair<void const*,int>>>>::__find_equal<std::string>(_QWORD *a1, uint64_t *a2, const void ***a3, uint64_t *a4, const void **a5)
{
  const void **v9;
  const void **v11;
  const void **v12;
  uint64_t v13;
  const void **v14;
  const void **v15;
  uint64_t *v16;
  BOOL v17;
  const void **v18;

  v9 = (const void **)(a1 + 1);
  if (a1 + 1 == a2 || std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a5, (const void **)a2 + 4))
  {
    if ((uint64_t *)*a1 == a2)
    {
      v12 = (const void **)a2;
LABEL_16:
      if (*a2)
      {
        *a3 = v12;
        return v12 + 1;
      }
      else
      {
        *a3 = (const void **)a2;
        return (const void **)a2;
      }
    }
    v11 = (const void **)*a2;
    if (*a2)
    {
      do
      {
        v12 = v11;
        v11 = (const void **)v11[1];
      }
      while (v11);
    }
    else
    {
      v16 = a2;
      do
      {
        v12 = (const void **)v16[2];
        v17 = *v12 == v16;
        v16 = (uint64_t *)v12;
      }
      while (v17);
    }
    if (std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), v12 + 4, a5))
      goto LABEL_16;
    return (const void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, a3, a5);
  }
  if (std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), (const void **)a2 + 4, a5))
  {
    a4 = a2 + 1;
    v13 = a2[1];
    if (v13)
    {
      v14 = (const void **)a2[1];
      do
      {
        v15 = v14;
        v14 = (const void **)*v14;
      }
      while (v14);
    }
    else
    {
      v18 = (const void **)a2;
      do
      {
        v15 = (const void **)v18[2];
        v17 = *v15 == v18;
        v18 = v15;
      }
      while (!v17);
    }
    if (v15 != v9)
    {
      if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a5, v15 + 4))
        return (const void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, a3, a5);
      v13 = *a4;
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = (const void **)a2;
    }
    return (const void **)a4;
  }
  *a3 = (const void **)a2;
  *a4 = (uint64_t)a2;
  return (const void **)a4;
}

uint64_t google::protobuf::InsertIfNotPresent<std::map<std::pair<std::string,int>,std::pair<void const*,int>>>(uint64_t **a1, uint64_t a2, __int128 *a3)
{
  char v6;
  char v7;
  std::string __p;
  int v10;
  __int128 v11;

  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  v10 = *(_DWORD *)(a2 + 24);
  v11 = *a3;
  std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__emplace_unique_key_args<std::pair<std::string,int>,std::pair<std::pair<std::string,int> const,std::pair<void const*,int>> const&>(a1, (const void **)&__p.__r_.__value_.__l.__data_, (__int128 *)&__p);
  v7 = v6;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v7 & 1;
}

void sub_1BF80A5B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__emplace_unique_key_args<std::pair<std::string,int>,std::pair<std::pair<std::string,int> const,std::pair<void const*,int>> const&>(uint64_t **a1, const void **a2, __int128 *a3)
{
  uint64_t **v5;
  uint64_t *result;
  uint64_t *v7;
  uint64_t v8;

  v5 = (uint64_t **)std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__find_equal<std::pair<std::string,int>>((uint64_t)a1, &v8, a2);
  result = *v5;
  if (!*v5)
  {
    std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__construct_node<std::pair<std::pair<std::string,int> const,std::pair<void const*,int>> const&>((uint64_t)a1, a3, (uint64_t)&v7);
    std::__tree<std::string>::__insert_node_at(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

_QWORD *std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__find_equal<std::pair<std::string,int>>(uint64_t a1, _QWORD *a2, const void **a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  const void **v9;

  v5 = (_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v7 = a1 + 16;
    do
    {
      while (1)
      {
        v8 = (_QWORD *)v4;
        v9 = (const void **)(v4 + 32);
        if (!std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v7, a3, (const void **)(v4 + 32)))
          break;
        v4 = *v8;
        v5 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (!std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v7, v9, a3))
        break;
      v5 = v8 + 1;
      v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    v8 = (_QWORD *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

std::string *std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::__construct_node<std::pair<std::pair<std::string,int> const,std::pair<void const*,int>> const&>@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  std::string *result;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x50uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  result = std::pair<std::pair<std::string,int> const,std::pair<void const*,int>>::pair[abi:ne180100]((std::string *)(v6 + 32), a2);
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1BF80A750(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

std::string *std::pair<std::pair<std::string,int> const,std::pair<void const*,int>>::pair[abi:ne180100](std::string *this, __int128 *a2)
{
  __int128 v4;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  LODWORD(this[1].__r_.__value_.__l.__data_) = *((_DWORD *)a2 + 6);
  *(_OWORD *)&this[1].__r_.__value_.__r.__words[1] = a2[2];
  return this;
}

uint64_t std::__tree<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::__map_value_compare<std::pair<std::string,int>,std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>,std::less<std::pair<std::string,int>>,true>,std::allocator<std::__value_type<std::pair<std::string,int>,std::pair<void const*,int>>>>::find<std::pair<std::string,int>>(uint64_t a1, const void **a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  uint64_t *v8;

  v2 = a1 + 8;
  v3 = *(_QWORD *)(a1 + 8);
  if (!v3)
    return v2;
  v5 = a1 + 16;
  v6 = a1 + 8;
  do
  {
    v7 = std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v5, (const void **)(v3 + 32), a2);
    v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      v8 = (uint64_t *)v3;
      v6 = v3;
    }
    v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || std::less<std::pair<std::string,int>>::operator()[abi:ne180100](v5, a2, (const void **)(v6 + 32)))
    return v2;
  return v6;
}

const char *google::protobuf::FileDescriptor::SyntaxName(int a1)
{
  std::string *v2;
  char v3;
  std::string v4[2];

  switch(a1)
  {
    case 0:
      return "unknown";
    case 2:
      return "proto2";
    case 3:
      return "proto3";
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v4, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 229);
  v2 = google::protobuf::internal::LogMessage::operator<<(v4, "can't reach here.");
  google::protobuf::internal::LogFinisher::operator=((int)&v3, (const char **)&v2->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v4[0].__r_.__value_.__l.__data_);
  return 0;
}

void sub_1BF80A8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::DescriptorPool::Tables *google::protobuf::DescriptorPool::Tables::Tables(google::protobuf::DescriptorPool::Tables *this)
{
  *((_QWORD *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  *((_DWORD *)this + 14) = 1065353216;
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>((uint64_t)this + 24, 3uLL);
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 1065353216;
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>((uint64_t)this + 64, 3uLL);
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *((_DWORD *)this + 34) = 1065353216;
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>((uint64_t)this + 104, 3uLL);
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_QWORD *)this + 36) = 0;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_DWORD *)this + 74) = 1065353216;
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>((uint64_t)this + 264, 3uLL);
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 20) = 0u;
  *((_DWORD *)this + 84) = 1065353216;
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>((uint64_t)this + 304, 3uLL);
  *((_QWORD *)this + 44) = 0;
  *((_QWORD *)this + 45) = 0;
  *((_QWORD *)this + 43) = (char *)this + 352;
  *((_OWORD *)this + 23) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  *((_OWORD *)this + 28) = 0u;
  return this;
}

void sub_1BF80AA30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;

  v16 = v13;
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(v16);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(v14);
  std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__destroy_vector::operator()[abi:ne180100](&a10);
  a10 = v15 + 9;
  std::vector<std::unique_ptr<std::once_flag>>::__destroy_vector::operator()[abi:ne180100](&a10);
  std::vector<std::unique_ptr<google::protobuf::Message>>::__destroy_vector::operator()[abi:ne180100](&a10);
  a10 = v15 + 3;
  std::vector<std::unique_ptr<std::string>>::__destroy_vector::operator()[abi:ne180100](&a10);
  a10 = v15;
  std::vector<std::unique_ptr<char []>>::__destroy_vector::operator()[abi:ne180100](&a10);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(v12);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v11);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v10);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a10);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::Tables::~Tables(google::protobuf::DescriptorPool::Tables *this)
{
  std::string *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  std::string v8[2];

  if (*((_QWORD *)this + 46) != *((_QWORD *)this + 47))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 806);
    v2 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: checkpoints_.empty(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  v3 = (void *)*((_QWORD *)this + 55);
  if (v3)
  {
    *((_QWORD *)this + 56) = v3;
    operator delete(v3);
  }
  v4 = (void *)*((_QWORD *)this + 52);
  if (v4)
  {
    *((_QWORD *)this + 53) = v4;
    operator delete(v4);
  }
  v5 = (void *)*((_QWORD *)this + 49);
  if (v5)
  {
    *((_QWORD *)this + 50) = v5;
    operator delete(v5);
  }
  v6 = (void *)*((_QWORD *)this + 46);
  if (v6)
  {
    *((_QWORD *)this + 47) = v6;
    operator delete(v6);
  }
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy((uint64_t)this + 344, *((_QWORD **)this + 44));
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table((uint64_t)this + 304);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table((uint64_t)this + 264);
  v8[0].__r_.__value_.__r.__words[0] = (std::string::size_type)this + 240;
  std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__destroy_vector::operator()[abi:ne180100]((void ***)v8);
  v8[0].__r_.__value_.__r.__words[0] = (std::string::size_type)this + 216;
  std::vector<std::unique_ptr<std::once_flag>>::__destroy_vector::operator()[abi:ne180100]((void ***)v8);
  v8[0].__r_.__value_.__r.__words[0] = (std::string::size_type)this + 192;
  std::vector<std::unique_ptr<google::protobuf::Message>>::__destroy_vector::operator()[abi:ne180100]((void ***)v8);
  v8[0].__r_.__value_.__r.__words[0] = (std::string::size_type)this + 168;
  std::vector<std::unique_ptr<std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)v8);
  v8[0].__r_.__value_.__r.__words[0] = (std::string::size_type)this + 144;
  std::vector<std::unique_ptr<char []>>::__destroy_vector::operator()[abi:ne180100]((void ***)v8);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table((uint64_t)this + 104);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)this + 64);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)this + 24);
  v8[0].__r_.__value_.__r.__words[0] = (std::string::size_type)this;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v8);
}

google::protobuf::FileDescriptorTables *google::protobuf::FileDescriptorTables::FileDescriptorTables(google::protobuf::FileDescriptorTables *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 1065353216;
  v2 = operator new();
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_DWORD *)(v2 + 32) = 1065353216;
  *((_QWORD *)this + 10) = v2;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *((_QWORD *)this + 15) = 0;
  *((_DWORD *)this + 32) = 1065353216;
  v3 = operator new();
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_DWORD *)(v3 + 32) = 1065353216;
  *((_QWORD *)this + 17) = v3;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_QWORD *)this + 22) = 0;
  *((_DWORD *)this + 46) = 1065353216;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_DWORD *)this + 56) = 1065353216;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *((_DWORD *)this + 66) = 1065353216;
  *((_QWORD *)this + 38) = 0;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_DWORD *)this + 78) = 1065353216;
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>((uint64_t)this + 280, 3uLL);
  *((_QWORD *)this + 40) = 850045863;
  *((_QWORD *)this + 47) = 0;
  *(_OWORD *)((char *)this + 328) = 0u;
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 360) = 0u;
  return this;
}

void sub_1BF80ADAC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = v5;
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v8);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(v7);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(v6);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(v4);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(v3);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(v2);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void sub_1BF80AE3C()
{
  JUMPOUT(0x1BF80AE2CLL);
}

void google::protobuf::FileDescriptorTables::~FileDescriptorTables(google::protobuf::FileDescriptorTables *this)
{
  std::mutex::~mutex((std::mutex *)this + 5);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)this + 280);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table((uint64_t)this + 232);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table((uint64_t)this + 192);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table((uint64_t)this + 152);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table((uint64_t)this + 96);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table((uint64_t)this + 40);
  std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table((uint64_t)this);
}

void google::protobuf::DescriptorPool::Tables::AddCheckpoint(google::protobuf::DescriptorPool::Tables *this)
{
  _OWORD *v2;
  unint64_t v3;
  __int128 v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;
  char *v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  google::protobuf::DescriptorPool::Tables::CheckPoint::CheckPoint(&v18, this);
  v2 = (_OWORD *)*((_QWORD *)this + 47);
  v3 = *((_QWORD *)this + 48);
  if ((unint64_t)v2 >= v3)
  {
    v6 = *((_QWORD *)this + 46);
    v7 = ((uint64_t)v2 - v6) >> 5;
    v8 = v7 + 1;
    if ((unint64_t)(v7 + 1) >> 59)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v9 = v3 - v6;
    if (v9 >> 4 > v8)
      v8 = v9 >> 4;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFE0)
      v10 = 0x7FFFFFFFFFFFFFFLL;
    else
      v10 = v8;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<google::protobuf::DescriptorPool::Tables::CheckPoint>>((uint64_t)this + 384, v10);
    else
      v11 = 0;
    v12 = &v11[32 * v7];
    v13 = &v11[32 * v10];
    v14 = v19;
    *(_OWORD *)v12 = v18;
    *((_OWORD *)v12 + 1) = v14;
    v5 = v12 + 32;
    v16 = (char *)*((_QWORD *)this + 46);
    v15 = (char *)*((_QWORD *)this + 47);
    if (v15 != v16)
    {
      do
      {
        v17 = *((_OWORD *)v15 - 1);
        *((_OWORD *)v12 - 2) = *((_OWORD *)v15 - 2);
        *((_OWORD *)v12 - 1) = v17;
        v12 -= 32;
        v15 -= 32;
      }
      while (v15 != v16);
      v15 = (char *)*((_QWORD *)this + 46);
    }
    *((_QWORD *)this + 46) = v12;
    *((_QWORD *)this + 47) = v5;
    *((_QWORD *)this + 48) = v13;
    if (v15)
      operator delete(v15);
  }
  else
  {
    v4 = v19;
    *v2 = v18;
    v2[1] = v4;
    v5 = v2 + 2;
  }
  *((_QWORD *)this + 47) = v5;
}

void google::protobuf::DescriptorPool::Tables::ClearLastCheckpoint(google::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v2;
  uint64_t v3;
  std::string *v4;
  uint64_t v5;
  char v6;
  std::string v7[2];

  v2 = *((_QWORD *)this + 46);
  v3 = *((_QWORD *)this + 47);
  if (v2 == v3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 834);
    v4 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: !checkpoints_.empty(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
    v2 = *((_QWORD *)this + 46);
    v3 = *((_QWORD *)this + 47);
  }
  v5 = v3 - 32;
  *((_QWORD *)this + 47) = v5;
  if (v2 == v5)
  {
    *((_QWORD *)this + 50) = *((_QWORD *)this + 49);
    *((_QWORD *)this + 53) = *((_QWORD *)this + 52);
    *((_QWORD *)this + 56) = *((_QWORD *)this + 55);
  }
}

void sub_1BF80B040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::Tables::RollbackToLastCheckpoint(google::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v2;
  std::string *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  std::string v14[2];

  v2 = *((_QWORD *)this + 47);
  if (*((_QWORD *)this + 46) == v2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 846);
    v3 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: !checkpoints_.empty(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v3->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    v2 = *((_QWORD *)this + 47);
  }
  v4 = *(int *)(v2 - 12);
  v5 = *((_QWORD *)this + 49);
  if (v4 < (*((_QWORD *)this + 50) - v5) >> 3)
  {
    v6 = 8 * v4;
    do
    {
      std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::__erase_unique<char const*>((_QWORD *)this + 33, (const char **)(v5 + v6));
      ++v4;
      v5 = *((_QWORD *)this + 49);
      v6 += 8;
    }
    while (v4 < (*((_QWORD *)this + 50) - v5) >> 3);
  }
  v7 = *(int *)(v2 - 8);
  v8 = *((_QWORD *)this + 52);
  if (v7 < (*((_QWORD *)this + 53) - v8) >> 3)
  {
    v9 = 8 * v7;
    do
    {
      std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::__erase_unique<char const*>((_QWORD *)this + 38, (const char **)(v8 + v9));
      ++v7;
      v8 = *((_QWORD *)this + 52);
      v9 += 8;
    }
    while (v7 < (*((_QWORD *)this + 53) - v8) >> 3);
  }
  v10 = *(int *)(v2 - 4);
  v11 = *((_QWORD *)this + 55);
  if (v10 < (*((_QWORD *)this + 56) - v11) >> 4)
  {
    v12 = 16 * v10;
    do
    {
      std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__erase_unique<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t **)this + 43, (unint64_t *)(v11 + v12));
      ++v10;
      v11 = *((_QWORD *)this + 55);
      v12 += 16;
    }
    while (v10 < (*((_QWORD *)this + 56) - v11) >> 4);
  }
  std::vector<char const*>::resize((uint64_t)this + 392, *(int *)(v2 - 12));
  std::vector<char const*>::resize((uint64_t)this + 416, *(int *)(v2 - 8));
  std::vector<std::pair<google::protobuf::Descriptor const*,int>>::resize((uint64_t)this + 440, *(int *)(v2 - 4));
  std::vector<std::unique_ptr<std::string>>::resize((uint64_t *)this + 21, *(int *)(v2 - 32));
  std::vector<std::unique_ptr<google::protobuf::Message>>::resize((uint64_t)this + 192, *(int *)(v2 - 28));
  std::vector<std::unique_ptr<std::once_flag>>::resize((uint64_t *)this + 27, *(int *)(v2 - 24));
  std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::resize((uint64_t)this + 240, *(int *)(v2 - 20));
  std::vector<std::unique_ptr<char []>>::resize((uint64_t *)this + 18, *(int *)(v2 - 16));
  *((_QWORD *)this + 47) -= 32;
}

void sub_1BF80B218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void std::vector<char const*>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 8 * a2;
  }
  else
  {
    std::vector<char const*>::__append((void **)a1, a2 - v2);
  }
}

void std::vector<std::pair<google::protobuf::Descriptor const*,int>>::resize(uint64_t a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (uint64_t)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 4;
  if (a2 <= v2)
  {
    if (a2 < v2)
      *(_QWORD *)(a1 + 8) = *(_QWORD *)a1 + 16 * a2;
  }
  else
  {
    std::vector<std::pair<google::protobuf::Descriptor const*,int>>::__append((void **)a1, a2 - v2);
  }
}

void std::vector<std::unique_ptr<std::string>>::resize(uint64_t *a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (a1[1] - *a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2)
      std::vector<std::unique_ptr<std::string>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, (uint64_t *)(*a1 + 8 * a2));
  }
  else
  {
    std::vector<std::unique_ptr<std::string>>::__append(a1, a2 - v2);
  }
}

void std::vector<std::unique_ptr<google::protobuf::Message>>::resize(uint64_t a1, unint64_t a2)
{
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD **)(a1 + 8);
  v4 = ((uint64_t)v3 - *(_QWORD *)a1) >> 3;
  if (a2 <= v4)
  {
    if (a2 < v4)
    {
      v5 = *(_QWORD *)a1 + 8 * a2;
      while (v3 != (_QWORD *)v5)
      {
        v7 = *--v3;
        v6 = v7;
        *v3 = 0;
        if (v7)
          (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
      }
      *(_QWORD *)(a1 + 8) = v5;
    }
  }
  else
  {
    std::vector<std::unique_ptr<google::protobuf::Message>>::__append((char **)a1, a2 - v4);
  }
}

void std::vector<std::unique_ptr<std::once_flag>>::resize(uint64_t *a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (a1[1] - *a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2)
      std::vector<std::unique_ptr<std::once_flag>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, (_QWORD *)(*a1 + 8 * a2));
  }
  else
  {
    std::vector<std::unique_ptr<std::once_flag>>::__append(a1, a2 - v2);
  }
}

void std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::resize(uint64_t a1, unint64_t a2)
{
  google::protobuf::FileDescriptorTables **v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(google::protobuf::FileDescriptorTables ***)(a1 + 8);
  v4 = ((uint64_t)v3 - *(_QWORD *)a1) >> 3;
  if (a2 <= v4)
  {
    if (a2 < v4)
    {
      v5 = *(_QWORD *)a1 + 8 * a2;
      while (v3 != (google::protobuf::FileDescriptorTables **)v5)
        std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100](--v3, 0);
      *(_QWORD *)(a1 + 8) = v5;
    }
  }
  else
  {
    std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__append((char **)a1, a2 - v4);
  }
}

void std::vector<std::unique_ptr<char []>>::resize(uint64_t *a1, unint64_t a2)
{
  unint64_t v2;

  v2 = (a1[1] - *a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2)
      std::vector<std::unique_ptr<char []>>::__base_destruct_at_end[abi:ne180100]((uint64_t)a1, (_QWORD *)(*a1 + 8 * a2));
  }
  else
  {
    std::vector<std::unique_ptr<char []>>::__append(a1, a2 - v2);
  }
}

unint64_t google::protobuf::DescriptorPool::Tables::FindByNameHelper(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  std::mutex *v6;
  char v7;
  const char *v8;
  uint64_t **v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  uint64_t **v15;
  const char *v17;
  uint64_t **v18;
  const char *v19;

  v6 = *(std::mutex **)a2;
  if (!*(_QWORD *)a2)
    goto LABEL_6;
  std::mutex::lock(*(std::mutex **)a2);
  if (!a1[11] && !a1[6])
  {
    v17 = *(char *)(a3 + 23) >= 0 ? (const char *)a3 : *(const char **)a3;
    v19 = v17;
    v18 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(a1 + 33, &v19);
    if (v18)
    {
      v11 = v18[3];
      if ((_DWORD)v11)
      {
        v10 = (unint64_t)v11 >> 32;
        goto LABEL_26;
      }
    }
  }
  std::mutex::unlock(v6);
  v6 = *(std::mutex **)a2;
  if (*(_QWORD *)a2)
  {
    std::mutex::lock(*(std::mutex **)a2);
    v7 = 0;
  }
  else
  {
LABEL_6:
    v7 = 1;
  }
  if (*(_QWORD *)(a2 + 8))
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)(a1 + 8));
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)(a1 + 3));
  }
  if (*(char *)(a3 + 23) >= 0)
    v8 = (const char *)a3;
  else
    v8 = *(const char **)a3;
  v19 = v8;
  v9 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(a1 + 33, &v19);
  if (v9)
  {
    LODWORD(v11) = *((_DWORD *)v9 + 6);
    v10 = *((unsigned int *)v9 + 7);
    if ((_DWORD)v11)
      goto LABEL_25;
  }
  else
  {
    v10 = 0;
  }
  v12 = *(_QWORD *)(a2 + 24);
  if (!v12
    || (v13 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(_QWORD *)(v12 + 32), v12, a3),
        v10 = HIDWORD(v13),
        (LODWORD(v11) = v13) == 0))
  {
    if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((google::protobuf::DescriptorPool *)a2, (unsigned __int8 *)a3))
    {
      if (*(char *)(a3 + 23) >= 0)
        v14 = (const char *)a3;
      else
        v14 = *(const char **)a3;
      v19 = v14;
      v15 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(a1 + 33, &v19);
      if (v15)
        v11 = v15[3];
      else
        v11 = 0;
      v10 = (unint64_t)v11 >> 32;
      if ((v7 & 1) == 0)
        goto LABEL_26;
      return v11 | (v10 << 32);
    }
    LODWORD(v11) = 0;
  }
LABEL_25:
  if ((v7 & 1) == 0)
LABEL_26:
    std::mutex::unlock(v6);
  return v11 | (v10 << 32);
}

void sub_1BF80B5C8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase(google::protobuf::DescriptorPool *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  _QWORD *v5;
  const char *v6;
  uint64_t **v7;
  _BYTE v9[176];
  uint64_t v10;
  const char *v11;

  if (!*((_QWORD *)a1 + 1)
    || std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(*((_QWORD *)a1 + 4) + 64), a2))
  {
    return 0;
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v9);
  if ((google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType((uint64_t)a1, (uint64_t)a2) & 1) != 0
    || !(*(unsigned int (**)(_QWORD, unsigned __int8 *, _BYTE *))(**((_QWORD **)a1 + 1) + 24))(*((_QWORD *)a1 + 1), a2, v9)|| ((v5 = (_QWORD *)(*((_QWORD *)a1 + 4) + 304), *(char *)(v10 + 23) >= 0)? (v6 = (const char *)v10): (v6 = *(const char **)v10), (v11 = v6, (v7 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v5, &v11)) != 0)&& v7[3]|| !google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const google::protobuf::FileDescriptorProto *)v9)))
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*((_QWORD *)a1 + 4) + 64, a2, (uint64_t)a2);
    v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v9);
  return v4;
}

void sub_1BF80B6E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&a9);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitInternal(uint64_t this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7[2];

  v1 = *(_QWORD **)(this + 168);
  if (v1)
  {
    v2 = this + 40;
    while (1)
    {
      v3 = v1[4];
      if (!*(_BYTE *)(v3 + 66))
        break;
      v4 = *(_QWORD *)(v3 + 96);
      if (!v4)
      {
        v5 = (uint64_t *)(v3 + 40);
LABEL_7:
        v4 = *v5;
      }
      v6 = *(_QWORD *)(v3 + 16);
      if (*(char *)(v6 + 23) < 0)
        v6 = *(_QWORD *)v6;
      v7[0] = v4;
      v7[1] = v6;
      v1 = (_QWORD *)*v1;
      if (!v1)
        return this;
    }
    v5 = (uint64_t *)(v3 + 80);
    goto LABEL_7;
  }
  return this;
}

uint64_t google::protobuf::InsertIfNotPresent<std::unordered_map<std::pair<void const*,char const*>,google::protobuf::FieldDescriptor const*,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::`anonymous namespace'::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const*,char const*> const,google::protobuf::FieldDescriptor const*>>>>(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  const char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint8x8_t v14;
  unint64_t v15;
  uint64_t ***v16;
  uint64_t **i;
  unint64_t v18;
  uint64_t result;
  _QWORD *v20;
  float v21;
  float v22;
  _BOOL8 v23;
  unint64_t v24;
  unint64_t v25;
  size_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;

  v6 = *a2;
  v5 = (const char *)a2[1];
  v7 = *v5;
  if (*v5)
  {
    v8 = 0;
    v9 = (unsigned __int8 *)(v5 + 1);
    do
    {
      v8 = 5 * v8 + v7;
      v10 = *v9++;
      v7 = v10;
    }
    while (v10);
  }
  else
  {
    v8 = 0;
  }
  v11 = *a3;
  v12 = v8 ^ (16777619 * v6);
  v13 = *(_QWORD *)(a1 + 8);
  if (v13)
  {
    v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    v15 = v14.u32[0];
    if (v14.u32[0] > 1uLL)
    {
      v3 = v8 ^ (16777619 * v6);
      if (v12 >= v13)
        v3 = v12 % v13;
    }
    else
    {
      v3 = (v13 - 1) & v12;
    }
    v16 = *(uint64_t ****)(*(_QWORD *)a1 + 8 * v3);
    if (v16)
    {
      for (i = *v16; i; i = (uint64_t **)*i)
      {
        v18 = (unint64_t)i[1];
        if (v18 == v12)
        {
          if (i[2] == (uint64_t *)v6)
          {
            result = strcmp((const char *)i[3], v5);
            if (!(_DWORD)result)
              return result;
          }
        }
        else
        {
          if (v15 > 1)
          {
            if (v18 >= v13)
              v18 %= v13;
          }
          else
          {
            v18 &= v13 - 1;
          }
          if (v18 != v3)
            break;
        }
      }
    }
  }
  v20 = operator new(0x28uLL);
  *v20 = 0;
  v20[1] = v12;
  v20[2] = v6;
  v20[3] = v5;
  v20[4] = v11;
  v21 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v22 = *(float *)(a1 + 32);
  if (!v13 || (float)(v22 * (float)v13) < v21)
  {
    v23 = 1;
    if (v13 >= 3)
      v23 = (v13 & (v13 - 1)) != 0;
    v24 = v23 | (2 * v13);
    v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25)
      v26 = v25;
    else
      v26 = v24;
    v13 = *(_QWORD *)(a1 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13)
        v3 = v12 % v13;
      else
        v3 = v12;
    }
    else
    {
      v3 = (v13 - 1) & v12;
    }
  }
  v27 = *(_QWORD *)a1;
  v28 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v28)
  {
    *v20 = *v28;
LABEL_44:
    *v28 = v20;
    goto LABEL_45;
  }
  *v20 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v20;
  *(_QWORD *)(v27 + 8 * v3) = a1 + 16;
  if (*v20)
  {
    v29 = *(_QWORD *)(*v20 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v29 >= v13)
        v29 %= v13;
    }
    else
    {
      v29 &= v13 - 1;
    }
    v28 = (_QWORD *)(*(_QWORD *)a1 + 8 * v29);
    goto LABEL_44;
  }
LABEL_45:
  ++*(_QWORD *)(a1 + 24);
  return 1;
}

void sub_1BF80B9C8(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddSymbol(_QWORD *a1, const char *a2, const char *a3, const char *a4)
{
  uint64_t v6;
  const char *v7;
  char v8;
  char v9;
  const char *v10;
  unint64_t v11;
  const char **v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  const char *v26[3];

  v6 = (uint64_t)(a1 + 33);
  if (a2[23] >= 0)
    v7 = a2;
  else
    v7 = *(const char **)a2;
  v26[0] = v7;
  v26[1] = a3;
  v26[2] = a4;
  std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,google::protobuf::Symbol> const&>(v6, v26, (uint64_t)v26);
  v9 = v8;
  if ((v8 & 1) != 0)
  {
    if (a2[23] >= 0)
      v10 = a2;
    else
      v10 = *(const char **)a2;
    v12 = (const char **)a1[50];
    v11 = a1[51];
    if ((unint64_t)v12 >= v11)
    {
      v14 = a1[49];
      v15 = ((uint64_t)v12 - v14) >> 3;
      if ((unint64_t)(v15 + 1) >> 61)
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      v16 = v11 - v14;
      v17 = v16 >> 2;
      if (v16 >> 2 <= (unint64_t)(v15 + 1))
        v17 = v15 + 1;
      if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8)
        v18 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v18 = v17;
      if (v18)
        v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 51), v18);
      else
        v19 = 0;
      v20 = &v19[8 * v15];
      v21 = &v19[8 * v18];
      *(_QWORD *)v20 = v10;
      v13 = v20 + 8;
      v23 = (char *)a1[49];
      v22 = (char *)a1[50];
      if (v22 != v23)
      {
        do
        {
          v24 = *((_QWORD *)v22 - 1);
          v22 -= 8;
          *((_QWORD *)v20 - 1) = v24;
          v20 -= 8;
        }
        while (v22 != v23);
        v22 = (char *)a1[49];
      }
      a1[49] = v20;
      a1[50] = v13;
      a1[51] = v21;
      if (v22)
        operator delete(v22);
    }
    else
    {
      *v12 = v10;
      v13 = v12 + 1;
    }
    a1[50] = v13;
  }
  return v9 & 1;
}

uint64_t google::protobuf::FileDescriptorTables::AddAliasUnderParent(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  const char *v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint8x8_t v17;
  unint64_t v18;
  uint64_t ***v19;
  uint64_t **v20;
  unint64_t v21;
  uint64_t result;
  _QWORD *v23;
  float v24;
  float v25;
  _BOOL8 v26;
  unint64_t v27;
  unint64_t v28;
  size_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;

  v6 = a5;
  if (*(char *)(a3 + 23) >= 0)
    v10 = (const char *)a3;
  else
    v10 = *(const char **)a3;
  v11 = *v10;
  if (*v10)
  {
    v12 = 0;
    v13 = (unsigned __int8 *)(v10 + 1);
    do
    {
      v12 = 5 * v12 + v11;
      v14 = *v13++;
      v11 = v14;
    }
    while (v14);
  }
  else
  {
    v12 = 0;
  }
  v15 = v12 ^ (16777619 * (_QWORD)a2);
  v16 = *(_QWORD *)(a1 + 8);
  if (v16)
  {
    v17 = (uint8x8_t)vcnt_s8((int8x8_t)v16);
    v17.i16[0] = vaddlv_u8(v17);
    v18 = v17.u32[0];
    if (v17.u32[0] > 1uLL)
    {
      v5 = v12 ^ (16777619 * (_QWORD)a2);
      if (v15 >= v16)
        v5 = v15 % v16;
    }
    else
    {
      v5 = (v16 - 1) & v15;
    }
    v19 = *(uint64_t ****)(*(_QWORD *)a1 + 8 * v5);
    if (v19)
    {
      v20 = *v19;
      if (*v19)
      {
        while (1)
        {
          v21 = (unint64_t)v20[1];
          if (v21 == v15)
          {
            if (v20[2] == a2)
            {
              result = strcmp((const char *)v20[3], v10);
              if (!(_DWORD)result)
                return result;
            }
          }
          else
          {
            if (v18 > 1)
            {
              if (v21 >= v16)
                v21 %= v16;
            }
            else
            {
              v21 &= v16 - 1;
            }
            if (v21 != v5)
            {
LABEL_27:
              v6 = a5;
              break;
            }
          }
          v20 = (uint64_t **)*v20;
          if (!v20)
            goto LABEL_27;
        }
      }
    }
  }
  v23 = operator new(0x30uLL);
  *v23 = 0;
  v23[1] = v15;
  v23[2] = a2;
  v23[3] = v10;
  v23[4] = a4;
  v23[5] = v6;
  v24 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v25 = *(float *)(a1 + 32);
  if (!v16 || (float)(v25 * (float)v16) < v24)
  {
    v26 = 1;
    if (v16 >= 3)
      v26 = (v16 & (v16 - 1)) != 0;
    v27 = v26 | (2 * v16);
    v28 = vcvtps_u32_f32(v24 / v25);
    if (v27 <= v28)
      v29 = v28;
    else
      v29 = v27;
    v16 = *(_QWORD *)(a1 + 8);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v15 >= v16)
        v5 = v15 % v16;
      else
        v5 = v15;
    }
    else
    {
      v5 = (v16 - 1) & v15;
    }
  }
  v30 = *(_QWORD *)a1;
  v31 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v5);
  if (v31)
  {
    *v23 = *v31;
LABEL_48:
    *v31 = v23;
    goto LABEL_49;
  }
  *v23 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(v30 + 8 * v5) = a1 + 16;
  if (*v23)
  {
    v32 = *(_QWORD *)(*v23 + 8);
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v32 >= v16)
        v32 %= v16;
    }
    else
    {
      v32 &= v16 - 1;
    }
    v31 = (_QWORD *)(*(_QWORD *)a1 + 8 * v32);
    goto LABEL_48;
  }
LABEL_49:
  ++*(_QWORD *)(a1 + 24);
  return 1;
}

void sub_1BF80BD7C(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddFile(google::protobuf::DescriptorPool::Tables *this, const google::protobuf::FileDescriptor *a2)
{
  char *v4;
  _QWORD *v5;
  char v6;
  char v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v24;

  v4 = (char *)this + 304;
  v5 = *(_QWORD **)a2;
  if (*(char *)(*(_QWORD *)a2 + 23) < 0)
    v5 = (_QWORD *)*v5;
  *(_QWORD *)&v24 = v5;
  *((_QWORD *)&v24 + 1) = a2;
  std::__hash_table<std::__hash_value_type<char const*,google::protobuf::internal::DescriptorTable const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::internal::DescriptorTable const*>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::internal::DescriptorTable const*>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::internal::DescriptorTable const*>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,google::protobuf::internal::DescriptorTable const*> const&>((uint64_t)v4, (const char **)&v24, &v24);
  v7 = v6;
  if ((v6 & 1) != 0)
  {
    v8 = *(_QWORD **)a2;
    if (*(char *)(*(_QWORD *)a2 + 23) < 0)
      v8 = (_QWORD *)*v8;
    v10 = (_QWORD *)*((_QWORD *)this + 53);
    v9 = *((_QWORD *)this + 54);
    if ((unint64_t)v10 >= v9)
    {
      v12 = *((_QWORD *)this + 52);
      v13 = ((uint64_t)v10 - v12) >> 3;
      if ((unint64_t)(v13 + 1) >> 61)
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      v14 = v9 - v12;
      v15 = v14 >> 2;
      if (v14 >> 2 <= (unint64_t)(v13 + 1))
        v15 = v13 + 1;
      if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8)
        v16 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v16 = v15;
      if (v16)
        v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)this + 432, v16);
      else
        v17 = 0;
      v18 = &v17[8 * v13];
      v19 = &v17[8 * v16];
      *(_QWORD *)v18 = v8;
      v11 = v18 + 8;
      v21 = (char *)*((_QWORD *)this + 52);
      v20 = (char *)*((_QWORD *)this + 53);
      if (v20 != v21)
      {
        do
        {
          v22 = *((_QWORD *)v20 - 1);
          v20 -= 8;
          *((_QWORD *)v18 - 1) = v22;
          v18 -= 8;
        }
        while (v20 != v21);
        v20 = (char *)*((_QWORD *)this + 52);
      }
      *((_QWORD *)this + 52) = v18;
      *((_QWORD *)this + 53) = v11;
      *((_QWORD *)this + 54) = v19;
      if (v20)
        operator delete(v20);
    }
    else
    {
      *v10 = v8;
      v11 = v10 + 1;
    }
    *((_QWORD *)this + 53) = v11;
  }
  return v7 & 1;
}

uint64_t google::protobuf::FileDescriptorTables::AddFieldByStylizedNames(google::protobuf::FileDescriptorTables *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t *v9;
  uint64_t v10[2];
  uint64_t v11[2];
  const google::protobuf::FieldDescriptor *v12;

  v12 = a2;
  if (*((_BYTE *)a2 + 66))
  {
    v4 = *((_QWORD *)a2 + 12);
    if (v4)
      goto LABEL_6;
    v5 = (char *)a2 + 40;
  }
  else
  {
    v5 = (char *)a2 + 80;
  }
  v4 = *(_QWORD *)v5;
LABEL_6:
  v6 = *((_QWORD *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
    v6 = *(_QWORD *)v6;
  v11[0] = v4;
  v11[1] = v6;
  {
  }
  v7 = *((_QWORD *)a2 + 3);
  if (*(char *)(v7 + 23) < 0)
    v7 = *(_QWORD *)v7;
  v10[0] = v4;
  v10[1] = v7;
  if ((result & 1) == 0)
  {
  }
  return result;
}

uint64_t *google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<void const*,char const*>,google::protobuf::FieldDescriptor const*,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::`anonymous namespace'::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const*,char const*> const,google::protobuf::FieldDescriptor const*>>>>(_QWORD *a1, uint64_t *a2)
{
  const char *v2;
  char v3;
  uint64_t v4;
  unsigned __int8 *v5;
  int v6;
  int8x8_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint8x8_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t ***v13;
  uint64_t **i;
  unint64_t v15;

  v2 = (const char *)a2[1];
  v3 = *v2;
  if (*v2)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      v4 = 5 * v4 + v3;
      v6 = *v5++;
      v3 = v6;
    }
    while (v6);
  }
  else
  {
    v4 = 0;
  }
  v7 = (int8x8_t)a1[1];
  if (v7)
  {
    v8 = (uint64_t *)*a2;
    v9 = v4 ^ (16777619 * *a2);
    v10 = (uint8x8_t)vcnt_s8(v7);
    v10.i16[0] = vaddlv_u8(v10);
    v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      v12 = v4 ^ (16777619 * *a2);
      if (v9 >= *(_QWORD *)&v7)
        v12 = v9 % *(_QWORD *)&v7;
    }
    else
    {
      v12 = (*(_QWORD *)&v7 - 1) & v9;
    }
    v13 = *(uint64_t ****)(*a1 + 8 * v12);
    if (v13)
    {
      for (i = *v13; i; i = (uint64_t **)*i)
      {
        v15 = (unint64_t)i[1];
        if (v15 == v9)
        {
          if (i[2] == v8 && !strcmp((const char *)i[3], v2))
            return i[4];
        }
        else
        {
          if (v11 > 1)
          {
            if (v15 >= *(_QWORD *)&v7)
              v15 %= *(_QWORD *)&v7;
          }
          else
          {
            v15 &= *(_QWORD *)&v7 - 1;
          }
          if (v15 != v12)
            return 0;
        }
      }
    }
  }
  return 0;
}

uint64_t google::protobuf::FileDescriptorTables::AddFieldByNumber(google::protobuf::FileDescriptorTables *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v2;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  uint64_t **v11;
  uint64_t *i;
  unint64_t v13;
  _QWORD *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;

  v5 = *((_QWORD *)a2 + 10);
  v6 = *((_DWORD *)a2 + 17);
  v7 = (uint64_t *)((char *)this + 152);
  v8 = (16777619 * v6) ^ (16777499 * v5);
  v9 = *((_QWORD *)this + 20);
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v2 = (16777619 * v6) ^ (16777499 * v5);
      if (v8 >= v9)
        v2 = v8 % v9;
    }
    else
    {
      v2 = v8 & (v9 - 1);
    }
    v11 = *(uint64_t ***)(*v7 + 8 * v2);
    if (v11)
    {
      for (i = *v11; i; i = (uint64_t *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == v6)
            return 0;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v2)
            break;
        }
      }
    }
  }
  v15 = operator new(0x28uLL);
  *v15 = 0;
  v15[1] = v8;
  v15[2] = v5;
  *((_DWORD *)v15 + 6) = v6;
  v15[4] = a2;
  v16 = (float)(unint64_t)(*((_QWORD *)this + 22) + 1);
  v17 = *((float *)this + 46);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    v18 = 1;
    if (v9 >= 3)
      v18 = (v9 & (v9 - 1)) != 0;
    v19 = v18 | (2 * v9);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    v9 = *((_QWORD *)this + 20);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v2 = v8 % v9;
      else
        v2 = (16777619 * v6) ^ (16777499 * v5);
    }
    else
    {
      v2 = (v9 - 1) & v8;
    }
  }
  v22 = *v7;
  v23 = *(_QWORD **)(*v7 + 8 * v2);
  if (v23)
  {
    *v15 = *v23;
LABEL_42:
    *v23 = v15;
    goto LABEL_43;
  }
  *v15 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = v15;
  *(_QWORD *)(v22 + 8 * v2) = (char *)this + 168;
  if (*v15)
  {
    v24 = *(_QWORD *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9)
        v24 %= v9;
    }
    else
    {
      v24 &= v9 - 1;
    }
    v23 = (_QWORD *)(*v7 + 8 * v24);
    goto LABEL_42;
  }
LABEL_43:
  ++*((_QWORD *)this + 22);
  return 1;
}

void sub_1BF80C310(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::InsertIfNotPresent<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const*,int>,google::protobuf::EnumValueDescriptor const*,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::equal_to<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const*,int> const,google::protobuf::EnumValueDescriptor const*>>>>(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint8x8_t v10;
  uint64_t **v11;
  uint64_t *i;
  unint64_t v13;
  _QWORD *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v26;

  v5 = *a2;
  v6 = a2[1];
  v7 = *a3;
  v8 = (16777619 * (int)v6) ^ (16777499 * *a2);
  v9 = *(_QWORD *)(a1 + 8);
  v26 = v6;
  if (v9)
  {
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      v3 = (16777619 * (int)v6) ^ (16777499 * *a2);
      if (v8 >= v9)
        v3 = v8 % v9;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
    v11 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v3);
    if (v11)
    {
      for (i = *v11; i; i = (uint64_t *)*i)
      {
        v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == (_DWORD)v6)
            return 0;
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9)
              v13 %= v9;
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3)
            break;
        }
      }
    }
  }
  v15 = operator new(0x28uLL);
  *v15 = 0;
  v15[1] = v8;
  v15[2] = v5;
  v15[3] = v26;
  v15[4] = v7;
  v16 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    v18 = 1;
    if (v9 >= 3)
      v18 = (v9 & (v9 - 1)) != 0;
    v19 = v18 | (2 * v9);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      v21 = v20;
    else
      v21 = v19;
    v9 = *(_QWORD *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9)
        v3 = v8 % v9;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v9 - 1) & v8;
    }
  }
  v22 = *(_QWORD *)a1;
  v23 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v23)
  {
    *v15 = *v23;
LABEL_42:
    *v23 = v15;
    goto LABEL_43;
  }
  *v15 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v15;
  *(_QWORD *)(v22 + 8 * v3) = a1 + 16;
  if (*v15)
  {
    v24 = *(_QWORD *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9)
        v24 %= v9;
    }
    else
    {
      v24 &= v9 - 1;
    }
    v23 = (_QWORD *)(*(_QWORD *)a1 + 8 * v24);
    goto LABEL_42;
  }
LABEL_43:
  ++*(_QWORD *)(a1 + 24);
  return 1;
}

void sub_1BF80C568(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddExtension(uint64_t **this, const google::protobuf::FieldDescriptor *a2)
{
  unint64_t v3;
  int v4;
  char v5;
  char v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  unint64_t v21;
  int v22;
  const google::protobuf::FieldDescriptor *v23;

  v3 = *((_QWORD *)a2 + 10);
  v4 = *((_DWORD *)a2 + 17);
  v21 = v3;
  v22 = v4;
  v23 = a2;
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::pair<google::protobuf::Descriptor const*,int>,std::pair<std::pair<google::protobuf::Descriptor const*,int> const,google::protobuf::FieldDescriptor const*> const&>(this + 43, &v21, (uint64_t)&v21);
  v6 = v5;
  if ((v5 & 1) != 0)
  {
    v8 = this[56];
    v7 = this[57];
    if (v8 >= v7)
    {
      v10 = this[55];
      v11 = ((char *)v8 - (char *)v10) >> 4;
      v12 = v11 + 1;
      if ((unint64_t)(v11 + 1) >> 60)
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      v13 = (char *)v7 - (char *)v10;
      if (v13 >> 3 > v12)
        v12 = v13 >> 3;
      if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0)
        v14 = 0xFFFFFFFFFFFFFFFLL;
      else
        v14 = v12;
      if (v14)
        v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<google::protobuf::MapKey>>((uint64_t)(this + 57), v14);
      else
        v15 = 0;
      v16 = &v15[16 * v11];
      v17 = (uint64_t *)&v15[16 * v14];
      *(_QWORD *)v16 = v3;
      *((_DWORD *)v16 + 2) = v4;
      v9 = (uint64_t *)(v16 + 16);
      v19 = this[55];
      v18 = this[56];
      if (v18 != v19)
      {
        do
        {
          *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
          v16 -= 16;
          v18 -= 2;
        }
        while (v18 != v19);
        v18 = this[55];
      }
      this[55] = (uint64_t *)v16;
      this[56] = v9;
      this[57] = v17;
      if (v18)
        operator delete(v18);
    }
    else
    {
      *v8 = v3;
      *((_DWORD *)v8 + 2) = v4;
      v9 = v8 + 2;
    }
    this[56] = v9;
  }
  return v6 & 1;
}

std::string *google::protobuf::DescriptorPool::Tables::AllocateString(uint64_t *a1, uint64_t a2)
{
  std::string *v4;
  std::string *v5;
  unint64_t v6;
  std::string **v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  std::string **v15;
  _QWORD v17[5];

  v4 = (std::string *)operator new();
  v5 = v4;
  if (*(char *)(a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    v4->__r_.__value_.__r.__words[2] = *(_QWORD *)(a2 + 16);
  }
  v6 = a1[23];
  v7 = (std::string **)a1[22];
  if ((unint64_t)v7 >= v6)
  {
    v9 = a1[21];
    v10 = ((uint64_t)v7 - v9) >> 3;
    if ((unint64_t)(v10 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v11 = v6 - v9;
    v12 = v11 >> 2;
    if (v11 >> 2 <= (unint64_t)(v10 + 1))
      v12 = v10 + 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v13 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v13 = v12;
    v17[4] = a1 + 23;
    if (v13)
      v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 23), v13);
    else
      v14 = 0;
    v15 = (std::string **)&v14[8 * v10];
    v17[0] = v14;
    v17[1] = v15;
    v17[3] = &v14[8 * v13];
    *v15 = v5;
    v17[2] = v15 + 1;
    std::vector<std::unique_ptr<std::string>>::__swap_out_circular_buffer(a1 + 21, v17);
    v8 = (_QWORD *)a1[22];
    std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)v17);
  }
  else
  {
    *v7 = v5;
    v8 = v7 + 1;
    a1[22] = (uint64_t)v8;
  }
  a1[22] = (uint64_t)v8;
  return v5;
}

void sub_1BF80C7CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x1012C40EC159624);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::DescriptorPool::Tables::AllocateEmptyString(google::protobuf::DescriptorPool::Tables *this)
{
  _QWORD *v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _QWORD v14[5];

  v2 = (_QWORD *)operator new();
  v2[1] = 0;
  v2[2] = 0;
  *v2 = 0;
  v3 = *((_QWORD *)this + 23);
  v4 = (_QWORD *)*((_QWORD *)this + 22);
  if ((unint64_t)v4 >= v3)
  {
    v6 = *((_QWORD *)this + 21);
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v14[4] = (char *)this + 184;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)this + 184, v10);
    else
      v11 = 0;
    v12 = &v11[8 * v7];
    v14[0] = v11;
    v14[1] = v12;
    v14[3] = &v11[8 * v10];
    *(_QWORD *)v12 = v2;
    v14[2] = v12 + 8;
    std::vector<std::unique_ptr<std::string>>::__swap_out_circular_buffer((uint64_t *)this + 21, v14);
    v5 = (_QWORD *)*((_QWORD *)this + 22);
    std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
    *((_QWORD *)this + 22) = v5;
  }
  *((_QWORD *)this + 22) = v5;
  return v2;
}

void sub_1BF80C900(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(google::protobuf::DescriptorPool::Tables *this)
{
  _QWORD *v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  _QWORD v14[5];

  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = *((_QWORD *)this + 29);
  v4 = (_QWORD *)*((_QWORD *)this + 28);
  if ((unint64_t)v4 >= v3)
  {
    v6 = *((_QWORD *)this + 27);
    v7 = ((uint64_t)v4 - v6) >> 3;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - v6;
    v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1))
      v9 = v7 + 1;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v14[4] = (char *)this + 232;
    if (v10)
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)this + 232, v10);
    else
      v11 = 0;
    v12 = &v11[8 * v7];
    v14[0] = v11;
    v14[1] = v12;
    v14[3] = &v11[8 * v10];
    *(_QWORD *)v12 = v2;
    v14[2] = v12 + 8;
    std::vector<std::unique_ptr<std::once_flag>>::__swap_out_circular_buffer((uint64_t *)this + 27, v14);
    v5 = (_QWORD *)*((_QWORD *)this + 28);
    std::__split_buffer<std::unique_ptr<std::once_flag>>::~__split_buffer((uint64_t)v14);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
    *((_QWORD *)this + 28) = v5;
  }
  *((_QWORD *)this + 28) = v5;
  return v2;
}

void sub_1BF80CA10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::unique_ptr<std::once_flag>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

google::protobuf::FileDescriptorTables *google::protobuf::DescriptorPool::Tables::AllocateFileTables(google::protobuf::DescriptorPool::Tables *this)
{
  google::protobuf::FileDescriptorTables *v2;
  unint64_t v3;
  google::protobuf::FileDescriptorTables **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::FileDescriptorTables **v12;
  char *v13;
  google::protobuf::FileDescriptorTables *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  char *v21;

  v2 = (google::protobuf::FileDescriptorTables *)operator new();
  google::protobuf::FileDescriptorTables::FileDescriptorTables(v2);
  v4 = (google::protobuf::FileDescriptorTables **)*((_QWORD *)this + 31);
  v3 = *((_QWORD *)this + 32);
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)*((_QWORD *)this + 30);
    v7 = v4 - (google::protobuf::FileDescriptorTables **)v6;
    v8 = v7 + 1;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v9 = v3 - (_QWORD)v6;
    if (v9 >> 2 > v8)
      v8 = v9 >> 2;
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v8;
    v21 = (char *)this + 256;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)this + 256, v10);
      v6 = (_QWORD *)*((_QWORD *)this + 30);
      v4 = (google::protobuf::FileDescriptorTables **)*((_QWORD *)this + 31);
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::FileDescriptorTables **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)this + 15);
    *((_QWORD *)this + 30) = v12;
    *((_QWORD *)this + 31) = v5;
    v19 = v15;
    v16 = (char *)*((_QWORD *)this + 32);
    *((_QWORD *)this + 32) = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::FileDescriptorTables>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  *((_QWORD *)this + 31) = v5;
  return v2;
}

void sub_1BF80CB4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A0C40C644375CLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AllocateBytes(google::protobuf::DescriptorPool::Tables *this, int a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t *v14;
  _QWORD v15[5];

  if (!a2)
    return 0;
  v3 = operator new[]();
  v4 = *((_QWORD *)this + 20);
  v5 = (uint64_t *)*((_QWORD *)this + 19);
  if ((unint64_t)v5 >= v4)
  {
    v8 = *((_QWORD *)this + 18);
    v9 = ((uint64_t)v5 - v8) >> 3;
    if ((unint64_t)(v9 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = v4 - v8;
    v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1))
      v11 = v9 + 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v11;
    v15[4] = (char *)this + 160;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)this + 160, v12);
    else
      v13 = 0;
    v14 = (uint64_t *)&v13[8 * v9];
    v15[0] = v13;
    v15[1] = v14;
    v15[3] = &v13[8 * v12];
    *v14 = v3;
    v15[2] = v14 + 1;
    std::vector<std::unique_ptr<char []>>::__swap_out_circular_buffer((uint64_t *)this + 18, v15);
    v6 = (_QWORD *)*((_QWORD *)this + 19);
    std::__split_buffer<std::unique_ptr<char []>>::~__split_buffer((uint64_t)v15);
  }
  else
  {
    *v5 = v3;
    v6 = v5 + 1;
    *((_QWORD *)this + 19) = v6;
  }
  *((_QWORD *)this + 19) = v6;
  return *(v6 - 1);
}

void sub_1BF80CC74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::unique_ptr<char []>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorTables::BuildLocationsByPath(_QWORD *a1)
{
  int v1;
  int i;
  uint64_t v4;
  uint64_t v5;
  std::string __p;
  std::string *p_p;

  v1 = *(_DWORD *)(a1[1] + 32);
  if (v1 >= 1)
  {
    for (i = 0; i != v1; ++i)
    {
      v4 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(a1[1] + 24, i);
      v5 = *a1 + 280;
      google::protobuf::Join<google::protobuf::RepeatedField<int>>(",", (int *)(v4 + 24), &__p);
      p_p = &__p;
      *((_QWORD *)std::__hash_table<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v5, (unsigned __int8 *)&__p, (uint64_t)&std::piecewise_construct, (__int128 **)&p_p)+ 5) = v4;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1BF80CD54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::Join<google::protobuf::RepeatedField<int>>@<X0>(std::string::value_type *__s@<X1>, int *a2@<X0>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  return google::protobuf::Join<int const*>(*((std::string **)a2 + 1), (std::string *)(*((_QWORD *)a2 + 1) + 4 * *a2), __s, a3);
}

void sub_1BF80CDB0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptorTables::GetSourceLocation(uint64_t a1, std::string **a2, uint64_t a3)
{
  unint64_t *v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  std::string __p;
  _QWORD *v11;
  _QWORD v12[2];
  std::string *p_p;

  v12[0] = a1;
  v12[1] = a3;
  v5 = (unint64_t *)(a1 + 272);
  v11 = v12;
  v6 = atomic_load(v5);
  if (v6 != -1)
  {
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FileDescriptorTables::BuildLocationsByPath;
    __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v11;
    p_p = &__p;
    std::__call_once(v5, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *),std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *&&>>);
  }
  google::protobuf::Join<std::vector<int>>(",", a2, &__p);
  v7 = std::__hash_table<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>>>::find<std::string>((_QWORD *)(a1 + 280), (unsigned __int8 *)&__p);
  if (v7)
    v8 = *((_QWORD *)v7 + 5);
  else
    v8 = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v8;
}

void sub_1BF80CE80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::Join<std::vector<int>>@<X0>(std::string::value_type *__s@<X1>, std::string **a2@<X0>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  return google::protobuf::Join<int const*>(*a2, a2[1], __s, a3);
}

void sub_1BF80CED4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::DescriptorPool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  google::protobuf::DescriptorPool::Tables *v7;

  v6 = operator new();
  *(_QWORD *)v6 = 850045863;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_QWORD *)(v6 + 56) = 0;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = 0;
  v7 = (google::protobuf::DescriptorPool::Tables *)operator new();
  google::protobuf::DescriptorPool::Tables::Tables(v7);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 41) = 0;
  *(_QWORD *)(a1 + 48) = a1 + 56;
  return a1;
}

void sub_1BF80CFA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A0C407FE0BEA1);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::~DescriptorPool(google::protobuf::DescriptorPool *this)
{
  char *v2;

  v2 = *(char **)this;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)v2);
    MEMORY[0x1C3B8D890]();
  }
  std::__tree<std::string>::destroy((uint64_t)this + 48, *((char **)this + 7));
  std::unique_ptr<google::protobuf::DescriptorPool::Tables>::reset[abi:ne180100]((google::protobuf::DescriptorPool::Tables **)this + 4, 0);
}

uint64_t google::protobuf::DescriptorPool::internal_generated_pool(google::protobuf::DescriptorPool *this)
{
  unsigned __int8 v1;
  google::protobuf::_anonymous_namespace_ *v3;
  void (*v4)(const void *);
  const void *v5;

  if ((v1 & 1) == 0)
  {
    if ((_DWORD)v3)
    {
      google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::OnShutdownDelete<google::protobuf::DescriptorPool>(google::protobuf::DescriptorPool *)::{lambda(void const*)#1}::__invoke, v4, v5);
      google::protobuf::DescriptorPool::internal_generated_pool(void)::generated_pool = (uint64_t)v4;
    }
  }
  return google::protobuf::DescriptorPool::internal_generated_pool(void)::generated_pool;
}

void sub_1BF80D088(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

google::protobuf::_anonymous_namespace_ *google::protobuf::`anonymous namespace'::NewGeneratedPool(google::protobuf::_anonymous_namespace_ *this)
{
  google::protobuf::_anonymous_namespace_ *v1;
  uint64_t v2;

  v1 = (google::protobuf::_anonymous_namespace_ *)operator new();
  google::protobuf::DescriptorPool::DescriptorPool((uint64_t)v1, v2, 0);
  *((_WORD *)v1 + 20) = 256;
  return v1;
}

void sub_1BF80D0F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x1060C40AEB7C726);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::generated_pool(google::protobuf::DescriptorPool *this)
{
  uint64_t v1;

  v1 = google::protobuf::DescriptorPool::internal_generated_pool(this);
  google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
  return v1;
}

uint64_t google::protobuf::DescriptorPool::FindFileByName(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  _QWORD *v5;
  const char *v6;
  uint64_t **v7;
  uint64_t FileByName;
  uint64_t v9;
  _QWORD *v10;
  const char *v11;
  uint64_t **v12;
  const char *v14;

  v4 = *(std::mutex **)a1;
  if (*(_QWORD *)a1)
    std::mutex::lock(*(std::mutex **)a1);
  if (*(_QWORD *)(a1 + 8))
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear(*(_QWORD *)(a1 + 32) + 64);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear(*(_QWORD *)(a1 + 32) + 24);
  }
  v5 = (_QWORD *)(*(_QWORD *)(a1 + 32) + 304);
  if (*(char *)(a2 + 23) >= 0)
    v6 = (const char *)a2;
  else
    v6 = *(const char **)a2;
  v14 = v6;
  v7 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v5, &v14);
  if (!v7 || (FileByName = (uint64_t)v7[3]) == 0)
  {
    v9 = *(_QWORD *)(a1 + 24);
    if (!v9 || (FileByName = google::protobuf::DescriptorPool::FindFileByName(v9, a2)) == 0)
    {
      if (!google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase((google::protobuf::DescriptorPool *)a1, (unsigned __int8 *)a2)|| ((v10 = (_QWORD *)(*(_QWORD *)(a1 + 32) + 304), *(char *)(a2 + 23) >= 0)? (v11 = (const char *)a2): (v11 = *(const char **)a2), (v14 = v11, (v12 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v10, &v14)) == 0)|| (FileByName = (uint64_t)v12[3]) == 0))
      {
        FileByName = 0;
      }
    }
  }
  if (v4)
    std::mutex::unlock(v4);
  return FileByName;
}

void sub_1BF80D244(_Unwind_Exception *exception_object)
{
  std::mutex *v1;

  if (v1)
    std::mutex::unlock(v1);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(google::protobuf::DescriptorPool *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  unsigned __int8 *v6[27];

  if (!*((_QWORD *)a1 + 1)
    || std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(*((_QWORD *)a1 + 4) + 24), a2))
  {
    return 0;
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6);
  if ((*(unsigned int (**)(_QWORD, unsigned __int8 *, unsigned __int8 **))(**((_QWORD **)a1 + 1) + 16))(*((_QWORD *)a1 + 1), a2, v6)&& google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, v6))
  {
    v4 = 1;
  }
  else
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*((_QWORD *)a1 + 4) + 24, a2, (uint64_t)a2);
    v4 = 0;
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6);
  return v4;
}

void sub_1BF80D30C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Symbol::GetFile(google::protobuf::Symbol *this)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v3;

  switch(*(_DWORD *)this)
  {
    case 1:
    case 4:
    case 6:
      v1 = *((_QWORD *)this + 1);
      goto LABEL_7;
    case 2:
      v3 = (uint64_t *)(*((_QWORD *)this + 1) + 40);
      goto LABEL_8;
    case 3:
    case 7:
      v1 = *(_QWORD *)(*((_QWORD *)this + 1) + 16);
      goto LABEL_7;
    case 5:
      v1 = *(_QWORD *)(*((_QWORD *)this + 1) + 24);
LABEL_7:
      v3 = (uint64_t *)(v1 + 16);
      goto LABEL_8;
    case 8:
      v3 = (uint64_t *)((char *)this + 8);
LABEL_8:
      result = *v3;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t google::protobuf::DescriptorPool::FindMessageTypeByName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(_QWORD **)(a1 + 32), a1, a2) == 1)
    return v2;
  else
    return 0;
}

uint64_t google::protobuf::DescriptorPool::FindEnumTypeByName(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(_QWORD **)(a1 + 32), a1, a2) == 4)
    return v2;
  else
    return 0;
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByNumber(std::mutex **this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  std::mutex *v6;
  std::mutex *v7;
  uint64_t *v8;
  uint64_t ExtensionByNumber;
  char v10;
  std::mutex *v11;
  uint64_t *v12;
  google::protobuf::DescriptorPool *v13;
  std::mutex *v14;
  uint64_t *v15;
  const google::protobuf::Descriptor *v17;
  uint64_t v18;

  if (!*((_DWORD *)a2 + 30))
    return 0;
  v6 = *this;
  if (!*this)
    goto LABEL_10;
  std::mutex::lock(*this);
  v7 = this[4];
  v17 = a2;
  v18 = a3;
  v8 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)&v7[5].__m_.__opaque[16], (unint64_t *)&v17);
  if (&v7[5].__m_.__opaque[24] == (char *)v8)
  {
    std::mutex::unlock(v6);
  }
  else
  {
    ExtensionByNumber = v8[6];
    std::mutex::unlock(v6);
    if (ExtensionByNumber)
      return ExtensionByNumber;
  }
  v6 = *this;
  if (*this)
  {
    std::mutex::lock(*this);
    v10 = 0;
  }
  else
  {
LABEL_10:
    v10 = 1;
  }
  if (this[1])
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)&this[4][1]);
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear((uint64_t)&this[4]->__m_.__opaque[16]);
  }
  v11 = this[4];
  v17 = a2;
  v18 = a3;
  v12 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)&v11[5].__m_.__opaque[16], (unint64_t *)&v17);
  if (&v11[5].__m_.__opaque[24] == (char *)v12 || (ExtensionByNumber = v12[6]) == 0)
  {
    v13 = (google::protobuf::DescriptorPool *)this[3];
    if (!v13 || (ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(v13, a2, a3)) == 0)
    {
      if (!google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase((google::protobuf::DescriptorPool *)this, a2, a3)|| (v14 = this[4], v17 = a2, v18 = a3, v15 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)&v14[5].__m_.__opaque[16], (unint64_t *)&v17), &v14[5].__m_.__opaque[24] == (char *)v15)|| (ExtensionByNumber = v15[6]) == 0)
      {
        ExtensionByNumber = 0;
      }
    }
  }
  if ((v10 & 1) == 0)
    std::mutex::unlock(v6);
  return ExtensionByNumber;
}

void sub_1BF80D554(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase(google::protobuf::DescriptorPool *this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  _QWORD *v6;
  const char *v7;
  uint64_t **v8;
  _BOOL8 v9;
  _BYTE v11[176];
  uint64_t v12;
  const char *v13;

  if (!*((_QWORD *)this + 1))
    return 0;
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v11);
  v9 = ((*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _BYTE *))(**((_QWORD **)this + 1) + 32))(*((_QWORD *)this + 1), *((_QWORD *)a2 + 1), a3, v11) & 1) != 0&& ((v6 = (_QWORD *)(*((_QWORD *)this + 4) + 304), *(char *)(v12 + 23) >= 0)? (v7 = (const char *)v12): (v7 = *(const char **)v12), (v13 = v7, (v8 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v6, &v13)) == 0)|| !v8[3])&& google::protobuf::DescriptorPool::BuildFileFromDatabase(this, (const google::protobuf::FileDescriptorProto *)v11) != 0;
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v11);
  return v9;
}

void sub_1BF80D63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&a9);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByPrintableName(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v19;
  _QWORD v20[2];

  if (!*(_DWORD *)(a2 + 120))
    return 0;
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(_QWORD **)(a1 + 32), a1, a3) == 2)
  {
    result = v6;
    if (*(_BYTE *)(v6 + 66))
    {
      if (*(_QWORD *)(v6 + 80) == a2)
        return result;
    }
  }
  if (!*(_BYTE *)(*(_QWORD *)(a2 + 32) + 72))
    return 0;
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(_QWORD **)(a1 + 32), a1, a3) != 1
    || v8 == 0)
  {
    return 0;
  }
  v10 = v8;
  v11 = *(_DWORD *)(v8 + 124);
  if (v11 < 1)
    return 0;
  v12 = 0;
  v13 = 152 * v11;
  while (1)
  {
    v14 = *(_QWORD *)(v10 + 80);
    if (*(_QWORD *)(v14 + v12 + 80) == a2)
    {
      v15 = *(unint64_t **)(v14 + v12 + 48);
      if (v15)
      {
        v17 = v14 + v12;
        v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v16 = atomic_load(v15);
        if (v16 != -1)
        {
          v20[0] = &v18;
          v20[1] = &v17;
          v19 = v20;
          std::__call_once(v15, &v19, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if (*(_DWORD *)(v14 + v12 + 56) == 11
        && *(_DWORD *)(v14 + v12 + 60) == 1
        && google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v14 + v12)) == v10)
      {
        break;
      }
    }
    v12 += 152;
    if (v13 == v12)
      return 0;
  }
  return v14 + v12;
}

uint64_t google::protobuf::FieldDescriptor::type(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::FieldDescriptor *v5;
  uint64_t (*v6)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v7;
  _QWORD v8[2];

  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v5 = this;
    v6 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v8[0] = &v6;
      v8[1] = &v5;
      v7 = v8;
      std::__call_once(v2, &v7, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((unsigned int *)this + 14);
}

uint64_t google::protobuf::FieldDescriptor::message_type(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::FieldDescriptor *v5;
  _QWORD *v6;
  _QWORD v7[2];

  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v5 = this;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v7[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v7[1] = &v5;
      v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((_QWORD *)this + 13);
}

uint64_t google::protobuf::Descriptor::FindFieldByNumber(google::protobuf::Descriptor *this, int a2)
{
  int8x8_t *v2;
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v12;

  v2 = *(int8x8_t **)(*((_QWORD *)this + 2) + 144);
  v3 = v2[20];
  if (!*(_QWORD *)&v3)
    return 0;
  v4 = (16777619 * a2) ^ (16777499 * (_QWORD)this);
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    v6 = (16777619 * a2) ^ (16777499 * (_QWORD)this);
    if (v4 >= *(_QWORD *)&v3)
      v6 = v4 % *(_QWORD *)&v3;
  }
  else
  {
    v6 = (*(_QWORD *)&v3 - 1) & v4;
  }
  v7 = *(uint64_t ***)(*(_QWORD *)&v2[19] + 8 * v6);
  if (!v7)
    return 0;
  v8 = *v7;
  if (!v8)
    return 0;
  while (1)
  {
    v9 = v8[1];
    if (v4 == v9)
      break;
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(_QWORD *)&v3)
        v9 %= *(_QWORD *)&v3;
    }
    else
    {
      v9 &= *(_QWORD *)&v3 - 1;
    }
    if (v9 != v6)
      return 0;
LABEL_20:
    v8 = (uint64_t *)*v8;
    if (!v8)
      return 0;
  }
  if ((google::protobuf::Descriptor *)v8[2] != this || *((_DWORD *)v8 + 6) != a2)
    goto LABEL_20;
  v12 = v8[4];
  if (!v12)
    return 0;
  if (*(_BYTE *)(v12 + 66))
    return 0;
  else
    return v8[4];
}

uint64_t *google::protobuf::Descriptor::FindFieldByLowercaseName(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *result;
  uint64_t v8;
  uint64_t (*v9)(google::protobuf::FileDescriptorTables *__hidden, const google::protobuf::FileDescriptorTables *);
  uint64_t (***v10)(google::protobuf::FileDescriptorTables *__hidden, const google::protobuf::FileDescriptorTables *);
  uint64_t (**v11)(google::protobuf::FileDescriptorTables *__hidden, const google::protobuf::FileDescriptorTables *);
  uint64_t *v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 144);
  v8 = v4;
  v9 = google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitStatic;
  v5 = atomic_load((unint64_t *)(v4 + 88));
  if (v5 != -1)
  {
    v11 = &v9;
    v12 = &v8;
    v10 = &v11;
    std::__call_once((std::once_flag::_State_type *)(v4 + 88), &v10, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FileDescriptorTables const*),google::protobuf::FileDescriptorTables const*&&>>);
  }
  if (*(char *)(a2 + 23) >= 0)
    v6 = (uint64_t *)a2;
  else
    v6 = *(uint64_t **)a2;
  v11 = (uint64_t (**)(google::protobuf::FileDescriptorTables *__hidden, const google::protobuf::FileDescriptorTables *))a1;
  v12 = v6;
  if (result)
  {
    if (*((_BYTE *)result + 66))
      return 0;
  }
  return result;
}

uint64_t google::protobuf::Descriptor::FindFieldByName(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  const char *v4;
  char v5;
  uint64_t v6;
  unsigned __int8 *v7;
  int v8;
  int8x8_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t **v14;
  uint64_t *v15;
  unint64_t v16;

  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0)
    v4 = (const char *)a2;
  else
    v4 = *(const char **)a2;
  v5 = *v4;
  if (*v4)
  {
    v6 = 0;
    v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      v6 = 5 * v6 + v5;
      v8 = *v7++;
      v5 = v8;
    }
    while (v8);
  }
  else
  {
    v6 = 0;
  }
  v9 = (int8x8_t)v3[1];
  if (!*(_QWORD *)&v9)
    return 0;
  v10 = v6 ^ (16777619 * a1);
  v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    v13 = v6 ^ (16777619 * a1);
    if (v10 >= *(_QWORD *)&v9)
      v13 = v10 % *(_QWORD *)&v9;
  }
  else
  {
    v13 = (*(_QWORD *)&v9 - 1) & v10;
  }
  v14 = *(uint64_t ***)(*v3 + 8 * v13);
  if (!v14)
    return 0;
  v15 = *v14;
  if (!*v14)
    return 0;
  while (1)
  {
    v16 = v15[1];
    if (v10 == v16)
      break;
    if (v12 > 1)
    {
      if (v16 >= *(_QWORD *)&v9)
        v16 %= *(_QWORD *)&v9;
    }
    else
    {
      v16 &= *(_QWORD *)&v9 - 1;
    }
    if (v16 != v13)
      return 0;
LABEL_25:
    v15 = (uint64_t *)*v15;
    if (!v15)
      return 0;
  }
  if (v15[2] != a1 || strcmp((const char *)v15[3], v4))
    goto LABEL_25;
  if (*((_DWORD *)v15 + 8) != 2)
    return 0;
  if (*(_BYTE *)(v15[5] + 66))
    return 0;
  else
    return v15[5];
}

uint64_t google::protobuf::Descriptor::FindOneofByName(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  const char *v4;
  char v5;
  uint64_t v6;
  unsigned __int8 *v7;
  int v8;
  int8x8_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t **v14;
  uint64_t *v15;
  unint64_t v16;

  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0)
    v4 = (const char *)a2;
  else
    v4 = *(const char **)a2;
  v5 = *v4;
  if (*v4)
  {
    v6 = 0;
    v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      v6 = 5 * v6 + v5;
      v8 = *v7++;
      v5 = v8;
    }
    while (v8);
  }
  else
  {
    v6 = 0;
  }
  v9 = (int8x8_t)v3[1];
  if (!*(_QWORD *)&v9)
    return 0;
  v10 = v6 ^ (16777619 * a1);
  v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    v13 = v6 ^ (16777619 * a1);
    if (v10 >= *(_QWORD *)&v9)
      v13 = v10 % *(_QWORD *)&v9;
  }
  else
  {
    v13 = (*(_QWORD *)&v9 - 1) & v10;
  }
  v14 = *(uint64_t ***)(*v3 + 8 * v13);
  if (!v14)
    return 0;
  v15 = *v14;
  if (!*v14)
    return 0;
  while (1)
  {
    v16 = v15[1];
    if (v10 == v16)
      break;
    if (v12 > 1)
    {
      if (v16 >= *(_QWORD *)&v9)
        v16 %= *(_QWORD *)&v9;
    }
    else
    {
      v16 &= *(_QWORD *)&v9 - 1;
    }
    if (v16 != v13)
      return 0;
LABEL_25:
    v15 = (uint64_t *)*v15;
    if (!v15)
      return 0;
  }
  if (v15[2] != a1 || strcmp((const char *)v15[3], v4))
    goto LABEL_25;
  if (*((_DWORD *)v15 + 8) == 3)
    return v15[5];
  else
    return 0;
}

uint64_t google::protobuf::EnumDescriptor::FindValueByName(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  const char *v4;
  char v5;
  uint64_t v6;
  unsigned __int8 *v7;
  int v8;
  int8x8_t v9;
  unint64_t v10;
  uint8x8_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t **v14;
  uint64_t *v15;
  unint64_t v16;

  v3 = *(_QWORD **)(*(_QWORD *)(a1 + 16) + 144);
  if (*(char *)(a2 + 23) >= 0)
    v4 = (const char *)a2;
  else
    v4 = *(const char **)a2;
  v5 = *v4;
  if (*v4)
  {
    v6 = 0;
    v7 = (unsigned __int8 *)(v4 + 1);
    do
    {
      v6 = 5 * v6 + v5;
      v8 = *v7++;
      v5 = v8;
    }
    while (v8);
  }
  else
  {
    v6 = 0;
  }
  v9 = (int8x8_t)v3[1];
  if (!*(_QWORD *)&v9)
    return 0;
  v10 = v6 ^ (16777619 * a1);
  v11 = (uint8x8_t)vcnt_s8(v9);
  v11.i16[0] = vaddlv_u8(v11);
  v12 = v11.u32[0];
  if (v11.u32[0] > 1uLL)
  {
    v13 = v6 ^ (16777619 * a1);
    if (v10 >= *(_QWORD *)&v9)
      v13 = v10 % *(_QWORD *)&v9;
  }
  else
  {
    v13 = (*(_QWORD *)&v9 - 1) & v10;
  }
  v14 = *(uint64_t ***)(*v3 + 8 * v13);
  if (!v14)
    return 0;
  v15 = *v14;
  if (!*v14)
    return 0;
  while (1)
  {
    v16 = v15[1];
    if (v10 == v16)
      break;
    if (v12 > 1)
    {
      if (v16 >= *(_QWORD *)&v9)
        v16 %= *(_QWORD *)&v9;
    }
    else
    {
      v16 &= *(_QWORD *)&v9 - 1;
    }
    if (v16 != v13)
      return 0;
LABEL_25:
    v15 = (uint64_t *)*v15;
    if (!v15)
      return 0;
  }
  if (v15[2] != a1 || strcmp((const char *)v15[3], v4))
    goto LABEL_25;
  if (*((_DWORD *)v15 + 8) == 5)
    return v15[5];
  else
    return 0;
}

uint64_t google::protobuf::EnumDescriptor::FindValueByNumber(google::protobuf::EnumDescriptor *this, unsigned int a2)
{
  _QWORD *v2;
  _QWORD v4[2];

  v2 = (_QWORD *)(*(_QWORD *)(*((_QWORD *)this + 2) + 144) + 192);
  v4[0] = this;
  v4[1] = a2;
}

uint64_t google::protobuf::EnumDescriptor::FindValueByNumberCreatingIfUnknown(google::protobuf::EnumDescriptor *this, uint64_t a2)
{
  return google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(*(std::mutex **)(*((_QWORD *)this + 2) + 144), (const void ***)this, a2);
}

uint64_t google::protobuf::FileDescriptorTables::FindEnumValueByNumberCreatingIfUnknown(std::mutex *this, const void ***a2, uint64_t a3)
{
  std::string::size_type v6;
  uint64_t Bytes;
  std::mutex *v8;
  char *v9;
  const void **v10;
  google::protobuf::DescriptorPool *v11;
  uint64_t v12;
  google::protobuf::DescriptorPool::Tables *v13;
  const void **v14;
  size_t v15;
  std::string *v16;
  const void *v17;
  std::string *v18;
  std::string::size_type size;
  std::string *v20;
  std::string *String;
  std::string v23;
  std::string __p;
  uint64_t v25;
  std::string v26;

  v6 = a3;
  v26.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
  v26.__r_.__value_.__l.__size_ = a3;
  if (!Bytes)
  {
    v8 = this + 5;
    std::mutex::lock(this + 5);
    v9 = &this[3].__m_.__opaque[32];
    v26.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    v26.__r_.__value_.__l.__size_ = v6;
    std::mutex::unlock(v8);
    if (!Bytes)
    {
      std::mutex::lock(v8);
      v26.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      v26.__r_.__value_.__l.__size_ = v6;
      if (!Bytes)
      {
        v10 = *a2;
        if (*((char *)*a2 + 23) < 0)
          v10 = (const void **)*v10;
        v11 = (google::protobuf::DescriptorPool *)google::protobuf::StringPrintf((google::protobuf *)"UNKNOWN_ENUM_VALUE_%s_%d", &v26, v10, a3);
        v12 = google::protobuf::DescriptorPool::internal_generated_pool(v11);
        google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
        v13 = *(google::protobuf::DescriptorPool::Tables **)(v12 + 32);
        Bytes = google::protobuf::DescriptorPool::Tables::AllocateBytes(v13, 40);
        v25 = Bytes;
        *(_QWORD *)Bytes = google::protobuf::DescriptorPool::Tables::AllocateString((uint64_t *)v13, (uint64_t)&v26);
        v14 = a2[1];
        if (*((char *)v14 + 23) >= 0)
          v15 = *((unsigned __int8 *)v14 + 23);
        else
          v15 = (size_t)v14[1];
        v16 = &v23;
        std::string::basic_string[abi:ne180100]((uint64_t)&v23, v15 + 1);
        if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v16 = (std::string *)v23.__r_.__value_.__r.__words[0];
        if (v15)
        {
          if (*((char *)v14 + 23) >= 0)
            v17 = v14;
          else
            v17 = *v14;
          memmove(v16, v17, v15);
        }
        *(_WORD *)((char *)&v16->__r_.__value_.__l.__data_ + v15) = 46;
        if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v18 = &v26;
        else
          v18 = (std::string *)v26.__r_.__value_.__r.__words[0];
        if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
        else
          size = v26.__r_.__value_.__l.__size_;
        v20 = std::string::append(&v23, (const std::string::value_type *)v18, size);
        __p = *v20;
        v20->__r_.__value_.__l.__size_ = 0;
        v20->__r_.__value_.__r.__words[2] = 0;
        v20->__r_.__value_.__r.__words[0] = 0;
        String = google::protobuf::DescriptorPool::Tables::AllocateString((uint64_t *)v13, (uint64_t)&__p);
        *(_QWORD *)(Bytes + 8) = String;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v23.__r_.__value_.__l.__data_);
        *(_DWORD *)(Bytes + 16) = a3;
        *(_QWORD *)(Bytes + 24) = a2;
        *(_QWORD *)(Bytes + 32) = google::protobuf::EnumValueOptions::default_instance((google::protobuf::EnumValueOptions *)String);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        __p.__r_.__value_.__l.__size_ = v6;
        if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v26.__r_.__value_.__l.__data_);
      }
      std::mutex::unlock(v8);
    }
  }
  return Bytes;
}

void sub_1BF80E090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  std::mutex *v30;

  if (a30 < 0)
    operator delete(__p);
  std::mutex::unlock(v30);
  _Unwind_Resume(a1);
}

void google::protobuf::Descriptor::ExtensionRange::CopyTo(google::protobuf::Descriptor::ExtensionRange *this, google::protobuf::DescriptorProto_ExtensionRange *a2)
{
  int v4;
  int v5;
  int v6;
  void *v7;
  signed int **v8;
  signed int **v9;
  uint64_t v10;
  google::protobuf::Arena *v11;

  v4 = *(_DWORD *)this;
  v5 = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v5 | 2;
  v6 = *((_DWORD *)this + 1);
  *((_DWORD *)a2 + 4) = v5 | 6;
  *((_DWORD *)a2 + 8) = v4;
  *((_DWORD *)a2 + 9) = v6;
  v7 = (void *)*((_QWORD *)this + 1);
  if (v7 != google::protobuf::ExtensionRangeOptions::default_instance(this))
  {
    v8 = (signed int **)*((_QWORD *)this + 1);
    *((_DWORD *)a2 + 4) |= 1u;
    v9 = (signed int **)*((_QWORD *)a2 + 3);
    if (!v9)
    {
      v10 = *((_QWORD *)a2 + 1);
      v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
      if ((v10 & 1) != 0)
        v11 = (google::protobuf::Arena *)*((_QWORD *)v11 + 3);
      v9 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v11);
      *((_QWORD *)a2 + 3) = v9;
    }
    google::protobuf::ExtensionRangeOptions::CopyFrom(v9, v8);
  }
}

_DWORD *google::protobuf::Descriptor::FindExtensionRangeContainingNumber(google::protobuf::Descriptor *this, int a2)
{
  uint64_t v2;
  _DWORD *result;

  v2 = *((unsigned int *)this + 30);
  if ((int)v2 < 1)
    return 0;
  for (result = (_DWORD *)*((_QWORD *)this + 9); *result > a2 || result[1] <= a2; result += 4)
  {
    if (!--v2)
      return 0;
  }
  return result;
}

_DWORD *google::protobuf::Descriptor::FindReservedRangeContainingNumber(google::protobuf::Descriptor *this, int a2)
{
  uint64_t v2;
  _DWORD *result;

  v2 = *((unsigned int *)this + 32);
  if ((int)v2 < 1)
    return 0;
  for (result = (_DWORD *)*((_QWORD *)this + 11); *result > a2 || result[1] <= a2; result += 2)
  {
    if (!--v2)
      return 0;
  }
  return result;
}

google::protobuf::SourceCodeInfo *google::protobuf::DescriptorPool::BuildFileFromDatabase(google::protobuf::DescriptorPool *this, unsigned __int8 **a2)
{
  google::protobuf::SourceCodeInfo *v4;
  void *v6[25];

  if (std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>((_QWORD *)(*((_QWORD *)this + 4) + 24), a2[22]))
  {
    return 0;
  }
  google::protobuf::DescriptorBuilder::DescriptorBuilder((uint64_t)v6, (uint64_t)this, *((_QWORD *)this + 4), *((_QWORD *)this + 2));
  v4 = google::protobuf::DescriptorBuilder::BuildFile((google::protobuf::DescriptorBuilder *)v6, (const std::string **)a2);
  google::protobuf::DescriptorBuilder::~DescriptorBuilder(v6);
  if (!v4)
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(*((_QWORD *)this + 4) + 24, a2[22], (uint64_t)a2[22]);
  return v4;
}

void sub_1BF80E2A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::DescriptorBuilder::~DescriptorBuilder((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(uint64_t a1, uint64_t a2)
{
  std::string::size_type v4;
  std::string::size_type v5;
  _QWORD *v6;
  std::string *v7;
  uint64_t **v8;
  uint64_t v9;
  uint64_t IsSubSymbolOfBuiltType;
  std::string v12;
  std::string __str;
  char v14;

  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __str = *(std::string *)a2;
  v4 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v4 == -1)
  {
LABEL_14:
    v9 = *(_QWORD *)(a1 + 24);
    if (v9)
      IsSubSymbolOfBuiltType = google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(v9, a2);
    else
      IsSubSymbolOfBuiltType = 0;
  }
  else
  {
    v5 = v4;
    while (1)
    {
      std::string::basic_string(&v12, &__str, 0, v5, (std::allocator<char> *)&v14);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
      __str = v12;
      v6 = (_QWORD *)(*(_QWORD *)(a1 + 32) + 264);
      v7 = (v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
         ? &__str
         : (std::string *)v12.__r_.__value_.__r.__words[0];
      v12.__r_.__value_.__r.__words[0] = (std::string::size_type)v7;
      v8 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v6, (const char **)&v12.__r_.__value_.__l.__data_);
      if (v8)
      {
        if ((*((_DWORD *)v8 + 6) | 8) != 8)
          break;
      }
      v5 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v5 == -1)
        goto LABEL_14;
    }
    IsSubSymbolOfBuiltType = 1;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return IsSubSymbolOfBuiltType;
}

void sub_1BF80E3EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::is_map_message_type(google::protobuf::FieldDescriptor *this)
{
  return *(unsigned __int8 *)(*(_QWORD *)(*((_QWORD *)this + 13) + 32) + 75);
}

void google::protobuf::FieldDescriptor::DefaultValueAsString(google::protobuf::FieldDescriptor *this@<X0>, char *a2@<X1>, char *a3@<X2>, std::string *a4@<X8>)
{
  int v4;
  std::string *v7;
  std::string *v8;
  unint64_t *v9;
  unint64_t v10;
  int v11;
  google::protobuf *v12;
  uint64_t v13;
  google::protobuf *v14;
  google::protobuf *v15;
  char *v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;
  std::string::size_type v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  std::string *v26;
  unint64_t *v27;
  unint64_t v28;
  __int128 *v29;
  std::string v30;
  google::protobuf::FieldDescriptor *v31;
  uint64_t (*v32)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  std::string v33;
  uint64_t v34;

  v4 = (int)a2;
  v34 = *MEMORY[0x1E0C80C00];
  if (!*((_BYTE *)this + 64))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 1943);
    v7 = google::protobuf::internal::LogMessage::operator<<(&v33, "CHECK failed: has_default_value(): ");
    v8 = google::protobuf::internal::LogMessage::operator<<(v7, "No default value");
    google::protobuf::internal::LogFinisher::operator=((int)&v30, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v33.__r_.__value_.__l.__data_);
  }
  v9 = (unint64_t *)*((_QWORD *)this + 6);
  if (v9)
  {
    v31 = this;
    v32 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v10 = atomic_load(v9);
    if (v10 != -1)
    {
      v33.__r_.__value_.__r.__words[0] = (std::string::size_type)&v32;
      v33.__r_.__value_.__l.__size_ = (std::string::size_type)&v31;
      v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v33;
      std::__call_once(v9, &v30, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v11 = *((_DWORD *)this + 14);
  switch(v11)
  {
    case 1:
      google::protobuf::SimpleDtoa(*((double *)this + 18), a2, a4);
      break;
    case 2:
      google::protobuf::SimpleFtoa(*((float *)this + 36), a2, a4);
      break;
    case 3:
    case 16:
    case 18:
      v13 = *((_QWORD *)this + 18);
      v33.__r_.__value_.__r.__words[0] = (std::string::size_type)&v33.__r_.__value_.__r.__words[2];
      v33.__r_.__value_.__l.__size_ = google::protobuf::FastInt64ToBufferLeft(v13, &v33.__r_.__value_.__s.__data_[16], a3)- (_BYTE *)&v33.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](a4, v33.__r_.__value_.__l.__data_, v33.__r_.__value_.__l.__size_);
      break;
    case 4:
    case 6:
      v15 = (google::protobuf *)*((_QWORD *)this + 18);
      v33.__r_.__value_.__r.__words[0] = (std::string::size_type)&v33.__r_.__value_.__r.__words[2];
      v33.__r_.__value_.__l.__size_ = google::protobuf::FastUInt64ToBufferLeft(v15, &v33.__r_.__value_.__s.__data_[16], a3)- (_BYTE *)&v33.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](a4, v33.__r_.__value_.__l.__data_, v33.__r_.__value_.__l.__size_);
      break;
    case 5:
    case 15:
    case 17:
      v12 = (google::protobuf *)*((unsigned int *)this + 36);
      v33.__r_.__value_.__r.__words[0] = (std::string::size_type)&v33.__r_.__value_.__r.__words[2];
      v33.__r_.__value_.__l.__size_ = google::protobuf::FastInt32ToBufferLeft(v12, &v33.__r_.__value_.__s.__data_[16], a3)- (_BYTE *)&v33.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](a4, v33.__r_.__value_.__l.__data_, v33.__r_.__value_.__l.__size_);
      break;
    case 7:
    case 13:
      v14 = (google::protobuf *)*((unsigned int *)this + 36);
      v33.__r_.__value_.__r.__words[0] = (std::string::size_type)&v33.__r_.__value_.__r.__words[2];
      v33.__r_.__value_.__l.__size_ = google::protobuf::FastUInt32ToBufferLeft(v14, &v33.__r_.__value_.__s.__data_[16], a3)- (_BYTE *)&v33.__r_.__value_.__r.__words[2];
      std::string::basic_string[abi:ne180100](a4, v33.__r_.__value_.__l.__data_, v33.__r_.__value_.__l.__size_);
      break;
    case 8:
      if (*((_BYTE *)this + 144))
        v16 = "true";
      else
        v16 = "false";
      std::string::basic_string[abi:ne180100]<0>(a4, v16);
      break;
    case 9:
    case 12:
      if (v4)
      {
        google::protobuf::CEscape(*((uint64_t **)this + 18), a3, &v30);
        v21 = std::string::insert(&v30, 0, "\"");
        v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        v33.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        v23 = std::string::append(&v33, "\"");
        v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
        a4->__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
        *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v24;
        v23->__r_.__value_.__l.__size_ = 0;
        v23->__r_.__value_.__r.__words[2] = 0;
        v23->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v33.__r_.__value_.__l.__data_);
        if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v30.__r_.__value_.__l.__data_);
      }
      else
      {
        v27 = (unint64_t *)*((_QWORD *)this + 6);
        if (v27)
        {
          v31 = this;
          v32 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v28 = atomic_load(v27);
          if (v28 != -1)
          {
            v33.__r_.__value_.__r.__words[0] = (std::string::size_type)&v32;
            v33.__r_.__value_.__l.__size_ = (std::string::size_type)&v31;
            v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v33;
            std::__call_once(v27, &v30, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          v11 = *((_DWORD *)this + 14);
        }
        v29 = (__int128 *)*((_QWORD *)this + 18);
        if (v11 == 12)
        {
          google::protobuf::CEscape((uint64_t *)v29, a3, a4);
        }
        else
        {
          if ((*((char *)v29 + 23) & 0x80000000) == 0)
          {
            v19 = *v29;
            v20 = *((_QWORD *)v29 + 2);
            goto LABEL_35;
          }
          std::string::__init_copy_ctor_external(a4, *(const std::string::value_type **)v29, *((_QWORD *)v29 + 1));
        }
      }
      break;
    case 10:
    case 11:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 1981);
      v25 = google::protobuf::internal::LogMessage::operator<<(&v33, "Messages can't have default values!");
      google::protobuf::internal::LogFinisher::operator=((int)&v30, (const char **)&v25->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v33.__r_.__value_.__l.__data_);
      goto LABEL_25;
    case 14:
      v17 = google::protobuf::FieldDescriptor::default_value_enum(this);
      v18 = *(__int128 **)v17;
      if (*(char *)(*(_QWORD *)v17 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(a4, *(const std::string::value_type **)v18, *((_QWORD *)v18 + 1));
      }
      else
      {
        v19 = *v18;
        v20 = *((_QWORD *)v18 + 2);
LABEL_35:
        a4->__r_.__value_.__r.__words[2] = v20;
        *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v19;
      }
      break;
    default:
LABEL_25:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 1984);
      v26 = google::protobuf::internal::LogMessage::operator<<(&v33, "Can't get here: failed to get default value as string");
      google::protobuf::internal::LogFinisher::operator=((int)&v30, (const char **)&v26->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v33.__r_.__value_.__l.__data_);
      std::string::basic_string[abi:ne180100]<0>(a4, "");
      break;
  }
}

void sub_1BF80E82C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::default_value_enum(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::FieldDescriptor *v5;
  _QWORD *v6;
  _QWORD v7[2];

  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v5 = this;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v7[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v7[1] = &v5;
      v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((_QWORD *)this + 18);
}

void google::protobuf::FileDescriptor::CopyTo(google::protobuf::FileDescriptor *this, google::protobuf::FileDescriptorProto *a2)
{
  __int128 *v4;
  std::string **v5;
  uint64_t v6;
  google::protobuf::Arena *v7;
  google::protobuf::FileOptions *v8;
  uint64_t v9;
  std::string **v10;
  uint64_t v11;
  google::protobuf::Arena *v12;
  char *v13;
  int v14;
  std::string **v15;
  uint64_t v16;
  int *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  int v31;
  google::protobuf::DescriptorProto *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  int v40;
  google::protobuf::EnumDescriptorProto *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  int v49;
  google::protobuf::ServiceDescriptorProto *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  int v58;
  google::protobuf::FieldDescriptorProto *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  signed int **v63;
  uint64_t v64;
  google::protobuf::Arena *v65;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = (std::string **)((char *)a2 + 176);
  v6 = *((_QWORD *)a2 + 1);
  v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) != 0)
    v7 = (google::protobuf::Arena *)*((_QWORD *)v7 + 3);
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
  else
    v8 = (google::protobuf::FileOptions *)std::string::operator=(*v5, (const std::string *)v4);
  v9 = *((_QWORD *)this + 1);
  if (*(char *)(v9 + 23) < 0)
  {
    if (!*(_QWORD *)(v9 + 8))
      goto LABEL_15;
  }
  else if (!*(_BYTE *)(v9 + 23))
  {
    goto LABEL_15;
  }
  *((_DWORD *)a2 + 4) |= 2u;
  v10 = (std::string **)((char *)a2 + 184);
  v11 = *((_QWORD *)a2 + 1);
  v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
  if ((v11 & 1) != 0)
    v12 = (google::protobuf::Arena *)*((_QWORD *)v12 + 3);
  if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v10, v12, (__int128 *)v9);
  else
    v8 = (google::protobuf::FileOptions *)std::string::operator=(*v10, (const std::string *)v9);
LABEL_15:
  if (*((_DWORD *)this + 15) == 3)
  {
    v13 = (char *)google::protobuf::FileDescriptor::SyntaxName(3);
    google::protobuf::FileDescriptorProto::set_syntax(a2, v13);
  }
  if (*((int *)this + 8) >= 1)
  {
    v14 = 0;
    do
    {
      v15 = (std::string **)google::protobuf::FileDescriptor::dependency(this, v14);
      v8 = (google::protobuf::FileOptions *)google::protobuf::FileDescriptorProto::add_dependency((uint64_t)a2, *v15);
      ++v14;
    }
    while (v14 < *((_DWORD *)this + 8));
  }
  if (*((int *)this + 9) >= 1)
  {
    v16 = 0;
    v17 = (int *)((char *)a2 + 144);
    do
    {
      v18 = *(_DWORD *)(*((_QWORD *)this + 11) + 4 * v16);
      v19 = *((_DWORD *)a2 + 36);
      if (v19 == *((_DWORD *)a2 + 37))
        google::protobuf::RepeatedField<int>::Reserve((int *)a2 + 36, v19 + 1);
      v8 = (google::protobuf::FileOptions *)google::protobuf::RepeatedField<int>::elements((uint64_t)a2 + 144);
      v20 = *v17;
      *v17 = v20 + 1;
      *((_DWORD *)v8 + v20) = v18;
      ++v16;
    }
    while (v16 < *((int *)this + 9));
  }
  if (*((int *)this + 10) >= 1)
  {
    v21 = 0;
    v22 = (int *)((char *)a2 + 160);
    do
    {
      v23 = *(_DWORD *)(*((_QWORD *)this + 12) + 4 * v21);
      v24 = *((_DWORD *)a2 + 40);
      if (v24 == *((_DWORD *)a2 + 41))
        google::protobuf::RepeatedField<int>::Reserve((int *)a2 + 40, v24 + 1);
      v8 = (google::protobuf::FileOptions *)google::protobuf::RepeatedField<int>::elements((uint64_t)a2 + 160);
      v25 = *v22;
      *v22 = v25 + 1;
      *((_DWORD *)v8 + v25) = v23;
      ++v21;
    }
    while (v21 < *((int *)this + 10));
  }
  if (*((int *)this + 11) >= 1)
  {
    v26 = 0;
    v27 = 0;
    while (1)
    {
      v28 = *((_QWORD *)this + 13);
      v29 = (int *)*((_QWORD *)a2 + 8);
      if (!v29)
        break;
      v30 = *((int *)a2 + 14);
      v31 = *v29;
      if ((int)v30 >= *v29)
      {
        if (v31 == *((_DWORD *)a2 + 15))
        {
LABEL_37:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 12, v31 + 1);
          v29 = (int *)*((_QWORD *)a2 + 8);
          v31 = *v29;
        }
        *v29 = v31 + 1;
        v32 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                             + 6));
        v33 = *((_QWORD *)a2 + 8);
        v34 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v34 + 1;
        *(_QWORD *)(v33 + 8 * v34 + 8) = v32;
        goto LABEL_39;
      }
      *((_DWORD *)a2 + 14) = v30 + 1;
      v32 = *(google::protobuf::DescriptorProto **)&v29[2 * v30 + 2];
LABEL_39:
      google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v28 + v26), v32);
      ++v27;
      v26 += 144;
      if (v27 >= *((int *)this + 11))
        goto LABEL_40;
    }
    v31 = *((_DWORD *)a2 + 15);
    goto LABEL_37;
  }
LABEL_40:
  if (*((int *)this + 12) >= 1)
  {
    v35 = 0;
    v36 = 0;
    while (1)
    {
      v37 = *((_QWORD *)this + 14);
      v38 = (int *)*((_QWORD *)a2 + 11);
      if (!v38)
        break;
      v39 = *((int *)a2 + 20);
      v40 = *v38;
      if ((int)v39 >= *v38)
      {
        if (v40 == *((_DWORD *)a2 + 21))
        {
LABEL_47:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 18, v40 + 1);
          v38 = (int *)*((_QWORD *)a2 + 11);
          v40 = *v38;
        }
        *v38 = v40 + 1;
        v41 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                                 + 9));
        v42 = *((_QWORD *)a2 + 11);
        v43 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 20) = v43 + 1;
        *(_QWORD *)(v42 + 8 * v43 + 8) = v41;
        goto LABEL_49;
      }
      *((_DWORD *)a2 + 20) = v39 + 1;
      v41 = *(google::protobuf::EnumDescriptorProto **)&v38[2 * v39 + 2];
LABEL_49:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v37 + v35), v41);
      ++v36;
      v35 += 80;
      if (v36 >= *((int *)this + 12))
        goto LABEL_50;
    }
    v40 = *((_DWORD *)a2 + 21);
    goto LABEL_47;
  }
LABEL_50:
  if (*((int *)this + 13) >= 1)
  {
    v44 = 0;
    v45 = 0;
    while (1)
    {
      v46 = *((_QWORD *)this + 15);
      v47 = (int *)*((_QWORD *)a2 + 14);
      if (!v47)
        break;
      v48 = *((int *)a2 + 26);
      v49 = *v47;
      if ((int)v48 >= *v47)
      {
        if (v49 == *((_DWORD *)a2 + 27))
        {
LABEL_57:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 24, v49 + 1);
          v47 = (int *)*((_QWORD *)a2 + 14);
          v49 = *v47;
        }
        *v47 = v49 + 1;
        v50 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(*((google::protobuf::Arena **)a2 + 12));
        v51 = *((_QWORD *)a2 + 14);
        v52 = *((int *)a2 + 26);
        *((_DWORD *)a2 + 26) = v52 + 1;
        *(_QWORD *)(v51 + 8 * v52 + 8) = v50;
        goto LABEL_59;
      }
      *((_DWORD *)a2 + 26) = v48 + 1;
      v50 = *(google::protobuf::ServiceDescriptorProto **)&v47[2 * v48 + 2];
LABEL_59:
      google::protobuf::ServiceDescriptor::CopyTo((google::protobuf::ServiceDescriptor *)(v46 + v44), v50);
      ++v45;
      v44 += 48;
      if (v45 >= *((int *)this + 13))
        goto LABEL_60;
    }
    v49 = *((_DWORD *)a2 + 27);
    goto LABEL_57;
  }
LABEL_60:
  if (*((int *)this + 14) >= 1)
  {
    v53 = 0;
    v54 = 0;
    while (1)
    {
      v55 = *((_QWORD *)this + 16);
      v56 = (int *)*((_QWORD *)a2 + 17);
      if (!v56)
        break;
      v57 = *((int *)a2 + 32);
      v58 = *v56;
      if ((int)v57 >= *v56)
      {
        if (v58 == *((_DWORD *)a2 + 33))
        {
LABEL_67:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 30, v58 + 1);
          v56 = (int *)*((_QWORD *)a2 + 17);
          v58 = *v56;
        }
        *v56 = v58 + 1;
        v59 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                                  + 15));
        v60 = *((_QWORD *)a2 + 17);
        v61 = *((int *)a2 + 32);
        *((_DWORD *)a2 + 32) = v61 + 1;
        *(_QWORD *)(v60 + 8 * v61 + 8) = v59;
        goto LABEL_69;
      }
      *((_DWORD *)a2 + 32) = v57 + 1;
      v59 = *(google::protobuf::FieldDescriptorProto **)&v56[2 * v57 + 2];
LABEL_69:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v55 + v53), v59);
      ++v54;
      v53 += 152;
      if (v54 >= *((int *)this + 14))
        goto LABEL_70;
    }
    v58 = *((_DWORD *)a2 + 33);
    goto LABEL_67;
  }
LABEL_70:
  v62 = (void *)*((_QWORD *)this + 17);
  if (v62 != google::protobuf::FileOptions::default_instance(v8))
  {
    *((_DWORD *)a2 + 4) |= 8u;
    v63 = (signed int **)*((_QWORD *)a2 + 25);
    if (!v63)
    {
      v64 = *((_QWORD *)a2 + 1);
      v65 = (google::protobuf::Arena *)(v64 & 0xFFFFFFFFFFFFFFFELL);
      if ((v64 & 1) != 0)
        v65 = (google::protobuf::Arena *)*((_QWORD *)v65 + 3);
      v63 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v65);
      *((_QWORD *)a2 + 25) = v63;
    }
    google::protobuf::FileOptions::CopyFrom(v63, *((signed int ***)this + 17));
  }
}

void google::protobuf::FileDescriptorProto::set_syntax(google::protobuf::FileDescriptorProto *this, char *__s)
{
  std::string *v4;
  uint64_t v5;
  google::protobuf::Arena *v6;
  std::string *v7;
  std::string **v8;
  uint64_t *v9;
  char v10;
  std::string __str;

  if (!__s)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 7993);
    v4 = google::protobuf::internal::LogMessage::operator<<(&__str, "CHECK failed: value != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
  }
  *((_DWORD *)this + 4) |= 4u;
  std::string::basic_string[abi:ne180100]<0>(&__str, __s);
  v5 = *((_QWORD *)this + 1);
  v6 = (google::protobuf::Arena *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if ((v5 & 1) != 0)
    v6 = (google::protobuf::Arena *)*((_QWORD *)v6 + 3);
  v9 = (uint64_t *)*((_QWORD *)this + 24);
  v8 = (std::string **)((char *)this + 192);
  v7 = (std::string *)v9;
  if (v9 == &google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v8, v6, (__int128 *)&__str);
  else
    std::string::operator=(v7, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
}

void sub_1BF80EEF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::FileDescriptorProto::add_dependency(uint64_t a1, std::string *__str)
{
  google::protobuf::internal::ArenaImpl **v4;
  int *v5;
  uint64_t v6;
  int v7;
  std::string *AlignedAndAddCleanup;
  google::protobuf::internal::ArenaImpl *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (google::protobuf::internal::ArenaImpl **)(a1 + 24);
  v5 = *(int **)(a1 + 40);
  if (!v5)
  {
    v7 = *(_DWORD *)(a1 + 36);
LABEL_6:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v7 + 1);
    v5 = *(int **)(a1 + 40);
    v7 = *v5;
    goto LABEL_7;
  }
  v6 = *(int *)(a1 + 32);
  v7 = *v5;
  if ((int)v6 < *v5)
  {
    *(_DWORD *)(a1 + 32) = v6 + 1;
    AlignedAndAddCleanup = *(std::string **)&v5[2 * v6 + 2];
    return std::string::operator=(AlignedAndAddCleanup, __str);
  }
  if (v7 == *(_DWORD *)(a1 + 36))
    goto LABEL_6;
LABEL_7:
  *v5 = v7 + 1;
  v9 = *v4;
  if (v9)
  {
    if (*((_QWORD *)v9 + 14))
    AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v9, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  else
  {
    AlignedAndAddCleanup = (std::string *)operator new();
  }
  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(int *)(a1 + 32);
  *(_DWORD *)(a1 + 32) = v11 + 1;
  *(_QWORD *)(v10 + 8 * v11 + 8) = AlignedAndAddCleanup;
  return std::string::operator=(AlignedAndAddCleanup, __str);
}

uint64_t google::protobuf::FileDescriptor::dependency(google::protobuf::FileDescriptor *this, int a2)
{
  unint64_t *v4;
  unint64_t v5;
  google::protobuf::FileDescriptor *v7;
  _QWORD *v8;
  _QWORD v9[2];

  v4 = (unint64_t *)*((_QWORD *)this + 3);
  if (v4)
  {
    v7 = this;
    v5 = atomic_load(v4);
    if (v5 != -1)
    {
      v9[0] = google::protobuf::FileDescriptor::DependenciesOnceInit;
      v9[1] = &v7;
      v8 = v9;
      std::__call_once(v4, &v8, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>);
    }
  }
  return *(_QWORD *)(*((_QWORD *)this + 9) + 8 * a2);
}

void google::protobuf::Descriptor::CopyTo(google::protobuf::Descriptor *this, google::protobuf::DescriptorProto *a2)
{
  __int128 *v4;
  std::string **v5;
  uint64_t v6;
  google::protobuf::Arena *v7;
  std::string *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  int v14;
  google::protobuf::FieldDescriptorProto *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  int v23;
  google::protobuf::OneofDescriptorProto *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  int v32;
  google::protobuf::DescriptorProto *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  int v41;
  google::protobuf::EnumDescriptorProto *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  int v50;
  google::protobuf::DescriptorProto_ExtensionRange *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  int v59;
  google::protobuf::FieldDescriptorProto *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  int v71;
  int v72;
  uint64_t v73;
  void *v74;
  signed int **v75;
  uint64_t v76;
  google::protobuf::Arena *v77;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = (std::string **)((char *)a2 + 216);
  v6 = *((_QWORD *)a2 + 1);
  v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) != 0)
    v7 = (google::protobuf::Arena *)*((_QWORD *)v7 + 3);
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
  else
    v8 = std::string::operator=(*v5, (const std::string *)v4);
  if (*((int *)this + 26) >= 1)
  {
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *((_QWORD *)this + 5);
      v12 = (int *)*((_QWORD *)a2 + 5);
      if (!v12)
        break;
      v13 = *((int *)a2 + 8);
      v14 = *v12;
      if ((int)v13 >= *v12)
      {
        if (v14 == *((_DWORD *)a2 + 9))
        {
LABEL_13:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v14 + 1);
          v12 = (int *)*((_QWORD *)a2 + 5);
          v14 = *v12;
        }
        *v12 = v14 + 1;
        v15 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                                  + 3));
        v16 = *((_QWORD *)a2 + 5);
        v17 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v17 + 1;
        *(_QWORD *)(v16 + 8 * v17 + 8) = v15;
        goto LABEL_15;
      }
      *((_DWORD *)a2 + 8) = v13 + 1;
      v15 = *(google::protobuf::FieldDescriptorProto **)&v12[2 * v13 + 2];
LABEL_15:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v11 + v9), v15);
      ++v10;
      v9 += 152;
      if (v10 >= *((int *)this + 26))
        goto LABEL_16;
    }
    v14 = *((_DWORD *)a2 + 9);
    goto LABEL_13;
  }
LABEL_16:
  if (*((int *)this + 27) >= 1)
  {
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = *((_QWORD *)this + 6);
      v21 = (int *)*((_QWORD *)a2 + 20);
      if (!v21)
        break;
      v22 = *((int *)a2 + 38);
      v23 = *v21;
      if ((int)v22 >= *v21)
      {
        if (v23 == *((_DWORD *)a2 + 39))
        {
LABEL_23:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 36, v23 + 1);
          v21 = (int *)*((_QWORD *)a2 + 20);
          v23 = *v21;
        }
        *v21 = v23 + 1;
        v24 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                                  + 18));
        v25 = *((_QWORD *)a2 + 20);
        v26 = *((int *)a2 + 38);
        *((_DWORD *)a2 + 38) = v26 + 1;
        *(_QWORD *)(v25 + 8 * v26 + 8) = v24;
        goto LABEL_25;
      }
      *((_DWORD *)a2 + 38) = v22 + 1;
      v24 = *(google::protobuf::OneofDescriptorProto **)&v21[2 * v22 + 2];
LABEL_25:
      google::protobuf::OneofDescriptor::CopyTo((google::protobuf::OneofDescriptor *)(v20 + v18), v24);
      ++v19;
      v18 += 48;
      if (v19 >= *((int *)this + 27))
        goto LABEL_26;
    }
    v23 = *((_DWORD *)a2 + 39);
    goto LABEL_23;
  }
LABEL_26:
  if (*((int *)this + 28) >= 1)
  {
    v27 = 0;
    v28 = 0;
    while (1)
    {
      v29 = *((_QWORD *)this + 7);
      v30 = (int *)*((_QWORD *)a2 + 8);
      if (!v30)
        break;
      v31 = *((int *)a2 + 14);
      v32 = *v30;
      if ((int)v31 >= *v30)
      {
        if (v32 == *((_DWORD *)a2 + 15))
        {
LABEL_33:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 12, v32 + 1);
          v30 = (int *)*((_QWORD *)a2 + 8);
          v32 = *v30;
        }
        *v30 = v32 + 1;
        v33 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                             + 6));
        v34 = *((_QWORD *)a2 + 8);
        v35 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v35 + 1;
        *(_QWORD *)(v34 + 8 * v35 + 8) = v33;
        goto LABEL_35;
      }
      *((_DWORD *)a2 + 14) = v31 + 1;
      v33 = *(google::protobuf::DescriptorProto **)&v30[2 * v31 + 2];
LABEL_35:
      v8 = (std::string *)google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v29 + v27), v33);
      ++v28;
      v27 += 144;
      if (v28 >= *((int *)this + 28))
        goto LABEL_36;
    }
    v32 = *((_DWORD *)a2 + 15);
    goto LABEL_33;
  }
LABEL_36:
  if (*((int *)this + 29) >= 1)
  {
    v36 = 0;
    v37 = 0;
    while (1)
    {
      v38 = *((_QWORD *)this + 8);
      v39 = (int *)*((_QWORD *)a2 + 11);
      if (!v39)
        break;
      v40 = *((int *)a2 + 20);
      v41 = *v39;
      if ((int)v40 >= *v39)
      {
        if (v41 == *((_DWORD *)a2 + 21))
        {
LABEL_43:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 18, v41 + 1);
          v39 = (int *)*((_QWORD *)a2 + 11);
          v41 = *v39;
        }
        *v39 = v41 + 1;
        v42 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                                 + 9));
        v43 = *((_QWORD *)a2 + 11);
        v44 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 20) = v44 + 1;
        *(_QWORD *)(v43 + 8 * v44 + 8) = v42;
        goto LABEL_45;
      }
      *((_DWORD *)a2 + 20) = v40 + 1;
      v42 = *(google::protobuf::EnumDescriptorProto **)&v39[2 * v40 + 2];
LABEL_45:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v38 + v36), v42);
      ++v37;
      v36 += 80;
      if (v37 >= *((int *)this + 29))
        goto LABEL_46;
    }
    v41 = *((_DWORD *)a2 + 21);
    goto LABEL_43;
  }
LABEL_46:
  if (*((int *)this + 30) >= 1)
  {
    v45 = 0;
    v46 = 0;
    while (1)
    {
      v47 = *((_QWORD *)this + 9);
      v48 = (int *)*((_QWORD *)a2 + 14);
      if (!v48)
        break;
      v49 = *((int *)a2 + 26);
      v50 = *v48;
      if ((int)v49 >= *v48)
      {
        if (v50 == *((_DWORD *)a2 + 27))
        {
LABEL_53:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 24, v50 + 1);
          v48 = (int *)*((_QWORD *)a2 + 14);
          v50 = *v48;
        }
        *v48 = v50 + 1;
        v51 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(*((google::protobuf::Arena **)a2 + 12));
        v52 = *((_QWORD *)a2 + 14);
        v53 = *((int *)a2 + 26);
        *((_DWORD *)a2 + 26) = v53 + 1;
        *(_QWORD *)(v52 + 8 * v53 + 8) = v51;
        goto LABEL_55;
      }
      *((_DWORD *)a2 + 26) = v49 + 1;
      v51 = *(google::protobuf::DescriptorProto_ExtensionRange **)&v48[2 * v49 + 2];
LABEL_55:
      google::protobuf::Descriptor::ExtensionRange::CopyTo((google::protobuf::Descriptor::ExtensionRange *)(v47 + v45), v51);
      ++v46;
      v45 += 16;
      if (v46 >= *((int *)this + 30))
        goto LABEL_56;
    }
    v50 = *((_DWORD *)a2 + 27);
    goto LABEL_53;
  }
LABEL_56:
  if (*((int *)this + 31) >= 1)
  {
    v54 = 0;
    v55 = 0;
    while (1)
    {
      v56 = *((_QWORD *)this + 10);
      v57 = (int *)*((_QWORD *)a2 + 17);
      if (!v57)
        break;
      v58 = *((int *)a2 + 32);
      v59 = *v57;
      if ((int)v58 >= *v57)
      {
        if (v59 == *((_DWORD *)a2 + 33))
        {
LABEL_63:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 30, v59 + 1);
          v57 = (int *)*((_QWORD *)a2 + 17);
          v59 = *v57;
        }
        *v57 = v59 + 1;
        v60 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((google::protobuf::Arena **)a2
                                                                                                  + 15));
        v61 = *((_QWORD *)a2 + 17);
        v62 = *((int *)a2 + 32);
        *((_DWORD *)a2 + 32) = v62 + 1;
        *(_QWORD *)(v61 + 8 * v62 + 8) = v60;
        goto LABEL_65;
      }
      *((_DWORD *)a2 + 32) = v58 + 1;
      v60 = *(google::protobuf::FieldDescriptorProto **)&v57[2 * v58 + 2];
LABEL_65:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v56 + v54), v60);
      ++v55;
      v54 += 152;
      if (v55 >= *((int *)this + 31))
        goto LABEL_66;
    }
    v59 = *((_DWORD *)a2 + 33);
    goto LABEL_63;
  }
LABEL_66:
  if (*((int *)this + 32) >= 1)
  {
    v63 = 0;
    v64 = 0;
    while (1)
    {
      v65 = (int *)*((_QWORD *)a2 + 23);
      if (!v65)
        break;
      v66 = *((int *)a2 + 44);
      v67 = *v65;
      if ((int)v66 >= *v65)
      {
        if (v67 == *((_DWORD *)a2 + 45))
        {
LABEL_73:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 42, v67 + 1);
          v65 = (int *)*((_QWORD *)a2 + 23);
          v67 = *v65;
        }
        *v65 = v67 + 1;
        v8 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(*((google::protobuf::Arena **)a2 + 21));
        v68 = *((_QWORD *)a2 + 23);
        v69 = *((int *)a2 + 44);
        *((_DWORD *)a2 + 44) = v69 + 1;
        *(_QWORD *)(v68 + 8 * v69 + 8) = v8;
        goto LABEL_75;
      }
      *((_DWORD *)a2 + 44) = v66 + 1;
      v8 = *(std::string **)&v65[2 * v66 + 2];
LABEL_75:
      v70 = (int *)(*((_QWORD *)this + 11) + v63);
      v71 = *v70;
      v72 = v8->__r_.__value_.__r.__words[2];
      LODWORD(v8->__r_.__value_.__r.__words[2]) = v72 | 1;
      LODWORD(v70) = v70[1];
      LODWORD(v8->__r_.__value_.__r.__words[2]) = v72 | 3;
      LODWORD(v8[1].__r_.__value_.__l.__data_) = v71;
      HIDWORD(v8[1].__r_.__value_.__r.__words[0]) = (_DWORD)v70;
      ++v64;
      v63 += 8;
      if (v64 >= *((int *)this + 32))
        goto LABEL_76;
    }
    v67 = *((_DWORD *)a2 + 45);
    goto LABEL_73;
  }
LABEL_76:
  if (*((int *)this + 33) >= 1)
  {
    v73 = 0;
    do
      v8 = google::protobuf::DescriptorProto::add_reserved_name((uint64_t)a2, *(std::string **)(*((_QWORD *)this + 12) + 8 * v73++));
    while (v73 < *((int *)this + 33));
  }
  v74 = (void *)*((_QWORD *)this + 4);
  if (v74 != google::protobuf::MessageOptions::default_instance((google::protobuf::MessageOptions *)v8))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    v75 = (signed int **)*((_QWORD *)a2 + 28);
    if (!v75)
    {
      v76 = *((_QWORD *)a2 + 1);
      v77 = (google::protobuf::Arena *)(v76 & 0xFFFFFFFFFFFFFFFELL);
      if ((v76 & 1) != 0)
        v77 = (google::protobuf::Arena *)*((_QWORD *)v77 + 3);
      v75 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v77);
      *((_QWORD *)a2 + 28) = v75;
    }
    google::protobuf::MessageOptions::CopyFrom(v75, *((signed int ***)this + 4));
  }
}

void google::protobuf::EnumDescriptor::CopyTo(google::protobuf::EnumDescriptor *this, google::protobuf::EnumDescriptorProto *a2)
{
  __int128 *v4;
  std::string **v5;
  uint64_t v6;
  google::protobuf::Arena *v7;
  std::string *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  int v14;
  google::protobuf::EnumValueDescriptorProto *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  int v26;
  int v27;
  uint64_t v28;
  void *v29;
  signed int **v30;
  uint64_t v31;
  google::protobuf::Arena *v32;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = (std::string **)((char *)a2 + 96);
  v6 = *((_QWORD *)a2 + 1);
  v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) != 0)
    v7 = (google::protobuf::Arena *)*((_QWORD *)v7 + 3);
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
  else
    v8 = std::string::operator=(*v5, (const std::string *)v4);
  if (*((int *)this + 11) >= 1)
  {
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *((_QWORD *)this + 6);
      v12 = (int *)*((_QWORD *)a2 + 5);
      if (!v12)
        break;
      v13 = *((int *)a2 + 8);
      v14 = *v12;
      if ((int)v13 >= *v12)
      {
        if (v14 == *((_DWORD *)a2 + 9))
        {
LABEL_13:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v14 + 1);
          v12 = (int *)*((_QWORD *)a2 + 5);
          v14 = *v12;
        }
        *v12 = v14 + 1;
        v15 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(*((google::protobuf::Arena **)a2 + 3));
        v16 = *((_QWORD *)a2 + 5);
        v17 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v17 + 1;
        *(_QWORD *)(v16 + 8 * v17 + 8) = v15;
        goto LABEL_15;
      }
      *((_DWORD *)a2 + 8) = v13 + 1;
      v15 = *(google::protobuf::EnumValueDescriptorProto **)&v12[2 * v13 + 2];
LABEL_15:
      google::protobuf::EnumValueDescriptor::CopyTo((google::protobuf::EnumValueDescriptor *)(v11 + v9), v15);
      ++v10;
      v9 += 40;
      if (v10 >= *((int *)this + 11))
        goto LABEL_16;
    }
    v14 = *((_DWORD *)a2 + 9);
    goto LABEL_13;
  }
LABEL_16:
  if (*((int *)this + 14) >= 1)
  {
    v18 = 0;
    v19 = 0;
    while (1)
    {
      v20 = (int *)*((_QWORD *)a2 + 8);
      if (!v20)
        break;
      v21 = *((int *)a2 + 14);
      v22 = *v20;
      if ((int)v21 >= *v20)
      {
        if (v22 == *((_DWORD *)a2 + 15))
        {
LABEL_23:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 12, v22 + 1);
          v20 = (int *)*((_QWORD *)a2 + 8);
          v22 = *v20;
        }
        *v20 = v22 + 1;
        v8 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(*((google::protobuf::Arena **)a2 + 6));
        v23 = *((_QWORD *)a2 + 8);
        v24 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v24 + 1;
        *(_QWORD *)(v23 + 8 * v24 + 8) = v8;
        goto LABEL_25;
      }
      *((_DWORD *)a2 + 14) = v21 + 1;
      v8 = *(std::string **)&v20[2 * v21 + 2];
LABEL_25:
      v25 = (int *)(*((_QWORD *)this + 8) + v18);
      v26 = *v25;
      v27 = v8->__r_.__value_.__r.__words[2];
      LODWORD(v8->__r_.__value_.__r.__words[2]) = v27 | 1;
      LODWORD(v25) = v25[1];
      LODWORD(v8->__r_.__value_.__r.__words[2]) = v27 | 3;
      LODWORD(v8[1].__r_.__value_.__l.__data_) = v26;
      HIDWORD(v8[1].__r_.__value_.__r.__words[0]) = (_DWORD)v25;
      ++v19;
      v18 += 8;
      if (v19 >= *((int *)this + 14))
        goto LABEL_26;
    }
    v22 = *((_DWORD *)a2 + 15);
    goto LABEL_23;
  }
LABEL_26:
  if (*((int *)this + 15) >= 1)
  {
    v28 = 0;
    do
      v8 = google::protobuf::EnumDescriptorProto::add_reserved_name((uint64_t)a2, *(std::string **)(*((_QWORD *)this + 9) + 8 * v28++));
    while (v28 < *((int *)this + 15));
  }
  v29 = (void *)*((_QWORD *)this + 4);
  if (v29 != google::protobuf::EnumOptions::default_instance((google::protobuf::EnumOptions *)v8))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    v30 = (signed int **)*((_QWORD *)a2 + 13);
    if (!v30)
    {
      v31 = *((_QWORD *)a2 + 1);
      v32 = (google::protobuf::Arena *)(v31 & 0xFFFFFFFFFFFFFFFELL);
      if ((v31 & 1) != 0)
        v32 = (google::protobuf::Arena *)*((_QWORD *)v32 + 3);
      v30 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v32);
      *((_QWORD *)a2 + 13) = v30;
    }
    google::protobuf::EnumOptions::CopyFrom(v30, *((signed int ***)this + 4));
  }
}

void google::protobuf::ServiceDescriptor::CopyTo(google::protobuf::ServiceDescriptor *this, google::protobuf::ServiceDescriptorProto *a2)
{
  __int128 *v4;
  std::string **v5;
  uint64_t v6;
  google::protobuf::Arena *v7;
  std::string *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  int v14;
  google::protobuf::MethodDescriptorProto *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  signed int **v19;
  uint64_t v20;
  google::protobuf::Arena *v21;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = (std::string **)((char *)a2 + 48);
  v6 = *((_QWORD *)a2 + 1);
  v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) != 0)
    v7 = (google::protobuf::Arena *)*((_QWORD *)v7 + 3);
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
  else
    v8 = std::string::operator=(*v5, (const std::string *)v4);
  if (*((int *)this + 10) >= 1)
  {
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *((_QWORD *)this + 4);
      v12 = (int *)*((_QWORD *)a2 + 5);
      if (!v12)
        break;
      v13 = *((int *)a2 + 8);
      v14 = *v12;
      if ((int)v13 >= *v12)
      {
        if (v14 == *((_DWORD *)a2 + 9))
        {
LABEL_13:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v14 + 1);
          v12 = (int *)*((_QWORD *)a2 + 5);
          v14 = *v12;
        }
        *v12 = v14 + 1;
        v15 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(*((google::protobuf::Arena **)a2 + 3));
        v16 = *((_QWORD *)a2 + 5);
        v17 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v17 + 1;
        *(_QWORD *)(v16 + 8 * v17 + 8) = v15;
        goto LABEL_15;
      }
      *((_DWORD *)a2 + 8) = v13 + 1;
      v15 = *(google::protobuf::MethodDescriptorProto **)&v12[2 * v13 + 2];
LABEL_15:
      google::protobuf::MethodDescriptor::CopyTo((google::protobuf::MethodDescriptor *)(v11 + v9), v15);
      ++v10;
      v9 += 104;
      if (v10 >= *((int *)this + 10))
        goto LABEL_16;
    }
    v14 = *((_DWORD *)a2 + 9);
    goto LABEL_13;
  }
LABEL_16:
  v18 = (void *)*((_QWORD *)this + 3);
  if (v18 != google::protobuf::ServiceOptions::default_instance((google::protobuf::ServiceOptions *)v8))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    v19 = (signed int **)*((_QWORD *)a2 + 7);
    if (!v19)
    {
      v20 = *((_QWORD *)a2 + 1);
      v21 = (google::protobuf::Arena *)(v20 & 0xFFFFFFFFFFFFFFFELL);
      if ((v20 & 1) != 0)
        v21 = (google::protobuf::Arena *)*((_QWORD *)v21 + 3);
      v19 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v21);
      *((_QWORD *)a2 + 7) = v19;
    }
    google::protobuf::ServiceOptions::CopyFrom(v19, *((signed int ***)this + 3));
  }
}

void google::protobuf::FieldDescriptor::CopyTo(google::protobuf::FieldDescriptor *this, google::protobuf::FieldDescriptorProto *a2)
{
  __int128 *v4;
  std::string **v5;
  uint64_t v6;
  google::protobuf::Arena *v7;
  int v8;
  int v9;
  __int128 *v10;
  std::string **v11;
  uint64_t v12;
  google::protobuf::Arena *v13;
  unsigned int v14;
  unint64_t *v15;
  unint64_t v16;
  unsigned int v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  google::protobuf::Arena *v22;
  std::string **v23;
  uint64_t v24;
  google::protobuf::Arena *v25;
  std::string *v26;
  uint64_t v27;
  int v28;
  const std::string::value_type *v29;
  std::string::size_type v30;
  unint64_t *v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  google::protobuf::Arena *v35;
  std::string *v36;
  unint64_t v37;
  uint64_t v38;
  google::protobuf::Arena *v39;
  std::string **v40;
  uint64_t v41;
  google::protobuf::Arena *v42;
  std::string *v43;
  uint64_t v44;
  std::string **v45;
  uint64_t v46;
  google::protobuf::Arena *v47;
  uint64_t v48;
  int v49;
  const std::string::value_type *v50;
  std::string::size_type v51;
  std::string **v52;
  uint64_t v53;
  google::protobuf::Arena *v54;
  uint64_t v55;
  int v56;
  void *v57;
  google::protobuf::Arena **v58;
  uint64_t v59;
  google::protobuf::Arena *v60;
  google::protobuf::FieldDescriptor *v61;
  uint64_t (*v62)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  std::string *p_str;
  std::string __str;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = (std::string **)((char *)a2 + 24);
  v6 = *((_QWORD *)a2 + 1);
  v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) != 0)
    v7 = (google::protobuf::Arena *)*((_QWORD *)v7 + 3);
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
  else
    std::string::operator=(*v5, (const std::string *)v4);
  v8 = *((_DWORD *)this + 17);
  v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v9 | 0x40;
  *((_DWORD *)a2 + 18) = v8;
  if (*((_BYTE *)this + 65))
  {
    v10 = (__int128 *)*((_QWORD *)this + 4);
    *((_DWORD *)a2 + 4) = v9 | 0x50;
    v11 = (std::string **)((char *)a2 + 56);
    v12 = *((_QWORD *)a2 + 1);
    v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    if ((v12 & 1) != 0)
      v13 = (google::protobuf::Arena *)*((_QWORD *)v13 + 3);
    if (*v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v11, v13, v10);
    else
      std::string::operator=(*v11, (const std::string *)v10);
  }
  v14 = *((_DWORD *)this + 15);
  if (!google::protobuf::FieldDescriptorProto_Label_IsValid((google::protobuf *)v14))
    google::protobuf::FieldDescriptor::CopyTo();
  *((_DWORD *)a2 + 4) |= 0x100u;
  *((_DWORD *)a2 + 20) = v14;
  v15 = (unint64_t *)*((_QWORD *)this + 6);
  if (v15)
  {
    v61 = this;
    v62 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v16 = atomic_load(v15);
    if (v16 != -1)
    {
      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v62;
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v61;
      p_str = &__str;
      std::__call_once(v15, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v17 = *((_DWORD *)this + 14);
  if (!google::protobuf::FieldDescriptorProto_Type_IsValid((google::protobuf *)v17))
    google::protobuf::FieldDescriptor::CopyTo();
  v19 = *((_DWORD *)a2 + 4);
  v20 = v19 | 0x200;
  *((_DWORD *)a2 + 4) = v19 | 0x200;
  *((_DWORD *)a2 + 21) = v17;
  if (*((_BYTE *)this + 66))
  {
    if (!*(_BYTE *)(*((_QWORD *)this + 10) + 137))
    {
      *((_DWORD *)a2 + 4) = v19 | 0x202;
      std::string::basic_string[abi:ne180100]<0>(&__str, ".");
      v21 = *((_QWORD *)a2 + 1);
      v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
      if ((v21 & 1) != 0)
        v22 = (google::protobuf::Arena *)*((_QWORD *)v22 + 3);
      if (*((uint64_t **)a2 + 4) == &google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, v22, (__int128 *)&__str);
      else
        std::string::operator=(*((std::string **)a2 + 4), &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
      v20 = *((_DWORD *)a2 + 4);
    }
    *((_DWORD *)a2 + 4) = v20 | 2;
    v23 = (std::string **)((char *)a2 + 32);
    v24 = *((_QWORD *)a2 + 1);
    v25 = (google::protobuf::Arena *)(v24 & 0xFFFFFFFFFFFFFFFELL);
    if ((v24 & 1) != 0)
      v25 = (google::protobuf::Arena *)*((_QWORD *)v25 + 3);
    v26 = *v23;
    if (*v23 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, v25, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
      v26 = *v23;
    }
    v27 = *(_QWORD *)(*((_QWORD *)this + 10) + 8);
    v28 = *(char *)(v27 + 23);
    if (v28 >= 0)
      v29 = *(const std::string::value_type **)(*((_QWORD *)this + 10) + 8);
    else
      v29 = *(const std::string::value_type **)v27;
    if (v28 >= 0)
      v30 = *(unsigned __int8 *)(v27 + 23);
    else
      v30 = *(_QWORD *)(v27 + 8);
    std::string::append(v26, v29, v30);
  }
  v31 = (unint64_t *)*((_QWORD *)this + 6);
  if (v31)
  {
    v61 = this;
    v62 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v32 = atomic_load(v31);
    if (v32 != -1)
    {
      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v62;
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v61;
      p_str = &__str;
      std::__call_once(v31, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v33 = *((_DWORD *)this + 14);
  if ((v33 & 0xFFFFFFFE) == 0xA)
  {
    if (*(_BYTE *)(google::protobuf::FieldDescriptor::message_type(this) + 136))
    {
      *((_DWORD *)a2 + 21) = 1;
      *((_DWORD *)a2 + 4) &= ~0x200u;
    }
    if (!*(_BYTE *)(google::protobuf::FieldDescriptor::message_type(this) + 137))
    {
      *((_DWORD *)a2 + 4) |= 4u;
      std::string::basic_string[abi:ne180100]<0>(&__str, ".");
      v34 = *((_QWORD *)a2 + 1);
      v35 = (google::protobuf::Arena *)(v34 & 0xFFFFFFFFFFFFFFFELL);
      if ((v34 & 1) != 0)
        v35 = (google::protobuf::Arena *)*((_QWORD *)v35 + 3);
      if (*((uint64_t **)a2 + 5) == &google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, v35, (__int128 *)&__str);
      else
        std::string::operator=(*((std::string **)a2 + 5), &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
    }
    *((_DWORD *)a2 + 4) |= 4u;
    v40 = (std::string **)((char *)a2 + 40);
    v41 = *((_QWORD *)a2 + 1);
    v42 = (google::protobuf::Arena *)(v41 & 0xFFFFFFFFFFFFFFFELL);
    if ((v41 & 1) != 0)
      v42 = (google::protobuf::Arena *)*((_QWORD *)v42 + 3);
    v43 = *v40;
    if (*v40 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, v42, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
      v43 = *v40;
    }
    v44 = google::protobuf::FieldDescriptor::message_type(this);
LABEL_75:
    v48 = *(_QWORD *)(v44 + 8);
    v49 = *(char *)(v48 + 23);
    if (v49 >= 0)
      v50 = *(const std::string::value_type **)(v44 + 8);
    else
      v50 = *(const std::string::value_type **)v48;
    if (v49 >= 0)
      v51 = *(unsigned __int8 *)(v48 + 23);
    else
      v51 = *(_QWORD *)(v48 + 8);
    v36 = std::string::append(v43, v50, v51);
    goto LABEL_82;
  }
  v36 = (std::string *)*((_QWORD *)this + 6);
  if (v36)
  {
    v61 = this;
    v62 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v37 = atomic_load((unint64_t *)v36);
    if (v37 != -1)
    {
      __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v62;
      __str.__r_.__value_.__l.__size_ = (std::string::size_type)&v61;
      p_str = &__str;
      std::__call_once((std::once_flag::_State_type *)v36, &p_str, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    v33 = *((_DWORD *)this + 14);
  }
  if (v33 == 14)
  {
    if (!*(_BYTE *)(google::protobuf::FieldDescriptor::enum_type(this) + 41))
    {
      *((_DWORD *)a2 + 4) |= 4u;
      std::string::basic_string[abi:ne180100]<0>(&__str, ".");
      v38 = *((_QWORD *)a2 + 1);
      v39 = (google::protobuf::Arena *)(v38 & 0xFFFFFFFFFFFFFFFELL);
      if ((v38 & 1) != 0)
        v39 = (google::protobuf::Arena *)*((_QWORD *)v39 + 3);
      if (*((uint64_t **)a2 + 5) == &google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, v39, (__int128 *)&__str);
      else
        std::string::operator=(*((std::string **)a2 + 5), &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
    }
    *((_DWORD *)a2 + 4) |= 4u;
    v45 = (std::string **)((char *)a2 + 40);
    v46 = *((_QWORD *)a2 + 1);
    v47 = (google::protobuf::Arena *)(v46 & 0xFFFFFFFFFFFFFFFELL);
    if ((v46 & 1) != 0)
      v47 = (google::protobuf::Arena *)*((_QWORD *)v47 + 3);
    v43 = *v45;
    if (*v45 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, v47, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
      v43 = *v45;
    }
    v44 = google::protobuf::FieldDescriptor::enum_type(this);
    goto LABEL_75;
  }
LABEL_82:
  if (*((_BYTE *)this + 64))
  {
    google::protobuf::FieldDescriptor::DefaultValueAsString(this, 0, v18, &__str);
    *((_DWORD *)a2 + 4) |= 8u;
    v52 = (std::string **)((char *)a2 + 48);
    v53 = *((_QWORD *)a2 + 1);
    v54 = (google::protobuf::Arena *)(v53 & 0xFFFFFFFFFFFFFFFELL);
    if ((v53 & 1) != 0)
      v54 = (google::protobuf::Arena *)*((_QWORD *)v54 + 3);
    if (*v52 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstance(v52, v54, (__int128 *)&__str);
    else
      v36 = std::string::operator=(*v52, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
  }
  v55 = *((_QWORD *)this + 11);
  if (v55 && !*((_BYTE *)this + 66))
  {
    v56 = -1431655765 * ((unint64_t)(v55 - *(_QWORD *)(*(_QWORD *)(v55 + 16) + 48)) >> 4);
    *((_DWORD *)a2 + 4) |= 0x80u;
    *((_DWORD *)a2 + 19) = v56;
  }
  v57 = (void *)*((_QWORD *)this + 15);
  if (v57 != google::protobuf::FieldOptions::default_instance((google::protobuf::FieldOptions *)v36))
  {
    *((_DWORD *)a2 + 4) |= 0x20u;
    v58 = (google::protobuf::Arena **)*((_QWORD *)a2 + 8);
    if (!v58)
    {
      v59 = *((_QWORD *)a2 + 1);
      v60 = (google::protobuf::Arena *)(v59 & 0xFFFFFFFFFFFFFFFELL);
      if ((v59 & 1) != 0)
        v60 = (google::protobuf::Arena *)*((_QWORD *)v60 + 3);
      v58 = (google::protobuf::Arena **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v60);
      *((_QWORD *)a2 + 8) = v58;
    }
    google::protobuf::FieldOptions::CopyFrom(v58, *((google::protobuf::Arena ***)this + 15));
  }
}

void sub_1BF810094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::OneofDescriptor::CopyTo(google::protobuf::OneofDescriptor *this, google::protobuf::OneofDescriptorProto *a2)
{
  __int128 *v4;
  std::string **v5;
  uint64_t v6;
  google::protobuf::Arena *v7;
  std::string *v8;
  void *v9;
  signed int **v10;
  uint64_t v11;
  google::protobuf::Arena *v12;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = (std::string **)((char *)a2 + 24);
  v6 = *((_QWORD *)a2 + 1);
  v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) != 0)
    v7 = (google::protobuf::Arena *)*((_QWORD *)v7 + 3);
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
  else
    v8 = std::string::operator=(*v5, (const std::string *)v4);
  v9 = (void *)*((_QWORD *)this + 5);
  if (v9 != google::protobuf::OneofOptions::default_instance((google::protobuf::OneofOptions *)v8))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    v10 = (signed int **)*((_QWORD *)a2 + 4);
    if (!v10)
    {
      v11 = *((_QWORD *)a2 + 1);
      v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
      if ((v11 & 1) != 0)
        v12 = (google::protobuf::Arena *)*((_QWORD *)v12 + 3);
      v10 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v12);
      *((_QWORD *)a2 + 4) = v10;
    }
    google::protobuf::OneofOptions::CopyFrom(v10, *((signed int ***)this + 5));
  }
}

std::string *google::protobuf::DescriptorProto::add_reserved_name(uint64_t a1, std::string *__str)
{
  google::protobuf::internal::ArenaImpl **v4;
  int *v5;
  uint64_t v6;
  int v7;
  std::string *AlignedAndAddCleanup;
  google::protobuf::internal::ArenaImpl *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (google::protobuf::internal::ArenaImpl **)(a1 + 192);
  v5 = *(int **)(a1 + 208);
  if (!v5)
  {
    v7 = *(_DWORD *)(a1 + 204);
LABEL_6:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 192), v7 + 1);
    v5 = *(int **)(a1 + 208);
    v7 = *v5;
    goto LABEL_7;
  }
  v6 = *(int *)(a1 + 200);
  v7 = *v5;
  if ((int)v6 < *v5)
  {
    *(_DWORD *)(a1 + 200) = v6 + 1;
    AlignedAndAddCleanup = *(std::string **)&v5[2 * v6 + 2];
    return std::string::operator=(AlignedAndAddCleanup, __str);
  }
  if (v7 == *(_DWORD *)(a1 + 204))
    goto LABEL_6;
LABEL_7:
  *v5 = v7 + 1;
  v9 = *v4;
  if (v9)
  {
    if (*((_QWORD *)v9 + 14))
    AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v9, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  else
  {
    AlignedAndAddCleanup = (std::string *)operator new();
  }
  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
  v10 = *(_QWORD *)(a1 + 208);
  v11 = *(int *)(a1 + 200);
  *(_DWORD *)(a1 + 200) = v11 + 1;
  *(_QWORD *)(v10 + 8 * v11 + 8) = AlignedAndAddCleanup;
  return std::string::operator=(AlignedAndAddCleanup, __str);
}

uint64_t google::protobuf::FieldDescriptor::enum_type(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::FieldDescriptor *v5;
  _QWORD *v6;
  _QWORD v7[2];

  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v5 = this;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v7[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v7[1] = &v5;
      v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *((_QWORD *)this + 14);
}

void google::protobuf::EnumValueDescriptor::CopyTo(google::protobuf::EnumValueDescriptor *this, google::protobuf::EnumValueDescriptorProto *a2)
{
  __int128 *v4;
  std::string **v5;
  uint64_t v6;
  google::protobuf::Arena *v7;
  std::string *v8;
  int v9;
  void *v10;
  google::protobuf::Arena **v11;
  uint64_t v12;
  google::protobuf::Arena *v13;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = (std::string **)((char *)a2 + 24);
  v6 = *((_QWORD *)a2 + 1);
  v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) != 0)
    v7 = (google::protobuf::Arena *)*((_QWORD *)v7 + 3);
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
  else
    v8 = std::string::operator=(*v5, (const std::string *)v4);
  v9 = *((_DWORD *)this + 4);
  *((_DWORD *)a2 + 4) |= 4u;
  *((_DWORD *)a2 + 10) = v9;
  v10 = (void *)*((_QWORD *)this + 4);
  if (v10 != google::protobuf::EnumValueOptions::default_instance((google::protobuf::EnumValueOptions *)v8))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    v11 = (google::protobuf::Arena **)*((_QWORD *)a2 + 4);
    if (!v11)
    {
      v12 = *((_QWORD *)a2 + 1);
      v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
      if ((v12 & 1) != 0)
        v13 = (google::protobuf::Arena *)*((_QWORD *)v13 + 3);
      v11 = (google::protobuf::Arena **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v13);
      *((_QWORD *)a2 + 4) = v11;
    }
    google::protobuf::EnumValueOptions::CopyFrom(v11, *((google::protobuf::Arena ***)this + 4));
  }
}

std::string *google::protobuf::EnumDescriptorProto::add_reserved_name(uint64_t a1, std::string *__str)
{
  google::protobuf::internal::ArenaImpl **v4;
  int *v5;
  uint64_t v6;
  int v7;
  std::string *AlignedAndAddCleanup;
  google::protobuf::internal::ArenaImpl *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (google::protobuf::internal::ArenaImpl **)(a1 + 72);
  v5 = *(int **)(a1 + 88);
  if (!v5)
  {
    v7 = *(_DWORD *)(a1 + 84);
LABEL_6:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v7 + 1);
    v5 = *(int **)(a1 + 88);
    v7 = *v5;
    goto LABEL_7;
  }
  v6 = *(int *)(a1 + 80);
  v7 = *v5;
  if ((int)v6 < *v5)
  {
    *(_DWORD *)(a1 + 80) = v6 + 1;
    AlignedAndAddCleanup = *(std::string **)&v5[2 * v6 + 2];
    return std::string::operator=(AlignedAndAddCleanup, __str);
  }
  if (v7 == *(_DWORD *)(a1 + 84))
    goto LABEL_6;
LABEL_7:
  *v5 = v7 + 1;
  v9 = *v4;
  if (v9)
  {
    if (*((_QWORD *)v9 + 14))
    AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v9, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  else
  {
    AlignedAndAddCleanup = (std::string *)operator new();
  }
  AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
  AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
  AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *(int *)(a1 + 80);
  *(_DWORD *)(a1 + 80) = v11 + 1;
  *(_QWORD *)(v10 + 8 * v11 + 8) = AlignedAndAddCleanup;
  return std::string::operator=(AlignedAndAddCleanup, __str);
}

void google::protobuf::MethodDescriptor::CopyTo(google::protobuf::MethodDescriptor *this, google::protobuf::MethodDescriptorProto *a2)
{
  __int128 *v4;
  std::string **v5;
  uint64_t v6;
  google::protobuf::Arena *v7;
  uint64_t v8;
  google::protobuf::Arena *v9;
  std::string **v10;
  uint64_t v11;
  google::protobuf::Arena *v12;
  std::string *v13;
  uint64_t v14;
  int v15;
  const std::string::value_type *v16;
  std::string::size_type v17;
  uint64_t v18;
  google::protobuf::Arena *v19;
  std::string **v20;
  uint64_t v21;
  google::protobuf::Arena *v22;
  std::string *v23;
  uint64_t v24;
  int v25;
  const std::string::value_type *v26;
  std::string::size_type v27;
  std::string *v28;
  void *v29;
  signed int **v30;
  uint64_t v31;
  google::protobuf::Arena *v32;
  std::string __str;

  v4 = *(__int128 **)this;
  *((_DWORD *)a2 + 4) |= 1u;
  v5 = (std::string **)((char *)a2 + 24);
  v6 = *((_QWORD *)a2 + 1);
  v7 = (google::protobuf::Arena *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if ((v6 & 1) != 0)
    v7 = (google::protobuf::Arena *)*((_QWORD *)v7 + 3);
  if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v5, v7, v4);
  else
    std::string::operator=(*v5, (const std::string *)v4);
  google::protobuf::internal::LazyDescriptor::Once((google::protobuf::MethodDescriptor *)((char *)this + 24));
  if (!*(_BYTE *)(*((_QWORD *)this + 3) + 137))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    std::string::basic_string[abi:ne180100]<0>(&__str, ".");
    v8 = *((_QWORD *)a2 + 1);
    v9 = (google::protobuf::Arena *)(v8 & 0xFFFFFFFFFFFFFFFELL);
    if ((v8 & 1) != 0)
      v9 = (google::protobuf::Arena *)*((_QWORD *)v9 + 3);
    if (*((uint64_t **)a2 + 4) == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, v9, (__int128 *)&__str);
    else
      std::string::operator=(*((std::string **)a2 + 4), &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
  }
  *((_DWORD *)a2 + 4) |= 2u;
  v10 = (std::string **)((char *)a2 + 32);
  v11 = *((_QWORD *)a2 + 1);
  v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
  if ((v11 & 1) != 0)
    v12 = (google::protobuf::Arena *)*((_QWORD *)v12 + 3);
  v13 = *v10;
  if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, v12, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v13 = *v10;
  }
  google::protobuf::internal::LazyDescriptor::Once((google::protobuf::MethodDescriptor *)((char *)this + 24));
  v14 = *(_QWORD *)(*((_QWORD *)this + 3) + 8);
  v15 = *(char *)(v14 + 23);
  if (v15 >= 0)
    v16 = *(const std::string::value_type **)(*((_QWORD *)this + 3) + 8);
  else
    v16 = *(const std::string::value_type **)v14;
  if (v15 >= 0)
    v17 = *(unsigned __int8 *)(v14 + 23);
  else
    v17 = *(_QWORD *)(v14 + 8);
  std::string::append(v13, v16, v17);
  google::protobuf::internal::LazyDescriptor::Once((google::protobuf::MethodDescriptor *)((char *)this + 56));
  if (!*(_BYTE *)(*((_QWORD *)this + 7) + 137))
  {
    *((_DWORD *)a2 + 4) |= 4u;
    std::string::basic_string[abi:ne180100]<0>(&__str, ".");
    v18 = *((_QWORD *)a2 + 1);
    v19 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
    if ((v18 & 1) != 0)
      v19 = (google::protobuf::Arena *)*((_QWORD *)v19 + 3);
    if (*((uint64_t **)a2 + 5) == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, v19, (__int128 *)&__str);
    else
      std::string::operator=(*((std::string **)a2 + 5), &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
  }
  *((_DWORD *)a2 + 4) |= 4u;
  v20 = (std::string **)((char *)a2 + 40);
  v21 = *((_QWORD *)a2 + 1);
  v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
  if ((v21 & 1) != 0)
    v22 = (google::protobuf::Arena *)*((_QWORD *)v22 + 3);
  v23 = *v20;
  if (*v20 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, v22, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v23 = *v20;
  }
  google::protobuf::internal::LazyDescriptor::Once((google::protobuf::MethodDescriptor *)((char *)this + 56));
  v24 = *(_QWORD *)(*((_QWORD *)this + 7) + 8);
  v25 = *(char *)(v24 + 23);
  if (v25 >= 0)
    v26 = *(const std::string::value_type **)(*((_QWORD *)this + 7) + 8);
  else
    v26 = *(const std::string::value_type **)v24;
  if (v25 >= 0)
    v27 = *(unsigned __int8 *)(v24 + 23);
  else
    v27 = *(_QWORD *)(v24 + 8);
  v28 = std::string::append(v23, v26, v27);
  v29 = (void *)*((_QWORD *)this + 11);
  if (v29 != google::protobuf::MethodOptions::default_instance((google::protobuf::MethodOptions *)v28))
  {
    *((_DWORD *)a2 + 4) |= 8u;
    v30 = (signed int **)*((_QWORD *)a2 + 6);
    if (!v30)
    {
      v31 = *((_QWORD *)a2 + 1);
      v32 = (google::protobuf::Arena *)(v31 & 0xFFFFFFFFFFFFFFFELL);
      if ((v31 & 1) != 0)
        v32 = (google::protobuf::Arena *)*((_QWORD *)v32 + 3);
      v30 = (signed int **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v32);
      *((_QWORD *)a2 + 6) = v30;
    }
    google::protobuf::MethodOptions::CopyFrom(v30, *((signed int ***)this + 11));
  }
  if (*((_BYTE *)this + 96))
  {
    *((_DWORD *)a2 + 4) |= 0x10u;
    *((_BYTE *)a2 + 56) = 1;
  }
  if (*((_BYTE *)this + 97))
  {
    *((_DWORD *)a2 + 4) |= 0x20u;
    *((_BYTE *)a2 + 57) = 1;
  }
}

void sub_1BF8107C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::AddPreComment(uint64_t a1, std::string *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  std::string *p_p;
  std::string::size_type size;
  std::string *v9;
  std::string::size_type v10;
  std::string __p;

  if (*(_BYTE *)a1)
  {
    v4 = *(_QWORD *)(a1 + 72);
    if (*(_QWORD *)(a1 + 80) != v4)
    {
      v5 = 0;
      v6 = 0;
      do
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        std::string::append(a2, (const std::string::value_type *)p_p, size);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        std::string::append(a2, "\n");
        ++v6;
        v4 = *(_QWORD *)(a1 + 72);
        v5 += 24;
      }
      while (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 80) - v4) >> 3) > v6);
    }
    if (*(char *)(a1 + 47) < 0)
    {
      if (!*(_QWORD *)(a1 + 32))
        return;
    }
    else if (!*(_BYTE *)(a1 + 47))
    {
      return;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v9 = &__p;
    else
      v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      v10 = __p.__r_.__value_.__l.__size_;
    std::string::append(a2, (const std::string::value_type *)v9, v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1BF810924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::AddPostComment(uint64_t a1, std::string *a2)
{
  std::string *p_p;
  std::string::size_type size;
  std::string __p;

  if (*(_BYTE *)a1)
  {
    if (*(char *)(a1 + 71) < 0)
    {
      if (!*(_QWORD *)(a1 + 56))
        return;
    }
    else if (!*(_BYTE *)(a1 + 71))
    {
      return;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    std::string::append(a2, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1BF8109CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::~SourceLocationCommentPrinter(void **this)
{
  void **v2;

  if (*((char *)this + 127) < 0)
    operator delete(this[13]);
  v2 = this + 9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 71) < 0)
    operator delete(this[6]);
  if (*((char *)this + 47) < 0)
    operator delete(this[3]);
}

BOOL google::protobuf::`anonymous namespace'::FormatLineOptions(int a1, const google::protobuf::Message *a2, uint64_t a3, std::string *a4)
{
  _BOOL4 Options;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  void **p_p;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *__p;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  void **v45;
  int v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__p, 2 * a1, 32);
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v10 = v21;
  v9 = v22;
  if (Options)
  {
    if (v22 == v21)
    {
      v9 = v21;
    }
    else
    {
      v11 = 0;
      v12 = 0;
      do
      {
        v13 = v26;
        p_p = (void **)__p;
        if ((v26 & 0x80u) == 0)
          p_p = &__p;
        v45 = p_p;
        if ((v26 & 0x80u) != 0)
          v13 = v25;
        v46 = v13;
        v15 = v10 + v11;
        if (*(char *)(v10 + v11 + 23) >= 0)
          v16 = v10 + v11;
        else
          v16 = *(_QWORD *)(v10 + v11);
        v43 = v16;
        v17 = *(unsigned __int8 *)(v15 + 23);
        v18 = *(_QWORD *)(v15 + 8);
        if ((v17 & 0x80u) == 0)
          LODWORD(v18) = v17;
        v44 = v18;
        v41 = 0;
        v42 = -1;
        v39 = 0;
        v40 = -1;
        v37 = 0;
        v38 = -1;
        v35 = 0;
        v36 = -1;
        v33 = 0;
        v34 = -1;
        v31 = 0;
        v32 = -1;
        v29 = 0;
        v30 = -1;
        v27 = 0;
        v28 = -1;
        *((_QWORD *)&v20 + 1) = &v31;
        *(_QWORD *)&v20 = &v33;
        google::protobuf::strings::SubstituteAndAppend(a4, "$0option $1;\n",
          (uint64_t)&v45,
          (uint64_t)&v43,
          (uint64_t)&v41,
          (uint64_t)&v39,
          (uint64_t)&v37,
          (uint64_t)&v35,
          v20,
          (uint64_t)&v29,
          (uint64_t)&v27);
        ++v12;
        v10 = v21;
        v9 = v22;
        v11 += 24;
      }
      while (0xAAAAAAAAAAAAAAABLL * ((v22 - v21) >> 3) > v12);
    }
  }
  v45 = (void **)&v21;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v45);
  if ((char)v26 < 0)
    operator delete(__p);
  return v10 != v9;
}

void sub_1BF810C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  *(_QWORD *)(v21 - 144) = &a13;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v21 - 144));
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptor::DebugString(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  char SourceLocation;
  int v9;
  std::string *p_b;
  const char *v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  std::string *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  google::protobuf *v24;
  char *v25;
  uint64_t v26;
  int v27;
  std::string *v28;
  const char *v29;
  uint64_t v30;
  std::string *p_p;
  int v32;
  uint64_t v33;
  int v34;
  std::string *v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  std::string __p;
  _BYTE v44[8];
  uint64_t v45;
  void *v46[2];
  void *v47[2];
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int16 v51;
  char v52;
  std::string v53;
  std::string __b;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  const char *v71;
  int v72;
  _BYTE v73[36];
  std::string *v74;
  int v75;
  _BYTE v76[36];
  uint64_t v77;

  v77 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  v50 = 0;
  v48 = 0u;
  v49 = 0u;
  *(_OWORD *)v46 = 0u;
  *(_OWORD *)v47 = 0u;
  v51 = *(_WORD *)a4;
  v52 = *(_BYTE *)(a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v53, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  else
    v53 = __b;
  if (*(_BYTE *)a4)
    SourceLocation = google::protobuf::EnumDescriptor::GetSourceLocation(a1, (uint64_t)&v45);
  else
    SourceLocation = 0;
  v44[0] = SourceLocation;
  v9 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  v74 = p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v9 = __b.__r_.__value_.__r.__words[1];
  v75 = v9;
  v11 = *(const char **)a1;
  v12 = *(char *)(*(_QWORD *)a1 + 23);
  v13 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  if (v12 < 0)
    v11 = **(const char ***)a1;
  v71 = v11;
  v14 = v12;
  if (v12 < 0)
    v14 = v13;
  v72 = v14;
  v69 = 0;
  v70 = -1;
  v67 = 0;
  v68 = -1;
  v65 = 0;
  v66 = -1;
  v63 = 0;
  v64 = -1;
  v61 = 0;
  v62 = -1;
  v59 = 0;
  v60 = -1;
  v57 = 0;
  v58 = -1;
  v55 = 0;
  v56 = -1;
  *(_QWORD *)&v36 = &v61;
  *((_QWORD *)&v36 + 1) = &v59;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0enum $1 {\n", (uint64_t)&v74, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, (uint64_t)&v63, v36, (uint64_t)&v57, (uint64_t)&v55);
  v15 = a2 + 1;
  if (*(int *)(a1 + 44) >= 1)
  {
    v16 = 0;
    v17 = 0;
    do
    {
      google::protobuf::EnumValueDescriptor::DebugString(*(_QWORD *)(a1 + 48) + v16, v15, (std::string *)a3, (__int16 *)a4);
      ++v17;
      v16 += 40;
    }
    while (v17 < *(int *)(a1 + 44));
  }
  if (*(int *)(a1 + 56) > 0)
  {
    v18 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    v19 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v19 = (std::string *)__b.__r_.__value_.__r.__words[0];
    v74 = v19;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v18 = __b.__r_.__value_.__r.__words[1];
    v75 = v18;
    v71 = 0;
    v72 = -1;
    v69 = 0;
    v70 = -1;
    v67 = 0;
    v68 = -1;
    v65 = 0;
    v66 = -1;
    v63 = 0;
    v64 = -1;
    v61 = 0;
    v62 = -1;
    v59 = 0;
    v60 = -1;
    v57 = 0;
    v58 = -1;
    v55 = 0;
    v56 = -1;
    *(_QWORD *)&v37 = &v61;
    *((_QWORD *)&v37 + 1) = &v59;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&v74, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, (uint64_t)&v63, v37, (uint64_t)&v57, (uint64_t)&v55);
    if (*(int *)(a1 + 56) >= 1)
    {
      v21 = 0;
      v22 = 0;
      do
      {
        v23 = (unsigned int *)(*(_QWORD *)(a1 + 64) + v21);
        v24 = (google::protobuf *)v23[1];
        if ((_DWORD)v24 == *v23)
        {
          v74 = (std::string *)google::protobuf::FastInt32ToBuffer(v24, v76, v20);
          v75 = strlen((const char *)v74);
          v71 = 0;
          v72 = -1;
          v69 = 0;
          v70 = -1;
          v67 = 0;
          v68 = -1;
          v65 = 0;
          v66 = -1;
          v63 = 0;
          v64 = -1;
          v61 = 0;
          v62 = -1;
          v59 = 0;
          v60 = -1;
          v57 = 0;
          v58 = -1;
          v55 = 0;
          v56 = -1;
          *((_QWORD *)&v38 + 1) = &v59;
          *(_QWORD *)&v38 = &v61;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0, ", (uint64_t)&v74, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, (uint64_t)&v63, v38, (uint64_t)&v57, (uint64_t)&v55);
        }
        else
        {
          v74 = (std::string *)google::protobuf::FastInt32ToBuffer((google::protobuf *)*v23, v76, v20);
          v75 = strlen((const char *)v74);
          v71 = google::protobuf::FastInt32ToBuffer((google::protobuf *)v23[1], v73, v25);
          v72 = strlen(v71);
          v69 = 0;
          v70 = -1;
          v67 = 0;
          v68 = -1;
          v65 = 0;
          v66 = -1;
          v63 = 0;
          v64 = -1;
          v61 = 0;
          v62 = -1;
          v59 = 0;
          v60 = -1;
          v57 = 0;
          v58 = -1;
          v55 = 0;
          v56 = -1;
          *((_QWORD *)&v39 + 1) = &v59;
          *(_QWORD *)&v39 = &v61;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0 to $1, ", (uint64_t)&v74, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, (uint64_t)&v63, v39, (uint64_t)&v57, (uint64_t)&v55);
        }
        ++v22;
        v21 += 8;
      }
      while (v22 < *(int *)(a1 + 56));
    }
    if (*(char *)(a3 + 23) < 0)
      v26 = *(_QWORD *)(a3 + 8);
    else
      v26 = *(unsigned __int8 *)(a3 + 23);
    std::string::replace((std::string *)a3, v26 - 2, 2uLL, ";\n");
  }
  if (*(int *)(a1 + 60) >= 1)
  {
    v27 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    v28 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v28 = (std::string *)__b.__r_.__value_.__r.__words[0];
    v74 = v28;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v27 = __b.__r_.__value_.__r.__words[1];
    v75 = v27;
    v71 = 0;
    v72 = -1;
    v69 = 0;
    v70 = -1;
    v67 = 0;
    v68 = -1;
    v65 = 0;
    v66 = -1;
    v63 = 0;
    v64 = -1;
    v61 = 0;
    v62 = -1;
    v59 = 0;
    v60 = -1;
    v57 = 0;
    v58 = -1;
    v55 = 0;
    v56 = -1;
    *(_QWORD *)&v40 = &v61;
    *((_QWORD *)&v40 + 1) = &v59;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&v74, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, (uint64_t)&v63, v40, (uint64_t)&v57, (uint64_t)&v55);
    if (*(int *)(a1 + 60) >= 1)
    {
      v30 = 0;
      do
      {
        google::protobuf::CEscape(*(uint64_t **)(*(_QWORD *)(a1 + 72) + 8 * v30), v29, &__p);
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        v74 = p_p;
        v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v32 = __p.__r_.__value_.__r.__words[1];
        v75 = v32;
        v71 = 0;
        v72 = -1;
        v69 = 0;
        v70 = -1;
        v67 = 0;
        v68 = -1;
        v65 = 0;
        v66 = -1;
        v63 = 0;
        v64 = -1;
        v61 = 0;
        v62 = -1;
        v59 = 0;
        v60 = -1;
        v57 = 0;
        v58 = -1;
        v55 = 0;
        v56 = -1;
        *(_QWORD *)&v41 = &v61;
        *((_QWORD *)&v41 + 1) = &v59;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "\"$0\", ", (uint64_t)&v74, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, (uint64_t)&v63, v41, (uint64_t)&v57, (uint64_t)&v55);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        ++v30;
      }
      while (v30 < *(int *)(a1 + 60));
    }
    if (*(char *)(a3 + 23) < 0)
      v33 = *(_QWORD *)(a3 + 8);
    else
      v33 = *(unsigned __int8 *)(a3 + 23);
    std::string::replace((std::string *)a3, v33 - 2, 2uLL, ";\n");
  }
  v34 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  v35 = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v35 = (std::string *)__b.__r_.__value_.__r.__words[0];
  v74 = v35;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v34 = __b.__r_.__value_.__r.__words[1];
  v75 = v34;
  v71 = 0;
  v72 = -1;
  v69 = 0;
  v70 = -1;
  v67 = 0;
  v68 = -1;
  v65 = 0;
  v66 = -1;
  v63 = 0;
  v64 = -1;
  v61 = 0;
  v62 = -1;
  v59 = 0;
  v60 = -1;
  v57 = 0;
  v58 = -1;
  v55 = 0;
  v56 = -1;
  *(_QWORD *)&v42 = &v61;
  *((_QWORD *)&v42 + 1) = &v59;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0}\n", (uint64_t)&v74, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, (uint64_t)&v63, v42, (uint64_t)&v57, (uint64_t)&v55);
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v53.__r_.__value_.__l.__data_);
  v74 = (std::string *)&v49;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v74);
  if (SHIBYTE(v48) < 0)
    operator delete(v47[1]);
  if (SHIBYTE(v47[0]) < 0)
    operator delete(v46[0]);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__b.__r_.__value_.__l.__data_);
}

void sub_1BF811428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  uint64_t v49;

  *(_QWORD *)(v49 - 144) = &a34;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v49 - 144));
  if (a33 < 0)
    operator delete(__p);
  if (a27 < 0)
    operator delete(a22);
  if (a49 < 0)
    operator delete(a44);
  _Unwind_Resume(a1);
}

void google::protobuf::Descriptor::DebugString(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  char SourceLocation;
  int v11;
  std::string *p_b;
  const char *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  int v31;
  uint64_t i;
  unint64_t v33;
  _QWORD *j;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  std::string *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  std::string *v52;
  int v53;
  std::string *v54;
  const char *v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  std::string *v61;
  int v62;
  std::string *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int *v67;
  google::protobuf *v68;
  char *v69;
  uint64_t v70;
  int v71;
  std::string *v72;
  const char *v73;
  uint64_t v74;
  std::string *p_p;
  int v76;
  uint64_t v77;
  int v78;
  std::string *v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  int v91;
  std::string __p;
  uint64_t *v93;
  _QWORD *v94[2];
  _BYTE v95[8];
  uint64_t v96;
  void *v97[2];
  void *v98[2];
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  __int16 v102;
  char v103;
  std::string v104;
  std::string __b;
  uint64_t v106;
  int v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  int v119;
  const char *v120;
  int v121;
  _BYTE v122[36];
  const char *v123;
  int v124;
  _BYTE v125[36];
  std::string *v126;
  _QWORD v127[7];

  v127[5] = *MEMORY[0x1E0C80C00];
  if (!*(_BYTE *)(*(_QWORD *)(a1 + 32) + 75))
  {
    std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
    v101 = 0;
    v99 = 0u;
    v100 = 0u;
    *(_OWORD *)v97 = 0u;
    *(_OWORD *)v98 = 0u;
    v102 = *(_WORD *)a4;
    v103 = *(_BYTE *)(a4 + 2);
    if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
      std::string::__init_copy_ctor_external(&v104, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
    else
      v104 = __b;
    if (*(_BYTE *)a4)
      SourceLocation = google::protobuf::Descriptor::GetSourceLocation(a1, (uint64_t)&v96);
    else
      SourceLocation = 0;
    v95[0] = SourceLocation;
    if (a5)
    {
      v11 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      p_b = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
      v126 = p_b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v11 = __b.__r_.__value_.__r.__words[1];
      LODWORD(v127[0]) = v11;
      v13 = *(const char **)a1;
      v14 = *(char *)(*(_QWORD *)a1 + 23);
      v15 = *(_QWORD *)(*(_QWORD *)a1 + 8);
      if (v14 < 0)
        v13 = **(const char ***)a1;
      v123 = v13;
      v16 = v14;
      if (v14 < 0)
        v16 = v15;
      v124 = v16;
      v120 = 0;
      v121 = -1;
      v118 = 0;
      v119 = -1;
      v116 = 0;
      v117 = -1;
      v114 = 0;
      v115 = -1;
      v112 = 0;
      v113 = -1;
      v110 = 0;
      v111 = -1;
      v108 = 0;
      v109 = -1;
      v106 = 0;
      v107 = -1;
      *(_QWORD *)&v80 = &v112;
      *((_QWORD *)&v80 + 1) = &v110;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0message $1", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v80, (uint64_t)&v108, (uint64_t)&v106);
    }
    std::string::append((std::string *)a3, " {\n");
    v17 = (a2 + 1);
    v91 = a2;
    v94[0] = 0;
    v94[1] = 0;
    v93 = (uint64_t *)v94;
    if (*(int *)(a1 + 104) >= 1)
    {
      v19 = 0;
      v20 = 0;
      do
      {
        v21 = *(_QWORD *)(a1 + 40);
        v22 = v21 + v19;
        v23 = *(unint64_t **)(v21 + v19 + 48);
        if (v23)
        {
          v120 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
          v118 = v21 + v19;
          v24 = atomic_load(v23);
          if (v24 != -1)
          {
            v126 = (std::string *)&v120;
            v127[0] = &v118;
            v123 = (const char *)&v126;
            std::__call_once(v23, &v123, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v22 + 56) == 10)
        {
          v126 = (std::string *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(*(_QWORD *)(a1 + 40) + v19));
          std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>(&v93, (unint64_t *)&v126, (uint64_t *)&v126);
        }
        ++v20;
        v19 += 152;
      }
      while (v20 < *(int *)(a1 + 104));
    }
    if (*(int *)(a1 + 124) >= 1)
    {
      v25 = 0;
      v26 = 0;
      do
      {
        v27 = *(_QWORD *)(a1 + 80);
        v28 = v27 + v25;
        v29 = *(unint64_t **)(v27 + v25 + 48);
        if (v29)
        {
          v120 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
          v118 = v27 + v25;
          v30 = atomic_load(v29);
          if (v30 != -1)
          {
            v126 = (std::string *)&v120;
            v127[0] = &v118;
            v123 = (const char *)&v126;
            std::__call_once(v29, &v123, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v28 + 56) == 10)
        {
          v126 = (std::string *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(*(_QWORD *)(a1 + 80) + v25));
          std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>(&v93, (unint64_t *)&v126, (uint64_t *)&v126);
        }
        ++v26;
        v25 += 152;
      }
      while (v26 < *(int *)(a1 + 124));
    }
    v31 = *(_DWORD *)(a1 + 112);
    if (v31 >= 1)
    {
      for (i = 0; i < v31; ++i)
      {
        v33 = *(_QWORD *)(a1 + 56) + 144 * i;
        for (j = v94[0]; j; j = (_QWORD *)*j)
        {
          v35 = j[4];
          if (v33 >= v35)
          {
            if (v35 >= v33)
              goto LABEL_42;
            ++j;
          }
        }
        google::protobuf::Descriptor::DebugString(v33, v17, a3, a4, 1);
        v31 = *(_DWORD *)(a1 + 112);
LABEL_42:
        ;
      }
    }
    if (*(int *)(a1 + 116) >= 1)
    {
      v36 = 0;
      v37 = 0;
      do
      {
        google::protobuf::EnumDescriptor::DebugString(*(_QWORD *)(a1 + 64) + v36, v17, a3, a4);
        ++v37;
        v36 += 80;
      }
      while (v37 < *(int *)(a1 + 116));
    }
    if (*(int *)(a1 + 104) >= 1)
    {
      v38 = 0;
      v39 = 0;
      do
      {
        v40 = *(_QWORD *)(a1 + 40) + v38;
        v41 = *(_QWORD *)(v40 + 88);
        if (v41)
        {
          if (v40 == **(_QWORD **)(v41 + 32))
            google::protobuf::OneofDescriptor::DebugString(*(_QWORD *)(v40 + 88), v17, (std::string *)a3, (__int16 *)a4);
        }
        else
        {
          google::protobuf::FieldDescriptor::DebugString(v40, v17, 0, a3, a4);
        }
        ++v39;
        v38 += 152;
      }
      while (v39 < *(int *)(a1 + 104));
    }
    if (*(int *)(a1 + 120) >= 1)
    {
      v42 = 0;
      v43 = 0;
      do
      {
        v44 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
        v45 = (std::string *)__b.__r_.__value_.__r.__words[0];
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v45 = &__b;
        v126 = v45;
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v44 = __b.__r_.__value_.__r.__words[1];
        LODWORD(v127[0]) = v44;
        v123 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(*(_QWORD *)(a1 + 72) + v42), v125, v18);
        v124 = strlen(v123);
        v120 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*(_DWORD *)(*(_QWORD *)(a1 + 72) + v42 + 4) - 1), v122, v46);
        v121 = strlen(v120);
        v118 = 0;
        v119 = -1;
        v116 = 0;
        v117 = -1;
        v114 = 0;
        v115 = -1;
        v112 = 0;
        v113 = -1;
        v110 = 0;
        v111 = -1;
        v108 = 0;
        v109 = -1;
        v106 = 0;
        v107 = -1;
        *(_QWORD *)&v81 = &v112;
        *((_QWORD *)&v81 + 1) = &v110;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  extensions $1 to $2;\n",
          (uint64_t)&v126,
          (uint64_t)&v123,
          (uint64_t)&v120,
          (uint64_t)&v118,
          (uint64_t)&v116,
          (uint64_t)&v114,
          v81,
          (uint64_t)&v108,
          (uint64_t)&v106);
        ++v43;
        v42 += 16;
      }
      while (v43 < *(int *)(a1 + 120));
    }
    if (*(int *)(a1 + 124) >= 1)
    {
      v47 = 0;
      v48 = 0;
      v49 = 80;
      do
      {
        v50 = *(_QWORD *)(a1 + 80);
        if (*(_QWORD *)(v50 + v49) != v48)
        {
          v48 = *(_QWORD *)(v50 + v49);
          if (v49 != 80)
          {
            v51 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
            v52 = (std::string *)__b.__r_.__value_.__r.__words[0];
            if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v52 = &__b;
            v126 = v52;
            if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              v51 = __b.__r_.__value_.__r.__words[1];
            LODWORD(v127[0]) = v51;
            v123 = 0;
            v124 = -1;
            v120 = 0;
            v121 = -1;
            v118 = 0;
            v119 = -1;
            v116 = 0;
            v117 = -1;
            v114 = 0;
            v115 = -1;
            v112 = 0;
            v113 = -1;
            v110 = 0;
            v111 = -1;
            v108 = 0;
            v109 = -1;
            v106 = 0;
            v107 = -1;
            *((_QWORD *)&v82 + 1) = &v110;
            *(_QWORD *)&v82 = &v112;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  }\n", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v82, (uint64_t)&v108, (uint64_t)&v106);
            v48 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + v49);
          }
          v53 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
          v54 = (std::string *)__b.__r_.__value_.__r.__words[0];
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v54 = &__b;
          v126 = v54;
          if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v53 = __b.__r_.__value_.__r.__words[1];
          LODWORD(v127[0]) = v53;
          v55 = *(const char **)(v48 + 8);
          v56 = v55[23];
          v57 = *((_QWORD *)v55 + 1);
          if (v56 < 0)
            v55 = *(const char **)v55;
          v123 = v55;
          v58 = v56;
          if (v56 < 0)
            v58 = v57;
          v124 = v58;
          v120 = 0;
          v121 = -1;
          v118 = 0;
          v119 = -1;
          v116 = 0;
          v117 = -1;
          v114 = 0;
          v115 = -1;
          v112 = 0;
          v113 = -1;
          v110 = 0;
          v111 = -1;
          v108 = 0;
          v109 = -1;
          v106 = 0;
          v107 = -1;
          *((_QWORD *)&v83 + 1) = &v110;
          *(_QWORD *)&v83 = &v112;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  extend .$1 {\n", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v83, (uint64_t)&v108, (uint64_t)&v106);
          v50 = *(_QWORD *)(a1 + 80);
        }
        google::protobuf::FieldDescriptor::DebugString(v50 + v49 - 80, (v91 + 2), 0, a3, a4);
        ++v47;
        v59 = *(int *)(a1 + 124);
        v49 += 152;
      }
      while (v47 < v59);
      if ((int)v59 > 0)
      {
        v60 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
        v61 = &__b;
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v61 = (std::string *)__b.__r_.__value_.__r.__words[0];
        v126 = v61;
        if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v60 = __b.__r_.__value_.__r.__words[1];
        LODWORD(v127[0]) = v60;
        v123 = 0;
        v124 = -1;
        v120 = 0;
        v121 = -1;
        v118 = 0;
        v119 = -1;
        v116 = 0;
        v117 = -1;
        v114 = 0;
        v115 = -1;
        v112 = 0;
        v113 = -1;
        v110 = 0;
        v111 = -1;
        v108 = 0;
        v109 = -1;
        v106 = 0;
        v107 = -1;
        *(_QWORD *)&v84 = &v112;
        *((_QWORD *)&v84 + 1) = &v110;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  }\n", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v84, (uint64_t)&v108, (uint64_t)&v106);
      }
    }
    if (*(int *)(a1 + 128) >= 1)
    {
      v62 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      v63 = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v63 = (std::string *)__b.__r_.__value_.__r.__words[0];
      v126 = v63;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v62 = __b.__r_.__value_.__r.__words[1];
      LODWORD(v127[0]) = v62;
      v123 = 0;
      v124 = -1;
      v120 = 0;
      v121 = -1;
      v118 = 0;
      v119 = -1;
      v116 = 0;
      v117 = -1;
      v114 = 0;
      v115 = -1;
      v112 = 0;
      v113 = -1;
      v110 = 0;
      v111 = -1;
      v108 = 0;
      v109 = -1;
      v106 = 0;
      v107 = -1;
      *(_QWORD *)&v85 = &v112;
      *((_QWORD *)&v85 + 1) = &v110;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v85, (uint64_t)&v108, (uint64_t)&v106);
      if (*(int *)(a1 + 128) >= 1)
      {
        v65 = 0;
        v66 = 0;
        do
        {
          v67 = (unsigned int *)(*(_QWORD *)(a1 + 88) + v65);
          v68 = (google::protobuf *)*v67;
          if (v67[1] == (_DWORD)v68 + 1)
          {
            v126 = (std::string *)google::protobuf::FastInt32ToBuffer(v68, (_BYTE *)v127 + 4, v64);
            LODWORD(v127[0]) = strlen((const char *)v126);
            v123 = 0;
            v124 = -1;
            v120 = 0;
            v121 = -1;
            v118 = 0;
            v119 = -1;
            v116 = 0;
            v117 = -1;
            v114 = 0;
            v115 = -1;
            v112 = 0;
            v113 = -1;
            v110 = 0;
            v111 = -1;
            v108 = 0;
            v109 = -1;
            v106 = 0;
            v107 = -1;
            *((_QWORD *)&v86 + 1) = &v110;
            *(_QWORD *)&v86 = &v112;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0, ", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v86, (uint64_t)&v108, (uint64_t)&v106);
          }
          else
          {
            v126 = (std::string *)google::protobuf::FastInt32ToBuffer(v68, (_BYTE *)v127 + 4, v64);
            LODWORD(v127[0]) = strlen((const char *)v126);
            v123 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(v67[1] - 1), v125, v69);
            v124 = strlen(v123);
            v120 = 0;
            v121 = -1;
            v118 = 0;
            v119 = -1;
            v116 = 0;
            v117 = -1;
            v114 = 0;
            v115 = -1;
            v112 = 0;
            v113 = -1;
            v110 = 0;
            v111 = -1;
            v108 = 0;
            v109 = -1;
            v106 = 0;
            v107 = -1;
            *((_QWORD *)&v87 + 1) = &v110;
            *(_QWORD *)&v87 = &v112;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0 to $1, ", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v87, (uint64_t)&v108, (uint64_t)&v106);
          }
          ++v66;
          v65 += 8;
        }
        while (v66 < *(int *)(a1 + 128));
      }
      if (*(char *)(a3 + 23) < 0)
        v70 = *(_QWORD *)(a3 + 8);
      else
        v70 = *(unsigned __int8 *)(a3 + 23);
      std::string::replace((std::string *)a3, v70 - 2, 2uLL, ";\n");
    }
    if (*(int *)(a1 + 132) >= 1)
    {
      v71 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
      v72 = &__b;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v72 = (std::string *)__b.__r_.__value_.__r.__words[0];
      v126 = v72;
      if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v71 = __b.__r_.__value_.__r.__words[1];
      LODWORD(v127[0]) = v71;
      v123 = 0;
      v124 = -1;
      v120 = 0;
      v121 = -1;
      v118 = 0;
      v119 = -1;
      v116 = 0;
      v117 = -1;
      v114 = 0;
      v115 = -1;
      v112 = 0;
      v113 = -1;
      v110 = 0;
      v111 = -1;
      v108 = 0;
      v109 = -1;
      v106 = 0;
      v107 = -1;
      *(_QWORD *)&v88 = &v112;
      *((_QWORD *)&v88 + 1) = &v110;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v88, (uint64_t)&v108, (uint64_t)&v106);
      if (*(int *)(a1 + 132) >= 1)
      {
        v74 = 0;
        do
        {
          google::protobuf::CEscape(*(uint64_t **)(*(_QWORD *)(a1 + 96) + 8 * v74), v73, &__p);
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            p_p = &__p;
          v126 = p_p;
          v76 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v76 = __p.__r_.__value_.__r.__words[1];
          LODWORD(v127[0]) = v76;
          v123 = 0;
          v124 = -1;
          v120 = 0;
          v121 = -1;
          v118 = 0;
          v119 = -1;
          v116 = 0;
          v117 = -1;
          v114 = 0;
          v115 = -1;
          v112 = 0;
          v113 = -1;
          v110 = 0;
          v111 = -1;
          v108 = 0;
          v109 = -1;
          v106 = 0;
          v107 = -1;
          *(_QWORD *)&v89 = &v112;
          *((_QWORD *)&v89 + 1) = &v110;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "\"$0\", ", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v89, (uint64_t)&v108, (uint64_t)&v106);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          ++v74;
        }
        while (v74 < *(int *)(a1 + 132));
      }
      if (*(char *)(a3 + 23) < 0)
        v77 = *(_QWORD *)(a3 + 8);
      else
        v77 = *(unsigned __int8 *)(a3 + 23);
      std::string::replace((std::string *)a3, v77 - 2, 2uLL, ";\n");
    }
    v78 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    v79 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v79 = (std::string *)__b.__r_.__value_.__r.__words[0];
    v126 = v79;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v78 = __b.__r_.__value_.__r.__words[1];
    LODWORD(v127[0]) = v78;
    v123 = 0;
    v124 = -1;
    v120 = 0;
    v121 = -1;
    v118 = 0;
    v119 = -1;
    v116 = 0;
    v117 = -1;
    v114 = 0;
    v115 = -1;
    v112 = 0;
    v113 = -1;
    v110 = 0;
    v111 = -1;
    v108 = 0;
    v109 = -1;
    v106 = 0;
    v107 = -1;
    *(_QWORD *)&v90 = &v112;
    *((_QWORD *)&v90 + 1) = &v110;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0}\n", (uint64_t)&v126, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v90, (uint64_t)&v108, (uint64_t)&v106);
    std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy((uint64_t)&v93, v94[0]);
    if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v104.__r_.__value_.__l.__data_);
    v126 = (std::string *)&v100;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v126);
    if (SHIBYTE(v99) < 0)
      operator delete(v98[1]);
    if (SHIBYTE(v98[0]) < 0)
      operator delete(v97[0]);
    if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__b.__r_.__value_.__l.__data_);
  }
}

void sub_1BF8122C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,_QWORD *a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,void *__p,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy((uint64_t)&a20, a21);
  if (a53 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptor::DebugString(uint64_t a1, int a2, int a3, std::string *a4, uint64_t a5)
{
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  int v14;
  uint64_t v15;
  std::string *p_p;
  int v17;
  unint64_t *v18;
  unint64_t v19;
  std::string::value_type SourceLocation;
  char *v21;
  int v22;
  std::string *p_b;
  int v24;
  std::string *v25;
  int v26;
  std::string *v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t (***v30)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (*v31)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v32;
  uint64_t (*v33)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v34;
  char *v35;
  std::string *v36;
  int v37;
  const std::string::value_type *v38;
  const char *v39;
  std::string *v40;
  std::string::size_type size;
  int v42;
  const std::string::value_type *v43;
  std::string *v44;
  std::string::size_type v45;
  unint64_t *v46;
  unint64_t v47;
  const std::string::value_type *v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  std::string v53;
  std::string __p;
  std::string v55;
  std::string __b;
  void *v57;
  uint64_t v58;
  unsigned __int8 v59;
  std::string v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  __int16 v66;
  char v67;
  std::string v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t (*v73)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v74;
  const char **v75;
  int v76;
  const char *v77;
  uint64_t *v78;
  uint64_t (*v79)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v80;
  uint64_t (***v81)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v82;
  uint64_t (**v83)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  const char **v84;
  std::string v85[2];
  uint64_t v86;

  v86 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  memset(&v55, 0, sizeof(v55));
  v10 = *(unint64_t **)(a1 + 48);
  if (v10)
  {
    v83 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    v81 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
    v11 = atomic_load(v10);
    if (v11 != -1)
    {
      v60.__r_.__value_.__r.__words[0] = (std::string::size_type)&v83;
      v60.__r_.__value_.__l.__size_ = (std::string::size_type)&v81;
      v85[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v60;
      std::__call_once(v10, v85, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(a1 + 56) == 11 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32) + 75))
  {
    v12 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString(*(google::protobuf::FieldDescriptor **)(v12 + 40), &v57);
    v13 = v57;
    if ((v59 & 0x80u) == 0)
      v13 = &v57;
    v60.__r_.__value_.__r.__words[0] = (std::string::size_type)v13;
    v14 = v59;
    if ((v59 & 0x80u) != 0)
      v14 = v58;
    LODWORD(v60.__r_.__value_.__r.__words[1]) = v14;
    v15 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)(*(_QWORD *)(v15 + 40) + 152), &__p);
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    v85[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v17 = __p.__r_.__value_.__r.__words[1];
    LODWORD(v85[0].__r_.__value_.__r.__words[1]) = v17;
    v83 = 0;
    LODWORD(v84) = -1;
    v81 = 0;
    v82 = -1;
    v79 = 0;
    v80 = -1;
    v77 = 0;
    LODWORD(v78) = -1;
    v75 = 0;
    v76 = -1;
    v73 = 0;
    v74 = -1;
    v71 = 0;
    v72 = -1;
    v69 = 0;
    v70 = -1;
    *(_QWORD *)&v50 = &v75;
    *((_QWORD *)&v50 + 1) = &v73;
    google::protobuf::strings::SubstituteAndAppend(&v55, "map<$0, $1>", (uint64_t)&v60, (uint64_t)v85, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, v50, (uint64_t)&v71, (uint64_t)&v69);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if ((char)v59 < 0)
      operator delete(v57);
  }
  else
  {
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)a1, &v60);
    if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v55.__r_.__value_.__l.__data_);
    v55 = v60;
  }
  if (*(_DWORD *)(a1 + 60) == 1 && (a3 == 1 || *(_DWORD *)(*(_QWORD *)(a1 + 40) + 60) == 3))
    goto LABEL_29;
  v18 = *(unint64_t **)(a1 + 48);
  if (v18)
  {
    v83 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    v81 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
    v19 = atomic_load(v18);
    if (v19 != -1)
    {
      v60.__r_.__value_.__r.__words[0] = (std::string::size_type)&v83;
      v60.__r_.__value_.__l.__size_ = (std::string::size_type)&v81;
      v85[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v60;
      std::__call_once(v18, v85, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(a1 + 56) == 11 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32) + 75))
  {
LABEL_29:
    memset(&__p, 0, sizeof(__p));
  }
  else
  {
    memset(&__p, 0, sizeof(__p));
    MEMORY[0x1C3B8D53C](&__p, google::protobuf::FieldDescriptor::kLabelToName[*(unsigned int *)(a1 + 60)]);
    std::string::push_back(&__p, 32);
  }
  v65 = 0;
  v64 = 0u;
  v63 = 0u;
  v62 = 0u;
  v61 = 0u;
  v66 = *(_WORD *)a5;
  v67 = *(_BYTE *)(a5 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v68, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  else
    v68 = __b;
  if (*(_BYTE *)a5)
    SourceLocation = google::protobuf::FieldDescriptor::GetSourceLocation(a1, (uint64_t)&v60.__r_.__value_.__l.__size_);
  else
    SourceLocation = 0;
  v60.__r_.__value_.__s.__data_[0] = SourceLocation;
  v22 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  v85[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v22 = __b.__r_.__value_.__r.__words[1];
  LODWORD(v85[0].__r_.__value_.__r.__words[1]) = v22;
  v24 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  v25 = &__p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
  v83 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v25;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v24 = __p.__r_.__value_.__r.__words[1];
  LODWORD(v84) = v24;
  v26 = HIBYTE(v55.__r_.__value_.__r.__words[2]);
  v27 = &v55;
  if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v27 = (std::string *)v55.__r_.__value_.__r.__words[0];
  v81 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v27;
  if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v26 = v55.__r_.__value_.__r.__words[1];
  v82 = v26;
  v28 = *(unint64_t **)(a1 + 48);
  if (v28)
  {
    v73 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v71 = a1;
    v29 = atomic_load(v28);
    if (v29 != -1)
    {
      v77 = (const char *)&v73;
      v78 = &v71;
      v75 = &v77;
      std::__call_once(v28, &v75, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v30 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
  if (*(_DWORD *)(a1 + 56) == 10)
    v30 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
  v31 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))*v30;
  v32 = *((char *)*v30 + 23);
  v33 = (*v30)[1];
  if (v32 < 0)
    v31 = **v30;
  v79 = v31;
  v34 = v32;
  if (v32 < 0)
    v34 = (int)v33;
  v80 = v34;
  v77 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(a1 + 68), (_BYTE *)&v78 + 4, v21);
  LODWORD(v78) = strlen(v77);
  v75 = 0;
  v76 = -1;
  v73 = 0;
  v74 = -1;
  v71 = 0;
  v72 = -1;
  v69 = 0;
  v70 = -1;
  v57 = 0;
  LODWORD(v58) = -1;
  *(_QWORD *)&v51 = &v73;
  *((_QWORD *)&v51 + 1) = &v71;
  google::protobuf::strings::SubstituteAndAppend(a4, "$0$1$2 $3 = $4", (uint64_t)v85, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, v51, (uint64_t)&v69, (uint64_t)&v57);
  if (*(_BYTE *)(a1 + 64))
  {
    google::protobuf::FieldDescriptor::DefaultValueAsString((google::protobuf::FieldDescriptor *)a1, (char *)1, v35, &v53);
    v36 = (std::string *)v53.__r_.__value_.__r.__words[0];
    if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v36 = &v53;
    v85[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v36;
    v37 = HIBYTE(v53.__r_.__value_.__r.__words[2]);
    if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v37 = v53.__r_.__value_.__r.__words[1];
    LODWORD(v85[0].__r_.__value_.__r.__words[1]) = v37;
    v83 = 0;
    LODWORD(v84) = -1;
    v81 = 0;
    v82 = -1;
    v79 = 0;
    v80 = -1;
    v77 = 0;
    LODWORD(v78) = -1;
    v75 = 0;
    v76 = -1;
    v73 = 0;
    v74 = -1;
    v71 = 0;
    v72 = -1;
    v69 = 0;
    v70 = -1;
    v57 = 0;
    LODWORD(v58) = -1;
    *(_QWORD *)&v52 = &v73;
    *((_QWORD *)&v52 + 1) = &v71;
    google::protobuf::strings::SubstituteAndAppend(a4, " [default = $0", (uint64_t)v85, (uint64_t)&v83, (uint64_t)&v81, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, v52, (uint64_t)&v69, (uint64_t)&v57);
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v53.__r_.__value_.__l.__data_);
    if (!*(_BYTE *)(a1 + 65))
      goto LABEL_78;
    v38 = ", ";
LABEL_69:
    std::string::append(a4, v38);
    std::string::append(a4, "json_name = \"");
    google::protobuf::CEscape(*(uint64_t **)(a1 + 32), v39, v85);
    if ((v85[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v40 = v85;
    else
      v40 = (std::string *)v85[0].__r_.__value_.__r.__words[0];
    if ((v85[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v85[0].__r_.__value_.__r.__words[2]);
    else
      size = v85[0].__r_.__value_.__l.__size_;
    std::string::append(a4, (const std::string::value_type *)v40, size);
    if (SHIBYTE(v85[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(v85[0].__r_.__value_.__l.__data_);
    std::string::append(a4, "\"");
LABEL_78:
    v42 = 1;
    goto LABEL_79;
  }
  if (*(_BYTE *)(a1 + 65))
  {
    v38 = "[";
    goto LABEL_69;
  }
  v42 = 0;
LABEL_79:
  memset(v85, 0, 24);
  {
    if (v42)
      v43 = ", ";
    else
      v43 = " [";
    std::string::append(a4, v43);
    if ((v85[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v44 = v85;
    else
      v44 = (std::string *)v85[0].__r_.__value_.__r.__words[0];
    if ((v85[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v45 = HIBYTE(v85[0].__r_.__value_.__r.__words[2]);
    else
      v45 = v85[0].__r_.__value_.__l.__size_;
    std::string::append(a4, (const std::string::value_type *)v44, v45);
    goto LABEL_91;
  }
  if (v42)
LABEL_91:
    std::string::append(a4, "]");
  v46 = *(unint64_t **)(a1 + 48);
  if (v46)
  {
    v79 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v77 = (const char *)a1;
    v47 = atomic_load(v46);
    if (v47 != -1)
    {
      v83 = &v79;
      v84 = &v77;
      v81 = &v83;
      std::__call_once(v46, &v81, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(a1 + 56) != 10)
  {
    v48 = ";\n";
    goto LABEL_99;
  }
  if (*(_BYTE *)(a5 + 1))
  {
    v48 = " { ... };\n";
LABEL_99:
    std::string::append(a4, v48);
    goto LABEL_100;
  }
  v49 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
  google::protobuf::Descriptor::DebugString(v49, a2, (uint64_t)a4, a5, 0);
LABEL_100:
  if (SHIBYTE(v85[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(v85[0].__r_.__value_.__l.__data_);
  if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v68.__r_.__value_.__l.__data_);
  v85[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v64;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v85);
  if (SHIBYTE(v63) < 0)
    operator delete(*((void **)&v62 + 1));
  if (SBYTE7(v62) < 0)
    operator delete((void *)v61);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v55.__r_.__value_.__l.__data_);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__b.__r_.__value_.__l.__data_);
}

void sub_1BF812BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a24 < 0)
    operator delete(__p);
  if (a31 < 0)
    operator delete(a26);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofDescriptor::DebugString(uint64_t a1, int a2, std::string *a3, __int16 *a4)
{
  char SourceLocation;
  int v9;
  std::string *p_b;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  std::string *v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[8];
  uint64_t v22;
  void *v23[2];
  void *v24[2];
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int16 v28;
  char v29;
  std::string __p;
  std::string __b;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t *v48;
  int v49;
  std::string *v50;
  int v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  v27 = 0;
  v26 = 0u;
  v25 = 0u;
  *(_OWORD *)v24 = 0u;
  *(_OWORD *)v23 = 0u;
  v28 = *a4;
  v29 = *((_BYTE *)a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  else
    __p = __b;
  if (*(_BYTE *)a4)
    SourceLocation = google::protobuf::OneofDescriptor::GetSourceLocation(a1, (uint64_t)&v22);
  else
    SourceLocation = 0;
  v21[0] = SourceLocation;
  v9 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  v50 = p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v9 = __b.__r_.__value_.__r.__words[1];
  v51 = v9;
  v11 = *(uint64_t **)a1;
  v12 = *(char *)(*(_QWORD *)a1 + 23);
  v13 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  if (v12 < 0)
    v11 = **(uint64_t ***)a1;
  v48 = v11;
  v14 = v12;
  if (v12 < 0)
    v14 = v13;
  v49 = v14;
  v46 = 0;
  v47 = -1;
  v44 = 0;
  v45 = -1;
  v42 = 0;
  v43 = -1;
  v40 = 0;
  v41 = -1;
  v38 = 0;
  v39 = -1;
  v36 = 0;
  v37 = -1;
  v34 = 0;
  v35 = -1;
  v32 = 0;
  v33 = -1;
  *(_QWORD *)&v19 = &v38;
  *((_QWORD *)&v19 + 1) = &v36;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0oneof $1 {", (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, (uint64_t)&v40, v19, (uint64_t)&v34, (uint64_t)&v32);
  v15 = (a2 + 1);
  if (*((_BYTE *)a4 + 2))
  {
    std::string::append(a3, " ... }\n");
  }
  else
  {
    std::string::append(a3, "\n");
    if (*(int *)(a1 + 24) >= 1)
    {
      v16 = 0;
      do
        google::protobuf::FieldDescriptor::DebugString(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * v16++), v15, 1, a3, a4);
      while (v16 < *(int *)(a1 + 24));
    }
    v17 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
    v18 = &__b;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v18 = (std::string *)__b.__r_.__value_.__r.__words[0];
    v50 = v18;
    if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v17 = __b.__r_.__value_.__r.__words[1];
    v51 = v17;
    v48 = 0;
    v49 = -1;
    v46 = 0;
    v47 = -1;
    v44 = 0;
    v45 = -1;
    v42 = 0;
    v43 = -1;
    v40 = 0;
    v41 = -1;
    v38 = 0;
    v39 = -1;
    v36 = 0;
    v37 = -1;
    v34 = 0;
    v35 = -1;
    v32 = 0;
    v33 = -1;
    *(_QWORD *)&v20 = &v38;
    *((_QWORD *)&v20 + 1) = &v36;
    google::protobuf::strings::SubstituteAndAppend(a3, "$0}\n", (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, (uint64_t)&v40, v20, (uint64_t)&v34, (uint64_t)&v32);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v50 = (std::string *)&v26;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v50);
  if (SHIBYTE(v25) < 0)
    operator delete(v24[1]);
  if (SHIBYTE(v24[0]) < 0)
    operator delete(v23[0]);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__b.__r_.__value_.__l.__data_);
}

void sub_1BF813068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptor::DebugStringWithOptions(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  uint64_t *v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t *v30;
  int v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if (*(_BYTE *)(a1 + 66))
  {
    v6 = *(uint64_t **)(*(_QWORD *)(a1 + 80) + 8);
    v7 = *((char *)v6 + 23);
    v8 = v6[1];
    if (v7 < 0)
      v6 = (uint64_t *)*v6;
    v30 = v6;
    v9 = v7;
    if (v7 < 0)
      v9 = v8;
    v31 = v9;
    v28 = 0;
    v29 = -1;
    v26 = 0;
    v27 = -1;
    v24 = 0;
    v25 = -1;
    v22 = 0;
    v23 = -1;
    v20 = 0;
    v21 = -1;
    v18 = 0;
    v19 = -1;
    v16 = 0;
    v17 = -1;
    v14 = 0;
    v15 = -1;
    v12 = 0;
    v13 = -1;
    *(_QWORD *)&v11 = &v18;
    *((_QWORD *)&v11 + 1) = &v16;
    google::protobuf::strings::SubstituteAndAppend(a3, "extend .$0 {\n", (uint64_t)&v30, (uint64_t)&v28, (uint64_t)&v26, (uint64_t)&v24, (uint64_t)&v22, (uint64_t)&v20, v11, (uint64_t)&v14, (uint64_t)&v12);
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  google::protobuf::FieldDescriptor::DebugString(a1, v10, 0, a3, a2);
  if (*(_BYTE *)(a1 + 66))
    std::string::append(a3, "}\n");
}

void sub_1BF813250(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

_QWORD *google::protobuf::FieldDescriptor::FieldTypeNameDebugString@<X0>(google::protobuf::FieldDescriptor *this@<X0>, _QWORD *a2@<X8>)
{
  unint64_t *v4;
  unint64_t v5;
  int v6;
  unint64_t *v8;
  unint64_t v9;
  google::protobuf::FieldDescriptor *v10;
  uint64_t (*v11)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v12)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v13)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  google::protobuf::FieldDescriptor **v14;

  v4 = (unint64_t *)*((_QWORD *)this + 6);
  if (v4)
  {
    v10 = this;
    v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v5 = atomic_load(v4);
    if (v5 != -1)
    {
      v13 = &v11;
      v14 = &v10;
      v12 = &v13;
      std::__call_once(v4, &v12, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v6 = *((_DWORD *)this + 14);
  if (v6 == 14)
  {
    google::protobuf::FieldDescriptor::enum_type(this);
    return (_QWORD *)std::operator+<char>();
  }
  if (v6 == 11)
  {
    google::protobuf::FieldDescriptor::message_type(this);
    return (_QWORD *)std::operator+<char>();
  }
  v8 = (unint64_t *)*((_QWORD *)this + 6);
  if (v8)
  {
    v10 = this;
    v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v9 = atomic_load(v8);
    if (v9 != -1)
    {
      v13 = &v11;
      v14 = &v10;
      v12 = &v13;
      std::__call_once(v8, &v12, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
    v6 = *((_DWORD *)this + 14);
  }
  return std::string::basic_string[abi:ne180100]<0>(a2, google::protobuf::FieldDescriptor::kTypeToName[v6]);
}

BOOL google::protobuf::`anonymous namespace'::FormatBracketedOptions(int a1, const google::protobuf::Message *a2, uint64_t a3, std::string *a4)
{
  std::string *p_p;
  std::string::size_type size;
  _BOOL8 v7;
  std::string __p;
  std::string *v10;
  std::string *v11;
  uint64_t v12;

  v10 = 0;
  v11 = 0;
  v12 = 0;
  {
    google::protobuf::Join<std::vector<std::string>>(", ", &v10, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    std::string::append(a4, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  v7 = v10 != v11;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  return v7;
}

void sub_1BF813418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
    operator delete(__p);
  __p = &a15;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueDescriptor::DebugString(uint64_t a1, int a2, std::string *a3, __int16 *a4)
{
  char SourceLocation;
  char *v9;
  int v10;
  std::string *p_b;
  uint64_t *v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  std::string *p_p;
  __int128 v18;
  __int128 v19;
  std::string __p;
  _BYTE v21[8];
  uint64_t v22;
  void *v23[2];
  void *v24[2];
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int16 v28;
  char v29;
  std::string v30;
  std::string __b;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  const char *v46;
  int v47;
  _BYTE v48[36];
  uint64_t *v49;
  int v50;
  std::string *v51;
  int v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100](&__b, 2 * a2, 32);
  v27 = 0;
  v26 = 0u;
  v25 = 0u;
  *(_OWORD *)v24 = 0u;
  *(_OWORD *)v23 = 0u;
  v28 = *a4;
  v29 = *((_BYTE *)a4 + 2);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v30, __b.__r_.__value_.__l.__data_, __b.__r_.__value_.__l.__size_);
  else
    v30 = __b;
  if (*(_BYTE *)a4)
    SourceLocation = google::protobuf::EnumValueDescriptor::GetSourceLocation(a1, (uint64_t)&v22);
  else
    SourceLocation = 0;
  v21[0] = SourceLocation;
  v10 = HIBYTE(__b.__r_.__value_.__r.__words[2]);
  p_b = &__b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_b = (std::string *)__b.__r_.__value_.__r.__words[0];
  v51 = p_b;
  if ((__b.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    v10 = __b.__r_.__value_.__r.__words[1];
  v52 = v10;
  v12 = *(uint64_t **)a1;
  v13 = *(char *)(*(_QWORD *)a1 + 23);
  v14 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  if (v13 < 0)
    v12 = **(uint64_t ***)a1;
  v49 = v12;
  v15 = v13;
  if (v13 < 0)
    v15 = v14;
  v50 = v15;
  v46 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(a1 + 16), v48, v9);
  v47 = strlen(v46);
  v44 = 0;
  v45 = -1;
  v42 = 0;
  v43 = -1;
  v40 = 0;
  v41 = -1;
  v38 = 0;
  v39 = -1;
  v36 = 0;
  v37 = -1;
  v34 = 0;
  v35 = -1;
  v32 = 0;
  v33 = -1;
  *(_QWORD *)&v18 = &v38;
  *((_QWORD *)&v18 + 1) = &v36;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0$1 = $2", (uint64_t)&v51, (uint64_t)&v49, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, (uint64_t)&v40, v18, (uint64_t)&v34, (uint64_t)&v32);
  memset(&__p, 0, sizeof(__p));
  {
    v16 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    v51 = p_p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v16 = __p.__r_.__value_.__r.__words[1];
    v52 = v16;
    v49 = 0;
    v50 = -1;
    v46 = 0;
    v47 = -1;
    v44 = 0;
    v45 = -1;
    v42 = 0;
    v43 = -1;
    v40 = 0;
    v41 = -1;
    v38 = 0;
    v39 = -1;
    v36 = 0;
    v37 = -1;
    v34 = 0;
    v35 = -1;
    v32 = 0;
    v33 = -1;
    *(_QWORD *)&v19 = &v38;
    *((_QWORD *)&v19 + 1) = &v36;
    google::protobuf::strings::SubstituteAndAppend(a3, " [$0]", (uint64_t)&v51, (uint64_t)&v49, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, (uint64_t)&v40, v19, (uint64_t)&v34, (uint64_t)&v32);
  }
  std::string::append(a3, ";\n");
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v30.__r_.__value_.__l.__data_);
  v51 = (std::string *)&v26;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v51);
  if (SHIBYTE(v25) < 0)
    operator delete(v24[1]);
  if (SHIBYTE(v24[0]) < 0)
    operator delete(v23[0]);
  if (SHIBYTE(__b.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__b.__r_.__value_.__l.__data_);
}

void sub_1BF813784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  uint64_t v50;

  *(_QWORD *)(v50 - 104) = &a35;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v50 - 104));
  if (a34 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);
  if (a50 < 0)
    operator delete(a45);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileDescriptor::GetSourceLocation(uint64_t a1, std::string **a2, uint64_t a3)
{
  std::string *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int *v10;
  std::string *v11;
  uint64_t v12;
  __int128 **v13;
  char v14;
  std::string v15[2];

  if (!a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 2935);
    v6 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: out_location != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  v7 = *(_QWORD *)(a1 + 152);
  if (!v7)
    return 0;
  result = google::protobuf::FileDescriptorTables::GetSourceLocation(*(_QWORD *)(a1 + 144), a2, v7);
  if (!result)
    return result;
  v9 = result;
  v10 = (int *)(result + 48);
  if ((*(_DWORD *)(result + 48) - 3) > 1)
    return 0;
  *(_DWORD *)a3 = *(_DWORD *)google::protobuf::RepeatedField<int>::elements(result + 48);
  if (*v10 <= 1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
    v11 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v11->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  *(_DWORD *)(a3 + 8) = *(_DWORD *)(google::protobuf::RepeatedField<int>::elements((uint64_t)v10) + 4);
  *(_DWORD *)(a3 + 4) = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v10, 2 * (*(_DWORD *)(v9 + 48) != 3));
  *(_DWORD *)(a3 + 12) = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v10, *(_DWORD *)(v9 + 48) - 1);
  std::string::operator=((std::string *)(a3 + 16), *(const std::string **)(v9 + 96));
  std::string::operator=((std::string *)(a3 + 40), *(const std::string **)(v9 + 104));
  v12 = *(_QWORD *)(v9 + 88);
  if (v12)
    v13 = (__int128 **)(v12 + 8);
  else
    v13 = 0;
  std::vector<std::string>::__assign_with_size[abi:ne180100]<google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>>((std::vector<std::string> *)(a3 + 64), v13, &v13[*(int *)(v9 + 80)], *(int *)(v9 + 80));
  return 1;
}

void sub_1BF8139B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::FieldDescriptor::is_packed(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  google::protobuf::FieldDescriptor *v6;
  uint64_t (*v7)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v8;
  _QWORD v9[2];

  if (*((_DWORD *)this + 15) != 3)
    return 0;
  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v6 = this;
    v7 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v9[0] = &v7;
      v9[1] = &v6;
      v8 = v9;
      std::__call_once(v2, &v8, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if ((*((_DWORD *)this + 14) - 13) > 0xFFFFFFFB)
    return 0;
  v4 = *((_QWORD *)this + 15);
  if (*(_DWORD *)(*((_QWORD *)this + 5) + 60) != 2)
  {
    if (!v4 || (*(_BYTE *)(v4 + 40) & 2) == 0)
      return 1;
    return *(unsigned __int8 *)(v4 + 76) != 0;
  }
  if (v4)
    return *(unsigned __int8 *)(v4 + 76) != 0;
  return 0;
}

uint64_t google::protobuf::Descriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  uint64_t SourceLocation;
  void *__p;
  void *v7;
  uint64_t v8;

  __p = 0;
  v7 = 0;
  v8 = 0;
  google::protobuf::Descriptor::GetLocationPath(a1, (uint64_t)&__p);
  SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(_QWORD *)(a1 + 16), (std::string **)&__p, a2);
  if (__p)
  {
    v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1BF813AF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::Descriptor::GetLocationPath(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  _DWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  _DWORD *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  _DWORD *v38;
  int v39;
  char *v40;
  char *v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  int v50;

  v4 = *(_QWORD *)(a1 + 24);
  if (!v4)
  {
    v10 = (_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 16);
    v11 = *(_DWORD **)(a2 + 8);
    if ((unint64_t)v11 >= v9)
    {
      v18 = *(_DWORD **)a2;
      v19 = ((uint64_t)v11 - *(_QWORD *)a2) >> 2;
      v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62)
        goto LABEL_70;
      v21 = v9 - (_QWORD)v18;
      if (v21 >> 1 > v20)
        v20 = v21 >> 1;
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL)
        v22 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v22 = v20;
      if (v22)
      {
        v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2 + 16, v22);
        v18 = *(_DWORD **)a2;
        v11 = *(_DWORD **)(a2 + 8);
      }
      else
      {
        v23 = 0;
      }
      v40 = &v23[4 * v19];
      v41 = &v23[4 * v22];
      *(_DWORD *)v40 = 4;
      v8 = v40 + 4;
      while (v11 != v18)
      {
        v42 = *--v11;
        *((_DWORD *)v40 - 1) = v42;
        v40 -= 4;
      }
      *(_QWORD *)a2 = v40;
      *(_QWORD *)(a2 + 8) = v8;
      *(_QWORD *)(a2 + 16) = v41;
      if (v18)
        operator delete(v18);
    }
    else
    {
      *v11 = 4;
      v8 = v11 + 1;
    }
    *(_QWORD *)(a2 + 8) = v8;
    v43 = *(_QWORD *)(a1 + 24);
    if (v43)
      v44 = (_QWORD *)(v43 + 56);
    else
      v44 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 104);
    v29 = 954437177 * ((unint64_t)(a1 - *v44) >> 4);
    if ((unint64_t)v8 >= *v10)
    {
      v30 = *(_DWORD **)a2;
      v45 = ((uint64_t)v8 - *(_QWORD *)a2) >> 2;
      v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        v47 = *v10 - (_QWORD)v30;
        if (v47 >> 1 > v46)
          v46 = v47 >> 1;
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL)
          v48 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v48 = v46;
        if (v48)
        {
          v49 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2 + 16, v48);
          v30 = *(_DWORD **)a2;
          v8 = *(_DWORD **)(a2 + 8);
        }
        else
        {
          v49 = 0;
        }
        v36 = &v49[4 * v45];
        v37 = &v49[4 * v48];
        *(_DWORD *)v36 = v29;
        v38 = v36 + 4;
        while (v8 != v30)
        {
          v50 = *--v8;
          *((_DWORD *)v36 - 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    }
LABEL_54:
    *v8 = v29;
    v38 = v8 + 1;
    goto LABEL_69;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, a2);
  v6 = (_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  v7 = *(_DWORD **)(a2 + 8);
  if ((unint64_t)v7 >= v5)
  {
    v12 = *(_DWORD **)a2;
    v13 = ((uint64_t)v7 - *(_QWORD *)a2) >> 2;
    v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62)
      goto LABEL_70;
    v15 = v5 - (_QWORD)v12;
    if (v15 >> 1 > v14)
      v14 = v15 >> 1;
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL)
      v16 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v16 = v14;
    if (v16)
    {
      v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2 + 16, v16);
      v12 = *(_DWORD **)a2;
      v7 = *(_DWORD **)(a2 + 8);
    }
    else
    {
      v17 = 0;
    }
    v24 = &v17[4 * v13];
    v25 = &v17[4 * v16];
    *(_DWORD *)v24 = 3;
    v8 = v24 + 4;
    while (v7 != v12)
    {
      v26 = *--v7;
      *((_DWORD *)v24 - 1) = v26;
      v24 -= 4;
    }
    *(_QWORD *)a2 = v24;
    *(_QWORD *)(a2 + 8) = v8;
    *(_QWORD *)(a2 + 16) = v25;
    if (v12)
      operator delete(v12);
  }
  else
  {
    *v7 = 3;
    v8 = v7 + 1;
  }
  *(_QWORD *)(a2 + 8) = v8;
  v27 = *(_QWORD *)(a1 + 24);
  if (v27)
    v28 = (_QWORD *)(v27 + 56);
  else
    v28 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 104);
  v29 = 954437177 * ((unint64_t)(a1 - *v28) >> 4);
  if ((unint64_t)v8 < *v6)
    goto LABEL_54;
  v30 = *(_DWORD **)a2;
  v31 = ((uint64_t)v8 - *(_QWORD *)a2) >> 2;
  v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62)
    goto LABEL_70;
  v33 = *v6 - (_QWORD)v30;
  if (v33 >> 1 > v32)
    v32 = v33 >> 1;
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL)
    v34 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v34 = v32;
  if (v34)
  {
    v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(a2 + 16, v34);
    v30 = *(_DWORD **)a2;
    v8 = *(_DWORD **)(a2 + 8);
  }
  else
  {
    v35 = 0;
  }
  v36 = &v35[4 * v31];
  v37 = &v35[4 * v34];
  *(_DWORD *)v36 = v29;
  v38 = v36 + 4;
  while (v8 != v30)
  {
    v39 = *--v8;
    *((_DWORD *)v36 - 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v38;
  *(_QWORD *)(a2 + 16) = v37;
  if (v30)
    operator delete(v30);
LABEL_69:
  *(_QWORD *)(a2 + 8) = v38;
}

uint64_t google::protobuf::FieldDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  uint64_t SourceLocation;
  void *__p;
  void *v7;
  uint64_t v8;

  __p = 0;
  v7 = 0;
  v8 = 0;
  google::protobuf::FieldDescriptor::GetLocationPath(a1, (char **)&__p);
  SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(_QWORD *)(a1 + 40), (std::string **)&__p, a2);
  if (__p)
  {
    v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1BF813EA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  unint64_t v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  int v35;
  uint64_t v36;
  _QWORD *v37;
  int v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  int v48;
  char *v49;
  char *v50;
  int v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  int v59;
  char *v60;
  char *v61;
  int v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  int v70;

  if (!*(_BYTE *)(a1 + 66))
  {
    google::protobuf::Descriptor::GetLocationPath(*(_QWORD *)(a1 + 80), (uint64_t)a2);
    v10 = a2 + 2;
    v9 = (unint64_t)a2[2];
    v11 = a2[1];
    if ((unint64_t)v11 >= v9)
    {
      v21 = *a2;
      v22 = (v11 - *a2) >> 2;
      v23 = v22 + 1;
      if ((unint64_t)(v22 + 1) >> 62)
        goto LABEL_109;
      v24 = v9 - (_QWORD)v21;
      if (v24 >> 1 > v23)
        v23 = v24 >> 1;
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL)
        v25 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v25 = v23;
      if (v25)
      {
        v26 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v25);
        v21 = *a2;
        v11 = a2[1];
      }
      else
      {
        v26 = 0;
      }
      v49 = &v26[4 * v22];
      v50 = &v26[4 * v25];
      *(_DWORD *)v49 = 2;
      v8 = v49 + 4;
      while (v11 != v21)
      {
        v51 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v49 - 1) = v51;
        v49 -= 4;
      }
      *a2 = v49;
      a2[1] = v8;
      a2[2] = v50;
      if (v21)
        operator delete(v21);
    }
    else
    {
      *(_DWORD *)v11 = 2;
      v8 = v11 + 4;
    }
    a2[1] = v8;
    if (*(_BYTE *)(a1 + 66))
    {
      v52 = *(_QWORD *)(a1 + 96);
      if (v52)
        v53 = (_QWORD *)(v52 + 80);
      else
        v53 = (_QWORD *)(*(_QWORD *)(a1 + 40) + 128);
    }
    else
    {
      v53 = (_QWORD *)(*(_QWORD *)(a1 + 80) + 40);
    }
    v38 = 678152731 * ((unint64_t)(a1 - *v53) >> 3);
    if ((unint64_t)v8 < *v10)
      goto LABEL_93;
    v39 = *a2;
    v54 = (v8 - *a2) >> 2;
    v55 = v54 + 1;
    if (!((unint64_t)(v54 + 1) >> 62))
    {
      v56 = *v10 - (_QWORD)v39;
      if (v56 >> 1 > v55)
        v55 = v56 >> 1;
      if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFFCLL)
        v57 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v57 = v55;
      if (v57)
      {
        v58 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v57);
        v39 = *a2;
        v8 = a2[1];
      }
      else
      {
        v58 = 0;
      }
      v45 = &v58[4 * v54];
      v46 = &v58[4 * v57];
      *(_DWORD *)v45 = v38;
      v47 = v45 + 4;
      while (v8 != v39)
      {
        v59 = *((_DWORD *)v8 - 1);
        v8 -= 4;
        *((_DWORD *)v45 - 1) = v59;
        v45 -= 4;
      }
      goto LABEL_106;
    }
    goto LABEL_109;
  }
  v4 = *(_QWORD *)(a1 + 96);
  if (!v4)
  {
    v13 = a2 + 2;
    v12 = (unint64_t)a2[2];
    v14 = a2[1];
    if ((unint64_t)v14 >= v12)
    {
      v27 = *a2;
      v28 = (v14 - *a2) >> 2;
      v29 = v28 + 1;
      if ((unint64_t)(v28 + 1) >> 62)
        goto LABEL_109;
      v30 = v12 - (_QWORD)v27;
      if (v30 >> 1 > v29)
        v29 = v30 >> 1;
      if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL)
        v31 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v31 = v29;
      if (v31)
      {
        v32 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v31);
        v27 = *a2;
        v14 = a2[1];
      }
      else
      {
        v32 = 0;
      }
      v60 = &v32[4 * v28];
      v61 = &v32[4 * v31];
      *(_DWORD *)v60 = 7;
      v8 = v60 + 4;
      while (v14 != v27)
      {
        v62 = *((_DWORD *)v14 - 1);
        v14 -= 4;
        *((_DWORD *)v60 - 1) = v62;
        v60 -= 4;
      }
      *a2 = v60;
      a2[1] = v8;
      a2[2] = v61;
      if (v27)
        operator delete(v27);
    }
    else
    {
      *(_DWORD *)v14 = 7;
      v8 = v14 + 4;
    }
    a2[1] = v8;
    if (*(_BYTE *)(a1 + 66))
    {
      v63 = *(_QWORD *)(a1 + 96);
      if (v63)
        v64 = (_QWORD *)(v63 + 80);
      else
        v64 = (_QWORD *)(*(_QWORD *)(a1 + 40) + 128);
    }
    else
    {
      v64 = (_QWORD *)(*(_QWORD *)(a1 + 80) + 40);
    }
    v38 = 678152731 * ((unint64_t)(a1 - *v64) >> 3);
    if ((unint64_t)v8 < *v13)
    {
LABEL_93:
      *(_DWORD *)v8 = v38;
      v47 = v8 + 4;
      goto LABEL_108;
    }
    v39 = *a2;
    v65 = (v8 - *a2) >> 2;
    v66 = v65 + 1;
    if (!((unint64_t)(v65 + 1) >> 62))
    {
      v67 = *v13 - (_QWORD)v39;
      if (v67 >> 1 > v66)
        v66 = v67 >> 1;
      if ((unint64_t)v67 >= 0x7FFFFFFFFFFFFFFCLL)
        v68 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v68 = v66;
      if (v68)
      {
        v69 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v68);
        v39 = *a2;
        v8 = a2[1];
      }
      else
      {
        v69 = 0;
      }
      v45 = &v69[4 * v65];
      v46 = &v69[4 * v68];
      *(_DWORD *)v45 = v38;
      v47 = v45 + 4;
      while (v8 != v39)
      {
        v70 = *((_DWORD *)v8 - 1);
        v8 -= 4;
        *((_DWORD *)v45 - 1) = v70;
        v45 -= 4;
      }
      goto LABEL_106;
    }
LABEL_109:
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  v6 = a2 + 2;
  v5 = (unint64_t)a2[2];
  v7 = a2[1];
  if ((unint64_t)v7 >= v5)
  {
    v15 = *a2;
    v16 = (v7 - *a2) >> 2;
    v17 = v16 + 1;
    if ((unint64_t)(v16 + 1) >> 62)
      goto LABEL_109;
    v18 = v5 - (_QWORD)v15;
    if (v18 >> 1 > v17)
      v17 = v18 >> 1;
    if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL)
      v19 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v19 = v17;
    if (v19)
    {
      v20 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v19);
      v15 = *a2;
      v7 = a2[1];
    }
    else
    {
      v20 = 0;
    }
    v33 = &v20[4 * v16];
    v34 = &v20[4 * v19];
    *(_DWORD *)v33 = 6;
    v8 = v33 + 4;
    while (v7 != v15)
    {
      v35 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v33 - 1) = v35;
      v33 -= 4;
    }
    *a2 = v33;
    a2[1] = v8;
    a2[2] = v34;
    if (v15)
      operator delete(v15);
  }
  else
  {
    *(_DWORD *)v7 = 6;
    v8 = v7 + 4;
  }
  a2[1] = v8;
  if (*(_BYTE *)(a1 + 66))
  {
    v36 = *(_QWORD *)(a1 + 96);
    if (v36)
      v37 = (_QWORD *)(v36 + 80);
    else
      v37 = (_QWORD *)(*(_QWORD *)(a1 + 40) + 128);
  }
  else
  {
    v37 = (_QWORD *)(*(_QWORD *)(a1 + 80) + 40);
  }
  v38 = 678152731 * ((unint64_t)(a1 - *v37) >> 3);
  if ((unint64_t)v8 < *v6)
    goto LABEL_93;
  v39 = *a2;
  v40 = (v8 - *a2) >> 2;
  v41 = v40 + 1;
  if ((unint64_t)(v40 + 1) >> 62)
    goto LABEL_109;
  v42 = *v6 - (_QWORD)v39;
  if (v42 >> 1 > v41)
    v41 = v42 >> 1;
  if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFFCLL)
    v43 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v43 = v41;
  if (v43)
  {
    v44 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v43);
    v39 = *a2;
    v8 = a2[1];
  }
  else
  {
    v44 = 0;
  }
  v45 = &v44[4 * v40];
  v46 = &v44[4 * v43];
  *(_DWORD *)v45 = v38;
  v47 = v45 + 4;
  while (v8 != v39)
  {
    v48 = *((_DWORD *)v8 - 1);
    v8 -= 4;
    *((_DWORD *)v45 - 1) = v48;
    v45 -= 4;
  }
LABEL_106:
  *a2 = v45;
  a2[1] = v47;
  a2[2] = v46;
  if (v39)
    operator delete(v39);
LABEL_108:
  a2[1] = v47;
}

uint64_t google::protobuf::OneofDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  uint64_t SourceLocation;
  void *__p;
  void *v7;
  uint64_t v8;

  __p = 0;
  v7 = 0;
  v8 = 0;
  google::protobuf::OneofDescriptor::GetLocationPath(a1, (char **)&__p);
  SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16), (std::string **)&__p, a2);
  if (__p)
  {
    v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1BF814418(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::OneofDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;

  google::protobuf::Descriptor::GetLocationPath(*(_QWORD *)(a1 + 16), (uint64_t)a2);
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = *a2;
    v8 = (v5 - *a2) >> 2;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62)
      goto LABEL_34;
    v10 = v4 - v7;
    if (v10 >> 1 > v9)
      v9 = v10 >> 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    if (v11)
    {
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v11);
      v7 = *a2;
      v5 = a2[1];
    }
    else
    {
      v12 = 0;
    }
    v13 = &v12[4 * v8];
    v4 = &v12[4 * v11];
    *(_DWORD *)v13 = 8;
    v6 = v13 + 4;
    while (v5 != v7)
    {
      v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)v5 = 8;
    v6 = v5 + 4;
  }
  a2[1] = v6;
  v15 = -1431655765 * ((unint64_t)(a1 - *(_QWORD *)(*(_QWORD *)(a1 + 16) + 48)) >> 4);
  if (v6 < v4)
  {
    *(_DWORD *)v6 = v15;
    v16 = v6 + 4;
    goto LABEL_33;
  }
  v17 = *a2;
  v18 = (v6 - *a2) >> 2;
  v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62)
LABEL_34:
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  v20 = v4 - v17;
  if (v20 >> 1 > v19)
    v19 = v20 >> 1;
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL)
    v21 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v21 = v19;
  if (v21)
  {
    v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v21);
    v17 = *a2;
    v6 = a2[1];
  }
  else
  {
    v22 = 0;
  }
  v23 = &v22[4 * v18];
  v24 = &v22[4 * v21];
  *(_DWORD *)v23 = v15;
  v16 = v23 + 4;
  while (v6 != v17)
  {
    v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17)
    operator delete(v17);
LABEL_33:
  a2[1] = v16;
}

uint64_t google::protobuf::EnumDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  uint64_t SourceLocation;
  void *__p;
  void *v7;
  uint64_t v8;

  __p = 0;
  v7 = 0;
  v8 = 0;
  google::protobuf::EnumDescriptor::GetLocationPath(a1, (char **)&__p);
  SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(_QWORD *)(a1 + 16), (std::string **)&__p, a2);
  if (__p)
  {
    v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1BF814648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::EnumDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  _QWORD *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  int v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  int v39;
  char *v40;
  char *v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  int v50;

  v4 = *(_QWORD *)(a1 + 24);
  if (!v4)
  {
    v10 = a2 + 2;
    v9 = (unint64_t)a2[2];
    v11 = a2[1];
    if ((unint64_t)v11 >= v9)
    {
      v18 = *a2;
      v19 = (v11 - *a2) >> 2;
      v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62)
        goto LABEL_70;
      v21 = v9 - (_QWORD)v18;
      if (v21 >> 1 > v20)
        v20 = v21 >> 1;
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL)
        v22 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v22 = v20;
      if (v22)
      {
        v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v22);
        v18 = *a2;
        v11 = a2[1];
      }
      else
      {
        v23 = 0;
      }
      v40 = &v23[4 * v19];
      v41 = &v23[4 * v22];
      *(_DWORD *)v40 = 5;
      v8 = v40 + 4;
      while (v11 != v18)
      {
        v42 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v40 - 1) = v42;
        v40 -= 4;
      }
      *a2 = v40;
      a2[1] = v8;
      a2[2] = v41;
      if (v18)
        operator delete(v18);
    }
    else
    {
      *(_DWORD *)v11 = 5;
      v8 = v11 + 4;
    }
    a2[1] = v8;
    v43 = *(_QWORD *)(a1 + 24);
    if (v43)
      v44 = (_QWORD *)(v43 + 64);
    else
      v44 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 112);
    v29 = -858993459 * ((unint64_t)(a1 - *v44) >> 4);
    if ((unint64_t)v8 >= *v10)
    {
      v30 = *a2;
      v45 = (v8 - *a2) >> 2;
      v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        v47 = *v10 - (_QWORD)v30;
        if (v47 >> 1 > v46)
          v46 = v47 >> 1;
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL)
          v48 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v48 = v46;
        if (v48)
        {
          v49 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v48);
          v30 = *a2;
          v8 = a2[1];
        }
        else
        {
          v49 = 0;
        }
        v36 = &v49[4 * v45];
        v37 = &v49[4 * v48];
        *(_DWORD *)v36 = v29;
        v38 = v36 + 4;
        while (v8 != v30)
        {
          v50 = *((_DWORD *)v8 - 1);
          v8 -= 4;
          *((_DWORD *)v36 - 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    }
LABEL_54:
    *(_DWORD *)v8 = v29;
    v38 = v8 + 4;
    goto LABEL_69;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  v6 = a2 + 2;
  v5 = (unint64_t)a2[2];
  v7 = a2[1];
  if ((unint64_t)v7 >= v5)
  {
    v12 = *a2;
    v13 = (v7 - *a2) >> 2;
    v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62)
      goto LABEL_70;
    v15 = v5 - (_QWORD)v12;
    if (v15 >> 1 > v14)
      v14 = v15 >> 1;
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL)
      v16 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v16 = v14;
    if (v16)
    {
      v17 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v16);
      v12 = *a2;
      v7 = a2[1];
    }
    else
    {
      v17 = 0;
    }
    v24 = &v17[4 * v13];
    v25 = &v17[4 * v16];
    *(_DWORD *)v24 = 4;
    v8 = v24 + 4;
    while (v7 != v12)
    {
      v26 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v24 - 1) = v26;
      v24 -= 4;
    }
    *a2 = v24;
    a2[1] = v8;
    a2[2] = v25;
    if (v12)
      operator delete(v12);
  }
  else
  {
    *(_DWORD *)v7 = 4;
    v8 = v7 + 4;
  }
  a2[1] = v8;
  v27 = *(_QWORD *)(a1 + 24);
  if (v27)
    v28 = (_QWORD *)(v27 + 64);
  else
    v28 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 112);
  v29 = -858993459 * ((unint64_t)(a1 - *v28) >> 4);
  if ((unint64_t)v8 < *v6)
    goto LABEL_54;
  v30 = *a2;
  v31 = (v8 - *a2) >> 2;
  v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62)
    goto LABEL_70;
  v33 = *v6 - (_QWORD)v30;
  if (v33 >> 1 > v32)
    v32 = v33 >> 1;
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL)
    v34 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v34 = v32;
  if (v34)
  {
    v35 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v34);
    v30 = *a2;
    v8 = a2[1];
  }
  else
  {
    v35 = 0;
  }
  v36 = &v35[4 * v31];
  v37 = &v35[4 * v34];
  *(_DWORD *)v36 = v29;
  v38 = v36 + 4;
  while (v8 != v30)
  {
    v39 = *((_DWORD *)v8 - 1);
    v8 -= 4;
    *((_DWORD *)v36 - 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *a2 = v36;
  a2[1] = v38;
  a2[2] = v37;
  if (v30)
    operator delete(v30);
LABEL_69:
  a2[1] = v38;
}

void google::protobuf::MethodDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;

  google::protobuf::ServiceDescriptor::GetLocationPath(*(_QWORD *)(a1 + 16), a2);
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = *a2;
    v8 = (v5 - *a2) >> 2;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62)
      goto LABEL_34;
    v10 = v4 - v7;
    if (v10 >> 1 > v9)
      v9 = v10 >> 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    if (v11)
    {
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v11);
      v7 = *a2;
      v5 = a2[1];
    }
    else
    {
      v12 = 0;
    }
    v13 = &v12[4 * v8];
    v4 = &v12[4 * v11];
    *(_DWORD *)v13 = 2;
    v6 = v13 + 4;
    while (v5 != v7)
    {
      v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)v5 = 2;
    v6 = v5 + 4;
  }
  a2[1] = v6;
  v15 = -991146299 * ((unint64_t)(a1 - *(_QWORD *)(*(_QWORD *)(a1 + 16) + 32)) >> 3);
  if (v6 < v4)
  {
    *(_DWORD *)v6 = v15;
    v16 = v6 + 4;
    goto LABEL_33;
  }
  v17 = *a2;
  v18 = (v6 - *a2) >> 2;
  v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62)
LABEL_34:
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  v20 = v4 - v17;
  if (v20 >> 1 > v19)
    v19 = v20 >> 1;
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL)
    v21 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v21 = v19;
  if (v21)
  {
    v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v21);
    v17 = *a2;
    v6 = a2[1];
  }
  else
  {
    v22 = 0;
  }
  v23 = &v22[4 * v18];
  v24 = &v22[4 * v21];
  *(_DWORD *)v23 = v15;
  v16 = v23 + 4;
  while (v6 != v17)
  {
    v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17)
    operator delete(v17);
LABEL_33:
  a2[1] = v16;
}

void google::protobuf::ServiceDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  char *v4;
  char **v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  int v26;

  v5 = a2 + 2;
  v4 = a2[2];
  v6 = a2[1];
  if (v6 >= v4)
  {
    v8 = *a2;
    v9 = (v6 - *a2) >> 2;
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 62)
      goto LABEL_34;
    v11 = v4 - v8;
    if (v11 >> 1 > v10)
      v10 = v11 >> 1;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL)
      v12 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v12 = v10;
    if (v12)
    {
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)v5, v12);
      v8 = *a2;
      v6 = a2[1];
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[4 * v9];
    v4 = &v13[4 * v12];
    *(_DWORD *)v14 = 6;
    v7 = v14 + 4;
    while (v6 != v8)
    {
      v15 = *((_DWORD *)v6 - 1);
      v6 -= 4;
      *((_DWORD *)v14 - 1) = v15;
      v14 -= 4;
    }
    *a2 = v14;
    a2[1] = v7;
    a2[2] = v4;
    if (v8)
    {
      operator delete(v8);
      v4 = *v5;
    }
  }
  else
  {
    *(_DWORD *)v6 = 6;
    v7 = v6 + 4;
  }
  a2[1] = v7;
  v16 = -1431655765 * ((unint64_t)(a1 - *(_QWORD *)(*(_QWORD *)(a1 + 16) + 120)) >> 4);
  if (v7 < v4)
  {
    *(_DWORD *)v7 = v16;
    v17 = v7 + 4;
    goto LABEL_33;
  }
  v18 = *a2;
  v19 = (v7 - *a2) >> 2;
  v20 = v19 + 1;
  if ((unint64_t)(v19 + 1) >> 62)
LABEL_34:
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  v21 = v4 - v18;
  if (v21 >> 1 > v20)
    v20 = v21 >> 1;
  if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL)
    v22 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v22 = v20;
  if (v22)
  {
    v23 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)v5, v22);
    v18 = *a2;
    v7 = a2[1];
  }
  else
  {
    v23 = 0;
  }
  v24 = &v23[4 * v19];
  v25 = &v23[4 * v22];
  *(_DWORD *)v24 = v16;
  v17 = v24 + 4;
  while (v7 != v18)
  {
    v26 = *((_DWORD *)v7 - 1);
    v7 -= 4;
    *((_DWORD *)v24 - 1) = v26;
    v24 -= 4;
  }
  *a2 = v24;
  a2[1] = v17;
  a2[2] = v25;
  if (v18)
    operator delete(v18);
LABEL_33:
  a2[1] = v17;
}

uint64_t google::protobuf::EnumValueDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  uint64_t SourceLocation;
  void *__p;
  void *v7;
  uint64_t v8;

  __p = 0;
  v7 = 0;
  v8 = 0;
  google::protobuf::EnumValueDescriptor::GetLocationPath(a1, (char **)&__p);
  SourceLocation = google::protobuf::FileDescriptor::GetSourceLocation(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16), (std::string **)&__p, a2);
  if (__p)
  {
    v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1BF814D60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::EnumValueDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  char *v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  int v25;

  google::protobuf::EnumDescriptor::GetLocationPath(*(_QWORD *)(a1 + 24), a2);
  v4 = a2[2];
  v5 = a2[1];
  if (v5 >= v4)
  {
    v7 = *a2;
    v8 = (v5 - *a2) >> 2;
    v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62)
      goto LABEL_34;
    v10 = v4 - v7;
    if (v10 >> 1 > v9)
      v9 = v10 >> 1;
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v9;
    if (v11)
    {
      v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v11);
      v7 = *a2;
      v5 = a2[1];
    }
    else
    {
      v12 = 0;
    }
    v13 = &v12[4 * v8];
    v4 = &v12[4 * v11];
    *(_DWORD *)v13 = 2;
    v6 = v13 + 4;
    while (v5 != v7)
    {
      v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)v5 = 2;
    v6 = v5 + 4;
  }
  a2[1] = v6;
  v15 = -858993459 * ((unint64_t)(a1 - *(_QWORD *)(*(_QWORD *)(a1 + 24) + 48)) >> 3);
  if (v6 < v4)
  {
    *(_DWORD *)v6 = v15;
    v16 = v6 + 4;
    goto LABEL_33;
  }
  v17 = *a2;
  v18 = (v6 - *a2) >> 2;
  v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62)
LABEL_34:
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  v20 = v4 - v17;
  if (v20 >> 1 > v19)
    v19 = v20 >> 1;
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL)
    v21 = 0x3FFFFFFFFFFFFFFFLL;
  else
    v21 = v19;
  if (v21)
  {
    v22 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a2 + 2), v21);
    v17 = *a2;
    v6 = a2[1];
  }
  else
  {
    v22 = 0;
  }
  v23 = &v22[4 * v18];
  v24 = &v22[4 * v21];
  *(_DWORD *)v23 = v15;
  v16 = v23 + 4;
  while (v6 != v17)
  {
    v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17)
    operator delete(v17);
LABEL_33:
  a2[1] = v16;
}

google::protobuf::SourceCodeInfo *google::protobuf::DescriptorBuilder::BuildFile(google::protobuf::DescriptorBuilder *this, const std::string **a2)
{
  const char *v4;
  _QWORD *v5;
  const char *v6;
  uint64_t **v7;
  google::protobuf::SourceCodeInfo *v8;
  google::protobuf::Arena *v9;
  char v10;
  std::string::size_type size;
  unint64_t v12;
  int v13;
  void **v14;
  uint64_t v15;
  std::string *p_str;
  int v17;
  int v18;
  int v19;
  int v20;
  BOOL v22;
  BOOL v23;
  const std::string **v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  const std::string *v28;
  int v29;
  std::string::size_type v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  uint64_t v34;
  const std::string *v35;
  const std::string **v36;
  __int128 *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  const char *v42;
  uint64_t **v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  void **v50;
  uint64_t v51;
  google::protobuf::DescriptorPool::Tables *v52;
  unint64_t v54;
  void *__p[2];
  unsigned __int8 v56;
  const char *v57;
  uint64_t v58;
  int v59;
  std::string *v60;
  std::string __str;

  v4 = (char *)this + 56;
  std::string::operator=((std::string *)((char *)this + 56), a2[22]);
  v5 = (_QWORD *)(*((_QWORD *)this + 1) + 304);
  if (*((char *)this + 79) >= 0)
    v6 = v4;
  else
    v6 = (const char *)*((_QWORD *)this + 7);
  v57 = v6;
  v7 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v5, &v57);
  if (!v7)
    goto LABEL_40;
  v8 = (google::protobuf::SourceCodeInfo *)v7[3];
  if (!v8)
    goto LABEL_40;
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)&v57);
  google::protobuf::FileDescriptor::CopyTo(v8, (google::protobuf::FileDescriptorProto *)&v57);
  if (*((_DWORD *)v8 + 15) == 2 && ((_BYTE)a2[2] & 4) != 0)
  {
    v59 |= 4u;
    std::string::basic_string[abi:ne180100]<0>(&__str, "proto2");
    v9 = (google::protobuf::Arena *)(v58 & 0xFFFFFFFFFFFFFFFELL);
    if ((v58 & 1) != 0)
      v9 = (google::protobuf::Arena *)*((_QWORD *)v9 + 3);
    if (v60 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstance(&v60, v9, (__int128 *)&__str);
    else
      std::string::operator=(v60, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
  }
  google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)&v57, (uint64_t)&__str);
  google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)a2, (uint64_t)__p);
  v10 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  else
    size = __str.__r_.__value_.__l.__size_;
  v12 = v56;
  v13 = (char)v56;
  if ((v56 & 0x80u) != 0)
    v12 = (unint64_t)__p[1];
  if (size != v12)
  {
    v23 = 0;
    if (((char)v56 & 0x80000000) == 0)
      goto LABEL_38;
    goto LABEL_34;
  }
  if ((v56 & 0x80u) == 0)
    v14 = __p;
  else
    v14 = (void **)__p[0];
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    v23 = memcmp(__str.__r_.__value_.__l.__data_, v14, __str.__r_.__value_.__l.__size_) == 0;
    goto LABEL_37;
  }
  if (*((_BYTE *)&__str.__r_.__value_.__s + 23))
  {
    v15 = HIBYTE(__str.__r_.__value_.__r.__words[2]) - 1;
    p_str = &__str;
    do
    {
      v18 = p_str->__r_.__value_.__s.__data_[0];
      p_str = (std::string *)((char *)p_str + 1);
      v17 = v18;
      v20 = *(unsigned __int8 *)v14;
      v14 = (void **)((char *)v14 + 1);
      v19 = v20;
      v22 = v15-- != 0;
      v23 = v17 == v19;
    }
    while (v17 == v19 && v22);
LABEL_37:
    if ((v13 & 0x80000000) == 0)
      goto LABEL_38;
LABEL_34:
    operator delete(__p[0]);
    if ((*((_BYTE *)&__str.__r_.__value_.__s + 23) & 0x80) == 0)
      goto LABEL_39;
    goto LABEL_35;
  }
  v23 = 1;
  if ((char)v56 < 0)
    goto LABEL_34;
LABEL_38:
  if (v10 < 0)
LABEL_35:
    operator delete(__str.__r_.__value_.__l.__data_);
LABEL_39:
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&v57);
  if (v23)
    return v8;
LABEL_40:
  v24 = a2;
  v25 = (uint64_t *)*((_QWORD *)this + 1);
  v26 = *v25;
  v54 = v25[1];
  if (v54 != *v25)
  {
    v27 = 0;
    v28 = v24[22];
    v29 = SHIBYTE(v28->__r_.__value_.__r.__words[2]);
    if (v29 >= 0)
      v30 = HIBYTE(v28->__r_.__value_.__r.__words[2]);
    else
      v30 = v28->__r_.__value_.__l.__size_;
    if ((unint64_t)((uint64_t)(v54 - v26) / 24) <= 1)
      v31 = 1;
    else
      v31 = (uint64_t)(v54 - v26) / 24;
    do
    {
      v32 = (unsigned __int8 *)(v26 + 24 * v27);
      v33 = v32[23];
      if ((v33 & 0x80u) == 0)
        v34 = v32[23];
      else
        v34 = *((_QWORD *)v32 + 1);
      if (v34 == v30)
      {
        if (v29 >= 0)
          v35 = v28;
        else
          v35 = (const std::string *)v28->__r_.__value_.__r.__words[0];
        if ((v33 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v32, v35, *((_QWORD *)v32 + 1)))
          {
LABEL_63:
            google::protobuf::DescriptorBuilder::AddRecursiveImportError(this, (const google::protobuf::FileDescriptorProto *)v24, v27);
            return 0;
          }
        }
        else
        {
          if (!v32[23])
            goto LABEL_63;
          while (*v32 == v35->__r_.__value_.__s.__data_[0])
          {
            ++v32;
            v35 = (const std::string *)((char *)v35 + 1);
            if (!--v33)
              goto LABEL_63;
          }
        }
      }
      ++v27;
    }
    while (v27 != v31);
  }
  if (*(_BYTE *)(*(_QWORD *)this + 41))
  {
    v36 = v24;
    goto LABEL_85;
  }
  v36 = v24;
  if (*(_QWORD *)(*(_QWORD *)this + 8))
  {
    v37 = (__int128 *)v24[22];
    if (v54 >= v25[2])
    {
      v38 = std::vector<std::string>::__push_back_slow_path<std::string const&>(v25, v37);
    }
    else
    {
      std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v25, v37);
      v38 = v54 + 24;
    }
    v25[1] = v38;
    if (*((int *)v24 + 8) < 1)
    {
LABEL_82:
      v48 = (uint64_t *)*((_QWORD *)this + 1);
      v49 = v48[1];
      v50 = (void **)(v49 - 24);
      v25 = v48;
      if (*(char *)(v49 - 1) < 0)
      {
        operator delete(*v50);
        v25 = (uint64_t *)*((_QWORD *)this + 1);
      }
      v48[1] = (uint64_t)v50;
      goto LABEL_85;
    }
    v39 = 0;
    while (1)
    {
      v40 = *((_QWORD *)this + 1);
      v41 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)(v36 + 3), v39);
      if (*(char *)(v41 + 23) >= 0)
        v42 = (const char *)v41;
      else
        v42 = *(const char **)v41;
      v57 = v42;
      v43 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>((_QWORD *)(v40 + 304), &v57);
      if (v43 && v43[3])
        goto LABEL_81;
      v44 = *(_QWORD *)this;
      v45 = *(_QWORD *)(*(_QWORD *)this + 24);
      if (!v45)
        goto LABEL_80;
      v46 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)(v36 + 3), v39);
      if (!google::protobuf::DescriptorPool::FindFileByName(v45, v46))
        break;
LABEL_81:
      if (++v39 >= *((_DWORD *)v36 + 8))
        goto LABEL_82;
    }
    v44 = *(_QWORD *)this;
LABEL_80:
    v47 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)(v36 + 3), v39);
    google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(v44, v47);
    goto LABEL_81;
  }
LABEL_85:
  google::protobuf::DescriptorPool::Tables::AddCheckpoint((google::protobuf::DescriptorPool::Tables *)v25);
  v8 = google::protobuf::DescriptorBuilder::BuildFileImpl(this, (const google::protobuf::FileDescriptorProto *)v36);
  v51 = *((_QWORD *)this + 11);
  v52 = (google::protobuf::DescriptorPool::Tables *)*((_QWORD *)this + 1);
  if (v8)
  {
    google::protobuf::DescriptorPool::Tables::ClearLastCheckpoint(v52);
    *((_BYTE *)v8 + 65) = 1;
  }
  else
  {
    google::protobuf::DescriptorPool::Tables::RollbackToLastCheckpoint(v52);
  }
  return v8;
}

void sub_1BF815378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  va_list va;

  va_start(va, a6);
  if (*(char *)(v6 - 89) < 0)
    operator delete(*(void **)(v6 - 112));
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::DescriptorBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 16) = a4;
  *(_QWORD *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 96) = a1 + 104;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 120) = a1 + 128;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  std::string::basic_string[abi:ne180100]<0>((_QWORD *)(a1 + 176), "");
  return a1;
}

void sub_1BF815440(_Unwind_Exception *a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void **v5;

  if (*(char *)(v2 + 175) < 0)
    operator delete(*(void **)(v2 + 152));
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy(v4, *(_QWORD **)(v2 + 128));
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy(v3, *(_QWORD **)(v2 + 104));
  if (*(char *)(v2 + 79) < 0)
    operator delete(*v5);
  _Unwind_Resume(a1);
}

void **std::vector<google::protobuf::`anonymous namespace'::OptionsToInterpret>::~vector[abi:ne180100](void **a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = *a1;
  if (*a1)
  {
    v3 = (uint64_t)a1[1];
    v4 = *a1;
    if ((void *)v3 != v2)
    {
      do
      {
        v3 -= 88;
      }
      while ((void *)v3 != v2);
      v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void google::protobuf::DescriptorBuilder::~DescriptorBuilder(void **this)
{
  if (*((char *)this + 199) < 0)
    operator delete(this[22]);
  if (*((char *)this + 175) < 0)
    operator delete(this[19]);
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy((uint64_t)(this + 15), this[16]);
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy((uint64_t)(this + 12), this[13]);
  if (*((char *)this + 79) < 0)
    operator delete(this[7]);
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, const std::string::value_type *a5)
{
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  char v16;
  std::string v17[2];

  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t, const std::string::value_type *, uint64_t, uint64_t, const std::string::value_type *))(*(_QWORD *)v8 + 16))(v8, a1 + 56, a2, a3, a4, a5);
  }
  else
  {
    if (!*(_BYTE *)(a1 + 48))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 3587);
      v9 = google::protobuf::internal::LogMessage::operator<<(v17, "Invalid proto descriptor for file \"");
      v10 = google::protobuf::internal::LogMessage::operator<<(v9, (const std::string::value_type *)(a1 + 56));
      v11 = google::protobuf::internal::LogMessage::operator<<(v10, "\":");
      google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 3590);
    v12 = google::protobuf::internal::LogMessage::operator<<(v17, "  ");
    v13 = google::protobuf::internal::LogMessage::operator<<(v12, a2);
    v14 = google::protobuf::internal::LogMessage::operator<<(v13, ": ");
    v15 = google::protobuf::internal::LogMessage::operator<<(v14, a5);
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v15->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  *(_BYTE *)(a1 + 48) = 1;
}

void sub_1BF815674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, char *__s)
{
  void *__p[2];
  char v10;

  std::string::basic_string[abi:ne180100]<0>(__p, __s);
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)__p);
  if (v10 < 0)
    operator delete(__p[0]);
}

void sub_1BF815700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddNotDefinedError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  std::string *v10;
  __int128 v11;
  uint64_t v12;
  int v13;
  const std::string::value_type *v14;
  std::string::size_type v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  int v20;
  const std::string::value_type *v21;
  std::string::size_type v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  __int128 v26;
  int v27;
  std::string *v28;
  __int128 v29;
  int v30;
  const std::string::value_type *v31;
  std::string::size_type v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  int v37;
  const std::string::value_type *v38;
  std::string::size_type v39;
  std::string *v40;
  __int128 v41;
  std::string *v42;
  __int128 v43;
  void *v44;
  std::string *v45;
  __int128 v46;
  std::string v47;
  std::string v48;
  std::string v49;
  std::string v50;
  std::string v51;
  __int128 v52;
  std::string::size_type v53;

  if (*(_QWORD *)(a1 + 144))
  {
    std::operator+<char>();
    v10 = std::string::append(&v47, "\" seems to be defined in \"");
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = **(_QWORD **)(a1 + 144);
    v13 = *(char *)(v12 + 23);
    if (v13 >= 0)
      v14 = **(const std::string::value_type ***)(a1 + 144);
    else
      v14 = *(const std::string::value_type **)v12;
    if (v13 >= 0)
      v15 = *(unsigned __int8 *)(v12 + 23);
    else
      v15 = *(_QWORD *)(v12 + 8);
    v16 = std::string::append(&v48, v14, v15);
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    v18 = std::string::append(&v49, "\", which is not imported by \"");
    v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    v20 = *(char *)(a1 + 79);
    if (v20 >= 0)
      v21 = (const std::string::value_type *)(a1 + 56);
    else
      v21 = *(const std::string::value_type **)(a1 + 56);
    if (v20 >= 0)
      v22 = *(unsigned __int8 *)(a1 + 79);
    else
      v22 = *(_QWORD *)(a1 + 64);
    v23 = std::string::append(&v50, v21, v22);
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    v25 = std::string::append(&v51, "\".  To use it here, please add the necessary import.");
    v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v53 = v25->__r_.__value_.__r.__words[2];
    v52 = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v52);
    if (SHIBYTE(v53) < 0)
      operator delete((void *)v52);
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v51.__r_.__value_.__l.__data_);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    LOBYTE(v27) = *(_BYTE *)(a1 + 199);
LABEL_27:
    if ((v27 & 0x80) != 0)
    {
      if (!*(_QWORD *)(a1 + 184))
        return;
    }
    else if (!(_BYTE)v27)
    {
      return;
    }
    std::operator+<char>();
    v28 = std::string::append(&v47, "\" is resolved to \"");
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    v30 = *(char *)(a1 + 199);
    if (v30 >= 0)
      v31 = (const std::string::value_type *)(a1 + 176);
    else
      v31 = *(const std::string::value_type **)(a1 + 176);
    if (v30 >= 0)
      v32 = *(unsigned __int8 *)(a1 + 199);
    else
      v32 = *(_QWORD *)(a1 + 184);
    v33 = std::string::append(&v48, v31, v32);
    v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    v35 = std::string::append(&v49, "\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \".");
    v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    v37 = *(char *)(a5 + 23);
    if (v37 >= 0)
      v38 = (const std::string::value_type *)a5;
    else
      v38 = *(const std::string::value_type **)a5;
    if (v37 >= 0)
      v39 = *(unsigned __int8 *)(a5 + 23);
    else
      v39 = *(_QWORD *)(a5 + 8);
    v40 = std::string::append(&v50, v38, v39);
    v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    v42 = std::string::append(&v51, "\") to start from the outermost scope.");
    v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
    v53 = v42->__r_.__value_.__r.__words[2];
    v52 = v43;
    v42->__r_.__value_.__l.__size_ = 0;
    v42->__r_.__value_.__r.__words[2] = 0;
    v42->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v52);
    if (SHIBYTE(v53) < 0)
      operator delete((void *)v52);
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v51.__r_.__value_.__l.__data_);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    {
      v44 = (void *)v47.__r_.__value_.__r.__words[0];
LABEL_63:
      operator delete(v44);
      return;
    }
    return;
  }
  v27 = *(char *)(a1 + 199);
  if (v27 < 0)
  {
    if (*(_QWORD *)(a1 + 184))
      goto LABEL_27;
  }
  else if (*(_BYTE *)(a1 + 199))
  {
    goto LABEL_27;
  }
  std::operator+<char>();
  v45 = std::string::append(&v51, "\" is not defined.");
  v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
  v53 = v45->__r_.__value_.__r.__words[2];
  v52 = v46;
  v45->__r_.__value_.__l.__size_ = 0;
  v45->__r_.__value_.__r.__words[2] = 0;
  v45->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v52);
  if (SHIBYTE(v53) < 0)
    operator delete((void *)v52);
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
  {
    v44 = (void *)v51.__r_.__value_.__r.__words[0];
    goto LABEL_63;
  }
}

void sub_1BF815B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (*(char *)(v42 - 73) < 0)
    operator delete(*(void **)(v42 - 96));
  if (a42 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddWarning(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, const std::string::value_type *a5)
{
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t, const std::string::value_type *, uint64_t, uint64_t, const std::string::value_type *))(*(_QWORD *)v8 + 24))(v8, a1 + 56, a2, a3, a4, a5);
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 3641);
    v9 = google::protobuf::internal::LogMessage::operator<<(v15, (const std::string::value_type *)(a1 + 56));
    v10 = google::protobuf::internal::LogMessage::operator<<(v9, " ");
    v11 = google::protobuf::internal::LogMessage::operator<<(v10, a2);
    v12 = google::protobuf::internal::LogMessage::operator<<(v11, ": ");
    v13 = google::protobuf::internal::LogMessage::operator<<(v12, a5);
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v13->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
}

void sub_1BF815CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::DescriptorBuilder::IsInPackage(uint64_t a1, uint64_t a2, const void **a3)
{
  const void **v4;
  size_t v5;
  size_t v6;
  _BYTE *v7;
  size_t v8;
  size_t v9;
  const void **v10;
  const void *v11;
  int v12;

  v4 = *(const void ***)(a2 + 8);
  v5 = *((unsigned __int8 *)v4 + 23);
  if ((v5 & 0x80u) == 0)
    v6 = *((unsigned __int8 *)v4 + 23);
  else
    v6 = (size_t)v4[1];
  v7 = (_BYTE *)*((unsigned __int8 *)a3 + 23);
  if (*((char *)a3 + 23) < 0)
  {
    v8 = (size_t)a3[1];
    if (v6 < v8)
      return 0;
  }
  else
  {
    v8 = *((unsigned __int8 *)a3 + 23);
    if (v6 < (unint64_t)v7)
      return 0;
  }
  if ((v5 & 0x80) == 0)
  {
    if (v8 != -1)
    {
      if (v5 >= v8)
        v9 = v8;
      else
        v9 = *((unsigned __int8 *)v4 + 23);
      v10 = *(const void ***)(a2 + 8);
      goto LABEL_19;
    }
LABEL_34:
    std::string::__throw_out_of_range[abi:ne180100]();
  }
  if (v8 == -1)
    goto LABEL_34;
  if ((unint64_t)v4[1] >= v8)
    v9 = v8;
  else
    v9 = (size_t)v4[1];
  v10 = (const void **)*v4;
LABEL_19:
  if ((char)v7 >= 0)
    v11 = a3;
  else
    v11 = *a3;
  v12 = memcmp(v10, v11, v9);
  if (v9 != v8 || v12 != 0)
    return 0;
  if ((v7 & 0x80) != 0)
    v7 = a3[1];
  if ((_BYTE *)v6 == v7)
    return 1;
  if ((v5 & 0x80) != 0)
    v4 = (const void **)*v4;
  return v7[(_QWORD)v4] == 46;
}

uint64_t **google::protobuf::DescriptorBuilder::RecordPublicDependencies(uint64_t **this, const google::protobuf::FileDescriptor *a2)
{
  google::protobuf::DescriptorBuilder *v2;
  char v3;
  uint64_t v4;
  const google::protobuf::FileDescriptor *v5;
  google::protobuf::FileDescriptor *v6;

  v6 = a2;
  if (a2)
  {
    v2 = (google::protobuf::DescriptorBuilder *)this;
    this = (uint64_t **)std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>(this + 12, (unint64_t *)&v6, (uint64_t *)&v6);
    if ((v3 & 1) != 0)
    {
      this = (uint64_t **)v6;
      if (v6)
      {
        v4 = 0;
        do
        {
          if (v4 >= *((int *)this + 9))
            break;
          v5 = (const google::protobuf::FileDescriptor *)google::protobuf::FileDescriptor::dependency((google::protobuf::FileDescriptor *)this, *((_DWORD *)this[11] + v4));
          google::protobuf::DescriptorBuilder::RecordPublicDependencies(v2, v5);
          ++v4;
          this = (uint64_t **)v6;
        }
        while (v6);
      }
    }
  }
  return this;
}

unint64_t google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  std::mutex *v8;
  char v9;
  _QWORD *v10;
  const char *v11;
  uint64_t **v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t SymbolNotEnforcingDepsHelper;
  _QWORD *v17;
  const char *v18;
  uint64_t **v19;
  const char *v21;

  if (*a1 == a2)
  {
    v8 = 0;
  }
  else
  {
    v8 = *(std::mutex **)a2;
    if (*(_QWORD *)a2)
    {
      std::mutex::lock(*(std::mutex **)a2);
      v9 = 0;
      goto LABEL_6;
    }
  }
  v9 = 1;
LABEL_6:
  v10 = (_QWORD *)(*(_QWORD *)(a2 + 32) + 264);
  if (*(char *)(a3 + 23) >= 0)
    v11 = (const char *)a3;
  else
    v11 = *(const char **)a3;
  v21 = v11;
  v12 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v10, &v21);
  if (v12)
  {
    LODWORD(v14) = *((_DWORD *)v12 + 6);
    v13 = *((unsigned int *)v12 + 7);
    if ((_DWORD)v14)
      goto LABEL_25;
  }
  else
  {
    v13 = 0;
  }
  v15 = *(_QWORD *)(a2 + 24);
  if (v15)
  {
    SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(a1, v15, a3, 1);
    v13 = HIDWORD(SymbolNotEnforcingDepsHelper);
    LODWORD(v14) = SymbolNotEnforcingDepsHelper;
    if ((_DWORD)SymbolNotEnforcingDepsHelper)
      goto LABEL_25;
  }
  else
  {
    LODWORD(v14) = 0;
  }
  if (a4)
  {
    if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((google::protobuf::DescriptorPool *)a2, (unsigned __int8 *)a3))
    {
      v17 = (_QWORD *)(*(_QWORD *)(a2 + 32) + 264);
      if (*(char *)(a3 + 23) >= 0)
        v18 = (const char *)a3;
      else
        v18 = *(const char **)a3;
      v21 = v18;
      v19 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v17, &v21);
      if (v19)
        v14 = (unint64_t)v19[3];
      else
        v14 = 0;
      v13 = HIDWORD(v14);
      if ((v9 & 1) == 0)
        goto LABEL_26;
      return v14 | (v13 << 32);
    }
    LODWORD(v14) = 0;
  }
LABEL_25:
  if ((v9 & 1) == 0)
LABEL_26:
    std::mutex::unlock(v8);
  return v14 | (v13 << 32);
}

void sub_1BF815FB8(_Unwind_Exception *exception_object)
{
  std::mutex *v1;
  char v2;

  if ((v2 & 1) == 0)
    std::mutex::unlock(v1);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v4;
  unint64_t File;
  _QWORD *i;
  unint64_t v7;
  unint64_t v9;
  _QWORD v10[2];

  v10[0] = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(a1, *a1, a2, a3);
  v10[1] = v4;
  File = google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)v10);
  v9 = File;
  if (File == a1[10])
  {
LABEL_8:
    std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>((uint64_t)(a1 + 15), &v9);
  }
  else
  {
    for (i = (_QWORD *)a1[13]; i; i = (_QWORD *)*i)
    {
      v7 = i[4];
      if (File >= v7)
      {
        if (v7 >= File)
          goto LABEL_8;
        ++i;
      }
    }
  }
  return v10[0];
}

uint64_t google::protobuf::DescriptorBuilder::FindSymbol(uint64_t a1, std::string *a2, int a3)
{
  uint64_t result;
  uint64_t v6;
  unint64_t File;
  uint64_t v8;
  unint64_t v9;
  _QWORD *i;
  _QWORD *v11;
  unint64_t v12;
  _BOOL8 v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  BOOL v18;
  _QWORD v19[2];

  result = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps((uint64_t *)a1, (uint64_t)a2, a3);
  v19[0] = result;
  v19[1] = v6;
  if ((_DWORD)result && *(_BYTE *)(*(_QWORD *)a1 + 40))
  {
    File = google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)v19);
    v8 = *(_QWORD *)(a1 + 80);
    if (File == v8)
      return v19[0];
    v9 = File;
    v11 = (_QWORD *)(a1 + 104);
    for (i = *(_QWORD **)(a1 + 104); i; i = (_QWORD *)*i)
    {
      v12 = i[4];
      if (File >= v12)
      {
        if (v12 >= File)
          return v19[0];
        ++i;
      }
    }
    if (LODWORD(v19[0]) == 8)
    {
      v13 = google::protobuf::DescriptorBuilder::IsInPackage(File, v8, (const void **)&a2->__r_.__value_.__l.__data_);
      if (v13)
        return v19[0];
      v14 = *(_QWORD **)(a1 + 96);
      if (v14 != v11)
      {
        do
        {
          v15 = v14[4];
          if (v15)
          {
            LODWORD(v13) = google::protobuf::DescriptorBuilder::IsInPackage(v13, v15, (const void **)&a2->__r_.__value_.__l.__data_);
            if (v13)
              return v19[0];
          }
          v16 = (_QWORD *)v14[1];
          if (v16)
          {
            do
            {
              v17 = v16;
              v16 = (_QWORD *)*v16;
            }
            while (v16);
          }
          else
          {
            do
            {
              v17 = (_QWORD *)v14[2];
              v18 = *v17 == (_QWORD)v14;
              v14 = v17;
            }
            while (!v18);
          }
          v14 = v17;
        }
        while (v17 != v11);
      }
    }
    *(_QWORD *)(a1 + 144) = v9;
    std::string::operator=((std::string *)(a1 + 152), a2);
    return 0;
  }
  return result;
}

unint64_t google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(uint64_t a1, std::string *__str, uint64_t a3, int a4, int a5)
{
  std::string *v10;
  uint64_t Symbol;
  unsigned int v12;
  std::string::size_type v13;
  std::string::size_type v14;
  std::string::size_type v15;
  std::string *v16;
  std::string::size_type v17;
  uint64_t v18;
  std::string::size_type size;
  std::string::size_type v20;
  uint64_t v21;
  std::string __stra;
  std::string v24;
  char v25;

  *(_QWORD *)(a1 + 144) = 0;
  if (*(char *)(a1 + 199) < 0)
  {
    **(_BYTE **)(a1 + 176) = 0;
    *(_QWORD *)(a1 + 184) = 0;
  }
  else
  {
    *(_BYTE *)(a1 + 176) = 0;
    *(_BYTE *)(a1 + 199) = 0;
  }
  if ((SHIBYTE(__str->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v10 = __str;
    if (!*((_BYTE *)&__str->__r_.__value_.__s + 23))
      goto LABEL_13;
LABEL_9:
    if (v10->__r_.__value_.__s.__data_[0] == 46)
    {
      std::string::basic_string(&v24, __str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__stra);
      Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, &v24, a5);
      if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v24.__r_.__value_.__l.__data_);
      v12 = Symbol;
      return Symbol & 0xFFFFFFFF00000000 | v12;
    }
    goto LABEL_13;
  }
  if (__str->__r_.__value_.__l.__size_)
  {
    v10 = (std::string *)__str->__r_.__value_.__r.__words[0];
    goto LABEL_9;
  }
LABEL_13:
  v13 = std::string::find(__str, 46, 0);
  memset(&v24, 0, sizeof(v24));
  if (v13 == -1)
  {
    std::string::operator=(&v24, __str);
  }
  else
  {
    std::string::basic_string(&__stra, __str, 0, v13, (std::allocator<char> *)&v25);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v24.__r_.__value_.__l.__data_);
    v24 = __stra;
  }
  if (*(char *)(a3 + 23) < 0)
    std::string::__init_copy_ctor_external(&__stra, *(const std::string::value_type **)a3, *(_QWORD *)(a3 + 8));
  else
    __stra = *(std::string *)a3;
  while (1)
  {
    v14 = std::string::rfind(&__stra, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v14 == -1)
    {
      Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, __str, a5);
      goto LABEL_48;
    }
    std::string::erase(&__stra, v14, 0xFFFFFFFFFFFFFFFFLL);
    v15 = (__stra.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(__stra.__r_.__value_.__r.__words[2])
        : __stra.__r_.__value_.__l.__size_;
    std::string::append(&__stra, 1uLL, 46);
    v16 = (v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v24
        : (std::string *)v24.__r_.__value_.__r.__words[0];
    v17 = (v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(v24.__r_.__value_.__r.__words[2])
        : v24.__r_.__value_.__l.__size_;
    std::string::append(&__stra, (const std::string::value_type *)v16, v17);
    v18 = google::protobuf::DescriptorBuilder::FindSymbol(a1, &__stra, a5);
    Symbol = v18;
    if ((_DWORD)v18)
      break;
LABEL_44:
    std::string::erase(&__stra, v15, 0xFFFFFFFFFFFFFFFFLL);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  else
    size = v24.__r_.__value_.__l.__size_;
  v20 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((v20 & 0x80u) != 0)
    v20 = __str->__r_.__value_.__l.__size_;
  if (v20 <= size)
  {
    if (a4 != 1 || (_DWORD)v18 == 1)
      goto LABEL_48;
    v12 = v18;
    if ((_DWORD)v18 == 4)
      goto LABEL_49;
    goto LABEL_44;
  }
  if (v18 > 8 || ((1 << v18) & 0x152) == 0)
    goto LABEL_44;
  std::string::append(&__stra, __str, size, v20 - size);
  v21 = google::protobuf::DescriptorBuilder::FindSymbol(a1, &__stra, a5);
  Symbol = v21;
  if (!(_DWORD)v21)
  {
    std::string::operator=((std::string *)(a1 + 176), &__stra);
    v12 = 0;
    goto LABEL_49;
  }
LABEL_48:
  v12 = Symbol;
LABEL_49:
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__stra.__r_.__value_.__l.__data_);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v24.__r_.__value_.__l.__data_);
  return Symbol & 0xFFFFFFFF00000000 | v12;
}

void sub_1BF81649C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  _Unwind_Resume(exception_object);
}

unint64_t google::protobuf::DescriptorBuilder::LookupSymbol(uint64_t *a1, std::string *a2, uint64_t a3, int a4, int a5, int a6)
{
  unint64_t v9;
  unsigned int v10;

  v9 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)a1, a2, a3, a5, a6);
  if (!(_DWORD)v9)
  {
    if (!*(_BYTE *)(*a1 + 42))
    {
      v10 = 0;
      return v9 & 0xFFFFFFFF00000000 | v10;
    }
    v9 = google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld(*a1, a2, a4);
  }
  v10 = v9;
  return v9 & 0xFFFFFFFF00000000 | v10;
}

uint64_t google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld(uint64_t a1, std::string *__str, int a3)
{
  std::string::size_type v6;
  char v7;
  std::string::size_type v8;
  std::string::size_type size;
  int v10;
  std::string *v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  std::string *String;
  std::string::size_type v16;
  std::string::size_type v17;
  uint64_t *v18;
  std::string *v19;
  uint64_t *v20;
  std::string *v21;
  size_t v22;
  std::string *p_p;
  std::string *v24;
  uint64_t v25;
  uint64_t Bytes;
  std::string *v27;
  uint64_t v28;
  uint64_t *v29;
  std::string *v30;
  uint64_t *v31;
  size_t v32;
  std::string *v33;
  std::string *v34;
  uint64_t v35;
  std::string *v36;
  _QWORD *v37;
  std::string __p;
  char v40;

  v6 = 0;
  v7 = 0;
  v8 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  size = __str->__r_.__value_.__l.__size_;
  v10 = __str->__r_.__value_.__r.__words[0];
  if ((v8 & 0x80) != 0)
    goto LABEL_4;
LABEL_2:
  v11 = __str;
  if (v6 >= v8)
  {
    if (!(((_DWORD)v8 == 0) | v7 & 1))
      goto LABEL_19;
    return 0;
  }
  do
  {
    if (v11->__r_.__value_.__s.__data_[v6] - 97 < 0x1A
      || v11->__r_.__value_.__s.__data_[v6] - 65 < 0x1A
      || v11->__r_.__value_.__s.__data_[v6] - 48 < 0xA
      || (v12 = v11->__r_.__value_.__s.__data_[v6], v12 == 95))
    {
      v7 = 0;
    }
    else
    {
      if (v7 & 1 | (v12 != 46))
        return 0;
      v7 = 1;
    }
    ++v6;
    if ((v8 & 0x80) == 0)
      goto LABEL_2;
LABEL_4:
    v11 = (std::string *)__str->__r_.__value_.__r.__words[0];
  }
  while (size > v6);
  if ((size == 0) | v7 & 1)
    return 0;
  v10 = *(unsigned __int8 *)__str->__r_.__value_.__l.__data_;
LABEL_19:
  v14 = *(uint64_t **)(a1 + 32);
  if (v10 == 46)
  {
    std::string::basic_string(&__p, __str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v40);
    String = google::protobuf::DescriptorPool::Tables::AllocateString(v14, (uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    String = google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(a1 + 32), (uint64_t)__str);
  }
  v16 = std::string::rfind(String, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v16 == -1)
  {
    google::protobuf::internal::InitProtobufDefaults((google::protobuf::internal *)0xFFFFFFFFFFFFFFFFLL);
    v19 = (std::string *)&google::protobuf::internal::fixed_address_empty_string;
    v21 = String;
  }
  else
  {
    v17 = v16;
    v18 = *(uint64_t **)(a1 + 32);
    std::string::basic_string(&__p, String, 0, v16, (std::allocator<char> *)&v40);
    v19 = google::protobuf::DescriptorPool::Tables::AllocateString(v18, (uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v20 = *(uint64_t **)(a1 + 32);
    std::string::basic_string(&__p, String, v17 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v40);
    v21 = google::protobuf::DescriptorPool::Tables::AllocateString(v20, (uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((String->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v22 = HIBYTE(String->__r_.__value_.__r.__words[2]);
  else
    v22 = String->__r_.__value_.__l.__size_;
  p_p = &__p;
  std::string::basic_string[abi:ne180100]((uint64_t)&__p, v22 + 18);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if (v22)
  {
    if ((String->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v24 = String;
    else
      v24 = (std::string *)String->__r_.__value_.__r.__words[0];
    memmove(p_p, v24, v22);
  }
  strcpy((char *)p_p + v22, ".placeholder.proto");
  v25 = google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld(a1, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  *(_QWORD *)(v25 + 8) = v19;
  if (a3 == 1)
  {
    *(_DWORD *)(v25 + 48) = 1;
    Bytes = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(a1 + 32), 80);
    *(_QWORD *)(v25 + 112) = Bytes;
    *(_OWORD *)(Bytes + 24) = 0u;
    *(_OWORD *)(Bytes + 40) = 0u;
    *(_OWORD *)(Bytes + 56) = 0u;
    *(_QWORD *)(Bytes + 72) = 0;
    *(_QWORD *)Bytes = v21;
    *(_QWORD *)(Bytes + 8) = String;
    *(_QWORD *)(Bytes + 16) = v25;
    *(_QWORD *)(Bytes + 32) = google::protobuf::EnumOptions::default_instance((google::protobuf::EnumOptions *)Bytes);
    *(_BYTE *)(Bytes + 40) = 1;
    if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v27 = __str;
    else
      v27 = (std::string *)__str->__r_.__value_.__r.__words[0];
    *(_BYTE *)(Bytes + 41) = v27->__r_.__value_.__s.__data_[0] != 46;
    *(_DWORD *)(Bytes + 44) = 1;
    v28 = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(a1 + 32), 40);
    *(_QWORD *)(Bytes + 48) = v28;
    *(_OWORD *)v28 = 0u;
    *(_OWORD *)(v28 + 16) = 0u;
    *(_QWORD *)(v28 + 32) = 0;
    v29 = *(uint64_t **)(a1 + 32);
    std::string::basic_string[abi:ne180100]<0>(&__p, "PLACEHOLDER_VALUE");
    v30 = google::protobuf::DescriptorPool::Tables::AllocateString(v29, (uint64_t)&__p);
    *(_QWORD *)v28 = v30;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v19->__r_.__value_.__r.__words[2]) < 0)
    {
      if (v19->__r_.__value_.__l.__size_)
        goto LABEL_49;
    }
    else if (*((_BYTE *)&v19->__r_.__value_.__s + 23))
    {
LABEL_49:
      v31 = *(uint64_t **)(a1 + 32);
      if ((v19->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v32 = HIBYTE(v19->__r_.__value_.__r.__words[2]);
      else
        v32 = v19->__r_.__value_.__l.__size_;
      v33 = &__p;
      std::string::basic_string[abi:ne180100]((uint64_t)&__p, v32 + 18);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        v33 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if (v32)
      {
        if ((v19->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v34 = v19;
        else
          v34 = (std::string *)v19->__r_.__value_.__r.__words[0];
        memmove(v33, v34, v32);
      }
      strcpy((char *)v33 + v32, ".PLACEHOLDER_VALUE");
      v30 = google::protobuf::DescriptorPool::Tables::AllocateString(v31, (uint64_t)&__p);
      *(_QWORD *)(v28 + 8) = v30;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_68;
    }
    *(_QWORD *)(v28 + 8) = *(_QWORD *)v28;
LABEL_68:
    *(_DWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = Bytes;
    *(_QWORD *)(v28 + 32) = google::protobuf::EnumValueOptions::default_instance((google::protobuf::EnumValueOptions *)v30);
    return 4;
  }
  v13 = 1;
  *(_DWORD *)(v25 + 44) = 1;
  v35 = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(a1 + 32), 144);
  *(_QWORD *)(v25 + 104) = v35;
  *(_OWORD *)(v35 + 24) = 0u;
  *(_OWORD *)(v35 + 40) = 0u;
  *(_OWORD *)(v35 + 56) = 0u;
  *(_OWORD *)(v35 + 72) = 0u;
  *(_OWORD *)(v35 + 88) = 0u;
  *(_OWORD *)(v35 + 104) = 0u;
  *(_OWORD *)(v35 + 120) = 0u;
  *(_QWORD *)(v35 + 136) = 0;
  *(_QWORD *)v35 = v21;
  *(_QWORD *)(v35 + 8) = String;
  *(_QWORD *)(v35 + 16) = v25;
  *(_QWORD *)(v35 + 32) = google::protobuf::MessageOptions::default_instance((google::protobuf::MessageOptions *)v35);
  *(_BYTE *)(v35 + 136) = 1;
  if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v36 = __str;
  else
    v36 = (std::string *)__str->__r_.__value_.__r.__words[0];
  *(_BYTE *)(v35 + 137) = v36->__r_.__value_.__s.__data_[0] != 46;
  if (a3 == 2)
  {
    *(_DWORD *)(v35 + 120) = 1;
    v37 = (_QWORD *)google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(a1 + 32), 16);
    *(_QWORD *)(v35 + 72) = v37;
    *v37 = 0x2000000000000001;
  }
  return v13;
}

void sub_1BF816A3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld(uint64_t a1, uint64_t a2)
{
  uint64_t Bytes;
  std::string *String;
  google::protobuf::FileOptions *v6;
  google::protobuf::SourceCodeInfo *v7;
  unsigned __int8 v8;
  google::protobuf::FileDescriptorTables *v10;
  const void *v11;

  Bytes = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(a1 + 32), 160);
  *(_OWORD *)Bytes = 0u;
  *(_OWORD *)(Bytes + 16) = 0u;
  *(_OWORD *)(Bytes + 32) = 0u;
  *(_OWORD *)(Bytes + 48) = 0u;
  *(_OWORD *)(Bytes + 64) = 0u;
  *(_OWORD *)(Bytes + 80) = 0u;
  *(_OWORD *)(Bytes + 96) = 0u;
  *(_OWORD *)(Bytes + 112) = 0u;
  *(_OWORD *)(Bytes + 128) = 0u;
  *(_OWORD *)(Bytes + 144) = 0u;
  String = google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(a1 + 32), a2);
  *(_QWORD *)Bytes = String;
  google::protobuf::internal::InitProtobufDefaults((google::protobuf::internal *)String);
  *(_QWORD *)(Bytes + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *(_QWORD *)(Bytes + 16) = a1;
  v7 = (google::protobuf::SourceCodeInfo *)google::protobuf::FileOptions::default_instance(v6);
  *(_QWORD *)(Bytes + 136) = v7;
  if ((v8 & 1) == 0)
  {
    if ((_DWORD)v7)
    {
      v10 = (google::protobuf::FileDescriptorTables *)operator new();
      google::protobuf::FileDescriptorTables::FileDescriptorTables(v10);
      google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::OnShutdownDelete<google::protobuf::FileDescriptorTables>(google::protobuf::FileDescriptorTables *)::{lambda(void const*)#1}::__invoke, (void (*)(const void *))v10, v11);
      google::protobuf::FileDescriptorTables::GetEmptyInstance(void)::file_descriptor_tables = (uint64_t)v10;
    }
  }
  *(_QWORD *)(Bytes + 144) = google::protobuf::FileDescriptorTables::GetEmptyInstance(void)::file_descriptor_tables;
  *(_QWORD *)(Bytes + 152) = google::protobuf::SourceCodeInfo::default_instance(v7);
  *(_WORD *)(Bytes + 64) = 257;
  *(_DWORD *)(Bytes + 60) = 2;
  return Bytes;
}

void sub_1BF816B70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A0C40C644375CLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::AddSymbol(uint64_t a1, const std::string *a2, uint64_t *a3, uint64_t a4, uint64_t a5, const char *a6, const char *a7)
{
  uint64_t *v11;
  _QWORD *v15;
  const std::string *v16;
  uint64_t **v17;
  __int128 v18;
  std::string *v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  uint64_t File;
  const std::string::value_type ***v24;
  std::string *v25;
  __int128 v26;
  int v27;
  const std::string::value_type *v28;
  std::string::size_type v29;
  std::string *v30;
  __int128 v31;
  std::string *v32;
  __int128 v33;
  void *v34;
  std::string::size_type v35;
  std::string::size_type v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  __int128 v40;
  std::string *p_p;
  std::string::size_type size;
  std::string *v43;
  __int128 v44;
  std::string *v45;
  __int128 v46;
  std::string *v47;
  __int128 v48;
  std::string __p;
  std::string v50;
  std::string v51;
  std::string v52;
  std::string v53;
  __int128 v54;
  std::string::size_type v55;
  char v56;

  v11 = a3;
  if (!a3)
    v11 = *(uint64_t **)(a1 + 80);
  if (google::protobuf::DescriptorPool::Tables::AddSymbol(*(_QWORD **)(a1 + 8), (const char *)a2, a6, a7))
  {
    if ((google::protobuf::FileDescriptorTables::AddAliasUnderParent(*(_QWORD *)(a1 + 88), v11, a4, (uint64_t)a6, (uint64_t)a7) & 1) != 0)return 1;
    if (!*(_BYTE *)(a1 + 48))
    {
      v19 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v54, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 3994);
      v20 = google::protobuf::internal::LogMessage::operator<<(v19, "\"");
      v21 = google::protobuf::internal::LogMessage::operator<<(v20, (const std::string::value_type *)a2);
      v22 = google::protobuf::internal::LogMessage::operator<<(v21, "\" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn't be possible.");
      google::protobuf::internal::LogFinisher::operator=((int)&v53, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v54);
    }
  }
  else
  {
    v15 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 264);
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v16 = a2;
    else
      v16 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    *(_QWORD *)&v54 = v16;
    v17 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v15, (const char **)&v54);
    if (v17)
      v18 = *(_OWORD *)(v17 + 3);
    else
      v18 = 0uLL;
    v54 = v18;
    File = google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)&v54);
    if (File == *(_QWORD *)(a1 + 80))
    {
      v35 = std::string::rfind(a2, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v35 == -1)
      {
        std::operator+<char>();
        v47 = std::string::append(&v53, "\" is already defined.");
        v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
        v55 = v47->__r_.__value_.__r.__words[2];
        v54 = v48;
        v47->__r_.__value_.__l.__size_ = 0;
        v47->__r_.__value_.__r.__words[2] = 0;
        v47->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)&v54);
        if (SHIBYTE(v55) < 0)
          operator delete((void *)v54);
        if ((SHIBYTE(v53.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return 0;
        v34 = (void *)v53.__r_.__value_.__r.__words[0];
      }
      else
      {
        v36 = v35;
        std::string::basic_string(&v50, a2, v35 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__p);
        v37 = std::string::insert(&v50, 0, "\"");
        v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v51.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        v39 = std::string::append(&v51, "\" is already defined in \"");
        v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v52.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        std::string::basic_string(&__p, a2, 0, v36, (std::allocator<char> *)&v56);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        v43 = std::string::append(&v52, (const std::string::value_type *)p_p, size);
        v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
        v53.__r_.__value_.__r.__words[2] = v43->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v44;
        v43->__r_.__value_.__l.__size_ = 0;
        v43->__r_.__value_.__r.__words[2] = 0;
        v43->__r_.__value_.__r.__words[0] = 0;
        v45 = std::string::append(&v53, "\".");
        v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
        v55 = v45->__r_.__value_.__r.__words[2];
        v54 = v46;
        v45->__r_.__value_.__l.__size_ = 0;
        v45->__r_.__value_.__r.__words[2] = 0;
        v45->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)&v54);
        if (SHIBYTE(v55) < 0)
          operator delete((void *)v54);
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v53.__r_.__value_.__l.__data_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v52.__r_.__value_.__l.__data_);
        if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v51.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v50.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return 0;
        v34 = (void *)v50.__r_.__value_.__r.__words[0];
      }
    }
    else
    {
      v24 = (const std::string::value_type ***)File;
      std::operator+<char>();
      v25 = std::string::append(&v51, "\" is already defined in file \"");
      v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
      v52.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v26;
      v25->__r_.__value_.__l.__size_ = 0;
      v25->__r_.__value_.__r.__words[2] = 0;
      v25->__r_.__value_.__r.__words[0] = 0;
      v27 = *((char *)*v24 + 23);
      if (v27 >= 0)
        v28 = (const std::string::value_type *)*v24;
      else
        v28 = **v24;
      if (v27 >= 0)
        v29 = *((unsigned __int8 *)*v24 + 23);
      else
        v29 = (std::string::size_type)(*v24)[1];
      v30 = std::string::append(&v52, v28, v29);
      v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
      v53.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v31;
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      v32 = std::string::append(&v53, "\".");
      v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
      v55 = v32->__r_.__value_.__r.__words[2];
      v54 = v33;
      v32->__r_.__value_.__l.__size_ = 0;
      v32->__r_.__value_.__r.__words[2] = 0;
      v32->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)&v54);
      if (SHIBYTE(v55) < 0)
        operator delete((void *)v54);
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v53.__r_.__value_.__l.__data_);
      if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v52.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v51.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return 0;
      v34 = (void *)v51.__r_.__value_.__r.__words[0];
    }
    operator delete(v34);
  }
  return 0;
}

void sub_1BF816FD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  uint64_t v40;

  if (*(char *)(v40 - 105) < 0)
    operator delete(*(void **)(v40 - 128));
  if (a40 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddPackage(uint64_t a1, std::string::size_type a2, uint64_t a3, const char *a4)
{
  std::string::size_type v8;
  std::string::size_type v9;
  uint64_t *v10;
  std::string *String;
  void *v12;
  _QWORD *v13;
  std::string::size_type v14;
  uint64_t **v15;
  std::string *v16;
  __int128 v17;
  const std::string::value_type ***File;
  int v19;
  const std::string::value_type *v20;
  std::string::size_type v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  __int128 v25;
  std::string v26;
  std::string v27;
  std::string v28;
  __int128 v29;
  std::string v30;

  if (google::protobuf::DescriptorPool::Tables::AddSymbol(*(_QWORD **)(a1 + 8), (const char *)a2, (const char *)8, a4))
  {
    v8 = std::string::rfind((const std::string *)a2, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v8 == -1)
    {
      google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (uint64_t *)a2, (const std::string::value_type *)a2, a3);
      return;
    }
    v9 = v8;
    v10 = *(uint64_t **)(a1 + 8);
    std::string::basic_string(&v30, (const std::string *)a2, 0, v8, (std::allocator<char> *)&v28);
    String = google::protobuf::DescriptorPool::Tables::AllocateString(v10, (uint64_t)&v30);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    google::protobuf::DescriptorBuilder::AddPackage(a1, String, a3, a4);
    std::string::basic_string(&v30, (const std::string *)a2, v9 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v28);
    google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (uint64_t *)&v30, (const std::string::value_type *)a2, a3);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    {
      v12 = (void *)v30.__r_.__value_.__r.__words[0];
LABEL_29:
      operator delete(v12);
    }
  }
  else
  {
    v13 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 264);
    if (*(char *)(a2 + 23) >= 0)
      v14 = a2;
    else
      v14 = *(_QWORD *)a2;
    v30.__r_.__value_.__r.__words[0] = v14;
    v15 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(v13, (const char **)&v30.__r_.__value_.__l.__data_);
    if (v15)
    {
      v29 = *(_OWORD *)(v15 + 3);
      if ((_DWORD)v29 == 8)
        return;
    }
    else
    {
      v29 = 0uLL;
    }
    std::operator+<char>();
    v16 = std::string::append(&v26, "\" is already defined (as something other than a package) in file \"");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v27.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    File = (const std::string::value_type ***)google::protobuf::Symbol::GetFile((google::protobuf::Symbol *)&v29);
    v19 = *((char *)*File + 23);
    if (v19 >= 0)
      v20 = (const std::string::value_type *)*File;
    else
      v20 = **File;
    if (v19 >= 0)
      v21 = *((unsigned __int8 *)*File + 23);
    else
      v21 = (std::string::size_type)(*File)[1];
    v22 = std::string::append(&v27, v20, v21);
    v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    v24 = std::string::append(&v28, "\".");
    v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a3, 0, (const std::string::value_type *)&v30);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v28.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v27.__r_.__value_.__l.__data_);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    {
      v12 = (void *)v26.__r_.__value_.__r.__words[0];
      goto LABEL_29;
    }
  }
}

void sub_1BF817368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  uint64_t v28;

  if (*(char *)(v28 - 57) < 0)
    operator delete(*(void **)(v28 - 80));
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateSymbolName(uint64_t a1, uint64_t *a2, const std::string::value_type *a3, uint64_t a4)
{
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t *v13;
  std::string *v14;
  __int128 v15;
  unint64_t v16;
  std::string v17;
  void *__p[2];
  std::string::size_type v19;

  v7 = *((unsigned __int8 *)a2 + 23);
  v8 = *((char *)a2 + 23) < 0;
  v9 = a2[1];
  if (*((char *)a2 + 23) >= 0)
    v10 = *((unsigned __int8 *)a2 + 23);
  else
    v10 = a2[1];
  if (v10)
  {
    for (i = 0; i < v16; ++i)
    {
      if (v8)
        v13 = (uint64_t *)*a2;
      else
        v13 = a2;
      if (*((unsigned __int8 *)v13 + i) - 123 <= 0xFFFFFFE5
        && *((unsigned __int8 *)v13 + i) - 91 <= 0xFFFFFFE5
        && *((unsigned __int8 *)v13 + i) - 58 <= 0xFFFFFFF5
        && *((_BYTE *)v13 + i) != 95)
      {
        std::operator+<char>();
        v14 = std::string::append(&v17, "\" is not a valid identifier.");
        v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
        v19 = v14->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v15;
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(v19) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v17.__r_.__value_.__l.__data_);
        v7 = *((unsigned __int8 *)a2 + 23);
        v9 = a2[1];
      }
      v8 = (v7 & 0x80u) != 0;
      if ((v7 & 0x80u) == 0)
        v16 = v7;
      else
        v16 = v9;
    }
  }
  else
  {
    google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, "Missing name.");
  }
}

void sub_1BF817568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileOptions *a2, google::protobuf::FileDescriptor *a3)
{
  _DWORD *v6;
  uint64_t v7;
  const void **v8;
  size_t v9;
  void **v10;
  const void *v11;
  void *__p[2];
  char v13;
  void *v14;
  void *v15;
  _DWORD *v16;

  v16 = 0;
  v6 = std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v16, 1uLL);
  *v6 = 8;
  v14 = v6;
  v16 = &v6[v7];
  v15 = v6 + 1;
  v8 = (const void **)*((_QWORD *)a3 + 1);
  if (*((char *)v8 + 23) >= 0)
    v9 = *((unsigned __int8 *)v8 + 23);
  else
    v9 = (size_t)v8[1];
  v10 = __p;
  std::string::basic_string[abi:ne180100]((uint64_t)__p, v9 + 6);
  if (v13 < 0)
    v10 = (void **)__p[0];
  if (v9)
  {
    if (*((char *)v8 + 23) >= 0)
      v11 = v8;
    else
      v11 = *v8;
    memmove(v10, v11, v9);
  }
  strcpy((char *)v10 + v9, ".dummy");
  google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FileDescriptor>((uint64_t)this, (uint64_t)__p, *(_QWORD *)a3, a2, (uint64_t)a3, (uint64_t)&v14);
  if (v13 < 0)
    operator delete(__p[0]);
  if (v14)
  {
    v15 = v14;
    operator delete(v14);
  }
}

void sub_1BF8176E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  if (a16)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FileDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, google::protobuf::MessageLite *a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::FileOptions *v12;
  void *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string __p;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  std::string v27;

  v12 = google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::FileOptions>(*(_QWORD **)(a1 + 8));
  if ((google::protobuf::FileOptions::IsInitialized(a4) & 1) != 0)
  {
    google::protobuf::MessageLite::SerializeAsString(a4, (uint64_t)&__p);
    google::protobuf::MessageLite::ParseFromString(v12, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)(a5 + 136) = v12;
    if (*((int *)v12 + 14) >= 1)
    {
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      if (v24 < 0)
        operator delete(v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v13);
      }
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v27;
    std::string::basic_string[abi:ne180100]((uint64_t)&v27, v14 + 1);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 46;
    v17 = *(char *)(a3 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a3;
    else
      v18 = *(const std::string::value_type **)a3;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a3 + 23);
    else
      v19 = *(_QWORD *)(a3 + 8);
    v20 = std::string::append(&v27, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)&__p, (uint64_t)a4, 7, "Uninterpreted option is missing name or value.");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v13 = (void *)v27.__r_.__value_.__r.__words[0];
      goto LABEL_31;
    }
  }
}

void sub_1BF8178F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AddRecursiveImportError(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  uint64_t v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  uint64_t v17;
  unint64_t v18;
  const std::string::value_type *v19;
  const std::string::value_type *v20;
  std::string v21;

  std::string::basic_string[abi:ne180100]<0>(&v21, "File recursively imports itself: ");
  v6 = **((_QWORD **)this + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*((_QWORD *)this + 1) + 8) - v6) >> 3) > a3)
  {
    v7 = 24 * a3;
    v8 = a3;
    do
    {
      v9 = v6 + v7;
      v10 = *(char *)(v9 + 23);
      if (v10 >= 0)
        v11 = (const std::string::value_type *)v9;
      else
        v11 = *(const std::string::value_type **)v9;
      if (v10 >= 0)
        v12 = *(unsigned __int8 *)(v9 + 23);
      else
        v12 = *(_QWORD *)(v9 + 8);
      std::string::append(&v21, v11, v12);
      std::string::append(&v21, " -> ");
      ++v8;
      v6 = **((_QWORD **)this + 1);
      v7 += 24;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*((_QWORD *)this + 1) + 8) - v6) >> 3) > v8);
  }
  v13 = *((_QWORD *)a2 + 22);
  v14 = *(char *)(v13 + 23);
  if (v14 >= 0)
    v15 = (const std::string::value_type *)*((_QWORD *)a2 + 22);
  else
    v15 = *(const std::string::value_type **)v13;
  if (v14 >= 0)
    v16 = *(unsigned __int8 *)(v13 + 23);
  else
    v16 = *(_QWORD *)(v13 + 8);
  std::string::append(&v21, v15, v16);
  v17 = **((_QWORD **)this + 1);
  v18 = 0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*((_QWORD *)this + 1) + 8) - v17) >> 3) - 1;
  v19 = (const std::string::value_type *)(v17 + 24 * (a3 + 1));
  if (v18 <= a3)
    v20 = (const std::string::value_type *)*((_QWORD *)a2 + 22);
  else
    v20 = v19;
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, (uint64_t)a2, 9, (const std::string::value_type *)&v21);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v21.__r_.__value_.__l.__data_);
}

void sub_1BF817AAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddTwiceListedError(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, int a3)
{
  char *v6;
  const std::string::value_type *v7;
  std::string *v8;
  __int128 v9;
  std::string v10;
  void *__p[2];
  std::string::size_type v12;

  v6 = (char *)a2 + 24;
  v7 = (const std::string::value_type *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, a3);
  google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v6, a3);
  std::operator+<char>();
  v8 = std::string::append(&v10, "\" was listed twice.");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v12 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v7, (uint64_t)a2, 9, (const std::string::value_type *)__p);
  if (SHIBYTE(v12) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v10.__r_.__value_.__l.__data_);
}

void sub_1BF817B9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddImportError(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, int a3)
{
  char *v6;
  std::string *v7;
  void *v8;
  char v9;
  const std::string::value_type *v10;
  std::string v11;
  void *__p;
  __int128 v13;
  _QWORD v14[3];

  v14[2] = *MEMORY[0x1E0C80C00];
  v13 = 0uLL;
  __p = 0;
  v6 = (char *)a2 + 24;
  if (*(_QWORD *)(*(_QWORD *)this + 8))
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, a3);
    std::operator+<char>();
    v7 = std::string::append(&v11, "\" was not found or had errors.");
  }
  else
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, a3);
    std::operator+<char>();
    v7 = std::string::append(&v11, "\" has not been loaded.");
  }
  v8 = (void *)v7->__r_.__value_.__r.__words[0];
  v14[0] = v7->__r_.__value_.__l.__size_;
  *(_QWORD *)((char *)v14 + 7) = *(std::string::size_type *)((char *)&v7->__r_.__value_.__r.__words[1] + 7);
  v9 = HIBYTE(v7->__r_.__value_.__r.__words[2]);
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  *(_QWORD *)((char *)&v13 + 7) = *(_QWORD *)((char *)v14 + 7);
  __p = v8;
  *(_QWORD *)&v13 = v14[0];
  HIBYTE(v13) = v9;
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v11.__r_.__value_.__l.__data_);
  v10 = (const std::string::value_type *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)v6, a3);
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v10, (uint64_t)a2, 9, (const std::string::value_type *)&__p);
  if (SHIBYTE(v13) < 0)
    operator delete(__p);
}

void sub_1BF817D20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

google::protobuf::SourceCodeInfo *google::protobuf::DescriptorBuilder::BuildFileImpl(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2)
{
  google::protobuf::SourceCodeInfo *Bytes;
  google::protobuf::SourceCodeInfo *v5;
  google::protobuf::SourceCodeInfo *v6;
  std::string *v7;
  signed int **v8;
  signed int **v9;
  google::protobuf::FileDescriptorTables *FileTables;
  uint64_t v11;
  BOOL v12;
  int *v13;
  uint64_t v14;
  int v16;
  int v17;
  const std::string::value_type *v19;
  uint64_t v20;
  int v21;
  uint64_t *v22;
  std::string::size_type v23;
  google::protobuf::SourceCodeInfo *v24;
  int v25;
  void *v26;
  uint64_t v27;
  int *v28;
  int v29;
  uint64_t i;
  const void **v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  std::string::size_type v35;
  uint64_t **v36;
  uint64_t FileByName;
  uint64_t v38;
  uint64_t v39;
  google::protobuf::DescriptorPool::Tables *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD **v43;
  _QWORD *v44;
  _QWORD **v45;
  uint64_t v46;
  BOOL v47;
  uint64_t *v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  int v53;
  const google::protobuf::FileDescriptor *v54;
  int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  const google::protobuf::DescriptorProto *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  const google::protobuf::EnumDescriptorProto *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  const google::protobuf::FieldDescriptorProto *v74;
  const google::protobuf::FileOptions *v75;
  std::string *v76;
  const google::protobuf::FileOptions *v77;
  const google::protobuf::FileDescriptor *v78;
  std::string::size_type v79;
  google::protobuf::Message *v80;
  const google::protobuf::Message *v81;
  uint64_t v82;
  uint64_t FieldByName;
  const google::protobuf::FieldDescriptor *v84;
  std::string *v85;
  std::string *v86;
  const std::string::value_type ***v87;
  uint64_t v88;
  const char *v89;
  const void *v90;
  uint64_t v91;
  int v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  const google::protobuf::FieldDescriptor *v105;
  std::string *v106;
  std::string *v107;
  google::protobuf::SourceCodeInfo *v108;
  const std::string::value_type ***v109;
  uint64_t v110;
  const char *v111;
  int v112;
  int v113;
  int *v114;
  char *v115;
  int *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  int *v122;
  int v123;
  const std::string::value_type ***v124;
  const char *v125;
  const void *RepeatedMessage;
  google::protobuf::Message *v127;
  google::protobuf::Reflection *v128;
  uint64_t v129;
  std::string *v130;
  __int128 v131;
  std::string *v132;
  __int128 v133;
  void **v134;
  std::string::size_type v135;
  std::string *v136;
  __int128 v137;
  google::protobuf::Reflection *v138;
  std::string::size_type v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  const google::protobuf::DescriptorProto *v143;
  google::protobuf::SourceCodeInfo *v145;
  const google::protobuf::FileDescriptorProto *v146;
  uint64_t *v147;
  _QWORD *v148[2];
  char **v149;
  char *v150[2];
  void *v151[2];
  unsigned __int8 v152;
  std::string v153;
  std::string v154;
  std::string v155;
  void *v156[2];
  std::string::size_type v157;
  void *v158;
  char *v159;
  char *v160;
  std::string v161[2];
  std::string __p[7];
  uint64_t v163;

  v163 = *MEMORY[0x1E0C80C00];
  Bytes = (google::protobuf::SourceCodeInfo *)google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 160);
  v5 = Bytes;
  *((_QWORD *)this + 10) = Bytes;
  *((_WORD *)Bytes + 32) = 0;
  if ((*((_DWORD *)a2 + 4) & 0x10) != 0)
  {
    if (!*((_QWORD *)a2 + 26))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 7890);
      v7 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: !value || source_code_info_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)v161, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    v8 = (signed int **)google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::SourceCodeInfo>(*((_QWORD **)this + 1));
    v6 = (google::protobuf::SourceCodeInfo *)v8;
    if (*((_QWORD *)a2 + 26))
      v9 = (signed int **)*((_QWORD *)a2 + 26);
    else
      v9 = (signed int **)&google::protobuf::_SourceCodeInfo_default_instance_;
    google::protobuf::SourceCodeInfo::CopyFrom(v8, v9);
    v145 = v6;
  }
  else
  {
    v6 = (google::protobuf::SourceCodeInfo *)google::protobuf::SourceCodeInfo::default_instance(Bytes);
    v145 = 0;
  }
  *((_QWORD *)v5 + 19) = v6;
  FileTables = google::protobuf::DescriptorPool::Tables::AllocateFileTables(*((google::protobuf::DescriptorPool::Tables **)this
                                                                            + 1));
  *((_QWORD *)this + 11) = FileTables;
  *(_QWORD *)(*((_QWORD *)this + 10) + 144) = FileTables;
  if ((*((_BYTE *)a2 + 16) & 1) == 0)
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "");
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (const std::string::value_type *)__p, (uint64_t)a2, 10, "Missing field: FileDescriptorProto.name.");
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  v11 = *((_QWORD *)a2 + 24);
  if (*(char *)(v11 + 23) < 0)
  {
    v14 = *(_QWORD *)(v11 + 8);
    if (v14)
    {
      if (v14 != 6)
        goto LABEL_32;
      if (**(_DWORD **)v11 != 1953460848 || *(_WORD *)(*(_QWORD *)v11 + 4) != 12911)
      {
        v13 = *(int **)v11;
        goto LABEL_28;
      }
    }
LABEL_34:
    v20 = *((_QWORD *)this + 10);
    v21 = 2;
LABEL_35:
    *(_DWORD *)(v20 + 60) = v21;
    goto LABEL_36;
  }
  if (!*(_BYTE *)(v11 + 23))
    goto LABEL_34;
  if (*(_BYTE *)(v11 + 23) != 6)
    goto LABEL_32;
  v12 = *(_DWORD *)v11 == 1953460848 && *(_WORD *)(v11 + 4) == 12911;
  v13 = (int *)*((_QWORD *)a2 + 24);
  if (v12)
    goto LABEL_34;
LABEL_28:
  v16 = *v13;
  v17 = *((unsigned __int16 *)v13 + 2);
  if (v16 == 1953460848 && v17 == 13167)
  {
    v20 = *((_QWORD *)this + 10);
    v21 = 3;
    goto LABEL_35;
  }
LABEL_32:
  *(_DWORD *)(*((_QWORD *)this + 10) + 60) = 0;
  v19 = (const std::string::value_type *)*((_QWORD *)a2 + 22);
  std::operator+<char>();
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v19, (uint64_t)a2, 10, (const std::string::value_type *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p[0].__r_.__value_.__l.__data_);
LABEL_36:
  *(_QWORD *)v5 = google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), *((_QWORD *)a2 + 22));
  v22 = (uint64_t *)*((_QWORD *)this + 1);
  if ((*((_BYTE *)a2 + 16) & 2) != 0)
  {
    *((_QWORD *)v5 + 1) = google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), *((_QWORD *)a2 + 23));
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "");
    *((_QWORD *)v5 + 1) = google::protobuf::DescriptorPool::Tables::AllocateString(v22, (uint64_t)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  *((_QWORD *)v5 + 2) = *(_QWORD *)this;
  if ((google::protobuf::DescriptorPool::Tables::AddFile(*((google::protobuf::DescriptorPool::Tables **)this + 1), v5) & 1) == 0)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 22), (uint64_t)a2, 10, "A file with this name is already in the pool.");
    return 0;
  }
  v23 = *((_QWORD *)v5 + 1);
  if ((*(char *)(v23 + 23) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(v23 + 23))
      goto LABEL_47;
    goto LABEL_46;
  }
  if (*(_QWORD *)(v23 + 8))
LABEL_46:
    google::protobuf::DescriptorBuilder::AddPackage((uint64_t)this, v23, (uint64_t)a2, (const char *)v5);
LABEL_47:
  v150[0] = 0;
  v150[1] = 0;
  v149 = v150;
  v25 = *((_DWORD *)a2 + 8);
  *((_DWORD *)v5 + 8) = v25;
  *((_QWORD *)v5 + 9) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 8 * v25);
  if (*(_BYTE *)(*(_QWORD *)this + 41))
  {
    *((_QWORD *)v5 + 3) = google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(*((google::protobuf::DescriptorPool::Tables **)this
                                                                                        + 1));
    v26 = (void *)google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 8 * *((_DWORD *)a2 + 8));
    *((_QWORD *)v5 + 10) = v26;
    v27 = *((unsigned int *)a2 + 8);
    if ((int)v27 >= 1)
      bzero(v26, 8 * v27);
  }
  else
  {
    *((_QWORD *)v5 + 3) = 0;
    *((_QWORD *)v5 + 10) = 0;
  }
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy((uint64_t)this + 120, *((_QWORD **)this + 16));
  *((_QWORD *)this + 15) = (char *)this + 128;
  *((_QWORD *)this + 16) = 0;
  *((_QWORD *)this + 17) = 0;
  v148[0] = 0;
  v148[1] = 0;
  v147 = (uint64_t *)v148;
  v28 = (int *)((char *)a2 + 160);
  if (*((int *)a2 + 40) >= 1)
  {
    v29 = 0;
    do
    {
      LODWORD(__p[0].__r_.__value_.__l.__data_) = *(_DWORD *)google::protobuf::RepeatedField<int>::Get((_DWORD *)a2 + 40, v29);
      std::__tree<int>::__emplace_unique_key_args<int,int const&>(&v147, (int *)__p, __p);
      ++v29;
    }
    while (v29 < *v28);
  }
  if (*((int *)a2 + 8) >= 1)
  {
    for (i = 0; i < *((int *)a2 + 8); ++i)
    {
      v31 = (const void **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, i);
      std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)&v149, v31, (uint64_t)v31);
      if ((v32 & 1) == 0)
        google::protobuf::DescriptorBuilder::AddTwiceListedError(this, a2, i);
      v161[0].__r_.__value_.__r.__words[0] = 0;
      v33 = *((_QWORD *)this + 1);
      v34 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, i);
      if (*(char *)(v34 + 23) >= 0)
        v35 = v34;
      else
        v35 = *(_QWORD *)v34;
      __p[0].__r_.__value_.__r.__words[0] = v35;
      v36 = std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>((_QWORD *)(v33 + 304), (const char **)&__p[0].__r_.__value_.__l.__data_);
      if (v36)
      {
        FileByName = (uint64_t)v36[3];
        v161[0].__r_.__value_.__r.__words[0] = FileByName;
        if (FileByName)
          goto LABEL_67;
      }
      else
      {
        v161[0].__r_.__value_.__r.__words[0] = 0;
      }
      v38 = *(_QWORD *)(*(_QWORD *)this + 24);
      if (!v38)
      {
        if (!v5)
        {
LABEL_106:
          v24 = 0;
          goto LABEL_235;
        }
LABEL_74:
        v40 = *(google::protobuf::DescriptorPool::Tables **)this;
        if (!*(_BYTE *)(*(_QWORD *)this + 41))
        {
          if (*((_BYTE *)v40 + 42))
            goto LABEL_76;
          if (*((_BYTE *)v40 + 43))
            goto LABEL_88;
          v42 = v148[0];
          if (!v148[0])
            goto LABEL_88;
          v43 = v148;
          do
          {
            v44 = v42;
            v45 = v43;
            v46 = *((int *)v42 + 7);
            if (i <= v46)
              v43 = (_QWORD **)v42;
            else
              ++v42;
            v42 = (_QWORD *)*v42;
          }
          while (v42);
          if (v43 == v148)
            goto LABEL_88;
          if (i > v46)
            v44 = v45;
          if (i >= *((int *)v44 + 7))
          {
LABEL_76:
            v41 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, i);
            v161[0].__r_.__value_.__r.__words[0] = google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld((uint64_t)v40, v41);
          }
          else
          {
LABEL_88:
            google::protobuf::DescriptorBuilder::AddImportError(this, a2, i);
          }
        }
        goto LABEL_89;
      }
      v39 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, i);
      FileByName = google::protobuf::DescriptorPool::FindFileByName(v38, v39);
      v161[0].__r_.__value_.__r.__words[0] = FileByName;
LABEL_67:
      if ((google::protobuf::SourceCodeInfo *)FileByName == v5)
        goto LABEL_106;
      if (!FileByName)
        goto LABEL_74;
      if (*(_BYTE *)(*(_QWORD *)this + 40)
        && *(_QWORD *)this + 56 != std::__tree<std::string>::find<std::string>(*(_QWORD *)this + 48, *((const void ***)a2 + 22))&& !*(_DWORD *)(v161[0].__r_.__value_.__r.__words[0] + 36))
      {
        std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>((uint64_t **)this + 15, (unint64_t *)v161, (uint64_t *)v161);
      }
LABEL_89:
      *(_QWORD *)(*((_QWORD *)v5 + 9) + 8 * i) = v161[0].__r_.__value_.__r.__words[0];
      if (*(_BYTE *)(*(_QWORD *)this + 41))
        v47 = v161[0].__r_.__value_.__r.__words[0] == 0;
      else
        v47 = 0;
      if (v47)
      {
        v48 = (uint64_t *)*((_QWORD *)this + 1);
        v49 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 24, i);
        *(_QWORD *)(*((_QWORD *)v5 + 10) + 8 * i) = google::protobuf::DescriptorPool::Tables::AllocateString(v48, v49);
      }
    }
  }
  *((_QWORD *)v5 + 11) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 4 * *((_DWORD *)a2 + 36));
  if (*((int *)a2 + 36) < 1)
  {
    v51 = 0;
  }
  else
  {
    v50 = 0;
    v51 = 0;
    do
    {
      v52 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get((_DWORD *)a2 + 36, v50);
      if (v52 < 0 || v52 >= *((_DWORD *)a2 + 8))
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 22), (uint64_t)a2, 10, "Invalid public dependency index.");
      }
      else
      {
        *(_DWORD *)(*((_QWORD *)v5 + 11) + 4 * v51) = v52;
        if (!*(_BYTE *)(*(_QWORD *)this + 41))
        {
          __p[0].__r_.__value_.__r.__words[0] = google::protobuf::FileDescriptor::dependency(v5, v52);
          std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>((uint64_t)this + 120, (unint64_t *)__p);
        }
        ++v51;
      }
      ++v50;
    }
    while (v50 < *((_DWORD *)a2 + 36));
  }
  *((_DWORD *)v5 + 9) = v51;
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy((uint64_t)this + 96, *((_QWORD **)this + 13));
  *((_QWORD *)this + 12) = (char *)this + 104;
  *((_QWORD *)this + 14) = 0;
  *((_QWORD *)this + 13) = 0;
  if (!*(_BYTE *)(*(_QWORD *)this + 41) && *((int *)v5 + 8) >= 1)
  {
    v53 = 0;
    do
    {
      v54 = (const google::protobuf::FileDescriptor *)google::protobuf::FileDescriptor::dependency(v5, v53);
      google::protobuf::DescriptorBuilder::RecordPublicDependencies((uint64_t **)this, v54);
      ++v53;
    }
    while (v53 < *((_DWORD *)v5 + 8));
  }
  *((_QWORD *)v5 + 12) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 4 * *v28);
  if (*v28 < 1)
  {
    v56 = 0;
  }
  else
  {
    v55 = 0;
    v56 = 0;
    do
    {
      v57 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get((_DWORD *)a2 + 40, v55);
      if (v57 < 0 || v57 >= *((_DWORD *)a2 + 8))
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 22), (uint64_t)a2, 10, "Invalid weak dependency index.");
      else
        *(_DWORD *)(*((_QWORD *)v5 + 12) + 4 * v56++) = v57;
      ++v55;
    }
    while (v55 < *v28);
  }
  *((_DWORD *)v5 + 10) = v56;
  v58 = *((_DWORD *)a2 + 14);
  *((_DWORD *)v5 + 11) = v58;
  *((_QWORD *)v5 + 13) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 144 * v58);
  if (*((int *)a2 + 14) >= 1)
  {
    v59 = 0;
    v60 = 0;
    do
    {
      v61 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a2 + 48, v60);
      google::protobuf::DescriptorBuilder::BuildMessage(this, v61, 0, (google::protobuf::Descriptor *)(*((_QWORD *)v5 + 13) + v59));
      ++v60;
      v59 += 144;
    }
    while (v60 < *((int *)a2 + 14));
  }
  v62 = *((_DWORD *)a2 + 20);
  *((_DWORD *)v5 + 12) = v62;
  *((_QWORD *)v5 + 14) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 80 * v62);
  if (*((int *)a2 + 20) >= 1)
  {
    v63 = 0;
    v64 = 0;
    do
    {
      v65 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a2 + 72, v64);
      google::protobuf::DescriptorBuilder::BuildEnum(this, v65, 0, (google::protobuf::EnumDescriptor *)(*((_QWORD *)v5 + 14) + v63));
      ++v64;
      v63 += 80;
    }
    while (v64 < *((int *)a2 + 20));
  }
  v66 = *((_DWORD *)a2 + 26);
  *((_DWORD *)v5 + 13) = v66;
  *((_QWORD *)v5 + 15) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 48 * v66);
  if (*((int *)a2 + 26) >= 1)
  {
    v67 = 0;
    v68 = 0;
    do
    {
      v69 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((uint64_t)a2 + 96, v68);
      google::protobuf::DescriptorBuilder::BuildService((uint64_t)this, v69, v70, *((_QWORD *)v5 + 15) + v67);
      ++v68;
      v67 += 48;
    }
    while (v68 < *((int *)a2 + 26));
  }
  v71 = *((_DWORD *)a2 + 32);
  *((_DWORD *)v5 + 14) = v71;
  *((_QWORD *)v5 + 16) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 152 * v71);
  if (*((int *)a2 + 32) >= 1)
  {
    v72 = 0;
    v73 = 0;
    do
    {
      v74 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a2 + 120, v73);
      google::protobuf::DescriptorBuilder::BuildFieldOrExtension(this, v74, 0, (int32x2_t *)(*((_QWORD *)v5 + 16) + v72), 1);
      ++v73;
      v72 += 152;
    }
    while (v73 < *((int *)a2 + 32));
  }
  if ((*((_DWORD *)a2 + 4) & 8) != 0)
  {
    v75 = (const google::protobuf::FileOptions *)*((_QWORD *)a2 + 25);
    if (!v75)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 7822);
      v76 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: !value || options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)v161, (const char **)&v76->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      v75 = (const google::protobuf::FileOptions *)*((_QWORD *)a2 + 25);
    }
    if (v75)
      v77 = v75;
    else
      v77 = (const google::protobuf::FileOptions *)&google::protobuf::_FileOptions_default_instance_;
    google::protobuf::DescriptorBuilder::AllocateOptions(this, v77, v5);
  }
  else
  {
    *((_QWORD *)v5 + 17) = 0;
  }
  google::protobuf::DescriptorBuilder::CrossLinkFile(this, v5, a2);
  if (*((_BYTE *)this + 48))
  {
LABEL_226:
    if (*((int *)a2 + 14) >= 1)
    {
      v140 = 0;
      v141 = 0;
      do
      {
        v142 = *((_QWORD *)v5 + 13);
        v143 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a2 + 48, v141);
        google::protobuf::DescriptorBuilder::DetectMapConflicts(this, (const google::protobuf::Descriptor *)(v142 + v140), v143);
        ++v141;
        v140 += 144;
      }
      while (v141 < *((int *)a2 + 14));
    }
    goto LABEL_229;
  }
  google::protobuf::DescriptorBuilder::OptionInterpreter::OptionInterpreter((google::protobuf::DescriptorBuilder::OptionInterpreter *)__p, this);
  v79 = *((_QWORD *)this + 3);
  if (v79 == *((_QWORD *)this + 4))
    goto LABEL_223;
  v146 = a2;
  do
  {
    v81 = *(const google::protobuf::Message **)(v79 + 72);
    v80 = *(google::protobuf::Message **)(v79 + 80);
    __p[0].__r_.__value_.__l.__size_ = v79;
    v82 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)v80 + 168))(v80);
    std::string::basic_string[abi:ne180100]<0>(v161, "uninterpreted_option");
    FieldByName = google::protobuf::Descriptor::FindFieldByName(v82, (uint64_t)v161);
    v84 = (const google::protobuf::FieldDescriptor *)FieldByName;
    if (SHIBYTE(v161[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v161[0].__r_.__value_.__l.__data_);
      if (v84)
        goto LABEL_149;
    }
    else if (FieldByName)
    {
      goto LABEL_149;
    }
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v161, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 6269);
    v85 = google::protobuf::internal::LogMessage::operator<<(v161, "CHECK failed: uninterpreted_options_field != nullptr: ");
    v86 = google::protobuf::internal::LogMessage::operator<<(v85, "No field named \"uninterpreted_option\" in the Options proto.");
    google::protobuf::internal::LogFinisher::operator=((int)&v158, (const char **)&v86->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v161[0].__r_.__value_.__l.__data_);
LABEL_149:
    (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v80 + 168))(v80);
    google::protobuf::Reflection::ClearField(v87, v80, v84, v88, v89);
    v90 = *(const void **)(v79 + 48);
    v91 = *(_QWORD *)(v79 + 56);
    v158 = 0;
    v159 = 0;
    v160 = 0;
    std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(&v158, v90, v91, (v91 - (uint64_t)v90) >> 2);
    v92 = *((_DWORD *)v84 + 17);
    v93 = v159;
    if (v159 >= v160)
    {
      v95 = (char *)v158;
      v96 = (v159 - (_BYTE *)v158) >> 2;
      v97 = v96 + 1;
      if ((unint64_t)(v96 + 1) >> 62)
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      v98 = v160 - (_BYTE *)v158;
      if ((v160 - (_BYTE *)v158) >> 1 > v97)
        v97 = v98 >> 1;
      if ((unint64_t)v98 >= 0x7FFFFFFFFFFFFFFCLL)
        v99 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v99 = v97;
      if (v99)
      {
        v100 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v160, v99);
        v95 = (char *)v158;
        v93 = v159;
      }
      else
      {
        v100 = 0;
      }
      v101 = &v100[4 * v96];
      *(_DWORD *)v101 = v92;
      v94 = v101 + 4;
      while (v93 != v95)
      {
        v102 = *((_DWORD *)v93 - 1);
        v93 -= 4;
        *((_DWORD *)v101 - 1) = v102;
        v101 -= 4;
      }
      v158 = v101;
      v159 = v94;
      v160 = &v100[4 * v99];
      if (v95)
        operator delete(v95);
    }
    else
    {
      *(_DWORD *)v159 = v92;
      v94 = v93 + 4;
    }
    v159 = v94;
    v103 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)v81 + 168))(v81);
    std::string::basic_string[abi:ne180100]<0>(v161, "uninterpreted_option");
    v104 = google::protobuf::Descriptor::FindFieldByName(v103, (uint64_t)v161);
    v105 = (const google::protobuf::FieldDescriptor *)v104;
    if (SHIBYTE(v161[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v161[0].__r_.__value_.__l.__data_);
      if (v105)
        goto LABEL_170;
    }
    else if (v104)
    {
      goto LABEL_170;
    }
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v161, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 6280);
    v106 = google::protobuf::internal::LogMessage::operator<<(v161, "CHECK failed: original_uninterpreted_options_field != nullptr: ");
    v107 = google::protobuf::internal::LogMessage::operator<<(v106, "No field named \"uninterpreted_option\" in the Options proto.");
    google::protobuf::internal::LogFinisher::operator=((int)v156, (const char **)&v107->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v161[0].__r_.__value_.__l.__data_);
LABEL_170:
    v108 = v5;
    (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)v81 + 168))(v81);
    v112 = google::protobuf::Reflection::FieldSize(v109, v81, v105, v110, v111);
    if (v112 < 1)
    {
LABEL_191:
      *(_OWORD *)&__p[0].__r_.__value_.__r.__words[1] = 0uLL;
      v127 = (google::protobuf::Message *)(*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)v80 + 24))(v80);
      (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v80 + 168))(v80);
      v5 = v108;
      google::protobuf::Reflection::Swap(v128, v127, v80);
      memset(v161, 0, 24);
      a2 = v146;
      if (!google::protobuf::MessageLite::AppendToString((const char *)v127, v161)
        || (google::protobuf::MessageLite::ParseFromString(v80, v161) & 1) == 0)
      {
        v129 = __p[0].__r_.__value_.__r.__words[0];
        google::protobuf::Message::ShortDebugString(v127, (uint64_t)&v153);
        v130 = std::string::insert(&v153, 0, "Some options could not be correctly parsed using the proto descriptors compiled into this binary.\nUnparsed options: ");
        v131 = *(_OWORD *)&v130->__r_.__value_.__l.__data_;
        v154.__r_.__value_.__r.__words[2] = v130->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v154.__r_.__value_.__l.__data_ = v131;
        v130->__r_.__value_.__l.__size_ = 0;
        v130->__r_.__value_.__r.__words[2] = 0;
        v130->__r_.__value_.__r.__words[0] = 0;
        v132 = std::string::append(&v154, "\nParsing attempt:  ");
        v133 = *(_OWORD *)&v132->__r_.__value_.__l.__data_;
        v155.__r_.__value_.__r.__words[2] = v132->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v155.__r_.__value_.__l.__data_ = v133;
        v132->__r_.__value_.__l.__size_ = 0;
        v132->__r_.__value_.__r.__words[2] = 0;
        v132->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::Message::ShortDebugString(v80, (uint64_t)v151);
        if ((v152 & 0x80u) == 0)
          v134 = v151;
        else
          v134 = (void **)v151[0];
        if ((v152 & 0x80u) == 0)
          v135 = v152;
        else
          v135 = (std::string::size_type)v151[1];
        v136 = std::string::append(&v155, (const std::string::value_type *)v134, v135);
        v137 = *(_OWORD *)&v136->__r_.__value_.__l.__data_;
        v157 = v136->__r_.__value_.__r.__words[2];
        *(_OWORD *)v156 = v137;
        v136->__r_.__value_.__l.__size_ = 0;
        v136->__r_.__value_.__r.__words[2] = 0;
        v136->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(v129, (const std::string::value_type *)(v79 + 24), (uint64_t)v81, 10, (const std::string::value_type *)v156);
        if (SHIBYTE(v157) < 0)
          operator delete(v156[0]);
        if ((char)v152 < 0)
          operator delete(v151[0]);
        if (SHIBYTE(v155.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v155.__r_.__value_.__l.__data_);
        if (SHIBYTE(v154.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v154.__r_.__value_.__l.__data_);
        if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v153.__r_.__value_.__l.__data_);
        (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v80 + 168))(v80);
        google::protobuf::Reflection::Swap(v138, v127, v80);
      }
      if (SHIBYTE(v161[0].__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v161[0].__r_.__value_.__l.__data_);
        if (!v127)
          goto LABEL_216;
LABEL_215:
        (*(void (**)(google::protobuf::Message *))(*(_QWORD *)v127 + 8))(v127);
        goto LABEL_216;
      }
      if (v127)
        goto LABEL_215;
    }
    else
    {
      v113 = 0;
      v114 = (int *)v159;
      while (1)
      {
        if (v114 >= (int *)v160)
        {
          v116 = (int *)v158;
          v117 = ((char *)v114 - (_BYTE *)v158) >> 2;
          v118 = v117 + 1;
          if ((unint64_t)(v117 + 1) >> 62)
            std::vector<BOOL>::__throw_length_error[abi:ne180100]();
          v119 = v160 - (_BYTE *)v158;
          if ((v160 - (_BYTE *)v158) >> 1 > v118)
            v118 = v119 >> 1;
          if ((unint64_t)v119 >= 0x7FFFFFFFFFFFFFFCLL)
            v120 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v120 = v118;
          if (v120)
          {
            v121 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v160, v120);
            v116 = (int *)v158;
            v114 = (int *)v159;
          }
          else
          {
            v121 = 0;
          }
          v122 = (int *)&v121[4 * v117];
          *v122 = v113;
          v115 = (char *)(v122 + 1);
          while (v114 != v116)
          {
            v123 = *--v114;
            *--v122 = v123;
          }
          v158 = v122;
          v159 = v115;
          v160 = &v121[4 * v120];
          if (v116)
            operator delete(v116);
        }
        else
        {
          *v114 = v113;
          v115 = (char *)(v114 + 1);
        }
        v159 = v115;
        (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)v81 + 168))(v81);
        RepeatedMessage = (const void *)google::protobuf::Reflection::GetRepeatedMessage(v124, v81, v105, v113, v125);
        __p[0].__r_.__value_.__r.__words[2] = (std::string::size_type)RepeatedMessage;
        if ((google::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption((uint64_t)__p, v80, (int **)&v158, v79 + 48) & 1) == 0)break;
        v114 = (int *)(v159 - 4);
        v159 -= 4;
        if (++v113 == v112)
          goto LABEL_191;
      }
      *(_OWORD *)&__p[0].__r_.__value_.__r.__words[1] = 0uLL;
      v5 = v108;
      a2 = v146;
    }
LABEL_216:
    if (v158)
    {
      v159 = (char *)v158;
      operator delete(v158);
    }
    v79 += 88;
  }
  while (v79 != *((_QWORD *)this + 4));
  v139 = *((_QWORD *)this + 3);
  while (v79 != v139)
  {
    v79 -= 88;
  }
  v79 = v139;
LABEL_223:
  *((_QWORD *)this + 4) = v79;
  if (v145)
    google::protobuf::DescriptorBuilder::OptionInterpreter::UpdateSourceCodeInfo((google::protobuf::DescriptorBuilder::OptionInterpreter *)__p, v145);
  google::protobuf::DescriptorBuilder::OptionInterpreter::~OptionInterpreter((google::protobuf::DescriptorBuilder::OptionInterpreter *)__p);
  if (*((_BYTE *)this + 48))
    goto LABEL_226;
  if (!*(_BYTE *)(*(_QWORD *)this + 41))
  {
    google::protobuf::DescriptorBuilder::ValidateFileOptions(this, v5, a2);
    if (*((_BYTE *)this + 48))
      goto LABEL_226;
  }
LABEL_229:
  if (*((_QWORD *)this + 17) && !*(_BYTE *)(*(_QWORD *)this + 41))
    google::protobuf::DescriptorBuilder::LogUnusedDependency(this, a2, v78);
  if (*((_BYTE *)this + 48))
    v24 = 0;
  else
    v24 = v5;
LABEL_235:
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy((uint64_t)&v147, v148[0]);
  std::__tree<std::string>::destroy((uint64_t)&v149, v150[0]);
  return v24;
}

void sub_1BF818E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,void *__p)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  std::__tree<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::__map_value_compare<google::protobuf::StringPiece,std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>,std::less<google::protobuf::StringPiece>,true>,std::allocator<std::__value_type<google::protobuf::StringPiece,google::protobuf::StringPiece>>>::destroy((uint64_t)&a13, (_QWORD *)a14);
  std::__tree<std::string>::destroy((uint64_t)&a16, (char *)a17);
  _Unwind_Resume(a1);
}

google::protobuf::SourceCodeInfo *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::SourceCodeInfo>(_QWORD *a1)
{
  google::protobuf::SourceCodeInfo *v2;
  unint64_t v3;
  google::protobuf::SourceCodeInfo **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::SourceCodeInfo **v12;
  char *v13;
  google::protobuf::SourceCodeInfo *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::SourceCodeInfo *)operator new();
  google::protobuf::SourceCodeInfo::SourceCodeInfo(v2);
  v3 = a1[26];
  v4 = (google::protobuf::SourceCodeInfo **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::SourceCodeInfo **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::SourceCodeInfo **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::SourceCodeInfo **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF819198(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4050885234);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::BuildMessage(google::protobuf::DescriptorBuilder *this, const google::protobuf::DescriptorProto *a2, const google::protobuf::Descriptor *a3, google::protobuf::Descriptor *a4)
{
  uint64_t **v7;
  std::string *NameString;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  const google::protobuf::FieldDescriptorProto *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  const google::protobuf::DescriptorProto *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  const google::protobuf::EnumDescriptorProto *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  const google::protobuf::FieldDescriptorProto *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t i;
  uint64_t *v40;
  uint64_t v41;
  google::protobuf::MessageLite *v42;
  google::protobuf::DescriptorBuilder *v43;
  std::string *v44;
  std::string *v45;
  google::protobuf::MessageLite *v46;
  int v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  const std::string::value_type *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  int v60;
  uint64_t v61;
  int v62;
  BOOL v63;
  const char *v64;
  uint64_t v65;
  const google::protobuf::DescriptorProto *v66;
  uint64_t v67;
  unsigned __int8 **v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  uint64_t v74;
  const std::string::value_type *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  const char *v80;
  int v81;
  uint64_t v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _DWORD *v88;
  const std::string::value_type **v89;
  uint64_t v90;
  const std::string::value_type *v91;
  char *v92;
  uint64_t v93;
  unsigned __int8 *v94;
  int v95;
  uint64_t v96;
  int v97;
  const std::string::value_type *v98;
  uint64_t v99;
  unsigned __int8 *v100;
  int v101;
  uint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  _DWORD *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  _DWORD *v113;
  uint64_t v114;
  const std::string::value_type *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  _DWORD *v122;
  uint64_t v123;
  uint64_t v124;
  const std::string::value_type *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v146;
  int v147;
  const std::string::value_type **v148;
  uint64_t v149;
  int v150[2];
  google::protobuf::DescriptorBuilder *v151;
  std::string v152;
  void *__p[2];
  __int128 v154;
  int v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  int v167;
  const char *v168;
  int v169;
  _BYTE v170[36];
  const char *v171;
  int v172;
  _BYTE v173[36];
  const char *v174;
  int v175;
  _BYTE v176[36];
  const char *v177;
  int v178;
  _BYTE v179[36];
  uint64_t v180;

  v180 = *MEMORY[0x1E0C80C00];
  if (a3)
    v7 = (uint64_t **)((char *)a3 + 8);
  else
    v7 = (uint64_t **)(*((_QWORD *)this + 10) + 8);
  NameString = google::protobuf::DescriptorBuilder::AllocateNameString((uint64_t)this, *v7, *((_QWORD *)a2 + 27));
  google::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, *((uint64_t **)a2 + 27), (const std::string::value_type *)NameString, (uint64_t)a2);
  *(_QWORD *)a4 = google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), *((_QWORD *)a2 + 27));
  *((_QWORD *)a4 + 1) = NameString;
  *((_QWORD *)a4 + 2) = *((_QWORD *)this + 10);
  *((_QWORD *)a4 + 3) = a3;
  *((_WORD *)a4 + 68) = 0;
  v10 = *((_DWORD *)a2 + 38);
  *((_DWORD *)a4 + 27) = v10;
  *((_QWORD *)a4 + 6) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 48 * v10);
  if (*((int *)a2 + 38) >= 1)
  {
    v11 = 0;
    v12 = 0;
    do
    {
      v13 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>((uint64_t)a2 + 144, v12);
      google::protobuf::DescriptorBuilder::BuildOneof((uint64_t)this, v13, (uint64_t)a4, *((_QWORD *)a4 + 6) + v11);
      ++v12;
      v11 += 48;
    }
    while (v12 < *((int *)a2 + 38));
  }
  v14 = *((_DWORD *)a2 + 8);
  *((_DWORD *)a4 + 26) = v14;
  *((_QWORD *)a4 + 5) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 152 * v14);
  if (*((int *)a2 + 8) >= 1)
  {
    v15 = 0;
    v16 = 0;
    do
    {
      v17 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a2 + 24, v16);
      google::protobuf::DescriptorBuilder::BuildFieldOrExtension(this, v17, a4, (int32x2_t *)(*((_QWORD *)a4 + 5) + v15), 0);
      ++v16;
      v15 += 152;
    }
    while (v16 < *((int *)a2 + 8));
  }
  v18 = *((_DWORD *)a2 + 14);
  *((_DWORD *)a4 + 28) = v18;
  *((_QWORD *)a4 + 7) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 144 * v18);
  if (*((int *)a2 + 14) >= 1)
  {
    v19 = 0;
    v20 = 0;
    do
    {
      v21 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a2 + 48, v20);
      google::protobuf::DescriptorBuilder::BuildMessage(this, v21, a4, (google::protobuf::Descriptor *)(*((_QWORD *)a4 + 7) + v19));
      ++v20;
      v19 += 144;
    }
    while (v20 < *((int *)a2 + 14));
  }
  v22 = *((_DWORD *)a2 + 20);
  *((_DWORD *)a4 + 29) = v22;
  *((_QWORD *)a4 + 8) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 80 * v22);
  if (*((int *)a2 + 20) >= 1)
  {
    v23 = 0;
    v24 = 0;
    do
    {
      v25 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a2 + 72, v24);
      google::protobuf::DescriptorBuilder::BuildEnum(this, v25, a4, (google::protobuf::EnumDescriptor *)(*((_QWORD *)a4 + 8) + v23));
      ++v24;
      v23 += 80;
    }
    while (v24 < *((int *)a2 + 20));
  }
  v26 = *((_DWORD *)a2 + 26);
  *((_DWORD *)a4 + 30) = v26;
  *((_QWORD *)a4 + 9) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 16 * v26);
  if (*((int *)a2 + 26) >= 1)
  {
    v27 = 0;
    v28 = 0;
    do
    {
      v29 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)a2 + 96, v28);
      google::protobuf::DescriptorBuilder::BuildExtensionRange((uint64_t)this, v29, (uint64_t)a4, *((_QWORD *)a4 + 9) + v27);
      ++v28;
      v27 += 16;
    }
    while (v28 < *((int *)a2 + 26));
  }
  v30 = *((_DWORD *)a2 + 32);
  *((_DWORD *)a4 + 31) = v30;
  *((_QWORD *)a4 + 10) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 152 * v30);
  if (*((int *)a2 + 32) >= 1)
  {
    v31 = 0;
    v32 = 0;
    do
    {
      v33 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a2 + 120, v32);
      google::protobuf::DescriptorBuilder::BuildFieldOrExtension(this, v33, a4, (int32x2_t *)(*((_QWORD *)a4 + 10) + v31), 1);
      ++v32;
      v31 += 152;
    }
    while (v32 < *((int *)a2 + 32));
  }
  v34 = *((_DWORD *)a2 + 44);
  *((_DWORD *)a4 + 32) = v34;
  *((_QWORD *)a4 + 11) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 8 * v34);
  if (*((int *)a2 + 44) >= 1)
  {
    v35 = 0;
    do
    {
      v36 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>((uint64_t)a2 + 168, v35);
      v37 = *(_QWORD *)(v36 + 24);
      *(_QWORD *)(*((_QWORD *)a4 + 11) + 8 * v35) = v37;
      if ((int)v37 <= 0)
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a4 + 1), v36, 1, "Reserved numbers must be positive integers.");
      ++v35;
    }
    while (v35 < *((int *)a2 + 44));
  }
  v38 = *((unsigned int *)a2 + 50);
  *((_DWORD *)a4 + 33) = v38;
  *((_QWORD *)a4 + 12) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 8 * (int)v38);
  if ((int)v38 >= 1)
  {
    for (i = 0; i != v38; ++i)
    {
      v40 = (uint64_t *)*((_QWORD *)this + 1);
      v41 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 192, i);
      *(_QWORD *)(*((_QWORD *)a4 + 12) + 8 * i) = google::protobuf::DescriptorPool::Tables::AllocateString(v40, v41);
    }
  }
  v151 = this;
  if ((*((_DWORD *)a2 + 4) & 2) != 0)
  {
    v42 = (google::protobuf::MessageLite *)*((_QWORD *)a2 + 28);
    v43 = this;
    if (!v42)
    {
      v44 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v177, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 8570);
      v45 = google::protobuf::internal::LogMessage::operator<<(v44, "CHECK failed: !value || options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v174, (const char **)&v45->__r_.__value_.__l.__data_);
      v43 = this;
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v177);
      v42 = (google::protobuf::MessageLite *)*((_QWORD *)a2 + 28);
    }
    if (v42)
      v46 = v42;
    else
      v46 = (google::protobuf::MessageLite *)&google::protobuf::_MessageOptions_default_instance_;
    google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::Descriptor>((uint64_t)v43, v46, (uint64_t)a4, 7);
  }
  else
  {
    *((_QWORD *)a4 + 4) = 0;
  }
  google::protobuf::DescriptorBuilder::AddSymbol((uint64_t)this, *((const std::string **)a4 + 1), (uint64_t *)a3, *(_QWORD *)a4, (uint64_t)a2, (const char *)1, (const char *)a4);
  if (*((int *)a2 + 44) >= 1)
  {
    v47 = 0;
    do
    {
      v48 = v47;
      v49 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>((uint64_t)a2 + 168, v47++);
      v50 = *((_DWORD *)a2 + 44);
      if (v47 < v50)
      {
        v51 = v49;
        v147 = v47;
        do
        {
          v52 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>((uint64_t)a2 + 168, v47);
          v53 = v52;
          if (*(_DWORD *)(v51 + 28) > *(_DWORD *)(v52 + 24) && *(_DWORD *)(v52 + 28) > *(_DWORD *)(v51 + 24))
          {
            v54 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
            v55 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>((uint64_t)a2 + 168, v48);
            v177 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(v53 + 24), v179, v56);
            v178 = strlen(v177);
            v174 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*(_DWORD *)(v53 + 28) - 1), v176, v57);
            v175 = strlen(v174);
            v171 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(v51 + 24), v173, v58);
            v172 = strlen(v171);
            v168 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*(_DWORD *)(v51 + 28) - 1), v170, v59);
            v169 = strlen(v168);
            v166 = 0;
            v167 = -1;
            v164 = 0;
            v165 = -1;
            v162 = 0;
            v163 = -1;
            v160 = 0;
            v161 = -1;
            v158 = 0;
            v159 = -1;
            v156 = 0;
            v157 = -1;
            *((_QWORD *)&v133 + 1) = &v158;
            *(_QWORD *)&v133 = &v160;
            google::protobuf::strings::Substitute("Reserved range $0 to $1 overlaps with already-defined range $2 to $3.", (uint64_t)&v177, (uint64_t)&v174, (uint64_t)&v171, (uint64_t)&v168, (uint64_t)&v166, (uint64_t)&v164, (uint64_t)&v162, (std::string *)__p, v133, (uint64_t)&v156);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v54, v55, 1, (const std::string::value_type *)__p);
            if (SBYTE7(v154) < 0)
              operator delete(__p[0]);
          }
          ++v47;
          v50 = *((_DWORD *)a2 + 44);
        }
        while (v47 < v50);
        v47 = v147;
      }
    }
    while (v47 < v50);
  }
  *(_OWORD *)__p = 0u;
  v154 = 0u;
  v155 = 1065353216;
  if (*((int *)a2 + 50) >= 1)
  {
    v60 = 0;
    do
    {
      v61 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 192, v60);
      if (std::__hash_table<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>>>::find<std::string>(__p, (unsigned __int8 *)v61))
      {
        v62 = *(char *)(v61 + 23);
        v63 = v62 < 0;
        v64 = *(const char **)v61;
        v65 = *(_QWORD *)(v61 + 8);
        if (v62 >= 0)
          v64 = (const char *)v61;
        v177 = v64;
        v62 = v62;
        if (v63)
          v62 = v65;
        v178 = v62;
        v174 = 0;
        v175 = -1;
        v171 = 0;
        v172 = -1;
        v168 = 0;
        v169 = -1;
        v166 = 0;
        v167 = -1;
        v164 = 0;
        v165 = -1;
        v162 = 0;
        v163 = -1;
        v160 = 0;
        v161 = -1;
        v158 = 0;
        v159 = -1;
        v156 = 0;
        v157 = -1;
        *((_QWORD *)&v134 + 1) = &v158;
        *(_QWORD *)&v134 = &v160;
        google::protobuf::strings::Substitute("Field name \"$0\" is reserved multiple times.", (uint64_t)&v177, (uint64_t)&v174, (uint64_t)&v171, (uint64_t)&v168, (uint64_t)&v166, (uint64_t)&v164, (uint64_t)&v162, &v152, v134, (uint64_t)&v156);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (const std::string::value_type *)v61, (uint64_t)a2, 0, (const std::string::value_type *)&v152);
        if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v152.__r_.__value_.__l.__data_);
      }
      else
      {
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t)__p, (unsigned __int8 *)v61, v61);
      }
      ++v60;
    }
    while (v60 < *((_DWORD *)a2 + 50));
  }
  v66 = a2;
  if (*((int *)a4 + 26) >= 1)
  {
    v67 = 0;
    do
    {
      v140 = v67;
      v142 = *((_QWORD *)a4 + 5);
      v68 = (unsigned __int8 **)(v142 + 152 * v67);
      v69 = *((_DWORD *)a4 + 30);
      if (v69 >= 1)
      {
        v70 = 0;
        v71 = 0;
        v72 = v142 + 152 * v67;
        v73 = (_DWORD *)(v72 + 68);
        v148 = (const std::string::value_type **)(v72 + 8);
        do
        {
          v74 = *((_QWORD *)a4 + 9);
          if (*(_DWORD *)(v74 + v70) <= *v73 && *v73 < *(_DWORD *)(v74 + v70 + 4))
          {
            v75 = *v148;
            v76 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)a2 + 96, v71);
            v177 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(v74 + v70), v179, v77);
            v178 = strlen(v177);
            v174 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*(_DWORD *)(v74 + v70 + 4) - 1), v176, v78);
            v175 = strlen(v174);
            v80 = (const char *)*v68;
            v81 = (char)(*v68)[23];
            v82 = *((_QWORD *)*v68 + 1);
            if (v81 < 0)
              v80 = *(const char **)*v68;
            v171 = v80;
            v83 = v81;
            if (v81 < 0)
              v83 = v82;
            v172 = v83;
            v168 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*v73, v170, v79);
            v169 = strlen(v168);
            v166 = 0;
            v167 = -1;
            v164 = 0;
            v165 = -1;
            v162 = 0;
            v163 = -1;
            v160 = 0;
            v161 = -1;
            v158 = 0;
            v159 = -1;
            v156 = 0;
            v157 = -1;
            *((_QWORD *)&v135 + 1) = &v158;
            *(_QWORD *)&v135 = &v160;
            google::protobuf::strings::Substitute("Extension range $0 to $1 includes field \"$2\" ($3).", (uint64_t)&v177, (uint64_t)&v174, (uint64_t)&v171, (uint64_t)&v168, (uint64_t)&v166, (uint64_t)&v164, (uint64_t)&v162, &v152, v135, (uint64_t)&v156);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v151, v75, v76, 1, (const std::string::value_type *)&v152);
            if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v152.__r_.__value_.__l.__data_);
            v69 = *((_DWORD *)a4 + 30);
          }
          ++v71;
          v70 += 16;
        }
        while (v71 < v69);
      }
      v84 = *((_DWORD *)a4 + 32);
      if (v84 >= 1)
      {
        v85 = 0;
        v86 = 0;
        v87 = v142 + 152 * v67;
        v88 = (_DWORD *)(v87 + 68);
        v89 = (const std::string::value_type **)(v87 + 8);
        do
        {
          v90 = *((_QWORD *)a4 + 11);
          if (*(_DWORD *)(v90 + v85) <= *v88 && *v88 < *(_DWORD *)(v90 + v85 + 4))
          {
            v91 = *v89;
            v93 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ReservedRange>::TypeHandler>((uint64_t)a2 + 168, v86);
            v94 = *v68;
            v95 = (char)(*v68)[23];
            v96 = *((_QWORD *)*v68 + 1);
            if (v95 < 0)
              v94 = *(unsigned __int8 **)*v68;
            v177 = (const char *)v94;
            v97 = v95;
            if (v95 < 0)
              v97 = v96;
            v178 = v97;
            v174 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*v88, v176, v92);
            v175 = strlen(v174);
            v171 = 0;
            v172 = -1;
            v168 = 0;
            v169 = -1;
            v166 = 0;
            v167 = -1;
            v164 = 0;
            v165 = -1;
            v162 = 0;
            v163 = -1;
            v160 = 0;
            v161 = -1;
            v158 = 0;
            v159 = -1;
            v156 = 0;
            v157 = -1;
            *((_QWORD *)&v136 + 1) = &v158;
            *(_QWORD *)&v136 = &v160;
            google::protobuf::strings::Substitute("Field \"$0\" uses reserved number $1.", (uint64_t)&v177, (uint64_t)&v174, (uint64_t)&v171, (uint64_t)&v168, (uint64_t)&v166, (uint64_t)&v164, (uint64_t)&v162, &v152, v136, (uint64_t)&v156);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v151, v91, v93, 1, (const std::string::value_type *)&v152);
            if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v152.__r_.__value_.__l.__data_);
            v84 = *((_DWORD *)a4 + 32);
          }
          ++v86;
          v85 += 8;
        }
        while (v86 < v84);
      }
      v66 = a2;
      if (std::__hash_table<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>>>::find<std::string>(__p, *v68))
      {
        v98 = *(const std::string::value_type **)(v142 + 152 * v67 + 8);
        v99 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a2 + 24, v67);
        v100 = *v68;
        v101 = (char)(*v68)[23];
        v102 = *((_QWORD *)*v68 + 1);
        if (v101 < 0)
          v100 = *(unsigned __int8 **)*v68;
        v177 = (const char *)v100;
        v103 = v101;
        if (v101 < 0)
          v103 = v102;
        v178 = v103;
        v174 = 0;
        v175 = -1;
        v171 = 0;
        v172 = -1;
        v168 = 0;
        v169 = -1;
        v166 = 0;
        v167 = -1;
        v164 = 0;
        v165 = -1;
        v162 = 0;
        v163 = -1;
        v160 = 0;
        v161 = -1;
        v158 = 0;
        v159 = -1;
        v156 = 0;
        v157 = -1;
        *((_QWORD *)&v137 + 1) = &v158;
        *(_QWORD *)&v137 = &v160;
        google::protobuf::strings::Substitute("Field name \"$0\" is reserved.", (uint64_t)&v177, (uint64_t)&v174, (uint64_t)&v171, (uint64_t)&v168, (uint64_t)&v166, (uint64_t)&v164, (uint64_t)&v162, &v152, v137, (uint64_t)&v156);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v151, v98, v99, 0, (const std::string::value_type *)&v152);
        if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v152.__r_.__value_.__l.__data_);
      }
      ++v67;
    }
    while (v140 + 1 < *((int *)a4 + 26));
  }
  v104 = *((_DWORD *)a4 + 30);
  if (v104 >= 1)
  {
    v105 = 0;
    v106 = 0;
    v149 = (uint64_t)v66 + 96;
    v107 = 1;
    do
    {
      v108 = *((_QWORD *)a4 + 9);
      v109 = (_DWORD *)(v108 + 16 * v106);
      v110 = *((_DWORD *)a4 + 32);
      v146 = v107;
      *(_QWORD *)v150 = v106;
      if (v110 >= 1)
      {
        v141 = *((_QWORD *)a4 + 9);
        v143 = v105;
        v111 = 0;
        v112 = 0;
        v113 = v109 + 1;
        do
        {
          v114 = *((_QWORD *)a4 + 11);
          if (*v113 > *(_DWORD *)(v114 + v111) && *(_DWORD *)(v114 + v111 + 4) > *v109)
          {
            v115 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
            v116 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>(v149, v150[0]);
            v177 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*v109, v179, v117);
            v178 = strlen(v177);
            v174 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*v113 - 1), v176, v118);
            v175 = strlen(v174);
            v171 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(v114 + v111), v173, v119);
            v172 = strlen(v171);
            v168 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*(_DWORD *)(v114 + v111 + 4) - 1), v170, v120);
            v169 = strlen(v168);
            v166 = 0;
            v167 = -1;
            v164 = 0;
            v165 = -1;
            v162 = 0;
            v163 = -1;
            v160 = 0;
            v161 = -1;
            v158 = 0;
            v159 = -1;
            v156 = 0;
            v157 = -1;
            *((_QWORD *)&v138 + 1) = &v158;
            *(_QWORD *)&v138 = &v160;
            google::protobuf::strings::Substitute("Extension range $0 to $1 overlaps with reserved range $2 to $3.", (uint64_t)&v177, (uint64_t)&v174, (uint64_t)&v171, (uint64_t)&v168, (uint64_t)&v166, (uint64_t)&v164, (uint64_t)&v162, &v152, v138, (uint64_t)&v156);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v151, v115, v116, 1, (const std::string::value_type *)&v152);
            if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v152.__r_.__value_.__l.__data_);
            v110 = *((_DWORD *)a4 + 32);
          }
          ++v112;
          v111 += 8;
        }
        while (v112 < v110);
        v104 = *((_DWORD *)a4 + 30);
        v108 = v141;
        v105 = v143;
        v107 = v146;
        v106 = *(_QWORD *)v150;
      }
      v121 = v106 + 1;
      if (v106 + 1 >= v104)
      {
        v131 = v104;
      }
      else
      {
        v144 = v106 + 1;
        v122 = (_DWORD *)(v108 + 16 * v106 + 4);
        v123 = v105;
        do
        {
          v124 = *((_QWORD *)a4 + 9) + v123;
          if (*v122 > *(_DWORD *)(v124 + 16) && *(_DWORD *)(v124 + 20) > *v109)
          {
            v125 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
            v126 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>(v149, v150[0]);
            v177 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(v124 + 16), v179, v127);
            v178 = strlen(v177);
            v174 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*(_DWORD *)(v124 + 20) - 1), v176, v128);
            v175 = strlen(v174);
            v171 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*v109, v173, v129);
            v172 = strlen(v171);
            v168 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*v122 - 1), v170, v130);
            v169 = strlen(v168);
            v166 = 0;
            v167 = -1;
            v164 = 0;
            v165 = -1;
            v162 = 0;
            v163 = -1;
            v160 = 0;
            v161 = -1;
            v158 = 0;
            v159 = -1;
            v156 = 0;
            v157 = -1;
            *((_QWORD *)&v139 + 1) = &v158;
            *(_QWORD *)&v139 = &v160;
            google::protobuf::strings::Substitute("Extension range $0 to $1 overlaps with already-defined range $2 to $3.", (uint64_t)&v177, (uint64_t)&v174, (uint64_t)&v171, (uint64_t)&v168, (uint64_t)&v166, (uint64_t)&v164, (uint64_t)&v162, &v152, v139, (uint64_t)&v156);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v151, v125, v126, 1, (const std::string::value_type *)&v152);
            if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v152.__r_.__value_.__l.__data_);
            v104 = *((_DWORD *)a4 + 30);
          }
          v123 += 16;
          ++v107;
        }
        while (v104 > v107);
        v131 = v104;
        v107 = v146;
        v121 = v144;
      }
      v105 += 16;
      ++v107;
      v106 = v121;
    }
    while (v121 < v131);
  }
  return std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)__p);
}

void sub_1BF81A190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  uint64_t v35;

  google::protobuf::internal::LogMessage::~LogMessage((void **)(v35 - 144));
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::BuildEnum(google::protobuf::DescriptorBuilder *this, const google::protobuf::EnumDescriptorProto *a2, const google::protobuf::Descriptor *a3, google::protobuf::EnumDescriptor *a4)
{
  uint64_t **v8;
  std::string *NameString;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int32x2_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t *v20;
  uint64_t v21;
  google::protobuf::MessageLite *v22;
  std::string *v23;
  std::string *v24;
  google::protobuf::MessageLite *v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const std::string::value_type *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  int v39;
  uint64_t v40;
  int v41;
  BOOL v42;
  const char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 **v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  const std::string::value_type **v52;
  uint64_t v53;
  const std::string::value_type *v54;
  char *v55;
  uint64_t v56;
  unsigned __int8 *v57;
  int v58;
  uint64_t v59;
  int v60;
  const std::string::value_type *v61;
  uint64_t v62;
  unsigned __int8 *v63;
  int v64;
  uint64_t v65;
  int v66;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  int v72;
  int v73[2];
  google::protobuf::DescriptorBuilder *v74;
  std::string v75;
  void *__p[2];
  __int128 v77;
  int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  int v90;
  const char *v91;
  int v92;
  _BYTE v93[36];
  const char *v94;
  int v95;
  _BYTE v96[36];
  const char *v97;
  int v98;
  _BYTE v99[36];
  const char *v100;
  int v101;
  _BYTE v102[36];
  uint64_t v103;

  v103 = *MEMORY[0x1E0C80C00];
  if (a3)
    v8 = (uint64_t **)((char *)a3 + 8);
  else
    v8 = (uint64_t **)(*((_QWORD *)this + 10) + 8);
  NameString = google::protobuf::DescriptorBuilder::AllocateNameString((uint64_t)this, *v8, *((_QWORD *)a2 + 12));
  google::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, *((uint64_t **)a2 + 12), (const std::string::value_type *)NameString, (uint64_t)a2);
  *(_QWORD *)a4 = google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), *((_QWORD *)a2 + 12));
  *((_QWORD *)a4 + 1) = NameString;
  *((_QWORD *)a4 + 2) = *((_QWORD *)this + 10);
  *((_QWORD *)a4 + 3) = a3;
  *((_WORD *)a4 + 20) = 0;
  v10 = *((_DWORD *)a2 + 8);
  if (!v10)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (const std::string::value_type *)NameString, (uint64_t)a2, 0, "Enums must contain at least one value.");
    v10 = *((_DWORD *)a2 + 8);
  }
  *((_DWORD *)a4 + 11) = v10;
  *((_QWORD *)a4 + 6) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 40 * v10);
  if (*((int *)a2 + 8) >= 1)
  {
    v11 = 0;
    v12 = 0;
    do
    {
      v13 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)a2 + 24, v12);
      google::protobuf::DescriptorBuilder::BuildEnumValue((uint64_t)this, v13, (uint64_t *)a4, *((_QWORD *)a4 + 6) + v11);
      ++v12;
      v11 += 40;
    }
    while (v12 < *((int *)a2 + 8));
  }
  v14 = *((_DWORD *)a2 + 14);
  *((_DWORD *)a4 + 14) = v14;
  *((_QWORD *)a4 + 8) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 8 * v14);
  if (*((int *)a2 + 14) >= 1)
  {
    v15 = 0;
    do
    {
      v16 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((uint64_t)a2 + 48, v15);
      v17 = *(int32x2_t *)(v16 + 24);
      *(int32x2_t *)(*((_QWORD *)a4 + 8) + 8 * v15) = v17;
      if ((vcgt_s32(v17, vdup_lane_s32(v17, 1)).u8[0] & 1) != 0)
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a4 + 1), v16, 1, "Reserved range end number must be greater than start number.");
      ++v15;
    }
    while (v15 < *((int *)a2 + 14));
  }
  v18 = *((unsigned int *)a2 + 20);
  *((_DWORD *)a4 + 15) = v18;
  *((_QWORD *)a4 + 9) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*((google::protobuf::DescriptorPool::Tables **)this + 1), 8 * (int)v18);
  if ((int)v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      v20 = (uint64_t *)*((_QWORD *)this + 1);
      v21 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 72, i);
      *(_QWORD *)(*((_QWORD *)a4 + 9) + 8 * i) = google::protobuf::DescriptorPool::Tables::AllocateString(v20, v21);
    }
  }
  google::protobuf::DescriptorBuilder::CheckEnumValueUniqueness(this, a2, (uint64_t **)a4);
  v74 = this;
  if ((*((_DWORD *)a2 + 4) & 2) != 0)
  {
    v22 = (google::protobuf::MessageLite *)*((_QWORD *)a2 + 13);
    if (!v22)
    {
      v23 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v100, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 9806);
      v24 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: !value || options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v97, (const char **)&v24->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v100);
      v22 = (google::protobuf::MessageLite *)*((_QWORD *)a2 + 13);
    }
    if (v22)
      v25 = v22;
    else
      v25 = (google::protobuf::MessageLite *)&google::protobuf::_EnumOptions_default_instance_;
    google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::EnumDescriptor>((uint64_t)this, v25, (uint64_t)a4, 3);
  }
  else
  {
    *((_QWORD *)a4 + 4) = 0;
  }
  google::protobuf::DescriptorBuilder::AddSymbol((uint64_t)this, *((const std::string **)a4 + 1), (uint64_t *)a3, *(_QWORD *)a4, (uint64_t)a2, (const char *)4, (const char *)a4);
  if (*((int *)a2 + 14) >= 1)
  {
    v26 = 0;
    do
    {
      v27 = v26;
      v28 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((uint64_t)a2 + 48, v26++);
      v29 = *((_DWORD *)a2 + 14);
      if (v26 < v29)
      {
        v30 = v28;
        v72 = v26;
        do
        {
          v31 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((uint64_t)a2 + 48, v26);
          v32 = v31;
          if (*(_DWORD *)(v30 + 28) >= *(_DWORD *)(v31 + 24) && *(_DWORD *)(v31 + 28) >= *(_DWORD *)(v30 + 24))
          {
            v33 = (const std::string::value_type *)*((_QWORD *)a4 + 1);
            v34 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((uint64_t)a2 + 48, v27);
            v100 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(v32 + 24), v102, v35);
            v101 = strlen(v100);
            v97 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(v32 + 28), v99, v36);
            v98 = strlen(v97);
            v94 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(v30 + 24), v96, v37);
            v95 = strlen(v94);
            v91 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(v30 + 28), v93, v38);
            v92 = strlen(v91);
            v89 = 0;
            v90 = -1;
            v87 = 0;
            v88 = -1;
            v85 = 0;
            v86 = -1;
            v83 = 0;
            v84 = -1;
            v81 = 0;
            v82 = -1;
            v79 = 0;
            v80 = -1;
            *((_QWORD *)&v68 + 1) = &v81;
            *(_QWORD *)&v68 = &v83;
            google::protobuf::strings::Substitute("Reserved range $0 to $1 overlaps with already-defined range $2 to $3.", (uint64_t)&v100, (uint64_t)&v97, (uint64_t)&v94, (uint64_t)&v91, (uint64_t)&v89, (uint64_t)&v87, (uint64_t)&v85, (std::string *)__p, v68, (uint64_t)&v79);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v33, v34, 1, (const std::string::value_type *)__p);
            if (SBYTE7(v77) < 0)
              operator delete(__p[0]);
          }
          ++v26;
          v29 = *((_DWORD *)a2 + 14);
        }
        while (v26 < v29);
        v26 = v72;
      }
    }
    while (v26 < v29);
  }
  *(_OWORD *)__p = 0u;
  v77 = 0u;
  v78 = 1065353216;
  if (*((int *)a2 + 20) >= 1)
  {
    v39 = 0;
    do
    {
      v40 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)a2 + 72, v39);
      if (std::__hash_table<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>>>::find<std::string>(__p, (unsigned __int8 *)v40))
      {
        v41 = *(char *)(v40 + 23);
        v42 = v41 < 0;
        v43 = *(const char **)v40;
        v44 = *(_QWORD *)(v40 + 8);
        if (v41 >= 0)
          v43 = (const char *)v40;
        v100 = v43;
        v41 = v41;
        if (v42)
          v41 = v44;
        v101 = v41;
        v97 = 0;
        v98 = -1;
        v94 = 0;
        v95 = -1;
        v91 = 0;
        v92 = -1;
        v89 = 0;
        v90 = -1;
        v87 = 0;
        v88 = -1;
        v85 = 0;
        v86 = -1;
        v83 = 0;
        v84 = -1;
        v81 = 0;
        v82 = -1;
        v79 = 0;
        v80 = -1;
        *((_QWORD *)&v69 + 1) = &v81;
        *(_QWORD *)&v69 = &v83;
        google::protobuf::strings::Substitute("Enum value \"$0\" is reserved multiple times.", (uint64_t)&v100, (uint64_t)&v97, (uint64_t)&v94, (uint64_t)&v91, (uint64_t)&v89, (uint64_t)&v87, (uint64_t)&v85, &v75, v69, (uint64_t)&v79);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (const std::string::value_type *)v40, (uint64_t)a2, 0, (const std::string::value_type *)&v75);
        if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v75.__r_.__value_.__l.__data_);
      }
      else
      {
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t)__p, (unsigned __int8 *)v40, v40);
      }
      ++v39;
    }
    while (v39 < *((_DWORD *)a2 + 20));
  }
  if (*((int *)a4 + 11) >= 1)
  {
    v45 = 0;
    do
    {
      *(_QWORD *)v73 = *((_QWORD *)a4 + 6);
      v46 = (unsigned __int8 **)(*(_QWORD *)v73 + 40 * v45);
      v47 = *((_DWORD *)a4 + 14);
      if (v47 >= 1)
      {
        v48 = 0;
        v49 = 0;
        v50 = *(_QWORD *)v73 + 40 * v45;
        v51 = (_DWORD *)(v50 + 16);
        v52 = (const std::string::value_type **)(v50 + 8);
        do
        {
          v53 = *((_QWORD *)a4 + 8);
          if (*(_DWORD *)(v53 + v48) <= *v51 && *v51 <= *(_DWORD *)(v53 + v48 + 4))
          {
            v54 = *v52;
            v56 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto_EnumReservedRange>::TypeHandler>((uint64_t)a2 + 48, v49);
            v57 = *v46;
            v58 = (char)(*v46)[23];
            v59 = *((_QWORD *)*v46 + 1);
            if (v58 < 0)
              v57 = *(unsigned __int8 **)*v46;
            v100 = (const char *)v57;
            v60 = v58;
            if (v58 < 0)
              v60 = v59;
            v101 = v60;
            v97 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*v51, v99, v55);
            v98 = strlen(v97);
            v94 = 0;
            v95 = -1;
            v91 = 0;
            v92 = -1;
            v89 = 0;
            v90 = -1;
            v87 = 0;
            v88 = -1;
            v85 = 0;
            v86 = -1;
            v83 = 0;
            v84 = -1;
            v81 = 0;
            v82 = -1;
            v79 = 0;
            v80 = -1;
            *((_QWORD *)&v70 + 1) = &v81;
            *(_QWORD *)&v70 = &v83;
            google::protobuf::strings::Substitute("Enum value \"$0\" uses reserved number $1.", (uint64_t)&v100, (uint64_t)&v97, (uint64_t)&v94, (uint64_t)&v91, (uint64_t)&v89, (uint64_t)&v87, (uint64_t)&v85, &v75, v70, (uint64_t)&v79);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)v74, v54, v56, 1, (const std::string::value_type *)&v75);
            if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v75.__r_.__value_.__l.__data_);
            v47 = *((_DWORD *)a4 + 14);
          }
          ++v49;
          v48 += 8;
        }
        while (v49 < v47);
      }
      if (std::__hash_table<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,google::protobuf::util::Status (*)(google::protobuf::util::converter::ProtoStreamObjectSource const*,google::protobuf::Type const&,google::protobuf::StringPiece,google::protobuf::util::converter::ObjectWriter *)>>>::find<std::string>(__p, *v46))
      {
        v61 = *(const std::string::value_type **)(*(_QWORD *)v73 + 40 * v45 + 8);
        v62 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)a2 + 24, v45);
        v63 = *v46;
        v64 = (char)(*v46)[23];
        v65 = *((_QWORD *)*v46 + 1);
        if (v64 < 0)
          v63 = *(unsigned __int8 **)*v46;
        v100 = (const char *)v63;
        v66 = v64;
        if (v64 < 0)
          v66 = v65;
        v101 = v66;
        v97 = 0;
        v98 = -1;
        v94 = 0;
        v95 = -1;
        v91 = 0;
        v92 = -1;
        v89 = 0;
        v90 = -1;
        v87 = 0;
        v88 = -1;
        v85 = 0;
        v86 = -1;
        v83 = 0;
        v84 = -1;
        v81 = 0;
        v82 = -1;
        v79 = 0;
        v80 = -1;
        *((_QWORD *)&v71 + 1) = &v81;
        *(_QWORD *)&v71 = &v83;
        google::protobuf::strings::Substitute("Enum value \"$0\" is reserved.", (uint64_t)&v100, (uint64_t)&v97, (uint64_t)&v94, (uint64_t)&v91, (uint64_t)&v89, (uint64_t)&v87, (uint64_t)&v85, &v75, v71, (uint64_t)&v79);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v74, v61, v62, 0, (const std::string::value_type *)&v75);
        if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v75.__r_.__value_.__l.__data_);
      }
      ++v45;
    }
    while (v45 < *((int *)a4 + 11));
  }
  return std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)__p);
}

void sub_1BF81AB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  uint64_t v29;

  google::protobuf::internal::LogMessage::~LogMessage((void **)(v29 - 144));
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::BuildService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::string *NameString;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  google::protobuf::MessageLite *v12;
  std::string *v13;
  google::protobuf::MessageLite *v14;
  char v16;
  std::string v17[2];

  NameString = google::protobuf::DescriptorBuilder::AllocateNameString(a1, *(uint64_t **)(*(_QWORD *)(a1 + 80) + 8), *(_QWORD *)(a2 + 48));
  google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, *(uint64_t **)(a2 + 48), (const std::string::value_type *)NameString, a2);
  *(_QWORD *)a4 = google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(a1 + 8), *(_QWORD *)(a2 + 48));
  *(_QWORD *)(a4 + 8) = NameString;
  *(_QWORD *)(a4 + 16) = *(_QWORD *)(a1 + 80);
  v8 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a4 + 40) = v8;
  *(_QWORD *)(a4 + 32) = google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(a1 + 8), 104 * v8);
  if (*(int *)(a2 + 32) >= 1)
  {
    v9 = 0;
    v10 = 0;
    do
    {
      v11 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>(a2 + 24, v10);
      google::protobuf::DescriptorBuilder::BuildMethod(a1, v11, a4, *(_QWORD *)(a4 + 32) + v9);
      ++v10;
      v9 += 104;
    }
    while (v10 < *(int *)(a2 + 32));
  }
  if ((*(_DWORD *)(a2 + 16) & 2) != 0)
  {
    v12 = *(google::protobuf::MessageLite **)(a2 + 56);
    if (!v12)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 10316);
      v13 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: !value || options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
      v12 = *(google::protobuf::MessageLite **)(a2 + 56);
    }
    if (v12)
      v14 = v12;
    else
      v14 = (google::protobuf::MessageLite *)&google::protobuf::_ServiceOptions_default_instance_;
    google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::ServiceDescriptor>(a1, v14, a4, 3);
  }
  else
  {
    *(_QWORD *)(a4 + 24) = 0;
  }
  return google::protobuf::DescriptorBuilder::AddSymbol(a1, *(const std::string **)(a4 + 8), 0, *(_QWORD *)a4, a2, (const char *)6, (const char *)a4);
}

void sub_1BF81AD00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::CrossLinkFile(google::protobuf::DescriptorBuilder *this, google::protobuf::FileDescriptor *a2, const google::protobuf::FileDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  google::protobuf::Descriptor *v8;
  const google::protobuf::DescriptorProto *v9;
  uint64_t v10;
  uint64_t v11;
  google::protobuf::FieldDescriptor *v12;
  std::string **v13;
  uint64_t v14;
  uint64_t v15;
  google::protobuf::EnumDescriptor *v16;
  google::protobuf::EnumOptions *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  google::protobuf::ServiceDescriptor *v21;
  const google::protobuf::ServiceDescriptorProto *v22;

  if (!*((_QWORD *)a2 + 17))
    *((_QWORD *)a2 + 17) = google::protobuf::FileOptions::default_instance(this);
  if (*((int *)a2 + 11) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 13) + v6);
      v9 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v7);
      google::protobuf::DescriptorBuilder::CrossLinkMessage((google::protobuf::DescriptorPool::Tables **)this, v8, v9);
      ++v7;
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 14) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 16) + v10);
      v13 = (std::string **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v11);
      google::protobuf::DescriptorBuilder::CrossLinkField(this, v12, v13);
      ++v11;
      v10 += 152;
    }
    while (v11 < *((int *)a2 + 14));
  }
  if (*((int *)a2 + 12) >= 1)
  {
    v14 = 0;
    v15 = 0;
    do
    {
      v16 = (google::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 14) + v14);
      v17 = (google::protobuf::EnumOptions *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a3 + 72, v15);
      google::protobuf::DescriptorBuilder::CrossLinkEnum(v17, v16, v17);
      ++v15;
      v14 += 80;
    }
    while (v15 < *((int *)a2 + 12));
  }
  if (*((int *)a2 + 13) >= 1)
  {
    v18 = 0;
    v19 = 0;
    v20 = (char *)a3 + 96;
    do
    {
      v21 = (google::protobuf::ServiceDescriptor *)(*((_QWORD *)a2 + 15) + v18);
      v22 = (const google::protobuf::ServiceDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((uint64_t)v20, v19);
      google::protobuf::DescriptorBuilder::CrossLinkService(this, v21, v22);
      ++v19;
      v18 += 48;
    }
    while (v19 < *((int *)a2 + 13));
  }
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::UpdateSourceCodeInfo(google::protobuf::DescriptorBuilder::OptionInterpreter *this, google::protobuf::SourceCodeInfo *a2)
{
  char v3;
  char v4;
  uint64_t v5;
  const google::protobuf::SourceCodeInfo_Location **v6;
  char *v7;
  int *v8;
  int v9;
  int v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  int v20;
  char *v21;
  _DWORD *v22;
  uint64_t v23;
  int v24;
  int *v25;
  const google::protobuf::SourceCodeInfo_Location *v26;
  _DWORD *v27;
  uint64_t v28;
  int v29;
  google::protobuf::SourceCodeInfo_Location *v30;
  uint64_t v31;
  const google::protobuf::SourceCodeInfo_Location **v32;
  const google::protobuf::SourceCodeInfo_Location *v33;
  _DWORD *v34;
  uint64_t v35;
  int v36;
  google::protobuf::SourceCodeInfo_Location *v37;
  uint64_t v38;
  uint64_t v39;
  _DWORD *v40;
  uint64_t v41;
  int *v42;
  int *i;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  signed int **v51;
  char *v52;
  char *v53;
  void *__p;
  char *v55;
  char *v56;
  google::protobuf::Arena *v57;
  uint64_t v58;
  _DWORD *v59;

  if (!*((_QWORD *)this + 5))
    return;
  v57 = 0;
  v58 = 0;
  v59 = 0;
  __p = 0;
  v55 = 0;
  v56 = 0;
  if (!*((_DWORD *)a2 + 8))
    goto LABEL_79;
  v3 = 0;
  v4 = 0;
  v51 = (signed int **)((char *)a2 + 24);
  v5 = *((_QWORD *)a2 + 5);
  if (v5)
    v6 = (const google::protobuf::SourceCodeInfo_Location **)(v5 + 8);
  else
    v6 = 0;
  v52 = (char *)this + 32;
  v53 = (char *)this + 24;
  do
  {
    v7 = (char *)__p;
    if ((v4 & 1) != 0 && *((int *)*v6 + 6) >= (unint64_t)((v55 - (_BYTE *)__p) >> 2))
    {
      if (v55 == __p)
      {
LABEL_53:
        v4 = 1;
        goto LABEL_71;
      }
      v39 = 0;
      while (1)
      {
        v40 = (_DWORD *)google::protobuf::RepeatedField<int>::Get((_DWORD *)*v6 + 6, v39);
        v7 = (char *)__p;
        if (*v40 != *((_DWORD *)__p + v39))
          break;
        if (++v39 >= (unint64_t)((v55 - (_BYTE *)__p) >> 2))
          goto LABEL_53;
      }
    }
    v55 = v7;
    v8 = (int *)((char *)*v6 + 24);
    if (*v8 >= 1)
    {
      v9 = 0;
      do
      {
        v10 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v8, v9);
        v11 = v55;
        if (v55 >= v56)
        {
          v13 = (char *)__p;
          v14 = (v55 - (_BYTE *)__p) >> 2;
          v15 = v14 + 1;
          if ((unint64_t)(v14 + 1) >> 62)
            std::vector<BOOL>::__throw_length_error[abi:ne180100]();
          v16 = v56 - (_BYTE *)__p;
          if ((v56 - (_BYTE *)__p) >> 1 > v15)
            v15 = v16 >> 1;
          if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL)
            v17 = 0x3FFFFFFFFFFFFFFFLL;
          else
            v17 = v15;
          if (v17)
          {
            v18 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v56, v17);
            v13 = (char *)__p;
            v11 = v55;
          }
          else
          {
            v18 = 0;
          }
          v19 = &v18[4 * v14];
          *(_DWORD *)v19 = v10;
          v12 = v19 + 4;
          while (v11 != v13)
          {
            v20 = *((_DWORD *)v11 - 1);
            v11 -= 4;
            *((_DWORD *)v19 - 1) = v20;
            v19 -= 4;
          }
          __p = v19;
          v55 = v12;
          v56 = &v18[4 * v17];
          if (v13)
            operator delete(v13);
        }
        else
        {
          *(_DWORD *)v55 = v10;
          v12 = v11 + 4;
        }
        v55 = v12;
        ++v9;
        v8 = (int *)((char *)*v6 + 24);
      }
      while (v9 < *v8);
    }
    v21 = (char *)std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::find<std::vector<int>>((uint64_t)v53, (int **)&__p);
    if (v52 != v21)
    {
      if ((v3 & 1) != 0)
      {
LABEL_30:
        v22 = v59;
        if (v59)
        {
          v23 = (int)v58;
          v24 = *v59;
          if ((int)v58 < *v59)
          {
            LODWORD(v58) = v58 + 1;
            v25 = *(int **)&v59[2 * v23 + 2];
            goto LABEL_58;
          }
          if (v24 != HIDWORD(v58))
          {
LABEL_57:
            *v22 = v24 + 1;
            v25 = (int *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v57);
            v41 = (int)v58;
            LODWORD(v58) = v58 + 1;
            *(_QWORD *)&v59[2 * v41 + 2] = v25;
LABEL_58:
            google::protobuf::SourceCodeInfo_Location::CopyFrom((google::protobuf::SourceCodeInfo_Location *)v25, *v6);
            v25[6] = 0;
            v42 = v25 + 6;
            for (i = (int *)*((_QWORD *)v21 + 7); i != *((int **)v21 + 8); ++i)
            {
              v44 = *i;
              v45 = v25[6];
              if (v45 == v25[7])
                google::protobuf::RepeatedField<int>::Reserve(v25 + 6, v45 + 1);
              v46 = google::protobuf::RepeatedField<int>::elements((uint64_t)(v25 + 6));
              v47 = *v42;
              *v42 = v47 + 1;
              *(_DWORD *)(v46 + 4 * v47) = v44;
            }
            v4 = 1;
            goto LABEL_70;
          }
        }
        else
        {
          v24 = HIDWORD(v58);
        }
        google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v57, v24 + 1);
        v22 = v59;
        v24 = *v59;
        goto LABEL_57;
      }
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v57, *((_DWORD *)a2 + 8));
      v31 = *((_QWORD *)a2 + 5);
      if (v31)
        v32 = (const google::protobuf::SourceCodeInfo_Location **)(v31 + 8);
      else
        v32 = 0;
      while (1)
      {
        if (v32 == v6)
          goto LABEL_30;
        v33 = *v32;
        v34 = v59;
        if (!v59)
          break;
        v35 = (int)v58;
        v36 = *v59;
        if ((int)v58 < *v59)
        {
          LODWORD(v58) = v58 + 1;
          v37 = *(google::protobuf::SourceCodeInfo_Location **)&v59[2 * v35 + 2];
          goto LABEL_48;
        }
        if (v36 == HIDWORD(v58))
          goto LABEL_46;
LABEL_47:
        *v34 = v36 + 1;
        v37 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v57);
        v38 = (int)v58;
        LODWORD(v58) = v58 + 1;
        *(_QWORD *)&v59[2 * v38 + 2] = v37;
LABEL_48:
        google::protobuf::SourceCodeInfo_Location::CopyFrom(v37, v33);
        ++v32;
      }
      v36 = HIDWORD(v58);
LABEL_46:
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v57, v36 + 1);
      v34 = v59;
      v36 = *v59;
      goto LABEL_47;
    }
    if ((v3 & 1) == 0)
    {
      v4 = 0;
      v3 = 0;
      goto LABEL_71;
    }
    v26 = *v6;
    v27 = v59;
    if (!v59)
    {
      v29 = HIDWORD(v58);
      goto LABEL_67;
    }
    v28 = (int)v58;
    v29 = *v59;
    if ((int)v58 >= *v59)
    {
      if (v29 != HIDWORD(v58))
      {
LABEL_68:
        *v27 = v29 + 1;
        v30 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v57);
        v48 = (int)v58;
        LODWORD(v58) = v58 + 1;
        *(_QWORD *)&v59[2 * v48 + 2] = v30;
        goto LABEL_69;
      }
LABEL_67:
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v57, v29 + 1);
      v27 = v59;
      v29 = *v59;
      goto LABEL_68;
    }
    LODWORD(v58) = v58 + 1;
    v30 = *(google::protobuf::SourceCodeInfo_Location **)&v59[2 * v28 + 2];
LABEL_69:
    google::protobuf::SourceCodeInfo_Location::CopyFrom(v30, v26);
    v4 = 0;
LABEL_70:
    v3 = 1;
LABEL_71:
    ++v6;
    v49 = *((_QWORD *)a2 + 5);
    if (v49)
      v50 = v49 + 8;
    else
      v50 = 0;
  }
  while (v6 != (const google::protobuf::SourceCodeInfo_Location **)(v50 + 8 * *((int *)a2 + 8)));
  if (((v51 != (signed int **)&v57) & v3) != 0)
  {
    google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>((uint64_t)v51);
    google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<google::protobuf::SourceCodeInfo_Location>::TypeHandler>(v51, (uint64_t)&v57);
  }
  if (__p)
  {
    v55 = (char *)__p;
    operator delete(__p);
  }
LABEL_79:
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(&v57);
}

void sub_1BF81B35C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, google::protobuf::internal::ArenaImpl *a16)
{
  if (__p)
    operator delete(__p);
  google::protobuf::RepeatedPtrField<google::protobuf::Field>::~RepeatedPtrField(&a16);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateFileOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::FileDescriptor *a2, const google::protobuf::FileDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  google::protobuf::Descriptor *v8;
  const google::protobuf::DescriptorProto *v9;
  uint64_t v10;
  uint64_t v11;
  google::protobuf::EnumDescriptor *v12;
  const google::protobuf::EnumDescriptorProto *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  const std::string::value_type **v20;
  const google::protobuf::FieldDescriptorProto *v21;
  void *v22;
  int v23;
  google::protobuf::FileOptions *v24;
  google::protobuf::FileOptions *v25;
  void *v26;
  const std::string::value_type *v27;
  std::string *v28;
  __int128 v29;
  std::string v30;
  void *__p[2];
  std::string::size_type v32;

  if (*((int *)a2 + 11) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 13) + v6);
      v9 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v7);
      google::protobuf::DescriptorBuilder::ValidateMessageOptions(this, v8, v9);
      ++v7;
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 12) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = (google::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 14) + v10);
      v13 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a3 + 72, v11);
      google::protobuf::DescriptorBuilder::ValidateEnumOptions(this, v12, v13);
      ++v11;
      v10 += 80;
    }
    while (v11 < *((int *)a2 + 12));
  }
  if (*((int *)a2 + 13) >= 1)
  {
    v14 = 0;
    v15 = 0;
    do
    {
      v16 = *((_QWORD *)a2 + 15) + v14;
      v17 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::ServiceDescriptorProto>::TypeHandler>((uint64_t)a3 + 96, v15);
      google::protobuf::DescriptorBuilder::ValidateServiceOptions(this, v16, v17);
      ++v15;
      v14 += 48;
    }
    while (v15 < *((int *)a2 + 13));
  }
  if (*((int *)a2 + 14) >= 1)
  {
    v18 = 0;
    v19 = 0;
    do
    {
      v20 = (const std::string::value_type **)(*((_QWORD *)a2 + 16) + v18);
      v21 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v19);
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, v20, v21);
      ++v19;
      v18 += 152;
    }
    while (v19 < *((int *)a2 + 14));
  }
  v22 = (void *)*((_QWORD *)a2 + 17);
  if ((v22 == google::protobuf::FileOptions::default_instance(this) || *(_DWORD *)(*((_QWORD *)a2 + 17) + 164) != 3)
    && *((int *)a2 + 8) >= 1)
  {
    v23 = 0;
    while (1)
    {
      v24 = (google::protobuf::FileOptions *)google::protobuf::FileDescriptor::dependency(a2, v23);
      if (v24)
      {
        v25 = v24;
        v26 = (void *)*((_QWORD *)v24 + 17);
        if (v26 != google::protobuf::FileOptions::default_instance(v24)
          && *(_DWORD *)(*((_QWORD *)v25 + 17) + 164) == 3)
        {
          break;
        }
      }
      if (++v23 >= *((_DWORD *)a2 + 8))
        goto LABEL_21;
    }
    v27 = *(const std::string::value_type **)google::protobuf::FileDescriptor::dependency(a2, v23);
    google::protobuf::FileDescriptor::dependency(a2, v23);
    std::operator+<char>();
    v28 = std::string::append(&v30, "\" which is.");
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v32 = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v27, (uint64_t)a3, 9, (const std::string::value_type *)__p);
    if (SHIBYTE(v32) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v30.__r_.__value_.__l.__data_);
  }
LABEL_21:
  if (*((_DWORD *)a2 + 15) == 3)
    google::protobuf::DescriptorBuilder::ValidateProto3(this, a2, a3);
}

void sub_1BF81B644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::DetectMapConflicts(google::protobuf::DescriptorBuilder *this, const google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  _OWORD *v10;
  char v11;
  char v12;
  const std::string::value_type *v13;
  std::string *v14;
  __int128 v15;
  uint64_t v16;
  const google::protobuf::DescriptorProto *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const std::string::value_type *v21;
  std::string *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const std::string::value_type *v27;
  std::string *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const std::string::value_type *v33;
  std::string *v34;
  __int128 v35;
  std::string v37;
  std::string v38;
  uint64_t v39;
  char **v40;
  char *v41[2];

  v41[0] = 0;
  v41[1] = 0;
  v40 = v41;
  if (*((int *)a2 + 28) >= 1)
  {
    v5 = 0;
    v6 = 0;
    do
    {
      v7 = *((_QWORD *)a2 + 7);
      v8 = *(__int128 **)(v7 + v5);
      if (*((char *)v8 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v38, *(const std::string::value_type **)v8, *((_QWORD *)v8 + 1));
      }
      else
      {
        v9 = *v8;
        v38.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
        *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v9;
      }
      v39 = v7 + v5;
      v10 = std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::pair<std::string,google::protobuf::EnumValueDescriptor const*>>((uint64_t **)&v40, (const void **)&v38.__r_.__value_.__l.__data_, (uint64_t)&v38);
      v12 = v11;
      if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v38.__r_.__value_.__l.__data_);
      if (!v12
        && (*(_BYTE *)(*(_QWORD *)(*((_QWORD *)v10 + 7) + 32) + 75) || *(_BYTE *)(*(_QWORD *)(v7 + v5 + 32) + 75)))
      {
        v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        std::operator+<char>();
        v14 = std::string::append(&v37, " conflicts with an existing nested message type.");
        v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
        v38.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v15;
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v13, (uint64_t)a3, 0, (const std::string::value_type *)&v38);
        if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v38.__r_.__value_.__l.__data_);
        if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v37.__r_.__value_.__l.__data_);
      }
      v16 = *((_QWORD *)a2 + 7);
      v17 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v6);
      google::protobuf::DescriptorBuilder::DetectMapConflicts(this, (const google::protobuf::Descriptor *)(v16 + v5), v17);
      ++v6;
      v5 += 144;
    }
    while (v6 < *((int *)a2 + 28));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v18 = 0;
    v19 = 0;
    do
    {
      v20 = std::__tree<std::string>::find<std::string>((uint64_t)&v40, *(const void ***)(*((_QWORD *)a2 + 5) + v18));
      if (v41 != (char **)v20 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v20 + 56) + 32) + 75))
      {
        v21 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        std::operator+<char>();
        v22 = std::string::append(&v37, " conflicts with an existing field.");
        v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
        v38.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v23;
        v22->__r_.__value_.__l.__size_ = 0;
        v22->__r_.__value_.__r.__words[2] = 0;
        v22->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v21, (uint64_t)a3, 0, (const std::string::value_type *)&v38);
        if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v38.__r_.__value_.__l.__data_);
        if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v37.__r_.__value_.__l.__data_);
      }
      ++v19;
      v18 += 152;
    }
    while (v19 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 29) >= 1)
  {
    v24 = 0;
    v25 = 0;
    do
    {
      v26 = std::__tree<std::string>::find<std::string>((uint64_t)&v40, *(const void ***)(*((_QWORD *)a2 + 8) + v24));
      if (v41 != (char **)v26 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v26 + 56) + 32) + 75))
      {
        v27 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        std::operator+<char>();
        v28 = std::string::append(&v37, " conflicts with an existing enum type.");
        v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
        v38.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v29;
        v28->__r_.__value_.__l.__size_ = 0;
        v28->__r_.__value_.__r.__words[2] = 0;
        v28->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v27, (uint64_t)a3, 0, (const std::string::value_type *)&v38);
        if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v38.__r_.__value_.__l.__data_);
        if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v37.__r_.__value_.__l.__data_);
      }
      ++v25;
      v24 += 80;
    }
    while (v25 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 27) >= 1)
  {
    v30 = 0;
    v31 = 0;
    do
    {
      v32 = std::__tree<std::string>::find<std::string>((uint64_t)&v40, *(const void ***)(*((_QWORD *)a2 + 6) + v30));
      if (v41 != (char **)v32 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v32 + 56) + 32) + 75))
      {
        v33 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        std::operator+<char>();
        v34 = std::string::append(&v37, " conflicts with an existing oneof type.");
        v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
        v38.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v35;
        v34->__r_.__value_.__l.__size_ = 0;
        v34->__r_.__value_.__r.__words[2] = 0;
        v34->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v33, (uint64_t)a3, 0, (const std::string::value_type *)&v38);
        if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v38.__r_.__value_.__l.__data_);
        if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v37.__r_.__value_.__l.__data_);
      }
      ++v31;
      v30 += 48;
    }
    while (v31 < *((int *)a2 + 27));
  }
  std::__tree<std::string>::destroy((uint64_t)&v40, v41[0]);
}

void sub_1BF81BAA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,char a24,char *a25)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  std::__tree<std::string>::destroy((uint64_t)&a24, a25);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::LogUnusedDependency(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, const google::protobuf::FileDescriptor *a3)
{
  char *v4;
  char *v5;
  std::string *v7;
  __int128 v8;
  char *v9;
  char *v10;
  BOOL v11;
  std::string v12;
  void *__p[2];
  std::string::size_type v14;

  if (*((_QWORD *)this + 17))
  {
    v4 = (char *)*((_QWORD *)this + 15);
    v5 = (char *)this + 128;
    if (v4 != (char *)this + 128)
    {
      do
      {
        std::operator+<char>();
        v7 = std::string::append(&v12, " but not used.");
        v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
        v14 = v7->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v8;
        v7->__r_.__value_.__l.__size_ = 0;
        v7->__r_.__value_.__r.__words[2] = 0;
        v7->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v12.__r_.__value_.__l.__data_);
        google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, **((const std::string::value_type ***)v4 + 4), (uint64_t)a2, 9, (const std::string::value_type *)__p);
        if (SHIBYTE(v14) < 0)
          operator delete(__p[0]);
        v9 = (char *)*((_QWORD *)v4 + 1);
        if (v9)
        {
          do
          {
            v10 = v9;
            v9 = *(char **)v9;
          }
          while (v9);
        }
        else
        {
          do
          {
            v10 = (char *)*((_QWORD *)v4 + 2);
            v11 = *(_QWORD *)v10 == (_QWORD)v4;
            v4 = v10;
          }
          while (!v11);
        }
        v4 = v10;
      }
      while (v10 != v5);
    }
  }
}

void sub_1BF81BC48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::DescriptorBuilder::AllocateNameString(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v5;
  void **EmptyString;
  int v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  std::string v18;
  _QWORD v19[6];
  _QWORD v20[6];
  _QWORD v21[7];

  v21[6] = *MEMORY[0x1E0C80C00];
  v4 = *((unsigned __int8 *)a2 + 23);
  if ((v4 & 0x80u) != 0)
    v4 = a2[1];
  v5 = *(uint64_t **)(a1 + 8);
  if (!v4)
    return google::protobuf::DescriptorPool::Tables::AllocateString(v5, a3);
  EmptyString = (void **)google::protobuf::DescriptorPool::Tables::AllocateEmptyString((google::protobuf::DescriptorPool::Tables *)v5);
  v8 = *((char *)a2 + 23);
  v9 = v8 < 0;
  v10 = (uint64_t *)*a2;
  if (v8 >= 0)
    v10 = a2;
  v11 = *((unsigned __int8 *)a2 + 23);
  if (v9)
    v11 = a2[1];
  v21[0] = v10;
  v21[1] = v11;
  v20[0] = ".";
  v20[1] = 1;
  v12 = *(char *)(a3 + 23);
  v13 = v12 < 0;
  v14 = *(_QWORD *)a3;
  if (v12 >= 0)
    v14 = a3;
  v15 = *(unsigned __int8 *)(a3 + 23);
  if (v13)
    v15 = *(_QWORD *)(a3 + 8);
  v19[0] = v14;
  v19[1] = v15;
  google::protobuf::StrCat((uint64_t)v21, (uint64_t)v20, (uint64_t)v19, &v18);
  if (*((char *)EmptyString + 23) < 0)
    operator delete(*EmptyString);
  v16 = *(_OWORD *)&v18.__r_.__value_.__l.__data_;
  EmptyString[2] = (void *)v18.__r_.__value_.__r.__words[2];
  *(_OWORD *)EmptyString = v16;
  return (std::string *)EmptyString;
}

uint64_t google::protobuf::DescriptorBuilder::BuildOneof(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::string *NameString;
  std::string *String;
  uint64_t v10;
  google::protobuf::MessageLite *v11;
  std::string *v12;
  google::protobuf::MessageLite *v13;
  char v15;
  std::string v16[2];

  NameString = google::protobuf::DescriptorBuilder::AllocateNameString(a1, *(uint64_t **)(a3 + 8), *(_QWORD *)(a2 + 24));
  google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, *(uint64_t **)(a2 + 24), (const std::string::value_type *)NameString, a2);
  String = google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(a1 + 8), *(_QWORD *)(a2 + 24));
  *(_QWORD *)a4 = String;
  *(_QWORD *)(a4 + 8) = NameString;
  *(_QWORD *)(a4 + 16) = a3;
  *(_DWORD *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  if ((*(_DWORD *)(a2 + 16) & 2) != 0)
  {
    v11 = *(google::protobuf::MessageLite **)(a2 + 32);
    if (!v11)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 9542);
      v12 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: !value || options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
      v11 = *(google::protobuf::MessageLite **)(a2 + 32);
    }
    if (v11)
      v13 = v11;
    else
      v13 = (google::protobuf::MessageLite *)&google::protobuf::_OneofOptions_default_instance_;
    google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::OneofDescriptor>(a1, v13, a4, 2);
    v10 = *(_QWORD *)a4;
    NameString = *(std::string **)(a4 + 8);
  }
  else
  {
    v10 = (uint64_t)String;
    *(_QWORD *)(a4 + 40) = 0;
  }
  return google::protobuf::DescriptorBuilder::AddSymbol(a1, NameString, (uint64_t *)a3, v10, a2, (const char *)3, (const char *)a4);
}

void sub_1BF81BEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::BuildExtensionRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8;
  int v9;
  std::string *v10;
  std::string::size_type v11;
  std::string::size_type size;
  _DWORD *v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  int v21;
  unint64_t v22;
  _DWORD *v23;
  _DWORD *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  int v31;
  std::string::size_type v32;
  _DWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  std::string::size_type v40;
  int v41;
  google::protobuf::MessageLite *v42;
  char v43;
  std::string __p[2];

  v8 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)a4 = v8;
  v9 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a4 + 4) = v9;
  if (v8 <= 0)
  {
    google::protobuf::DescriptorBuilder::AddError(a1, *(const std::string::value_type **)(a3 + 8), a2, 1, "Extension numbers must be positive integers.");
    v8 = *(_DWORD *)a4;
    v9 = *(_DWORD *)(a4 + 4);
  }
  if (v8 >= v9)
    google::protobuf::DescriptorBuilder::AddError(a1, *(const std::string::value_type **)(a3 + 8), a2, 1, "Extension range end number must be greater than start number.");
  if ((*(_DWORD *)(a2 + 16) & 1) != 0)
  {
    if (!*(_QWORD *)(a2 + 24))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 8111);
      v10 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: !value || options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v43, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    memset(__p, 0, 24);
    google::protobuf::Descriptor::GetLocationPath(a3, (uint64_t)__p);
    v11 = __p[0].__r_.__value_.__r.__words[2];
    size = __p[0].__r_.__value_.__l.__size_;
    if (__p[0].__r_.__value_.__l.__size_ >= __p[0].__r_.__value_.__r.__words[2])
    {
      v14 = (void *)__p[0].__r_.__value_.__r.__words[0];
      v15 = (uint64_t)(__p[0].__r_.__value_.__l.__size_ - __p[0].__r_.__value_.__r.__words[0]) >> 2;
      v16 = v15 + 1;
      if ((unint64_t)(v15 + 1) >> 62)
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      v17 = __p[0].__r_.__value_.__r.__words[2] - __p[0].__r_.__value_.__r.__words[0];
      if ((uint64_t)(__p[0].__r_.__value_.__r.__words[2] - __p[0].__r_.__value_.__r.__words[0]) >> 1 > v16)
        v16 = v17 >> 1;
      if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFFCLL)
        v18 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v18 = v16;
      if (v18)
      {
        v19 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&__p[0].__r_.__value_.__r.__words[2], v18);
        size = __p[0].__r_.__value_.__l.__size_;
        v14 = (void *)__p[0].__r_.__value_.__r.__words[0];
      }
      else
      {
        v19 = 0;
      }
      v20 = &v19[4 * v15];
      v11 = (std::string::size_type)&v19[4 * v18];
      *(_DWORD *)v20 = 5;
      v13 = v20 + 4;
      while ((void *)size != v14)
      {
        v21 = *(_DWORD *)(size - 4);
        size -= 4;
        *((_DWORD *)v20 - 1) = v21;
        v20 -= 4;
      }
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v20;
      __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v13;
      __p[0].__r_.__value_.__r.__words[2] = v11;
      if (v14)
      {
        operator delete(v14);
        v11 = __p[0].__r_.__value_.__r.__words[2];
      }
    }
    else
    {
      *(_DWORD *)__p[0].__r_.__value_.__l.__size_ = 5;
      v13 = (_DWORD *)(size + 4);
    }
    __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v13;
    v22 = (unint64_t)(a4 - *(_QWORD *)(a3 + 72)) >> 4;
    if ((unint64_t)v13 >= v11)
    {
      v24 = (_DWORD *)__p[0].__r_.__value_.__r.__words[0];
      v25 = (uint64_t)((uint64_t)v13 - __p[0].__r_.__value_.__r.__words[0]) >> 2;
      v26 = v25 + 1;
      if ((unint64_t)(v25 + 1) >> 62)
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      v27 = v11 - __p[0].__r_.__value_.__r.__words[0];
      if (v27 >> 1 > v26)
        v26 = v27 >> 1;
      if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFFCLL)
        v28 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v28 = v26;
      if (v28)
      {
        v29 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&__p[0].__r_.__value_.__r.__words[2], v28);
        v13 = (_DWORD *)__p[0].__r_.__value_.__l.__size_;
        v24 = (_DWORD *)__p[0].__r_.__value_.__r.__words[0];
      }
      else
      {
        v29 = 0;
      }
      v30 = &v29[4 * v25];
      v11 = (std::string::size_type)&v29[4 * v28];
      *(_DWORD *)v30 = v22;
      v23 = v30 + 4;
      while (v13 != v24)
      {
        v31 = *--v13;
        *((_DWORD *)v30 - 1) = v31;
        v30 -= 4;
      }
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v30;
      __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v23;
      __p[0].__r_.__value_.__r.__words[2] = v11;
      if (v24)
      {
        operator delete(v24);
        v11 = __p[0].__r_.__value_.__r.__words[2];
      }
    }
    else
    {
      *v13 = v22;
      v23 = v13 + 1;
    }
    __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v23;
    if ((unint64_t)v23 >= v11)
    {
      v33 = (_DWORD *)__p[0].__r_.__value_.__r.__words[0];
      v34 = (uint64_t)((uint64_t)v23 - __p[0].__r_.__value_.__r.__words[0]) >> 2;
      v35 = v34 + 1;
      if ((unint64_t)(v34 + 1) >> 62)
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      v36 = v11 - __p[0].__r_.__value_.__r.__words[0];
      if (v36 >> 1 > v35)
        v35 = v36 >> 1;
      if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL)
        v37 = 0x3FFFFFFFFFFFFFFFLL;
      else
        v37 = v35;
      if (v37)
      {
        v38 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&__p[0].__r_.__value_.__r.__words[2], v37);
        v23 = (_DWORD *)__p[0].__r_.__value_.__l.__size_;
        v33 = (_DWORD *)__p[0].__r_.__value_.__r.__words[0];
      }
      else
      {
        v38 = 0;
      }
      v39 = &v38[4 * v34];
      v40 = (std::string::size_type)&v38[4 * v37];
      *(_DWORD *)v39 = 3;
      v32 = (std::string::size_type)(v39 + 4);
      while (v23 != v33)
      {
        v41 = *--v23;
        *((_DWORD *)v39 - 1) = v41;
        v39 -= 4;
      }
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v39;
      __p[0].__r_.__value_.__l.__size_ = v32;
      __p[0].__r_.__value_.__r.__words[2] = v40;
      if (v33)
        operator delete(v33);
    }
    else
    {
      *v23 = 3;
      v32 = (std::string::size_type)(v23 + 1);
    }
    __p[0].__r_.__value_.__l.__size_ = v32;
    if (*(_QWORD *)(a2 + 24))
      v42 = *(google::protobuf::MessageLite **)(a2 + 24);
    else
      v42 = (google::protobuf::MessageLite *)&google::protobuf::_ExtensionRangeOptions_default_instance_;
    google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor::ExtensionRange>(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8), v42, a4, (uint64_t)__p);
    if (__p[0].__r_.__value_.__r.__words[0])
    {
      __p[0].__r_.__value_.__l.__size_ = __p[0].__r_.__value_.__r.__words[0];
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_QWORD *)(a4 + 8) = 0;
  }
}

void sub_1BF81C25C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::Descriptor>(uint64_t a1, google::protobuf::MessageLite *a2, uint64_t a3, int a4)
{
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  void *__p;
  char *v20;
  unint64_t v21;

  __p = 0;
  v20 = 0;
  v21 = 0;
  google::protobuf::Descriptor::GetLocationPath(a3, (uint64_t)&__p);
  v8 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v10 = (char *)__p;
    v11 = (v20 - (_BYTE *)__p) >> 2;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 62)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v13 = v21 - (_QWORD)__p;
    if ((uint64_t)(v21 - (_QWORD)__p) >> 1 > v12)
      v12 = v13 >> 1;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL)
      v14 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v21, v14);
      v10 = (char *)__p;
      v8 = v20;
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[4 * v11];
    v17 = &v15[4 * v14];
    *(_DWORD *)v16 = a4;
    v9 = v16 + 4;
    while (v8 != v10)
    {
      v18 = *((_DWORD *)v8 - 1);
      v8 -= 4;
      *((_DWORD *)v16 - 1) = v18;
      v16 -= 4;
    }
    __p = v16;
    v20 = v9;
    v21 = (unint64_t)v17;
    if (v10)
      operator delete(v10);
  }
  else
  {
    *(_DWORD *)v20 = a4;
    v9 = v8 + 4;
  }
  v20 = v9;
  google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor>(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8), a2, a3, (uint64_t)&__p);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1BF81C3CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildFieldOrExtension(google::protobuf::DescriptorBuilder *this, const google::protobuf::FieldDescriptorProto *a2, const google::protobuf::Descriptor *a3, int32x2_t *a4, int a5)
{
  uint64_t **v10;
  std::string *NameString;
  __int128 *v12;
  __int128 v13;
  size_t v14;
  size_t size;
  std::string *v16;
  std::string *v17;
  int v18;
  uint64_t *v19;
  size_t v20;
  unsigned __int8 *v21;
  int v22;
  unsigned __int8 *v23;
  std::string *v24;
  uint64_t *v25;
  uint64_t *v26;
  char **v27;
  int32x2_t v28;
  const std::string::value_type *v29;
  std::string *v30;
  __int128 v31;
  int v32;
  int v33;
  const std::string::value_type *v34;
  int v35;
  unint64_t *v36;
  unint64_t v37;
  const std::string::value_type *v38;
  char *v39;
  google::protobuf *v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  __int32 v44;
  const char *v45;
  __int32 v46;
  const std::string::value_type *v47;
  std::string::size_type v48;
  int v49;
  uint64_t v50;
  int v51;
  google::protobuf::MessageLite *v52;
  std::string *v53;
  std::string *v54;
  google::protobuf::MessageLite *v55;
  const char *v56;
  unint64_t String;
  const char *v58;
  const char *v59;
  unsigned __int16 **v60;
  int v61;
  unsigned __int16 *v62;
  unsigned __int16 **v63;
  int v64;
  unsigned __int16 *v65;
  uint64_t v66;
  int v67;
  _DWORD *v68;
  unint64_t *v69;
  unint64_t v70;
  int v71;
  int v72;
  unint64_t v74;
  int v75;
  int v76;
  int v78;
  char *v79;
  char *v80;
  double v81;
  google::protobuf::io *v82;
  uint64_t v83;
  const std::string::value_type *v84;
  std::string *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  std::string __p;
  std::string v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  int v101;
  char *__endptr;
  int v103;
  int32x2_t *v104;
  int v105;
  uint64_t (*v106)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  int v107;
  std::string v108;
  std::string v109[2];
  uint64_t v110;

  v110 = *MEMORY[0x1E0C80C00];
  if (a3)
    v10 = (uint64_t **)((char *)a3 + 8);
  else
    v10 = (uint64_t **)(*((_QWORD *)this + 10) + 8);
  NameString = google::protobuf::DescriptorBuilder::AllocateNameString((uint64_t)this, *v10, *((_QWORD *)a2 + 3));
  google::protobuf::DescriptorBuilder::ValidateSymbolName((uint64_t)this, *((uint64_t **)a2 + 3), (const std::string::value_type *)NameString, (uint64_t)a2);
  *a4 = (int32x2_t)google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), *((_QWORD *)a2 + 3));
  a4[1] = (int32x2_t)NameString;
  a4[5] = *(int32x2_t *)((char *)this + 80);
  a4[8].i32[1] = *((_DWORD *)a2 + 18);
  a4[8].i8[2] = a5;
  v12 = (__int128 *)*((_QWORD *)a2 + 3);
  if (*((char *)v12 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(&v91, *(const std::string::value_type **)v12, *((_QWORD *)v12 + 1));
  }
  else
  {
    v13 = *v12;
    v91.__r_.__value_.__r.__words[2] = *((_QWORD *)v12 + 2);
    *(_OWORD *)&v91.__r_.__value_.__l.__data_ = v13;
  }
  v14 = HIBYTE(v91.__r_.__value_.__r.__words[2]);
  size = v91.__r_.__value_.__l.__size_;
  v16 = (std::string *)v91.__r_.__value_.__r.__words[0];
  if ((v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v17 = (std::string *)((char *)&v91 + HIBYTE(v91.__r_.__value_.__r.__words[2]));
  else
    v17 = (std::string *)(v91.__r_.__value_.__r.__words[0] + v91.__r_.__value_.__l.__size_);
  if ((v91.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v16 = &v91;
  if (v16 != v17)
  {
    do
    {
      v18 = v16->__r_.__value_.__s.__data_[0];
      if ((v18 - 65) <= 0x19)
        v16->__r_.__value_.__s.__data_[0] = v18 + 32;
      v16 = (std::string *)((char *)v16 + 1);
    }
    while (v16 != v17);
    v14 = HIBYTE(v91.__r_.__value_.__r.__words[2]);
    size = v91.__r_.__value_.__l.__size_;
  }
  v19 = (uint64_t *)*((_QWORD *)a2 + 3);
  if ((v14 & 0x80u) == 0)
    v20 = v14;
  else
    v20 = size;
  v21 = (unsigned __int8 *)*((unsigned __int8 *)v19 + 23);
  v22 = (char)v21;
  if ((char)v21 < 0)
    v21 = (unsigned __int8 *)v19[1];
  if ((unsigned __int8 *)v20 != v21)
    goto LABEL_33;
  if (v22 >= 0)
    v23 = (unsigned __int8 *)*((_QWORD *)a2 + 3);
  else
    v23 = (unsigned __int8 *)*v19;
  if ((v14 & 0x80) != 0)
  {
    if (!memcmp(v91.__r_.__value_.__l.__data_, v23, size))
      goto LABEL_34;
LABEL_33:
    a4[2] = (int32x2_t)google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), (uint64_t)&v91);
    v19 = (uint64_t *)*((_QWORD *)a2 + 3);
    goto LABEL_35;
  }
  if ((_DWORD)v14)
  {
    v24 = &v91;
    while (v24->__r_.__value_.__s.__data_[0] == *v23)
    {
      v24 = (std::string *)((char *)v24 + 1);
      ++v23;
      if (!--v14)
        goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_34:
  a4[2] = *a4;
LABEL_35:
  v25 = (uint64_t *)*((_QWORD *)this + 1);
  a4[3] = (int32x2_t)google::protobuf::DescriptorPool::Tables::AllocateString(v25, (uint64_t)v109);
  if (SHIBYTE(v109[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(v109[0].__r_.__value_.__l.__data_);
  if ((*((_BYTE *)a2 + 16) & 0x10) != 0)
  {
    a4[8].i8[1] = 1;
    a4[4] = (int32x2_t)google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), *((_QWORD *)a2 + 7));
  }
  else
  {
    a4[8].i8[1] = 0;
    v26 = (uint64_t *)*((_QWORD *)this + 1);
    a4[4] = (int32x2_t)google::protobuf::DescriptorPool::Tables::AllocateString(v26, (uint64_t)v109);
    if (SHIBYTE(v109[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(v109[0].__r_.__value_.__l.__data_);
  }
  v28 = *(int32x2_t *)((char *)a2 + 80);
  a4[7] = vrev64_s32(v28);
  if (a4[8].i8[2] && v28.i32[0] == 2)
  {
    v29 = (const std::string::value_type *)a4[1];
    std::operator+<char>();
    v30 = std::string::append(&v108, " cannot be required.");
    v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v109[0].__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v109[0].__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v29, (uint64_t)a2, 2, (const std::string::value_type *)v109);
    if (SHIBYTE(v109[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(v109[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v108.__r_.__value_.__l.__data_);
  }
  a4[12] = 0;
  a4[10] = 0;
  a4[6] = 0;
  a4[13] = 0;
  a4[14] = 0;
  a4[17] = 0;
  a4[18] = 0;
  a4[16] = 0;
  v32 = *((_DWORD *)a2 + 4);
  a4[8].i8[0] = (v32 & 8) != 0;
  if ((v32 & 8) != 0 && a4[7].i32[1] == 3)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *(const std::string::value_type **)&a4[1], (uint64_t)a2, 4, "Repeated fields can't have default values.");
    v32 = *((_DWORD *)a2 + 4);
  }
  if ((v32 & 0x200) != 0)
  {
    if ((v32 & 8) == 0)
    {
      v36 = (unint64_t *)a4[6];
      if (v36)
      {
        v106 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v104 = a4;
        v37 = atomic_load(v36);
        if (v37 != -1)
        {
          v109[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v106;
          v109[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v104;
          v108.__r_.__value_.__r.__words[0] = (std::string::size_type)v109;
          std::__call_once(v36, &v108, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      switch(a4[7].i32[0])
      {
        case 1:
        case 3:
        case 4:
        case 6:
          a4[18] = 0;
          break;
        case 2:
        case 5:
        case 7:
          a4[18].i32[0] = 0;
          break;
        case 8:
          a4[18].i8[0] = 0;
          break;
        case 9:
          google::protobuf::internal::InitProtobufDefaults((google::protobuf::internal *)v36);
          a4[18] = (int32x2_t)&google::protobuf::internal::fixed_address_empty_string;
          break;
        default:
          goto LABEL_51;
      }
      goto LABEL_51;
    }
    __endptr = 0;
    v42 = (unint64_t *)a4[6];
    if (v42)
    {
      v106 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v104 = a4;
      v43 = atomic_load(v42);
      if (v43 != -1)
      {
        v109[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v106;
        v109[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v104;
        v108.__r_.__value_.__r.__words[0] = (std::string::size_type)v109;
        std::__call_once(v42, &v108, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v44 = a4[7].i32[0];
    switch(v44)
    {
      case 1:
        v60 = (unsigned __int16 **)*((_QWORD *)a2 + 6);
        v61 = *((char *)v60 + 23);
        if (v61 < 0)
        {
          if (v60[1] != (unsigned __int16 *)3)
          {
LABEL_141:
            if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v60, "-inf"))
            {
              v74 = 0xFFF0000000000000;
LABEL_168:
              a4[18] = (int32x2_t)v74;
              goto LABEL_171;
            }
            if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(*((_QWORD **)a2 + 6), "nan"))
            {
              v74 = 0x7FF8000000000000;
              goto LABEL_168;
            }
            v79 = (char *)*((_QWORD *)a2 + 6);
            if (v79[23] < 0)
              v79 = *(char **)v79;
            *(double *)&a4[18] = google::protobuf::io::NoLocaleStrtod((google::protobuf::io *)v79, (char *)&__endptr, v27);
LABEL_171:
            if (!__endptr)
              break;
            v83 = *((_QWORD *)a2 + 6);
            if (*(char *)(v83 + 23) < 0)
            {
              if (!*(_QWORD *)(v83 + 8))
              {
LABEL_177:
                v84 = (const std::string::value_type *)a4[1];
                std::operator+<char>();
                v85 = std::string::append(&v108, "\".");
                v86 = *(_OWORD *)&v85->__r_.__value_.__l.__data_;
                v109[0].__r_.__value_.__r.__words[2] = v85->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v109[0].__r_.__value_.__l.__data_ = v86;
                v85->__r_.__value_.__l.__size_ = 0;
                v85->__r_.__value_.__r.__words[2] = 0;
                v85->__r_.__value_.__r.__words[0] = 0;
                google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v84, (uint64_t)a2, 4, (const std::string::value_type *)v109);
                if (SHIBYTE(v109[0].__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v109[0].__r_.__value_.__l.__data_);
                if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0)
                  operator delete(v108.__r_.__value_.__l.__data_);
                break;
              }
            }
            else if (!*(_BYTE *)(v83 + 23))
            {
              goto LABEL_177;
            }
            if (!*__endptr)
              break;
            goto LABEL_177;
          }
          v62 = *v60;
        }
        else
        {
          v62 = (unsigned __int16 *)*((_QWORD *)a2 + 6);
          if (v61 != 3)
            goto LABEL_141;
        }
        v71 = *v62;
        v72 = *((unsigned __int8 *)v62 + 2);
        if (v71 == 28265 && v72 == 102)
        {
          v74 = 0x7FF0000000000000;
          goto LABEL_168;
        }
        goto LABEL_141;
      case 2:
        v63 = (unsigned __int16 **)*((_QWORD *)a2 + 6);
        v64 = *((char *)v63 + 23);
        if (v64 < 0)
        {
          if (v63[1] != (unsigned __int16 *)3)
            goto LABEL_151;
          v65 = *v63;
        }
        else
        {
          v65 = (unsigned __int16 *)*((_QWORD *)a2 + 6);
          if (v64 != 3)
            goto LABEL_151;
        }
        v75 = *v65;
        v76 = *((unsigned __int8 *)v65 + 2);
        if (v75 == 28265 && v76 == 102)
        {
          v78 = 2139095040;
          goto LABEL_170;
        }
LABEL_151:
        if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v63, "-inf"))
        {
          v78 = -8388608;
        }
        else
        {
          if (!std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(*((_QWORD **)a2 + 6), "nan"))
          {
            v80 = (char *)*((_QWORD *)a2 + 6);
            if (v80[23] < 0)
              v80 = *(char **)v80;
            v81 = google::protobuf::io::NoLocaleStrtod((google::protobuf::io *)v80, (char *)&__endptr, v27);
            *(float *)a4[18].i32 = google::protobuf::io::SafeDoubleToFloat(v82, v81);
            goto LABEL_171;
          }
          v78 = 2143289344;
        }
LABEL_170:
        a4[18].i32[0] = v78;
        goto LABEL_171;
      case 3:
      case 16:
      case 18:
        v56 = (const char *)*((_QWORD *)a2 + 6);
        if (v56[23] < 0)
          v56 = *(const char **)v56;
        String = strtoll(v56, &__endptr, 0);
        goto LABEL_134;
      case 4:
      case 6:
        v59 = (const char *)*((_QWORD *)a2 + 6);
        if (v59[23] < 0)
          v59 = *(const char **)v59;
        String = strtoull(v59, &__endptr, 0);
        goto LABEL_134;
      case 5:
      case 15:
      case 17:
        v45 = (const char *)*((_QWORD *)a2 + 6);
        if (v45[23] < 0)
          v45 = *(const char **)v45;
        v46 = strtol(v45, &__endptr, 0);
        goto LABEL_112;
      case 7:
      case 13:
        v58 = (const char *)*((_QWORD *)a2 + 6);
        if (v58[23] < 0)
          v58 = *(const char **)v58;
        v46 = strtoul(v58, &__endptr, 0);
LABEL_112:
        a4[18].i32[0] = v46;
        goto LABEL_171;
      case 8:
        v66 = *((_QWORD *)a2 + 6);
        v67 = *(char *)(v66 + 23);
        if (v67 < 0)
        {
          if (*(_QWORD *)(v66 + 8) != 4)
            goto LABEL_158;
          v68 = *(_DWORD **)v66;
        }
        else
        {
          v68 = (_DWORD *)*((_QWORD *)a2 + 6);
          if (v67 != 4)
            goto LABEL_158;
        }
        if (*v68 == 1702195828)
        {
          a4[18].i8[0] = 1;
          goto LABEL_171;
        }
LABEL_158:
        if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((_QWORD *)v66, "false"))
          a4[18].i8[0] = 0;
        else
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *(const std::string::value_type **)&a4[1], (uint64_t)a2, 4, "Boolean default must be true or false.");
        goto LABEL_171;
      case 9:
      case 12:
        v69 = (unint64_t *)a4[6];
        if (v69)
        {
          v106 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v104 = a4;
          v70 = atomic_load(v69);
          if (v70 != -1)
          {
            v109[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v106;
            v109[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v104;
            v108.__r_.__value_.__r.__words[0] = (std::string::size_type)v109;
            std::__call_once(v69, &v108, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          v44 = a4[7].i32[0];
        }
        if (v44 == 12)
          google::protobuf::UnescapeCEscapeString(*((_QWORD *)a2 + 6), v109);
        String = (unint64_t)google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), *((_QWORD *)a2 + 6));
LABEL_134:
        a4[18] = (int32x2_t)String;
        goto LABEL_171;
      case 10:
      case 11:
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *(const std::string::value_type **)&a4[1], (uint64_t)a2, 4, "Messages can't have default values.");
        a4[8].i8[0] = 0;
        goto LABEL_171;
      case 14:
        a4[18] = 0;
        goto LABEL_171;
      default:
        goto LABEL_171;
    }
  }
LABEL_51:
  v33 = a4[8].i32[1];
  if (v33 <= 0)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *(const std::string::value_type **)&a4[1], (uint64_t)a2, 1, "Field numbers must be positive integers.");
  }
  else
  {
    if (v33 >> 29 && (a5 & 1) == 0)
    {
      v34 = (const std::string::value_type *)a4[1];
      v109[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)0x1FFFFFFF, &v109[0].__r_.__value_.__s.__data_[12], (char *)v27);
      LODWORD(v109[0].__r_.__value_.__r.__words[1]) = strlen(v109[0].__r_.__value_.__l.__data_);
      v108.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v108.__r_.__value_.__r.__words[1]) = -1;
      v106 = 0;
      v107 = -1;
      v104 = 0;
      v105 = -1;
      __endptr = 0;
      v103 = -1;
      v100 = 0;
      v101 = -1;
      v98 = 0;
      v99 = -1;
      v96 = 0;
      v97 = -1;
      v94 = 0;
      v95 = -1;
      v92 = 0;
      v93 = -1;
      *(_QWORD *)&v87 = &v96;
      *((_QWORD *)&v87 + 1) = &v94;
      google::protobuf::strings::Substitute("Field numbers cannot be greater than $0.", (uint64_t)v109, (uint64_t)&v108, (uint64_t)&v106, (uint64_t)&v104, (uint64_t)&__endptr, (uint64_t)&v100, (uint64_t)&v98, &__p, v87, (uint64_t)&v92);
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v34, (uint64_t)a2, 1, (const std::string::value_type *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v35 = *((_DWORD *)a2 + 4);
      goto LABEL_72;
    }
    if ((v33 - 19000) <= 0x3E7)
    {
      v38 = (const std::string::value_type *)a4[1];
      v109[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)0x4A38, &v109[0].__r_.__value_.__s.__data_[12], (char *)v27);
      LODWORD(v109[0].__r_.__value_.__r.__words[1]) = strlen(v109[0].__r_.__value_.__l.__data_);
      v108.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)0x4E1F, &v108.__r_.__value_.__s.__data_[12], v39);
      LODWORD(v108.__r_.__value_.__r.__words[1]) = strlen(v108.__r_.__value_.__l.__data_);
      v106 = 0;
      v107 = -1;
      v104 = 0;
      v105 = -1;
      __endptr = 0;
      v103 = -1;
      v100 = 0;
      v101 = -1;
      v98 = 0;
      v99 = -1;
      v96 = 0;
      v97 = -1;
      v94 = 0;
      v95 = -1;
      v92 = 0;
      v93 = -1;
      *(_QWORD *)&v88 = &v96;
      *((_QWORD *)&v88 + 1) = &v94;
      google::protobuf::strings::Substitute("Field numbers $0 through $1 are reserved for the protocol buffer library implementation.", (uint64_t)v109, (uint64_t)&v108, (uint64_t)&v106, (uint64_t)&v104, (uint64_t)&__endptr, (uint64_t)&v100, (uint64_t)&v98, &__p, v88, (uint64_t)&v92);
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v38, (uint64_t)a2, 1, (const std::string::value_type *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  v35 = *((_DWORD *)a2 + 4);
  if (a5)
  {
    if ((v35 & 2) == 0)
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *(const std::string::value_type **)&a4[1], (uint64_t)a2, 3, "FieldDescriptorProto.extendee not set for extension field.");
      v35 = *((_DWORD *)a2 + 4);
    }
    a4[12] = (int32x2_t)a3;
    if ((v35 & 0x80) != 0)
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *(const std::string::value_type **)&a4[1], (uint64_t)a2, 2, "FieldDescriptorProto.oneof_index should not be set for extensions.");
    goto LABEL_91;
  }
LABEL_72:
  if ((v35 & 2) != 0)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *(const std::string::value_type **)&a4[1], (uint64_t)a2, 3, "FieldDescriptorProto.extendee set for non-extension field.");
    v35 = *((_DWORD *)a2 + 4);
  }
  a4[10] = (int32x2_t)a3;
  if ((v35 & 0x80) != 0)
  {
    v40 = (google::protobuf *)*((unsigned int *)a2 + 19);
    if ((v40 & 0x80000000) == 0 && (int)v40 < *((_DWORD *)a3 + 27))
    {
      v41 = *((_QWORD *)a3 + 6) + 48 * v40;
      goto LABEL_92;
    }
    v47 = (const std::string::value_type *)a4[1];
    v109[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer(v40, &v109[0].__r_.__value_.__s.__data_[12], (char *)v27);
    LODWORD(v109[0].__r_.__value_.__r.__words[1]) = strlen(v109[0].__r_.__value_.__l.__data_);
    v48 = *(_QWORD *)a3;
    v49 = *(char *)(*(_QWORD *)a3 + 23);
    v50 = *(_QWORD *)(*(_QWORD *)a3 + 8);
    if (v49 < 0)
      v48 = **(_QWORD **)a3;
    v108.__r_.__value_.__r.__words[0] = v48;
    v51 = v49;
    if (v49 < 0)
      v51 = v50;
    LODWORD(v108.__r_.__value_.__r.__words[1]) = v51;
    v106 = 0;
    v107 = -1;
    v104 = 0;
    v105 = -1;
    __endptr = 0;
    v103 = -1;
    v100 = 0;
    v101 = -1;
    v98 = 0;
    v99 = -1;
    v96 = 0;
    v97 = -1;
    v94 = 0;
    v95 = -1;
    v92 = 0;
    v93 = -1;
    *(_QWORD *)&v89 = &v96;
    *((_QWORD *)&v89 + 1) = &v94;
    google::protobuf::strings::Substitute("FieldDescriptorProto.oneof_index $0 is out of range for type \"$1\".", (uint64_t)v109, (uint64_t)&v108, (uint64_t)&v106, (uint64_t)&v104, (uint64_t)&__endptr, (uint64_t)&v100, (uint64_t)&v98, &__p, v89, (uint64_t)&v92);
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v47, (uint64_t)a2, 2, (const std::string::value_type *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_91:
  v41 = 0;
LABEL_92:
  a4[11] = (int32x2_t)v41;
  if ((*((_DWORD *)a2 + 4) & 0x20) != 0)
  {
    v52 = (google::protobuf::MessageLite *)*((_QWORD *)a2 + 8);
    if (!v52)
    {
      v53 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)v109, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 9377);
      v54 = google::protobuf::internal::LogMessage::operator<<(v53, "CHECK failed: !value || options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v108, (const char **)&v54->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v109[0].__r_.__value_.__l.__data_);
      v52 = (google::protobuf::MessageLite *)*((_QWORD *)a2 + 8);
    }
    if (v52)
      v55 = v52;
    else
      v55 = (google::protobuf::MessageLite *)&google::protobuf::_FieldOptions_default_instance_;
    google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::FieldDescriptor>((uint64_t)this, v55, (uint64_t)a4, 8);
  }
  else
  {
    a4[15] = 0;
  }
  google::protobuf::DescriptorBuilder::AddSymbol((uint64_t)this, *(const std::string **)&a4[1], (uint64_t *)a3, (uint64_t)*a4, (uint64_t)a2, (const char *)2, (const char *)a4);
  if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v91.__r_.__value_.__l.__data_);
}

void sub_1BF81D09C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  uint64_t v23;

  if (*(char *)(v23 - 121) < 0)
    operator delete(*(void **)(v23 - 144));
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::ToCamelCase(uint64_t *a1@<X0>, char a2@<W1>, std::string *a3@<X8>)
{
  std::string *v5;
  std::string::size_type v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  uint64_t *v11;
  int v12;
  BOOL v13;
  unint64_t v14;
  int v15;

  v5 = a3;
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if (*((char *)a1 + 23) >= 0)
    v6 = *((unsigned __int8 *)a1 + 23);
  else
    v6 = a1[1];
  std::string::reserve(a3, v6);
  v7 = *((char *)a1 + 23) < 0;
  v8 = *((unsigned __int8 *)a1 + 23);
  if ((v8 & 0x80u) != 0)
    v8 = a1[1];
  if (v8)
  {
    v9 = 0;
    v10 = a2 ^ 1;
    do
    {
      if (v7)
        v11 = (uint64_t *)*a1;
      else
        v11 = a1;
      v12 = *((unsigned __int8 *)v11 + v9);
      v13 = v12 == 95;
      if (v12 != 95)
      {
        if ((v10 & ((v12 - 97) < 0x1A)) != 0)
          LOBYTE(v12) = v12 - 32;
        std::string::push_back(v5, v12);
      }
      ++v9;
      v7 = *((char *)a1 + 23) < 0;
      v14 = a1[1];
      if (*((char *)a1 + 23) >= 0)
        v14 = *((unsigned __int8 *)a1 + 23);
      v10 = v13;
    }
    while (v14 > v9);
  }
  if ((a2 & 1) != 0)
  {
    if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v5->__r_.__value_.__l.__size_)
        return;
      v5 = (std::string *)v5->__r_.__value_.__r.__words[0];
    }
    else if (!*((_BYTE *)&v5->__r_.__value_.__s + 23))
    {
      return;
    }
    v15 = v5->__r_.__value_.__s.__data_[0];
    if ((v15 - 65) < 0x1A)
      LOBYTE(v15) = v15 + 32;
    v5->__r_.__value_.__s.__data_[0] = v15;
  }
}

void sub_1BF81D294(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void google::protobuf::`anonymous namespace'::ToJsonName(uint64_t *a1@<X0>, std::string *a2@<X8>)
{
  std::string::size_type v4;
  BOOL v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  uint64_t *v9;
  int v10;
  BOOL v11;
  unint64_t v12;

  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  if (*((char *)a1 + 23) >= 0)
    v4 = *((unsigned __int8 *)a1 + 23);
  else
    v4 = a1[1];
  std::string::reserve(a2, v4);
  v5 = *((char *)a1 + 23) < 0;
  v6 = *((unsigned __int8 *)a1 + 23);
  if ((v6 & 0x80u) != 0)
    v6 = a1[1];
  if (v6)
  {
    v7 = 0;
    v8 = 0;
    do
    {
      if (v5)
        v9 = (uint64_t *)*a1;
      else
        v9 = a1;
      v10 = *((unsigned __int8 *)v9 + v7);
      v11 = v10 == 95;
      if (v10 != 95)
      {
        if (v8 && (v10 - 97) < 0x1A)
          LOBYTE(v10) = v10 - 32;
        std::string::push_back(a2, v10);
      }
      ++v7;
      v5 = *((char *)a1 + 23) < 0;
      v12 = a1[1];
      if (*((char *)a1 + 23) >= 0)
        v12 = *((unsigned __int8 *)a1 + 23);
      v8 = v11;
    }
    while (v12 > v7);
  }
}

void sub_1BF81D38C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::FieldDescriptor>(uint64_t a1, google::protobuf::MessageLite *a2, uint64_t a3, int a4)
{
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  void *__p;
  char *v20;
  unint64_t v21;

  __p = 0;
  v20 = 0;
  v21 = 0;
  google::protobuf::FieldDescriptor::GetLocationPath(a3, (char **)&__p);
  v8 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v10 = (char *)__p;
    v11 = (v20 - (_BYTE *)__p) >> 2;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 62)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v13 = v21 - (_QWORD)__p;
    if ((uint64_t)(v21 - (_QWORD)__p) >> 1 > v12)
      v12 = v13 >> 1;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL)
      v14 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v21, v14);
      v10 = (char *)__p;
      v8 = v20;
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[4 * v11];
    v17 = &v15[4 * v14];
    *(_DWORD *)v16 = a4;
    v9 = v16 + 4;
    while (v8 != v10)
    {
      v18 = *((_DWORD *)v8 - 1);
      v8 -= 4;
      *((_DWORD *)v16 - 1) = v18;
      v16 -= 4;
    }
    __p = v16;
    v20 = v9;
    v21 = (unint64_t)v17;
    if (v10)
      operator delete(v10);
  }
  else
  {
    *(_DWORD *)v20 = a4;
    v9 = v8 + 4;
  }
  v20 = v9;
  google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FieldDescriptor>(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8), a2, a3, (uint64_t)&__p);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1BF81D4E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor::ExtensionRange>(uint64_t a1, uint64_t a2, uint64_t a3, google::protobuf::MessageLite *a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::ExtensionRangeOptions *v12;
  void *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string __p;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  std::string v27;

  v12 = google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::ExtensionRangeOptions>(*(_QWORD **)(a1 + 8));
  if ((google::protobuf::ExtensionRangeOptions::IsInitialized(a4) & 1) != 0)
  {
    google::protobuf::MessageLite::SerializeAsString(a4, (uint64_t)&__p);
    google::protobuf::MessageLite::ParseFromString(v12, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)(a5 + 8) = v12;
    if (*((int *)v12 + 14) >= 1)
    {
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      if (v24 < 0)
        operator delete(v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v13);
      }
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v27;
    std::string::basic_string[abi:ne180100]((uint64_t)&v27, v14 + 1);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 46;
    v17 = *(char *)(a3 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a3;
    else
      v18 = *(const std::string::value_type **)a3;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a3 + 23);
    else
      v19 = *(_QWORD *)(a3 + 8);
    v20 = std::string::append(&v27, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)&__p, (uint64_t)a4, 7, "Uninterpreted option is missing name or value.");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v13 = (void *)v27.__r_.__value_.__r.__words[0];
      goto LABEL_31;
    }
  }
}

void sub_1BF81D6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::OneofDescriptor>(uint64_t a1, google::protobuf::MessageLite *a2, uint64_t a3, int a4)
{
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  void *__p;
  char *v20;
  unint64_t v21;

  __p = 0;
  v20 = 0;
  v21 = 0;
  google::protobuf::OneofDescriptor::GetLocationPath(a3, (char **)&__p);
  v8 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v10 = (char *)__p;
    v11 = (v20 - (_BYTE *)__p) >> 2;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 62)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v13 = v21 - (_QWORD)__p;
    if ((uint64_t)(v21 - (_QWORD)__p) >> 1 > v12)
      v12 = v13 >> 1;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL)
      v14 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v21, v14);
      v10 = (char *)__p;
      v8 = v20;
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[4 * v11];
    v17 = &v15[4 * v14];
    *(_DWORD *)v16 = a4;
    v9 = v16 + 4;
    while (v8 != v10)
    {
      v18 = *((_DWORD *)v8 - 1);
      v8 -= 4;
      *((_DWORD *)v16 - 1) = v18;
      v16 -= 4;
    }
    __p = v16;
    v20 = v9;
    v21 = (unint64_t)v17;
    if (v10)
      operator delete(v10);
  }
  else
  {
    *(_DWORD *)v20 = a4;
    v9 = v8 + 4;
  }
  v20 = v9;
  google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::OneofDescriptor>(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8), a2, a3, (uint64_t)&__p);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1BF81D85C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CheckEnumValueUniqueness(google::protobuf::DescriptorBuilder *this, const google::protobuf::EnumDescriptorProto *a2, uint64_t **a3)
{
  uint64_t **v3;
  const char *v5;
  uint64_t v6;
  int v7;
  std::string::value_type v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t **v11;
  size_t v12;
  std::string::size_type v13;
  std::string::size_type size;
  std::string::size_type v15;
  std::string::size_type v16;
  uint64_t v17;
  std::string::size_type v18;
  uint64_t v19;
  int v20;
  char v21;
  std::string *v22;
  std::string::size_type v23;
  int v24;
  void *v25;
  std::string::size_type v26;
  std::string::size_type v27;
  std::string::size_type v28;
  BOOL v29;
  std::string::size_type v30;
  std::string::size_type v31;
  std::string::size_type v32;
  char v33;
  std::string *p_p;
  int v35;
  BOOL v36;
  char v37;
  char v38;
  char v39;
  std::string::size_type v40;
  _OWORD *v41;
  char v42;
  char v43;
  _DWORD *v44;
  const void **v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t *v51;
  std::string *v52;
  __int128 v53;
  uint64_t *v54;
  uint64_t v55;
  int v56;
  const std::string::value_type *v57;
  std::string::size_type v58;
  std::string *v59;
  __int128 v60;
  std::string *v61;
  __int128 v62;
  const std::string::value_type *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t **v69;
  std::string v70;
  std::string v71;
  std::string v72;
  std::string __p;
  uint64_t *v74;
  __int128 v75;
  std::string v76;
  uint64_t *v77;
  _QWORD v78[2];
  __int128 v79;
  std::string v80;
  std::string *v81;

  v3 = a3;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v79, *a3, (const char *)a3);
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v79;
  memset(&v80, 0, sizeof(v80));
  if (*((uint64_t *)&v79 + 1) >= 1)
  {
    v6 = 0;
    do
    {
      if (google::protobuf::StringPiece::operator[](&__p, v6) != 95)
      {
        v7 = google::protobuf::StringPiece::operator[](&__p, v6);
        if ((v7 - 65) >= 0x1A)
          v8 = v7;
        else
          v8 = v7 + 32;
        std::string::push_back(&v80, v8);
      }
      ++v6;
    }
    while ((uint64_t)__p.__r_.__value_.__l.__size_ > v6);
  }
  v78[0] = 0;
  v78[1] = 0;
  v77 = v78;
  if (*((int *)v3 + 11) >= 1)
  {
    v9 = 0;
    v67 = (char *)a2 + 24;
    v69 = v3;
    while (1)
    {
      v10 = v3[6];
      v11 = (uint64_t **)&v10[5 * v9];
      google::protobuf::StringPiece::StringPiece<std::allocator<char>>(&v75, *v11, v5);
      v12 = *((_QWORD *)&v75 + 1);
      *(_OWORD *)&v72.__r_.__value_.__l.__data_ = v75;
      v13 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
      size = v80.__r_.__value_.__l.__size_;
      if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v15 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
      else
        v15 = v80.__r_.__value_.__l.__size_;
      if (!*((_QWORD *)&v75 + 1))
        goto LABEL_39;
      if (!v15)
      {
        v18 = 0;
        v16 = 0;
LABEL_32:
        if ((v13 & 0x80u) != 0)
          v13 = size;
        if (v16 < v13)
          goto LABEL_39;
        while (v18 < v12)
        {
          v24 = google::protobuf::StringPiece::operator[](&v72, v18);
          v12 = v72.__r_.__value_.__l.__size_;
          if (v24 != 95)
            break;
          ++v18;
        }
        if (v12 == v18)
        {
LABEL_39:
          v25 = (void *)v72.__r_.__value_.__r.__words[0];
          if (v72.__r_.__value_.__r.__words[0])
            goto LABEL_40;
        }
        else
        {
          if ((uint64_t)v12 < (uint64_t)v18)
            __assert_rtn("remove_prefix", "stringpiece.h", 283, "length_ >= n");
          v26 = v72.__r_.__value_.__r.__words[0];
          v25 = (void *)(v72.__r_.__value_.__r.__words[0] + v18);
          v72.__r_.__value_.__r.__words[0] += v18;
          v72.__r_.__value_.__l.__size_ = v12 - v18;
          if (v26)
          {
            v12 -= v18;
            goto LABEL_40;
          }
        }
LABEL_46:
        memset(&__p, 0, sizeof(__p));
        goto LABEL_47;
      }
      v16 = 0;
      v17 = 1;
      while (1)
      {
        v18 = v17;
        v19 = v17 - 1;
        if (google::protobuf::StringPiece::operator[](&v72, v17 - 1) == 95)
        {
          v13 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
          goto LABEL_25;
        }
        v20 = google::protobuf::StringPiece::operator[](&v72, v19);
        v21 = v20 + 32;
        if ((v20 - 65) >= 0x1A)
          v21 = v20;
        v13 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
        v22 = &v80;
        if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          v22 = (std::string *)v80.__r_.__value_.__r.__words[0];
        if (v22->__r_.__value_.__s.__data_[v16] != v21)
          break;
        ++v16;
LABEL_25:
        v12 = v72.__r_.__value_.__l.__size_;
        size = v80.__r_.__value_.__l.__size_;
        if (v18 < v72.__r_.__value_.__l.__size_)
        {
          v23 = (v13 & 0x80u) == 0 ? v13 : v80.__r_.__value_.__l.__size_;
          v17 = v18 + 1;
          if (v16 < v23)
            continue;
        }
        goto LABEL_32;
      }
      v25 = (void *)v72.__r_.__value_.__r.__words[0];
      if (!v72.__r_.__value_.__r.__words[0])
        goto LABEL_46;
      v12 = v72.__r_.__value_.__l.__size_;
LABEL_40:
      std::string::basic_string[abi:ne180100](&__p, v25, v12);
LABEL_47:
      memset(&v76, 0, sizeof(v76));
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v27 = __p.__r_.__value_.__l.__size_;
      std::string::reserve(&v76, v27);
      v28 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      v29 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
      v30 = __p.__r_.__value_.__l.__size_;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v31 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v31 = __p.__r_.__value_.__l.__size_;
      if (v31)
      {
        v32 = 0;
        v33 = 1;
        do
        {
          if (v29)
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          else
            p_p = &__p;
          v35 = p_p->__r_.__value_.__s.__data_[v32];
          v36 = v35 == 95;
          if (v35 != 95)
          {
            if ((v33 & 1) != 0)
              v37 = -97;
            else
              v37 = -65;
            if ((v33 & 1) != 0)
              v38 = -32;
            else
              v38 = 32;
            if ((v35 + v37) >= 0x1Au)
              v39 = 0;
            else
              v39 = v38;
            std::string::push_back(&v76, v35 + v39);
            v28 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            v30 = __p.__r_.__value_.__l.__size_;
          }
          ++v32;
          v29 = (v28 & 0x80u) != 0;
          if ((v28 & 0x80u) == 0)
            v40 = v28;
          else
            v40 = v30;
          v33 = v36;
        }
        while (v40 > v32);
      }
      if ((v28 & 0x80) != 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
        std::string::__init_copy_ctor_external(&__p, v76.__r_.__value_.__l.__data_, v76.__r_.__value_.__l.__size_);
      else
        __p = v76;
      v74 = &v10[5 * v9];
      v41 = std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::pair<std::string,google::protobuf::EnumValueDescriptor const*>>(&v77, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&__p);
      v43 = v42;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (!v43)
      {
        v44 = (_DWORD *)*((_QWORD *)v41 + 7);
        v45 = *(const void ***)v44;
        v46 = *v11;
        v47 = *(unsigned __int8 *)(*(_QWORD *)v44 + 23);
        v5 = *(const char **)(*(_QWORD *)v44 + 8);
        if ((v47 & 0x80u) == 0)
          v48 = *(unsigned __int8 *)(*(_QWORD *)v44 + 23);
        else
          v48 = *(_QWORD *)(*(_QWORD *)v44 + 8);
        v49 = *((unsigned __int8 *)v46 + 23);
        v50 = (char)v49;
        if ((v49 & 0x80u) != 0)
          v49 = v46[1];
        if (v48 == v49)
        {
          if (v50 >= 0)
            v51 = *v11;
          else
            v51 = (uint64_t *)*v46;
          if ((v47 & 0x80) != 0)
          {
            if (!memcmp(*v45, v51, (size_t)v5))
              goto LABEL_81;
          }
          else
          {
            if (!*(_BYTE *)(*(_QWORD *)v44 + 23))
              goto LABEL_81;
            while (*(unsigned __int8 *)v45 == *(unsigned __int8 *)v51)
            {
              v45 = (const void **)((char *)v45 + 1);
              v51 = (uint64_t *)((char *)v51 + 1);
              if (!--v47)
                goto LABEL_81;
            }
          }
        }
        if (v44[4] != LODWORD(v10[5 * v9 + 2]))
        {
          std::operator+<char>();
          v52 = std::string::append(&v70, " has the same name as ");
          v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
          v71.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v71.__r_.__value_.__l.__data_ = v53;
          v52->__r_.__value_.__l.__size_ = 0;
          v52->__r_.__value_.__r.__words[2] = 0;
          v52->__r_.__value_.__r.__words[0] = 0;
          v81 = &v76;
          v54 = std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(&v77, (const void **)&v76.__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, (__int128 **)&v81);
          v55 = *(_QWORD *)v54[7];
          v56 = *(char *)(v55 + 23);
          if (v56 >= 0)
            v57 = *(const std::string::value_type **)v54[7];
          else
            v57 = *(const std::string::value_type **)v55;
          if (v56 >= 0)
            v58 = *(unsigned __int8 *)(v55 + 23);
          else
            v58 = *(_QWORD *)(v55 + 8);
          v59 = std::string::append(&v71, v57, v58);
          v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
          v72.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v72.__r_.__value_.__l.__data_ = v60;
          v59->__r_.__value_.__l.__size_ = 0;
          v59->__r_.__value_.__r.__words[2] = 0;
          v59->__r_.__value_.__r.__words[0] = 0;
          v61 = std::string::append(&v72, " if you ignore case and strip out the enum name prefix (if any). This is error-prone and can lead to undefined behavior. Please avoid doing this. If you are using allow_alias, please assign the same numeric value to both enums.");
          v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v61->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v62;
          v61->__r_.__value_.__l.__size_ = 0;
          v61->__r_.__value_.__r.__words[2] = 0;
          v61->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v72.__r_.__value_.__l.__data_);
          if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v71.__r_.__value_.__l.__data_);
          if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v70.__r_.__value_.__l.__data_);
          v63 = (const std::string::value_type *)v10[5 * v9 + 1];
          if (*((_DWORD *)v69[2] + 15) == 2)
          {
            v64 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)v67, v9);
            google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, v63, v64, 0, (const std::string::value_type *)&__p);
          }
          else
          {
            v65 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)v67, v9);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v63, v65, 0, (const std::string::value_type *)&__p);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
LABEL_81:
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v76.__r_.__value_.__l.__data_);
      ++v9;
      v3 = v69;
      if (v9 >= *((int *)v69 + 11))
      {
        v66 = (char *)v78[0];
        goto LABEL_119;
      }
    }
  }
  v66 = 0;
LABEL_119:
  std::__tree<std::string>::destroy((uint64_t)&v77, v66);
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v80.__r_.__value_.__l.__data_);
}

void sub_1BF81DE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  uint64_t v46;

  if (a30 < 0)
    operator delete(__p);
  if (a23 < 0)
    operator delete(a18);
  if (a17 < 0)
    operator delete(a12);
  if (a46 < 0)
    operator delete(a41);
  std::__tree<std::string>::destroy(v46 - 168, *(char **)(v46 - 160));
  if (*(char *)(v46 - 105) < 0)
    operator delete(*(void **)(v46 - 128));
  _Unwind_Resume(a1);
}

BOOL std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;

  v2 = a1[23];
  if ((v2 & 0x80u) == 0)
    v3 = a1[23];
  else
    v3 = *((_QWORD *)a1 + 1);
  v4 = a2[23];
  v5 = (char)v4;
  if ((v4 & 0x80u) != 0)
    v4 = *((_QWORD *)a2 + 1);
  if (v3 != v4)
    return 1;
  if (v5 < 0)
    a2 = *(unsigned __int8 **)a2;
  if ((v2 & 0x80) != 0)
    return memcmp(*(const void **)a1, a2, *((_QWORD *)a1 + 1)) != 0;
  if (a1[23])
  {
    v6 = v2 - 1;
    do
    {
      v8 = *a1++;
      v7 = v8;
      v9 = *a2++;
      v10 = v7 == v9;
      v2 = v7 != v9;
      v10 = !v10 || v6-- == 0;
    }
    while (!v10);
  }
  return v2;
}

uint64_t google::protobuf::DescriptorBuilder::BuildEnumValue(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  std::string *EmptyString;
  std::string *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  std::string::size_type v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  const std::string::value_type *v17;
  std::string::size_type v18;
  google::protobuf::MessageLite *v19;
  std::string *v20;
  google::protobuf::MessageLite *v21;
  int v22;
  uint64_t v23;
  std::string::size_type size;
  std::string *v25;
  std::string::size_type v26;
  char v27;
  const std::string::value_type *v28;
  std::string *v29;
  __int128 v30;
  std::string *v31;
  std::string::size_type v32;
  std::string *v33;
  __int128 v34;
  std::string *v35;
  __int128 v36;
  int v37;
  const std::string::value_type *v38;
  std::string::size_type v39;
  std::string *v40;
  __int128 v41;
  std::string *v42;
  __int128 v43;
  uint64_t v44;
  int v45;
  std::string v47;
  std::string v48;
  std::string v49;
  std::string v50;
  std::string v51;
  std::string v52;
  std::string v53;
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)a4 = google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(a1 + 8), *(_QWORD *)(a2 + 24));
  *(_DWORD *)(a4 + 16) = *(_DWORD *)(a2 + 40);
  *(_QWORD *)(a4 + 24) = a3;
  EmptyString = (std::string *)google::protobuf::DescriptorPool::Tables::AllocateEmptyString(*(google::protobuf::DescriptorPool::Tables **)(a1 + 8));
  v9 = EmptyString;
  v10 = a3[1];
  if (*(char *)(v10 + 23) < 0)
    v11 = *(_QWORD *)(v10 + 8);
  else
    v11 = *(unsigned __int8 *)(v10 + 23);
  if (*(char *)(*a3 + 23) < 0)
    v12 = *(_QWORD *)(*a3 + 8);
  else
    v12 = *(unsigned __int8 *)(*a3 + 23);
  v13 = v11 - v12;
  if (*(char *)(*(_QWORD *)a4 + 23) < 0)
    v14 = *(_QWORD *)(*(_QWORD *)a4 + 8);
  else
    v14 = *(unsigned __int8 *)(*(_QWORD *)a4 + 23);
  std::string::reserve(EmptyString, v14 + v13);
  v15 = a3[1];
  if (*(char *)(v15 + 23) < 0)
    v15 = *(_QWORD *)v15;
  std::string::append(v9, (const std::string::value_type *)v15, v13);
  v16 = *(char *)(*(_QWORD *)a4 + 23);
  if (v16 >= 0)
    v17 = *(const std::string::value_type **)a4;
  else
    v17 = **(const std::string::value_type ***)a4;
  if (v16 >= 0)
    v18 = *(unsigned __int8 *)(*(_QWORD *)a4 + 23);
  else
    v18 = *(_QWORD *)(*(_QWORD *)a4 + 8);
  std::string::append(v9, v17, v18);
  *(_QWORD *)(a4 + 8) = v9;
  google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, *(uint64_t **)(a2 + 24), (const std::string::value_type *)v9, a2);
  if ((*(_DWORD *)(a2 + 16) & 2) != 0)
  {
    v19 = *(google::protobuf::MessageLite **)(a2 + 32);
    if (!v19)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v52, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 10112);
      v20 = google::protobuf::internal::LogMessage::operator<<(&v52, "CHECK failed: !value || options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v51, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v52.__r_.__value_.__l.__data_);
      v19 = *(google::protobuf::MessageLite **)(a2 + 32);
    }
    if (v19)
      v21 = v19;
    else
      v21 = (google::protobuf::MessageLite *)&google::protobuf::_EnumValueOptions_default_instance_;
    google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::EnumValueDescriptor>(a1, v21, a4, 3);
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
  }
  v22 = google::protobuf::DescriptorBuilder::AddSymbol(a1, *(const std::string **)(a4 + 8), (uint64_t *)a3[3], *(_QWORD *)a4, a2, (const char *)5, (const char *)a4);
  if (((google::protobuf::FileDescriptorTables::AddAliasUnderParent(*(_QWORD *)(a1 + 88), a3, *(_QWORD *)a4, 5, a4) ^ 1 | v22) & 1) == 0)
  {
    memset(&v52, 0, sizeof(v52));
    v23 = a3[3];
    if (!v23)
      v23 = *(_QWORD *)(a1 + 80);
    std::string::operator=(&v52, *(const std::string **)(v23 + 8));
    size = HIBYTE(v52.__r_.__value_.__r.__words[2]);
    if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = v52.__r_.__value_.__l.__size_;
    if (size)
    {
      std::operator+<char>();
      v25 = std::string::append(&v51, "\"");
      v26 = v25->__r_.__value_.__r.__words[0];
      v53.__r_.__value_.__r.__words[0] = v25->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v53.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v25->__r_.__value_.__r.__words[1] + 7);
      v27 = HIBYTE(v25->__r_.__value_.__r.__words[2]);
      v25->__r_.__value_.__l.__size_ = 0;
      v25->__r_.__value_.__r.__words[2] = 0;
      v25->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v52.__r_.__value_.__l.__data_);
      v52.__r_.__value_.__r.__words[0] = v26;
      v52.__r_.__value_.__l.__size_ = v53.__r_.__value_.__r.__words[0];
      *(std::string::size_type *)((char *)&v52.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v53.__r_.__value_.__r.__words + 7);
      *((_BYTE *)&v52.__r_.__value_.__s + 23) = v27;
      if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v51.__r_.__value_.__l.__data_);
    }
    else
    {
      MEMORY[0x1C3B8D53C](&v52, "the global scope");
    }
    v28 = *(const std::string::value_type **)(a4 + 8);
    std::operator+<char>();
    v29 = std::string::append(&v47, "\" must be unique within ");
    v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v30;
    v29->__r_.__value_.__l.__size_ = 0;
    v29->__r_.__value_.__r.__words[2] = 0;
    v29->__r_.__value_.__r.__words[0] = 0;
    if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v31 = &v52;
    else
      v31 = (std::string *)v52.__r_.__value_.__r.__words[0];
    if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v32 = HIBYTE(v52.__r_.__value_.__r.__words[2]);
    else
      v32 = v52.__r_.__value_.__l.__size_;
    v33 = std::string::append(&v48, (const std::string::value_type *)v31, v32);
    v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    v35 = std::string::append(&v49, ", not just within \"");
    v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    v37 = *(char *)(*a3 + 23);
    if (v37 >= 0)
      v38 = (const std::string::value_type *)*a3;
    else
      v38 = *(const std::string::value_type **)*a3;
    if (v37 >= 0)
      v39 = *(unsigned __int8 *)(*a3 + 23);
    else
      v39 = *(_QWORD *)(*a3 + 8);
    v40 = std::string::append(&v50, v38, v39);
    v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    v42 = std::string::append(&v53, "\".");
    v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v43;
    v42->__r_.__value_.__l.__size_ = 0;
    v42->__r_.__value_.__r.__words[2] = 0;
    v42->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, v28, a2, 0, (const std::string::value_type *)&v51);
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v51.__r_.__value_.__l.__data_);
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v53.__r_.__value_.__l.__data_);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v48.__r_.__value_.__l.__data_);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v47.__r_.__value_.__l.__data_);
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v52.__r_.__value_.__l.__data_);
  }
  v44 = *(_QWORD *)(a1 + 88);
  v51.__r_.__value_.__r.__words[0] = a4;
  v45 = *(_DWORD *)(a4 + 16);
  v52.__r_.__value_.__r.__words[0] = *(_QWORD *)(a4 + 24);
  LODWORD(v52.__r_.__value_.__r.__words[1]) = v45;
}

void sub_1BF81E488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  google::protobuf::internal::LogMessage::~LogMessage(&a44);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::EnumDescriptor>(uint64_t a1, google::protobuf::MessageLite *a2, uint64_t a3, int a4)
{
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  void *__p;
  char *v20;
  unint64_t v21;

  __p = 0;
  v20 = 0;
  v21 = 0;
  google::protobuf::EnumDescriptor::GetLocationPath(a3, (char **)&__p);
  v8 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v10 = (char *)__p;
    v11 = (v20 - (_BYTE *)__p) >> 2;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 62)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v13 = v21 - (_QWORD)__p;
    if ((uint64_t)(v21 - (_QWORD)__p) >> 1 > v12)
      v12 = v13 >> 1;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL)
      v14 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v21, v14);
      v10 = (char *)__p;
      v8 = v20;
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[4 * v11];
    v17 = &v15[4 * v14];
    *(_DWORD *)v16 = a4;
    v9 = v16 + 4;
    while (v8 != v10)
    {
      v18 = *((_DWORD *)v8 - 1);
      v8 -= 4;
      *((_DWORD *)v16 - 1) = v18;
      v16 -= 4;
    }
    __p = v16;
    v20 = v9;
    v21 = (unint64_t)v17;
    if (v10)
      operator delete(v10);
  }
  else
  {
    *(_DWORD *)v20 = a4;
    v9 = v8 + 4;
  }
  v20 = v9;
  google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumDescriptor>(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8), a2, a3, (uint64_t)&__p);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1BF81E6A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::EnumValueDescriptor>(uint64_t a1, google::protobuf::MessageLite *a2, uint64_t a3, int a4)
{
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  void *__p;
  char *v20;
  unint64_t v21;

  __p = 0;
  v20 = 0;
  v21 = 0;
  google::protobuf::EnumValueDescriptor::GetLocationPath(a3, (char **)&__p);
  v8 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v10 = (char *)__p;
    v11 = (v20 - (_BYTE *)__p) >> 2;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 62)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v13 = v21 - (_QWORD)__p;
    if ((uint64_t)(v21 - (_QWORD)__p) >> 1 > v12)
      v12 = v13 >> 1;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL)
      v14 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v21, v14);
      v10 = (char *)__p;
      v8 = v20;
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[4 * v11];
    v17 = &v15[4 * v14];
    *(_DWORD *)v16 = a4;
    v9 = v16 + 4;
    while (v8 != v10)
    {
      v18 = *((_DWORD *)v8 - 1);
      v8 -= 4;
      *((_DWORD *)v16 - 1) = v18;
      v16 -= 4;
    }
    __p = v16;
    v20 = v9;
    v21 = (unint64_t)v17;
    if (v10)
      operator delete(v10);
  }
  else
  {
    *(_DWORD *)v20 = a4;
    v9 = v8 + 4;
  }
  v20 = v9;
  google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumValueDescriptor>(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8), a2, a3, (uint64_t)&__p);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1BF81E7F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorBuilder::BuildMethod(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::string *String;
  std::string *NameString;
  google::protobuf::MessageLite *v10;
  std::string *v11;
  google::protobuf::MessageLite *v12;
  char v14;
  std::string v15[2];

  String = google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(a1 + 8), *(_QWORD *)(a2 + 24));
  *(_QWORD *)a4 = String;
  *(_QWORD *)(a4 + 16) = a3;
  NameString = google::protobuf::DescriptorBuilder::AllocateNameString(a1, *(uint64_t **)(a3 + 8), (uint64_t)String);
  *(_QWORD *)(a4 + 8) = NameString;
  google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, *(uint64_t **)(a2 + 24), (const std::string::value_type *)NameString, a2);
  *(_OWORD *)(a4 + 72) = 0u;
  *(_OWORD *)(a4 + 56) = 0u;
  *(_OWORD *)(a4 + 40) = 0u;
  *(_OWORD *)(a4 + 24) = 0u;
  if ((*(_DWORD *)(a2 + 16) & 8) != 0)
  {
    v10 = *(google::protobuf::MessageLite **)(a2 + 48);
    if (!v10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.pb.h", 10667);
      v11 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !value || options_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
      v10 = *(google::protobuf::MessageLite **)(a2 + 48);
    }
    if (v10)
      v12 = v10;
    else
      v12 = (google::protobuf::MessageLite *)&google::protobuf::_MethodOptions_default_instance_;
    google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::MethodDescriptor>(a1, v12, a4, 4);
  }
  else
  {
    *(_QWORD *)(a4 + 88) = 0;
  }
  *(_WORD *)(a4 + 96) = *(_WORD *)(a2 + 56);
  return google::protobuf::DescriptorBuilder::AddSymbol(a1, *(const std::string **)(a4 + 8), (uint64_t *)a3, *(_QWORD *)a4, a2, (const char *)7, (const char *)a4);
}

void sub_1BF81E930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::ServiceDescriptor>(uint64_t a1, google::protobuf::MessageLite *a2, uint64_t a3, int a4)
{
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  void *__p;
  char *v20;
  unint64_t v21;

  __p = 0;
  v20 = 0;
  v21 = 0;
  google::protobuf::ServiceDescriptor::GetLocationPath(a3, (char **)&__p);
  v8 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v10 = (char *)__p;
    v11 = (v20 - (_BYTE *)__p) >> 2;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 62)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v13 = v21 - (_QWORD)__p;
    if ((uint64_t)(v21 - (_QWORD)__p) >> 1 > v12)
      v12 = v13 >> 1;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL)
      v14 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v21, v14);
      v10 = (char *)__p;
      v8 = v20;
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[4 * v11];
    v17 = &v15[4 * v14];
    *(_DWORD *)v16 = a4;
    v9 = v16 + 4;
    while (v8 != v10)
    {
      v18 = *((_DWORD *)v8 - 1);
      v8 -= 4;
      *((_DWORD *)v16 - 1) = v18;
      v16 -= 4;
    }
    __p = v16;
    v20 = v9;
    v21 = (unint64_t)v17;
    if (v10)
      operator delete(v10);
  }
  else
  {
    *(_DWORD *)v20 = a4;
    v9 = v8 + 4;
  }
  v20 = v9;
  google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::ServiceDescriptor>(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8), a2, a3, (uint64_t)&__p);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1BF81EA7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions<google::protobuf::MethodDescriptor>(uint64_t a1, google::protobuf::MessageLite *a2, uint64_t a3, int a4)
{
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  int v18;
  void *__p;
  char *v20;
  unint64_t v21;

  __p = 0;
  v20 = 0;
  v21 = 0;
  google::protobuf::MethodDescriptor::GetLocationPath(a3, (char **)&__p);
  v8 = v20;
  if ((unint64_t)v20 >= v21)
  {
    v10 = (char *)__p;
    v11 = (v20 - (_BYTE *)__p) >> 2;
    v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 62)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v13 = v21 - (_QWORD)__p;
    if ((uint64_t)(v21 - (_QWORD)__p) >> 1 > v12)
      v12 = v13 >> 1;
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL)
      v14 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v14 = v12;
    if (v14)
    {
      v15 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v21, v14);
      v10 = (char *)__p;
      v8 = v20;
    }
    else
    {
      v15 = 0;
    }
    v16 = &v15[4 * v11];
    v17 = &v15[4 * v14];
    *(_DWORD *)v16 = a4;
    v9 = v16 + 4;
    while (v8 != v10)
    {
      v18 = *((_DWORD *)v8 - 1);
      v8 -= 4;
      *((_DWORD *)v16 - 1) = v18;
      v16 -= 4;
    }
    __p = v16;
    v20 = v9;
    v21 = (unint64_t)v17;
    if (v10)
      operator delete(v10);
  }
  else
  {
    *(_DWORD *)v20 = a4;
    v9 = v8 + 4;
  }
  v20 = v9;
  google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::MethodDescriptor>(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8), a2, a3, (uint64_t)&__p);
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1BF81EBCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkMessage(google::protobuf::DescriptorPool::Tables **this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  google::protobuf::Descriptor *v8;
  const google::protobuf::DescriptorProto *v9;
  uint64_t v10;
  uint64_t v11;
  google::protobuf::EnumDescriptor *v12;
  google::protobuf::EnumOptions *v13;
  uint64_t v14;
  uint64_t v15;
  google::protobuf::FieldDescriptor *v16;
  std::string **v17;
  uint64_t v18;
  uint64_t v19;
  google::protobuf::FieldDescriptor *v20;
  std::string **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  google::protobuf::ExtensionRangeOptions *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const void **v31;
  size_t v32;
  std::string *v33;
  const void *v34;
  uint64_t v35;
  int v36;
  const std::string::value_type *v37;
  std::string::size_type v38;
  std::string *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t **v42;
  int v43;
  uint64_t *v44;
  int v45;
  std::string::size_type v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  const void **v56;
  size_t v57;
  std::string *v58;
  const void *v59;
  int v60;
  const std::string::value_type *v61;
  std::string::size_type v62;
  std::string *v63;
  __int128 v64;
  uint64_t v65;
  google::protobuf::OneofOptions *Bytes;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  const google::protobuf::DescriptorProto *v75;
  char *v76;
  std::string __p;
  std::string v78;
  void *v79[2];
  std::string::size_type v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  int v96;
  std::string v97;
  __int128 v98;
  std::string::size_type v99;
  uint64_t v100;

  v100 = *MEMORY[0x1E0C80C00];
  if (!*((_QWORD *)a2 + 4))
    *((_QWORD *)a2 + 4) = google::protobuf::MessageOptions::default_instance((google::protobuf::MessageOptions *)this);
  if (*((int *)a2 + 28) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 7) + v6);
      v9 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v7);
      google::protobuf::DescriptorBuilder::CrossLinkMessage((google::protobuf::DescriptorBuilder *)this, v8, v9);
      ++v7;
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 28));
  }
  if (*((int *)a2 + 29) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = (google::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 8) + v10);
      v13 = (google::protobuf::EnumOptions *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a3 + 72, v11);
      google::protobuf::DescriptorBuilder::CrossLinkEnum(v13, v12, v13);
      ++v11;
      v10 += 80;
    }
    while (v11 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v14 = 0;
    v15 = 0;
    do
    {
      v16 = (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 5) + v14);
      v17 = (std::string **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, v15);
      google::protobuf::DescriptorBuilder::CrossLinkField((google::protobuf::DescriptorBuilder *)this, v16, v17);
      ++v15;
      v14 += 152;
    }
    while (v15 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 31) >= 1)
  {
    v18 = 0;
    v19 = 0;
    do
    {
      v20 = (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 10) + v18);
      v21 = (std::string **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v19);
      google::protobuf::DescriptorBuilder::CrossLinkField((google::protobuf::DescriptorBuilder *)this, v20, v21);
      ++v19;
      v18 += 152;
    }
    while (v19 < *((int *)a2 + 31));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    v22 = 0;
    v23 = 8;
    do
    {
      v24 = *((_QWORD *)a2 + 9);
      v25 = (google::protobuf::ExtensionRangeOptions *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)a3 + 96, v22);
      if (!*(_QWORD *)(v24 + v23))
        *(_QWORD *)(v24 + v23) = google::protobuf::ExtensionRangeOptions::default_instance(v25);
      ++v22;
      v23 += 16;
    }
    while (v22 < *((int *)a2 + 30));
  }
  v26 = *((_DWORD *)a2 + 26);
  v75 = a3;
  if (v26 >= 1)
  {
    v27 = 0;
    v28 = 0;
    v76 = (char *)a3 + 24;
    do
    {
      v29 = *((_QWORD *)a2 + 5);
      v30 = *(_QWORD *)(v29 + v27 + 88);
      if (v30)
      {
        if (*(int *)(v30 + 24) >= 1 && *(_QWORD *)(v29 + v27 - 64) != v30)
        {
          v31 = (const void **)*((_QWORD *)a2 + 1);
          if (*((char *)v31 + 23) >= 0)
            v32 = *((unsigned __int8 *)v31 + 23);
          else
            v32 = (size_t)v31[1];
          std::string::basic_string[abi:ne180100]((uint64_t)&v78, v32 + 1);
          if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v33 = &v78;
          else
            v33 = (std::string *)v78.__r_.__value_.__r.__words[0];
          if (v32)
          {
            if (*((char *)v31 + 23) >= 0)
              v34 = v31;
            else
              v34 = *v31;
            memmove(v33, v34, v32);
          }
          *(_WORD *)((char *)&v33->__r_.__value_.__l.__data_ + v32) = 46;
          v35 = *(_QWORD *)(*((_QWORD *)a2 + 5) + v27 - 152);
          v36 = *(char *)(v35 + 23);
          if (v36 >= 0)
            v37 = *(const std::string::value_type **)(*((_QWORD *)a2 + 5) + v27 - 152);
          else
            v37 = *(const std::string::value_type **)v35;
          if (v36 >= 0)
            v38 = *(unsigned __int8 *)(v35 + 23);
          else
            v38 = *(_QWORD *)(v35 + 8);
          v39 = std::string::append(&v78, v37, v38);
          v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
          v80 = v39->__r_.__value_.__r.__words[2];
          *(_OWORD *)v79 = v40;
          v39->__r_.__value_.__l.__size_ = 0;
          v39->__r_.__value_.__r.__words[2] = 0;
          v39->__r_.__value_.__r.__words[0] = 0;
          v41 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)v76, (int)v28 - 1);
          v42 = *(uint64_t ***)(*((_QWORD *)a2 + 5) + v27 - 152);
          v43 = *((char *)v42 + 23);
          v44 = v42[1];
          if (v43 < 0)
            v42 = (uint64_t **)*v42;
          *(_QWORD *)&v98 = v42;
          v45 = v43;
          if (v43 < 0)
            v45 = (int)v44;
          DWORD2(v98) = v45;
          v46 = *(_QWORD *)v30;
          v47 = *(char *)(*(_QWORD *)v30 + 23);
          v48 = *(_QWORD *)(*(_QWORD *)v30 + 8);
          if (v47 < 0)
            v46 = **(_QWORD **)v30;
          v97.__r_.__value_.__r.__words[0] = v46;
          v49 = v47;
          if (v47 < 0)
            v49 = v48;
          LODWORD(v97.__r_.__value_.__r.__words[1]) = v49;
          v95 = 0;
          v96 = -1;
          v93 = 0;
          v94 = -1;
          v91 = 0;
          v92 = -1;
          v89 = 0;
          v90 = -1;
          v87 = 0;
          v88 = -1;
          v85 = 0;
          v86 = -1;
          v83 = 0;
          v84 = -1;
          v81 = 0;
          v82 = -1;
          *((_QWORD *)&v74 + 1) = &v83;
          *(_QWORD *)&v74 = &v85;
          google::protobuf::strings::Substitute("Fields in the same oneof must be defined consecutively. \"$0\" cannot be defined before the completion of the \"$1\" oneof definition.", (uint64_t)&v98, (uint64_t)&v97, (uint64_t)&v95, (uint64_t)&v93, (uint64_t)&v91, (uint64_t)&v89, (uint64_t)&v87, &__p, v74, (uint64_t)&v81);
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (const std::string::value_type *)v79, v41, 2, (const std::string::value_type *)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          if (SHIBYTE(v80) < 0)
            operator delete(v79[0]);
          if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v78.__r_.__value_.__l.__data_);
          v26 = *((_DWORD *)a2 + 26);
        }
        v50 = *((_QWORD *)a2 + 6)
            + 48 * (int)(-1431655765 * ((unint64_t)(v30 - *(_QWORD *)(*(_QWORD *)(v30 + 16) + 48)) >> 4));
        ++*(_DWORD *)(v50 + 24);
      }
      ++v28;
      v27 += 152;
    }
    while (v28 < v26);
  }
  if (*((int *)a2 + 27) >= 1)
  {
    v51 = 0;
    v52 = 0;
    do
    {
      v53 = *((_QWORD *)a2 + 6);
      v54 = v53 + v51;
      v55 = *(_DWORD *)(v53 + v51 + 24);
      if (!v55)
      {
        v56 = (const void **)*((_QWORD *)a2 + 1);
        if (*((char *)v56 + 23) >= 0)
          v57 = *((unsigned __int8 *)v56 + 23);
        else
          v57 = (size_t)v56[1];
        std::string::basic_string[abi:ne180100]((uint64_t)&v97, v57 + 1);
        if ((v97.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v58 = &v97;
        else
          v58 = (std::string *)v97.__r_.__value_.__r.__words[0];
        if (v57)
        {
          if (*((char *)v56 + 23) >= 0)
            v59 = v56;
          else
            v59 = *v56;
          memmove(v58, v59, v57);
        }
        *(_WORD *)((char *)&v58->__r_.__value_.__l.__data_ + v57) = 46;
        v60 = *(char *)(*(_QWORD *)v54 + 23);
        if (v60 >= 0)
          v61 = *(const std::string::value_type **)v54;
        else
          v61 = **(const std::string::value_type ***)v54;
        if (v60 >= 0)
          v62 = *(unsigned __int8 *)(*(_QWORD *)v54 + 23);
        else
          v62 = *(_QWORD *)(*(_QWORD *)v54 + 8);
        v63 = std::string::append(&v97, v61, v62);
        v64 = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
        v99 = v63->__r_.__value_.__r.__words[2];
        v98 = v64;
        v63->__r_.__value_.__l.__size_ = 0;
        v63->__r_.__value_.__r.__words[2] = 0;
        v63->__r_.__value_.__r.__words[0] = 0;
        v65 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::OneofDescriptorProto>::TypeHandler>((uint64_t)v75 + 144, v52);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, (const std::string::value_type *)&v98, v65, 0, "Oneof must have at least one field.");
        if (SHIBYTE(v99) < 0)
          operator delete((void *)v98);
        if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v97.__r_.__value_.__l.__data_);
        v55 = *(_DWORD *)(v54 + 24);
      }
      Bytes = (google::protobuf::OneofOptions *)google::protobuf::DescriptorPool::Tables::AllocateBytes(this[1], 8 * v55);
      *(_QWORD *)(v53 + v51 + 32) = Bytes;
      *(_DWORD *)(v54 + 24) = 0;
      if (!*(_QWORD *)(v53 + v51 + 40))
        *(_QWORD *)(v53 + v51 + 40) = google::protobuf::OneofOptions::default_instance(Bytes);
      ++v52;
      v51 += 48;
    }
    while (v52 < *((int *)a2 + 27));
    v26 = *((_DWORD *)a2 + 26);
  }
  if (v26 >= 1)
  {
    v67 = 0;
    v68 = 152 * v26;
    do
    {
      v69 = *((_QWORD *)a2 + 5) + v67;
      v70 = *(_QWORD *)(v69 + 88);
      if (v70)
      {
        v71 = *((_QWORD *)a2 + 6)
            + 48 * (int)(-1431655765 * ((unint64_t)(v70 - *(_QWORD *)(*(_QWORD *)(v70 + 16) + 48)) >> 4));
        v72 = *(int *)(v71 + 24);
        *(_DWORD *)(v69 + 72) = v72;
        v73 = *(_QWORD *)(v71 + 32);
        *(_DWORD *)(v71 + 24) = v72 + 1;
        *(_QWORD *)(v73 + 8 * v72) = v69;
      }
      v67 += 152;
    }
    while (v68 != v67);
  }
}

void sub_1BF81F234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a20 < 0)
    operator delete(__p);
  if (a32 < 0)
    operator delete(a27);
  if (a26 < 0)
    operator delete(a21);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkField(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, std::string **a3)
{
  unsigned int v6;
  unint64_t *v7;
  unint64_t v8;
  int v9;
  unint64_t *v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  std::string::size_type v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  _BOOL4 v23;
  int8x8_t *v24;
  uint64_t v25;
  int8x8_t v26;
  int v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  google::protobuf *v31;
  uint64_t v32;
  _DWORD *v33;
  const std::string::value_type *v34;
  std::string::size_type v35;
  int v36;
  uint64_t v37;
  int v38;
  const std::string::value_type *v39;
  std::string *v40;
  __int128 v41;
  std::string *v42;
  int v43;
  int Symbol;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t **v49;
  uint64_t *i;
  unint64_t v51;
  std::string::size_type *v53;
  __int128 *v54;
  __int128 v55;
  std::string *v56;
  __int128 v57;
  unint64_t *v58;
  unint64_t v59;
  int v60;
  unint64_t *v61;
  unint64_t v62;
  const std::string::value_type *v63;
  std::string *v64;
  __int128 v65;
  const std::string::value_type *v66;
  std::string *v67;
  __int128 v68;
  uint64_t v69;
  __int128 *v70;
  __int128 v71;
  const std::string::value_type *v72;
  std::string *v73;
  __int128 v74;
  void *v75;
  int v76;
  std::string *p_p;
  std::string::size_type v78;
  int v79;
  uint64_t v80;
  int v81;
  std::string::size_type v82;
  int v83;
  uint64_t v84;
  int v85;
  const std::string::value_type *v86;
  int v87;
  std::string *v88;
  std::string::size_type v89;
  int v90;
  uint64_t v91;
  int v92;
  int v93;
  std::string *v94;
  std::string::size_type v95;
  int v96;
  uint64_t v97;
  int v98;
  std::string *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  const std::string::value_type *v104;
  std::string *v105;
  __int128 v106;
  std::string *v107;
  int v108;
  const std::string::value_type *v109;
  std::string::size_type size;
  std::string *v111;
  __int128 v112;
  std::string *v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  std::string v119;
  std::string __p;
  uint64_t v121;
  int v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  int v132;
  std::string v133;
  std::string v134;
  std::string v135;
  std::string v136;
  uint64_t v137;

  v137 = *MEMORY[0x1E0C80C00];
  if (!*((_QWORD *)a2 + 15))
    *((_QWORD *)a2 + 15) = google::protobuf::FieldOptions::default_instance(this);
  google::protobuf::FileDescriptorTables::AddFieldByStylizedNames(*((google::protobuf::FileDescriptorTables **)this + 11), a2);
  if (((_BYTE)a3[2] & 2) != 0)
  {
    v18 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, a3[4], *((_QWORD *)a2 + 1), 2, 0, 1);
    if (v18 != 1)
    {
      if (!v18)
      {
        google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 3, (uint64_t)a3[4]);
        return;
      }
      v39 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      std::operator+<char>();
      v40 = std::string::append(&v135, "\" is not a message type.");
      v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
      v136.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v41;
      v40->__r_.__value_.__l.__size_ = 0;
      v40->__r_.__value_.__r.__words[2] = 0;
      v40->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v39, (uint64_t)a3, 3, (const std::string::value_type *)&v136);
      goto LABEL_114;
    }
    *((_QWORD *)a2 + 10) = v19;
    v31 = (google::protobuf *)*((unsigned int *)a2 + 17);
    v32 = *(unsigned int *)(v19 + 120);
    if ((int)v32 < 1)
    {
LABEL_39:
      v34 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      v35 = *(_QWORD *)(v19 + 8);
      v36 = *(char *)(v35 + 23);
      v37 = *(_QWORD *)(v35 + 8);
      if (v36 < 0)
        v35 = *(_QWORD *)v35;
      v136.__r_.__value_.__r.__words[0] = v35;
      v38 = v36;
      if (v36 < 0)
        v38 = v37;
      LODWORD(v136.__r_.__value_.__r.__words[1]) = v38;
      v135.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer(v31, &v135.__r_.__value_.__s.__data_[12], v20);
      LODWORD(v135.__r_.__value_.__r.__words[1]) = strlen(v135.__r_.__value_.__l.__data_);
      v134.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v134.__r_.__value_.__r.__words[1]) = -1;
      v133.__r_.__value_.__r.__words[0] = 0;
      LODWORD(v133.__r_.__value_.__r.__words[1]) = -1;
      v131 = 0;
      v132 = -1;
      v129 = 0;
      v130 = -1;
      v127 = 0;
      v128 = -1;
      v125 = 0;
      v126 = -1;
      v123 = 0;
      v124 = -1;
      v121 = 0;
      v122 = -1;
      *(_QWORD *)&v115 = &v125;
      *((_QWORD *)&v115 + 1) = &v123;
      google::protobuf::strings::Substitute("\"$0\" does not declare $1 as an extension number.", (uint64_t)&v136, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v133, (uint64_t)&v131, (uint64_t)&v129, (uint64_t)&v127, &__p, v115, (uint64_t)&v121);
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v34, (uint64_t)a3, 1, (const std::string::value_type *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
    }
    else
    {
      v33 = (_DWORD *)(*(_QWORD *)(v19 + 72) + 4);
      while (*(v33 - 1) > (int)v31 || *v33 <= (int)v31)
      {
        v33 += 4;
        if (!--v32)
          goto LABEL_39;
      }
    }
  }
  if (*((_QWORD *)a2 + 11) && *((_DWORD *)a2 + 15) != 1)
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 0, "Fields of oneofs must themselves have label LABEL_OPTIONAL.");
  v6 = *((_DWORD *)a3 + 4);
  if ((v6 & 4) == 0)
  {
    v7 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v7)
    {
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v133.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      v8 = atomic_load(v7);
      if (v8 != -1)
      {
        v136.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
        v136.__r_.__value_.__l.__size_ = (std::string::size_type)&v133;
        v135.__r_.__value_.__r.__words[0] = (std::string::size_type)&v136;
        std::__call_once(v7, &v135, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v9 = *((_DWORD *)a2 + 14);
    if ((v9 & 0xFFFFFFFE) == 0xA)
      goto LABEL_17;
    v10 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v10)
    {
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v133.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      v11 = atomic_load(v10);
      if (v11 != -1)
      {
        v136.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
        v136.__r_.__value_.__l.__size_ = (std::string::size_type)&v133;
        v135.__r_.__value_.__r.__words[0] = (std::string::size_type)&v136;
        std::__call_once(v10, &v135, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      v9 = *((_DWORD *)a2 + 14);
    }
    if (v9 == 14)
LABEL_17:
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Field with message or enum type missing type_name.");
    goto LABEL_18;
  }
  v21 = (v6 >> 3) & 1;
  if (*((_DWORD *)a3 + 21) == 14)
    v22 = 1;
  else
    v22 = v21;
  if (*(_BYTE *)(*(_QWORD *)this + 43))
  {
    v23 = 0;
  }
  else
  {
    v42 = (std::string *)&google::protobuf::_FieldOptions_default_instance_;
    if (a3[8])
      v42 = a3[8];
    v23 = v42[3].__r_.__value_.__s.__data_[7] != 0;
  }
  if (*(_BYTE *)(*(_QWORD *)this + 41))
    v43 = v23;
  else
    v43 = 1;
  Symbol = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, a3[5], *((_QWORD *)a2 + 1), v22, 1, v43);
  v46 = v45;
  if (Symbol)
  {
LABEL_53:
    if ((*((_BYTE *)a3 + 17) & 2) == 0)
    {
      if (Symbol == 1)
      {
        v47 = 11;
      }
      else
      {
        if (Symbol != 4)
        {
          v66 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
          std::operator+<char>();
          v67 = std::string::append(&v135, "\" is not a type.");
          v68 = *(_OWORD *)&v67->__r_.__value_.__l.__data_;
          v136.__r_.__value_.__r.__words[2] = v67->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v68;
          v67->__r_.__value_.__l.__size_ = 0;
          v67->__r_.__value_.__r.__words[2] = 0;
          v67->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v66, (uint64_t)a3, 2, (const std::string::value_type *)&v136);
          goto LABEL_114;
        }
        v47 = 14;
      }
      *((_DWORD *)a2 + 14) = v47;
    }
    v58 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v58)
    {
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v133.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      v59 = atomic_load(v58);
      if (v59 != -1)
      {
        v136.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
        v136.__r_.__value_.__l.__size_ = (std::string::size_type)&v133;
        v135.__r_.__value_.__r.__words[0] = (std::string::size_type)&v136;
        std::__call_once(v58, &v135, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v60 = *((_DWORD *)a2 + 14);
    if ((v60 & 0xFFFFFFFE) == 0xA)
    {
      if (Symbol == 1)
      {
        *((_QWORD *)a2 + 13) = v46;
        if (*((_BYTE *)a2 + 64))
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 4, "Messages can't have default values.");
        goto LABEL_18;
      }
      v63 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      std::operator+<char>();
      v64 = std::string::append(&v135, "\" is not a message type.");
      v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
      v136.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v65;
      v64->__r_.__value_.__l.__size_ = 0;
      v64->__r_.__value_.__r.__words[2] = 0;
      v64->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v63, (uint64_t)a3, 2, (const std::string::value_type *)&v136);
LABEL_114:
      if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v136.__r_.__value_.__l.__data_);
      if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0)
      {
        v75 = (void *)v135.__r_.__value_.__r.__words[0];
        goto LABEL_164;
      }
      return;
    }
    v61 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v61)
    {
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v133.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      v62 = atomic_load(v61);
      if (v62 != -1)
      {
        v136.__r_.__value_.__r.__words[0] = (std::string::size_type)&v134;
        v136.__r_.__value_.__l.__size_ = (std::string::size_type)&v133;
        v135.__r_.__value_.__r.__words[0] = (std::string::size_type)&v136;
        std::__call_once(v61, &v135, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
      v60 = *((_DWORD *)a2 + 14);
    }
    if (v60 != 14)
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Field with primitive type has type_name.");
      goto LABEL_18;
    }
    if (Symbol != 4)
    {
      v72 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      std::operator+<char>();
      v73 = std::string::append(&v135, "\" is not an enum type.");
      v74 = *(_OWORD *)&v73->__r_.__value_.__l.__data_;
      v136.__r_.__value_.__r.__words[2] = v73->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v74;
      v73->__r_.__value_.__l.__size_ = 0;
      v73->__r_.__value_.__r.__words[2] = 0;
      v73->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v72, (uint64_t)a3, 2, (const std::string::value_type *)&v136);
      goto LABEL_114;
    }
    *((_QWORD *)a2 + 14) = v46;
    if (*(_BYTE *)(google::protobuf::FieldDescriptor::enum_type(a2) + 40))
    {
      *((_BYTE *)a2 + 64) = 0;
    }
    else if (*((_BYTE *)a2 + 64))
    {
      if (google::protobuf::io::Tokenizer::IsIdentifier((uint64_t)a3[6]))
      {
        v99 = a3[6];
        v100 = google::protobuf::FieldDescriptor::enum_type(a2);
        if (google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, v99, *(_QWORD *)(v100 + 8), 0, 1) == 5&& (v102 = v101, v103 = *(_QWORD *)(v101 + 24), v103 == google::protobuf::FieldDescriptor::enum_type(a2)))
        {
          *((_QWORD *)a2 + 18) = v102;
        }
        else
        {
          v104 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
          google::protobuf::FieldDescriptor::enum_type(a2);
          std::operator+<char>();
          v105 = std::string::append(&v133, "\" has no value named \"");
          v106 = *(_OWORD *)&v105->__r_.__value_.__l.__data_;
          v134.__r_.__value_.__r.__words[2] = v105->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v134.__r_.__value_.__l.__data_ = v106;
          v105->__r_.__value_.__l.__size_ = 0;
          v105->__r_.__value_.__r.__words[2] = 0;
          v105->__r_.__value_.__r.__words[0] = 0;
          v107 = a3[6];
          v108 = SHIBYTE(v107->__r_.__value_.__r.__words[2]);
          if (v108 >= 0)
            v109 = (const std::string::value_type *)a3[6];
          else
            v109 = (const std::string::value_type *)v107->__r_.__value_.__r.__words[0];
          if (v108 >= 0)
            size = HIBYTE(v107->__r_.__value_.__r.__words[2]);
          else
            size = v107->__r_.__value_.__l.__size_;
          v111 = std::string::append(&v134, v109, size);
          v112 = *(_OWORD *)&v111->__r_.__value_.__l.__data_;
          v135.__r_.__value_.__r.__words[2] = v111->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v135.__r_.__value_.__l.__data_ = v112;
          v111->__r_.__value_.__l.__size_ = 0;
          v111->__r_.__value_.__r.__words[2] = 0;
          v111->__r_.__value_.__r.__words[0] = 0;
          v113 = std::string::append(&v135, "\".");
          v114 = *(_OWORD *)&v113->__r_.__value_.__l.__data_;
          v136.__r_.__value_.__r.__words[2] = v113->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v114;
          v113->__r_.__value_.__l.__size_ = 0;
          v113->__r_.__value_.__r.__words[2] = 0;
          v113->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v104, (uint64_t)a3, 4, (const std::string::value_type *)&v136);
          if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v136.__r_.__value_.__l.__data_);
          if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v135.__r_.__value_.__l.__data_);
          if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v134.__r_.__value_.__l.__data_);
          if (SHIBYTE(v133.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v133.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 4, "Default value for an enum field must be an identifier.");
      }
LABEL_18:
      if ((google::protobuf::FileDescriptorTables::AddFieldByNumber(*((google::protobuf::FileDescriptorTables **)this + 11), a2) & 1) != 0)
      {
        if (*((_BYTE *)a2 + 66)
          && (google::protobuf::DescriptorPool::Tables::AddExtension(*((uint64_t ***)this + 1), a2) & 1) == 0)
        {
          v13 = *((_QWORD *)this + 1);
          v14 = *((unsigned int *)a2 + 17);
          v136.__r_.__value_.__r.__words[0] = *((_QWORD *)a2 + 10);
          v136.__r_.__value_.__l.__size_ = v14;
          v15 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>(v13 + 344, (unint64_t *)&v136);
          if ((uint64_t *)(v13 + 352) == v15)
            v17 = 0;
          else
            v17 = v15[6];
          v69 = *((_QWORD *)a2 + 10);
          if (v69)
          {
            v70 = *(__int128 **)(v69 + 8);
            if (*((char *)v70 + 23) < 0)
            {
              std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v70, *((_QWORD *)v70 + 1));
            }
            else
            {
              v71 = *v70;
              __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v70 + 2);
              *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v71;
            }
          }
          else
          {
            std::string::basic_string[abi:ne180100]<0>(&__p, "unknown");
          }
          v136.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)a2 + 17), &v136.__r_.__value_.__s.__data_[12], v16);
          LODWORD(v136.__r_.__value_.__r.__words[1]) = strlen(v136.__r_.__value_.__l.__data_);
          v76 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          v135.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            v76 = __p.__r_.__value_.__r.__words[1];
          LODWORD(v135.__r_.__value_.__r.__words[1]) = v76;
          v78 = *(_QWORD *)(v17 + 8);
          v79 = *(char *)(v78 + 23);
          v80 = *(_QWORD *)(v78 + 8);
          if (v79 < 0)
            v78 = *(_QWORD *)v78;
          v134.__r_.__value_.__r.__words[0] = v78;
          v81 = v79;
          if (v79 < 0)
            v81 = v80;
          LODWORD(v134.__r_.__value_.__r.__words[1]) = v81;
          v82 = **(_QWORD **)(v17 + 40);
          v83 = *(char *)(v82 + 23);
          v84 = *(_QWORD *)(v82 + 8);
          if (v83 < 0)
            v82 = *(_QWORD *)v82;
          v133.__r_.__value_.__r.__words[0] = v82;
          v85 = v83;
          if (v83 < 0)
            v85 = v84;
          LODWORD(v133.__r_.__value_.__r.__words[1]) = v85;
          v131 = 0;
          v132 = -1;
          v129 = 0;
          v130 = -1;
          v127 = 0;
          v128 = -1;
          v125 = 0;
          v126 = -1;
          v123 = 0;
          v124 = -1;
          v121 = 0;
          v122 = -1;
          *(_QWORD *)&v116 = &v125;
          *((_QWORD *)&v116 + 1) = &v123;
          google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\" defined in $3.", (uint64_t)&v136, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v133, (uint64_t)&v131, (uint64_t)&v129, (uint64_t)&v127, &v119, v116, (uint64_t)&v121);
          google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 1, (const std::string::value_type *)&v119);
          goto LABEL_160;
        }
        return;
      }
      v24 = (int8x8_t *)*((_QWORD *)this + 11);
      v25 = *((_QWORD *)a2 + 10);
      v26 = v24[20];
      if (v26)
      {
        v27 = *((_DWORD *)a2 + 17);
        v28 = (16777619 * v27) ^ (16777499 * v25);
        v29 = (uint8x8_t)vcnt_s8(v26);
        v29.i16[0] = vaddlv_u8(v29);
        if (v29.u32[0] > 1uLL)
        {
          v30 = (16777619 * v27) ^ (16777499 * v25);
          if (v28 >= *(_QWORD *)&v26)
            v30 = v28 % *(_QWORD *)&v26;
        }
        else
        {
          v30 = v28 & (*(_QWORD *)&v26 - 1);
        }
        v49 = *(uint64_t ***)(*(_QWORD *)&v24[19] + 8 * v30);
        if (v49)
        {
          for (i = *v49; i; i = (uint64_t *)*i)
          {
            v51 = i[1];
            if (v28 == v51)
            {
              if (i[2] == v25 && *((_DWORD *)i + 6) == v27)
              {
                v53 = (std::string::size_type *)i[4];
                if (!v25)
                {
LABEL_140:
                  std::string::basic_string[abi:ne180100]<0>(&__p, "unknown");
LABEL_141:
                  v86 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
                  if (*((_BYTE *)a2 + 66))
                  {
                    v136.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)a2 + 17), &v136.__r_.__value_.__s.__data_[12], v12);
                    LODWORD(v136.__r_.__value_.__r.__words[1]) = strlen(v136.__r_.__value_.__l.__data_);
                    v87 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                    v88 = &__p;
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                      v88 = (std::string *)__p.__r_.__value_.__r.__words[0];
                    v135.__r_.__value_.__r.__words[0] = (std::string::size_type)v88;
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                      v87 = __p.__r_.__value_.__r.__words[1];
                    LODWORD(v135.__r_.__value_.__r.__words[1]) = v87;
                    v89 = v53[1];
                    v90 = *(char *)(v89 + 23);
                    v91 = *(_QWORD *)(v89 + 8);
                    if (v90 < 0)
                      v89 = *(_QWORD *)v89;
                    v134.__r_.__value_.__r.__words[0] = v89;
                    v92 = v90;
                    if (v90 < 0)
                      v92 = v91;
                    LODWORD(v134.__r_.__value_.__r.__words[1]) = v92;
                    v133.__r_.__value_.__r.__words[0] = 0;
                    LODWORD(v133.__r_.__value_.__r.__words[1]) = -1;
                    v131 = 0;
                    v132 = -1;
                    v129 = 0;
                    v130 = -1;
                    v127 = 0;
                    v128 = -1;
                    v125 = 0;
                    v126 = -1;
                    v123 = 0;
                    v124 = -1;
                    v121 = 0;
                    v122 = -1;
                    *(_QWORD *)&v117 = &v125;
                    *((_QWORD *)&v117 + 1) = &v123;
                    google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\".", (uint64_t)&v136, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v133, (uint64_t)&v131, (uint64_t)&v129, (uint64_t)&v127, &v119, v117, (uint64_t)&v121);
                    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v86, (uint64_t)a3, 1, (const std::string::value_type *)&v119);
                  }
                  else
                  {
                    v136.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)a2 + 17), &v136.__r_.__value_.__s.__data_[12], v12);
                    LODWORD(v136.__r_.__value_.__r.__words[1]) = strlen(v136.__r_.__value_.__l.__data_);
                    v93 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                    v94 = &__p;
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                      v94 = (std::string *)__p.__r_.__value_.__r.__words[0];
                    v135.__r_.__value_.__r.__words[0] = (std::string::size_type)v94;
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
                      v93 = __p.__r_.__value_.__r.__words[1];
                    LODWORD(v135.__r_.__value_.__r.__words[1]) = v93;
                    v95 = *v53;
                    v96 = *(char *)(*v53 + 23);
                    v97 = *(_QWORD *)(*v53 + 8);
                    if (v96 < 0)
                      v95 = *(_QWORD *)*v53;
                    v134.__r_.__value_.__r.__words[0] = v95;
                    v98 = v96;
                    if (v96 < 0)
                      v98 = v97;
                    LODWORD(v134.__r_.__value_.__r.__words[1]) = v98;
                    v133.__r_.__value_.__r.__words[0] = 0;
                    LODWORD(v133.__r_.__value_.__r.__words[1]) = -1;
                    v131 = 0;
                    v132 = -1;
                    v129 = 0;
                    v130 = -1;
                    v127 = 0;
                    v128 = -1;
                    v125 = 0;
                    v126 = -1;
                    v123 = 0;
                    v124 = -1;
                    v121 = 0;
                    v122 = -1;
                    *(_QWORD *)&v118 = &v125;
                    *((_QWORD *)&v118 + 1) = &v123;
                    google::protobuf::strings::Substitute("Field number $0 has already been used in \"$1\" by field \"$2\".", (uint64_t)&v136, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v133, (uint64_t)&v131, (uint64_t)&v129, (uint64_t)&v127, &v119, v118, (uint64_t)&v121);
                    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v86, (uint64_t)a3, 1, (const std::string::value_type *)&v119);
                  }
LABEL_160:
                  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v119.__r_.__value_.__l.__data_);
                  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                  {
                    v75 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_164:
                    operator delete(v75);
                  }
                  return;
                }
LABEL_81:
                v54 = *(__int128 **)(v25 + 8);
                if (*((char *)v54 + 23) < 0)
                {
                  std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v54, *((_QWORD *)v54 + 1));
                }
                else
                {
                  v55 = *v54;
                  __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v54 + 2);
                  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v55;
                }
                goto LABEL_141;
              }
            }
            else
            {
              if (v29.u32[0] > 1uLL)
              {
                if (v51 >= *(_QWORD *)&v26)
                  v51 %= *(_QWORD *)&v26;
              }
              else
              {
                v51 &= *(_QWORD *)&v26 - 1;
              }
              if (v51 != v30)
                break;
            }
          }
        }
      }
      v53 = 0;
      if (!v25)
        goto LABEL_140;
      goto LABEL_81;
    }
    if (*(int *)(google::protobuf::FieldDescriptor::enum_type(a2) + 44) >= 1)
      *((_QWORD *)a2 + 18) = *(_QWORD *)(google::protobuf::FieldDescriptor::enum_type(a2) + 48);
    goto LABEL_18;
  }
  if ((v43 & 1) != 0)
  {
    if (v23)
    {
      std::string::basic_string[abi:ne180100]<0>(&v136, "google.protobuf.Empty");
      Symbol = google::protobuf::DescriptorBuilder::FindSymbol((uint64_t)this, &v136, 1);
      v46 = v48;
      if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v136.__r_.__value_.__l.__data_);
    }
    if (!Symbol)
    {
      google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, (uint64_t)a3[5]);
      return;
    }
    goto LABEL_53;
  }
  v56 = a3[5];
  if (SHIBYTE(v56->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v136, v56->__r_.__value_.__l.__data_, v56->__r_.__value_.__l.__size_);
  }
  else
  {
    v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
    v136.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v57;
  }
  *((_QWORD *)a2 + 6) = google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(*((google::protobuf::DescriptorPool::Tables **)this
                                                                                      + 1));
  *((_QWORD *)a2 + 16) = google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), (uint64_t)&v136);
  if (((_BYTE)a3[2] & 8) != 0)
    *((_QWORD *)a2 + 17) = google::protobuf::DescriptorPool::Tables::AllocateString(*((uint64_t **)this + 1), (uint64_t)a3[6]);
  google::protobuf::FileDescriptorTables::AddFieldByNumber(*((google::protobuf::FileDescriptorTables **)this + 11), a2);
  if (*((_BYTE *)a2 + 66))
    google::protobuf::DescriptorPool::Tables::AddExtension(*((uint64_t ***)this + 1), a2);
  if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
  {
    v75 = (void *)v136.__r_.__value_.__r.__words[0];
    goto LABEL_164;
  }
}

void sub_1BF8200E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  uint64_t v60;

  if (*(char *)(v60 - 121) < 0)
    operator delete(*(void **)(v60 - 144));
  if (*(char *)(v60 - 169) < 0)
    operator delete(*(void **)(v60 - 192));
  if (*(char *)(v60 - 217) < 0)
    operator delete(*(void **)(v60 - 240));
  if (a60 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

google::protobuf::EnumOptions *google::protobuf::DescriptorBuilder::CrossLinkEnum(google::protobuf::EnumOptions *this, google::protobuf::EnumDescriptor *a2, const google::protobuf::EnumDescriptorProto *a3)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  if (!*((_QWORD *)a2 + 4))
  {
    this = (google::protobuf::EnumOptions *)google::protobuf::EnumOptions::default_instance(this);
    *((_QWORD *)a2 + 4) = this;
  }
  if (*((int *)a2 + 11) >= 1)
  {
    v5 = 0;
    v6 = (char *)a3 + 24;
    v7 = 32;
    do
    {
      v8 = *((_QWORD *)a2 + 6);
      this = (google::protobuf::EnumOptions *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)v6, v5);
      if (!*(_QWORD *)(v8 + v7))
      {
        this = (google::protobuf::EnumOptions *)google::protobuf::EnumValueOptions::default_instance(this);
        *(_QWORD *)(v8 + v7) = this;
      }
      ++v5;
      v7 += 40;
    }
    while (v5 < *((int *)a2 + 11));
  }
  return this;
}

void google::protobuf::DescriptorBuilder::CrossLinkService(google::protobuf::DescriptorBuilder *this, google::protobuf::ServiceDescriptor *a2, const google::protobuf::ServiceDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  google::protobuf::MethodDescriptor *v9;
  std::string **v10;

  if (!*((_QWORD *)a2 + 3))
    *((_QWORD *)a2 + 3) = google::protobuf::ServiceOptions::default_instance(this);
  if (*((int *)a2 + 10) >= 1)
  {
    v6 = 0;
    v7 = 0;
    v8 = (char *)a3 + 24;
    do
    {
      v9 = (google::protobuf::MethodDescriptor *)(*((_QWORD *)a2 + 4) + v6);
      v10 = (std::string **)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>((uint64_t)v8, v7);
      google::protobuf::DescriptorBuilder::CrossLinkMethod(this, v9, v10);
      ++v7;
      v6 += 104;
    }
    while (v7 < *((int *)a2 + 10));
  }
}

void google::protobuf::DescriptorBuilder::CrossLinkMethod(google::protobuf::DescriptorBuilder *this, google::protobuf::MethodDescriptor *a2, std::string **a3)
{
  int v6;
  const google::protobuf::Descriptor *v7;
  const std::string::value_type *v8;
  std::string *v9;
  __int128 v10;
  int v11;
  const google::protobuf::Descriptor *v12;
  const std::string::value_type *v13;
  std::string *v14;
  __int128 v15;
  std::string v16;
  void *__p[2];
  std::string::size_type v18;

  if (!*((_QWORD *)a2 + 11))
    *((_QWORD *)a2 + 11) = google::protobuf::MethodOptions::default_instance(this);
  v6 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, a3[4], *((_QWORD *)a2 + 1), 0, 0, *(_BYTE *)(*(_QWORD *)this + 41) == 0);
  if (v6 == 1)
  {
    google::protobuf::internal::LazyDescriptor::Set((google::protobuf::MethodDescriptor *)((char *)a2 + 24), v7);
  }
  else if (v6)
  {
    v8 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::operator+<char>();
    v9 = std::string::append(&v16, "\" is not a message type.");
    v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v18 = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v8, (uint64_t)a3, 5, (const std::string::value_type *)__p);
    if (SHIBYTE(v18) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
  else if (*(_BYTE *)(*(_QWORD *)this + 41))
  {
    google::protobuf::internal::LazyDescriptor::SetLazy((_QWORD *)a2 + 3, (uint64_t)a3[4], *((_QWORD *)this + 10));
  }
  else
  {
    google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 5, (uint64_t)a3[4]);
  }
  v11 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, a3[5], *((_QWORD *)a2 + 1), 0, 0, *(_BYTE *)(*(_QWORD *)this + 41) == 0);
  if (v11 == 1)
  {
    google::protobuf::internal::LazyDescriptor::Set((google::protobuf::MethodDescriptor *)((char *)a2 + 56), v12);
  }
  else if (v11)
  {
    v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    std::operator+<char>();
    v14 = std::string::append(&v16, "\" is not a message type.");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v18 = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v13, (uint64_t)a3, 6, (const std::string::value_type *)__p);
    if (SHIBYTE(v18) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
  else if (*(_BYTE *)(*(_QWORD *)this + 41))
  {
    google::protobuf::internal::LazyDescriptor::SetLazy((_QWORD *)a2 + 7, (uint64_t)a3[5], *((_QWORD *)this + 10));
  }
  else
  {
    google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 6, (uint64_t)a3[5]);
  }
}

void sub_1BF820544(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *google::protobuf::internal::LazyDescriptor::SetLazy(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  std::string *v6;
  std::string *v7;
  std::string *v8;
  std::string *v9;
  uint64_t v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  _QWORD *result;
  char v15;
  std::string v16[2];

  if (*a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7265);
    v6 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: !descriptor_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if (a1[3])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7266);
    v7 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: !file_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if (a1[1])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7267);
    v8 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: !name_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if (a1[2])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7268);
    v9 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: !once_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if (!a3 || (v10 = *(_QWORD *)(a3 + 16)) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7269);
    v11 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: file && file->pool_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v11->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    v10 = *(_QWORD *)(a3 + 16);
  }
  if (!*(_BYTE *)(v10 + 41))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7270);
    v12 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: file->pool_->lazily_build_dependencies_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  if (*(_BYTE *)(a3 + 65))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7271);
    v13 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: !file->finished_building_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v13->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  a1[3] = a3;
  a1[1] = google::protobuf::DescriptorPool::Tables::AllocateString(*(uint64_t **)(*(_QWORD *)(a3 + 16) + 32), a2);
  result = google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(*(google::protobuf::DescriptorPool::Tables **)(*(_QWORD *)(a3 + 16) + 32));
  a1[2] = result;
  return result;
}

void sub_1BF8207C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::LazyDescriptor::Set(google::protobuf::internal::LazyDescriptor *this, const google::protobuf::Descriptor *a2)
{
  std::string *v4;
  std::string *v5;
  std::string *v6;
  char v7;
  std::string v8[2];

  if (*((_QWORD *)this + 1))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7256);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !name_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*((_QWORD *)this + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7257);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !once_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*((_QWORD *)this + 3))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7258);
    v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !file_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  *(_QWORD *)this = a2;
}

void sub_1BF820900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateMessageOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  const std::string::value_type **v8;
  const google::protobuf::FieldDescriptorProto *v9;
  uint64_t v10;
  uint64_t v11;
  google::protobuf::Descriptor *v12;
  const google::protobuf::DescriptorProto *v13;
  uint64_t v14;
  uint64_t v15;
  google::protobuf::EnumDescriptor *v16;
  const google::protobuf::EnumDescriptorProto *v17;
  uint64_t v18;
  uint64_t v19;
  const std::string::value_type **v20;
  const google::protobuf::FieldDescriptorProto *v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  const std::string::value_type *v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  std::string __p;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  const char *v49;
  int v50;
  _BYTE v51[36];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  if (*((int *)a2 + 26) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = (const std::string::value_type **)(*((_QWORD *)a2 + 5) + v6);
      v9 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, v7);
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, v8, v9);
      ++v7;
      v6 += 152;
    }
    while (v7 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 28) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 7) + v10);
      v13 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v11);
      google::protobuf::DescriptorBuilder::ValidateMessageOptions(this, v12, v13);
      ++v11;
      v10 += 144;
    }
    while (v11 < *((int *)a2 + 28));
  }
  if (*((int *)a2 + 29) >= 1)
  {
    v14 = 0;
    v15 = 0;
    do
    {
      v16 = (google::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 8) + v14);
      v17 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a3 + 72, v15);
      google::protobuf::DescriptorBuilder::ValidateEnumOptions(this, v16, v17);
      ++v15;
      v14 += 80;
    }
    while (v15 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 31) >= 1)
  {
    v18 = 0;
    v19 = 0;
    do
    {
      v20 = (const std::string::value_type **)(*((_QWORD *)a2 + 10) + v18);
      v21 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v19);
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, v20, v21);
      ++v19;
      v18 += 152;
    }
    while (v19 < *((int *)a2 + 31));
  }
  if (*(_BYTE *)(*((_QWORD *)a2 + 4) + 72))
    v22 = 0x7FFFFFFFLL;
  else
    v22 = 0x1FFFFFFFLL;
  v23 = *((_DWORD *)a2 + 30);
  if (v23 >= 1)
  {
    v24 = 0;
    v25 = 4;
    do
    {
      if ((uint64_t)(v22 + 1) < *(int *)(*((_QWORD *)a2 + 9) + v25))
      {
        v26 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        v27 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto_ExtensionRange>::TypeHandler>((uint64_t)a3 + 96, v24);
        v49 = google::protobuf::FastInt64ToBuffer(v22, v51, v28);
        v50 = strlen(v49);
        v47 = 0;
        v48 = -1;
        v45 = 0;
        v46 = -1;
        v43 = 0;
        v44 = -1;
        v41 = 0;
        v42 = -1;
        v39 = 0;
        v40 = -1;
        v37 = 0;
        v38 = -1;
        v35 = 0;
        v36 = -1;
        v33 = 0;
        v34 = -1;
        v31 = 0;
        v32 = -1;
        *((_QWORD *)&v29 + 1) = &v33;
        *(_QWORD *)&v29 = &v35;
        google::protobuf::strings::Substitute("Extension numbers cannot be greater than $0.", (uint64_t)&v49, (uint64_t)&v47, (uint64_t)&v45, (uint64_t)&v43, (uint64_t)&v41, (uint64_t)&v39, (uint64_t)&v37, &__p, v29, (uint64_t)&v31);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v26, v27, 1, (const std::string::value_type *)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        v23 = *((_DWORD *)a2 + 30);
      }
      ++v24;
      v25 += 16;
    }
    while (v24 < v23);
  }
}

void sub_1BF820C28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateEnumOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::EnumDescriptor *a2, const google::protobuf::EnumDescriptorProto *a3)
{
  int v6;
  int i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int *v13;
  int v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  int v19;
  uint64_t *v20;
  const std::string *v21;
  uint64_t **v22;
  std::string *v23;
  __int128 v24;
  uint64_t **v25;
  uint64_t **v26;
  const std::string::value_type *v27;
  uint64_t *v28;
  int v29;
  const std::string::value_type *v30;
  std::string::size_type v31;
  std::string *v32;
  __int128 v33;
  std::string *v34;
  __int128 v35;
  const std::string::value_type *v36;
  uint64_t v37;
  char *v38;
  int v39;
  std::string v40;
  std::string v41;
  std::string v42;
  void *__p[2];
  std::string::size_type v44;
  uint64_t *v45;
  _QWORD v46[2];
  int *v47;

  v6 = *((_DWORD *)a2 + 11);
  if (v6 >= 1)
  {
    for (i = 0; i < v6; ++i)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, i);
      v6 = *((_DWORD *)a2 + 11);
    }
  }
  v8 = *((_QWORD *)a2 + 4);
  if ((*(_BYTE *)(v8 + 40) & 1) == 0 || !*(_BYTE *)(v8 + 72))
  {
    v46[1] = 0;
    v45 = v46;
    v46[0] = 0;
    if (v6 < 1)
    {
      v38 = 0;
    }
    else
    {
      v9 = 0;
      do
      {
        v10 = *((_QWORD *)a2 + 6);
        v11 = v10 + 40 * v9;
        v14 = *(_DWORD *)(v11 + 16);
        v13 = (int *)(v11 + 16);
        v12 = v14;
        v15 = v46[0];
        if (!v46[0])
          goto LABEL_17;
        v16 = v46;
        do
        {
          v17 = (uint64_t *)v15;
          v18 = v16;
          v19 = *(_DWORD *)(v15 + 32);
          v20 = (uint64_t *)(v15 + 8);
          if (v19 >= v12)
          {
            v20 = v17;
            v16 = v17;
          }
          v15 = *v20;
        }
        while (v15);
        if (v16 == v46)
          goto LABEL_17;
        if (v19 < v12)
          v17 = v18;
        if (v12 >= *((_DWORD *)v17 + 8))
        {
          std::operator+<char>();
          v23 = std::string::append(&v40, "\" uses the same enum value as \"");
          v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
          v41.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v24;
          v23->__r_.__value_.__l.__size_ = 0;
          v23->__r_.__value_.__r.__words[2] = 0;
          v23->__r_.__value_.__r.__words[0] = 0;
          v39 = *v13;
          v47 = &v39;
          v25 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v45, &v39, (uint64_t)&std::piecewise_construct, &v47);
          v28 = v25[5];
          v26 = v25 + 5;
          v27 = (const std::string::value_type *)v28;
          v29 = *((char *)v26 + 23);
          if (v29 >= 0)
            v30 = (const std::string::value_type *)v26;
          else
            v30 = v27;
          if (v29 >= 0)
            v31 = *((unsigned __int8 *)v26 + 23);
          else
            v31 = (std::string::size_type)v26[1];
          v32 = std::string::append(&v41, v30, v31);
          v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
          v42.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v33;
          v32->__r_.__value_.__l.__size_ = 0;
          v32->__r_.__value_.__r.__words[2] = 0;
          v32->__r_.__value_.__r.__words[0] = 0;
          v34 = std::string::append(&v42, "\". If this is intended, set 'option allow_alias = true;' to the enum definition.");
          v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
          v44 = v34->__r_.__value_.__r.__words[2];
          *(_OWORD *)__p = v35;
          v34->__r_.__value_.__l.__size_ = 0;
          v34->__r_.__value_.__r.__words[2] = 0;
          v34->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v42.__r_.__value_.__l.__data_);
          if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v41.__r_.__value_.__l.__data_);
          if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v40.__r_.__value_.__l.__data_);
          if (!*(_BYTE *)(*((_QWORD *)a2 + 4) + 72))
          {
            v36 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
            v37 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumValueDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, v9);
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v36, v37, 1, (const std::string::value_type *)__p);
          }
          if (SHIBYTE(v44) < 0)
            operator delete(__p[0]);
        }
        else
        {
LABEL_17:
          v21 = *(const std::string **)(v10 + 40 * v9 + 8);
          LODWORD(v42.__r_.__value_.__l.__data_) = v12;
          __p[0] = &v42;
          v22 = std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(&v45, (int *)&v42, (uint64_t)&std::piecewise_construct, (_DWORD **)__p);
          std::string::operator=((std::string *)(v22 + 5), v21);
        }
        ++v9;
      }
      while (v9 < *((int *)a2 + 11));
      v38 = (char *)v46[0];
    }
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy((uint64_t)&v45, v38);
  }
}

void sub_1BF820F10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38,char *a39)
{
  if (a37 < 0)
    operator delete(__p);
  std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy((uint64_t)&a38, a39);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateServiceOptions(google::protobuf::FileOptions *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  void *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v7 = *(void **)(v5 + 136);
    if (v7 != google::protobuf::FileOptions::default_instance(a1) && *(_DWORD *)(*(_QWORD *)(v5 + 136) + 164) == 3)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 136);
      if (*(_BYTE *)(v8 + 155) || *(_BYTE *)(v8 + 156))
        google::protobuf::DescriptorBuilder::AddError((uint64_t)a1, *(const std::string::value_type **)(a2 + 8), a3, 0, "Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_services to false.");
    }
  }
  if (*(int *)(a2 + 40) >= 1)
  {
    v9 = 0;
    v10 = a3 + 24;
    do
      google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MethodDescriptorProto>::TypeHandler>(v10, v9++);
    while (v9 < *(_DWORD *)(a2 + 40));
  }
}

void google::protobuf::DescriptorBuilder::ValidateFieldOptions(google::protobuf::DescriptorBuilder *this, const std::string::value_type **a2, const google::protobuf::FieldDescriptorProto *a3)
{
  google::protobuf::DescriptorBuilder *v5;
  unint64_t v6;
  unint64_t v7;
  const std::string::value_type *v8;
  google::protobuf::DescriptorBuilder *v9;
  unint64_t v10;
  const std::string::value_type *v11;
  char *v12;
  uint64_t v13;
  const google::protobuf::FieldDescriptorProto *v14;
  uint64_t v15;
  const std::string::value_type *v16;
  google::protobuf::FileOptions *v17;
  google::protobuf::FileOptions *v18;
  const std::string::value_type *v19;
  uint64_t v20;
  void *v21;
  unint64_t *v22;
  unint64_t v23;
  const std::string::value_type *v24;
  uint64_t v25;
  uint64_t v26;
  std::string::size_type size;
  int v28;
  std::string *v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  _BOOL4 v34;
  std::string __p;
  const std::string::value_type **v37;
  uint64_t (*v38)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  std::string *p_p;

  v5 = this;
  if (*(_BYTE *)(*(_QWORD *)this + 41))
  {
    if (!a2)
      return;
    this = (google::protobuf::DescriptorBuilder *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
    if (!this)
      return;
  }
  if (a2[15][77])
  {
    this = (google::protobuf::DescriptorBuilder *)a2[6];
    if (this)
    {
      v37 = a2;
      v38 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6 = atomic_load((unint64_t *)this);
      if (v6 != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v38;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v37;
        p_p = &__p;
        std::__call_once((std::once_flag::_State_type *)this, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if (*((_DWORD *)a2 + 14) != 11)
      google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 2, "[lazy = true] can only be specified for submessage fields.");
  }
  if (a2[15][76])
  {
    if (*((_DWORD *)a2 + 15) != 3)
      goto LABEL_16;
    this = (google::protobuf::DescriptorBuilder *)a2[6];
    if (this)
    {
      v37 = a2;
      v38 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v7 = atomic_load((unint64_t *)this);
      if (v7 != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v38;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v37;
        p_p = &__p;
        std::__call_once((std::once_flag::_State_type *)this, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    if ((*((_DWORD *)a2 + 14) - 13) >= 0xFFFFFFFC)
LABEL_16:
      google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 2, "[packed = true] can only be specified for repeated primitive fields.");
  }
  v8 = a2[10];
  if (v8)
  {
    v9 = (google::protobuf::DescriptorBuilder *)*((_QWORD *)v8 + 4);
    this = (google::protobuf::DescriptorBuilder *)google::protobuf::MessageOptions::default_instance(this);
    if (v9 != this)
    {
      if (*(_BYTE *)(*((_QWORD *)a2[10] + 4) + 72))
      {
        if (!*((_BYTE *)a2 + 66))
        {
          v11 = a2[1];
          v12 = "MessageSets cannot have fields, only extensions.";
          v13 = (uint64_t)v5;
          v14 = a3;
          v15 = 0;
          goto LABEL_28;
        }
        if (*((_DWORD *)a2 + 15) != 1)
          goto LABEL_26;
        this = (google::protobuf::DescriptorBuilder *)a2[6];
        if (this)
        {
          v37 = a2;
          v38 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v10 = atomic_load((unint64_t *)this);
          if (v10 != -1)
          {
            __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v38;
            __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v37;
            p_p = &__p;
            std::__call_once((std::once_flag::_State_type *)this, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*((_DWORD *)a2 + 14) != 11)
        {
LABEL_26:
          v11 = a2[1];
          v12 = "Extensions of MessageSets must be optional messages.";
          v13 = (uint64_t)v5;
          v14 = a3;
          v15 = 2;
LABEL_28:
          google::protobuf::DescriptorBuilder::AddError(v13, v11, (uint64_t)v14, v15, v12);
        }
      }
    }
  }
  v16 = a2[5];
  if (v16)
  {
    v17 = (google::protobuf::FileOptions *)*((_QWORD *)v16 + 17);
    v18 = (google::protobuf::FileOptions *)google::protobuf::FileOptions::default_instance(this);
    if (v17 != v18 && *(_DWORD *)(*((_QWORD *)v16 + 17) + 164) == 3)
    {
      v19 = a2[10];
      if (v19)
      {
        v20 = *((_QWORD *)v19 + 2);
        if (!v20
          || (v21 = *(void **)(v20 + 136), v21 == google::protobuf::FileOptions::default_instance(v18))
          || *(_DWORD *)(*(_QWORD *)(v20 + 136) + 164) != 3)
        {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 3, "Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.");
        }
      }
    }
  }
  v22 = (unint64_t *)a2[6];
  if (v22)
  {
    v37 = a2;
    v38 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v23 = atomic_load(v22);
    if (v23 != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v38;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v37;
      p_p = &__p;
      std::__call_once(v22, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 11
    && *(_BYTE *)(*((_QWORD *)a2[13] + 4) + 75)
    && (google::protobuf::DescriptorBuilder::ValidateMapEntry(v5, a2, a3) & 1) == 0)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 2, "map_entry should not be set explicitly. Use map<KeyType, ValueType> instead.");
  }
  google::protobuf::DescriptorBuilder::ValidateJSType(v5, (google::protobuf::FieldDescriptor *)a2, a3);
  if (*((_BYTE *)a2 + 66) && *((_BYTE *)a2 + 65))
  {
    v24 = a2[4];
    v25 = *((unsigned __int8 *)v24 + 23);
    if ((v25 & 0x80u) == 0)
      v26 = *((unsigned __int8 *)v24 + 23);
    else
      v26 = *((_QWORD *)v24 + 1);
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    v28 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      size = __p.__r_.__value_.__l.__size_;
    if (v26 == size)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v29 = &__p;
      else
        v29 = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((v25 & 0x80) != 0)
      {
        v34 = memcmp(*(const void **)v24, v29, *((_QWORD *)v24 + 1)) != 0;
        goto LABEL_67;
      }
      if (v24[23])
      {
        v30 = v25 - 1;
        do
        {
          v32 = *(unsigned __int8 *)v24++;
          v31 = v32;
          v33 = v29->__r_.__value_.__s.__data_[0];
          v29 = (std::string *)((char *)v29 + 1);
          v34 = v31 != v33;
        }
        while (v31 == v33 && v30-- != 0);
LABEL_67:
        if ((v28 & 0x80000000) == 0)
          goto LABEL_69;
        goto LABEL_68;
      }
      v34 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_69:
        if (v34)
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 7, "option json_name is not allowed on extension fields.");
        return;
      }
    }
    else
    {
      v34 = 1;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_69;
    }
LABEL_68:
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_69;
  }
}

void google::protobuf::DescriptorBuilder::ValidateProto3(google::protobuf::DescriptorBuilder *this, google::protobuf::FileDescriptor *a2, const google::protobuf::FileDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  google::protobuf::FieldDescriptor *v8;
  const google::protobuf::FieldDescriptorProto *v9;
  uint64_t v10;
  uint64_t v11;
  google::protobuf::Descriptor *v12;
  const google::protobuf::DescriptorProto *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  google::protobuf::EnumDescriptor *v17;
  const google::protobuf::EnumDescriptorProto *v18;

  if (*((int *)a2 + 14) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 16) + v6);
      v9 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v7);
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, v8, v9);
      ++v7;
      v6 += 152;
    }
    while (v7 < *((int *)a2 + 14));
  }
  if (*((int *)a2 + 11) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 13) + v10);
      v13 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v11);
      google::protobuf::DescriptorBuilder::ValidateProto3Message(this, v12, v13);
      ++v11;
      v10 += 144;
    }
    while (v11 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 12) >= 1)
  {
    v14 = 0;
    v15 = 0;
    v16 = (char *)a3 + 72;
    do
    {
      v17 = (google::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 14) + v14);
      v18 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)v16, v15);
      google::protobuf::DescriptorBuilder::ValidateProto3Enum(this, v17, v18);
      ++v15;
      v14 += 80;
    }
    while (v15 < *((int *)a2 + 12));
  }
}

void google::protobuf::DescriptorBuilder::ValidateProto3Field(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  const void **v6;
  unsigned __int8 v7;
  unint64_t *v8;
  unint64_t v9;
  const std::string::value_type *v10;
  std::string *v11;
  __int128 v12;
  uint64_t v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  unint64_t *v21;
  unint64_t v22;
  google::protobuf::_anonymous_namespace_ *v23;
  void (*v24)(const void *);
  const void *v25;
  std::string v26;
  std::string v27;
  std::string v28;
  __int128 v29;
  std::string::size_type v30;

  if (*((_BYTE *)a2 + 66))
  {
    v6 = *(const void ***)(*((_QWORD *)a2 + 10) + 8);
    if ((v7 & 1) == 0)
    {
      if ((_DWORD)v23)
      {
        google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::OnShutdownDelete<std::set<std::string>>(std::set<std::string> *)::{lambda(void const*)#1}::__invoke, v24, v25);
      }
    }
  }
  if (*((_DWORD *)a2 + 15) == 2)
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Required fields are not allowed in proto3.");
  if (*((_BYTE *)a2 + 64))
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 4, "Explicit default values are not allowed in proto3.");
  v8 = (unint64_t *)*((_QWORD *)a2 + 6);
  if (v8)
  {
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v26.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    v9 = atomic_load(v8);
    if (v9 != -1)
    {
      *(_QWORD *)&v29 = &v27;
      *((_QWORD *)&v29 + 1) = &v26;
      v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
      std::__call_once(v8, &v28, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 14
    && google::protobuf::FieldDescriptor::enum_type(a2)
    && *(_DWORD *)(*(_QWORD *)(google::protobuf::FieldDescriptor::enum_type(a2) + 16) + 60) != 3)
  {
    v10 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    google::protobuf::FieldDescriptor::enum_type(a2);
    std::operator+<char>();
    v11 = std::string::append(&v26, "\" is not a proto3 enum, but is used in \"");
    v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v27.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    v13 = *(_QWORD *)(*((_QWORD *)a2 + 10) + 8);
    v14 = *(char *)(v13 + 23);
    if (v14 >= 0)
      v15 = *(const std::string::value_type **)(*((_QWORD *)a2 + 10) + 8);
    else
      v15 = *(const std::string::value_type **)v13;
    if (v14 >= 0)
      v16 = *(unsigned __int8 *)(v13 + 23);
    else
      v16 = *(_QWORD *)(v13 + 8);
    v17 = std::string::append(&v27, v15, v16);
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    v19 = std::string::append(&v28, "\" which is a proto3 message type.");
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v30 = v19->__r_.__value_.__r.__words[2];
    v29 = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v10, (uint64_t)a3, 2, (const std::string::value_type *)&v29);
    if (SHIBYTE(v30) < 0)
      operator delete((void *)v29);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v28.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v27.__r_.__value_.__l.__data_);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v26.__r_.__value_.__l.__data_);
  }
  v21 = (unint64_t *)*((_QWORD *)a2 + 6);
  if (v21)
  {
    v27.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v26.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    v22 = atomic_load(v21);
    if (v22 != -1)
    {
      *(_QWORD *)&v29 = &v27;
      *((_QWORD *)&v29 + 1) = &v26;
      v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v29;
      std::__call_once(v21, &v28, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)a2 + 14) == 10)
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Groups are not supported in proto3 syntax.");
}

void sub_1BF821874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Message(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  google::protobuf::Descriptor *v8;
  const google::protobuf::DescriptorProto *v9;
  uint64_t v10;
  uint64_t v11;
  google::protobuf::EnumDescriptor *v12;
  const google::protobuf::EnumDescriptorProto *v13;
  uint64_t v14;
  uint64_t v15;
  google::protobuf::FieldDescriptor *v16;
  const google::protobuf::FieldDescriptorProto *v17;
  uint64_t v18;
  uint64_t v19;
  google::protobuf::FieldDescriptor *v20;
  const google::protobuf::FieldDescriptorProto *v21;
  const std::string::value_type *v22;
  std::string *v23;
  std::string *v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  unint64_t v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  uint64_t *v33;
  int v34;
  std::string::value_type v35;
  unint64_t v36;
  const std::string::value_type *v37;
  uint64_t v38;
  std::string *v39;
  __int128 v40;
  uint64_t *v41;
  uint64_t v42;
  int v43;
  const std::string::value_type *v44;
  std::string::size_type v45;
  std::string *v46;
  __int128 v47;
  std::string *v48;
  __int128 v49;
  std::string *v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  std::string v54;
  std::string v55;
  std::string v56;
  std::string v57;
  void *__p[2];
  std::string::size_type v59;
  std::string v60;
  std::string *v61;
  _QWORD *v62;
  _QWORD v63[6];

  if (*((int *)a2 + 28) >= 1)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = (google::protobuf::Descriptor *)(*((_QWORD *)a2 + 7) + v6);
      v9 = (const google::protobuf::DescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::DescriptorProto>::TypeHandler>((uint64_t)a3 + 48, v7);
      google::protobuf::DescriptorBuilder::ValidateProto3Message(this, v8, v9);
      ++v7;
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 28));
  }
  if (*((int *)a2 + 29) >= 1)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = (google::protobuf::EnumDescriptor *)(*((_QWORD *)a2 + 8) + v10);
      v13 = (const google::protobuf::EnumDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::EnumDescriptorProto>::TypeHandler>((uint64_t)a3 + 72, v11);
      google::protobuf::DescriptorBuilder::ValidateProto3Enum(this, v12, v13);
      ++v11;
      v10 += 80;
    }
    while (v11 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    v14 = 0;
    v15 = 0;
    do
    {
      v16 = (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 5) + v14);
      v17 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 24, v15);
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, v16, v17);
      ++v15;
      v14 += 152;
    }
    while (v15 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 31) >= 1)
  {
    v18 = 0;
    v19 = 0;
    do
    {
      v20 = (google::protobuf::FieldDescriptor *)(*((_QWORD *)a2 + 10) + v18);
      v21 = (const google::protobuf::FieldDescriptorProto *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)a3 + 120, v19);
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, v20, v21);
      ++v19;
      v18 += 152;
    }
    while (v19 < *((int *)a2 + 31));
  }
  if (*((int *)a2 + 30) > 0)
  {
    v22 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    if (*((int *)a3 + 26) <= 0)
    {
      v23 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
      v24 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v60, (const char **)&v24->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v62);
    }
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v22, *(_QWORD *)(*((_QWORD *)a3 + 14) + 8), 1, "Extension ranges are not allowed in proto3.");
  }
  if (*(_BYTE *)(*((_QWORD *)a2 + 4) + 72))
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 0, "MessageSet is not supported in proto3.");
  v63[0] = 0;
  v63[1] = 0;
  v62 = v63;
  if (*((int *)a2 + 26) < 1)
  {
    v53 = 0;
  }
  else
  {
    v25 = 0;
    v26 = (char *)a3 + 24;
    do
    {
      v27 = *(uint64_t **)(*((_QWORD *)a2 + 5) + 152 * v25);
      memset(&v60, 0, sizeof(v60));
      v28 = *((unsigned __int8 *)v27 + 23);
      v29 = *((char *)v27 + 23) < 0;
      v30 = v27[1];
      if (*((char *)v27 + 23) >= 0)
        v31 = *((unsigned __int8 *)v27 + 23);
      else
        v31 = v27[1];
      if (v31)
      {
        for (i = 0; i < v36; ++i)
        {
          if (v29)
            v33 = (uint64_t *)*v27;
          else
            v33 = v27;
          v34 = *((unsigned __int8 *)v33 + i);
          if (v34 != 95)
          {
            if ((v34 - 65) > 0x19)
              v35 = *((_BYTE *)v33 + i);
            else
              v35 = v34 + 32;
            std::string::push_back(&v60, v35);
            v28 = *((unsigned __int8 *)v27 + 23);
            v30 = v27[1];
          }
          v29 = (v28 & 0x80u) != 0;
          if ((v28 & 0x80u) == 0)
            v36 = v28;
          else
            v36 = v30;
        }
      }
      if (v63 == (_QWORD *)std::__tree<std::string>::find<std::string>((uint64_t)&v62, (const void **)&v60.__r_.__value_.__l.__data_))
      {
        v52 = *((_QWORD *)a2 + 5);
        __p[0] = &v60;
        std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(&v62, (const void **)&v60.__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, (__int128 **)__p)[7] = v52 + 152 * v25;
      }
      else
      {
        v37 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        v38 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::FieldDescriptorProto>::TypeHandler>((uint64_t)v26, v25);
        std::operator+<char>();
        v39 = std::string::append(&v54, "\" conflicts with field \"");
        v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v55.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        v61 = &v60;
        v41 = std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(&v62, (const void **)&v60.__r_.__value_.__l.__data_, (uint64_t)&std::piecewise_construct, (__int128 **)&v61);
        v42 = *(_QWORD *)v41[7];
        v43 = *(char *)(v42 + 23);
        if (v43 >= 0)
          v44 = *(const std::string::value_type **)v41[7];
        else
          v44 = *(const std::string::value_type **)v42;
        if (v43 >= 0)
          v45 = *(unsigned __int8 *)(v42 + 23);
        else
          v45 = *(_QWORD *)(v42 + 8);
        v46 = std::string::append(&v55, v44, v45);
        v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
        v56.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v47;
        v46->__r_.__value_.__l.__size_ = 0;
        v46->__r_.__value_.__r.__words[2] = 0;
        v46->__r_.__value_.__r.__words[0] = 0;
        v48 = std::string::append(&v56, "\". This is not ");
        v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v49;
        v48->__r_.__value_.__l.__size_ = 0;
        v48->__r_.__value_.__r.__words[2] = 0;
        v48->__r_.__value_.__r.__words[0] = 0;
        v50 = std::string::append(&v57, "allowed in proto3.");
        v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
        v59 = v50->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v51;
        v50->__r_.__value_.__l.__size_ = 0;
        v50->__r_.__value_.__r.__words[2] = 0;
        v50->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v37, v38, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(v59) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v57.__r_.__value_.__l.__data_);
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v56.__r_.__value_.__l.__data_);
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v55.__r_.__value_.__l.__data_);
        if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v54.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v60.__r_.__value_.__l.__data_);
      ++v25;
    }
    while (v25 < *((int *)a2 + 26));
    v53 = (char *)v63[0];
  }
  std::__tree<std::string>::destroy((uint64_t)&v62, v53);
}

void sub_1BF821DBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  uint64_t v49;

  google::protobuf::internal::LogMessage::~LogMessage((void **)(v49 - 136));
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Enum(google::protobuf::DescriptorBuilder *this, google::protobuf::EnumDescriptor *a2, const google::protobuf::EnumDescriptorProto *a3)
{
  const std::string::value_type *v5;
  std::string *v6;
  char v7;
  std::string v8[2];

  if (*((int *)a2 + 11) >= 1 && *(_DWORD *)(*((_QWORD *)a2 + 6) + 16))
  {
    v5 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
    if (*((int *)a3 + 8) <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
      v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    }
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v5, *(_QWORD *)(*((_QWORD *)a3 + 5) + 8), 1, "The first enum value must be zero in proto3.");
  }
}

void sub_1BF821F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::ValidateMapEntry(google::protobuf::DescriptorBuilder *this, const std::string::value_type **a2, const google::protobuf::FieldDescriptorProto *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  std::string *v9;
  __int128 v10;
  BOOL v11;
  unsigned __int16 **v12;
  unsigned __int16 *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  unsigned int v19;
  std::string v20;
  void *__p[2];
  std::string::size_type v22;

  v6 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
  if (*(_DWORD *)(v6 + 124))
    return 0;
  if (*((_DWORD *)a2 + 15) != 3)
    return 0;
  v7 = v6;
  if (*(_DWORD *)(v6 + 120) || *(_DWORD *)(v6 + 112) || *(_DWORD *)(v6 + 116) || *(_DWORD *)(v6 + 104) != 2)
    return 0;
  v8 = *(unsigned __int8 **)v6;
  v9 = std::string::append(&v20, "Entry");
  v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v22 = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  v11 = std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v8, (unsigned __int8 *)__p)
     || a2[10] != *(const std::string::value_type **)(v7 + 24);
  if (SHIBYTE(v22) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  if (v11)
    return 0;
  v12 = *(unsigned __int16 ***)(v7 + 40);
  if (*((_DWORD *)v12 + 15) != 1 || *((_DWORD *)v12 + 17) != 1)
    return 0;
  v13 = *v12;
  v14 = *((char *)*v12 + 23);
  if (v14 < 0)
  {
    if (*((_QWORD *)v13 + 1) != 3)
      return 0;
    v13 = *(unsigned __int16 **)v13;
  }
  else if (v14 != 3)
  {
    return 0;
  }
  v15 = *v13;
  v16 = *((unsigned __int8 *)v13 + 2);
  v17 = v15 == 25963 && v16 == 121;
  if (!v17
    || *((_DWORD *)v12 + 53) != 1
    || *((_DWORD *)v12 + 55) != 2
    || std::operator!=[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v12[19], "value"))
  {
    return 0;
  }
  v19 = google::protobuf::FieldDescriptor::type((google::protobuf::FieldDescriptor *)v12) - 1;
  if (v19 <= 0xD && ((0x2E03u >> v19) & 1) != 0)
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, a2[1], (uint64_t)a3, 2, off_1E79298A8[v19]);
  if (google::protobuf::FieldDescriptor::type((google::protobuf::FieldDescriptor *)(v12 + 19)) == 14)
  {
    if (*(_DWORD *)(*(_QWORD *)(google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)(v12 + 19))
                               + 48)
                   + 16))
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, a2[1], (uint64_t)a3, 2, "Enum value in map must define 0 as the first value.");
  }
  return 1;
}

void sub_1BF82216C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateJSType(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  unsigned int v3;
  unint64_t *v7;
  unint64_t v8;
  unsigned int v9;
  BOOL v10;
  int v11;
  const std::string::value_type *v13;
  void *__p[2];
  char v15;
  google::protobuf::FieldDescriptor *v16;
  uint64_t (*v17)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  void **v18;

  v3 = *(_DWORD *)(*((_QWORD *)a2 + 15) + 80);
  if (v3)
  {
    v7 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v7)
    {
      v16 = a2;
      v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v8 = atomic_load(v7);
      if (v8 != -1)
      {
        __p[0] = &v17;
        __p[1] = &v16;
        v18 = __p;
        std::__call_once(v7, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v9 = *((_DWORD *)a2 + 14);
    v10 = v9 > 0x12;
    v11 = (1 << v9) & 0x50058;
    if (v10 || v11 == 0)
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "jstype is only allowed on int64, uint64, sint64, fixed64 or sfixed64 fields.");
    }
    else if (v3 >= 3)
    {
      v13 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      google::protobuf::FieldOptions_JSType_descriptor((google::protobuf *)v7);
      std::operator+<char>();
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v13, (uint64_t)a3, 2, (const std::string::value_type *)__p);
      if (v15 < 0)
        operator delete(__p[0]);
    }
  }
}

void sub_1BF8222A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

google::protobuf::DescriptorBuilder::OptionInterpreter *google::protobuf::DescriptorBuilder::OptionInterpreter::OptionInterpreter(google::protobuf::DescriptorBuilder::OptionInterpreter *this, google::protobuf::DescriptorBuilder *a2)
{
  std::string *v3;
  char v5;
  std::string v6[2];

  *(_QWORD *)this = a2;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 3) = (char *)this + 32;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = (char *)this + 56;
  *((_QWORD *)this + 8) = 0;
  google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 72));
  if (!*(_QWORD *)this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 6250);
    v3 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: builder_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v3->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  return this;
}

void sub_1BF822378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v4;
  google::protobuf::DynamicMessageFactory *v5;
  _QWORD **v6;
  _QWORD **v7;
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(v5);
  std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(v4, *v7);
  std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(v3, *v6);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::~OptionInterpreter(google::protobuf::DescriptorBuilder::OptionInterpreter *this)
{
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 72));
  std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy((uint64_t)this + 48, *((_QWORD **)this + 7));
  std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy((uint64_t)this + 24, *((_QWORD **)this + 4));
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption(uint64_t a1, google::protobuf::Message *a2, int **a3, uint64_t a4)
{
  uint64_t v5;
  int v6;
  std::string *v9;
  std::string *v10;
  uint64_t *v11;
  int v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  uint64_t *v18;
  uint64_t v19;
  const std::string::value_type **v20;
  const std::string::value_type **v21;
  std::string *v22;
  std::string *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  std::string::size_type size;
  std::string *v29;
  __int128 v30;
  unsigned __int8 *v31;
  std::string::size_type v32;
  google::protobuf::DescriptorBuilder::OptionInterpreter *FieldByName;
  uint64_t v34;
  int v35;
  const std::string::value_type *v36;
  std::string::size_type v37;
  uint64_t v38;
  int v39;
  _DWORD *v40;
  _DWORD *v41;
  _DWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  int v49;
  int v50;
  unint64_t *v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  google::protobuf::Reflection *v65;
  unint64_t UnknownFields;
  google::protobuf::UnknownFieldSet *v67;
  uint64_t *v68;
  _QWORD *v69;
  uint64_t *v70;
  std::string::size_type v71;
  unint64_t *v72;
  unint64_t v73;
  int v74;
  _QWORD *v75;
  google::protobuf::io::EpsCopyOutputStream *v76;
  std::string *v77;
  std::string *v78;
  std::string *v79;
  std::string *v80;
  void **v81;
  std::string::size_type v82;
  google::protobuf::UnknownFieldSet *v83;
  google::protobuf::UnknownFieldSet *v84;
  google::protobuf::Reflection *v85;
  void **v86;
  uint64_t *v87;
  int v88;
  _DWORD *v89;
  _DWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  std::string *v94;
  __int128 v95;
  std::string *v96;
  __int128 v97;
  void *v98;
  std::string *v99;
  __int128 v100;
  int v101;
  const std::string::value_type *v102;
  std::string::size_type v103;
  std::string *v104;
  __int128 v105;
  std::string *v106;
  __int128 v107;
  std::string *v108;
  std::string *v109;
  std::string::size_type v110;
  unint64_t *v111;
  unint64_t v112;
  std::string *v113;
  google::protobuf::UnknownFieldSet *v114;
  _DWORD *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  std::string *v121;
  __int128 v122;
  int v123;
  const std::string::value_type *v124;
  std::string::size_type v125;
  std::string *v126;
  __int128 v127;
  std::string *v128;
  __int128 v129;
  std::string *v130;
  std::string::size_type v131;
  std::string *v132;
  __int128 v133;
  std::string *v134;
  __int128 v135;
  std::string *v136;
  __int128 v137;
  std::string *v138;
  __int128 v139;
  char *v140;
  char *v141;
  int v142;
  char *v143;
  google::protobuf::UnknownFieldSet *v144;
  std::string v147;
  std::string v148;
  std::string v149;
  std::string v150;
  std::string v151;
  std::string v152;
  void *__p;
  _DWORD *v154;
  unint64_t v155;
  std::string __str;
  uint64_t *v157;
  uint64_t *v158;
  char *v159;
  char v160;
  unsigned __int8 v161[16];
  int64_t v162;
  const google::protobuf::UnknownFieldSet *v163;
  uint64_t v164;

  v164 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_DWORD *)(v5 + 32);
  if (!v6)
  {
    std::string::basic_string[abi:ne180100]<0>(v161, "Option must have a name.");
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, (const std::string::value_type *)(*(_QWORD *)(a1 + 8) + 24), *(_QWORD *)(a1 + 16), 7, (const std::string::value_type *)v161);
LABEL_114:
    if (SHIBYTE(v162) < 0)
      operator delete(*(void **)v161);
    return 0;
  }
  if (v6 <= 0)
  {
    v9 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)v161, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v10 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v147, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)v161);
  }
  v11 = *(uint64_t **)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 8) + 24);
  v12 = *((char *)v11 + 23);
  if (v12 < 0)
  {
    if (v11[1] != 20)
      goto LABEL_17;
    v11 = (uint64_t *)*v11;
  }
  else if (v12 != 20)
  {
    goto LABEL_17;
  }
  v13 = (uint64_t *)*v11;
  v14 = v11[1];
  v15 = *((_DWORD *)v11 + 4);
  if (v13 == (uint64_t *)0x707265746E696E75 && v14 == 0x706F5F6465746572 && v15 == 1852795252)
  {
    std::string::basic_string[abi:ne180100]<0>(v161, "Option must not use reserved name \"uninterpreted_option\".");
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, (const std::string::value_type *)(*(_QWORD *)(a1 + 8) + 24), *(_QWORD *)(a1 + 16), 7, (const std::string::value_type *)v161);
    goto LABEL_114;
  }
LABEL_17:
  v18 = *(uint64_t **)a1;
  v19 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 168))(a2);
  if (google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(v18, *(_QWORD *)(v19 + 8), 1) == 1)
  {
    v21 = v20;
    if (!v20)
      goto LABEL_21;
  }
  else
  {
    v21 = (const std::string::value_type **)(*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 168))(a2);
    if (!v21)
    {
LABEL_21:
      v22 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)v161, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 6373);
      v23 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: options_descriptor: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v147, (const char **)&v23->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)v161);
    }
  }
  v157 = 0;
  v158 = 0;
  v159 = 0;
  std::string::basic_string[abi:ne180100]<0>(&__str, "");
  __p = 0;
  v154 = 0;
  v155 = 0;
  std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(&__p, *(const void **)a4, *(_QWORD *)(a4 + 8), (uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 2);
  v24 = *(_QWORD *)(a1 + 16);
  if (*(int *)(v24 + 32) >= 1)
  {
    v25 = 0;
    v26 = 0;
    while (1)
    {
      v27 = *(_QWORD *)(google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(v24 + 24, v25)+ 24);
      size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = __str.__r_.__value_.__l.__size_;
      if (size)
        std::string::append(&__str, ".");
      if (*(_BYTE *)(google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::UninterpretedOption_NamePart>::TypeHandler>(*(_QWORD *)(a1 + 16) + 24, v25)+ 32))
      {
        std::operator+<char>();
        v29 = std::string::append(&v147, ")");
        v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
        v162 = v29->__r_.__value_.__r.__words[2];
        *(_OWORD *)v161 = v30;
        v29->__r_.__value_.__l.__size_ = 0;
        v29->__r_.__value_.__r.__words[2] = 0;
        v29->__r_.__value_.__r.__words[0] = 0;
        if (v162 >= 0)
          v31 = v161;
        else
          v31 = *(unsigned __int8 **)v161;
        if (v162 >= 0)
          v32 = HIBYTE(v162);
        else
          v32 = *(_QWORD *)&v161[8];
        std::string::append(&__str, (const std::string::value_type *)v31, v32);
        if (SHIBYTE(v162) < 0)
          operator delete(*(void **)v161);
        if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v147.__r_.__value_.__l.__data_);
        FieldByName = (google::protobuf::DescriptorBuilder::OptionInterpreter *)google::protobuf::DescriptorBuilder::LookupSymbol(*(uint64_t **)a1, (std::string *)v27, *(_QWORD *)(a1 + 8), 0, 0, 1);
        if ((_DWORD)FieldByName == 2)
          v26 = v34;
        if (!v26)
        {
LABEL_117:
          v92 = *(_QWORD *)a1;
          if (!*(_BYTE *)(**(_QWORD **)a1 + 42))
          {
            if (*(char *)(v92 + 199) < 0)
              v93 = *(_QWORD *)(v92 + 184);
            else
              v93 = *(unsigned __int8 *)(v92 + 199);
            if (v93)
            {
              std::operator+<char>();
              v121 = std::string::append(&v149, "\" is resolved to \"(");
              v122 = *(_OWORD *)&v121->__r_.__value_.__l.__data_;
              v150.__r_.__value_.__r.__words[2] = v121->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v150.__r_.__value_.__l.__data_ = v122;
              v121->__r_.__value_.__l.__size_ = 0;
              v121->__r_.__value_.__r.__words[2] = 0;
              v121->__r_.__value_.__r.__words[0] = 0;
              v123 = *(char *)(*(_QWORD *)a1 + 199);
              if (v123 >= 0)
                v124 = (const std::string::value_type *)(*(_QWORD *)a1 + 176);
              else
                v124 = *(const std::string::value_type **)(*(_QWORD *)a1 + 176);
              if (v123 >= 0)
                v125 = *(unsigned __int8 *)(*(_QWORD *)a1 + 199);
              else
                v125 = *(_QWORD *)(*(_QWORD *)a1 + 184);
              v126 = std::string::append(&v150, v124, v125);
              v127 = *(_OWORD *)&v126->__r_.__value_.__l.__data_;
              v151.__r_.__value_.__r.__words[2] = v126->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v151.__r_.__value_.__l.__data_ = v127;
              v126->__r_.__value_.__l.__size_ = 0;
              v126->__r_.__value_.__r.__words[2] = 0;
              v126->__r_.__value_.__r.__words[0] = 0;
              v128 = std::string::append(&v151, ")\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \"(.");
              v129 = *(_OWORD *)&v128->__r_.__value_.__l.__data_;
              v152.__r_.__value_.__r.__words[2] = v128->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v152.__r_.__value_.__l.__data_ = v129;
              v128->__r_.__value_.__l.__size_ = 0;
              v128->__r_.__value_.__r.__words[2] = 0;
              v128->__r_.__value_.__r.__words[0] = 0;
              std::string::basic_string(&v148, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v160);
              if ((v148.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v130 = &v148;
              else
                v130 = (std::string *)v148.__r_.__value_.__r.__words[0];
              if ((v148.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v131 = HIBYTE(v148.__r_.__value_.__r.__words[2]);
              else
                v131 = v148.__r_.__value_.__l.__size_;
              v132 = std::string::append(&v152, (const std::string::value_type *)v130, v131);
              v133 = *(_OWORD *)&v132->__r_.__value_.__l.__data_;
              v147.__r_.__value_.__r.__words[2] = v132->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v147.__r_.__value_.__l.__data_ = v133;
              v132->__r_.__value_.__l.__size_ = 0;
              v132->__r_.__value_.__r.__words[2] = 0;
              v132->__r_.__value_.__r.__words[0] = 0;
              v134 = std::string::append(&v147, "\") to start from the outermost scope.");
              v135 = *(_OWORD *)&v134->__r_.__value_.__l.__data_;
              v162 = v134->__r_.__value_.__r.__words[2];
              *(_OWORD *)v161 = v135;
              v134->__r_.__value_.__l.__size_ = 0;
              v134->__r_.__value_.__r.__words[2] = 0;
              v134->__r_.__value_.__r.__words[0] = 0;
              google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, (const std::string::value_type *)(*(_QWORD *)(a1 + 8) + 24), *(_QWORD *)(a1 + 16), 7, (const std::string::value_type *)v161);
              if (SHIBYTE(v162) < 0)
                operator delete(*(void **)v161);
              if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v147.__r_.__value_.__l.__data_);
              if (SHIBYTE(v148.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v148.__r_.__value_.__l.__data_);
              if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v152.__r_.__value_.__l.__data_);
              if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v151.__r_.__value_.__l.__data_);
              if (SHIBYTE(v150.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v150.__r_.__value_.__l.__data_);
              if (SHIBYTE(v149.__r_.__value_.__r.__words[2]) < 0)
              {
                v98 = (void *)v149.__r_.__value_.__r.__words[0];
                goto LABEL_190;
              }
            }
            else
            {
              std::operator+<char>();
              v136 = std::string::append(&v152, "\" unknown. Ensure that your proto");
              v137 = *(_OWORD *)&v136->__r_.__value_.__l.__data_;
              v147.__r_.__value_.__r.__words[2] = v136->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v147.__r_.__value_.__l.__data_ = v137;
              v136->__r_.__value_.__l.__size_ = 0;
              v136->__r_.__value_.__r.__words[2] = 0;
              v136->__r_.__value_.__r.__words[0] = 0;
              v138 = std::string::append(&v147, " definition file imports the proto which defines the option.");
              v139 = *(_OWORD *)&v138->__r_.__value_.__l.__data_;
              v162 = v138->__r_.__value_.__r.__words[2];
              *(_OWORD *)v161 = v139;
              v138->__r_.__value_.__l.__size_ = 0;
              v138->__r_.__value_.__r.__words[2] = 0;
              v138->__r_.__value_.__r.__words[0] = 0;
              google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, (const std::string::value_type *)(*(_QWORD *)(a1 + 8) + 24), *(_QWORD *)(a1 + 16), 7, (const std::string::value_type *)v161);
              if (SHIBYTE(v162) < 0)
                operator delete(*(void **)v161);
              if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v147.__r_.__value_.__l.__data_);
              if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
              {
                v98 = (void *)v152.__r_.__value_.__r.__words[0];
LABEL_190:
                operator delete(v98);
              }
            }
LABEL_191:
            v91 = 0;
            goto LABEL_204;
          }
          goto LABEL_121;
        }
      }
      else
      {
        v35 = *(char *)(v27 + 23);
        if (v35 >= 0)
          v36 = (const std::string::value_type *)v27;
        else
          v36 = *(const std::string::value_type **)v27;
        if (v35 >= 0)
          v37 = *(unsigned __int8 *)(v27 + 23);
        else
          v37 = *(_QWORD *)(v27 + 8);
        std::string::append(&__str, v36, v37);
        FieldByName = (google::protobuf::DescriptorBuilder::OptionInterpreter *)google::protobuf::Descriptor::FindFieldByName((uint64_t)v21, v27);
        v26 = (uint64_t)FieldByName;
        if (!FieldByName)
          goto LABEL_117;
      }
      v38 = *(_QWORD *)(v26 + 80);
      if ((const std::string::value_type **)v38 != v21)
      {
        if (!*(_BYTE *)(v38 + 136))
        {
          std::operator+<char>();
          v99 = std::string::append(&v151, "\" is not a field or extension of message \"");
          v100 = *(_OWORD *)&v99->__r_.__value_.__l.__data_;
          v152.__r_.__value_.__r.__words[2] = v99->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v152.__r_.__value_.__l.__data_ = v100;
          v99->__r_.__value_.__l.__size_ = 0;
          v99->__r_.__value_.__r.__words[2] = 0;
          v99->__r_.__value_.__r.__words[0] = 0;
          v101 = (*v21)[23];
          if (v101 >= 0)
            v102 = *v21;
          else
            v102 = *(const std::string::value_type **)*v21;
          if (v101 >= 0)
            v103 = *((unsigned __int8 *)*v21 + 23);
          else
            v103 = *((_QWORD *)*v21 + 1);
          v104 = std::string::append(&v152, v102, v103);
          v105 = *(_OWORD *)&v104->__r_.__value_.__l.__data_;
          v147.__r_.__value_.__r.__words[2] = v104->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v147.__r_.__value_.__l.__data_ = v105;
          v104->__r_.__value_.__l.__size_ = 0;
          v104->__r_.__value_.__r.__words[2] = 0;
          v104->__r_.__value_.__r.__words[0] = 0;
          v106 = std::string::append(&v147, "\".");
          v107 = *(_OWORD *)&v106->__r_.__value_.__l.__data_;
          v162 = v106->__r_.__value_.__r.__words[2];
          *(_OWORD *)v161 = v107;
          v106->__r_.__value_.__l.__size_ = 0;
          v106->__r_.__value_.__r.__words[2] = 0;
          v106->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, (const std::string::value_type *)(*(_QWORD *)(a1 + 8) + 24), *(_QWORD *)(a1 + 16), 7, (const std::string::value_type *)v161);
          if (SHIBYTE(v162) < 0)
            operator delete(*(void **)v161);
          if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v147.__r_.__value_.__l.__data_);
          if (SHIBYTE(v152.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v152.__r_.__value_.__l.__data_);
          if (SHIBYTE(v151.__r_.__value_.__r.__words[2]) < 0)
          {
            v98 = (void *)v151.__r_.__value_.__r.__words[0];
            goto LABEL_190;
          }
          goto LABEL_191;
        }
LABEL_121:
        google::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(FieldByName, *(const google::protobuf::UninterpretedOption **)(a1 + 16), a2);
        v91 = 1;
        goto LABEL_204;
      }
      v39 = *(_DWORD *)(v26 + 68);
      v40 = v154;
      if ((unint64_t)v154 >= v155)
      {
        v42 = __p;
        v43 = ((char *)v154 - (_BYTE *)__p) >> 2;
        v44 = v43 + 1;
        if ((unint64_t)(v43 + 1) >> 62)
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        v45 = v155 - (_QWORD)__p;
        if ((uint64_t)(v155 - (_QWORD)__p) >> 1 > v44)
          v44 = v45 >> 1;
        if ((unint64_t)v45 >= 0x7FFFFFFFFFFFFFFCLL)
          v46 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v46 = v44;
        if (v46)
        {
          v47 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v155, v46);
          v42 = __p;
          v40 = v154;
        }
        else
        {
          v47 = 0;
        }
        v48 = &v47[4 * v43];
        *(_DWORD *)v48 = v39;
        v41 = v48 + 4;
        while (v40 != v42)
        {
          v49 = *--v40;
          *((_DWORD *)v48 - 1) = v49;
          v48 -= 4;
        }
        __p = v48;
        v154 = v41;
        v155 = (unint64_t)&v47[4 * v46];
        if (v42)
          operator delete(v42);
      }
      else
      {
        *v154 = v39;
        v41 = v40 + 1;
      }
      v154 = v41;
      v24 = *(_QWORD *)(a1 + 16);
      v50 = *(_DWORD *)(v24 + 32);
      if (v25 < v50 - 1)
      {
        v51 = *(unint64_t **)(v26 + 48);
        if (v51)
        {
          v152.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v151.__r_.__value_.__r.__words[0] = v26;
          v52 = atomic_load(v51);
          if (v52 != -1)
          {
            *(_QWORD *)v161 = &v152;
            *(_QWORD *)&v161[8] = &v151;
            v147.__r_.__value_.__r.__words[0] = (std::string::size_type)v161;
            std::__call_once(v51, &v147, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if ((*(_DWORD *)(v26 + 56) & 0xFFFFFFFE) != 0xA)
        {
          std::operator+<char>();
          v94 = std::string::append(&v147, "\" is an atomic type, not a message.");
          v95 = *(_OWORD *)&v94->__r_.__value_.__l.__data_;
          v162 = v94->__r_.__value_.__r.__words[2];
          *(_OWORD *)v161 = v95;
          v94->__r_.__value_.__l.__size_ = 0;
          v94->__r_.__value_.__r.__words[2] = 0;
          v94->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, (const std::string::value_type *)(*(_QWORD *)(a1 + 8) + 24), *(_QWORD *)(a1 + 16), 7, (const std::string::value_type *)v161);
          goto LABEL_124;
        }
        if (*(_DWORD *)(v26 + 60) == 3)
        {
          std::operator+<char>();
          v96 = std::string::append(&v147, "\" is a repeated message. Repeated message options must be initialized using an aggregate value.");
          v97 = *(_OWORD *)&v96->__r_.__value_.__l.__data_;
          v162 = v96->__r_.__value_.__r.__words[2];
          *(_OWORD *)v161 = v97;
          v96->__r_.__value_.__l.__size_ = 0;
          v96->__r_.__value_.__r.__words[2] = 0;
          v96->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)a1, (const std::string::value_type *)(*(_QWORD *)(a1 + 8) + 24), *(_QWORD *)(a1 + 16), 7, (const std::string::value_type *)v161);
LABEL_124:
          if (SHIBYTE(v162) < 0)
            operator delete(*(void **)v161);
          if (SHIBYTE(v147.__r_.__value_.__r.__words[2]) < 0)
          {
            v98 = (void *)v147.__r_.__value_.__r.__words[0];
            goto LABEL_190;
          }
          goto LABEL_191;
        }
        v53 = v158;
        if (v158 >= (uint64_t *)v159)
        {
          v55 = v158 - v157;
          if ((unint64_t)(v55 + 1) >> 61)
            std::vector<BOOL>::__throw_length_error[abi:ne180100]();
          v56 = (v159 - (char *)v157) >> 2;
          if (v56 <= v55 + 1)
            v56 = v55 + 1;
          if ((unint64_t)(v159 - (char *)v157) >= 0x7FFFFFFFFFFFFFF8)
            v57 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v57 = v56;
          if (v57)
            v58 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)&v159, v57);
          else
            v58 = 0;
          v59 = (uint64_t *)&v58[8 * v55];
          *v59 = v26;
          v54 = v59 + 1;
          v61 = v157;
          v60 = v158;
          if (v158 != v157)
          {
            do
            {
              v62 = *--v60;
              *--v59 = v62;
            }
            while (v60 != v61);
            v60 = v157;
          }
          v157 = v59;
          v158 = v54;
          v159 = &v58[8 * v57];
          if (v60)
            operator delete(v60);
        }
        else
        {
          *v158 = v26;
          v54 = v53 + 1;
        }
        v158 = v54;
        v21 = (const std::string::value_type **)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v26);
        v24 = *(_QWORD *)(a1 + 16);
        v50 = *(_DWORD *)(v24 + 32);
      }
      if (++v25 >= v50)
        goto LABEL_93;
    }
  }
  v26 = 0;
LABEL_93:
  if (*(_DWORD *)(v26 + 60) != 3)
  {
    v63 = v157;
    v64 = v158;
    (*(void (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 168))(a2);
    UnknownFields = google::protobuf::Reflection::GetUnknownFields(v65, a2);
    if (!google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet((uint64_t *)a1, v63, v64, v26, (uint64_t)&__str, UnknownFields))goto LABEL_191;
  }
  v67 = (google::protobuf::UnknownFieldSet *)operator new();
  *(_QWORD *)v67 = 0;
  *((_QWORD *)v67 + 1) = 0;
  *((_QWORD *)v67 + 2) = 0;
  v149.__r_.__value_.__r.__words[0] = (std::string::size_type)v67;
  if ((google::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue((google::protobuf::DescriptorBuilder::OptionInterpreter *)a1, (const google::protobuf::FieldDescriptor *)v26, v67) & 1) == 0)goto LABEL_147;
  v68 = v158;
  if (v158 == v157)
  {
LABEL_110:
    (*(void (**)(google::protobuf::Message *))(*(_QWORD *)a2 + 168))(a2);
    google::protobuf::Reflection::MutableUnknownFields(v85, a2);
    google::protobuf::UnknownFieldSet::InternalMergeFrom(v86, (const google::protobuf::UnknownFieldSet *)v149.__r_.__value_.__l.__data_);
    if (*(_DWORD *)(v26 + 60) == 3)
    {
      *(_QWORD *)v161 = &__p;
      v87 = std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__emplace_unique_key_args<std::vector<int>,std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>((uint64_t **)(a1 + 48), (int **)&__p, (uint64_t)&std::piecewise_construct, (uint64_t *)v161);
      v88 = *((_DWORD *)v87 + 14);
      *((_DWORD *)v87 + 14) = v88 + 1;
      v89 = v154;
      if ((unint64_t)v154 >= v155)
      {
        v115 = __p;
        v116 = ((char *)v154 - (_BYTE *)__p) >> 2;
        v117 = v116 + 1;
        if ((unint64_t)(v116 + 1) >> 62)
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        v118 = v155 - (_QWORD)__p;
        if ((uint64_t)(v155 - (_QWORD)__p) >> 1 > v117)
          v117 = v118 >> 1;
        if ((unint64_t)v118 >= 0x7FFFFFFFFFFFFFFCLL)
          v119 = 0x3FFFFFFFFFFFFFFFLL;
        else
          v119 = v117;
        if (v119)
        {
          v120 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)&v155, v119);
          v115 = __p;
          v89 = v154;
        }
        else
        {
          v120 = 0;
        }
        v140 = &v120[4 * v116];
        v141 = &v120[4 * v119];
        *(_DWORD *)v140 = v88;
        v90 = v140 + 4;
        while (v89 != v115)
        {
          v142 = *--v89;
          *((_DWORD *)v140 - 1) = v142;
          v140 -= 4;
        }
        __p = v140;
        v154 = v90;
        v155 = (unint64_t)v141;
        if (v115)
          operator delete(v115);
      }
      else
      {
        *v154 = v88;
        v90 = v89 + 1;
      }
      v154 = v90;
    }
    *(_QWORD *)v161 = a3;
    v143 = (char *)(std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::__emplace_unique_key_args<std::vector<int>,std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>((uint64_t **)(a1 + 24), a3, (uint64_t)&std::piecewise_construct, (uint64_t *)v161)+ 7);
    if (v143 != (char *)&__p)
      std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>(v143, (char *)__p, (uint64_t)v154, ((char *)v154 - (_BYTE *)__p) >> 2);
    v91 = 1;
    goto LABEL_202;
  }
  while (1)
  {
    v69 = (_QWORD *)operator new();
    *v69 = 0;
    v69[1] = 0;
    v69[2] = 0;
    v148.__r_.__value_.__r.__words[0] = (std::string::size_type)v69;
    v70 = v68 - 1;
    v71 = *(v68 - 1);
    v72 = *(unint64_t **)(v71 + 48);
    if (v72)
    {
      v152.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v151.__r_.__value_.__r.__words[0] = v71;
      v73 = atomic_load(v72);
      if (v73 != -1)
      {
        *(_QWORD *)v161 = &v152;
        *(_QWORD *)&v161[8] = &v151;
        v147.__r_.__value_.__r.__words[0] = (std::string::size_type)v161;
        std::__call_once(v72, &v147, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v74 = *(_DWORD *)(v71 + 56);
    if (v74 != 10)
      break;
    v81 = (void **)google::protobuf::UnknownFieldSet::AddGroup((google::protobuf::UnknownFieldSet *)v148.__r_.__value_.__l.__data_, *(_DWORD *)(*(v68 - 1) + 68));
    google::protobuf::UnknownFieldSet::InternalMergeFrom(v81, (const google::protobuf::UnknownFieldSet *)v149.__r_.__value_.__l.__data_);
LABEL_106:
    v82 = v148.__r_.__value_.__r.__words[0];
    v148.__r_.__value_.__r.__words[0] = 0;
    v83 = (google::protobuf::UnknownFieldSet *)v149.__r_.__value_.__r.__words[0];
    v149.__r_.__value_.__r.__words[0] = v82;
    if (v83)
    {
      std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100]((int)&v149, v83);
      v84 = (google::protobuf::UnknownFieldSet *)v148.__r_.__value_.__r.__words[0];
      v148.__r_.__value_.__r.__words[0] = 0;
      if (v84)
        std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100]((int)&v148, v84);
    }
    --v68;
    if (v70 == v157)
      goto LABEL_110;
  }
  if (v74 == 11)
  {
    v75 = google::protobuf::UnknownFieldSet::AddLengthDelimited((google::protobuf::UnknownFieldSet *)v148.__r_.__value_.__l.__data_, *(_DWORD *)(*(v68 - 1) + 68));
    google::protobuf::io::StringOutputStream::StringOutputStream(&v152, (uint64_t)v75);
    google::protobuf::io::CodedOutputStream::CodedOutputStream((google::protobuf::io::CodedOutputStream *)v161, (google::protobuf::io::ZeroCopyOutputStream *)&v152, 1);
    v163 = google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)v149.__r_.__value_.__l.__data_, v163, (google::protobuf::io::EpsCopyOutputStream *)v161, v76);
    if (google::protobuf::io::CodedOutputStream::HadError((char **)v161))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v147, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 6511);
      v77 = google::protobuf::internal::LogMessage::operator<<(&v147, "CHECK failed: !out.HadError(): ");
      v78 = google::protobuf::internal::LogMessage::operator<<(v77, "Unexpected failure while serializing option submessage ");
      v79 = google::protobuf::internal::LogMessage::operator<<(v78, (const std::string::value_type *)&__str);
      v80 = google::protobuf::internal::LogMessage::operator<<(v79, "\".");
      google::protobuf::internal::LogFinisher::operator=((int)&v151, (const char **)&v80->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v147.__r_.__value_.__l.__data_);
    }
    google::protobuf::io::CodedOutputStream::~CodedOutputStream((google::protobuf::io::CodedOutputStream *)v161);
    goto LABEL_106;
  }
  v108 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)v161, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 6524);
  v109 = google::protobuf::internal::LogMessage::operator<<(v108, "Invalid wire type for CPPTYPE_MESSAGE: ");
  v110 = *(v68 - 1);
  v111 = *(unint64_t **)(v110 + 48);
  if (v111)
  {
    v151.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v150.__r_.__value_.__r.__words[0] = v110;
    v112 = atomic_load(v111);
    if (v112 != -1)
    {
      v147.__r_.__value_.__r.__words[0] = (std::string::size_type)&v151;
      v147.__r_.__value_.__l.__size_ = (std::string::size_type)&v150;
      v152.__r_.__value_.__r.__words[0] = (std::string::size_type)&v147;
      std::__call_once(v111, &v152, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v113 = google::protobuf::internal::LogMessage::operator<<(v109, *(_DWORD *)(v110 + 56));
  google::protobuf::internal::LogFinisher::operator=((int)&v147, (const char **)&v113->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)v161);
  v114 = (google::protobuf::UnknownFieldSet *)v148.__r_.__value_.__r.__words[0];
  v148.__r_.__value_.__r.__words[0] = 0;
  if (v114)
    std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100]((int)&v148, v114);
LABEL_147:
  v91 = 0;
LABEL_202:
  v144 = (google::protobuf::UnknownFieldSet *)v149.__r_.__value_.__r.__words[0];
  v149.__r_.__value_.__r.__words[0] = 0;
  if (v144)
    std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100]((int)&v149, v144);
LABEL_204:
  if (__p)
  {
    v154 = __p;
    operator delete(__p);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (v157)
  {
    v158 = v157;
    operator delete(v157);
  }
  return v91;
}

void sub_1BF8232A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, google::protobuf::UnknownFieldSet *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,google::protobuf::UnknownFieldSet *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  uint64_t v61;
  void *v63;

  if (*(char *)(v61 - 153) < 0)
    operator delete(*(void **)(v61 - 176));
  if (a16 < 0)
    operator delete(__p);
  if (a51 < 0)
    operator delete(a46);
  if (a53)
    operator delete(a53);
  if (a61 < 0)
    operator delete(a56);
  v63 = *(void **)(v61 - 208);
  if (v63)
  {
    *(_QWORD *)(v61 - 200) = v63;
    operator delete(v63);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const google::protobuf::UninterpretedOption *a2, google::protobuf::Message *a3)
{
  uint64_t v5;
  uint64_t FieldByName;
  const std::string::value_type **v7;
  std::string *v8;
  const std::string::value_type ***v9;
  const char *v10;
  uint64_t v11;
  char v13;
  std::string __p[2];

  v5 = (*(uint64_t (**)(google::protobuf::Message *))(*(_QWORD *)a3 + 168))(a3);
  std::string::basic_string[abi:ne180100]<0>(__p, "uninterpreted_option");
  FieldByName = google::protobuf::Descriptor::FindFieldByName(v5, (uint64_t)__p);
  v7 = (const std::string::value_type **)FieldByName;
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if (!v7)
    {
LABEL_5:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 6643);
      v8 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: field != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v8->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
  }
  else if (!FieldByName)
  {
    goto LABEL_5;
  }
  (*(void (**)(google::protobuf::Message *))(*(_QWORD *)a3 + 168))(a3);
  v11 = google::protobuf::Reflection::AddMessage(v9, a3, v7, 0, v10);
  return (*(uint64_t (**)(uint64_t, const google::protobuf::UninterpretedOption *))(*(_QWORD *)v11 + 128))(v11, a2);
}

void sub_1BF823654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _DWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  const void *v23;
  int v24;
  void *v25;
  int v26;
  _BOOL8 v27;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  int v33;
  std::string *v34;
  __int128 v35;
  std::string *v36;
  std::string *v37;
  void *v38;
  uint64_t *v39;
  std::string __p[2];
  std::string v41;
  uint64_t v42;
  uint64_t (*v43)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);

  v9 = *(_DWORD **)a6;
  v10 = *(_QWORD *)(a6 + 8) - *(_QWORD *)a6;
  v11 = (unint64_t)v10 >> 4;
  if (a2 != a3)
  {
    if ((int)v11 >= 1)
    {
      v15 = 0;
      v16 = 0;
      v39 = a2 + 1;
      do
      {
        v17 = *a2;
        if (v9[v15] == *(_DWORD *)(*a2 + 68))
        {
          v18 = *(unint64_t **)(v17 + 48);
          if (v18)
          {
            v43 = google::protobuf::FieldDescriptor::TypeOnceInit;
            v42 = v17;
            v19 = atomic_load(v18);
            if (v19 != -1)
            {
              __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v43;
              __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v42;
              v41.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
              std::__call_once(v18, &v41, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
            }
          }
          v20 = *(_DWORD *)(v17 + 56);
          if (v20 == 10)
          {
            if (v9[v15 + 1] == 4
              && (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v39, a3, a4, a5, *(_QWORD *)&v9[v15 + 2]) & 1) == 0)
            {
              return 0;
            }
          }
          else
          {
            if (v20 != 11)
            {
              google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 6703);
              v36 = google::protobuf::internal::LogMessage::operator<<(__p, "Invalid wire type for CPPTYPE_MESSAGE: ");
              v37 = google::protobuf::internal::LogMessage::operator<<(v36, v20);
              google::protobuf::internal::LogFinisher::operator=((int)&v41, (const char **)&v37->__r_.__value_.__l.__data_);
              google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
              return 0;
            }
            if (v9[v15 + 1] == 3)
            {
              memset(__p, 0, 24);
              if (v9[v15 + 1] != 3)
                __assert_rtn("length_delimited", "unknown_field_set.h", 344, "type() == TYPE_LENGTH_DELIMITED");
              v21 = *(_QWORD *)&v9[v15 + 2];
              v22 = *(char *)(v21 + 23);
              if (v22 >= 0)
                v23 = *(const void **)&v9[v15 + 2];
              else
                v23 = *(const void **)v21;
              if (v22 >= 0)
                v24 = *(unsigned __int8 *)(v21 + 23);
              else
                v24 = *(_DWORD *)(v21 + 8);
              if (google::protobuf::UnknownFieldSet::ParseFromArray((google::protobuf::UnknownFieldSet *)__p, v23, v24)&& (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v39, a3, a4, a5, __p) & 1) == 0)
              {
                v38 = (void *)__p[0].__r_.__value_.__r.__words[0];
                if (__p[0].__r_.__value_.__r.__words[0] != __p[0].__r_.__value_.__l.__size_)
                {
                  google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)__p);
                  v38 = (void *)__p[0].__r_.__value_.__r.__words[0];
                }
                if (v38)
                {
                  __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v38;
                  operator delete(v38);
                }
                return 0;
              }
              v25 = (void *)__p[0].__r_.__value_.__r.__words[0];
              if (__p[0].__r_.__value_.__r.__words[0] != __p[0].__r_.__value_.__l.__size_)
              {
                google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)__p);
                v25 = (void *)__p[0].__r_.__value_.__r.__words[0];
              }
              if (v25)
              {
                __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v25;
                operator delete(v25);
              }
            }
          }
        }
        ++v16;
        v9 = *(_DWORD **)a6;
        v15 += 4;
      }
      while (v16 < (int)((*(_QWORD *)(a6 + 8) - *(_QWORD *)a6) >> 4));
    }
    return 1;
  }
  if ((int)v11 < 1)
    return 1;
  v26 = *(_DWORD *)(a4 + 68);
  if (*v9 == v26)
  {
    v27 = 0;
  }
  else
  {
    v29 = (int)(v10 >> 4);
    v30 = ((unint64_t)v10 >> 4);
    v31 = v9 + 4;
    v32 = 1;
    do
    {
      if (v30 == v32)
        return v32 >= v29;
      v33 = *v31;
      v31 += 4;
      ++v32;
    }
    while (v33 != v26);
    v27 = v32 - 1 >= v29;
  }
  std::operator+<char>();
  v34 = std::string::append(&v41, "\" was already set.");
  v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  __p[0].__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p[0].__r_.__value_.__l.__data_);
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v41.__r_.__value_.__l.__data_);
  return v27;
}

void sub_1BF8239CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::UnknownFieldSet *a3)
{
  unint64_t *v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  double v30;
  float v31;
  _DWORD *v32;
  int v33;
  google::protobuf::DescriptorPool *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 *v38;
  __int128 v39;
  const std::string *v40;
  std::string *v41;
  int64_t v42;
  unint64_t *v43;
  unint64_t v44;
  unsigned int v45;
  unint64_t *v46;
  unint64_t v47;
  unsigned int v48;
  uint64_t v49;
  unsigned int v50;
  unint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v57;
  uint64_t ValueByName;
  unsigned int v59;
  std::string::size_type size;
  uint64_t v61;
  int v62;
  const std::string::value_type *v63;
  std::string::size_type v64;
  uint64_t v65;
  std::string *v66;
  __int128 v67;
  int v68;
  const std::string::value_type *v69;
  std::string::size_type v70;
  std::string *v71;
  __int128 v72;
  std::string *v73;
  __int128 v74;
  uint64_t v75;
  int v76;
  const std::string::value_type *v77;
  std::string::size_type v78;
  std::string *v79;
  __int128 v80;
  std::string *v81;
  __int128 v82;
  char v83;
  unsigned int v84;
  std::string *v85;
  __int128 v86;
  int v87;
  const std::string::value_type *v88;
  std::string::size_type v89;
  std::string *v90;
  __int128 v91;
  std::string *v92;
  __int128 v93;
  uint64_t v94;
  int v95;
  const std::string::value_type *v96;
  std::string::size_type v97;
  std::string *v98;
  __int128 v99;
  std::string *v100;
  __int128 v101;
  void *v102;
  std::string *v103;
  __int128 v104;
  std::string v105;
  std::string v106;
  std::string v107;
  std::string v108;
  std::string v109;
  std::string v110;
  std::string v111;

  v6 = (unint64_t *)*((_QWORD *)a2 + 6);
  if (v6)
  {
    v109.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v108.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    v7 = atomic_load(v6);
    if (v7 != -1)
    {
      v111.__r_.__value_.__r.__words[0] = (std::string::size_type)&v109;
      v111.__r_.__value_.__l.__size_ = (std::string::size_type)&v108;
      v110.__r_.__value_.__r.__words[0] = (std::string::size_type)&v111;
      std::__call_once(v6, &v110, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  v8 = *((_DWORD *)a2 + 14);
  switch(v8)
  {
    case 1:
      v15 = *((_QWORD *)this + 2);
      v16 = *(_DWORD *)(v15 + 16);
      if ((v16 & 0x20) != 0)
      {
        v30 = *(double *)(v15 + 88);
      }
      else if ((v16 & 8) != 0)
      {
        v30 = (double)*(unint64_t *)(v15 + 72);
      }
      else
      {
        if ((v16 & 0x10) == 0)
          goto LABEL_161;
        v30 = (double)*(uint64_t *)(v15 + 80);
      }
      google::protobuf::UnknownFieldSet::AddFixed64(a3, *((_DWORD *)a2 + 17), *(uint64_t *)&v30);
      return 1;
    case 2:
      v17 = *((_QWORD *)this + 2);
      v18 = *(_DWORD *)(v17 + 16);
      if ((v18 & 0x20) != 0)
      {
        v31 = *(double *)(v17 + 88);
      }
      else if ((v18 & 8) != 0)
      {
        v31 = (float)*(unint64_t *)(v17 + 72);
      }
      else
      {
        if ((v18 & 0x10) == 0)
          goto LABEL_161;
        v31 = (float)*(uint64_t *)(v17 + 80);
      }
      google::protobuf::UnknownFieldSet::AddFixed32(a3, *((_DWORD *)a2 + 17), SLODWORD(v31));
      return 1;
    case 3:
    case 16:
    case 18:
      v11 = *((_QWORD *)this + 2);
      v12 = *(_DWORD *)(v11 + 16);
      if ((v12 & 8) != 0)
      {
        v23 = *(_QWORD *)(v11 + 72);
        if (v23 < 0)
          goto LABEL_161;
        v24 = *((_DWORD *)a2 + 17);
      }
      else
      {
        if ((v12 & 0x10) == 0)
          goto LABEL_161;
        v24 = *((_DWORD *)a2 + 17);
        v23 = *(_QWORD *)(v11 + 80);
      }
      v43 = (unint64_t *)*((_QWORD *)a2 + 6);
      if (v43)
      {
        v109.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v108.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        v44 = atomic_load(v43);
        if (v44 != -1)
        {
          v111.__r_.__value_.__r.__words[0] = (std::string::size_type)&v109;
          v111.__r_.__value_.__l.__size_ = (std::string::size_type)&v108;
          v110.__r_.__value_.__r.__words[0] = (std::string::size_type)&v111;
          std::__call_once(v43, &v110, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        v8 = *((_DWORD *)a2 + 14);
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64((int)v43, v24, v23, v8, a3);
      return 1;
    case 4:
    case 6:
      v14 = *((_QWORD *)this + 2);
      if ((*(_BYTE *)(v14 + 16) & 8) == 0)
        goto LABEL_161;
      v26 = *((_DWORD *)a2 + 17);
      v27 = *(_QWORD *)(v14 + 72);
      v28 = (unint64_t *)*((_QWORD *)a2 + 6);
      if (v28)
      {
        v109.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v108.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        v29 = atomic_load(v28);
        if (v29 != -1)
        {
          v111.__r_.__value_.__r.__words[0] = (std::string::size_type)&v109;
          v111.__r_.__value_.__l.__size_ = (std::string::size_type)&v108;
          v110.__r_.__value_.__r.__words[0] = (std::string::size_type)&v111;
          std::__call_once(v28, &v110, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        v8 = *((_DWORD *)a2 + 14);
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64((int)v28, v26, v27, v8, a3);
      return 1;
    case 5:
    case 15:
    case 17:
      v9 = *((_QWORD *)this + 2);
      v10 = *(_DWORD *)(v9 + 16);
      if ((v10 & 8) != 0)
      {
        v22 = *(_QWORD *)(v9 + 72);
        if (v22 >> 31)
          goto LABEL_161;
        v45 = *((_DWORD *)a2 + 17);
        v46 = (unint64_t *)*((_QWORD *)a2 + 6);
        if (v46)
        {
          v109.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v108.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
          v47 = atomic_load(v46);
          if (v47 != -1)
          {
            v111.__r_.__value_.__r.__words[0] = (std::string::size_type)&v109;
            v111.__r_.__value_.__l.__size_ = (std::string::size_type)&v108;
            v110.__r_.__value_.__r.__words[0] = (std::string::size_type)&v111;
            std::__call_once(v46, &v110, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
          v8 = *((_DWORD *)a2 + 14);
        }
        v48 = v45;
        v49 = v22;
      }
      else
      {
        if ((v10 & 0x10) == 0)
          goto LABEL_161;
        v42 = *(_QWORD *)(v9 + 80);
        if (v42 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL)
          goto LABEL_161;
        v59 = *((_DWORD *)a2 + 17);
        LODWORD(v46) = google::protobuf::FieldDescriptor::type(a2);
        v48 = v59;
        v49 = v42;
        v8 = (int)v46;
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32((int)v46, v48, v49, v8, a3);
      return 1;
    case 7:
    case 13:
      v13 = *((_QWORD *)this + 2);
      if ((*(_BYTE *)(v13 + 16) & 8) == 0)
        goto LABEL_161;
      v25 = *(_QWORD *)(v13 + 72);
      if (HIDWORD(v25))
        goto LABEL_161;
      v50 = *((_DWORD *)a2 + 17);
      v51 = (unint64_t *)*((_QWORD *)a2 + 6);
      if (v51)
      {
        v109.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v108.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        v52 = atomic_load(v51);
        if (v52 != -1)
        {
          v111.__r_.__value_.__r.__words[0] = (std::string::size_type)&v109;
          v111.__r_.__value_.__l.__size_ = (std::string::size_type)&v108;
          v110.__r_.__value_.__r.__words[0] = (std::string::size_type)&v111;
          std::__call_once(v51, &v110, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        v8 = *((_DWORD *)a2 + 14);
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32((int)v51, v50, v25, v8, a3);
      return 1;
    case 8:
      v19 = *((_QWORD *)this + 2);
      if ((*(_BYTE *)(v19 + 16) & 1) == 0)
        goto LABEL_161;
      v32 = *(_DWORD **)(v19 + 48);
      if (*((char *)v32 + 23) < 0)
      {
        v53 = *((_QWORD *)v32 + 1);
        if (v53 != 4 || **(_DWORD **)v32 != 1702195828)
        {
          if (v53 != 5)
            goto LABEL_161;
          v32 = *(_DWORD **)v32;
          goto LABEL_77;
        }
      }
      else
      {
        v33 = *((unsigned __int8 *)v32 + 23);
        if (v33 != 4)
        {
          if (v33 != 5)
            goto LABEL_161;
LABEL_77:
          v54 = *v32;
          v55 = *((unsigned __int8 *)v32 + 4);
          if (v54 != 1936482662 || v55 != 101)
          {
LABEL_161:
            std::operator+<char>();
            v103 = std::string::append(&v110, "\".");
            v104 = *(_OWORD *)&v103->__r_.__value_.__l.__data_;
            v111.__r_.__value_.__r.__words[2] = v103->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v104;
            v103->__r_.__value_.__l.__size_ = 0;
            v103->__r_.__value_.__r.__words[2] = 0;
            v103->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)&v111);
            if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v111.__r_.__value_.__l.__data_);
            if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
            {
              v102 = (void *)v110.__r_.__value_.__r.__words[0];
LABEL_165:
              operator delete(v102);
            }
            return 0;
          }
          v57 = 0;
LABEL_168:
          v84 = *((_DWORD *)a2 + 17);
          goto LABEL_169;
        }
        if (*v32 != 1702195828)
          goto LABEL_161;
      }
      v57 = 1;
      goto LABEL_168;
    case 9:
    case 12:
      v20 = *((_QWORD *)this + 2);
      if ((*(_BYTE *)(v20 + 16) & 2) == 0)
        goto LABEL_161;
      v40 = *(const std::string **)(v20 + 56);
      v41 = (std::string *)google::protobuf::UnknownFieldSet::AddLengthDelimited(a3, *((_DWORD *)a2 + 17));
      std::string::operator=(v41, v40);
      return 1;
    case 10:
    case 11:
      result = google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(this, a2, a3);
      if (!(_DWORD)result)
        return result;
      return 1;
    case 14:
      if ((*(_BYTE *)(*((_QWORD *)this + 2) + 16) & 1) == 0)
        goto LABEL_161;
      v34 = (google::protobuf::DescriptorPool *)google::protobuf::FieldDescriptor::enum_type(a2);
      v35 = *(_QWORD *)(*((_QWORD *)this + 2) + 48);
      v36 = *(_QWORD *)(*((_QWORD *)v34 + 2) + 16);
      v37 = google::protobuf::DescriptorPool::internal_generated_pool(v34);
      google::protobuf::internal::AssignDescriptors(&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto);
      if (v36 == v37)
      {
        ValueByName = google::protobuf::EnumDescriptor::FindValueByName((uint64_t)v34, v35);
        goto LABEL_134;
      }
      v38 = (__int128 *)*((_QWORD *)v34 + 1);
      if (*((char *)v38 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v111, *(const std::string::value_type **)v38, *((_QWORD *)v38 + 1));
      }
      else
      {
        v39 = *v38;
        v111.__r_.__value_.__r.__words[2] = *((_QWORD *)v38 + 2);
        *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v39;
      }
      size = HIBYTE(v111.__r_.__value_.__r.__words[2]);
      if ((v111.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
        size = v111.__r_.__value_.__l.__size_;
      if (*(char *)(*(_QWORD *)v34 + 23) < 0)
        v61 = *(_QWORD *)(*(_QWORD *)v34 + 8);
      else
        v61 = *(unsigned __int8 *)(*(_QWORD *)v34 + 23);
      std::string::resize(&v111, size - v61, 0);
      v62 = *(char *)(v35 + 23);
      if (v62 >= 0)
        v63 = (const std::string::value_type *)v35;
      else
        v63 = *(const std::string::value_type **)v35;
      if (v62 >= 0)
        v64 = *(unsigned __int8 *)(v35 + 23);
      else
        v64 = *(_QWORD *)(v35 + 8);
      std::string::append(&v111, v63, v64);
      if (google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(*(uint64_t **)this, (uint64_t)&v111, 1) != 5)
      {
        ValueByName = 0;
        goto LABEL_130;
      }
      ValueByName = v65;
      if (*(google::protobuf::DescriptorPool **)(v65 + 24) == v34)
      {
LABEL_130:
        v83 = 1;
        goto LABEL_131;
      }
      std::operator+<char>();
      v66 = std::string::append(&v105, "\" has no value named \"");
      v67 = *(_OWORD *)&v66->__r_.__value_.__l.__data_;
      v106.__r_.__value_.__r.__words[2] = v66->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v106.__r_.__value_.__l.__data_ = v67;
      v66->__r_.__value_.__l.__size_ = 0;
      v66->__r_.__value_.__r.__words[2] = 0;
      v66->__r_.__value_.__r.__words[0] = 0;
      v68 = *(char *)(v35 + 23);
      if (v68 >= 0)
        v69 = (const std::string::value_type *)v35;
      else
        v69 = *(const std::string::value_type **)v35;
      if (v68 >= 0)
        v70 = *(unsigned __int8 *)(v35 + 23);
      else
        v70 = *(_QWORD *)(v35 + 8);
      v71 = std::string::append(&v106, v69, v70);
      v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
      v107.__r_.__value_.__r.__words[2] = v71->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v107.__r_.__value_.__l.__data_ = v72;
      v71->__r_.__value_.__l.__size_ = 0;
      v71->__r_.__value_.__r.__words[2] = 0;
      v71->__r_.__value_.__r.__words[0] = 0;
      v73 = std::string::append(&v107, "\" for option \"");
      v74 = *(_OWORD *)&v73->__r_.__value_.__l.__data_;
      v108.__r_.__value_.__r.__words[2] = v73->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v108.__r_.__value_.__l.__data_ = v74;
      v73->__r_.__value_.__l.__size_ = 0;
      v73->__r_.__value_.__r.__words[2] = 0;
      v73->__r_.__value_.__r.__words[0] = 0;
      v75 = *((_QWORD *)a2 + 1);
      v76 = *(char *)(v75 + 23);
      if (v76 >= 0)
        v77 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
      else
        v77 = *(const std::string::value_type **)v75;
      if (v76 >= 0)
        v78 = *(unsigned __int8 *)(v75 + 23);
      else
        v78 = *(_QWORD *)(v75 + 8);
      v79 = std::string::append(&v108, v77, v78);
      v80 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
      v109.__r_.__value_.__r.__words[2] = v79->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v109.__r_.__value_.__l.__data_ = v80;
      v79->__r_.__value_.__l.__size_ = 0;
      v79->__r_.__value_.__r.__words[2] = 0;
      v79->__r_.__value_.__r.__words[0] = 0;
      v81 = std::string::append(&v109, "\". This appears to be a value from a sibling type.");
      v82 = *(_OWORD *)&v81->__r_.__value_.__l.__data_;
      v110.__r_.__value_.__r.__words[2] = v81->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v110.__r_.__value_.__l.__data_ = v82;
      v81->__r_.__value_.__l.__size_ = 0;
      v81->__r_.__value_.__r.__words[2] = 0;
      v81->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)&v110);
      if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v110.__r_.__value_.__l.__data_);
      if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v109.__r_.__value_.__l.__data_);
      if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v108.__r_.__value_.__l.__data_);
      if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v107.__r_.__value_.__l.__data_);
      if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v106.__r_.__value_.__l.__data_);
      if (SHIBYTE(v105.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v105.__r_.__value_.__l.__data_);
      v83 = 0;
      ValueByName = 0;
LABEL_131:
      if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v111.__r_.__value_.__l.__data_);
      if ((v83 & 1) == 0)
        return 0;
LABEL_134:
      if (!ValueByName)
      {
        google::protobuf::FieldDescriptor::enum_type(a2);
        std::operator+<char>();
        v85 = std::string::append(&v106, "\" has no value named \"");
        v86 = *(_OWORD *)&v85->__r_.__value_.__l.__data_;
        v107.__r_.__value_.__r.__words[2] = v85->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v107.__r_.__value_.__l.__data_ = v86;
        v85->__r_.__value_.__l.__size_ = 0;
        v85->__r_.__value_.__r.__words[2] = 0;
        v85->__r_.__value_.__r.__words[0] = 0;
        v87 = *(char *)(v35 + 23);
        if (v87 >= 0)
          v88 = (const std::string::value_type *)v35;
        else
          v88 = *(const std::string::value_type **)v35;
        if (v87 >= 0)
          v89 = *(unsigned __int8 *)(v35 + 23);
        else
          v89 = *(_QWORD *)(v35 + 8);
        v90 = std::string::append(&v107, v88, v89);
        v91 = *(_OWORD *)&v90->__r_.__value_.__l.__data_;
        v108.__r_.__value_.__r.__words[2] = v90->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v108.__r_.__value_.__l.__data_ = v91;
        v90->__r_.__value_.__l.__size_ = 0;
        v90->__r_.__value_.__r.__words[2] = 0;
        v90->__r_.__value_.__r.__words[0] = 0;
        v92 = std::string::append(&v108, "\" for option \"");
        v93 = *(_OWORD *)&v92->__r_.__value_.__l.__data_;
        v109.__r_.__value_.__r.__words[2] = v92->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v109.__r_.__value_.__l.__data_ = v93;
        v92->__r_.__value_.__l.__size_ = 0;
        v92->__r_.__value_.__r.__words[2] = 0;
        v92->__r_.__value_.__r.__words[0] = 0;
        v94 = *((_QWORD *)a2 + 1);
        v95 = *(char *)(v94 + 23);
        if (v95 >= 0)
          v96 = (const std::string::value_type *)*((_QWORD *)a2 + 1);
        else
          v96 = *(const std::string::value_type **)v94;
        if (v95 >= 0)
          v97 = *(unsigned __int8 *)(v94 + 23);
        else
          v97 = *(_QWORD *)(v94 + 8);
        v98 = std::string::append(&v109, v96, v97);
        v99 = *(_OWORD *)&v98->__r_.__value_.__l.__data_;
        v110.__r_.__value_.__r.__words[2] = v98->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v110.__r_.__value_.__l.__data_ = v99;
        v98->__r_.__value_.__l.__size_ = 0;
        v98->__r_.__value_.__r.__words[2] = 0;
        v98->__r_.__value_.__r.__words[0] = 0;
        v100 = std::string::append(&v110, "\".");
        v101 = *(_OWORD *)&v100->__r_.__value_.__l.__data_;
        v111.__r_.__value_.__r.__words[2] = v100->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v111.__r_.__value_.__l.__data_ = v101;
        v100->__r_.__value_.__l.__size_ = 0;
        v100->__r_.__value_.__r.__words[2] = 0;
        v100->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)&v111);
        if (SHIBYTE(v111.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v111.__r_.__value_.__l.__data_);
        if (SHIBYTE(v110.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v110.__r_.__value_.__l.__data_);
        if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v109.__r_.__value_.__l.__data_);
        if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v108.__r_.__value_.__l.__data_);
        if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v107.__r_.__value_.__l.__data_);
        if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0)
        {
          v102 = (void *)v106.__r_.__value_.__r.__words[0];
          goto LABEL_165;
        }
        return 0;
      }
      v84 = *((_DWORD *)a2 + 17);
      v57 = *(int *)(ValueByName + 16);
LABEL_169:
      google::protobuf::UnknownFieldSet::AddVarint(a3, v84, v57);
      return 1;
    default:
      return 1;
  }
}

void sub_1BF8247C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (*(char *)(v42 - 121) < 0)
    operator delete(*(void **)(v42 - 144));
  if (a42 < 0)
    operator delete(__p);
  if (a35 < 0)
    operator delete(a30);
  if (a28 < 0)
    operator delete(a23);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  if (*(char *)(v42 - 89) < 0)
    operator delete(*(void **)(v42 - 112));
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedOutputStream::HadError(char **this)
{
  uint64_t v2;
  std::string *v3;
  char v5;
  std::string v6[2];

  v2 = google::protobuf::io::EpsCopyOutputStream::FlushAndResetBuffer((google::protobuf::io::EpsCopyOutputStream *)this, this[8]);
  this[8] = (char *)v2;
  if (!v2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.h", 1060);
    v3 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: cur_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v3->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  return *((unsigned __int8 *)this + 56);
}

void sub_1BF824A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(int a1, unsigned int a2, uint64_t a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  std::string *v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  switch(a4)
  {
    case 17:
      a3 = (2 * (_DWORD)a3) ^ ((int)a3 >> 31);
      goto LABEL_6;
    case 15:
      google::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
      break;
    case 5:
      a3 = (int)a3;
LABEL_6:
      google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
      return;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7053);
      v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_INT32: ");
      v7 = google::protobuf::internal::LogMessage::operator<<(v6, a4);
      google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      break;
  }
}

void sub_1BF824ADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(int a1, unsigned int a2, uint64_t a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  std::string *v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  if (a4 == 18)
  {
    a3 = (2 * a3) ^ (a3 >> 63);
LABEL_6:
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
    return;
  }
  if (a4 != 16)
  {
    if (a4 != 3)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7076);
      v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_INT64: ");
      v7 = google::protobuf::internal::LogMessage::operator<<(v6, a4);
      google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      return;
    }
    goto LABEL_6;
  }
  google::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
}

void sub_1BF824BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32(int a1, unsigned int a2, unsigned int a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  std::string *v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  if (a4 == 7)
  {
    google::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
  }
  else if (a4 == 13)
  {
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7094);
    v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT32: ");
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, a4);
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_1BF824C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64(int a1, unsigned int a2, uint64_t a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  std::string *v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  if (a4 == 6)
  {
    google::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
  }
  else if (a4 == 4)
  {
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7112);
    v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT64: ");
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, a4);
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_1BF824D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::UnknownFieldSet *a3)
{
  std::string *v5;
  __int128 v6;
  int v7;
  const std::string::value_type *v8;
  std::string::size_type v9;
  std::string *v10;
  __int128 v11;
  std::string *v12;
  __int128 v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  uint64_t v21;
  const google::protobuf::Descriptor *v23;
  _QWORD *Prototype;
  char *v25;
  std::string *v26;
  std::string *v27;
  std::string *v28;
  std::string::size_type v29;
  unint64_t *v30;
  unint64_t v31;
  int v32;
  std::string *v33;
  std::string *v34;
  __int128 v35;
  const std::string::value_type *size;
  std::string::size_type v37;
  std::string *v38;
  __int128 v39;
  void *v40;
  unint64_t *v41;
  unint64_t v42;
  std::string *v43;
  google::protobuf::UnknownFieldSet *v44;
  std::string *p_str;
  int v46;
  char v48;
  std::string v49;
  std::string v50;
  uint64_t v51;
  std::string __p[2];
  std::string v53;
  std::string v54;
  std::string __str;
  const google::protobuf::FieldDescriptor *v56;
  uint64_t (*v57)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);

  if ((*(_BYTE *)(*((_QWORD *)this + 2) + 16) & 4) == 0)
  {
    std::operator+<char>();
    v5 = std::string::append(&v53, "\" is a message. To set the entire message, use syntax like \"");
    v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v54.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    v7 = *(char *)(*(_QWORD *)a2 + 23);
    if (v7 >= 0)
      v8 = *(const std::string::value_type **)a2;
    else
      v8 = **(const std::string::value_type ***)a2;
    if (v7 >= 0)
      v9 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
    else
      v9 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    v10 = std::string::append(&v54, v8, v9);
    v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    v12 = std::string::append(&__str, " = { <proto text format> }\". To set fields within it, use syntax like \"");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = *(char *)(*(_QWORD *)a2 + 23);
    if (v14 >= 0)
      v15 = *(const std::string::value_type **)a2;
    else
      v15 = **(const std::string::value_type ***)a2;
    if (v14 >= 0)
      v16 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
    else
      v16 = *(_QWORD *)(*(_QWORD *)a2 + 8);
    v17 = std::string::append(&v50, v15, v16);
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    v19 = std::string::append(&v49, ".foo = value\".");
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v50.__r_.__value_.__l.__data_);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v54.__r_.__value_.__l.__data_);
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v53.__r_.__value_.__l.__data_);
    return 0;
  }
  v23 = (const google::protobuf::Descriptor *)google::protobuf::FieldDescriptor::message_type(a2);
  Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 72), v23);
  v25 = (char *)(*(uint64_t (**)(_QWORD *))(*Prototype + 24))(Prototype);
  if (!v25)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7006);
    v26 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: dynamic.get() != nullptr: ");
    v27 = google::protobuf::internal::LogMessage::operator<<(v26, "Could not create an instance of ");
    LOWORD(v50.__r_.__value_.__l.__data_) = 0;
    v50.__r_.__value_.__s.__data_[2] = 0;
    google::protobuf::FieldDescriptor::DebugStringWithOptions((uint64_t)a2, (uint64_t)&v50, &v49);
    v28 = google::protobuf::internal::LogMessage::operator<<(v27, (const std::string::value_type *)&v49);
    google::protobuf::internal::LogFinisher::operator=((int)&__str, (const char **)&v28->__r_.__value_.__l.__data_);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v49.__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
  }
  v50.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1E7929818;
  *(_OWORD *)&v50.__r_.__value_.__r.__words[1] = 0uLL;
  v51 = 0;
  v29 = *(_QWORD *)this;
  v53.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1E7929860;
  v53.__r_.__value_.__l.__size_ = v29;
  google::protobuf::TextFormat::Parser::Parser((google::protobuf::TextFormat::Parser *)&v49);
  v49.__r_.__value_.__r.__words[0] = (std::string::size_type)&v50;
  v49.__r_.__value_.__l.__size_ = (std::string::size_type)&v53;
  v21 = google::protobuf::TextFormat::Parser::ParseFromString(&v49.__r_.__value_.__l.__data_, *(_QWORD *)(*((_QWORD *)this + 2) + 64), v25);
  if ((v21 & 1) != 0)
  {
    memset(&__str, 0, sizeof(__str));
    google::protobuf::MessageLite::SerializeToString(v25, &__str);
    v30 = (unint64_t *)*((_QWORD *)a2 + 6);
    if (v30)
    {
      v56 = a2;
      v57 = google::protobuf::FieldDescriptor::TypeOnceInit;
      v31 = atomic_load(v30);
      if (v31 != -1)
      {
        __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
        __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v56;
        v54.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
        std::__call_once(v30, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
      }
    }
    v32 = *((_DWORD *)a2 + 14);
    if (v32 == 11)
    {
      v33 = (std::string *)google::protobuf::UnknownFieldSet::AddLengthDelimited(a3, *((_DWORD *)a2 + 17));
      std::string::operator=(v33, &__str);
    }
    else
    {
      v41 = (unint64_t *)*((_QWORD *)a2 + 6);
      if (v41)
      {
        v56 = a2;
        v57 = google::protobuf::FieldDescriptor::TypeOnceInit;
        v42 = atomic_load(v41);
        if (v42 != -1)
        {
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v57;
          __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v56;
          v54.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
          std::__call_once(v41, &v54, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
        v32 = *((_DWORD *)a2 + 14);
      }
      if (v32 != 10)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7026);
        v43 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v48, (const char **)&v43->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      }
      v44 = (google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::AddGroup(a3, *((_DWORD *)a2 + 17));
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_str = &__str;
      else
        p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v46 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      else
        v46 = __str.__r_.__value_.__r.__words[1];
      google::protobuf::UnknownFieldSet::ParseFromArray(v44, p_str, v46);
    }
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_65;
    v40 = (void *)__str.__r_.__value_.__r.__words[0];
  }
  else
  {
    std::operator+<char>();
    v34 = std::string::append(&v54, "\": ");
    v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v35;
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    if (v51 >= 0)
      size = &v50.__r_.__value_.__s.__data_[8];
    else
      size = (const std::string::value_type *)v50.__r_.__value_.__l.__size_;
    if (v51 >= 0)
      v37 = HIBYTE(v51);
    else
      v37 = v50.__r_.__value_.__r.__words[2];
    v38 = std::string::append(&__str, size, v37);
    v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v39;
    v38->__r_.__value_.__l.__size_ = 0;
    v38->__r_.__value_.__r.__words[2] = 0;
    v38->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*(_QWORD *)this, (const std::string::value_type *)(*((_QWORD *)this + 1) + 24), *((_QWORD *)this + 2), 8, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v54.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_65;
    v40 = (void *)v54.__r_.__value_.__r.__words[0];
  }
  operator delete(v40);
LABEL_65:
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)&v49);
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)&v53);
  v50.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1E7929818;
  if (SHIBYTE(v51) < 0)
    operator delete((void *)v50.__r_.__value_.__l.__size_);
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)&v50);
  if (v25)
    (*(void (**)(char *))(*(_QWORD *)v25 + 8))(v25);
  return v21;
}

void sub_1BF825258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  google::protobuf::internal::LogMessage::~LogMessage(&a27);
  if (*(char *)(v44 - 105) < 0)
    operator delete(*(void **)(v43 + 56));
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)&__p);
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)&a37);
  if (v42)
    (*(void (**)(uint64_t))(*(_QWORD *)v42 + 8))(v42);
  _Unwind_Resume(a1);
}

void google::protobuf::`anonymous namespace'::AggregateErrorCollector::~AggregateErrorCollector(void **this)
{
  *this = off_1E7929818;
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)this);
}

{
  *this = off_1E7929818;
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)this);
  JUMPOUT(0x1C3B8D890);
}

unint64_t google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(uint64_t a1, uint64_t a2)
{
  std::string *p_str;
  unint64_t v4;
  std::string v6;
  std::string __str;
  char v8;

  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __str = *(std::string *)a2;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    if (!__str.__r_.__value_.__l.__size_)
      goto LABEL_13;
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  else
  {
    if (!*((_BYTE *)&__str.__r_.__value_.__s + 23))
      goto LABEL_13;
    p_str = &__str;
  }
  if (p_str->__r_.__value_.__s.__data_[0] == 46)
  {
    std::string::basic_string(&v6, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v8);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    __str = v6;
  }
LABEL_13:
  v4 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(_QWORD **)(a1 + 32), a1, (uint64_t)&__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  return v4;
}

void sub_1BF825500(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::InternalTypeOnceInit(google::protobuf::FieldDescriptor *this)
{
  std::string *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __int128 *v8;
  __int128 v9;
  std::string::size_type v10;
  std::string *v11;
  __int128 v12;
  uint64_t v13;
  int v14;
  const std::string::value_type *v15;
  std::string::size_type v16;
  std::string *v17;
  std::string::size_type v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  std::string *v22;
  std::string v23;
  std::string v24;
  std::string __str;
  char v26;
  _QWORD v27[3];

  v27[2] = *MEMORY[0x1E0C80C00];
  if (!*(_BYTE *)(*((_QWORD *)this + 5) + 65))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7147);
    v2 = google::protobuf::internal::LogMessage::operator<<(&__str, "CHECK failed: file()->finished_building_ == true: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v24, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
  }
  v3 = *((_QWORD *)this + 16);
  if (v3)
  {
    v4 = google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(*(_QWORD *)(*((_QWORD *)this + 5) + 16), v3);
    if (v4 == 4)
    {
      *((_DWORD *)this + 14) = 14;
      v6 = (char *)this + 112;
    }
    else
    {
      if (v4 != 1)
        goto LABEL_9;
      *((_DWORD *)this + 14) = 11;
      v6 = (char *)this + 104;
    }
    *(_QWORD *)v6 = v5;
  }
LABEL_9:
  v7 = *((_QWORD *)this + 14);
  if (v7 && !*((_QWORD *)this + 18))
  {
    if (!*((_QWORD *)this + 17))
      goto LABEL_34;
    v8 = *(__int128 **)(v7 + 8);
    if (*((char *)v8 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)v8, *((_QWORD *)v8 + 1));
    }
    else
    {
      v9 = *v8;
      __str.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v9;
    }
    v10 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v10 == -1)
    {
      std::string::operator=(&__str, *((const std::string **)this + 17));
    }
    else
    {
      std::string::basic_string(&v23, &__str, 0, v10, (std::allocator<char> *)&v26);
      v11 = std::string::append(&v23, ".");
      v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
      v24.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v12;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      v13 = *((_QWORD *)this + 17);
      v14 = *(char *)(v13 + 23);
      if (v14 >= 0)
        v15 = (const std::string::value_type *)*((_QWORD *)this + 17);
      else
        v15 = *(const std::string::value_type **)v13;
      if (v14 >= 0)
        v16 = *(unsigned __int8 *)(v13 + 23);
      else
        v16 = *(_QWORD *)(v13 + 8);
      v17 = std::string::append(&v24, v15, v16);
      v18 = v17->__r_.__value_.__r.__words[0];
      v27[0] = v17->__r_.__value_.__l.__size_;
      *(_QWORD *)((char *)v27 + 7) = *(std::string::size_type *)((char *)&v17->__r_.__value_.__r.__words[1] + 7);
      v19 = HIBYTE(v17->__r_.__value_.__r.__words[2]);
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__str.__r_.__value_.__l.__data_);
      __str.__r_.__value_.__r.__words[0] = v18;
      __str.__r_.__value_.__l.__size_ = v27[0];
      *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v27 + 7);
      *((_BYTE *)&__str.__r_.__value_.__s + 23) = v19;
      if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v24.__r_.__value_.__l.__data_);
      if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v23.__r_.__value_.__l.__data_);
    }
    if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(*(_QWORD *)(*((_QWORD *)this + 5) + 16), (uint64_t)&__str) == 5)*((_QWORD *)this + 18) = v20;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    if (!*((_QWORD *)this + 18))
    {
LABEL_34:
      v21 = *((_QWORD *)this + 14);
      if (!*(_DWORD *)(v21 + 44))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7179);
        v22 = google::protobuf::internal::LogMessage::operator<<(&__str, "CHECK failed: enum_type_->value_count(): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v24, (const char **)&v22->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
        v21 = *((_QWORD *)this + 14);
      }
      *((_QWORD *)this + 18) = *(_QWORD *)(v21 + 48);
    }
  }
}

void sub_1BF8257C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FieldDescriptor::PrintableNameForExtension(google::protobuf::FieldDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  char *v5;
  google::protobuf::FieldDescriptor *v7;
  uint64_t (*v8)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v9;
  _QWORD v10[2];

  if (!*((_BYTE *)this + 66) || !*(_BYTE *)(*(_QWORD *)(*((_QWORD *)this + 10) + 32) + 72))
    goto LABEL_9;
  v2 = (unint64_t *)*((_QWORD *)this + 6);
  if (v2)
  {
    v7 = this;
    v8 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v10[0] = &v8;
      v10[1] = &v7;
      v9 = v10;
      std::__call_once(v2, &v9, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*((_DWORD *)this + 14) == 11
    && *((_DWORD *)this + 15) == 1
    && (v4 = *((_QWORD *)this + 12), v4 == google::protobuf::FieldDescriptor::message_type(this)))
  {
    v5 = (char *)(google::protobuf::FieldDescriptor::message_type(this) + 8);
  }
  else
  {
LABEL_9:
    v5 = (char *)this + 8;
  }
  return *(_QWORD *)v5;
}

void google::protobuf::FileDescriptor::InternalDependenciesOnceInit(google::protobuf::FileDescriptor *this)
{
  std::string *v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  char v6;
  std::string v7[2];

  if (!*((_BYTE *)this + 65))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7223);
    v2 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: finished_building_ == true: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  v3 = *((_DWORD *)this + 8);
  if (v3 >= 1)
  {
    for (i = 0; i < v3; ++i)
    {
      v5 = *(_QWORD *)(*((_QWORD *)this + 10) + 8 * i);
      if (v5)
      {
        *(_QWORD *)(*((_QWORD *)this + 9) + 8 * i) = google::protobuf::DescriptorPool::FindFileByName(*((_QWORD *)this + 2), v5);
        v3 = *((_DWORD *)this + 8);
      }
    }
  }
}

void sub_1BF8259A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::LazyDescriptor::Once(google::protobuf::internal::LazyDescriptor *this)
{
  unint64_t *v2;
  unint64_t v3;
  google::protobuf::internal::LazyDescriptor *v4;
  _QWORD *v5;
  _QWORD v6[2];

  v2 = (unint64_t *)*((_QWORD *)this + 2);
  if (v2)
  {
    v4 = this;
    v3 = atomic_load(v2);
    if (v3 != -1)
    {
      v6[0] = google::protobuf::internal::LazyDescriptor::OnceStatic;
      v6[1] = &v4;
      v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>);
    }
  }
}

void google::protobuf::internal::LazyDescriptor::OnceInternal(google::protobuf::internal::LazyDescriptor *this)
{
  std::string *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  std::string v6[2];

  if (!*(_BYTE *)(*((_QWORD *)this + 3) + 65))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 7286);
    v2 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: file_->finished_building_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  if (!*(_QWORD *)this)
  {
    v3 = *((_QWORD *)this + 1);
    if (v3)
    {
      if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(*(_QWORD *)(*((_QWORD *)this + 3) + 16), v3) == 1)*(_QWORD *)this = v4;
    }
  }
}

void sub_1BF825AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_DWORD *google::protobuf::DescriptorPool::Tables::CheckPoint::CheckPoint(_DWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (a2[25] - a2[24]) >> 3;
  *result = (a2[22] - a2[21]) >> 3;
  result[1] = v2;
  v3 = (a2[31] - a2[30]) >> 3;
  result[2] = (a2[28] - a2[27]) >> 3;
  result[3] = v3;
  v4 = (a2[50] - a2[49]) >> 3;
  result[4] = (a2[19] - a2[18]) >> 3;
  result[5] = v4;
  v5 = (a2[56] - a2[55]) >> 4;
  result[6] = (a2[53] - a2[52]) >> 3;
  result[7] = v5;
  return result;
}

uint64_t **std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::find<char const*>(_QWORD *a1, const char **a2)
{
  const char *v2;
  char v3;
  unint64_t v4;
  unsigned __int8 *v5;
  int v6;
  int8x8_t v7;
  uint8x8_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t ***v11;
  uint64_t **i;
  unint64_t v13;

  v2 = *a2;
  v3 = **a2;
  if (v3)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(v2 + 1);
    do
    {
      v4 = 5 * v4 + v3;
      v6 = *v5++;
      v3 = v6;
    }
    while (v6);
  }
  else
  {
    v4 = 0;
  }
  v7 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v7)
    return 0;
  v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    v10 = v4;
    if (v4 >= *(_QWORD *)&v7)
      v10 = v4 % *(_QWORD *)&v7;
  }
  else
  {
    v10 = (*(_QWORD *)&v7 - 1) & v4;
  }
  v11 = *(uint64_t ****)(*a1 + 8 * v10);
  if (!v11)
    return 0;
  for (i = *v11; i; i = (uint64_t **)*i)
  {
    v13 = (unint64_t)i[1];
    if (v4 == v13)
    {
      if (!strcmp((const char *)i[2], v2))
        return i;
    }
    else
    {
      if (v9 > 1)
      {
        if (v13 >= *(_QWORD *)&v7)
          v13 %= *(_QWORD *)&v7;
      }
      else
      {
        v13 &= *(_QWORD *)&v7 - 1;
      }
      if (v13 != v10)
        return 0;
    }
  }
  return i;
}

uint64_t google::protobuf::internal::OnShutdownDelete<google::protobuf::EncodedDescriptorDatabase>(google::protobuf::EncodedDescriptorDatabase *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t *std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>(uint64_t a1, unint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v5;
  int v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(uint64_t **)(a1 + 8);
  v2 = (uint64_t *)(a1 + 8);
  v3 = v4;
  if (!v4)
    return v2;
  v5 = *a2;
  v6 = *((_DWORD *)a2 + 2);
  v7 = v2;
  do
  {
    v8 = v3[4];
    if (v8 >= v5)
    {
      if (v5 >= v8)
      {
        if (*((_DWORD *)v3 + 10) < v6)
          ++v3;
        else
          v7 = v3;
      }
      else
      {
        v7 = v3;
      }
    }
    else
    {
      ++v3;
    }
    v3 = (uint64_t *)*v3;
  }
  while (v3);
  if (v7 == v2)
    return v2;
  v9 = v7[4];
  if (v5 < v9 || v9 >= v5 && v6 < *((_DWORD *)v7 + 10))
    return v2;
  return v7;
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FileDescriptorTables const*),google::protobuf::FileDescriptorTables const*&&>>(uint64_t a1)
{
  return (***(uint64_t (****)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

uint64_t google::protobuf::FindPtrOrNull<std::unordered_map<std::pair<google::protobuf::EnumDescriptor const*,int>,google::protobuf::EnumValueDescriptor const*,google::protobuf::`anonymous namespace'::PointerIntegerPairHash<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::equal_to<std::pair<google::protobuf::EnumDescriptor const*,int>>,std::allocator<std::pair<std::pair<google::protobuf::EnumDescriptor const*,int> const,google::protobuf::EnumValueDescriptor const*>>>>(_QWORD *a1, uint64_t a2)
{
  int8x8_t v2;
  int v3;
  unint64_t v4;
  uint8x8_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *i;
  unint64_t v9;

  v2 = (int8x8_t)a1[1];
  if (v2)
  {
    v3 = *(_DWORD *)(a2 + 8);
    v4 = (16777619 * v3) ^ (16777499 * *(_QWORD *)a2);
    v5 = (uint8x8_t)vcnt_s8(v2);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      v6 = (16777619 * v3) ^ (16777499 * *(_QWORD *)a2);
      if (v4 >= *(_QWORD *)&v2)
        v6 = v4 % *(_QWORD *)&v2;
    }
    else
    {
      v6 = v4 & (*(_QWORD *)&v2 - 1);
    }
    v7 = *(uint64_t ***)(*a1 + 8 * v6);
    if (v7)
    {
      for (i = *v7; i; i = (uint64_t *)*i)
      {
        v9 = i[1];
        if (v4 == v9)
        {
          if (i[2] == *(_QWORD *)a2 && *((_DWORD *)i + 6) == v3)
            return i[4];
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= *(_QWORD *)&v2)
              v9 %= *(_QWORD *)&v2;
          }
          else
          {
            v9 &= *(_QWORD *)&v2 - 1;
          }
          if (v9 != v6)
            return 0;
        }
      }
    }
  }
  return 0;
}

{
  int8x8_t v2;
  int v3;
  unint64_t v4;
  uint8x8_t v5;
  uint64_t v6;
  uint64_t **v7;
  uint64_t *i;
  unint64_t v9;

  v2 = (int8x8_t)a1[1];
  if (v2)
  {
    v3 = *(_DWORD *)(a2 + 8);
    v4 = (16777619 * v3) ^ (16777499 * *(_QWORD *)a2);
    v5 = (uint8x8_t)vcnt_s8(v2);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      v6 = (16777619 * v3) ^ (16777499 * *(_QWORD *)a2);
      if (v4 >= *(_QWORD *)&v2)
        v6 = v4 % *(_QWORD *)&v2;
    }
    else
    {
      v6 = v4 & (*(_QWORD *)&v2 - 1);
    }
    v7 = *(uint64_t ***)(*a1 + 8 * v6);
    if (v7)
    {
      for (i = *v7; i; i = (uint64_t *)*i)
      {
        v9 = i[1];
        if (v9 == v4)
        {
          if (i[2] == *(_QWORD *)a2 && *((_DWORD *)i + 6) == v3)
            return i[4];
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= *(_QWORD *)&v2)
              v9 %= *(_QWORD *)&v2;
          }
          else
          {
            v9 &= *(_QWORD *)&v2 - 1;
          }
          if (v9 != v6)
            return 0;
        }
      }
    }
  }
  return 0;
}

void google::protobuf::`anonymous namespace'::SourceLocationCommentPrinter::FormatComment(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  std::vector<std::string>::pointer begin;
  uint64_t v6;
  unint64_t v7;
  int v8;
  BOOL v9;
  void **v10;
  uint64_t v11;
  std::string *v12;
  std::string *v13;
  int v14;
  std::string::size_type size;
  __int128 v16;
  std::vector<std::string> v17;
  std::string v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  std::string *v35;
  int v36;
  std::vector<std::string> *v37;
  int v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&v18, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    v18 = *(std::string *)a2;
  google::protobuf::StripWhitespace(&v18);
  memset(&v17, 0, sizeof(v17));
  google::protobuf::SplitStringUsing(&v18, "\n", &v17);
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  begin = v17.__begin_;
  if (v17.__end_ != v17.__begin_)
  {
    v6 = 0;
    v7 = 0;
    do
    {
      v8 = *(char *)(a1 + 127);
      v9 = v8 < 0;
      v10 = *(void ***)(a1 + 104);
      v11 = *(_QWORD *)(a1 + 112);
      if (v8 >= 0)
        v10 = (void **)(a1 + 104);
      v37 = (std::vector<std::string> *)v10;
      v12 = &begin[v6];
      v8 = v8;
      if (v9)
        v8 = v11;
      v38 = v8;
      if ((v12->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = v12;
      else
        v13 = (std::string *)v12->__r_.__value_.__r.__words[0];
      v35 = v13;
      v14 = HIBYTE(v12->__r_.__value_.__r.__words[2]);
      size = v12->__r_.__value_.__l.__size_;
      if ((v14 & 0x80u) == 0)
        LODWORD(size) = v14;
      v36 = size;
      v33 = 0;
      v34 = -1;
      v31 = 0;
      v32 = -1;
      v29 = 0;
      v30 = -1;
      v27 = 0;
      v28 = -1;
      v25 = 0;
      v26 = -1;
      v23 = 0;
      v24 = -1;
      v21 = 0;
      v22 = -1;
      v19 = 0;
      v20 = -1;
      *((_QWORD *)&v16 + 1) = &v23;
      *(_QWORD *)&v16 = &v25;
      google::protobuf::strings::SubstituteAndAppend(a3, "$0// $1\n", (uint64_t)&v37, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, (uint64_t)&v27, v16, (uint64_t)&v21, (uint64_t)&v19);
      ++v7;
      begin = v17.__begin_;
      ++v6;
    }
    while (0xAAAAAAAAAAAAAAABLL * (((char *)v17.__end_ - (char *)v17.__begin_) >> 3) > v7);
  }
  v37 = &v17;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v37);
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v18.__r_.__value_.__l.__data_);
}

void sub_1BF8260D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::`anonymous namespace'::RetrieveOptions(int a1, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  const google::protobuf::Descriptor *v9;
  const google::protobuf::Descriptor *v12;
  _QWORD *Prototype;
  uint64_t v14;
  char v15;
  const google::protobuf::Message *v16;
  std::string *v17;
  uint64_t v18;
  std::string *v19;
  _BOOL8 OptionsAssumingRightPool;
  char v21;
  std::string __p[2];
  _BYTE v23[96];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(*(_QWORD *)((*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 168))(a2)
                             + 16)
                 + 16) == a3)
  v8 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 168))(a2);
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(_QWORD **)(a3 + 32), a3, *(_QWORD *)(v8 + 8)) != 1|| v9 == 0)
  {
  }
  v12 = v9;
  google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v23);
  Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((google::protobuf::DynamicMessageFactory *)v23, v12);
  v14 = (*(uint64_t (**)(_QWORD *))(*Prototype + 24))(Prototype);
  google::protobuf::MessageLite::SerializeAsString(a2, (uint64_t)__p);
  v15 = google::protobuf::MessageLite::ParseFromString(v14, __p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p[0].__r_.__value_.__l.__data_);
  v16 = (const google::protobuf::Message *)v14;
  if ((v15 & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/descriptor.cc", 2300);
    v17 = google::protobuf::internal::LogMessage::operator<<(__p, "Found invalid proto option data for: ");
    v18 = (*(uint64_t (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 168))(a2);
    v19 = google::protobuf::internal::LogMessage::operator<<(v17, *(const std::string::value_type **)(v18 + 8));
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v19->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    v16 = a2;
  }
  if (v14)
    (*(void (**)(uint64_t))(*(_QWORD *)v14 + 8))(v14);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v23);
  return OptionsAssumingRightPool;
}

void sub_1BF826310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  uint64_t v19;

  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  if (v19)
    (*(void (**)(uint64_t))(*(_QWORD *)v19 + 8))(v19);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a19);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::`anonymous namespace'::RetrieveOptionsAssumingRightPool(int a1, const google::protobuf::Message *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  _QWORD *v9;
  unint64_t v10;
  const google::protobuf::FieldDescriptor *v11;
  int v12;
  int v13;
  unsigned int i;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  std::string *p_p;
  std::string::size_type size;
  std::string *value;
  uint64_t v22;
  uint64_t v23;
  std::string *v24;
  std::string::size_type v25;
  char v26;
  size_t v27;
  std::string *v28;
  std::string *v29;
  std::string *v30;
  std::string::size_type v31;
  std::string *v32;
  std::string::size_type v33;
  char v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  std::string *v42;
  std::string *v43;
  uint64_t v44;
  uint64_t v45;
  const std::string::value_type ***v47;
  std::string::size_type __n;
  int v49;
  google::protobuf::Message *v50;
  std::__split_buffer<std::string> v51;
  _QWORD *v52;
  _QWORD *v53[4];
  std::string __p;
  std::string v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  std::string v59;
  _QWORD v60[4];

  v60[2] = *MEMORY[0x1E0C80C00];
  std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)a3);
  (*(void (**)(const google::protobuf::Message *))(*(_QWORD *)a2 + 168))(a2);
  v56 = 0;
  v57 = 0;
  v58 = 0;
  v47 = (const std::string::value_type ***)v6;
  v50 = a2;
  google::protobuf::Reflection::ListFields(v6, a2, (uint64_t)&v56);
  v9 = v57;
  if (v57 != v56)
  {
    v10 = 0;
    v49 = a1 + 1;
    __n = 2 * a1;
    v9 = v56;
    while (1)
    {
      v11 = (const google::protobuf::FieldDescriptor *)v9[v10];
      v12 = *((_DWORD *)v11 + 15);
      if (v12 != 3)
        break;
      v13 = google::protobuf::Reflection::FieldSize(v47, v50, v11, v7, v8);
      if (v13 >= 1)
        goto LABEL_7;
LABEL_71:
      ++v10;
      v9 = v56;
      if (v10 >= v57 - v56)
        goto LABEL_72;
    }
    v13 = 1;
LABEL_7:
    for (i = 0; i != v13; ++i)
    {
      memset(&v55, 0, sizeof(v55));
      v15 = v56[v10];
      v16 = *(unint64_t **)(v15 + 48);
      if (v16)
      {
        v59.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v60[0] = v15;
        v17 = atomic_load(v16);
        if (v17 != -1)
        {
          v51.__first_ = &v59;
          v51.__begin_ = (std::__split_buffer<std::string>::pointer)v60;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v51;
          std::__call_once(v16, &__p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
        }
      }
      if ((*(_DWORD *)(v15 + 56) & 0xFFFFFFFE) == 0xA)
      {
        memset(&__p, 0, sizeof(__p));
        google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)&v51);
        LODWORD(v51.__first_) = v49;
        if (v12 == 3)
          v18 = i;
        else
          v18 = 0xFFFFFFFFLL;
        google::protobuf::TextFormat::Printer::PrintFieldValueToString((google::protobuf::TextFormat::Printer *)&v51, v50, (const google::protobuf::FieldDescriptor *)v56[v10], (const char *)v18, (uint64_t)&__p);
        std::string::append(&v55, "{\n");
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        else
          size = __p.__r_.__value_.__l.__size_;
        std::string::append(&v55, (const std::string::value_type *)p_p, size);
        std::string::append(&v55, __n, 32);
        std::string::append(&v55, "}");
        std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy((uint64_t)v53, v53[1]);
        std::__tree<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::__map_value_compare<google::protobuf::FieldDescriptor const*,std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>,std::less<google::protobuf::FieldDescriptor const*>,true>,std::allocator<std::__value_type<google::protobuf::FieldDescriptor const*,std::unique_ptr<google::protobuf::TextFormat::FastFieldValuePrinter const>>>>::destroy((uint64_t)&v51.__end_cap_.std::__compressed_pair_elem<std::allocator<std::string> &, 1, false>, v52);
        value = v51.__end_cap_.__value_;
        v51.__end_cap_.__value_ = 0;
        if (value)
          (*(void (**)(std::string *))(value->__r_.__value_.__r.__words[0] + 8))(value);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
      }
      else
      {
        if (v12 == 3)
          v22 = i;
        else
          v22 = 0xFFFFFFFFLL;
        google::protobuf::TextFormat::PrintFieldValueToString(v50, (const google::protobuf::FieldDescriptor *)v56[v10], (const char *)v22, (uint64_t)&v55);
      }
      memset(&__p, 0, sizeof(__p));
      v23 = v56[v10];
      if (*(_BYTE *)(v23 + 66))
      {
        std::operator+<char>();
        v24 = std::string::append((std::string *)&v51, ")");
        v25 = v24->__r_.__value_.__r.__words[0];
        v59.__r_.__value_.__r.__words[0] = v24->__r_.__value_.__l.__size_;
        *(std::string::size_type *)((char *)v59.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v24->__r_.__value_.__r.__words[1] + 7);
        v26 = HIBYTE(v24->__r_.__value_.__r.__words[2]);
        v24->__r_.__value_.__l.__size_ = 0;
        v24->__r_.__value_.__r.__words[2] = 0;
        v24->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
          operator delete(__p.__r_.__value_.__l.__data_);
        __p.__r_.__value_.__r.__words[0] = v25;
        __p.__r_.__value_.__l.__size_ = v59.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v59.__r_.__value_.__r.__words + 7);
        *((_BYTE *)&__p.__r_.__value_.__s + 23) = v26;
        if (SHIBYTE(v51.__end_) < 0)
          operator delete(v51.__first_);
      }
      else
      {
        std::string::operator=(&__p, *(const std::string **)v23);
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v27 = __p.__r_.__value_.__l.__size_;
      std::string::basic_string[abi:ne180100]((uint64_t)&v59, v27 + 3);
      if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v28 = &v59;
      else
        v28 = (std::string *)v59.__r_.__value_.__r.__words[0];
      if (v27)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v29 = &__p;
        else
          v29 = (std::string *)__p.__r_.__value_.__r.__words[0];
        memmove(v28, v29, v27);
      }
      *(_DWORD *)((char *)&v28->__r_.__value_.__l.__data_ + v27) = 2112800;
      if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v30 = &v55;
      else
        v30 = (std::string *)v55.__r_.__value_.__r.__words[0];
      if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v31 = HIBYTE(v55.__r_.__value_.__r.__words[2]);
      else
        v31 = v55.__r_.__value_.__l.__size_;
      v32 = std::string::append(&v59, (const std::string::value_type *)v30, v31);
      v33 = v32->__r_.__value_.__r.__words[0];
      v60[0] = v32->__r_.__value_.__l.__size_;
      *(_QWORD *)((char *)v60 + 7) = *(std::string::size_type *)((char *)&v32->__r_.__value_.__r.__words[1] + 7);
      v34 = HIBYTE(v32->__r_.__value_.__r.__words[2]);
      v32->__r_.__value_.__l.__size_ = 0;
      v32->__r_.__value_.__r.__words[2] = 0;
      v32->__r_.__value_.__r.__words[0] = 0;
      v35 = *(_QWORD *)(a3 + 8);
      v36 = *(_QWORD *)(a3 + 16);
      if (v35 >= v36)
      {
        v38 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v35 - *(_QWORD *)a3) >> 3);
        v39 = v38 + 1;
        if (v38 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        v40 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v36 - *(_QWORD *)a3) >> 3);
        if (2 * v40 > v39)
          v39 = 2 * v40;
        if (v40 >= 0x555555555555555)
          v41 = 0xAAAAAAAAAAAAAAALL;
        else
          v41 = v39;
        v51.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
        if (v41)
          v42 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(a3 + 16, v41);
        else
          v42 = 0;
        v43 = v42 + v38;
        v51.__first_ = v42;
        v51.__begin_ = v43;
        v51.__end_cap_.__value_ = &v42[v41];
        v43->__r_.__value_.__r.__words[0] = v33;
        v43->__r_.__value_.__l.__size_ = v60[0];
        *(std::string::size_type *)((char *)&v43->__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v60 + 7);
        *((_BYTE *)&v43->__r_.__value_.__s + 23) = v34;
        v51.__end_ = v43 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &v51);
        v37 = *(_QWORD *)(a3 + 8);
        std::__split_buffer<std::string>::~__split_buffer(&v51);
      }
      else
      {
        *(_QWORD *)v35 = v33;
        *(_QWORD *)(v35 + 8) = v60[0];
        *(_QWORD *)(v35 + 15) = *(_QWORD *)((char *)v60 + 7);
        *(_BYTE *)(v35 + 23) = v34;
        v37 = v35 + 24;
        *(_QWORD *)(a3 + 8) = v35 + 24;
      }
      *(_QWORD *)(a3 + 8) = v37;
      if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v59.__r_.__value_.__l.__data_);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v55.__r_.__value_.__l.__data_);
    }
    goto LABEL_71;
  }
LABEL_72:
  v45 = *(_QWORD *)a3;
  v44 = *(_QWORD *)(a3 + 8);
  if (v9)
  {
    v57 = v9;
    operator delete(v9);
  }
  return v45 != v44;
}

void sub_1BF8268A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__split_buffer<std::string> *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,void *__pa,int a31,__int16 a32,char a33,char a34)
{
  uint64_t v34;
  void *v36;

  v36 = *(void **)(v34 - 160);
  if (v36)
  {
    *(_QWORD *)(v34 - 152) = v36;
    operator delete(v36);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::FileDescriptorTables *google::protobuf::internal::OnShutdownDelete<google::protobuf::FileDescriptorTables>(google::protobuf::FileDescriptorTables *)::{lambda(void const*)#1}::__invoke(google::protobuf::FileDescriptorTables *result)
{
  if (result)
  {
    google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
    JUMPOUT(0x1C3B8D890);
  }
  return result;
}

uint64_t google::protobuf::`anonymous namespace'::NewAllowedProto3Extendee(google::protobuf::_anonymous_namespace_ *this)
{
  uint64_t v1;
  uint64_t v2;
  const std::string::value_type *v3;
  std::string *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;
  std::string *v8;
  __int128 v9;
  std::string v11;
  std::string v12;
  void *__p[2];
  std::string::size_type v14;

  v1 = operator new();
  v2 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)v1 = v1 + 8;
  do
  {
    std::string::basic_string[abi:ne180100]<0>(&v12, "google.protobuf.");
    v3 = off_1E79297C8[v2];
    v4 = std::string::append(&v12, v3);
    v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v14 = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>((uint64_t **)v1, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v14) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v12.__r_.__value_.__l.__data_);
    std::string::basic_string[abi:ne180100]<0>(&v11, "proto");
    v6 = std::string::append(&v11, "2.");
    v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v12.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v12.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    v8 = std::string::append(&v12, v3);
    v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v14 = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>((uint64_t **)v1, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v14) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v12.__r_.__value_.__l.__data_);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v11.__r_.__value_.__l.__data_);
    ++v2;
  }
  while (v2 != 8);
  return v1;
}

void sub_1BF826B24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::OnShutdownDelete<std::set<std::string>>(std::set<std::string> *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result)
  {
    std::__tree<std::string>::destroy(result, *(char **)(result + 8));
    JUMPOUT(0x1C3B8D890);
  }
  return result;
}

std::string *google::protobuf::`anonymous namespace'::AggregateErrorCollector::AddError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  std::string *v5;
  int v6;
  const std::string::value_type *v7;
  std::string::size_type v8;

  v5 = (std::string *)(a1 + 8);
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(a1 + 31))
      goto LABEL_4;
    goto LABEL_3;
  }
  if (*(_QWORD *)(a1 + 16))
LABEL_3:
    std::string::append((std::string *)(a1 + 8), "; ");
LABEL_4:
  v6 = *(char *)(a4 + 23);
  if (v6 >= 0)
    v7 = (const std::string::value_type *)a4;
  else
    v7 = *(const std::string::value_type **)a4;
  if (v6 >= 0)
    v8 = *(unsigned __int8 *)(a4 + 23);
  else
    v8 = *(_QWORD *)(a4 + 8);
  return std::string::append(v5, v7, v8);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::~AggregateOptionFinder(google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder *this)
{
  google::protobuf::io::ErrorCollector::~ErrorCollector(this);
  JUMPOUT(0x1C3B8D890);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::AggregateOptionFinder::FindExtension(uint64_t a1, uint64_t a2, std::string *a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t (*v16)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  _QWORD *v17;
  _QWORD v18[2];

  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 168))(a2);
  v6 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(*(_QWORD *)(a1 + 8), a3, *(_QWORD *)(v5 + 8), 0, 1);
  v8 = v7;
  if (v6 == 1)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v5 + 32) + 72) || *(int *)(v7 + 124) < 1)
      return 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *(_QWORD *)(v8 + 80);
      if (*(_QWORD *)(v11 + v9 + 80) == v5)
      {
        v12 = *(unint64_t **)(v11 + v9 + 48);
        if (v12)
        {
          v15 = v11 + v9;
          v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
          v13 = atomic_load(v12);
          if (v13 != -1)
          {
            v18[0] = &v16;
            v18[1] = &v15;
            v17 = v18;
            std::__call_once(v12, &v17, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
          }
        }
        if (*(_DWORD *)(v11 + v9 + 56) == 11
          && *(_DWORD *)(v11 + v9 + 60) == 1
          && google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v11 + v9)) == v8)
        {
          break;
        }
      }
      ++v10;
      v9 += 152;
      if (v10 >= *(int *)(v8 + 124))
        return 0;
    }
    return v11 + v9;
  }
  else if (v6 != 2 || !*(_BYTE *)(v7 + 66))
  {
    return 0;
  }
  return v8;
}

void std::vector<std::unique_ptr<char []>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::unique_ptr<char []>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    operator delete(**a1);
  }
}

uint64_t std::vector<std::unique_ptr<char []>>::__base_destruct_at_end[abi:ne180100](uint64_t result, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = result;
  v4 = *(_QWORD **)(result + 8);
  while (v4 != a2)
  {
    v5 = *--v4;
    result = v5;
    *v4 = 0;
    if (v5)
      result = MEMORY[0x1C3B8D878](result, 0x1000C8077774924);
  }
  *(_QWORD *)(v3 + 8) = a2;
  return result;
}

void std::vector<std::unique_ptr<google::protobuf::Message>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  _QWORD *v2;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v7 = *--v4;
        v6 = v7;
        *v4 = 0;
        if (v7)
          (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<std::unique_ptr<std::once_flag>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::unique_ptr<std::once_flag>>::__base_destruct_at_end[abi:ne180100]((uint64_t)v2, *v2);
    operator delete(**a1);
  }
}

uint64_t std::vector<std::unique_ptr<std::once_flag>>::__base_destruct_at_end[abi:ne180100](uint64_t result, _QWORD *a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v3 = result;
  v4 = *(_QWORD **)(result + 8);
  while (v4 != a2)
  {
    v5 = *--v4;
    result = v5;
    *v4 = 0;
    if (v5)
      result = MEMORY[0x1C3B8D890](result, 0x1000C4000313F17);
  }
  *(_QWORD *)(v3 + 8) = a2;
  return result;
}

void std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  google::protobuf::FileDescriptorTables **v2;
  google::protobuf::FileDescriptorTables **v4;
  void *v5;

  v1 = *a1;
  v2 = (google::protobuf::FileDescriptorTables **)**a1;
  if (v2)
  {
    v4 = (google::protobuf::FileDescriptorTables **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
        std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100](--v4, 0);
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

google::protobuf::FileDescriptorTables *std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100](google::protobuf::FileDescriptorTables **a1, google::protobuf::FileDescriptorTables *a2)
{
  google::protobuf::FileDescriptorTables *result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
    JUMPOUT(0x1C3B8D890);
  }
  return result;
}

void std::__hash_table<std::__hash_value_type<std::pair<void const*,char const*>,google::protobuf::Symbol>,std::__unordered_map_hasher<std::pair<void const*,char const*>,std::__hash_value_type<std::pair<void const*,char const*>,google::protobuf::Symbol>,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::`anonymous namespace'::PointerStringPairEqual,true>,std::__unordered_map_equal<std::pair<void const*,char const*>,std::__hash_value_type<std::pair<void const*,char const*>,google::protobuf::Symbol>,google::protobuf::`anonymous namespace'::PointerStringPairEqual,google::protobuf::`anonymous namespace'::PointerStringPairHash,true>,std::allocator<std::__hash_value_type<std::pair<void const*,char const*>,google::protobuf::Symbol>>>::__rehash_unique[abi:ne180100](uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  size_t v9;
  uint8x8_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  void *v16;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime <= *(_QWORD *)&v4)
  {
    if (prime >= *(_QWORD *)&v4)
      return;
    v11 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v12 = (uint8x8_t)vcnt_s8(v4), v12.i16[0] = vaddlv_u8(v12), v12.u32[0] > 1uLL))
    {
      v11 = std::__next_prime(v11);
    }
    else
    {
      v13 = 1 << -(char)__clz(v11 - 1);
      if (v11 >= 2)
        v11 = v13;
    }
    if (prime <= v11)
      prime = v11;
    if (prime >= *(_QWORD *)&v4)
      return;
    if (!prime)
    {
      v16 = *(void **)a1;
      *(_QWORD *)a1 = 0;
      if (v16)
        operator delete(v16);
      *(_QWORD *)(a1 + 8) = 0;
      return;
    }
  }
  if (prime >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  v5 = operator new(8 * prime);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v5;
  if (v6)
    operator delete(v6);
  v7 = 0;
  *(_QWORD *)(a1 + 8) = prime;
  do
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v7++) = 0;
  while (prime != v7);
  v8 = *(_QWORD **)(a1 + 16);
  if (v8)
  {
    v9 = v8[1];
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)prime);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      if (v9 >= prime)
        v9 %= prime;
    }
    else
    {
      v9 &= prime - 1;
    }
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v9) = a1 + 16;
    v14 = (_QWORD *)*v8;
    if (*v8)
    {
      do
      {
        v15 = v14[1];
        if (v10.u32[0] > 1uLL)
        {
          if (v15 >= prime)
            v15 %= prime;
        }
        else
        {
          v15 &= prime - 1;
        }
        if (v15 != v9)
        {
          if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v15))
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v15) = v8;
            goto LABEL_31;
          }
          *v8 = *v14;
          *v14 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v15);
          **(_QWORD **)(*(_QWORD *)a1 + 8 * v15) = v14;
          v14 = v8;
        }
        v15 = v9;
LABEL_31:
        v8 = v14;
        v14 = (_QWORD *)*v14;
        v9 = v15;
      }
      while (v14);
    }
  }
}

uint64_t std::unique_ptr<std::unordered_map<std::pair<void const*,char const*>,google::protobuf::FieldDescriptor const*,google::protobuf::`anonymous namespace'::PointerStringPairHash,google::protobuf::`anonymous namespace'::PointerStringPairEqual,std::allocator<std::pair<std::pair<void const*,char const*> const,google::protobuf::FieldDescriptor const*>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  *a1 = 0;
  if (result)
  {
    std::__hash_table<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::__unordered_map_hasher<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::hash<google::protobuf::Descriptor const*>,std::equal_to<google::protobuf::Descriptor const*>,true>,std::__unordered_map_equal<google::protobuf::Descriptor const*,std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>,std::equal_to<google::protobuf::Descriptor const*>,std::hash<google::protobuf::Descriptor const*>,true>,std::allocator<std::__hash_value_type<google::protobuf::Descriptor const*,google::protobuf::Message const*>>>::~__hash_table(result);
    JUMPOUT(0x1C3B8D890);
  }
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<google::protobuf::DescriptorPool::Tables::CheckPoint>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(32 * a2);
}

uint64_t *std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::__erase_unique<char const*>(_QWORD *a1, const char **a2)
{
  uint64_t *result;

  result = (uint64_t *)std::__hash_table<std::__hash_value_type<char const*,google::protobuf::internal::DescriptorTable const*>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::internal::DescriptorTable const*>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::internal::DescriptorTable const*>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::internal::DescriptorTable const*>>>::find<char const*>(a1, a2);
  if (result)
  {
    std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::erase(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

uint64_t std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::erase(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  void *__p;

  v2 = *a2;
  std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::remove(a1, a2, (uint64_t)&__p);
  v3 = __p;
  __p = 0;
  if (v3)
    operator delete(v3);
  return v2;
}

_QWORD *std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::remove@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3;
  unint64_t v4;
  uint8x8_t v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = (int8x8_t)result[1];
  v4 = a2[1];
  v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(_QWORD *)&v3)
      v4 %= *(_QWORD *)&v3;
  }
  else
  {
    v4 &= *(_QWORD *)&v3 - 1;
  }
  v6 = *(_QWORD **)(*result + 8 * v4);
  do
  {
    v7 = v6;
    v6 = (_QWORD *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2)
    goto LABEL_18;
  v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(_QWORD *)&v3)
      v8 %= *(_QWORD *)&v3;
  }
  else
  {
    v8 &= *(_QWORD *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2)
      goto LABEL_19;
    v9 = *(_QWORD *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(_QWORD *)&v3)
        v9 %= *(_QWORD *)&v3;
    }
    else
    {
      v9 &= *(_QWORD *)&v3 - 1;
    }
    if (v9 != v4)
LABEL_19:
      *(_QWORD *)(*result + 8 * v4) = 0;
  }
  v10 = *a2;
  if (*a2)
  {
    v11 = *(_QWORD *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(_QWORD *)&v3)
        v11 %= *(_QWORD *)&v3;
    }
    else
    {
      v11 &= *(_QWORD *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(_QWORD *)(*result + 8 * v11) = v7;
      v10 = *a2;
    }
  }
  *v7 = v10;
  *a2 = 0;
  --result[3];
  *(_QWORD *)a3 = a2;
  *(_QWORD *)(a3 + 8) = result + 2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__erase_unique<std::pair<google::protobuf::Descriptor const*,int>>(uint64_t **a1, unint64_t *a2)
{
  uint64_t *v3;
  uint64_t *v4;

  v3 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::find<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3)
    return 0;
  v4 = v3;
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__remove_node_pointer(a1, v3);
  operator delete(v4);
  return 1;
}

uint64_t *std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__remove_node_pointer(uint64_t **a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t *v6;

  v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      v3 = v2;
      v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    v4 = a2;
    do
    {
      v3 = (uint64_t *)v4[2];
      v5 = *v3 == (_QWORD)v4;
      v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2)
    *a1 = v3;
  v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v6, a2);
  return v3;
}

void std::vector<char const*>::__append(void **a1, unint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = v7 - (_BYTE *)*a1;
    v9 = a2 + (v8 >> 3);
    if (v9 >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 3;
    v11 = v5 - (_BYTE *)*a1;
    if (v11 >> 2 > v9)
      v9 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v9;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v4, v12);
    else
      v13 = 0;
    v14 = &v13[8 * v10];
    v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    v16 = &v14[8 * a2];
    v18 = (char *)*a1;
    v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        v19 = *((_QWORD *)v17 - 1);
        v17 -= 8;
        *((_QWORD *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
      operator delete(v17);
  }
}

void std::vector<std::pair<google::protobuf::Descriptor const*,int>>::__append(void **a1, unint64_t a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  _DWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  _DWORD *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_DWORD **)(v4 - 8);
  if (a2 <= (v6 - (_BYTE *)v7) >> 4)
  {
    if (a2)
    {
      v14 = &v7[4 * a2];
      do
      {
        *(_QWORD *)v7 = 0;
        v7[2] = 0;
        v7 += 4;
      }
      while (v7 != v14);
      v7 = v14;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = (char *)v7 - (_BYTE *)*a1;
    v9 = a2 + (v8 >> 4);
    if (v9 >> 60)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 4;
    v11 = v5 - (_BYTE *)*a1;
    if (v11 >> 3 > v9)
      v9 = v11 >> 3;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0)
      v12 = 0xFFFFFFFFFFFFFFFLL;
    else
      v12 = v9;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<google::protobuf::MapKey>>(v4, v12);
    else
      v13 = 0;
    v15 = &v13[16 * v10];
    v16 = &v15[16 * a2];
    v17 = v15;
    do
    {
      *(_QWORD *)v17 = 0;
      *((_DWORD *)v17 + 2) = 0;
      v17 += 16;
    }
    while (v17 != v16);
    v18 = &v13[16 * v12];
    v20 = (char *)*a1;
    v19 = (char *)a1[1];
    if (v19 != *a1)
    {
      do
      {
        *((_OWORD *)v15 - 1) = *((_OWORD *)v19 - 1);
        v15 -= 16;
        v19 -= 16;
      }
      while (v19 != v20);
      v19 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v16;
    a1[2] = v18;
    if (v19)
      operator delete(v19);
  }
}

void std::vector<std::unique_ptr<std::string>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = v7 - *a1;
    v9 = a2 + (v8 >> 3);
    if (v9 >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 3;
    v11 = v5 - *a1;
    if (v11 >> 2 > v9)
      v9 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v9;
    v18 = v4;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v4, v12);
    else
      v13 = 0;
    v14 = v13;
    v15 = &v13[8 * v10];
    v17 = &v13[8 * v12];
    bzero(v15, 8 * a2);
    v16 = &v15[8 * a2];
    std::vector<std::unique_ptr<std::string>>::__swap_out_circular_buffer(a1, &v14);
    std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)&v14);
  }
}

void sub_1BF827864(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::unique_ptr<std::string>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::vector<std::unique_ptr<google::protobuf::Message>>::__append(char **a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  char *v23;
  uint64_t v24;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = *a1;
    v9 = v7 - *a1;
    v10 = a2 + (v9 >> 3);
    if (v10 >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v11 = v9 >> 3;
    v12 = v5 - v8;
    if (v12 >> 2 > v10)
      v10 = v12 >> 2;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      v13 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v13 = v10;
    v24 = v4;
    if (v13)
    {
      v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v4, v13);
      v8 = *a1;
      v7 = a1[1];
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[8 * v11];
    v16 = &v14[8 * v13];
    v23 = v16;
    bzero(v15, 8 * a2);
    v17 = &v15[8 * a2];
    *((_QWORD *)&v22 + 1) = v17;
    if (v7 != v8)
    {
      do
      {
        v18 = *((_QWORD *)v7 - 1);
        v7 -= 8;
        *(_QWORD *)v7 = 0;
        *((_QWORD *)v15 - 1) = v18;
        v15 -= 8;
      }
      while (v7 != v8);
      v17 = (char *)*((_QWORD *)&v22 + 1);
      v16 = v23;
    }
    v19 = *(_OWORD *)a1;
    *a1 = v15;
    a1[1] = v17;
    v22 = v19;
    v20 = a1[2];
    a1[2] = v16;
    v23 = v20;
    v21 = v19;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v21);
  }
}

uint64_t std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 8;
    v4 = *(_QWORD *)(i - 8);
    *(_QWORD *)(i - 8) = 0;
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::vector<std::unique_ptr<std::once_flag>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = v7 - *a1;
    v9 = a2 + (v8 >> 3);
    if (v9 >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 3;
    v11 = v5 - *a1;
    if (v11 >> 2 > v9)
      v9 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v9;
    v18 = v4;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v4, v12);
    else
      v13 = 0;
    v14 = v13;
    v15 = &v13[8 * v10];
    v17 = &v13[8 * v12];
    bzero(v15, 8 * a2);
    v16 = &v15[8 * a2];
    std::vector<std::unique_ptr<std::once_flag>>::__swap_out_circular_buffer(a1, &v14);
    std::__split_buffer<std::unique_ptr<std::once_flag>>::~__split_buffer((uint64_t)&v14);
  }
}

void sub_1BF827AE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::unique_ptr<std::once_flag>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::unique_ptr<std::once_flag>>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<std::once_flag>>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>>((uint64_t)(a1 + 2), a1[1], (_QWORD *)a1[1], *a1, (_QWORD *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<std::once_flag>>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>>(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v8 = (_QWORD *)(a7 - 8);
    v9 = (_QWORD *)(a7 - 8);
    do
    {
      v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((_QWORD *)&v16 + 1) = v8;
      v7 -= 8;
      v8 = v9;
    }
    while (a3 != a5);
    v11 = v16;
  }
  v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::once_flag>>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::once_flag>>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::once_flag>>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>>::operator()[abi:ne180100](a1);
  return a1;
}

uint64_t std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<std::once_flag>>,std::reverse_iterator<std::unique_ptr<std::once_flag>*>>::operator()[abi:ne180100](uint64_t result)
{
  uint64_t *v1;
  uint64_t *v2;

  v1 = *(uint64_t **)(*(_QWORD *)(result + 16) + 8);
  v2 = *(uint64_t **)(*(_QWORD *)(result + 8) + 8);
  while (v1 != v2)
  {
    result = *v1;
    *v1 = 0;
    if (result)
      result = MEMORY[0x1C3B8D890](result, 0x1000C4000313F17);
    ++v1;
  }
  return result;
}

uint64_t std::__split_buffer<std::unique_ptr<std::once_flag>>::~__split_buffer(uint64_t a1)
{
  std::__split_buffer<std::unique_ptr<std::once_flag>>::__destruct_at_end[abi:ne180100](a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t std::__split_buffer<std::unique_ptr<std::once_flag>>::__destruct_at_end[abi:ne180100](uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(result + 16);
  if (v2 != a2)
  {
    v4 = result;
    do
    {
      *(_QWORD *)(v4 + 16) = v2 - 8;
      result = *(_QWORD *)(v2 - 8);
      *(_QWORD *)(v2 - 8) = 0;
      if (result)
        result = MEMORY[0x1C3B8D890](result, 0x1000C4000313F17);
      v2 = *(_QWORD *)(v4 + 16);
    }
    while (v2 != a2);
  }
  return result;
}

void std::vector<std::unique_ptr<google::protobuf::FileDescriptorTables>>::__append(char **a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  __int128 v22;
  char *v23;
  uint64_t v24;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = *a1;
    v9 = v7 - *a1;
    v10 = a2 + (v9 >> 3);
    if (v10 >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v11 = v9 >> 3;
    v12 = v5 - v8;
    if (v12 >> 2 > v10)
      v10 = v12 >> 2;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      v13 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v13 = v10;
    v24 = v4;
    if (v13)
    {
      v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v4, v13);
      v8 = *a1;
      v7 = a1[1];
    }
    else
    {
      v14 = 0;
    }
    v15 = &v14[8 * v11];
    v16 = &v14[8 * v13];
    v23 = v16;
    bzero(v15, 8 * a2);
    v17 = &v15[8 * a2];
    *((_QWORD *)&v22 + 1) = v17;
    if (v7 != v8)
    {
      do
      {
        v18 = *((_QWORD *)v7 - 1);
        v7 -= 8;
        *(_QWORD *)v7 = 0;
        *((_QWORD *)v15 - 1) = v18;
        v15 -= 8;
      }
      while (v7 != v8);
      v17 = (char *)*((_QWORD *)&v22 + 1);
      v16 = v23;
    }
    v19 = *(_OWORD *)a1;
    *a1 = v15;
    a1[1] = v17;
    v22 = v19;
    v20 = a1[2];
    a1[2] = v16;
    v23 = v20;
    v21 = v19;
    std::__split_buffer<std::unique_ptr<google::protobuf::FileDescriptorTables>>::~__split_buffer((uint64_t)&v21);
  }
}

uint64_t std::__split_buffer<std::unique_ptr<google::protobuf::FileDescriptorTables>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 8;
    std::unique_ptr<google::protobuf::FileDescriptorTables>::reset[abi:ne180100]((google::protobuf::FileDescriptorTables **)(i - 8), 0);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::vector<std::unique_ptr<char []>>::__append(uint64_t *a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD *)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    v8 = v7 - *a1;
    v9 = a2 + (v8 >> 3);
    if (v9 >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 3;
    v11 = v5 - *a1;
    if (v11 >> 2 > v9)
      v9 = v11 >> 2;
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      v12 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v12 = v9;
    v18 = v4;
    if (v12)
      v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>(v4, v12);
    else
      v13 = 0;
    v14 = v13;
    v15 = &v13[8 * v10];
    v17 = &v13[8 * v12];
    bzero(v15, 8 * a2);
    v16 = &v15[8 * a2];
    std::vector<std::unique_ptr<char []>>::__swap_out_circular_buffer(a1, &v14);
    std::__split_buffer<std::unique_ptr<char []>>::~__split_buffer((uint64_t)&v14);
  }
}

void sub_1BF827F80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::unique_ptr<char []>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::unique_ptr<char []>>::__swap_out_circular_buffer(uint64_t *a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<char []>>,std::reverse_iterator<std::unique_ptr<char []>*>,std::reverse_iterator<std::unique_ptr<char []>*>,std::reverse_iterator<std::unique_ptr<char []>*>>((uint64_t)(a1 + 2), a1[1], (_QWORD *)a1[1], *a1, (_QWORD *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::unique_ptr<char []>>,std::reverse_iterator<std::unique_ptr<char []>*>,std::reverse_iterator<std::unique_ptr<char []>*>,std::reverse_iterator<std::unique_ptr<char []>*>>(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;
  __int128 v15;
  __int128 v16;

  v7 = a7;
  *(_QWORD *)&v16 = a6;
  *((_QWORD *)&v16 + 1) = a7;
  v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    v11 = a6;
  }
  else
  {
    v8 = (_QWORD *)(a7 - 8);
    v9 = (_QWORD *)(a7 - 8);
    do
    {
      v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((_QWORD *)&v16 + 1) = v8;
      v7 -= 8;
      v8 = v9;
    }
    while (a3 != a5);
    v11 = v16;
  }
  v14 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<char []>>,std::reverse_iterator<std::unique_ptr<char []>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v13);
  return v11;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<char []>>,std::reverse_iterator<std::unique_ptr<char []>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(_BYTE *)(a1 + 24))
    std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<char []>>,std::reverse_iterator<std::unique_ptr<char []>*>>::operator()[abi:ne180100](a1);
  return a1;
}

uint64_t std::_AllocatorDestroyRangeReverse<std::allocator<std::unique_ptr<char []>>,std::reverse_iterator<std::unique_ptr<char []>*>>::operator()[abi:ne180100](uint64_t result)
{
  uint64_t *v1;
  uint64_t *v2;

  v1 = *(uint64_t **)(*(_QWORD *)(result + 16) + 8);
  v2 = *(uint64_t **)(*(_QWORD *)(result + 8) + 8);
  while (v1 != v2)
  {
    result = *v1;
    *v1 = 0;
    if (result)
      result = MEMORY[0x1C3B8D878](result, 0x1000C8077774924);
    ++v1;
  }
  return result;
}

uint64_t std::__split_buffer<std::unique_ptr<char []>>::~__split_buffer(uint64_t a1)
{
  std::__split_buffer<std::unique_ptr<char []>>::__destruct_at_end[abi:ne180100](a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t std::__split_buffer<std::unique_ptr<char []>>::__destruct_at_end[abi:ne180100](uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(result + 16);
  if (v2 != a2)
  {
    v4 = result;
    do
    {
      *(_QWORD *)(v4 + 16) = v2 - 8;
      result = *(_QWORD *)(v2 - 8);
      *(_QWORD *)(v2 - 8) = 0;
      if (result)
        result = MEMORY[0x1C3B8D878](result, 0x1000C8077774924);
      v2 = *(_QWORD *)(v4 + 16);
    }
    while (v2 != a2);
  }
  return result;
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::clear(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;

  if (*(_QWORD *)(a1 + 24))
  {
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(a1, *(void ***)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    v2 = *(_QWORD *)(a1 + 8);
    if (v2)
    {
      for (i = 0; i != v2; ++i)
        *(_QWORD *)(*(_QWORD *)a1 + 8 * i) = 0;
    }
    *(_QWORD *)(a1 + 24) = 0;
  }
}

void *std::__hash_table<std::__hash_value_type<char const*,google::protobuf::Symbol>,std::__unordered_map_hasher<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::hash<char const*>,google::protobuf::streq,true>,std::__unordered_map_equal<char const*,std::__hash_value_type<char const*,google::protobuf::Symbol>,google::protobuf::streq,google::protobuf::hash<char const*>,true>,std::allocator<std::__hash_value_type<char const*,google::protobuf::Symbol>>>::__emplace_unique_key_args<char const*,std::pair<char const* const,google::protobuf::Symbol> const&>(uint64_t a1, const char **a2, uint64_t a3)
{
  unint64_t v3;
  const char *v6;
  char v7;
  unint64_t v8;
  unsigned __int8 *v9;
  int v10;
  unint64_t v11;
  uint8x8_t v12;
  unint64_t v13;
  void **v14;
  void *i;
  unint64_t v16;
  float v17;
  float v18;
  _BOOL8 v19;
  unint64_t v20;
  unint64_t v21;
  size_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;

  v6 = *a2;
  v7 = **a2;
  if (v7)
  {
    v8 = 0;
    v9 = (unsigned __int8 *)(v6 + 1);
    do
    {
      v8 = 5 * v8 + v7;
      v10 = *v9++;
      v7 = v10;
    }
    while (v10);
  }
  else
  {
    v8 = 0;
  }
  v11 = *(_QWORD *)(a1 + 8);
  if (v11)
  {
    v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      v3 = v8;
      if (v8 >= v11)
        v3 = v8 % v11;
    }
    else
    {
      v3 = (v11 - 1) & v8;
    }
    v14 = *(void ***)(*(_QWORD *)a1 + 8 * v3);
    if (v14)
    {
      for (i = *v14; i; i = *(void **)i)
      {
        v16 = *((_QWORD *)i + 1);
        if (v16 == v8)
        {
          if (!strcmp(*((const char **)i + 2), v6))
            return i;
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11)
              v16 %= v11;
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v3)
            break;
        }
      }
    }
  }
  i = operator new(0x28uLL);
  *(_QWORD *)i = 0;
  *((_QWORD *)i + 1) = v8;
  *((_OWORD *)i + 1) = *(_OWORD *)a3;
  *((_QWORD *)i + 4) = *(_QWORD *)(a3 + 16);
  v17 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    v19 = 1;
    if (v11 >= 3)
      v19 = (v11 & (v11 - 1)) != 0;
    v20 = v19 | (2 * v11);
    v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21)
      v22 = v21;
    else
      v22 = v20;
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>(a1, v22);
    v11 = *(_QWORD *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v8 >= v11)
        v3 = v8 % v11;
      else
        v3 = v8;
    }
    else
    {
      v3 = (v11 - 1) & v8;
    }
  }
  v23 = *(_QWORD *)a1;
  v24 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v3);
  if (v24)
  {
    *(_QWORD *)i = *v24;
LABEL_43:
    *v24 = i;
    goto LABEL_44;
  }
  *(_QWORD *)i = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = i;
  *(_QWORD *)(v23 + 8 * v3) = a1 + 16;
  if (*(_QWORD *)i)
  {
    v25 = *(_QWORD *)(*(_QWORD *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v25 >= v11)
        v25 %= v11;
    }
    else
    {
      v25 &= v11 - 1;
    }
    v24 = (_QWORD *)(*(_QWORD *)a1 + 8 * v25);
    goto LABEL_43;
  }
LABEL_44:
  ++*(_QWORD *)(a1 + 24);
  return i;
}

void sub_1BF828454(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_OWORD *std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__emplace_unique_key_args<std::pair<google::protobuf::Descriptor const*,int>,std::pair<std::pair<google::protobuf::Descriptor const*,int> const,google::protobuf::FieldDescriptor const*> const&>(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  uint64_t *v5;
  _OWORD *v6;
  uint64_t **v7;
  uint64_t v9;

  v5 = std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__find_equal<std::pair<google::protobuf::Descriptor const*,int>>((uint64_t)a1, &v9, a2);
  v6 = (_OWORD *)*v5;
  if (!*v5)
  {
    v7 = (uint64_t **)v5;
    v6 = operator new(0x38uLL);
    v6[2] = *(_OWORD *)a3;
    *((_QWORD *)v6 + 6) = *(_QWORD *)(a3 + 16);
    std::__tree<std::string>::__insert_node_at(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

uint64_t *std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__find_equal<std::pair<google::protobuf::Descriptor const*,int>>(uint64_t a1, _QWORD *a2, unint64_t *a3)
{
  uint64_t *result;
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v6;
  int v7;
  uint64_t *v8;
  unint64_t v9;
  int v10;

  v5 = *(uint64_t **)(a1 + 8);
  result = (uint64_t *)(a1 + 8);
  v4 = v5;
  if (v5)
  {
    v6 = *a3;
    v7 = *((_DWORD *)a3 + 2);
    while (1)
    {
      while (1)
      {
        v8 = v4;
        v9 = v4[4];
        if (v6 >= v9)
          break;
LABEL_4:
        v4 = (uint64_t *)*v8;
        result = v8;
        if (!*v8)
          goto LABEL_12;
      }
      if (v9 >= v6)
      {
        v10 = *((_DWORD *)v8 + 10);
        if (v7 < v10)
          goto LABEL_4;
        if (v10 >= v7)
          goto LABEL_12;
      }
      result = v8 + 1;
      v4 = (uint64_t *)v8[1];
      if (!v4)
        goto LABEL_12;
    }
  }
  v8 = result;
LABEL_12:
  *a2 = v8;
  return result;
}

std::string *google::protobuf::Join<int const*>(std::string *result, std::string *a2, std::string::value_type *__s, std::string *this)
{
  std::string *v7;
  uint64_t v8;
  google::protobuf *v9;
  _QWORD v10[2];
  _BYTE v11[32];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  if (result != a2)
  {
    v7 = result;
    v8 = 0;
    do
    {
      if (v8)
        std::string::append(this, __s);
      v9 = (google::protobuf *)*(unsigned int *)((char *)&v7->__r_.__value_.__l.__data_ + v8);
      v10[0] = v11;
      v10[1] = google::protobuf::FastInt32ToBufferLeft(v9, v11, __s) - v11;
      result = google::protobuf::StrAppend(this, (uint64_t)v10);
      v8 += 4;
    }
    while ((std::string *)((char *)v7 + v8) != a2);
  }
  return result;
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *),std::pair<google::protobuf::FileDescriptorTables const*,google::protobuf::SourceCodeInfo const*> *&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

google::protobuf::DescriptorPool::Tables *std::unique_ptr<google::protobuf::DescriptorPool::Tables>::reset[abi:ne180100](google::protobuf::DescriptorPool::Tables **a1, google::protobuf::DescriptorPool::Tables *a2)
{
  google::protobuf::DescriptorPool::Tables *result;

  result = *a1;
  *a1 = a2;
  if (result)
  {
    google::protobuf::DescriptorPool::Tables::~Tables(result);
    JUMPOUT(0x1C3B8D890);
  }
  return result;
}

google::protobuf::DescriptorPool *google::protobuf::internal::OnShutdownDelete<google::protobuf::DescriptorPool>(google::protobuf::DescriptorPool *)::{lambda(void const*)#1}::__invoke(google::protobuf::DescriptorPool *result)
{
  if (result)
  {
    google::protobuf::DescriptorPool::~DescriptorPool(result);
    JUMPOUT(0x1C3B8D890);
  }
  return result;
}

unsigned __int8 *std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::find<std::string>(_QWORD *a1, unsigned __int8 *a2)
{
  unint64_t v4;
  int8x8_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned __int8 **v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;

  v4 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)(a1 + 3), (uint64_t)a2);
  v5 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v5)
    return 0;
  v6 = v4;
  v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    v9 = v4;
    if (v4 >= *(_QWORD *)&v5)
      v9 = v4 % *(_QWORD *)&v5;
  }
  else
  {
    v9 = (*(_QWORD *)&v5 - 1) & v4;
  }
  v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10)
    return 0;
  v11 = *v10;
  if (*v10)
  {
    v12 = (uint64_t)(a1 + 4);
    do
    {
      v13 = *((_QWORD *)v11 + 1);
      if (v6 == v13)
      {
        if ((std::equal_to<std::string>::operator()[abi:ne180100](v12, v11 + 16, a2) & 1) != 0)
          return v11;
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(_QWORD *)&v5)
            v13 %= *(_QWORD *)&v5;
        }
        else
        {
          v13 &= *(_QWORD *)&v5 - 1;
        }
        if (v13 != v9)
          return 0;
      }
      v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

uint64_t *std::__tree<google::protobuf::Descriptor const*>::__emplace_unique_key_args<google::protobuf::Descriptor const*,google::protobuf::Descriptor const*>(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  unint64_t v7;
  uint64_t **v8;
  unint64_t v9;
  uint64_t *v10;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *a2;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = v5[4];
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = a1 + 1;
LABEL_10:
    v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    std::__tree<std::string>::__insert_node_at(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

void std::vector<std::string>::__assign_with_size[abi:ne180100]<google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>>(std::vector<std::string> *a1, __int128 **a2, __int128 **a3, unint64_t a4)
{
  __int128 **v6;
  uint64_t p_end_cap;
  std::string *begin;
  unint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string *end;
  __int128 **v14;
  uint64_t v15;
  __int128 *v16;
  std::string *v17;
  __int128 *v18;

  v6 = a2;
  p_end_cap = (uint64_t)&a1->__end_cap_;
  begin = a1->__begin_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3) < a4)
  {
    std::vector<std::string>::__vdeallocate(a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = 0x5555555555555556 * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3) >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v10;
    std::vector<std::string>::__vallocate[abi:ne180100](a1, v11);
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,std::string*>(p_end_cap, v6, a3, a1->__end_);
LABEL_15:
    a1->__end_ = v12;
    return;
  }
  end = a1->__end_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)begin) >> 3) < a4)
  {
    v14 = &a2[0xAAAAAAAAAAAAAABLL * (((char *)end - (char *)begin) >> 3)];
    if (end != begin)
    {
      v15 = 0x5555555555555558 * (((char *)end - (char *)begin) >> 3);
      do
      {
        v16 = *v6++;
        std::string::operator=(begin++, (const std::string *)v16);
        v15 -= 8;
      }
      while (v15);
      begin = a1->__end_;
    }
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,std::string*>(p_end_cap, v14, a3, begin);
    goto LABEL_15;
  }
  if (a2 == a3)
  {
    v17 = a1->__begin_;
  }
  else
  {
    v17 = a1->__begin_;
    do
    {
      v18 = *v6++;
      std::string::operator=(begin++, (const std::string *)v18);
      ++v17;
    }
    while (v6 != a3);
    end = a1->__end_;
  }
  while (end != v17)
  {
    if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0)
      operator delete(end[-1].__r_.__value_.__l.__data_);
    --end;
  }
  a1->__end_ = v17;
}

void sub_1BF8289E8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void std::vector<std::string>::__vdeallocate(std::vector<std::string> *this)
{
  if (this->__begin_)
  {
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)this);
    operator delete(this->__begin_);
    this->__begin_ = 0;
    this->__end_ = 0;
    this->__end_cap_.__value_ = 0;
  }
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,google::protobuf::internal::RepeatedPtrIterator<std::string const>,std::string*>(uint64_t a1, __int128 **a2, __int128 **a3, std::string *this)
{
  std::string *v4;
  __int128 **v6;
  __int128 *v7;
  __int128 v8;
  _QWORD v10[3];
  char v11;
  std::string *v12;
  std::string *v13;

  v4 = this;
  v12 = this;
  v13 = this;
  v10[0] = a1;
  v10[1] = &v12;
  v10[2] = &v13;
  v11 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      v7 = *v6;
      if (*((char *)*v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v7, *((_QWORD *)v7 + 1));
        v4 = v13;
      }
      else
      {
        v8 = *v7;
        v4->__r_.__value_.__r.__words[2] = *((_QWORD *)v7 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v8;
      }
      ++v6;
      v13 = ++v4;
    }
    while (v6 != a3);
  }
  v11 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v10);
  return v4;
}

void sub_1BF828AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1BF828B48(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<int>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void std::allocator_traits<std::allocator<google::protobuf::`anonymous namespace'::OptionsToInterpret>>::destroy[abi:ne180100]<google::protobuf::`anonymous namespace'::OptionsToInterpret,void>(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void google::protobuf::`anonymous namespace'::OptionsToInterpret::~OptionsToInterpret(google::protobuf::_anonymous_namespace_::OptionsToInterpret *this)
{
  void *v2;

  v2 = (void *)*((_QWORD *)this + 6);
  if (v2)
  {
    *((_QWORD *)this + 7) = v2;
    operator delete(v2);
  }
  if (*((char *)this + 47) < 0)
    operator delete(*((void **)this + 3));
  if (*((char *)this + 23) < 0)
    operator delete(*(void **)this);
}

uint64_t std::__tree<google::protobuf::FileDescriptor const*>::__erase_unique<google::protobuf::FileDescriptor const*>(uint64_t a1, unint64_t *a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  BOOL v6;
  _QWORD *v7;

  v2 = *(_QWORD **)(a1 + 8);
  if (!v2)
    return 0;
  v3 = *a2;
  v4 = (uint64_t *)(a1 + 8);
  do
  {
    v5 = v2[4];
    v6 = v5 >= v3;
    if (v5 >= v3)
      v7 = v2;
    else
      v7 = v2 + 1;
    if (v6)
      v4 = v2;
    v2 = (_QWORD *)*v7;
  }
  while (*v7);
  if (v4 == (uint64_t *)(a1 + 8) || v3 < v4[4])
    return 0;
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__remove_node_pointer((uint64_t **)a1, v4);
  operator delete(v4);
  return 1;
}

google::protobuf::FileOptions *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::FileOptions>(_QWORD *a1)
{
  google::protobuf::FileOptions *v2;
  unint64_t v3;
  google::protobuf::FileOptions **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::FileOptions **v12;
  char *v13;
  google::protobuf::FileOptions *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::FileOptions *)operator new();
  google::protobuf::FileOptions::FileOptions(v2);
  v3 = a1[26];
  v4 = (google::protobuf::FileOptions **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::FileOptions **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::FileOptions **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::FileOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF828DF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40AD54825FLL);
  _Unwind_Resume(a1);
}

void std::vector<google::protobuf::`anonymous namespace'::OptionsToInterpret>::push_back[abi:ne180100](void **a1, __int128 *a2)
{
  char *v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  char *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v4 = (char *)a1[1];
  v5 = (char *)a1[2];
  if (v4 >= v5)
  {
    v9 = 0x2E8BA2E8BA2E8BA3 * ((v4 - (_BYTE *)*a1) >> 3);
    v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) > 0x2E8BA2E8BA2E8BALL)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v11 = 0x2E8BA2E8BA2E8BA3 * ((v5 - (_BYTE *)*a1) >> 3);
    if (2 * v11 > v10)
      v10 = 2 * v11;
    if (v11 >= 0x1745D1745D1745DLL)
      v12 = 0x2E8BA2E8BA2E8BALL;
    else
      v12 = v10;
    if (v12)
    {
      if (v12 > 0x2E8BA2E8BA2E8BALL)
        std::__throw_bad_array_new_length[abi:ne180100]();
      v13 = (char *)operator new(88 * v12);
    }
    else
    {
      v13 = 0;
    }
    v14 = &v13[88 * v9];
    *((_QWORD *)v14 + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v14 = *a2;
    v15 = &v13[88 * v12];
    *(_QWORD *)a2 = 0;
    *((_QWORD *)a2 + 1) = 0;
    v16 = *(__int128 *)((char *)a2 + 24);
    *((_QWORD *)a2 + 2) = 0;
    *((_QWORD *)a2 + 3) = 0;
    *(_OWORD *)(v14 + 24) = v16;
    *((_QWORD *)v14 + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 4) = 0;
    *((_QWORD *)a2 + 5) = 0;
    *((_QWORD *)v14 + 8) = 0;
    *((_OWORD *)v14 + 3) = a2[3];
    *((_QWORD *)v14 + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 6) = 0;
    *((_QWORD *)a2 + 7) = 0;
    *((_QWORD *)a2 + 8) = 0;
    *(_OWORD *)(v14 + 72) = *(__int128 *)((char *)a2 + 72);
    v8 = v14 + 88;
    v17 = (char *)*a1;
    v18 = (char *)a1[1];
    if (v18 == *a1)
    {
      *a1 = v14;
      a1[1] = v8;
      a1[2] = v15;
    }
    else
    {
      do
      {
        v19 = *(_OWORD *)(v18 - 88);
        *((_QWORD *)v14 - 9) = *((_QWORD *)v18 - 9);
        *(_OWORD *)(v14 - 88) = v19;
        *((_QWORD *)v18 - 10) = 0;
        *((_QWORD *)v18 - 9) = 0;
        *((_QWORD *)v18 - 11) = 0;
        v20 = *((_OWORD *)v18 - 4);
        *((_QWORD *)v14 - 6) = *((_QWORD *)v18 - 6);
        *((_OWORD *)v14 - 4) = v20;
        *((_QWORD *)v18 - 7) = 0;
        *((_QWORD *)v18 - 6) = 0;
        *((_QWORD *)v18 - 8) = 0;
        *((_QWORD *)v14 - 5) = 0;
        *((_QWORD *)v14 - 4) = 0;
        *((_QWORD *)v14 - 3) = 0;
        *(_OWORD *)(v14 - 40) = *(_OWORD *)(v18 - 40);
        *((_QWORD *)v14 - 3) = *((_QWORD *)v18 - 3);
        *((_QWORD *)v18 - 5) = 0;
        *((_QWORD *)v18 - 4) = 0;
        *((_QWORD *)v18 - 3) = 0;
        *((_OWORD *)v14 - 1) = *((_OWORD *)v18 - 1);
        v14 -= 88;
        v18 -= 88;
      }
      while (v18 != v17);
      v18 = (char *)*a1;
      v21 = (uint64_t)a1[1];
      *a1 = v14;
      a1[1] = v8;
      a1[2] = v15;
      while ((char *)v21 != v18)
      {
        v21 -= 88;
      }
    }
    if (v18)
      operator delete(v18);
  }
  else
  {
    v6 = *a2;
    *((_QWORD *)v4 + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)v4 = v6;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v7 = *(__int128 *)((char *)a2 + 24);
    *((_QWORD *)v4 + 5) = *((_QWORD *)a2 + 5);
    *(_OWORD *)(v4 + 24) = v7;
    *((_QWORD *)a2 + 4) = 0;
    *((_QWORD *)a2 + 5) = 0;
    *((_QWORD *)a2 + 3) = 0;
    *((_QWORD *)v4 + 6) = 0;
    *((_QWORD *)v4 + 7) = 0;
    *((_QWORD *)v4 + 8) = 0;
    *((_OWORD *)v4 + 3) = a2[3];
    *((_QWORD *)v4 + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 6) = 0;
    *((_QWORD *)a2 + 7) = 0;
    *((_QWORD *)a2 + 8) = 0;
    *(_OWORD *)(v4 + 72) = *(__int128 *)((char *)a2 + 72);
    v8 = v4 + 88;
  }
  a1[1] = v8;
}

std::string *google::protobuf::`anonymous namespace'::OptionsToInterpret::OptionsToInterpret(std::string *this, __int128 *a2, __int128 *a3, uint64_t a4, std::string::size_type a5, std::string::size_type a6)
{
  __int128 v11;
  __int128 v12;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v11 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v11;
  }
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v12 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v12;
  }
  this[2].__r_.__value_.__r.__words[0] = 0;
  this[2].__r_.__value_.__l.__size_ = 0;
  this[2].__r_.__value_.__r.__words[2] = 0;
  std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(this[2].__r_.__value_.__r.__words, *(const void **)a4, *(_QWORD *)(a4 + 8), (uint64_t)(*(_QWORD *)(a4 + 8) - *(_QWORD *)a4) >> 2);
  this[3].__r_.__value_.__r.__words[0] = a5;
  this[3].__r_.__value_.__l.__size_ = a6;
  return this;
}

void sub_1BF829108(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::Descriptor>(uint64_t a1, uint64_t a2, uint64_t a3, google::protobuf::MessageLite *a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::MessageOptions *v12;
  void *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string __p;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  std::string v27;

  v12 = google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::MessageOptions>(*(_QWORD **)(a1 + 8));
  if ((google::protobuf::MessageOptions::IsInitialized(a4) & 1) != 0)
  {
    google::protobuf::MessageLite::SerializeAsString(a4, (uint64_t)&__p);
    google::protobuf::MessageLite::ParseFromString(v12, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)(a5 + 32) = v12;
    if (*((int *)v12 + 14) >= 1)
    {
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      if (v24 < 0)
        operator delete(v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v13);
      }
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v27;
    std::string::basic_string[abi:ne180100]((uint64_t)&v27, v14 + 1);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 46;
    v17 = *(char *)(a3 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a3;
    else
      v18 = *(const std::string::value_type **)a3;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a3 + 23);
    else
      v19 = *(_QWORD *)(a3 + 8);
    v20 = std::string::append(&v27, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)&__p, (uint64_t)a4, 7, "Uninterpreted option is missing name or value.");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v13 = (void *)v27.__r_.__value_.__r.__words[0];
      goto LABEL_31;
    }
  }
}

void sub_1BF829310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _Unwind_Resume(a1);
}

google::protobuf::MessageOptions *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::MessageOptions>(_QWORD *a1)
{
  google::protobuf::MessageOptions *v2;
  unint64_t v3;
  google::protobuf::MessageOptions **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::MessageOptions **v12;
  char *v13;
  google::protobuf::MessageOptions *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::MessageOptions *)operator new();
  google::protobuf::MessageOptions::MessageOptions(v2);
  v3 = a1[26];
  v4 = (google::protobuf::MessageOptions **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::MessageOptions **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::MessageOptions **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::MessageOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF829498(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40EEA76D0DLL);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::FieldDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, google::protobuf::MessageLite *a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::FieldOptions *v12;
  void *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string __p;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  std::string v27;

  v12 = google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::FieldOptions>(*(_QWORD **)(a1 + 8));
  if ((google::protobuf::FieldOptions::IsInitialized(a4) & 1) != 0)
  {
    google::protobuf::MessageLite::SerializeAsString(a4, (uint64_t)&__p);
    google::protobuf::MessageLite::ParseFromString(v12, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)(a5 + 120) = v12;
    if (*((int *)v12 + 14) >= 1)
    {
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      if (v24 < 0)
        operator delete(v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v13);
      }
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v27;
    std::string::basic_string[abi:ne180100]((uint64_t)&v27, v14 + 1);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 46;
    v17 = *(char *)(a3 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a3;
    else
      v18 = *(const std::string::value_type **)a3;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a3 + 23);
    else
      v19 = *(_QWORD *)(a3 + 8);
    v20 = std::string::append(&v27, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)&__p, (uint64_t)a4, 7, "Uninterpreted option is missing name or value.");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v13 = (void *)v27.__r_.__value_.__r.__words[0];
      goto LABEL_31;
    }
  }
}

void sub_1BF829690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _Unwind_Resume(a1);
}

google::protobuf::FieldOptions *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::FieldOptions>(_QWORD *a1)
{
  google::protobuf::FieldOptions *v2;
  unint64_t v3;
  google::protobuf::FieldOptions **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::FieldOptions **v12;
  char *v13;
  google::protobuf::FieldOptions *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::FieldOptions *)operator new();
  google::protobuf::FieldOptions::FieldOptions(v2);
  v3 = a1[26];
  v4 = (google::protobuf::FieldOptions **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::FieldOptions **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::FieldOptions **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::FieldOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF829818(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40675F4B11);
  _Unwind_Resume(a1);
}

google::protobuf::ExtensionRangeOptions *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::ExtensionRangeOptions>(_QWORD *a1)
{
  google::protobuf::ExtensionRangeOptions *v2;
  unint64_t v3;
  google::protobuf::ExtensionRangeOptions **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::ExtensionRangeOptions **v12;
  char *v13;
  google::protobuf::ExtensionRangeOptions *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::ExtensionRangeOptions *)operator new();
  google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions(v2);
  v3 = a1[26];
  v4 = (google::protobuf::ExtensionRangeOptions **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::ExtensionRangeOptions **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::ExtensionRangeOptions **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::ExtensionRangeOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF82996C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C407F58948DLL);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::OneofDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, google::protobuf::MessageLite *a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::OneofOptions *v12;
  void *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string __p;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  std::string v27;

  v12 = google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::OneofOptions>(*(_QWORD **)(a1 + 8));
  if ((google::protobuf::OneofOptions::IsInitialized(a4) & 1) != 0)
  {
    google::protobuf::MessageLite::SerializeAsString(a4, (uint64_t)&__p);
    google::protobuf::MessageLite::ParseFromString(v12, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)(a5 + 40) = v12;
    if (*((int *)v12 + 14) >= 1)
    {
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      if (v24 < 0)
        operator delete(v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v13);
      }
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v27;
    std::string::basic_string[abi:ne180100]((uint64_t)&v27, v14 + 1);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 46;
    v17 = *(char *)(a3 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a3;
    else
      v18 = *(const std::string::value_type **)a3;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a3 + 23);
    else
      v19 = *(_QWORD *)(a3 + 8);
    v20 = std::string::append(&v27, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)&__p, (uint64_t)a4, 7, "Uninterpreted option is missing name or value.");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v13 = (void *)v27.__r_.__value_.__r.__words[0];
      goto LABEL_31;
    }
  }
}

void sub_1BF829B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _Unwind_Resume(a1);
}

google::protobuf::OneofOptions *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::OneofOptions>(_QWORD *a1)
{
  google::protobuf::OneofOptions *v2;
  unint64_t v3;
  google::protobuf::OneofOptions **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::OneofOptions **v12;
  char *v13;
  google::protobuf::OneofOptions *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::OneofOptions *)operator new();
  google::protobuf::OneofOptions::OneofOptions(v2);
  v3 = a1[26];
  v4 = (google::protobuf::OneofOptions **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::OneofOptions **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::OneofOptions **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::OneofOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF829CEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C407F58948DLL);
  _Unwind_Resume(a1);
}

_OWORD *std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::pair<std::string,google::protobuf::EnumValueDescriptor const*>>(uint64_t **a1, const void **a2, uint64_t a3)
{
  void **v5;
  _OWORD *v6;
  uint64_t **v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = (void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v11, a2);
  v6 = *v5;
  if (!*v5)
  {
    v7 = (uint64_t **)v5;
    v6 = operator new(0x40uLL);
    v6[2] = *(_OWORD *)a3;
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v8 = *(_QWORD *)(a3 + 16);
    v9 = *(_QWORD *)(a3 + 24);
    *(_QWORD *)(a3 + 16) = 0;
    *((_QWORD *)v6 + 6) = v8;
    *((_QWORD *)v6 + 7) = v9;
    std::__tree<std::string>::__insert_node_at(a1, v11, v7, (uint64_t *)v6);
  }
  return v6;
}

uint64_t *std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, uint64_t a3, __int128 **a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;

  v6 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v9, a2);
  result = *v6;
  if (!*v6)
  {
    std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t)a1, a4, (uint64_t)&v8);
    std::__tree<std::string>::__insert_node_at(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

void std::__tree<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::__map_value_compare<std::string,std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,google::protobuf::EnumValueDescriptor const*>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t a1@<X0>, __int128 **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  std::string *v7;
  __int128 *v8;
  __int128 v9;

  v5 = a1 + 8;
  v6 = (char *)operator new(0x40uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v7 = (std::string *)(v6 + 32);
  v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    v9 = *v8;
    *((_QWORD *)v6 + 6) = *((_QWORD *)v8 + 2);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v9;
  }
  *((_QWORD *)v6 + 7) = 0;
  *(_BYTE *)(a3 + 16) = 1;
}

void sub_1BF829EBC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  void **v2;
  uint64_t v3;

  *v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, google::protobuf::MessageLite *a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::EnumOptions *v12;
  void *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string __p;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  std::string v27;

  v12 = google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::EnumOptions>(*(_QWORD **)(a1 + 8));
  if ((google::protobuf::EnumOptions::IsInitialized(a4) & 1) != 0)
  {
    google::protobuf::MessageLite::SerializeAsString(a4, (uint64_t)&__p);
    google::protobuf::MessageLite::ParseFromString(v12, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)(a5 + 32) = v12;
    if (*((int *)v12 + 14) >= 1)
    {
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      if (v24 < 0)
        operator delete(v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v13);
      }
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v27;
    std::string::basic_string[abi:ne180100]((uint64_t)&v27, v14 + 1);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 46;
    v17 = *(char *)(a3 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a3;
    else
      v18 = *(const std::string::value_type **)a3;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a3 + 23);
    else
      v19 = *(_QWORD *)(a3 + 8);
    v20 = std::string::append(&v27, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)&__p, (uint64_t)a4, 7, "Uninterpreted option is missing name or value.");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v13 = (void *)v27.__r_.__value_.__r.__words[0];
      goto LABEL_31;
    }
  }
}

void sub_1BF82A0AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _Unwind_Resume(a1);
}

google::protobuf::EnumOptions *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::EnumOptions>(_QWORD *a1)
{
  google::protobuf::EnumOptions *v2;
  unint64_t v3;
  google::protobuf::EnumOptions **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::EnumOptions **v12;
  char *v13;
  google::protobuf::EnumOptions *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::EnumOptions *)operator new();
  google::protobuf::EnumOptions::EnumOptions(v2);
  v3 = a1[26];
  v4 = (google::protobuf::EnumOptions **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::EnumOptions **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::EnumOptions **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::EnumOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF82A234(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C401313E481);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::EnumValueDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, google::protobuf::MessageLite *a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::EnumValueOptions *v12;
  void *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string __p;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  std::string v27;

  v12 = google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::EnumValueOptions>(*(_QWORD **)(a1 + 8));
  if ((google::protobuf::EnumValueOptions::IsInitialized(a4) & 1) != 0)
  {
    google::protobuf::MessageLite::SerializeAsString(a4, (uint64_t)&__p);
    google::protobuf::MessageLite::ParseFromString(v12, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)(a5 + 32) = v12;
    if (*((int *)v12 + 14) >= 1)
    {
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      if (v24 < 0)
        operator delete(v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v13);
      }
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v27;
    std::string::basic_string[abi:ne180100]((uint64_t)&v27, v14 + 1);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 46;
    v17 = *(char *)(a3 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a3;
    else
      v18 = *(const std::string::value_type **)a3;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a3 + 23);
    else
      v19 = *(_QWORD *)(a3 + 8);
    v20 = std::string::append(&v27, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)&__p, (uint64_t)a4, 7, "Uninterpreted option is missing name or value.");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v13 = (void *)v27.__r_.__value_.__r.__words[0];
      goto LABEL_31;
    }
  }
}

void sub_1BF82A42C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _Unwind_Resume(a1);
}

google::protobuf::EnumValueOptions *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::EnumValueOptions>(_QWORD *a1)
{
  google::protobuf::EnumValueOptions *v2;
  unint64_t v3;
  google::protobuf::EnumValueOptions **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::EnumValueOptions **v12;
  char *v13;
  google::protobuf::EnumValueOptions *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::EnumValueOptions *)operator new();
  google::protobuf::EnumValueOptions::EnumValueOptions(v2);
  v3 = a1[26];
  v4 = (google::protobuf::EnumValueOptions **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::EnumValueOptions **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::EnumValueOptions **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::EnumValueOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF82A5B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C404EC876AALL);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::ServiceDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, google::protobuf::MessageLite *a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::ServiceOptions *v12;
  void *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string __p;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  std::string v27;

  v12 = google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::ServiceOptions>(*(_QWORD **)(a1 + 8));
  if ((google::protobuf::ServiceOptions::IsInitialized(a4) & 1) != 0)
  {
    google::protobuf::MessageLite::SerializeAsString(a4, (uint64_t)&__p);
    google::protobuf::MessageLite::ParseFromString(v12, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)(a5 + 24) = v12;
    if (*((int *)v12 + 14) >= 1)
    {
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      if (v24 < 0)
        operator delete(v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v13);
      }
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v27;
    std::string::basic_string[abi:ne180100]((uint64_t)&v27, v14 + 1);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 46;
    v17 = *(char *)(a3 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a3;
    else
      v18 = *(const std::string::value_type **)a3;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a3 + 23);
    else
      v19 = *(_QWORD *)(a3 + 8);
    v20 = std::string::append(&v27, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)&__p, (uint64_t)a4, 7, "Uninterpreted option is missing name or value.");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v13 = (void *)v27.__r_.__value_.__r.__words[0];
      goto LABEL_31;
    }
  }
}

void sub_1BF82A7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _Unwind_Resume(a1);
}

google::protobuf::ServiceOptions *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::ServiceOptions>(_QWORD *a1)
{
  google::protobuf::ServiceOptions *v2;
  unint64_t v3;
  google::protobuf::ServiceOptions **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::ServiceOptions **v12;
  char *v13;
  google::protobuf::ServiceOptions *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::ServiceOptions *)operator new();
  google::protobuf::ServiceOptions::ServiceOptions(v2);
  v3 = a1[26];
  v4 = (google::protobuf::ServiceOptions **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::ServiceOptions **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::ServiceOptions **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::ServiceOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF82A934(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C404EC876AALL);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AllocateOptionsImpl<google::protobuf::MethodDescriptor>(uint64_t a1, uint64_t a2, uint64_t a3, google::protobuf::MessageLite *a4, uint64_t a5, uint64_t a6)
{
  google::protobuf::MethodOptions *v12;
  void *v13;
  size_t v14;
  std::string *v15;
  const void *v16;
  int v17;
  const std::string::value_type *v18;
  std::string::size_type v19;
  std::string *v20;
  __int128 v21;
  std::string __p;
  void *v23;
  char v24;
  void *v25;
  void *v26;
  std::string v27;

  v12 = google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::MethodOptions>(*(_QWORD **)(a1 + 8));
  if ((google::protobuf::MethodOptions::IsInitialized(a4) & 1) != 0)
  {
    google::protobuf::MessageLite::SerializeAsString(a4, (uint64_t)&__p);
    google::protobuf::MessageLite::ParseFromString(v12, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    *(_QWORD *)(a5 + 88) = v12;
    if (*((int *)v12 + 14) >= 1)
    {
      if (v25)
      {
        v26 = v25;
        operator delete(v25);
      }
      if (v24 < 0)
        operator delete(v23);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        v13 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_31:
        operator delete(v13);
      }
    }
  }
  else
  {
    if (*(char *)(a2 + 23) >= 0)
      v14 = *(unsigned __int8 *)(a2 + 23);
    else
      v14 = *(_QWORD *)(a2 + 8);
    v15 = &v27;
    std::string::basic_string[abi:ne180100]((uint64_t)&v27, v14 + 1);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v15 = (std::string *)v27.__r_.__value_.__r.__words[0];
    if (v14)
    {
      if (*(char *)(a2 + 23) >= 0)
        v16 = (const void *)a2;
      else
        v16 = *(const void **)a2;
      memmove(v15, v16, v14);
    }
    *(_WORD *)((char *)&v15->__r_.__value_.__l.__data_ + v14) = 46;
    v17 = *(char *)(a3 + 23);
    if (v17 >= 0)
      v18 = (const std::string::value_type *)a3;
    else
      v18 = *(const std::string::value_type **)a3;
    if (v17 >= 0)
      v19 = *(unsigned __int8 *)(a3 + 23);
    else
      v19 = *(_QWORD *)(a3 + 8);
    v20 = std::string::append(&v27, v18, v19);
    v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)&__p, (uint64_t)a4, 7, "Uninterpreted option is missing name or value.");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
    {
      v13 = (void *)v27.__r_.__value_.__r.__words[0];
      goto LABEL_31;
    }
  }
}

void sub_1BF82AB2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  _Unwind_Resume(a1);
}

google::protobuf::MethodOptions *google::protobuf::DescriptorPool::Tables::AllocateMessage<google::protobuf::MethodOptions>(_QWORD *a1)
{
  google::protobuf::MethodOptions *v2;
  unint64_t v3;
  google::protobuf::MethodOptions **v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  google::protobuf::MethodOptions **v12;
  char *v13;
  google::protobuf::MethodOptions *v14;
  __int128 v15;
  char *v16;
  uint64_t v18;
  __int128 v19;
  char *v20;
  _QWORD *v21;

  v2 = (google::protobuf::MethodOptions *)operator new();
  google::protobuf::MethodOptions::MethodOptions(v2);
  v3 = a1[26];
  v4 = (google::protobuf::MethodOptions **)a1[25];
  if ((unint64_t)v4 >= v3)
  {
    v6 = (_QWORD *)a1[24];
    v7 = v4 - (google::protobuf::MethodOptions **)v6;
    if ((unint64_t)(v7 + 1) >> 61)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v8 = v3 - (_QWORD)v6;
    v9 = (uint64_t)(v3 - (_QWORD)v6) >> 2;
    if (v9 <= v7 + 1)
      v9 = v7 + 1;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
      v10 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v10 = v9;
    v21 = a1 + 26;
    if (v10)
    {
      v11 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 26), v10);
      v6 = (_QWORD *)a1[24];
      v4 = (google::protobuf::MethodOptions **)a1[25];
    }
    else
    {
      v11 = 0;
    }
    v12 = (google::protobuf::MethodOptions **)&v11[8 * v7];
    v13 = &v11[8 * v10];
    v20 = v13;
    *v12 = v2;
    *((_QWORD *)&v19 + 1) = v12 + 1;
    if (v4 == v6)
    {
      v5 = v12 + 1;
    }
    else
    {
      do
      {
        v14 = *--v4;
        *v4 = 0;
        *--v12 = v14;
      }
      while (v4 != v6);
      v5 = (_QWORD *)*((_QWORD *)&v19 + 1);
      v13 = v20;
    }
    v15 = *((_OWORD *)a1 + 12);
    a1[24] = v12;
    a1[25] = v5;
    v19 = v15;
    v16 = (char *)a1[26];
    a1[26] = v13;
    v20 = v16;
    v18 = v15;
    std::__split_buffer<std::unique_ptr<google::protobuf::Message>>::~__split_buffer((uint64_t)&v18);
  }
  else
  {
    *v4 = v2;
    v5 = v4 + 1;
  }
  a1[25] = v5;
  return v2;
}

void sub_1BF82ACB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4073C1A025);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(uint64_t a1, char *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(a1, *(_QWORD *)a2);
    std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::destroy(a1, *((_QWORD *)a2 + 1));
    if (a2[63] < 0)
      operator delete(*((void **)a2 + 5));
    operator delete(a2);
  }
}

uint64_t **std::__tree<std::__value_type<int,std::string>,std::__map_value_compare<int,std::__value_type<int,std::string>,std::less<int>,true>,std::allocator<std::__value_type<int,std::string>>>::__emplace_unique_key_args<int,std::piecewise_construct_t const&,std::tuple<int &&>,std::tuple<>>(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  uint64_t *v6;
  uint64_t **v7;
  int v8;
  uint64_t **v9;
  int v10;
  _DWORD *v11;

  v7 = a1 + 1;
  v6 = a1[1];
  if (v6)
  {
    v8 = *a2;
    while (1)
    {
      while (1)
      {
        v9 = (uint64_t **)v6;
        v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10)
          break;
        v6 = *v9;
        v7 = v9;
        if (!*v9)
          goto LABEL_10;
      }
      if (v10 >= v8)
        break;
      v6 = v9[1];
      if (!v6)
      {
        v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v9 = a1 + 1;
LABEL_10:
    v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((_QWORD *)v11 + 6) = 0;
    *((_QWORD *)v11 + 7) = 0;
    *((_QWORD *)v11 + 5) = 0;
    std::__tree<std::string>::__insert_node_at(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

void std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(uint64_t a1, _QWORD *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::vector<int> const,std::vector<int>>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::vector<int> const,std::vector<int>>,0>(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
  v3 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    *(_QWORD *)(a1 + 8) = v3;
    operator delete(v3);
  }
}

void std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(uint64_t a1, _QWORD *a2)
{
  void *v4;

  if (a2)
  {
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::destroy(a1, a2[1]);
    v4 = (void *)a2[4];
    if (v4)
    {
      a2[5] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

void std::default_delete<google::protobuf::UnknownFieldSet>::operator()[abi:ne180100](int a1, google::protobuf::UnknownFieldSet *this)
{
  void *v3;

  if (this)
  {
    v3 = *(void **)this;
    if (*(_QWORD *)this != *((_QWORD *)this + 1))
    {
      google::protobuf::UnknownFieldSet::ClearFallback(this);
      v3 = *(void **)this;
    }
    if (v3)
    {
      *((_QWORD *)this + 1) = v3;
      operator delete(v3);
    }
    JUMPOUT(0x1C3B8D890);
  }
}

uint64_t *std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__emplace_unique_key_args<std::vector<int>,std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>(uint64_t **a1, int **a2, uint64_t a3, uint64_t *a4)
{
  uint64_t **v6;
  uint64_t *result;
  uint64_t *v8;
  uint64_t v9;

  v6 = (uint64_t **)std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__find_equal<std::vector<int>>((uint64_t)a1, &v9, a2);
  result = *v6;
  if (!*v6)
  {
    std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>((uint64_t)a1, a4, (uint64_t)&v8);
    std::__tree<std::string>::__insert_node_at(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

_QWORD *std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__find_equal<std::vector<int>>(uint64_t a1, _QWORD *a2, int **a3)
{
  _QWORD *result;
  _QWORD *v4;
  _QWORD *v5;
  int *v6;
  _QWORD *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int v12;
  int v13;
  uint64_t v15;
  int v16;
  int v17;
  BOOL v18;

  v5 = *(_QWORD **)(a1 + 8);
  result = (_QWORD *)(a1 + 8);
  v4 = v5;
  if (v5)
  {
    v6 = a3[1];
    do
    {
      while (1)
      {
        v7 = v4;
        v8 = (int *)v4[4];
        v9 = (int *)v7[5];
        if (v8 != v9)
          break;
LABEL_12:
        if (*a3 != v6)
        {
          v15 = (uint64_t)(*a3 + 1);
          while (v8 != v9)
          {
            v16 = *v8;
            v17 = *(_DWORD *)(v15 - 4);
            if (*v8 < v17)
              break;
            ++v8;
            v18 = v17 < v16 || v15 == (_QWORD)v6;
            v15 += 4;
            if (v18)
              goto LABEL_27;
          }
          result = v7 + 1;
          v4 = (_QWORD *)v7[1];
          if (v4)
            continue;
        }
        goto LABEL_27;
      }
      v10 = v8 + 1;
      v11 = *a3;
      while (v11 != v6)
      {
        v12 = *v11;
        v13 = *(v10 - 1);
        if (*v11 < v13)
          break;
        ++v11;
        if (v13 < v12 || v10++ == v9)
          goto LABEL_12;
      }
      v4 = (_QWORD *)*v7;
      result = v7;
    }
    while (*v7);
  }
  else
  {
    v7 = result;
  }
LABEL_27:
  *a2 = v7;
  return result;
}

_QWORD *std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *result;

  v5 = a1 + 8;
  v6 = operator new(0x40uLL);
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 16) = 0;
  v7 = *a2;
  v6[5] = 0;
  v6[6] = 0;
  v6[4] = 0;
  result = std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(v6 + 4, *(const void **)v7, *(_QWORD *)(v7 + 8), (uint64_t)(*(_QWORD *)(v7 + 8) - *(_QWORD *)v7) >> 2);
  *((_DWORD *)v6 + 14) = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1BF82B0FC(_Unwind_Exception *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  *v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,int>,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,int>,void *>>>::operator()[abi:ne180100](uint64_t a1, _QWORD *__p)
{
  void *v3;

  if (*(_BYTE *)(a1 + 8))
  {
    v3 = (void *)__p[4];
    if (v3)
    {
      __p[5] = v3;
      operator delete(v3);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

uint64_t *std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::__emplace_unique_key_args<std::vector<int>,std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>(uint64_t **a1, int **a2, uint64_t a3, uint64_t *a4)
{
  uint64_t **v6;
  uint64_t *v7;
  uint64_t **v8;
  uint64_t *v10[3];
  uint64_t v11;

  v6 = (uint64_t **)std::__tree<std::__value_type<std::vector<int>,int>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,int>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,int>>>::__find_equal<std::vector<int>>((uint64_t)a1, &v11, a2);
  v7 = *v6;
  if (!*v6)
  {
    v8 = v6;
    std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>((uint64_t)a1, a4, (uint64_t)v10);
    std::__tree<std::string>::__insert_node_at(a1, v11, v8, v10[0]);
    v7 = v10[0];
    v10[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>>>>::reset[abi:ne180100]((uint64_t)v10, 0);
  }
  return v7;
}

_QWORD *std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::__construct_node<std::piecewise_construct_t const&,std::tuple<std::vector<int> const&>,std::tuple<>>@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *result;

  v5 = a1 + 8;
  v6 = operator new(0x50uLL);
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v5;
  *(_BYTE *)(a3 + 16) = 0;
  v7 = *a2;
  v6[5] = 0;
  v6[6] = 0;
  v6[4] = 0;
  result = std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(v6 + 4, *(const void **)v7, *(_QWORD *)(v7 + 8), (uint64_t)(*(_QWORD *)(v7 + 8) - *(_QWORD *)v7) >> 2);
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = 0;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

void sub_1BF82B278(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::vector<int>,std::vector<int>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a1;
  *(_QWORD *)a1 = a2;
  if (v2)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<std::vector<int> const,std::vector<int>>,0>((uint64_t)v2 + 32);
    operator delete(v2);
  }
}

char *std::vector<int>::__assign_with_size[abi:ne180100]<int *,int *>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  char *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  size_t v17;
  void *v18;
  char *v19;

  v7 = result;
  v8 = *((_QWORD *)result + 2);
  v9 = *(char **)result;
  if (a4 > (v8 - *(_QWORD *)result) >> 2)
  {
    if (v9)
    {
      *((_QWORD *)result + 1) = v9;
      operator delete(v9);
      v8 = 0;
      *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = v8 >> 1;
    if (v8 >> 1 <= a4)
      v10 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL)
      v11 = 0x3FFFFFFFFFFFFFFFLL;
    else
      v11 = v10;
    result = std::vector<int>::__vallocate[abi:ne180100](v7, v11);
    v13 = (char *)v7[1];
    v12 = (void **)(v7 + 1);
    v9 = v13;
LABEL_16:
    v17 = a3 - (_QWORD)__src;
    if (v17)
    {
      v18 = v9;
      v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  v12 = (void **)(result + 8);
  v14 = (_BYTE *)*((_QWORD *)result + 1);
  v15 = (v14 - v9) >> 2;
  if (v15 >= a4)
    goto LABEL_16;
  v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    result = (char *)memmove(*(void **)result, __src, v14 - v9);
    v9 = (char *)*v12;
  }
  v17 = a3 - (_QWORD)v16;
  if (v17)
  {
    v18 = v9;
    v19 = v16;
LABEL_18:
    result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *v12 = &v9[v17];
  return result;
}

_QWORD *std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::find<std::vector<int>>(uint64_t a1, int **a2)
{
  _QWORD *v3;
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  int v9;
  int v10;
  BOOL v11;

  v3 = (_QWORD *)(a1 + 8);
  result = std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::__lower_bound<std::vector<int>>(a1, a2, *(_QWORD **)(a1 + 8), (_QWORD *)(a1 + 8));
  if (v3 != result)
  {
    v6 = result[4];
    v5 = result[5];
    if (v6 == v5)
      return result;
    v7 = *a2;
    v8 = v6 + 4;
    while (v7 != a2[1])
    {
      v9 = *v7;
      v10 = *(_DWORD *)(v8 - 4);
      if (*v7 < v10)
        break;
      ++v7;
      v11 = v10 < v9 || v8 == v5;
      v8 += 4;
      if (v11)
        return result;
    }
  }
  return v3;
}

_QWORD *std::__tree<std::__value_type<std::vector<int>,std::vector<int>>,std::__map_value_compare<std::vector<int>,std::__value_type<std::vector<int>,std::vector<int>>,std::less<std::vector<int>>,true>,std::allocator<std::__value_type<std::vector<int>,std::vector<int>>>>::__lower_bound<std::vector<int>>(uint64_t a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  _QWORD *result;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  int v8;
  int v9;
  BOOL v10;

  result = a4;
  if (a3)
  {
    v5 = a2[1];
    do
    {
      if (*a2 == v5)
      {
LABEL_12:
        result = a3;
      }
      else
      {
        v6 = (int *)a3[4];
        v7 = *a2 + 4;
        while (v6 != (int *)a3[5])
        {
          v8 = *v6;
          v9 = *(_DWORD *)(v7 - 4);
          if (*v6 < v9)
            break;
          ++v6;
          v10 = v9 < v8 || v7 == v5;
          v7 += 4;
          if (v10)
            goto LABEL_12;
        }
        ++a3;
      }
      a3 = (_QWORD *)*a3;
    }
    while (a3);
  }
  return result;
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::FileDescriptor const*),google::protobuf::FileDescriptor const*&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

uint64_t std::__call_once_proxy[abi:ne180100]<std::tuple<void (&)(google::protobuf::internal::LazyDescriptor *),google::protobuf::internal::LazyDescriptor *&&>>(uint64_t a1)
{
  return (**(uint64_t (***)(_QWORD))a1)(**(_QWORD **)(*(_QWORD *)a1 + 8));
}

void google::protobuf::internal::AnyMetadata::PackFrom(uint64_t **this, const google::protobuf::Message *a2)
{
  void *__p[2];
  char v5;

  std::string::basic_string[abi:ne180100]<0>(__p, "type.googleapis.com/");
  google::protobuf::internal::AnyMetadata::PackFrom(this, (const char *)a2, (uint64_t *)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_1BF82B544(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::AnyMetadata::PackFrom(uint64_t **a1, const char *a2, uint64_t *a3)
{
  uint64_t *v6;
  uint64_t v7;
  const char *v8;
  const char *v9;
  std::string **v10;
  std::string *v11;
  uint64_t v13[2];
  const char *v14[2];
  std::string __p;

  v6 = *a1;
  google::protobuf::internal::InitProtobufDefaults((google::protobuf::internal *)a1);
  v7 = (*(uint64_t (**)(const char *))(*(_QWORD *)a2 + 168))(a2);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v14, *(uint64_t **)(v7 + 8), v8);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v13, a3, v9);
  google::protobuf::internal::GetTypeUrl(v14[0], (uint64_t)v14[1], v13[0], v13[1], &__p);
  google::protobuf::internal::ArenaStringPtr::SetNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, (__n128 *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v10 = (std::string **)a1[1];
  v11 = *v10;
  if (*v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v10, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
    v11 = *v10;
  }
  return google::protobuf::MessageLite::SerializeToString(a2, v11);
}

void sub_1BF82B628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

__n128 google::protobuf::internal::ArenaStringPtr::SetNoArena(uint64_t *a1, uint64_t a2, __n128 *a3)
{
  uint64_t v4;
  __n128 result;
  uint64_t v7;

  v4 = *a1;
  if (*a1 == a2)
  {
    v7 = operator new();
    result = *a3;
    *(__n128 *)v7 = *a3;
    *(_QWORD *)(v7 + 16) = a3[1].n128_u64[0];
    a3->n128_u64[0] = 0;
    a3->n128_u64[1] = 0;
    a3[1].n128_u64[0] = 0;
    *a1 = v7;
  }
  else
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    result = *a3;
    *(_QWORD *)(v4 + 16) = a3[1].n128_u64[0];
    *(__n128 *)v4 = result;
    a3[1].n128_u8[7] = 0;
    a3->n128_u8[0] = 0;
  }
  return result;
}

BOOL google::protobuf::internal::GetAnyFieldDescriptors(google::protobuf::internal *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor **a3, const google::protobuf::FieldDescriptor **a4)
{
  google::protobuf::Descriptor *v6;
  _QWORD *v7;
  size_t v8;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (***v18)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t (**v19)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *);
  uint64_t *v20;

  v6 = (google::protobuf::Descriptor *)(*(uint64_t (**)(google::protobuf::internal *, const google::protobuf::Message *, const google::protobuf::FieldDescriptor **, const google::protobuf::FieldDescriptor **))(*(_QWORD *)this + 168))(this, a2, a3, a4);
  v7 = (_QWORD *)*((_QWORD *)v6 + 1);
  v8 = strlen("google.protobuf.Any");
  if (*((char *)v7 + 23) < 0)
  {
    if (v8 == v7[1])
    {
      if (v8 == -1)
        goto LABEL_20;
      v7 = (_QWORD *)*v7;
      goto LABEL_8;
    }
    return 0;
  }
  if (v8 != *((unsigned __int8 *)v7 + 23))
    return 0;
  if (v8 == -1)
LABEL_20:
    std::string::__throw_out_of_range[abi:ne180100]();
LABEL_8:
  if (memcmp(v7, "google.protobuf.Any", v8))
    return 0;
  *(_QWORD *)a2 = google::protobuf::Descriptor::FindFieldByNumber(v6, 1);
  *a3 = (const google::protobuf::FieldDescriptor *)google::protobuf::Descriptor::FindFieldByNumber(v6, 2);
  v10 = *(_QWORD *)a2;
  if (!v10)
    return 0;
  v11 = *(unint64_t **)(v10 + 48);
  if (v11)
  {
    v16 = v10;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v12 = atomic_load(v11);
    if (v12 != -1)
    {
      v19 = &v17;
      v20 = &v16;
      v18 = &v19;
      std::__call_once(v11, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  if (*(_DWORD *)(v10 + 56) != 9)
    return 0;
  v13 = (uint64_t)*a3;
  if (!v13)
    return 0;
  v14 = *(unint64_t **)(v13 + 48);
  if (v14)
  {
    v16 = v13;
    v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    v15 = atomic_load(v14);
    if (v15 != -1)
    {
      v19 = &v17;
      v20 = &v16;
      v18 = &v19;
      std::__call_once(v14, &v18, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<void (*&&)(google::protobuf::FieldDescriptor const*),google::protobuf::FieldDescriptor const*&&>>);
    }
  }
  return *(_DWORD *)(v13 + 56) == 12;
}

void google::protobuf::Any::PackFrom(uint64_t **this, const google::protobuf::Message *a2)
{
  google::protobuf::internal::AnyMetadata::PackFrom(this + 5, a2);
}

void google::protobuf::Any::~Any(google::protobuf::Any *this)
{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)this = &off_1E79299B0;
  v2 = *((_QWORD *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  google::protobuf::Any::~Any(this);
  JUMPOUT(0x1C3B8D890);
}

uint64_t google::protobuf::Any::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void google::protobuf::Any::Clear(google::protobuf::Any *this)
{
  uint64_t v1;
  uint64_t v2;
  google::protobuf::internal::InternalMetadataWithArena *v3;
  char v4;

  v1 = *((_QWORD *)this + 2);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0)
    {
      **(_BYTE **)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v1 = 0;
      *(_BYTE *)(v1 + 23) = 0;
    }
  }
  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  v4 = *((_BYTE *)this + 8);
  v3 = (google::protobuf::Any *)((char *)this + 8);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v3);
}

google::protobuf::internal *google::protobuf::Any::_InternalParse(google::protobuf::Any *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  google::protobuf::internal::ParseContext *v5;
  std::string **v7;
  std::string **v8;
  uint64_t *v9;
  std::string::value_type *v10;
  char *v11;
  BOOL v13;
  char *v14;
  std::string *v15;
  std::string *v16;
  google::protobuf::internal *TagFallback;
  google::protobuf::internal *v18;

  v18 = a2;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v18, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    v7 = (std::string **)((char *)this + 24);
    v8 = (std::string **)((char *)this + 16);
    v9 = (uint64_t *)((char *)this + 8);
    while (1)
    {
      v10 = (char *)v18 + 1;
      v11 = (char *)*(unsigned __int8 *)v18;
      if ((*(char *)v18 & 0x80000000) == 0)
        goto LABEL_7;
      v11 = (char *)(v11 + (*v10 << 7) - 128);
      if ((*v10 & 0x80000000) == 0)
        break;
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v18, v11);
      v18 = TagFallback;
      if (!TagFallback)
        return 0;
      v10 = (std::string::value_type *)TagFallback;
LABEL_8:
      if (v11 >> 3 == 2)
      {
        if (v11 == 18)
        {
          v15 = *v7;
          if (*v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          {
            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
            v15 = *v7;
            v10 = (std::string::value_type *)v18;
          }
          v14 = google::protobuf::internal::InlineGreedyStringParser(v15, v10, (uint64_t)a3);
          goto LABEL_25;
        }
      }
      else if (v11 >> 3 == 1 && v11 == 10)
      {
        v16 = *v8;
        if (*v8 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v16 = *v8;
          v10 = (std::string::value_type *)v18;
        }
        v14 = google::protobuf::internal::InlineGreedyStringParserUTF8(v16, v10, (uint64_t)a3, (google::protobuf::internal *)"google.protobuf.Any.type_url");
        goto LABEL_25;
      }
      if ((_DWORD)v11)
        v13 = (v11 & 7) == 4;
      else
        v13 = 1;
      if (v13)
      {
        *((_DWORD *)a3 + 20) = (_DWORD)v11 - 1;
        return v18;
      }
      v14 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, v9, (google::protobuf::internal::InternalMetadataWithArena *)v10, a3, v5);
LABEL_25:
      v18 = (google::protobuf::internal *)v14;
      if (!v14)
        return 0;
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v18, *((_DWORD *)a3 + 23)))return v18;
    }
    v10 = (char *)v18 + 2;
LABEL_7:
    v18 = (google::protobuf::internal *)v10;
    goto LABEL_8;
  }
  return v18;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Any::InternalSerializeWithCachedSizesToArray(google::protobuf::Any *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  google::protobuf::internal *v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;

  v7 = (google::protobuf::internal *)*((_QWORD *)this + 2);
  if (*((char *)v7 + 23) < 0)
  {
    v8 = (const char *)*((_QWORD *)v7 + 1);
    if (!v8)
      goto LABEL_7;
    v7 = *(google::protobuf::internal **)v7;
    goto LABEL_6;
  }
  v8 = (const char *)*((unsigned __int8 *)v7 + 23);
  if (*((_BYTE *)v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v7, v8, 1, (google::protobuf::internal *)"google.protobuf.Any.type_url");
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 2), (char *)a2);
  }
LABEL_7:
  v9 = *((_QWORD *)this + 3);
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(v9 + 23))
      goto LABEL_10;
    goto LABEL_9;
  }
  if (*(_QWORD *)(v9 + 8))
LABEL_9:
    a2 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, v9, (char *)a2);
LABEL_10:
  v10 = *((_QWORD *)this + 1);
  if ((v10 & 1) != 0)
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v10 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
  else
    return (const google::protobuf::UnknownFieldSet *)a2;
}

char *google::protobuf::Any::ByteSizeLong(google::protobuf::Any *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const google::protobuf::UnknownFieldSet *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *((_QWORD *)this + 2);
  v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(_QWORD *)(v1 + 8))
      goto LABEL_3;
LABEL_7:
    v4 = 0;
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v1 + 23))
    goto LABEL_7;
LABEL_3:
  v3 = *(_QWORD *)(v1 + 8);
  if ((v2 & 0x80u) == 0)
    v3 = v2;
  v4 = (const google::protobuf::UnknownFieldSet *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  v5 = *((_QWORD *)this + 3);
  v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(_QWORD *)(v5 + 8))
      goto LABEL_13;
  }
  else if (!*(_BYTE *)(v5 + 23))
  {
    goto LABEL_13;
  }
  v7 = *(_QWORD *)(v5 + 8);
  if ((v6 & 0x80u) == 0)
    v7 = v6;
  v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if ((*((_BYTE *)this + 8) & 1) != 0)
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Any *)((char *)this + 8), v4, (_DWORD *)this + 8);
  *((_DWORD *)this + 8) = (_DWORD)v4;
  return (char *)v4;
}

void google::protobuf::Any::MergeFrom(google::protobuf::Any *this, const google::protobuf::Message *lpsrc)
{
  std::string *v4;
  const google::protobuf::Any *v5;
  google::protobuf::Message *v6;
  char v7;
  std::string v8[2];

  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/any.pb.cc", 278);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5)
    google::protobuf::Any::MergeFrom(this, v5);
  else
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
}

void sub_1BF82BDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::Any::MergeFrom(google::protobuf::Any *this, const google::protobuf::Any *a2)
{
  std::string *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  std::string *v9;
  std::string **v10;
  std::string *v11;
  char v12;
  std::string v13[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/any.pb.cc", 293);
    v4 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((google::protobuf::Any *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  v6 = *((_QWORD *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(_QWORD *)(v6 + 8))
      goto LABEL_13;
  }
  else if (!*(_BYTE *)(v6 + 23))
  {
    goto LABEL_13;
  }
  v7 = (uint64_t *)*((_QWORD *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 2, v6);
    else
      std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  v8 = *((_QWORD *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(_QWORD *)(v8 + 8))
      return;
  }
  else if (!*(_BYTE *)(v8 + 23))
  {
    return;
  }
  v11 = (std::string *)*((_QWORD *)this + 3);
  v10 = (std::string **)((char *)this + 24);
  v9 = v11;
  if (v11 != (std::string *)v8)
  {
    if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v10, v8);
    else
      std::string::operator=(v9, (const std::string *)v8);
  }
}

void sub_1BF82BED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::Any::CopyFrom(google::protobuf::Any *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Any::Clear(this);
    google::protobuf::Any::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::Any::IsInitialized(google::protobuf::Any *this)
{
  return 1;
}

uint64_t google::protobuf::Any::GetMetadata(google::protobuf::Any *this)
{
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fany_2eproto);
  return file_level_metadata_google_2fprotobuf_2fany_2eproto;
}

google::protobuf::Any *google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Any>(google::protobuf::Arena *this)
{
  google::protobuf::Any *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (google::protobuf::Any *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::Any>);
    google::protobuf::Any::Any(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (google::protobuf::Any *)operator new();
    google::protobuf::Any::Any(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF82BFD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40FE55437CLL);
  _Unwind_Resume(a1);
}

google::protobuf::Any *google::protobuf::Any::New(google::protobuf::Any *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Any>(0);
}

google::protobuf::Any *google::protobuf::Any::New(google::protobuf::Any *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Any>(a2);
}

uint64_t google::protobuf::Any::GetCachedSize(google::protobuf::Any *this)
{
  return *((unsigned int *)this + 8);
}

uint64_t google::protobuf::internal::arena_destruct_object<google::protobuf::Any>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

uint64_t google::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)result = a2;
  *(_QWORD *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  std::string::append(a1 + 1, a2);
  return a1;
}

{
  std::string *v3;
  std::string::size_type v4;
  std::string::size_type v5;

  v3 = a1 + 1;
  v4 = *((_QWORD *)a2 + 1);
  if (a2[23] >= 0)
  {
    v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

_QWORD *google::protobuf::internal::VersionString@<X0>(google::protobuf::internal *this@<X0>, _QWORD *a2@<X8>)
{
  char __str[128];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x80uLL, "%d.%d.%d", (int)this / 1000000, (int)this / 1000 % 1000, (int)this % 1000);
  __str[127] = 0;
  return std::string::basic_string[abi:ne180100]<0>(a2, __str);
}

const char **google::protobuf::internal::LogFinisher::operator=(int a1, const char **this)
{
  return google::protobuf::internal::LogMessage::Finish(this);
}

void google::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0)
    operator delete(this[3]);
}

uint64_t google::protobuf::internal::DefaultLogHandler(uint64_t result, const char *a2, int a3, uint64_t a4)
{
  FILE **v4;
  const char *v5;

  if ((result & 0x80000000) == 0)
  {
    v4 = (FILE **)MEMORY[0x1E0C80C10];
    if (*(char *)(a4 + 23) >= 0)
      v5 = (const char *)a4;
    else
      v5 = *(const char **)a4;
    fprintf((FILE *)*MEMORY[0x1E0C80C10], "[libprotobuf %s %s:%d] %s\n", google::protobuf::internal::DefaultLogHandler(google::protobuf::LogLevel,char const*,int,std::string const&)::level_names[result], a2, a3, v5);
    return fflush(*v4);
  }
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, uint64_t a2)
{
  void *v4;
  unsigned int v5;
  void **v6;
  std::string::size_type v7;
  void **p_p;
  std::string::size_type v9;
  void *__p;
  std::string::size_type v12;
  uint64_t v13;

  v4 = *(void **)a2;
  if (v4)
  {
    std::string::basic_string[abi:ne180100](&__p, v4, *(_QWORD *)(a2 + 8));
    v5 = HIBYTE(v13);
    v6 = (void **)__p;
    v7 = v12;
  }
  else
  {
    v7 = 0;
    v6 = 0;
    v5 = 0;
    __p = 0;
    v12 = 0;
    v13 = 0;
  }
  if ((v5 & 0x80u) == 0)
    p_p = &__p;
  else
    p_p = v6;
  if ((v5 & 0x80u) == 0)
    v9 = v5;
  else
    v9 = v7;
  std::string::append(a1 + 1, (const std::string::value_type *)p_p, v9);
  if (SHIBYTE(v13) < 0)
    operator delete(__p);
  return a1;
}

{
  char __str[128];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x80uLL, "%lu", a2);
  __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

void sub_1BF82C2A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, int a2)
{
  char __str[128];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x80uLL, "%d", a2);
  __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

{
  char __str[128];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  snprintf(__str, 0x80uLL, "%u", a2);
  __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

const char **google::protobuf::internal::LogMessage::Finish(const char **this)
{
  const char **v1;
  uint64_t v2;
  int v3;
  void *exception;

  v1 = this;
  if (*(_DWORD *)this == 3)
  {
    v2 = 3;
  }
  else
  {
    v3 = atomic_load((unsigned int *)&google::protobuf::internal::log_silencer_count_);
    if (v3 > 0)
      goto LABEL_6;
    v2 = *(unsigned int *)this;
  }
  this = (const char **)google::protobuf::internal::log_handler_(v2, v1[1], *((_DWORD *)v1 + 4), (uint64_t)(v1 + 3));
LABEL_6:
  if (*(_DWORD *)v1 == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    google::protobuf::FatalException::FatalException(exception, v1[1], *((unsigned int *)v1 + 4), v1 + 3);
  }
  return this;
}

void sub_1BF82C4D0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t (*google::protobuf::SetLogHandler(uint64_t (*a1)()))()
{
  uint64_t (*v1)();
  uint64_t (*v2)();

  v1 = google::protobuf::internal::log_handler_;
  if (a1)
    v2 = a1;
  else
    v2 = google::protobuf::internal::NullLogHandler;
  google::protobuf::internal::log_handler_ = v2;
  if (v1 == google::protobuf::internal::NullLogHandler)
    return 0;
  else
    return v1;
}

uint64_t google::protobuf::ghtonl(google::protobuf *this)
{
  return bswap32(this);
}

void google::protobuf::internal::OnShutdown(google::protobuf::internal *this, void (*a2)(void), const void *a3)
{
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::RunZeroArgFunc, (void (*)(const void *))this, a3);
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&off_1E7929AC0;
  if (SHIBYTE(this[5].__vftable) < 0)
    operator delete(this[3].__vftable);
  std::exception::~exception(this);
}

{
  google::protobuf::FatalException::~FatalException(this);
  JUMPOUT(0x1C3B8D890);
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result;

  result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0)
    return *(_QWORD *)result;
  return result;
}

uint64_t google::protobuf::FatalException::FatalException(uint64_t a1, uint64_t a2, int a3, __int128 *a4)
{
  std::string *v5;
  __int128 v6;

  *(_QWORD *)a1 = &off_1E7929AC0;
  *(_QWORD *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  v5 = (std::string *)(a1 + 24);
  if (*((char *)a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *(const std::string::value_type **)a4, *((_QWORD *)a4 + 1));
  }
  else
  {
    v6 = *a4;
    v5->__r_.__value_.__r.__words[2] = *((_QWORD *)a4 + 2);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return a1;
}

void sub_1BF82C604(_Unwind_Exception *a1)
{
  std::exception *v1;

  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::util::Status::Status(uint64_t this)
{
  *(_DWORD *)this = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

void google::protobuf::util::Status::~Status(void **this)
{
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

google::protobuf::util::Status *google::protobuf::util::Status::Status(google::protobuf::util::Status *this, const google::protobuf::util::Status *a2)
{
  std::string *v3;
  __int128 v4;

  *(_DWORD *)this = *(_DWORD *)a2;
  v3 = (std::string *)((char *)this + 8);
  if (*((char *)a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external(v3, *((const std::string::value_type **)a2 + 1), *((_QWORD *)a2 + 2));
  }
  else
  {
    v4 = *(_OWORD *)((char *)a2 + 8);
    v3->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 3);
    *(_OWORD *)&v3->__r_.__value_.__l.__data_ = v4;
  }
  return this;
}

uint64_t google::protobuf::util::Status::operator=(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  return a1;
}

void google::protobuf::util::Status::ToString(google::protobuf::util::Status *this@<X0>, _QWORD *a2@<X8>)
{
  unsigned int v3;
  uint64_t v5;
  char *v6;
  char *v7;
  std::string *v8;
  __int128 v9;
  int v10;
  const std::string::value_type *v11;
  std::string::size_type v12;
  std::string *v13;
  __int128 v14;
  std::string v15;
  std::string v16;

  v3 = *(_DWORD *)this;
  if (!*(_DWORD *)this)
  {
    v6 = "OK";
LABEL_24:
    std::string::basic_string[abi:ne180100]<0>(a2, v6);
    return;
  }
  if (*((char *)this + 31) < 0)
    v5 = *((_QWORD *)this + 2);
  else
    v5 = *((unsigned __int8 *)this + 31);
  if (!v5)
  {
    if (v3 > 0x10)
      v6 = "UNKNOWN";
    else
      v6 = off_1E7929AD8[v3 - 1];
    goto LABEL_24;
  }
  if (v3 > 0x10)
    v7 = "UNKNOWN";
  else
    v7 = off_1E7929AD8[v3 - 1];
  std::string::basic_string[abi:ne180100]<0>(&v15, v7);
  v8 = std::string::append(&v15, ":");
  v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  v10 = *((char *)this + 31);
  if (v10 >= 0)
    v11 = (char *)this + 8;
  else
    v11 = (const std::string::value_type *)*((_QWORD *)this + 1);
  if (v10 >= 0)
    v12 = *((unsigned __int8 *)this + 31);
  else
    v12 = *((_QWORD *)this + 2);
  v13 = std::string::append(&v16, v11, v12);
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  a2[2] = *((_QWORD *)&v13->__r_.__value_.__l + 2);
  *(_OWORD *)a2 = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v16.__r_.__value_.__l.__data_);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v15.__r_.__value_.__l.__data_);
}

void sub_1BF82C814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

_QWORD *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  const std::locale::facet *v10;
  uint64_t v11;
  _BYTE v13[16];
  std::locale v14;

  MEMORY[0x1C3B8D6BC](v13, a1);
  if (v13[0])
  {
    v6 = (uint64_t)a1 + *(_QWORD *)(*a1 - 24);
    v7 = *(_QWORD *)(v6 + 40);
    v8 = *(_DWORD *)(v6 + 8);
    v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
      v10 = std::locale::use_facet(&v14, MEMORY[0x1E0DE4A90]);
      v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20)
      v11 = a2 + a3;
    else
      v11 = a2;
    if (!std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(v7, a2, v11, a2 + a3, v6, (char)v9))
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 5);
  }
  MEMORY[0x1C3B8D6C8](v13);
  return a1;
}

void sub_1BF82C950(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  _QWORD *v12;

  MEMORY[0x1C3B8D6C8](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(_QWORD *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x1BF82C930);
}

void sub_1BF82C998(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6;
  uint64_t v11;
  int64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v18;

  v6 = a1;
  if (a1)
  {
    v11 = *(_QWORD *)(a5 + 24);
    if (v11 <= a4 - a2)
      v12 = 0;
    else
      v12 = v11 - (a4 - a2);
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 96))(a1) != a3 - a2)
      return 0;
    if (v12 >= 1)
    {
      std::string::basic_string[abi:ne180100](__p, v12, __c);
      v13 = v18 >= 0 ? __p : (void **)__p[0];
      v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(_QWORD *)v6 + 96))(v6, v13, v12);
      if (v18 < 0)
        operator delete(__p[0]);
      if (v14 != v12)
        return 0;
    }
    v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, a3, v15) == v15)
      *(_QWORD *)(a5 + 24) = 0;
    else
      return 0;
  }
  return v6;
}

void sub_1BF82CACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::StripWhitespace(std::string *this)
{
  std::string *v1;
  std::string::size_type size;
  std::string::size_type v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v1 = this;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    size = this->__r_.__value_.__l.__size_;
  else
    LODWORD(size) = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((int)size < 1)
  {
    if ((_DWORD)size)
      return this;
    goto LABEL_22;
  }
  v3 = 0;
  while (1)
  {
    this = (std::string *)std::string::at(v1, v3);
    v4 = this->__r_.__value_.__s.__data_[0];
    if ((v4 - 9) >= 5 && v4 != 32)
      break;
    if (size == ++v3)
      goto LABEL_22;
  }
  if ((_DWORD)size == (_DWORD)v3)
  {
LABEL_22:
    if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
    {
      *v1->__r_.__value_.__l.__data_ = 0;
      v1->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      v1->__r_.__value_.__s.__data_[0] = 0;
      *((_BYTE *)&v1->__r_.__value_.__s + 23) = 0;
    }
    return this;
  }
  if ((_DWORD)v3)
  {
    this = std::string::erase(v1, 0, v3);
    LODWORD(size) = size - v3;
  }
  v5 = (size - 1);
  if ((int)size >= 1)
  {
    v6 = 0;
    while (1)
    {
      this = (std::string *)std::string::at(v1, v5 + v6);
      v7 = this->__r_.__value_.__s.__data_[0];
      if ((v7 - 9) >= 5 && v7 != 32)
        break;
      --v6;
      if (v5 + v6 + 1 <= 0)
        return this;
    }
    if ((_DWORD)v6)
      return std::string::erase(v1, (v5 + v6 + 1), 0xFFFFFFFFFFFFFFFFLL);
  }
  return this;
}

void google::protobuf::SplitStringUsing(std::string *a1, char *__s, std::vector<std::string> *a3)
{
  int v5;
  std::string::size_type v6;
  std::string *v7;
  std::string::size_type v8;
  std::string *v9;
  std::string::size_type v10;
  size_t v11;
  std::string *v12;
  size_t v13;
  std::string::size_type v14;
  std::string::size_type v15;
  size_t v16;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  std::string *v23;
  unint64_t v24;
  size_t v25;
  size_t v26;
  unsigned __int8 *v27;
  unint64_t v28;
  std::string::size_type size;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  unsigned __int8 *v34;
  int v35;
  std::vector<std::string> *v37;
  std::string __dst;

  v5 = *__s;
  if (*__s && !__s[1])
  {
    size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
    if ((size & 0x80u) == 0)
      v30 = (unsigned __int8 *)a1;
    else
      v30 = (unsigned __int8 *)a1->__r_.__value_.__r.__words[0];
    if ((size & 0x80u) != 0)
      size = a1->__r_.__value_.__l.__size_;
    if (size)
    {
      v31 = &v30[size];
      v32 = &v30[size];
      do
      {
        if (*v30 == v5)
        {
          v33 = v30 + 1;
        }
        else
        {
          v34 = v30 + 1;
          while (v34 != v31)
          {
            v35 = *v34++;
            if (v35 == v5)
            {
              v33 = v34 - 1;
              goto LABEL_60;
            }
          }
          v33 = v32;
LABEL_60:
          std::string::basic_string[abi:ne180100](&__dst, v30, v33 - v30);
          v37 = a3;
          std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v37, (__int128 *)&__dst);
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__dst.__r_.__value_.__l.__data_);
        }
        v30 = v33;
      }
      while (v33 != v31);
    }
  }
  else
  {
    v6 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
    v7 = (std::string *)a1->__r_.__value_.__r.__words[0];
    v8 = a1->__r_.__value_.__l.__size_;
    if ((v6 & 0x80u) == 0)
      v9 = a1;
    else
      v9 = (std::string *)a1->__r_.__value_.__r.__words[0];
    if ((v6 & 0x80u) == 0)
      v10 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
    else
      v10 = a1->__r_.__value_.__l.__size_;
    v11 = strlen(__s);
    if (v10)
    {
      v12 = v9;
      v13 = v11;
      if (v11)
      {
        while (memchr(__s, v12->__r_.__value_.__s.__data_[0], v13))
        {
          v12 = (std::string *)((char *)v12 + 1);
          if (!--v10)
            return;
        }
      }
      v14 = (char *)v12 - (char *)v9;
      while (2)
      {
        if (v14 != -1)
        {
          if ((v6 & 0x80u) != 0)
          {
            v15 = v8;
          }
          else
          {
            v7 = a1;
            v15 = v6;
          }
          v16 = strlen(__s);
          if (v15 <= v14 || v16 == 0)
          {
LABEL_64:
            std::string::basic_string(&__dst, a1, v14, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v37);
            v37 = a3;
            std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v37, (__int128 *)&__dst);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__dst.__r_.__value_.__l.__data_);
          }
          else
          {
            v18 = (unsigned __int8 *)v7 + v14;
            v19 = (unsigned __int8 *)v7 + v15;
            v20 = -(uint64_t)v14;
LABEL_24:
            v21 = 0;
            while (*v18 != __s[v21])
            {
              if (v16 == ++v21)
              {
                ++v18;
                --v20;
                if (v18 != v19)
                  goto LABEL_24;
                goto LABEL_64;
              }
            }
            if (v18 == v19)
              goto LABEL_64;
            v22 = (unsigned __int8 *)(v18 - (unsigned __int8 *)v7);
            if (v18 - (unsigned __int8 *)v7 == -1)
              goto LABEL_64;
            std::string::basic_string(&__dst, a1, v14, (std::string::size_type)&v22[-v14], (std::allocator<char> *)&v37);
            v37 = a3;
            std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](&v37, (__int128 *)&__dst);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__dst.__r_.__value_.__l.__data_);
            v6 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
            v7 = (std::string *)a1->__r_.__value_.__r.__words[0];
            v8 = a1->__r_.__value_.__l.__size_;
            if ((v6 & 0x80u) == 0)
              v23 = a1;
            else
              v23 = (std::string *)a1->__r_.__value_.__r.__words[0];
            if ((v6 & 0x80u) == 0)
              v24 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
            else
              v24 = a1->__r_.__value_.__l.__size_;
            v25 = strlen(__s);
            if (v24 > (unint64_t)v22)
            {
              v26 = v25;
              v27 = &v22[(_QWORD)v23];
              if (v25)
              {
                v28 = v24 + v20;
                while (memchr(__s, (char)*v27, v26))
                {
                  ++v27;
                  if (!--v28)
                    return;
                }
              }
              v14 = v27 - (unsigned __int8 *)v23;
              continue;
            }
          }
        }
        break;
      }
    }
  }
}

void sub_1BF82CEC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::UnescapeCEscapeSequences(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  std::string *v5;
  std::string *v6;
  unsigned __int8 *i;
  int v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 v11;
  char v12;
  unsigned __int8 v13;
  int v14;
  char v15;
  unsigned int v16;
  unsigned __int8 *v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned int v21;
  char v22;
  char v24;
  std::string v25[2];

  if (a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 338);
    v5 = google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: errors == nullptr: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Error reporting not implemented.");
    google::protobuf::internal::LogFinisher::operator=((int)&v24, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
  }
  if (a1 == a2)
  {
    for (i = a1; *i && *i != 92; ++i)
      ;
    a1 = i;
  }
  else
  {
    i = a2;
  }
  while (1)
  {
    v8 = *a1;
    if (v8 != 92)
    {
      if (!*a1)
        goto LABEL_59;
      goto LABEL_57;
    }
    v9 = a1 + 1;
    v8 = (char)a1[1];
    if (v8 <= 62)
      break;
    if (v8 > 97)
    {
      switch(a1[1])
      {
        case 'n':
          LOBYTE(v8) = 10;
          goto LABEL_56;
        case 'o':
        case 'p':
        case 'q':
        case 's':
        case 'u':
        case 'w':
          goto LABEL_58;
        case 'r':
          LOBYTE(v8) = 13;
          goto LABEL_56;
        case 't':
          LOBYTE(v8) = 9;
          goto LABEL_56;
        case 'v':
          LOBYTE(v8) = 11;
          goto LABEL_56;
        case 'x':
          goto LABEL_30;
        default:
          if (v8 == 102)
          {
            LOBYTE(v8) = 12;
          }
          else
          {
            if (v8 != 98)
              goto LABEL_58;
            LOBYTE(v8) = 8;
          }
          break;
      }
      goto LABEL_56;
    }
    if (v8 > 91)
    {
      if (v8 != 92)
      {
        if (v8 != 97)
          goto LABEL_58;
        LOBYTE(v8) = 7;
      }
LABEL_56:
      a1 = v9;
LABEL_57:
      *i++ = v8;
      v9 = a1;
      goto LABEL_58;
    }
    if (v8 == 63)
      goto LABEL_56;
    if (v8 != 88)
      goto LABEL_58;
LABEL_30:
    if ((a1[2] - 48) < 0xAu || (v16 = a1[2] - 65, v16 <= 0x25) && ((1 << v16) & 0x3F0000003FLL) != 0)
    {
      LOBYTE(v8) = 0;
      v17 = a1 + 1;
      while (1)
      {
        v19 = *++v17;
        v18 = v19;
        if ((v19 - 48) >= 0xAu
          && (v18 - 65 > 0x25 || ((1 << (v18 - 65)) & 0x3F0000003FLL) == 0))
        {
          break;
        }
        v21 = v18;
        v22 = v18 + 9;
        if (v21 <= 0x39)
          v22 = v21;
        v9 = v17;
        LOBYTE(v8) = v22 & 0xF | (16 * v8);
      }
      goto LABEL_56;
    }
LABEL_58:
    a1 = v9 + 1;
  }
  if (v8 > 47)
  {
    if ((v8 - 48) >= 8)
      goto LABEL_58;
    LOBYTE(v8) = v8 - 48;
    v11 = a1[2];
    v10 = a1 + 2;
    v12 = v11 + 8 * v8 - 48;
    if ((v11 & 0xF8) == 0x30)
    {
      v9 = v10;
      LOBYTE(v8) = v12;
    }
    v13 = v9[1];
    v14 = v13 & 0xF8;
    v15 = v13 + 8 * v8 - 48;
    if (v14 == 48)
      a1 = v9 + 1;
    else
      a1 = v9;
    if (v14 == 48)
      LOBYTE(v8) = v15;
    goto LABEL_57;
  }
  if (v8 == 34 || v8 == 39)
    goto LABEL_56;
  if (a1[1])
    goto LABEL_58;
LABEL_59:
  *i = 0;
  return ((_DWORD)i - (_DWORD)a2);
}

void sub_1BF82D16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::UnescapeCEscapeString(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  int v6;

  v4 = (unsigned __int8 *)operator new[]();
  if (*(char *)(a1 + 23) >= 0)
    v5 = (unsigned __int8 *)a1;
  else
    v5 = *(unsigned __int8 **)a1;
  v6 = google::protobuf::UnescapeCEscapeSequences(v5, v4, 0);
  std::string::basic_string[abi:ne180100](a2, v4, v6);
  JUMPOUT(0x1C3B8D878);
}

void sub_1BF82D21C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D878](v1, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

void google::protobuf::CEscapeAndAppend(const std::string::value_type *a1, int64_t a2, std::string *a3)
{
  uint64_t v6;
  uint64_t v7;
  std::string::size_type size;
  uint64_t v9;
  _BYTE *v10;
  unsigned int v11;
  const std::string::value_type *v12;
  int64_t v13;
  const std::string::value_type *v14;
  int64_t v15;

  v12 = a1;
  v13 = a2;
  v14 = a1;
  v15 = a2;
  if (a2 < 1)
  {
    v7 = 0;
  }
  else
  {
    v6 = 0;
    v7 = 0;
    do
      v7 += google::protobuf::CEscapedLength(google::protobuf::StringPiece)::c_escaped_len[google::protobuf::StringPiece::operator[](&v14, v6++)];
    while (v15 > v6);
  }
  if (v7 == a2)
  {
    std::string::append(a3, a1, a2);
    return;
  }
  if (SHIBYTE(a3->__r_.__value_.__r.__words[2]) < 0)
    size = a3->__r_.__value_.__l.__size_;
  else
    size = HIBYTE(a3->__r_.__value_.__r.__words[2]);
  std::string::resize(a3, size + v7, 0);
  if (SHIBYTE(a3->__r_.__value_.__r.__words[2]) < 0)
    a3 = (std::string *)a3->__r_.__value_.__r.__words[0];
  if (a2 >= 1)
  {
    v9 = 0;
    v10 = (char *)a3 + size;
    do
    {
      v11 = google::protobuf::StringPiece::operator[](&v12, v9);
      if (v11 > 0x21u)
      {
        switch(v11)
        {
          case '"':
            *(_WORD *)v10 = 8796;
            v10 += 2;
            break;
          case '\'':
            *(_WORD *)v10 = 10076;
            v10 += 2;
            break;
          case '\\':
            *(_WORD *)v10 = 23644;
            v10 += 2;
            break;
          default:
LABEL_28:
            if (v11 - 32 >= 0x5F)
            {
              *v10 = 92;
              v10[1] = (v11 >> 6) | 0x30;
              v10[2] = (v11 >> 3) & 7 | 0x30;
              v10[3] = v11 & 7 | 0x30;
              v10 += 4;
            }
            else
            {
              *v10++ = v11;
            }
            break;
        }
      }
      else
      {
        switch(v11)
        {
          case 9u:
            *(_WORD *)v10 = 29788;
            v10 += 2;
            break;
          case 0xAu:
            *(_WORD *)v10 = 28252;
            v10 += 2;
            break;
          case 0xDu:
            *(_WORD *)v10 = 29276;
            v10 += 2;
            break;
          default:
            goto LABEL_28;
        }
      }
      ++v9;
    }
    while (v13 > v9);
  }
}

void google::protobuf::CEscape(uint64_t *a1@<X0>, const char *a2@<X2>, std::string *a3@<X8>)
{
  const std::string::value_type *v4[2];

  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v4, a1, a2);
  google::protobuf::CEscapeAndAppend(v4[0], (int64_t)v4[1], a3);
}

void sub_1BF82D460(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

_BYTE *google::protobuf::FastInt64ToBuffer(unint64_t this, _BYTE *a2, char *a3)
{
  unint64_t v3;
  _BYTE *result;
  BOOL v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;

  v3 = this;
  a2[21] = 0;
  if ((this & 0x8000000000000000) != 0)
  {
    if (this < 0xFFFFFFFFFFFFFFF7)
    {
      v7 = -10 - this;
      result = a2 + 19;
      a2[20] = (v7 % 0xA) | 0x30;
      v8 = v7 / 0xA + 1;
      do
      {
        *result-- = (v8 % 0xA) | 0x30;
        v9 = v8 > 9;
        v8 /= 0xAuLL;
      }
      while (v9);
    }
    else
    {
      v6 = 48 - this;
      result = a2 + 19;
      a2[20] = v6;
    }
    *result = 45;
  }
  else
  {
    result = a2 + 21;
    do
    {
      *--result = (v3 % 0xA) | 0x30;
      v5 = v3 >= 0xA;
      v3 /= 0xAuLL;
    }
    while (v5);
  }
  return result;
}

_BYTE *google::protobuf::FastInt32ToBuffer(google::protobuf *this, _BYTE *a2, char *a3)
{
  unsigned int v3;
  _BYTE *result;
  BOOL v5;
  char v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  BOOL v10;

  v3 = this;
  a2[11] = 0;
  if ((this & 0x80000000) != 0)
  {
    if (this < 0xFFFFFFF7)
    {
      v7 = -10 - (_DWORD)this;
      v8 = (-10 - (int)this) / 0xAu;
      result = a2 + 9;
      a2[10] = (v7 % 0xA) | 0x30;
      v9 = v8 + 1;
      do
      {
        *result-- = (v9 % 0xA) | 0x30;
        v10 = v9 > 9;
        v9 /= 0xAu;
      }
      while (v10);
    }
    else
    {
      v6 = 48 - (_BYTE)this;
      result = a2 + 9;
      a2[10] = v6;
    }
    *result = 45;
  }
  else
  {
    result = a2 + 11;
    do
    {
      *--result = (v3 % 0xA) | 0x30;
      v5 = v3 >= 0xA;
      v3 /= 0xAu;
    }
    while (v5);
  }
  return result;
}

_BYTE *google::protobuf::FastUInt32ToBufferLeft(google::protobuf *this, _BYTE *a2, char *a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE *v7;

  if (this >= 0x3B9ACA00)
  {
    v3 = this / 0x5F5E100uLL;
    *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v3];
    a2 += 2;
    goto LABEL_3;
  }
  if (this > 0x63)
  {
    if (this >> 4 <= 0x270)
    {
      if (this <= 0x3E7)
      {
        LODWORD(v6) = (unsigned __int16)this / 0x64u;
        *a2++ = v6 + 48;
        goto LABEL_9;
      }
LABEL_8:
      v6 = this / 0x64uLL;
      *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v6];
      a2 += 2;
LABEL_9:
      LODWORD(this) = (_DWORD)this - 100 * v6;
      goto LABEL_10;
    }
    if (this < 0xF4240)
    {
      if (this >> 5 <= 0xC34)
      {
        LODWORD(v5) = this / 0x2710;
        *a2++ = this / 0x2710 + 48;
        goto LABEL_7;
      }
LABEL_6:
      v5 = this / 0x2710uLL;
      *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v5];
      a2 += 2;
LABEL_7:
      LODWORD(this) = (_DWORD)this - 10000 * v5;
      goto LABEL_8;
    }
    if (this < 0x5F5E100)
    {
      if (this <= 0x98967F)
      {
        LODWORD(v4) = this / 0xF4240;
        *a2++ = this / 0xF4240 + 48;
        goto LABEL_5;
      }
LABEL_4:
      v4 = this / 0xF4240uLL;
      *(_WORD *)a2 = google::protobuf::two_ASCII_digits[v4];
      a2 += 2;
LABEL_5:
      LODWORD(this) = (_DWORD)this - 1000000 * v4;
      goto LABEL_6;
    }
    LODWORD(v3) = this / 0x5F5E100;
    *a2++ = this / 0x5F5E100 + 48;
LABEL_3:
    LODWORD(this) = (_DWORD)this - 100000000 * v3;
    goto LABEL_4;
  }
  if (this <= 9)
  {
    *a2 = (_BYTE)this + 48;
    v7 = a2 + 1;
    goto LABEL_11;
  }
LABEL_10:
  *(_WORD *)a2 = google::protobuf::two_ASCII_digits[this];
  v7 = a2 + 2;
LABEL_11:
  *v7 = 0;
  return v7;
}

_BYTE *google::protobuf::FastInt32ToBufferLeft(google::protobuf *this, _BYTE *a2, char *a3)
{
  if ((this & 0x80000000) != 0)
  {
    *a2++ = 45;
    this = (google::protobuf *)-(int)this;
  }
  return google::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
}

_BYTE *google::protobuf::FastUInt64ToBufferLeft(google::protobuf *this, _BYTE *a2, char *a3)
{
  int v3;
  unint64_t v5;
  _WORD *v6;
  unsigned int v7;
  std::string *v8;
  unsigned int v9;
  char v10;
  std::string v11[2];

  v3 = (int)this;
  if (!((unint64_t)this >> 32))
    return google::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
  v5 = (unint64_t)this / 0x3B9ACA00;
  v6 = (_WORD *)google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)((unint64_t)this / 0x3B9ACA00), (unint64_t)a2, a3);
  v7 = v3 - 1000000000 * v5;
  if (v7 >= 0x3B9ACA00)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1090);
    v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (digits) < (100): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  *v6 = google::protobuf::two_ASCII_digits[v7 / 0x989680];
  v6[1] = google::protobuf::two_ASCII_digits[v7 % 0x989680 / 0x186A0uLL];
  v9 = v7 % 0x989680 % 0x186A0;
  v6[2] = google::protobuf::two_ASCII_digits[v9 / 0x3E8uLL];
  v9 %= 0x3E8u;
  v6[3] = google::protobuf::two_ASCII_digits[v9 / 0xAuLL];
  v6[4] = (v9 % 0xA + 48);
  return (char *)v6 + 9;
}

void sub_1BF82D8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_BYTE *google::protobuf::FastInt64ToBufferLeft(uint64_t this, _BYTE *a2, char *a3)
{
  if (this < 0)
  {
    *a2++ = 45;
    this = -this;
  }
  return google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)this, a2, a3);
}

_QWORD *google::protobuf::SimpleDtoa@<X0>(double a1@<D0>, char *a2@<X1>, _QWORD *a3@<X8>)
{
  char __s[32];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  google::protobuf::DoubleToBuffer((google::protobuf *)__s, a1, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, __s);
}

google::protobuf *google::protobuf::DoubleToBuffer(google::protobuf *this, double a2, char *a3)
{
  int v5;
  char **v7;
  std::string *v8;
  char *v9;
  std::string *v10;
  char v11;
  double v12;
  std::string v13[2];

  if (a2 == INFINITY)
  {
    v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((_BYTE *)this + 4) = 0;
    v5 = 1718511917;
    goto LABEL_5;
  }
  if ((snprintf((char *)this, 0x20uLL, "%.*g", 15, a2) - 32) <= 0xFFFFFFE0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1287);
    v8 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: snprintf_result > 0 && snprintf_result < kDoubleToBufferSize: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v12 = 0.0;
  v12 = google::protobuf::io::NoLocaleStrtod(this, 0, v7);
  if (v12 != a2 && (snprintf((char *)this, 0x20uLL, "%.*g", 17, a2) - 32) <= 0xFFFFFFE0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1301);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: snprintf_result > 0 && snprintf_result < kDoubleToBufferSize: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::DelocalizeRadix(this, v9);
  return this;
}

void sub_1BF82DB00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::SimpleFtoa@<X0>(float a1@<S0>, char *a2@<X1>, _QWORD *a3@<X8>)
{
  char v6[24];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  google::protobuf::FloatToBuffer((google::protobuf *)v6, a1, a2);
  return std::string::basic_string[abi:ne180100]<0>(a3, v6);
}

google::protobuf *google::protobuf::FloatToBuffer(google::protobuf *this, float a2, char *a3)
{
  int v5;
  float *v7;
  std::string *v8;
  char *v9;
  std::string *v10;
  char v11;
  char v12[4];
  std::string v13[2];

  if (a2 == INFINITY)
  {
    v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((_BYTE *)this + 4) = 0;
    v5 = 1718511917;
    goto LABEL_5;
  }
  if ((snprintf((char *)this, 0x18uLL, "%.*g", 6, a2) - 24) <= 0xFFFFFFE8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1405);
    v8 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: snprintf_result > 0 && snprintf_result < kFloatToBufferSize: ");
    google::protobuf::internal::LogFinisher::operator=((int)v12, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  *(float *)v12 = 0.0;
  if ((!google::protobuf::safe_strtof(this, (float *)v12, v7) || *(float *)v12 != a2)
    && (snprintf((char *)this, 0x18uLL, "%.*g", 9, a2) - 24) <= 0xFFFFFFE8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1413);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: snprintf_result > 0 && snprintf_result < kFloatToBufferSize: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::DelocalizeRadix(this, v9);
  return this;
}

void sub_1BF82DD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::DelocalizeRadix(google::protobuf *this, char *a2)
{
  char *result;
  const char *i;
  int v5;
  int v7;
  unsigned __int8 *v8;
  const char *v9;
  int v10;
  BOOL v11;
  size_t v13;

  result = strchr((char *)this, 46);
  if (!result)
  {
    for (i = (char *)this + 2; ; ++i)
    {
      v5 = *((unsigned __int8 *)i - 2);
      if ((v5 - 48) >= 0xA
        && ((v5 - 43) > 0x3A || ((1 << (v5 - 43)) & 0x400000004000005) == 0))
      {
        break;
      }
    }
    if (*(i - 2))
    {
      v8 = (unsigned __int8 *)(i - 1);
      v7 = *((unsigned __int8 *)i - 1);
      *((_BYTE *)i - 2) = 46;
      if ((v7 - 48) >= 0xA
        && ((v7 - 43) > 0x3A || ((1 << (v7 - 43)) & 0x400000004000005) == 0))
      {
        if (v7)
        {
          do
          {
            v9 = i;
            v10 = *(unsigned __int8 *)i;
            if ((v10 - 48) < 0xA)
              break;
            ++i;
            v11 = (v10 - 43) > 0x3A || ((1 << (v10 - 43)) & 0x400000004000005) == 0;
          }
          while (v11 && v10 != 0);
          v13 = strlen(v9) + 1;
          return (char *)memmove(v8, v9, v13);
        }
      }
    }
  }
  return result;
}

uint64_t google::protobuf::safe_strtob(unsigned __int8 *a1, uint64_t a2, char *a3)
{
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  char v20;
  int v21;
  _BOOL4 v22;
  uint64_t result;
  const char *v24;
  unsigned __int8 *v25;
  uint64_t v26;
  char v27;
  int v28;
  char v29;
  char v30;
  int v31;
  char v32;
  unsigned __int8 *v33[2];
  unsigned __int8 *v34[2];
  unsigned __int8 *v35[2];
  unsigned __int8 *v36[2];
  char v37;
  std::string v38[2];

  if (!a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v38, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1327);
    v6 = google::protobuf::internal::LogMessage::operator<<(v38, "CHECK failed: value != nullptr: ");
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, "nullptr output BOOLean given.");
    google::protobuf::internal::LogFinisher::operator=((int)&v37, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v38[0].__r_.__value_.__l.__data_);
  }
  switch(a2)
  {
    case 1:
      v8 = 0;
      while (1)
      {
        v9 = a1[v8];
        if ((v9 - 65) < 0x1A)
          LOBYTE(v9) = v9 + 32;
        v10 = aT[v8];
        if ((v10 - 65) < 0x1A)
          LOBYTE(v10) = v10 + 32;
        if (v9 != v10)
          break;
        if (a2 == ++v8)
          goto LABEL_40;
      }
      if (a2 == 1)
        goto LABEL_33;
      if (a2 == 5)
        goto LABEL_49;
      if (a2 != 3)
        goto LABEL_44;
      goto LABEL_23;
    case 3:
LABEL_23:
      v14 = 0;
      while (1)
      {
        v15 = a1[v14];
        if ((v15 - 65) < 0x1A)
          LOBYTE(v15) = v15 + 32;
        v16 = aYes[v14];
        if ((v16 - 65) < 0x1A)
          LOBYTE(v16) = v16 + 32;
        if (v15 != v16)
          break;
        if (a2 == ++v14)
          goto LABEL_40;
      }
      if (a2 == 5)
      {
LABEL_49:
        v24 = "false";
        v25 = a1;
        v26 = a2;
        while (1)
        {
          v28 = *v25++;
          v27 = v28;
          v29 = v28 + 32;
          if ((v28 - 65) < 0x1A)
            v27 = v29;
          v31 = *(unsigned __int8 *)v24++;
          v30 = v31;
          v32 = v31 + 32;
          if ((v31 - 65) < 0x1A)
            v30 = v32;
          if (v27 != v30)
            goto LABEL_44;
          if (!--v26)
            goto LABEL_56;
        }
      }
      if (a2 != 1)
        goto LABEL_44;
LABEL_33:
      v17 = 0;
      while (1)
      {
        v18 = a1[v17];
        if ((v18 - 65) < 0x1A)
          LOBYTE(v18) = v18 + 32;
        v19 = aY[v17];
        if ((v19 - 65) < 0x1A)
          LOBYTE(v19) = v19 + 32;
        if (v18 != v19)
          break;
        if (a2 == ++v17)
          goto LABEL_40;
      }
      v21 = *a1;
      if ((v21 - 65) < 0x1A)
        LOBYTE(v21) = v21 + 32;
      if (v21 != 49)
        goto LABEL_44;
      goto LABEL_40;
    case 4:
      v11 = 0;
      break;
    case 5:
      goto LABEL_49;
    default:
      goto LABEL_44;
  }
  while (1)
  {
    v12 = a1[v11];
    if ((v12 - 65) < 0x1A)
      LOBYTE(v12) = v12 + 32;
    v13 = aTrue[v11];
    if ((v13 - 65) < 0x1A)
      LOBYTE(v13) = v13 + 32;
    if (v12 != v13)
      break;
    if (++v11 == 4)
    {
LABEL_40:
      v20 = 1;
      goto LABEL_57;
    }
  }
LABEL_44:
  google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)v36, "f");
  if (google::protobuf::CaseEqual(a1, a2, v36[0], (uint64_t)v36[1])
    || (google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)v35, "no"),
        google::protobuf::CaseEqual(a1, a2, v35[0], (uint64_t)v35[1]))
    || (google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)v34, "n"),
        google::protobuf::CaseEqual(a1, a2, v34[0], (uint64_t)v34[1])))
  {
LABEL_56:
    v20 = 0;
  }
  else
  {
    google::protobuf::StringPiece::StringPiece((google::protobuf::StringPiece *)v33, "0");
    v22 = google::protobuf::CaseEqual(a1, a2, v33[0], (uint64_t)v33[1]);
    v20 = 0;
    result = 0;
    if (!v22)
      return result;
  }
LABEL_57:
  *a3 = v20;
  return 1;
}

void sub_1BF82E170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::CaseEqual(unsigned __int8 *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  unsigned __int8 v4;
  int v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  int v8;
  unsigned __int8 v9;
  int v10;

  if (a2 != a4)
    return 0;
  if (a2)
  {
    while (1)
    {
      v5 = *a1++;
      v4 = v5;
      v6 = v5 + 32;
      if ((v5 - 65) < 0x1A)
        v4 = v6;
      v8 = *a3++;
      v7 = v8;
      v9 = v8 + 32;
      if ((v8 - 65) < 0x1A)
        v7 = v9;
      v10 = v4 - v7;
      if (v10)
        break;
      if (!--a2)
        goto LABEL_9;
    }
  }
  else
  {
LABEL_9:
    v10 = 0;
  }
  return v10 == 0;
}

BOOL google::protobuf::safe_strtof(google::protobuf *this, float *a2, float *a3)
{
  char *v6;

  v6 = 0;
  *__error() = 0;
  *a2 = strtof((const char *)this, &v6);
  return *(_BYTE *)this && !*v6 && *__error() == 0;
}

BOOL google::protobuf::safe_strtod(google::protobuf *this, double *a2, char **a3)
{
  google::protobuf *i;
  int v5;
  char v7[8];

  *(_QWORD *)v7 = 0;
  *a2 = google::protobuf::io::NoLocaleStrtod(this, v7, a3);
  i = this;
  if (*(google::protobuf **)v7 != this)
  {
    for (i = *(google::protobuf **)v7; ; *(_QWORD *)v7 = i)
    {
      v5 = *(unsigned __int8 *)i;
      if ((v5 - 9) >= 5 && v5 != 32)
        break;
      i = (google::protobuf *)((char *)i + 1);
    }
  }
  return *(_BYTE *)this && *(_BYTE *)i == 0;
}

uint64_t google::protobuf::safe_strto32(uint64_t a1, int *a2)
{
  uint64_t v3;
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  v3 = google::protobuf::safe_int_internal<int>(&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v3;
}

void sub_1BF82E354(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_int_internal<int>(std::string *__str, int *a2)
{
  std::string *v4;
  int64_t size;
  char *v6;
  std::string *v7;
  uint64_t v8;
  int v9;
  int v10;
  std::string *v11;
  uint64_t v12;
  std::string __p;
  std::string v15;
  char v16;

  *a2 = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    v4 = (std::string *)__str->__r_.__value_.__r.__words[0];
    size = __str->__r_.__value_.__l.__size_;
  }
  else
  {
    v4 = __str;
    size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  v6 = (char *)v4 + size;
  v7 = v4;
  if (size >= 1)
  {
    v7 = v4;
    do
    {
      if (v7->__r_.__value_.__s.__data_[0] != 32)
        break;
      v7 = (std::string *)((char *)v7 + 1);
    }
    while (v7 < (std::string *)v6);
  }
  v8 = (uint64_t)v4->__r_.__value_.__r.__words + size + 1;
  do
  {
    if (v7 >= (std::string *)v6)
      return 0;
    v9 = *--v6;
    --v8;
  }
  while (v9 == 32);
  v10 = v7->__r_.__value_.__s.__data_[0];
  if (v10 == 45 || v10 == 43)
  {
    v7 = (std::string *)((char *)v7 + 1);
    if (v7 >= (std::string *)(v6 + 1))
      return 0;
  }
  v11 = __str;
  if ((*((_BYTE *)&__str->__r_.__value_.__s + 23) & 0x80) != 0)
    v11 = (std::string *)__str->__r_.__value_.__r.__words[0];
  std::string::basic_string(&v15, __str, (char *)v7 - (char *)v11, v8 - (_QWORD)v7, (std::allocator<char> *)&v16);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str->__r_.__value_.__l.__data_);
  *__str = v15;
  if (v10 == 45)
    return google::protobuf::safe_parse_negative_int<int>((unsigned __int8 *)__str, a2);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  else
    __p = *__str;
  v12 = google::protobuf::safe_parse_positive_int<int>((unsigned __int8 *)&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v12;
}

void sub_1BF82E4E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_strtou32(uint64_t a1, unsigned int *a2)
{
  uint64_t v3;
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  v3 = google::protobuf::safe_uint_internal<unsigned int>(&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v3;
}

void sub_1BF82E570(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_uint_internal<unsigned int>(std::string *__str, unsigned int *a2)
{
  std::string *v4;
  int64_t size;
  char *v6;
  std::string *v7;
  uint64_t v8;
  int v9;
  int v10;
  std::string *v11;
  uint64_t v12;
  std::string __p;
  std::string v15;
  char v16;

  *a2 = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    v4 = (std::string *)__str->__r_.__value_.__r.__words[0];
    size = __str->__r_.__value_.__l.__size_;
  }
  else
  {
    v4 = __str;
    size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  v6 = (char *)v4 + size;
  v7 = v4;
  if (size >= 1)
  {
    v7 = v4;
    do
    {
      if (v7->__r_.__value_.__s.__data_[0] != 32)
        break;
      v7 = (std::string *)((char *)v7 + 1);
    }
    while (v7 < (std::string *)v6);
  }
  v8 = (uint64_t)v4->__r_.__value_.__r.__words + size + 1;
  do
  {
    if (v7 >= (std::string *)v6)
      return 0;
    v9 = *--v6;
    --v8;
  }
  while (v9 == 32);
  v10 = v7->__r_.__value_.__s.__data_[0];
  if (v10 == 45 || v10 == 43)
  {
    v7 = (std::string *)((char *)v7 + 1);
    if (v7 >= (std::string *)(v6 + 1))
      return 0;
  }
  v11 = __str;
  if ((*((_BYTE *)&__str->__r_.__value_.__s + 23) & 0x80) != 0)
    v11 = (std::string *)__str->__r_.__value_.__r.__words[0];
  std::string::basic_string(&v15, __str, (char *)v7 - (char *)v11, v8 - (_QWORD)v7, (std::allocator<char> *)&v16);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str->__r_.__value_.__l.__data_);
  *__str = v15;
  if (v10 == 45)
    return 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  else
    __p = *__str;
  v12 = google::protobuf::safe_parse_positive_int<unsigned int>((unsigned __int8 *)&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v12;
}

void sub_1BF82E6EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_strto64(uint64_t a1, int64_t *a2)
{
  uint64_t v3;
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  v3 = google::protobuf::safe_int_internal<long long>(&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v3;
}

void sub_1BF82E778(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_int_internal<long long>(std::string *__str, int64_t *a2)
{
  std::string *v4;
  int64_t size;
  char *v6;
  std::string *v7;
  uint64_t v8;
  int v9;
  int v10;
  std::string *v11;
  uint64_t v12;
  std::string __p;
  std::string v15;
  char v16;

  *a2 = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    v4 = (std::string *)__str->__r_.__value_.__r.__words[0];
    size = __str->__r_.__value_.__l.__size_;
  }
  else
  {
    v4 = __str;
    size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  v6 = (char *)v4 + size;
  v7 = v4;
  if (size >= 1)
  {
    v7 = v4;
    do
    {
      if (v7->__r_.__value_.__s.__data_[0] != 32)
        break;
      v7 = (std::string *)((char *)v7 + 1);
    }
    while (v7 < (std::string *)v6);
  }
  v8 = (uint64_t)v4->__r_.__value_.__r.__words + size + 1;
  do
  {
    if (v7 >= (std::string *)v6)
      return 0;
    v9 = *--v6;
    --v8;
  }
  while (v9 == 32);
  v10 = v7->__r_.__value_.__s.__data_[0];
  if (v10 == 45 || v10 == 43)
  {
    v7 = (std::string *)((char *)v7 + 1);
    if (v7 >= (std::string *)(v6 + 1))
      return 0;
  }
  v11 = __str;
  if ((*((_BYTE *)&__str->__r_.__value_.__s + 23) & 0x80) != 0)
    v11 = (std::string *)__str->__r_.__value_.__r.__words[0];
  std::string::basic_string(&v15, __str, (char *)v7 - (char *)v11, v8 - (_QWORD)v7, (std::allocator<char> *)&v16);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str->__r_.__value_.__l.__data_);
  *__str = v15;
  if (v10 == 45)
    return google::protobuf::safe_parse_negative_int<long long>((unsigned __int8 *)__str, a2);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  else
    __p = *__str;
  v12 = google::protobuf::safe_parse_positive_int<long long>((unsigned __int8 *)&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v12;
}

void sub_1BF82E908(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_strtou64(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  v3 = google::protobuf::safe_uint_internal<unsigned long long>(&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v3;
}

void sub_1BF82E994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::safe_uint_internal<unsigned long long>(std::string *__str, unint64_t *a2)
{
  std::string *v4;
  int64_t size;
  char *v6;
  std::string *v7;
  uint64_t v8;
  int v9;
  int v10;
  std::string *v11;
  uint64_t v12;
  std::string __p;
  std::string v15;
  char v16;

  *a2 = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    v4 = (std::string *)__str->__r_.__value_.__r.__words[0];
    size = __str->__r_.__value_.__l.__size_;
  }
  else
  {
    v4 = __str;
    size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  v6 = (char *)v4 + size;
  v7 = v4;
  if (size >= 1)
  {
    v7 = v4;
    do
    {
      if (v7->__r_.__value_.__s.__data_[0] != 32)
        break;
      v7 = (std::string *)((char *)v7 + 1);
    }
    while (v7 < (std::string *)v6);
  }
  v8 = (uint64_t)v4->__r_.__value_.__r.__words + size + 1;
  do
  {
    if (v7 >= (std::string *)v6)
      return 0;
    v9 = *--v6;
    --v8;
  }
  while (v9 == 32);
  v10 = v7->__r_.__value_.__s.__data_[0];
  if (v10 == 45 || v10 == 43)
  {
    v7 = (std::string *)((char *)v7 + 1);
    if (v7 >= (std::string *)(v6 + 1))
      return 0;
  }
  v11 = __str;
  if ((*((_BYTE *)&__str->__r_.__value_.__s + 23) & 0x80) != 0)
    v11 = (std::string *)__str->__r_.__value_.__r.__words[0];
  std::string::basic_string(&v15, __str, (char *)v7 - (char *)v11, v8 - (_QWORD)v7, (std::allocator<char> *)&v16);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str->__r_.__value_.__l.__data_);
  *__str = v15;
  if (v10 == 45)
    return 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&__p, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  else
    __p = *__str;
  v12 = google::protobuf::safe_parse_positive_int<unsigned long long>((unsigned __int8 *)&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v12;
}

void sub_1BF82EB10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *google::protobuf::strings::AlphaNum::AlphaNum(_QWORD *result, unint64_t a2, char a3)
{
  uint64_t v3;
  unint64_t v4;
  BOOL v5;

  v3 = 0;
  v4 = (1 << (4 * a3 - 4)) | a2;
  do
  {
    *((_BYTE *)result + v3 + 47) = google::protobuf::strings::AlphaNum::AlphaNum(google::protobuf::strings::Hex)::hexdigits[a2 & 0xF];
    a2 >>= 4;
    --v3;
    v5 = v4 > 0xF;
    v4 >>= 4;
  }
  while (v5);
  *result = (char *)result + v3 + 48;
  result[1] = -v3;
  return result;
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  std::string *v6;
  char *v7;
  std::string::size_type size;
  std::string *v9;
  char v10;
  std::string v11[2];

  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a3, *(_QWORD *)(a2 + 8) + *(_QWORD *)(a1 + 8), 0);
  if ((a3->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v6 = a3;
  else
    v6 = (std::string *)a3->__r_.__value_.__r.__words[0];
  memcpy(v6, *(const void **)a1, *(_QWORD *)(a1 + 8));
  v7 = (char *)v6 + *(_QWORD *)(a1 + 8);
  memcpy(v7, *(const void **)a2, *(_QWORD *)(a2 + 8));
  size = HIBYTE(a3->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0)
    size = a3->__r_.__value_.__l.__size_;
  if (&v7[*(_QWORD *)(a2 + 8)] != (char *)v6 + size)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1487);
    v9 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (out) == (begin + result.size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
}

void sub_1BF82EC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  if (*(char *)(v3 + 23) < 0)
    operator delete(*(void **)v3);
  _Unwind_Resume(a1);
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  std::string *v8;
  char *v9;
  char *v10;
  std::string::size_type size;
  std::string *v12;
  char v13;
  std::string v14[2];

  a4->__r_.__value_.__r.__words[0] = 0;
  a4->__r_.__value_.__l.__size_ = 0;
  a4->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a4, *(_QWORD *)(a2 + 8) + *(_QWORD *)(a1 + 8) + *(_QWORD *)(a3 + 8), 0);
  if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v8 = a4;
  else
    v8 = (std::string *)a4->__r_.__value_.__r.__words[0];
  memcpy(v8, *(const void **)a1, *(_QWORD *)(a1 + 8));
  v9 = (char *)v8 + *(_QWORD *)(a1 + 8);
  memcpy(v9, *(const void **)a2, *(_QWORD *)(a2 + 8));
  v10 = &v9[*(_QWORD *)(a2 + 8)];
  memcpy(v10, *(const void **)a3, *(_QWORD *)(a3 + 8));
  size = HIBYTE(a4->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0)
    size = a4->__r_.__value_.__l.__size_;
  if (&v10[*(_QWORD *)(a3 + 8)] != (char *)v8 + size)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1497);
    v12 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (out) == (begin + result.size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
}

void sub_1BF82EDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  if (*(char *)(v3 + 23) < 0)
    operator delete(*(void **)v3);
  _Unwind_Resume(a1);
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, std::string *a5@<X8>)
{
  std::string *v10;
  char *v11;
  char *v12;
  char *v13;
  std::string::size_type size;
  std::string *v15;
  char v16;
  std::string v17[2];

  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a5, *(_QWORD *)(a2 + 8) + *(_QWORD *)(a1 + 8) + *(_QWORD *)(a3 + 8) + *(_QWORD *)(a4 + 8), 0);
  if ((a5->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v10 = a5;
  else
    v10 = (std::string *)a5->__r_.__value_.__r.__words[0];
  memcpy(v10, *(const void **)a1, *(_QWORD *)(a1 + 8));
  v11 = (char *)v10 + *(_QWORD *)(a1 + 8);
  memcpy(v11, *(const void **)a2, *(_QWORD *)(a2 + 8));
  v12 = &v11[*(_QWORD *)(a2 + 8)];
  memcpy(v12, *(const void **)a3, *(_QWORD *)(a3 + 8));
  v13 = &v12[*(_QWORD *)(a3 + 8)];
  memcpy(v13, *(const void **)a4, *(_QWORD *)(a4 + 8));
  size = HIBYTE(a5->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0)
    size = a5->__r_.__value_.__l.__size_;
  if (&v13[*(_QWORD *)(a4 + 8)] != (char *)v10 + size)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1507);
    v15 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (out) == (begin + result.size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v15->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
}

void sub_1BF82EF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  if (*(char *)(v3 + 23) < 0)
    operator delete(*(void **)v3);
  _Unwind_Resume(a1);
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, std::string *a6@<X8>)
{
  std::string *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  std::string::size_type size;
  std::string *v18;
  char v19;
  std::string v20[2];

  a6->__r_.__value_.__r.__words[0] = 0;
  a6->__r_.__value_.__l.__size_ = 0;
  a6->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a6, *(_QWORD *)(a2 + 8) + *(_QWORD *)(a1 + 8) + *(_QWORD *)(a3 + 8) + *(_QWORD *)(a4 + 8) + *(_QWORD *)(a5 + 8), 0);
  if ((a6->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v12 = a6;
  else
    v12 = (std::string *)a6->__r_.__value_.__r.__words[0];
  memcpy(v12, *(const void **)a1, *(_QWORD *)(a1 + 8));
  v13 = (char *)v12 + *(_QWORD *)(a1 + 8);
  memcpy(v13, *(const void **)a2, *(_QWORD *)(a2 + 8));
  v14 = &v13[*(_QWORD *)(a2 + 8)];
  memcpy(v14, *(const void **)a3, *(_QWORD *)(a3 + 8));
  v15 = &v14[*(_QWORD *)(a3 + 8)];
  memcpy(v15, *(const void **)a4, *(_QWORD *)(a4 + 8));
  v16 = &v15[*(_QWORD *)(a4 + 8)];
  memcpy(v16, *(const void **)a5, *(_QWORD *)(a5 + 8));
  size = HIBYTE(a6->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0)
    size = a6->__r_.__value_.__l.__size_;
  if (&v16[*(_QWORD *)(a5 + 8)] != (char *)v12 + size)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1518);
    v18 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (out) == (begin + result.size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v18->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
}

void sub_1BF82F0A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  if (*(char *)(v3 + 23) < 0)
    operator delete(*(void **)v3);
  _Unwind_Resume(a1);
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, std::string *a7@<X8>)
{
  std::string *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  std::string::size_type size;
  std::string *v21;
  char v22;
  std::string v23[2];

  a7->__r_.__value_.__r.__words[0] = 0;
  a7->__r_.__value_.__l.__size_ = 0;
  a7->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a7, *(_QWORD *)(a2 + 8)+ *(_QWORD *)(a1 + 8)+ *(_QWORD *)(a3 + 8)+ *(_QWORD *)(a4 + 8)+ *(_QWORD *)(a5 + 8)+ *(_QWORD *)(a6 + 8), 0);
  if ((a7->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v14 = a7;
  else
    v14 = (std::string *)a7->__r_.__value_.__r.__words[0];
  memcpy(v14, *(const void **)a1, *(_QWORD *)(a1 + 8));
  v15 = (char *)v14 + *(_QWORD *)(a1 + 8);
  memcpy(v15, *(const void **)a2, *(_QWORD *)(a2 + 8));
  v16 = &v15[*(_QWORD *)(a2 + 8)];
  memcpy(v16, *(const void **)a3, *(_QWORD *)(a3 + 8));
  v17 = &v16[*(_QWORD *)(a3 + 8)];
  memcpy(v17, *(const void **)a4, *(_QWORD *)(a4 + 8));
  v18 = &v17[*(_QWORD *)(a4 + 8)];
  memcpy(v18, *(const void **)a5, *(_QWORD *)(a5 + 8));
  v19 = &v18[*(_QWORD *)(a5 + 8)];
  memcpy(v19, *(const void **)a6, *(_QWORD *)(a6 + 8));
  size = HIBYTE(a7->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0)
    size = a7->__r_.__value_.__l.__size_;
  if (&v19[*(_QWORD *)(a6 + 8)] != (char *)v14 + size)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1530);
    v21 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (out) == (begin + result.size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v21->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
}

void sub_1BF82F250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  if (*(char *)(v3 + 23) < 0)
    operator delete(*(void **)v3);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::StrAppend(std::string *this, uint64_t a2)
{
  const std::string::value_type *v4;
  std::string::size_type size;
  const std::string::value_type *v6;
  std::string *v7;
  char v9;
  std::string v10[2];

  v4 = *(const std::string::value_type **)a2;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    size = this->__r_.__value_.__l.__size_;
    v6 = &v4[-this->__r_.__value_.__r.__words[0]];
  }
  else
  {
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    v6 = (const std::string::value_type *)(v4 - (const std::string::value_type *)this);
  }
  if ((unint64_t)v6 <= size)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1584);
    v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (uintptr_t((a).data() - (*result).data())) > (uintptr_t((*result).size())): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    v4 = *(const std::string::value_type **)a2;
  }
  return std::string::append(this, v4, *(_QWORD *)(a2 + 8));
}

void sub_1BF82F320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::CalculateBase64EscapedLen(google::protobuf *this, int a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;

  v2 = (4 * ((int)this / 3));
  if ((int)this % 3)
  {
    v3 = v2 | 3;
    v4 = v2 + 4;
    if (a2)
      v3 = v2 + 4;
    LODWORD(v2) = v2 | 2;
    if (a2)
      LODWORD(v2) = v4;
    if ((int)this % 3 == 1)
      v2 = v2;
    else
      v2 = v3;
  }
  if ((int)v2 < (int)this)
    google::protobuf::CalculateBase64EscapedLen();
  return v2;
}

uint64_t google::protobuf::Base64UnescapeInternal(google::protobuf *this, const char *a2, uint64_t a3, char *a4, uint64_t a5, const signed __int8 *a6)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  google::protobuf *v11;
  google::protobuf *v12;
  int v13;
  google::protobuf *v14;
  int v15;
  google::protobuf *v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  google::protobuf *v31;
  google::protobuf *v32;
  int v33;
  google::protobuf *v34;
  int v35;
  google::protobuf *v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  google::protobuf *v44;
  int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  _BYTE *v51;
  int v52;
  uint64_t result;
  std::string *v54;
  std::string *v55;
  _BYTE *v56;
  int v57;
  int v58;
  unsigned int v59;
  char v61;
  std::string v62[2];

  if (!a3)
  {
    if ((int)a2 >= 4)
    {
      v7 = 0;
      LODWORD(v27) = 0;
      while (*(_BYTE *)this)
      {
        if (!*((_BYTE *)this + 1))
          break;
        if (!*((_BYTE *)this + 2))
          break;
        v7 = (*(char *)(a5 + *((unsigned __int8 *)this + 1)) << 12) | (*(char *)(a5 + *(unsigned __int8 *)this) << 18) | (*(char *)(a5 + *((unsigned __int8 *)this + 2)) << 6) | *(char *)(a5 + *((unsigned __int8 *)this + 3));
        if ((v7 & 0x80000000) != 0)
          break;
        LODWORD(v8) = 0;
        LODWORD(a2) = (_DWORD)a2 - 4;
        this = (google::protobuf *)((char *)this + 4);
        v9 = -1;
LABEL_75:
        v28 = 0;
        LODWORD(v27) = v27 + 3;
        if ((int)a2 <= 3)
          goto LABEL_114;
      }
      v30 = (_DWORD)a2 + 1;
      v31 = (google::protobuf *)((char *)this + 1);
      v32 = (google::protobuf *)((char *)this + 2);
      v33 = (_DWORD)a2 - 1;
      v34 = (google::protobuf *)((char *)this + 3);
      v35 = (_DWORD)a2 - 2;
      v36 = (google::protobuf *)((char *)this + 4);
      v37 = (int)a2;
      while (1)
      {
        v38 = *((unsigned __int8 *)v31 - 1);
        v9 = *(char *)(a5 + v38);
        if ((v9 & 0x80000000) == 0)
          break;
        this = v31;
        if ((v38 - 9) >= 5 && (_DWORD)v38 != 32)
        {
          LODWORD(a2) = v30 - 2;
          goto LABEL_104;
        }
        v31 = (google::protobuf *)((char *)v31 + 1);
        --v30;
        --v37;
        v32 = (google::protobuf *)((char *)v32 + 1);
        --v33;
        v34 = (google::protobuf *)((char *)v34 + 1);
        --v35;
        v36 = (google::protobuf *)((char *)v36 + 1);
        if (v30 <= 4)
        {
          LODWORD(a2) = 3;
LABEL_104:
          v28 = 0;
          LODWORD(v8) = v38;
          goto LABEL_114;
        }
      }
      while (1)
      {
        v40 = *((unsigned __int8 *)v32 - 1);
        v9 = *(char *)(a5 + v40);
        if ((v9 & 0x80000000) == 0)
          break;
        v39 = v37;
        this = v32;
        if ((v40 - 9) < 5 || (_DWORD)v40 == 32)
        {
          v32 = (google::protobuf *)((char *)v32 + 1);
          --v37;
          --v33;
          v34 = (google::protobuf *)((char *)v34 + 1);
          --v35;
          v36 = (google::protobuf *)((char *)v36 + 1);
          if (v37 > 3)
            continue;
        }
        LODWORD(a2) = v39 - 2;
        v28 = 1;
        LODWORD(v8) = v40;
        goto LABEL_114;
      }
      while (1)
      {
        v23 = *((unsigned __int8 *)v34 - 1);
        v9 = *(char *)(a5 + v23);
        if ((v9 & 0x80000000) == 0)
          break;
        v41 = v33;
        this = v34;
        if ((v23 - 9) < 5 || (_DWORD)v23 == 32)
        {
          v34 = (google::protobuf *)((char *)v34 + 1);
          --v33;
          --v35;
          v36 = (google::protobuf *)((char *)v36 + 1);
          if (v33 > 2)
            continue;
        }
        LODWORD(a2) = v41 - 2;
        v28 = 2;
LABEL_111:
        LODWORD(v8) = v23;
        goto LABEL_114;
      }
      do
      {
        v42 = v35;
        this = v36;
        v8 = *((unsigned __int8 *)v36 - 1);
        v9 = *(unsigned __int8 *)(a5 + v8);
        if ((*(char *)(a5 + v8) & 0x80000000) == 0)
        {
          LODWORD(a2) = v35 - 2;
          goto LABEL_75;
        }
        if ((v8 - 9) >= 5 && (_DWORD)v8 != 32)
          break;
        v36 = (google::protobuf *)((char *)v36 + 1);
        --v35;
      }
      while (v35 > 1);
      v9 = (char)v9;
      LODWORD(a2) = v42 - 2;
      v28 = 3;
      goto LABEL_114;
    }
LABEL_77:
    v7 = 0;
    v28 = 0;
    LODWORD(v27) = 0;
    goto LABEL_78;
  }
  if ((int)a2 < 4)
    goto LABEL_77;
  v6 = 0;
  v7 = 0;
  while (*(_BYTE *)this)
  {
    if (!*((_BYTE *)this + 1))
      break;
    if (!*((_BYTE *)this + 2))
      break;
    v7 = (*(char *)(a5 + *((unsigned __int8 *)this + 1)) << 12) | (*(char *)(a5 + *(unsigned __int8 *)this) << 18) | (*(char *)(a5 + *((unsigned __int8 *)this + 2)) << 6) | *(char *)(a5 + *((unsigned __int8 *)this + 3));
    if ((v7 & 0x80000000) != 0)
      break;
    LODWORD(v8) = 0;
    LODWORD(a2) = (_DWORD)a2 - 4;
    this = (google::protobuf *)((char *)this + 4);
    v9 = -1;
LABEL_37:
    v27 = v6 + 3;
    if ((int)v6 + 3 > (int)a4)
      return 0xFFFFFFFFLL;
    v28 = 0;
    v29 = a3 + v6;
    *(_WORD *)(v29 + 1) = bswap32(v7) >> 16;
    v7 >>= 16;
    *(_BYTE *)v29 = v7;
    v6 = v27;
    if ((int)a2 <= 3)
      goto LABEL_114;
  }
  v10 = (_DWORD)a2 + 1;
  v11 = (google::protobuf *)((char *)this + 1);
  v12 = (google::protobuf *)((char *)this + 2);
  v13 = (_DWORD)a2 - 1;
  v14 = (google::protobuf *)((char *)this + 3);
  v15 = (_DWORD)a2 - 2;
  v16 = (google::protobuf *)((char *)this + 4);
  v17 = (int)a2;
  while (1)
  {
    this = v11;
    v18 = *((unsigned __int8 *)v11 - 1);
    v19 = *(unsigned __int8 *)(a5 + v18);
    if ((*(char *)(a5 + v18) & 0x80000000) == 0)
      break;
    if ((v18 - 9) >= 5 && (_DWORD)v18 != 32)
    {
      LODWORD(a2) = v10 - 2;
      goto LABEL_100;
    }
    v11 = (google::protobuf *)((char *)v11 + 1);
    --v10;
    --v17;
    v12 = (google::protobuf *)((char *)v12 + 1);
    --v13;
    v14 = (google::protobuf *)((char *)v14 + 1);
    --v15;
    v16 = (google::protobuf *)((char *)v16 + 1);
    if (v10 <= 4)
    {
      LODWORD(a2) = 3;
LABEL_100:
      v28 = 0;
      v9 = (char)v19;
      LODWORD(v27) = v6;
      LODWORD(v8) = v18;
      goto LABEL_114;
    }
  }
  while (1)
  {
    this = v12;
    v21 = *((unsigned __int8 *)v12 - 1);
    v22 = *(unsigned __int8 *)(a5 + v21);
    if ((*(char *)(a5 + v21) & 0x80000000) == 0)
      break;
    v20 = v17;
    if ((v21 - 9) < 5 || (_DWORD)v21 == 32)
    {
      v12 = (google::protobuf *)((char *)v12 + 1);
      --v17;
      --v13;
      v14 = (google::protobuf *)((char *)v14 + 1);
      --v15;
      v16 = (google::protobuf *)((char *)v16 + 1);
      if (v17 > 3)
        continue;
    }
    v9 = (char)v22;
    LODWORD(a2) = v20 - 2;
    v28 = 1;
    LODWORD(v27) = v6;
    LODWORD(v8) = v21;
    v7 = *(unsigned __int8 *)(a5 + v18);
    goto LABEL_114;
  }
  v7 = v22 | (v19 << 6);
  while (1)
  {
    this = v14;
    v23 = *((unsigned __int8 *)v14 - 1);
    v24 = *(unsigned __int8 *)(a5 + v23);
    if ((*(char *)(a5 + v23) & 0x80000000) == 0)
      break;
    v25 = v13;
    if ((v23 - 9) < 5 || (_DWORD)v23 == 32)
    {
      v14 = (google::protobuf *)((char *)v14 + 1);
      --v13;
      --v15;
      v16 = (google::protobuf *)((char *)v16 + 1);
      if (v13 > 2)
        continue;
    }
    v9 = (char)v24;
    LODWORD(a2) = v25 - 2;
    v28 = 2;
    LODWORD(v27) = v6;
    goto LABEL_111;
  }
  v7 = v24 | (v7 << 6);
  do
  {
    v26 = v15;
    this = v16;
    v8 = *((unsigned __int8 *)v16 - 1);
    v9 = *(unsigned __int8 *)(a5 + v8);
    if ((*(char *)(a5 + v8) & 0x80000000) == 0)
    {
      v7 = v9 | (v7 << 6);
      LODWORD(a2) = v15 - 2;
      goto LABEL_37;
    }
    if ((v8 - 9) >= 5 && (_DWORD)v8 != 32)
      break;
    v16 = (google::protobuf *)((char *)v16 + 1);
    --v15;
  }
  while (v15 > 1);
  v9 = (char)v9;
  LODWORD(a2) = v26 - 2;
  v28 = 3;
  LODWORD(v27) = v6;
LABEL_114:
  if ((v9 & 0x80000000) == 0)
    goto LABEL_115;
  if ((_DWORD)v8 == 61 || (_DWORD)v8 == 46)
    goto LABEL_124;
  if ((_DWORD)v8)
  {
    if ((v8 - 9) >= 5 && (_DWORD)v8 != 32)
      return 0xFFFFFFFFLL;
LABEL_115:
    if ((_DWORD)v8 != 61 && (_DWORD)v8 != 46)
      goto LABEL_78;
LABEL_124:
    v43 = (_DWORD)a2 + 1;
    v44 = (google::protobuf *)((char *)this - 1);
    goto LABEL_125;
  }
LABEL_78:
  if ((int)a2 >= 1)
  {
LABEL_79:
    v43 = (int)a2;
    while (1)
    {
      v44 = this;
      v46 = *(unsigned __int8 *)this;
      this = (google::protobuf *)((char *)this + 1);
      v45 = v46;
      v47 = *(char *)(a5 + v46);
      if ((v47 & 0x80000000) == 0)
      {
        v49 = v47 | (v7 << 6);
        if (++v28 == 4)
        {
          if (a3)
          {
            if ((int)v27 + 3 > (int)a4)
              return 0xFFFFFFFFLL;
            v28 = 0;
            v50 = v7 << 6;
            v51 = (_BYTE *)(a3 + (int)v27);
            v51[2] = v49;
            v51[1] = BYTE1(v50);
            *v51 = BYTE2(v50);
            LODWORD(v27) = v27 + 3;
            v7 = 0;
          }
          else
          {
            v28 = 0;
            v7 = 0;
            LODWORD(v27) = v27 + 3;
          }
        }
        else
        {
          v7 = v49;
        }
        this = (google::protobuf *)((char *)v44 + 1);
        LODWORD(a2) = v43 - 1;
        if (v43 < 2)
        {
LABEL_107:
          v44 = (google::protobuf *)((char *)v44 + 1);
          --v43;
          goto LABEL_125;
        }
        goto LABEL_79;
      }
      if ((v45 - 9) >= 5)
      {
        if (v45 > 45)
        {
          if (v45 == 46 || v45 == 61)
            goto LABEL_125;
          return 0xFFFFFFFFLL;
        }
        if (v45 != 32)
        {
          if (v45)
            return 0xFFFFFFFFLL;
          goto LABEL_107;
        }
      }
      v48 = v43--;
      if (v48 <= 1)
      {
        if ((int)a2 >= 1)
          v52 = 1;
        else
          v52 = (int)a2;
        v43 = v52 - 1;
        v44 = (google::protobuf *)((char *)v44 + 1);
        goto LABEL_125;
      }
    }
  }
  v43 = (int)a2;
  v44 = this;
LABEL_125:
  result = 0xFFFFFFFFLL;
  switch(v28)
  {
    case 0:
      break;
    case 1:
      return result;
    case 2:
      if (!a3)
        goto LABEL_129;
      if ((int)v27 >= (int)a4)
        return result;
      *(_BYTE *)(a3 + (int)v27) = v7 >> 4;
LABEL_129:
      LODWORD(v27) = v27 + 1;
      v28 = 2;
      break;
    case 3:
      if (!a3)
        goto LABEL_134;
      if ((int)v27 + 2 > (int)a4)
        return result;
      v56 = (_BYTE *)(a3 + (int)v27);
      v56[1] = v7 >> 2;
      *v56 = v7 >> 10;
LABEL_134:
      v28 = 1;
      LODWORD(v27) = v27 + 2;
      break;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 1943);
      v54 = google::protobuf::internal::LogMessage::operator<<(v62, "This can't happen; base64 decoder state = ");
      v55 = google::protobuf::internal::LogMessage::operator<<(v54, v28);
      google::protobuf::internal::LogFinisher::operator=((int)&v61, (const char **)&v55->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v62[0].__r_.__value_.__l.__data_);
      v28 = 0;
      break;
  }
  if (v43 >= 1)
  {
    v57 = 0;
    v58 = v43 + 1;
    while (1)
    {
      v59 = *(unsigned __int8 *)v44;
      if (v59 > 0x3D)
        return 0xFFFFFFFFLL;
      if (((1 << v59) & 0x100003E00) == 0)
      {
        if (((1 << v59) & 0x2000400000000000) == 0)
        {
          if (!*(_BYTE *)v44)
            goto LABEL_144;
          return 0xFFFFFFFFLL;
        }
        ++v57;
      }
      v44 = (google::protobuf *)((char *)v44 + 1);
      if (--v58 <= 1)
        goto LABEL_144;
    }
  }
  v57 = 0;
LABEL_144:
  if (v57 == v28 || v57 == 0)
    return v27;
  else
    return 0xFFFFFFFFLL;
}

void sub_1BF82FB04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::Base64Unescape@<W0>(google::protobuf *a1@<X0>, const char *a2@<X1>, std::string *a3@<X2>, int a4@<W8>)
{
  return google::protobuf::Base64UnescapeInternal(a3, a1, a2, (uint64_t)&google::protobuf::kUnBase64, a4);
}

BOOL google::protobuf::Base64UnescapeInternal@<W0>(std::string *this@<X2>, google::protobuf *a2@<X0>, const char *a3@<X1>, uint64_t a4@<X3>, int a5@<W8>)
{
  char *v9;
  const signed __int8 *v10;
  std::string *v11;
  int v12;
  int v13;
  std::string *v14;
  char v16;
  std::string v17[2];

  v9 = (char *)(3 * ((int)a3 / 4) + a3 - (a5 & 0xFFFFFFFC));
  std::string::resize(this, (int)v9, 0);
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    if (this->__r_.__value_.__l.__size_)
    {
      v11 = (std::string *)this->__r_.__value_.__r.__words[0];
      goto LABEL_7;
    }
  }
  else
  {
    v11 = this;
    if (*((_BYTE *)&this->__r_.__value_.__s + 23))
      goto LABEL_7;
  }
  v11 = 0;
LABEL_7:
  v12 = google::protobuf::Base64UnescapeInternal(a2, a3, (uint64_t)v11, v9, a4, v10);
  v13 = v12;
  if (v12 < 0)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      *this->__r_.__value_.__l.__data_ = 0;
      this->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      this->__r_.__value_.__s.__data_[0] = 0;
      *((_BYTE *)&this->__r_.__value_.__s + 23) = 0;
    }
  }
  else
  {
    if (v12 > (int)v9)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 2086);
      v14 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (len) <= (dest_len): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
    }
    std::string::erase(this, v13, 0xFFFFFFFFFFFFFFFFLL);
  }
  return v13 >= 0;
}

void sub_1BF82FC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::WebSafeBase64Unescape@<W0>(google::protobuf *a1@<X0>, const char *a2@<X1>, std::string *a3@<X2>, int a4@<W8>)
{
  return google::protobuf::Base64UnescapeInternal(a3, a1, a2, (uint64_t)&google::protobuf::kUnWebSafeBase64, a4);
}

uint64_t google::protobuf::Base64EscapeInternal(google::protobuf *this, const unsigned __int8 *a2, _BYTE *a3, char *a4, uint64_t a5, const char *a6)
{
  uint64_t result;
  int v7;
  char *v8;
  _BYTE *i;
  unsigned int v10;
  unint64_t v11;
  int v12;
  int v13;
  unint64_t v14;
  std::string *v15;
  std::string *v16;
  unint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  char v21;
  std::string v22[2];

  if ((int)a2 < 1 || 3 * (int)a4 < 4 * (int)a2)
    return 0;
  v7 = (int)a3;
  v8 = (char *)this + a2;
  for (i = a3; this < (google::protobuf *)(v8 - 3); i += 4)
  {
    v10 = *(_DWORD *)this;
    this = (google::protobuf *)((char *)this + 3);
    v11 = bswap32(v10);
    *i = *(_BYTE *)(a5 + (v11 >> 26));
    i[1] = *(_BYTE *)(a5 + ((v11 >> 20) & 0x3F));
    i[2] = *(_BYTE *)(a5 + ((v11 >> 14) & 0x3F));
    i[3] = *(_BYTE *)(a5 + ((v11 >> 8) & 0x3F));
  }
  v12 = (_DWORD)v8 - (_DWORD)this;
  v13 = (_DWORD)a3 + (_DWORD)a4 - (_DWORD)i;
  switch(v12)
  {
    case 0:
      goto LABEL_22;
    case 1:
      if (v13 < 2)
        return 0;
      v14 = *(unsigned __int8 *)this;
      *i = *(_BYTE *)(a5 + (v14 >> 2));
      i[1] = *(_BYTE *)(a5 + 16 * (v14 & 3));
      if (!(_DWORD)a6)
      {
        LODWORD(i) = (_DWORD)i + 2;
        goto LABEL_22;
      }
      if (v13 < 4)
        return 0;
      *((_WORD *)i + 1) = 15677;
      goto LABEL_19;
    case 2:
      if (v13 < 3)
        return 0;
      v17 = bswap32(*(unsigned __int16 *)this);
      *i = *(_BYTE *)(a5 + ((unint64_t)WORD1(v17) >> 10));
      i[1] = *(_BYTE *)(a5 + ((v17 >> 20) & 0x3F));
      i[2] = *(_BYTE *)(a5 + ((v17 >> 14) & 0x3CLL));
      if ((_DWORD)a6)
      {
        if (v13 < 4)
          return 0;
        v18 = 61;
LABEL_18:
        i[3] = v18;
LABEL_19:
        LODWORD(i) = (_DWORD)i + 4;
      }
      else
      {
        LODWORD(i) = (_DWORD)i + 3;
      }
LABEL_22:
      result = ((_DWORD)i - v7);
      break;
    case 3:
      if (v13 < 4)
        return 0;
      v19 = *(_BYTE *)this;
      v20 = bswap32(*(unsigned __int16 *)((char *)this + 1));
      *i = *(_BYTE *)(a5 + (*(_BYTE *)this >> 2));
      i[1] = *(_BYTE *)(a5 + ((unint64_t)(WORD1(v20) & 0xFFFCFFFF | ((v19 & 3) << 16)) >> 12));
      i[2] = *(_BYTE *)(a5 + ((v20 >> 22) & 0x3F));
      v18 = *(_BYTE *)(a5 + ((v20 >> 16) & 0x3F));
      goto LABEL_18;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 2194);
      v15 = google::protobuf::internal::LogMessage::operator<<(v22, "Logic problem? szsrc = ");
      v16 = google::protobuf::internal::LogMessage::operator<<(v15, v12);
      google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
      goto LABEL_22;
  }
  return result;
}

void sub_1BF82FE8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::Base64EscapeInternal(google::protobuf *a1, google::protobuf *this, uint64_t a3, const char *a4, uint64_t a5)
{
  int v10;
  char *v11;
  _BYTE *v12;
  int v13;
  std::string *v14;
  char v16;
  std::string v17[2];

  v10 = google::protobuf::CalculateBase64EscapedLen(this, (int)a4);
  std::string::resize((std::string *)a3, v10, 0);
  if (*(char *)(a3 + 23) < 0)
  {
    v11 = *(char **)(a3 + 8);
    if (v11)
      v12 = *(_BYTE **)a3;
    else
      v12 = 0;
  }
  else
  {
    v11 = (char *)*(unsigned __int8 *)(a3 + 23);
    if (*(_BYTE *)(a3 + 23))
      v12 = (_BYTE *)a3;
    else
      v12 = 0;
  }
  v13 = google::protobuf::Base64EscapeInternal(a1, (const unsigned __int8 *)this, v12, v11, a5, a4);
  if (v10 != v13)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/strutil.cc", 2226);
    v14 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (calc_escaped_size) == (escaped_len): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v14->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  return std::string::erase((std::string *)a3, v13, 0xFFFFFFFFFFFFFFFFLL);
}

void sub_1BF82FFA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::Base64Escape(google::protobuf *a1, google::protobuf *a2, uint64_t a3, const char *a4)
{
  return google::protobuf::Base64EscapeInternal(a1, a2, a3, a4, (uint64_t)"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
}

std::string *google::protobuf::Base64Escape(google::protobuf *a1, google::protobuf *a2, uint64_t a3)
{
  return google::protobuf::Base64EscapeInternal(a1, a2, a3, (const char *)1, (uint64_t)"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
}

std::string *google::protobuf::WebSafeBase64Escape(google::protobuf *a1, google::protobuf *a2, uint64_t a3)
{
  return google::protobuf::Base64EscapeInternal(a1, a2, a3, 0, (uint64_t)"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_");
}

std::string *google::protobuf::WebSafeBase64EscapeWithPadding(google::protobuf *a1, google::protobuf *a2, uint64_t a3)
{
  return google::protobuf::Base64EscapeInternal(a1, a2, a3, (const char *)1, (uint64_t)"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_");
}

std::vector<std::string> **std::back_insert_iterator<std::vector<std::string>>::operator=[abi:ne180100](std::vector<std::string> **a1, __int128 *a2)
{
  std::vector<std::string> *v4;
  std::vector<std::string>::pointer end;
  std::vector<std::string> *v6;
  std::allocator<std::string> *p_end_cap;
  std::string *v8;
  std::string *value;
  __int128 v10;
  std::string *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  std::string *v16;
  std::string *v17;
  __int128 v18;
  std::__split_buffer<std::string> __v;

  v4 = *a1;
  end = (*a1)->__end_;
  v6 = *a1;
  value = v6->__end_cap_.__value_;
  p_end_cap = (std::allocator<std::string> *)&v6->__end_cap_;
  v8 = value;
  if (end >= value)
  {
    v12 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)v4->__begin_) >> 3);
    v13 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v14 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (char *)v4->__begin_) >> 3);
    if (2 * v14 > v13)
      v13 = 2 * v14;
    if (v14 >= 0x555555555555555)
      v15 = 0xAAAAAAAAAAAAAAALL;
    else
      v15 = v13;
    __v.__end_cap_.__value_ = p_end_cap;
    if (v15)
      v16 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)p_end_cap, v15);
    else
      v16 = 0;
    v17 = v16 + v12;
    __v.__first_ = v16;
    __v.__begin_ = v17;
    __v.__end_cap_.__value_ = &v16[v15];
    v18 = *a2;
    v17->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&v17->__r_.__value_.__l.__data_ = v18;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    __v.__end_ = v17 + 1;
    std::vector<std::string>::__swap_out_circular_buffer(v4, &__v);
    v11 = v4->__end_;
    std::__split_buffer<std::string>::~__split_buffer(&__v);
  }
  else
  {
    v10 = *a2;
    end->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&end->__r_.__value_.__l.__data_ = v10;
    *((_QWORD *)a2 + 1) = 0;
    *((_QWORD *)a2 + 2) = 0;
    *(_QWORD *)a2 = 0;
    v11 = end + 1;
    v4->__end_ = end + 1;
  }
  v4->__end_ = v11;
  return a1;
}

void sub_1BF830124(_Unwind_Exception *a1, std::__split_buffer<std::string> *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)&a10);
  _Unwind_Resume(a1);
}

_QWORD *std::string::__init_with_size[abi:ne180100]<char *,char *>(_QWORD *result, char *a2, char *a3, unint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = result;
  if (a4 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  if (a4 > 0x16)
  {
    v8 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17)
      v8 = a4 | 7;
    v9 = v8 + 1;
    result = operator new(v8 + 1);
    v4[1] = a4;
    v4[2] = v9 | 0x8000000000000000;
    *v4 = result;
    v4 = result;
  }
  else
  {
    *((_BYTE *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    v10 = *a2++;
    *(_BYTE *)v4 = v10;
    v4 = (_QWORD *)((char *)v4 + 1);
  }
  *(_BYTE *)v4 = 0;
  return result;
}

uint64_t google::protobuf::safe_parse_positive_int<int>(unsigned __int8 *a1, int *a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  int v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  uint64_t result;

  if ((char)a1[23] < 0)
  {
    v3 = a1;
    a1 = *(unsigned __int8 **)a1;
    v2 = *((_QWORD *)v3 + 1);
  }
  else
  {
    v2 = a1[23];
  }
  if (v2 < 1)
  {
    v4 = 0;
LABEL_12:
    result = 1;
  }
  else
  {
    v4 = 0;
    v5 = &a1[v2];
    while (1)
    {
      v6 = *a1;
      if ((v6 - 58) < 0xFFFFFFF6)
        break;
      if (v4 > 214748364 || (v7 = 10 * v4, v7 > -2147483601 - v6))
      {
        result = 0;
        v4 = 0x7FFFFFFF;
        goto LABEL_15;
      }
      v4 = v7 + v6 - 48;
      if (++a1 >= v5)
        goto LABEL_12;
    }
    result = 0;
  }
LABEL_15:
  *a2 = v4;
  return result;
}

uint64_t google::protobuf::safe_parse_negative_int<int>(unsigned __int8 *a1, int *a2)
{
  int v2;
  BOOL v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  unsigned __int8 *v7;
  int v8;
  int v9;
  uint64_t result;

  v2 = (char)a1[23];
  v3 = v2 < 0;
  if (v2 >= 0)
    v4 = a1;
  else
    v4 = *(unsigned __int8 **)a1;
  if (v3)
    v5 = *((_QWORD *)a1 + 1);
  else
    v5 = a1[23];
  if (v5 < 1)
  {
    v6 = 0;
LABEL_15:
    result = 1;
  }
  else
  {
    v6 = 0;
    v7 = &v4[v5];
    while (1)
    {
      v8 = *v4;
      if ((v8 - 58) < 0xFFFFFFF6)
        break;
      if (v6 < -214748364 || (v9 = 10 * v6, v9 < v8 + 2147483600))
      {
        result = 0;
        v6 = 0x80000000;
        goto LABEL_18;
      }
      v6 = v9 - v8 + 48;
      if (++v4 >= v7)
        goto LABEL_15;
    }
    result = 0;
  }
LABEL_18:
  *a2 = v6;
  return result;
}

uint64_t google::protobuf::safe_parse_positive_int<unsigned int>(unsigned __int8 *a1, unsigned int *a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned int v4;
  unsigned __int8 *v5;
  int v6;
  unsigned int v7;
  uint64_t result;

  if ((char)a1[23] < 0)
  {
    v3 = a1;
    a1 = *(unsigned __int8 **)a1;
    v2 = *((_QWORD *)v3 + 1);
  }
  else
  {
    v2 = a1[23];
  }
  if (v2 < 1)
  {
    v4 = 0;
LABEL_12:
    result = 1;
  }
  else
  {
    v4 = 0;
    v5 = &a1[v2];
    while (1)
    {
      v6 = *a1;
      if ((v6 - 58) < 0xFFFFFFF6)
        break;
      if (v4 > 0x19999999 || (v7 = 10 * v4, v7 > 47 - v6))
      {
        result = 0;
        v4 = -1;
        goto LABEL_15;
      }
      v4 = v7 + v6 - 48;
      if (++a1 >= v5)
        goto LABEL_12;
    }
    result = 0;
  }
LABEL_15:
  *a2 = v4;
  return result;
}

uint64_t google::protobuf::safe_parse_positive_int<long long>(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if ((char)a1[23] < 0)
  {
    v3 = a1;
    a1 = *(unsigned __int8 **)a1;
    v2 = *((_QWORD *)v3 + 1);
  }
  else
  {
    v2 = a1[23];
  }
  if (v2 < 1)
  {
    v4 = 0;
LABEL_12:
    result = 1;
  }
  else
  {
    v4 = 0;
    v5 = &a1[v2];
    while (1)
    {
      v6 = *a1;
      if ((v6 - 58) < 0xFFFFFFF6)
        break;
      if (v4 > 0xCCCCCCCCCCCCCCCLL || (v7 = 10 * v4, v8 = (v6 - 48), v7 > (v8 ^ 0x7FFFFFFFFFFFFFFFLL)))
      {
        result = 0;
        v4 = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_15;
      }
      v4 = v8 + v7;
      if (++a1 >= v5)
        goto LABEL_12;
    }
    result = 0;
  }
LABEL_15:
  *a2 = v4;
  return result;
}

uint64_t google::protobuf::safe_parse_negative_int<long long>(unsigned __int8 *a1, int64_t *a2)
{
  int v2;
  BOOL v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int64_t v6;
  unsigned __int8 *v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t result;

  v2 = (char)a1[23];
  v3 = v2 < 0;
  if (v2 >= 0)
    v4 = a1;
  else
    v4 = *(unsigned __int8 **)a1;
  if (v3)
    v5 = *((_QWORD *)a1 + 1);
  else
    v5 = a1[23];
  if (v5 < 1)
  {
    v6 = 0;
LABEL_15:
    result = 1;
  }
  else
  {
    v6 = 0;
    v7 = &v4[v5];
    while (1)
    {
      v8 = *v4;
      if ((v8 - 58) < 0xFFFFFFF6)
        break;
      if (v6 < (uint64_t)0xF333333333333334
        || (v9 = v8 - 48, v10 = 10 * v6, v10 < (uint64_t)(v9 | 0x8000000000000000)))
      {
        result = 0;
        v6 = 0x8000000000000000;
        goto LABEL_18;
      }
      v6 = v10 - v9;
      if (++v4 >= v7)
        goto LABEL_15;
    }
    result = 0;
  }
LABEL_18:
  *a2 = v6;
  return result;
}

uint64_t google::protobuf::safe_parse_positive_int<unsigned long long>(unsigned __int8 *a1, unint64_t *a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unint64_t v4;
  unsigned __int8 *v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t result;

  if ((char)a1[23] < 0)
  {
    v3 = a1;
    a1 = *(unsigned __int8 **)a1;
    v2 = *((_QWORD *)v3 + 1);
  }
  else
  {
    v2 = a1[23];
  }
  if (v2 < 1)
  {
    v4 = 0;
LABEL_12:
    result = 1;
  }
  else
  {
    v4 = 0;
    v5 = &a1[v2];
    while (1)
    {
      v6 = *a1;
      if ((v6 - 58) < 0xFFFFFFF6)
        break;
      if (v4 > 0x1999999999999999 || (v7 = v6 - 48, v8 = 10 * v4, __CFADD__(v8, v7)))
      {
        result = 0;
        v4 = -1;
        goto LABEL_15;
      }
      v4 = v7 + v8;
      if (++a1 >= v5)
        goto LABEL_12;
    }
    result = 0;
  }
LABEL_15:
  *a2 = v4;
  return result;
}

void google::protobuf::strings::ByteSource::CopyTo(google::protobuf::strings::ByteSource *this, google::protobuf::strings::ByteSink *a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  std::string *v9;
  char v10;
  std::string v11[2];

  if (a3)
  {
    v3 = a3;
    while (1)
    {
      v6 = (*(uint64_t (**)(google::protobuf::strings::ByteSource *))(*(_QWORD *)this + 24))(this);
      if (!v7)
        break;
      if (v7 >= v3)
        v8 = v3;
      else
        v8 = v7;
      (*(void (**)(google::protobuf::strings::ByteSink *, uint64_t, unint64_t))(*(_QWORD *)a2 + 16))(a2, v6, v8);
      (*(void (**)(google::protobuf::strings::ByteSource *, unint64_t))(*(_QWORD *)this + 32))(this, v8);
      v3 -= v8;
      if (!v3)
        return;
    }
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/bytestream.cc", 46);
    v9 = google::protobuf::internal::LogMessage::operator<<(v11, "ByteSource::CopyTo() overran input.");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
}

void sub_1BF830658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::strings::ArrayByteSource::Available(google::protobuf::strings::ArrayByteSource *this)
{
  return *((_QWORD *)this + 2);
}

uint64_t google::protobuf::strings::ArrayByteSource::Peek(google::protobuf::strings::ArrayByteSource *this)
{
  return *((_QWORD *)this + 1);
}

void google::protobuf::strings::ArrayByteSource::Skip(google::protobuf::strings::ArrayByteSource *this, unint64_t a2)
{
  unint64_t v4;
  std::string *v5;
  BOOL v6;
  BOOL v7;
  unint64_t v8;
  char v9;
  std::string v10[2];

  v4 = *((_QWORD *)this + 2);
  if (v4 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/bytestream.cc", 157);
    v5 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (n) <= (input_.size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    v4 = *((_QWORD *)this + 2);
  }
  v7 = __OFSUB__(v4, a2);
  v6 = (uint64_t)(v4 - a2) < 0;
  v8 = v4 - a2;
  if (v6 != v7)
    google::protobuf::strings::ArrayByteSource::Skip();
  *((_QWORD *)this + 1) += a2;
  *((_QWORD *)this + 2) = v8;
}

void sub_1BF830714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::strings::ArrayByteSource::~ArrayByteSource(google::protobuf::strings::ArrayByteSource *this)
{
  JUMPOUT(0x1C3B8D890);
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw(google::protobuf::io::ZeroCopyOutputStream *this, const void *a2)
{
  std::string *v2;
  char v4;
  std::string v5[2];

  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream.cc", 47);
  v2 = google::protobuf::internal::LogMessage::operator<<(v5, "This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.");
  google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  return 0;
}

void sub_1BF8307A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::AllowsAliasing(google::protobuf::io::ZeroCopyOutputStream *this)
{
  return 0;
}

uint64_t google::protobuf::RepeatedField<BOOL>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  std::string *v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v10;
  std::string v11[2];

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<BOOL>::Reserve((int *)a1, v4);
    google::protobuf::RepeatedField<BOOL>::AddNAlreadyReserved(a1, *a2);
    if (*(int *)a1 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
      v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v6 = (void *)google::protobuf::RepeatedField<BOOL>::elements(a1);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a2);
    memcpy(v6, v8, *a2);
  }
  return a1;
}

void sub_1BF8308CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<BOOL>::Reserve(int *a1, int a2)
{
  int v2;
  _QWORD *v5;
  google::protobuf::internal::ArenaImpl **v6;
  google::protobuf::internal::ArenaImpl *v7;
  int v8;
  size_t v9;
  uint64_t v10;
  _QWORD *Aligned;
  void *v12;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v5 = 0;
    if (v2)
      goto LABEL_4;
LABEL_6:
    v6 = (google::protobuf::internal::ArenaImpl **)(a1 + 2);
    goto LABEL_7;
  }
  v5 = (_QWORD *)(google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a1) - 8);
  v2 = a1[1];
  if (!v2)
    goto LABEL_6;
LABEL_4:
  v6 = (google::protobuf::internal::ArenaImpl **)(google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a1) - 8);
  v2 = 2 * a1[1];
LABEL_7:
  v7 = *v6;
  if (v2 <= a2)
    v2 = a2;
  if (v2 <= 4)
    v8 = 4;
  else
    v8 = v2;
  v9 = (v8 + 8);
  if (v7)
  {
    v10 = (v9 + 7) & 0x1FFFFFFF8;
    if (*((_QWORD *)v7 + 14))
      google::protobuf::Arena::OnArenaAllocation((uint64_t)v7, MEMORY[0x1E0DE4EC8], v10);
    Aligned = (_QWORD *)google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v10);
  }
  else
  {
    Aligned = operator new(v9);
  }
  *Aligned = v7;
  a1[1] = v8;
  *((_QWORD *)a1 + 1) = Aligned + 1;
  google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a1);
  if (*a1 >= 1)
  {
    v12 = (void *)google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a1);
    memcpy(v12, v5 + 1, *a1);
  }
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<BOOL>::AddNAlreadyReserved(uint64_t a1, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  v4 = *(_DWORD *)a1;
  if (*(_DWORD *)(a1 + 4) - *(_DWORD *)a1 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1153);
    v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (total_size_ - current_size_) >= (n): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, *(_DWORD *)(a1 + 4));
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, ", ");
    v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(_DWORD *)a1);
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    v4 = *(_DWORD *)a1;
  }
  result = *(_QWORD *)(a1 + 8) + v4;
  *(_DWORD *)a1 = v4 + a2;
  return result;
}

void sub_1BF830AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<BOOL>::Mutable(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1197);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a1) + a2;
}

void sub_1BF830B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<BOOL>::Get(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1176);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a1) + a2;
}

void sub_1BF830C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<BOOL>::~RepeatedField(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  if (*(int *)(a1 + 4) >= 1)
  {
    v2 = google::protobuf::RepeatedField<BOOL>::elements(a1);
    v4 = *(_QWORD *)(v2 - 8);
    v3 = (void *)(v2 - 8);
    if (!v4)
      operator delete(v3);
  }
  return a1;
}

void google::protobuf::RepeatedField<BOOL>::InternalSwap(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  std::string *v8;
  uint64_t v9;
  char v10;
  std::string v11[2];

  if (a1 == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1323);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: this != other: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 4))
    v5 = (uint64_t *)(google::protobuf::RepeatedField<BOOL>::elements(a1) - 8);
  else
    v5 = (uint64_t *)(a1 + 8);
  v6 = *v5;
  if (*(_DWORD *)(a2 + 4))
    v7 = (_QWORD *)(google::protobuf::RepeatedField<BOOL>::elements(a2) - 8);
  else
    v7 = (_QWORD *)(a2 + 8);
  if (v6 != *v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1324);
    v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArenaNoVirtual() == other->GetArenaNoVirtual(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v9;
  LODWORD(v9) = *(_DWORD *)a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)a2 = v9;
  LODWORD(v9) = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a2 + 4) = v9;
}

void sub_1BF830E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<BOOL>::elements(uint64_t a1)
{
  std::string *v2;
  char v4;
  std::string v5[2];

  if (*(int *)(a1 + 4) <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 300);
    v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_1BF830E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<BOOL>::Set(_DWORD *a1, int a2, char *a3)
{
  std::string *v6;
  std::string *v7;
  char v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1204);
    v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1205);
    v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v8 = *a3;
  result = google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a1);
  *(_BYTE *)(result + a2) = v8;
  return result;
}

void sub_1BF830F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<BOOL>::MergeFrom(int *a1, int *a2)
{
  std::string *v4;
  int v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v9;
  std::string v10[2];

  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1279);
    v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (*a2)
  {
    v5 = *a1;
    google::protobuf::RepeatedField<BOOL>::Reserve(a1, *a1 + *a2);
    google::protobuf::RepeatedField<BOOL>::AddNAlreadyReserved((uint64_t)a1, *a2);
    v6 = (void *)google::protobuf::RepeatedField<BOOL>::Mutable(a1, v5);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a2);
    memcpy(v6, v8, *a2);
  }
}

void sub_1BF83109C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<BOOL>::Swap(int *a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD v9[2];

  if (a1 != a2)
  {
    if (a1[1])
      v4 = (uint64_t *)(google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a1) - 8);
    else
      v4 = (uint64_t *)(a1 + 2);
    v5 = *v4;
    if (a2[1])
      v6 = (_QWORD *)(google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a2) - 8);
    else
      v6 = a2 + 2;
    if (v5 == *v6)
    {
      google::protobuf::RepeatedField<BOOL>::InternalSwap((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      if (a2[1])
        v7 = (uint64_t *)(google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a2) - 8);
      else
        v7 = (uint64_t *)(a2 + 2);
      v8 = *v7;
      v9[0] = 0;
      v9[1] = v8;
      google::protobuf::RepeatedField<BOOL>::MergeFrom((int *)v9, a1);
      *a1 = 0;
      google::protobuf::RepeatedField<BOOL>::MergeFrom(a1, a2);
      if (v9 != (_QWORD *)a2)
        google::protobuf::RepeatedField<BOOL>::InternalSwap((uint64_t)a2, (uint64_t)v9);
      google::protobuf::RepeatedField<BOOL>::~RepeatedField((uint64_t)v9);
    }
  }
}

void sub_1BF8311B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::RepeatedField<BOOL>::~RepeatedField((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<BOOL>::SwapElements(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t result;
  char v8;

  v6 = google::protobuf::RepeatedField<BOOL>::elements(a1);
  result = google::protobuf::RepeatedField<BOOL>::elements(a1);
  v8 = *(_BYTE *)(v6 + a2);
  *(_BYTE *)(v6 + a2) = *(_BYTE *)(result + a3);
  *(_BYTE *)(result + a3) = v8;
  return result;
}

uint64_t google::protobuf::RepeatedField<int>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  std::string *v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v10;
  std::string v11[2];

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<int>::Reserve((int *)a1, v4);
    google::protobuf::RepeatedField<int>::AddNAlreadyReserved(a1, *a2);
    if (*(int *)a1 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
      v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v6 = (void *)google::protobuf::RepeatedField<int>::elements(a1);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<int>::elements((uint64_t)a2);
    memcpy(v6, v8, 4 * *a2);
  }
  return a1;
}

void sub_1BF831324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<int>::Reserve(int *a1, int a2)
{
  int v2;
  _QWORD *v5;
  google::protobuf::internal::ArenaImpl **v6;
  google::protobuf::internal::ArenaImpl *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *Aligned;
  void *v12;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v5 = 0;
    if (v2)
      goto LABEL_4;
LABEL_6:
    v6 = (google::protobuf::internal::ArenaImpl **)(a1 + 2);
    goto LABEL_7;
  }
  v5 = (_QWORD *)(google::protobuf::RepeatedField<int>::elements((uint64_t)a1) - 8);
  v2 = a1[1];
  if (!v2)
    goto LABEL_6;
LABEL_4:
  v6 = (google::protobuf::internal::ArenaImpl **)(google::protobuf::RepeatedField<int>::elements((uint64_t)a1) - 8);
  v2 = 2 * a1[1];
LABEL_7:
  v7 = *v6;
  if (v2 <= a2)
    v2 = a2;
  if (v2 <= 4)
    v8 = 4;
  else
    v8 = v2;
  v9 = 4 * v8;
  if (v7)
  {
    v10 = (v9 + 15) & 0x3FFFFFFF8;
    if (*((_QWORD *)v7 + 14))
      google::protobuf::Arena::OnArenaAllocation((uint64_t)v7, MEMORY[0x1E0DE4EC8], v10);
    Aligned = (_QWORD *)google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v10);
  }
  else
  {
    Aligned = operator new(v9 + 8);
  }
  *Aligned = v7;
  a1[1] = v8;
  *((_QWORD *)a1 + 1) = Aligned + 1;
  google::protobuf::RepeatedField<int>::elements((uint64_t)a1);
  if (*a1 >= 1)
  {
    v12 = (void *)google::protobuf::RepeatedField<int>::elements((uint64_t)a1);
    memcpy(v12, v5 + 1, 4 * *a1);
  }
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<int>::AddNAlreadyReserved(uint64_t a1, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  v4 = *(_DWORD *)a1;
  if (*(_DWORD *)(a1 + 4) - *(_DWORD *)a1 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1153);
    v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (total_size_ - current_size_) >= (n): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, *(_DWORD *)(a1 + 4));
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, ", ");
    v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(_DWORD *)a1);
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    v4 = *(_DWORD *)a1;
  }
  result = *(_QWORD *)(a1 + 8) + 4 * v4;
  *(_DWORD *)a1 = v4 + a2;
  return result;
}

void sub_1BF831520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<int>::Mutable(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1197);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<int>::elements((uint64_t)a1) + 4 * a2;
}

void sub_1BF8315F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<int>::Get(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1176);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<int>::elements((uint64_t)a1) + 4 * a2;
}

void sub_1BF8316D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<int>::InternalSwap(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  std::string *v8;
  uint64_t v9;
  char v10;
  std::string v11[2];

  if (a1 == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1323);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: this != other: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 4))
    v5 = (uint64_t *)(google::protobuf::RepeatedField<int>::elements(a1) - 8);
  else
    v5 = (uint64_t *)(a1 + 8);
  v6 = *v5;
  if (*(_DWORD *)(a2 + 4))
    v7 = (_QWORD *)(google::protobuf::RepeatedField<int>::elements(a2) - 8);
  else
    v7 = (_QWORD *)(a2 + 8);
  if (v6 != *v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1324);
    v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArenaNoVirtual() == other->GetArenaNoVirtual(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v9;
  LODWORD(v9) = *(_DWORD *)a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)a2 = v9;
  LODWORD(v9) = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a2 + 4) = v9;
}

void sub_1BF831818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<int>::elements(uint64_t a1)
{
  std::string *v2;
  char v4;
  std::string v5[2];

  if (*(int *)(a1 + 4) <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 300);
    v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_1BF8318A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<int>::Set(_DWORD *a1, int a2, int *a3)
{
  std::string *v6;
  std::string *v7;
  int v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1204);
    v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1205);
    v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v8 = *a3;
  result = google::protobuf::RepeatedField<int>::elements((uint64_t)a1);
  *(_DWORD *)(result + 4 * a2) = v8;
  return result;
}

void sub_1BF83198C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<int>::MergeFrom(int *a1, int *a2)
{
  std::string *v4;
  int v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v9;
  std::string v10[2];

  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1279);
    v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (*a2)
  {
    v5 = *a1;
    google::protobuf::RepeatedField<int>::Reserve(a1, *a1 + *a2);
    google::protobuf::RepeatedField<int>::AddNAlreadyReserved((uint64_t)a1, *a2);
    v6 = (void *)google::protobuf::RepeatedField<int>::Mutable(a1, v5);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<int>::elements((uint64_t)a2);
    memcpy(v6, v8, 4 * *a2);
  }
}

void sub_1BF831AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<int>::Swap(int *a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD v9[2];

  if (a1 != a2)
  {
    if (a1[1])
      v4 = (uint64_t *)(google::protobuf::RepeatedField<int>::elements((uint64_t)a1) - 8);
    else
      v4 = (uint64_t *)(a1 + 2);
    v5 = *v4;
    if (a2[1])
      v6 = (_QWORD *)(google::protobuf::RepeatedField<int>::elements((uint64_t)a2) - 8);
    else
      v6 = a2 + 2;
    if (v5 == *v6)
    {
      google::protobuf::RepeatedField<int>::InternalSwap((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      if (a2[1])
        v7 = (uint64_t *)(google::protobuf::RepeatedField<int>::elements((uint64_t)a2) - 8);
      else
        v7 = (uint64_t *)(a2 + 2);
      v8 = *v7;
      v9[0] = 0;
      v9[1] = v8;
      google::protobuf::RepeatedField<int>::MergeFrom((int *)v9, a1);
      *a1 = 0;
      google::protobuf::RepeatedField<int>::MergeFrom(a1, a2);
      if (v9 != (_QWORD *)a2)
        google::protobuf::RepeatedField<int>::InternalSwap((uint64_t)a2, (uint64_t)v9);
      google::protobuf::RepeatedField<int>::~RepeatedField((uint64_t)v9);
    }
  }
}

void sub_1BF831BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::RepeatedField<int>::~RepeatedField((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<int>::SwapElements(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t result;
  int v8;

  v6 = google::protobuf::RepeatedField<int>::elements(a1);
  result = google::protobuf::RepeatedField<int>::elements(a1);
  v8 = *(_DWORD *)(v6 + 4 * a2);
  *(_DWORD *)(v6 + 4 * a2) = *(_DWORD *)(result + 4 * a3);
  *(_DWORD *)(result + 4 * a3) = v8;
  return result;
}

uint64_t google::protobuf::RepeatedField<unsigned int>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  std::string *v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v10;
  std::string v11[2];

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<unsigned int>::Reserve((int *)a1, v4);
    google::protobuf::RepeatedField<unsigned int>::AddNAlreadyReserved(a1, *a2);
    if (*(int *)a1 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
      v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v6 = (void *)google::protobuf::RepeatedField<unsigned int>::elements(a1);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a2);
    memcpy(v6, v8, 4 * *a2);
  }
  return a1;
}

void sub_1BF831D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<unsigned int>::Reserve(int *a1, int a2)
{
  int v2;
  _QWORD *v5;
  google::protobuf::internal::ArenaImpl **v6;
  google::protobuf::internal::ArenaImpl *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *Aligned;
  void *v12;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v5 = 0;
    if (v2)
      goto LABEL_4;
LABEL_6:
    v6 = (google::protobuf::internal::ArenaImpl **)(a1 + 2);
    goto LABEL_7;
  }
  v5 = (_QWORD *)(google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a1) - 8);
  v2 = a1[1];
  if (!v2)
    goto LABEL_6;
LABEL_4:
  v6 = (google::protobuf::internal::ArenaImpl **)(google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a1)
                                                - 8);
  v2 = 2 * a1[1];
LABEL_7:
  v7 = *v6;
  if (v2 <= a2)
    v2 = a2;
  if (v2 <= 4)
    v8 = 4;
  else
    v8 = v2;
  v9 = 4 * v8;
  if (v7)
  {
    v10 = (v9 + 15) & 0x3FFFFFFF8;
    if (*((_QWORD *)v7 + 14))
      google::protobuf::Arena::OnArenaAllocation((uint64_t)v7, MEMORY[0x1E0DE4EC8], v10);
    Aligned = (_QWORD *)google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v10);
  }
  else
  {
    Aligned = operator new(v9 + 8);
  }
  *Aligned = v7;
  a1[1] = v8;
  *((_QWORD *)a1 + 1) = Aligned + 1;
  google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a1);
  if (*a1 >= 1)
  {
    v12 = (void *)google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a1);
    memcpy(v12, v5 + 1, 4 * *a1);
  }
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<unsigned int>::AddNAlreadyReserved(uint64_t a1, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  v4 = *(_DWORD *)a1;
  if (*(_DWORD *)(a1 + 4) - *(_DWORD *)a1 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1153);
    v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (total_size_ - current_size_) >= (n): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, *(_DWORD *)(a1 + 4));
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, ", ");
    v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(_DWORD *)a1);
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    v4 = *(_DWORD *)a1;
  }
  result = *(_QWORD *)(a1 + 8) + 4 * v4;
  *(_DWORD *)a1 = v4 + a2;
  return result;
}

void sub_1BF831F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::Mutable(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1197);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a1) + 4 * a2;
}

void sub_1BF832010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::Get(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1176);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a1) + 4 * a2;
}

void sub_1BF8320EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::~RepeatedField(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  if (*(int *)(a1 + 4) >= 1)
  {
    v2 = google::protobuf::RepeatedField<unsigned int>::elements(a1);
    v4 = *(_QWORD *)(v2 - 8);
    v3 = (void *)(v2 - 8);
    if (!v4)
      operator delete(v3);
  }
  return a1;
}

void google::protobuf::RepeatedField<unsigned int>::InternalSwap(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  std::string *v8;
  uint64_t v9;
  char v10;
  std::string v11[2];

  if (a1 == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1323);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: this != other: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 4))
    v5 = (uint64_t *)(google::protobuf::RepeatedField<unsigned int>::elements(a1) - 8);
  else
    v5 = (uint64_t *)(a1 + 8);
  v6 = *v5;
  if (*(_DWORD *)(a2 + 4))
    v7 = (_QWORD *)(google::protobuf::RepeatedField<unsigned int>::elements(a2) - 8);
  else
    v7 = (_QWORD *)(a2 + 8);
  if (v6 != *v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1324);
    v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArenaNoVirtual() == other->GetArenaNoVirtual(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v9;
  LODWORD(v9) = *(_DWORD *)a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)a2 = v9;
  LODWORD(v9) = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a2 + 4) = v9;
}

void sub_1BF83227C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::elements(uint64_t a1)
{
  std::string *v2;
  char v4;
  std::string v5[2];

  if (*(int *)(a1 + 4) <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 300);
    v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_1BF83230C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::Set(_DWORD *a1, int a2, int *a3)
{
  std::string *v6;
  std::string *v7;
  int v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1204);
    v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1205);
    v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v8 = *a3;
  result = google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a1);
  *(_DWORD *)(result + 4 * a2) = v8;
  return result;
}

void sub_1BF8323F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<unsigned int>::MergeFrom(int *a1, int *a2)
{
  std::string *v4;
  int v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v9;
  std::string v10[2];

  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1279);
    v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (*a2)
  {
    v5 = *a1;
    google::protobuf::RepeatedField<unsigned int>::Reserve(a1, *a1 + *a2);
    google::protobuf::RepeatedField<unsigned int>::AddNAlreadyReserved((uint64_t)a1, *a2);
    v6 = (void *)google::protobuf::RepeatedField<unsigned int>::Mutable(a1, v5);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a2);
    memcpy(v6, v8, 4 * *a2);
  }
}

void sub_1BF83251C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<unsigned int>::Swap(int *a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD v9[2];

  if (a1 != a2)
  {
    if (a1[1])
      v4 = (uint64_t *)(google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a1) - 8);
    else
      v4 = (uint64_t *)(a1 + 2);
    v5 = *v4;
    if (a2[1])
      v6 = (_QWORD *)(google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a2) - 8);
    else
      v6 = a2 + 2;
    if (v5 == *v6)
    {
      google::protobuf::RepeatedField<unsigned int>::InternalSwap((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      if (a2[1])
        v7 = (uint64_t *)(google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a2) - 8);
      else
        v7 = (uint64_t *)(a2 + 2);
      v8 = *v7;
      v9[0] = 0;
      v9[1] = v8;
      google::protobuf::RepeatedField<unsigned int>::MergeFrom((int *)v9, a1);
      *a1 = 0;
      google::protobuf::RepeatedField<unsigned int>::MergeFrom(a1, a2);
      if (v9 != (_QWORD *)a2)
        google::protobuf::RepeatedField<unsigned int>::InternalSwap((uint64_t)a2, (uint64_t)v9);
      google::protobuf::RepeatedField<unsigned int>::~RepeatedField((uint64_t)v9);
    }
  }
}

void sub_1BF832638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::RepeatedField<unsigned int>::~RepeatedField((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::SwapElements(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t result;
  int v8;

  v6 = google::protobuf::RepeatedField<unsigned int>::elements(a1);
  result = google::protobuf::RepeatedField<unsigned int>::elements(a1);
  v8 = *(_DWORD *)(v6 + 4 * a2);
  *(_DWORD *)(v6 + 4 * a2) = *(_DWORD *)(result + 4 * a3);
  *(_DWORD *)(result + 4 * a3) = v8;
  return result;
}

uint64_t google::protobuf::RepeatedField<long long>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  std::string *v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v10;
  std::string v11[2];

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<long long>::Reserve((int *)a1, v4);
    google::protobuf::RepeatedField<long long>::AddNAlreadyReserved(a1, *a2);
    if (*(int *)a1 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
      v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v6 = (void *)google::protobuf::RepeatedField<long long>::elements(a1);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<long long>::elements((uint64_t)a2);
    memcpy(v6, v8, 8 * *a2);
  }
  return a1;
}

void sub_1BF8327A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<long long>::Reserve(int *a1, int a2)
{
  int v2;
  _QWORD *v5;
  google::protobuf::internal::ArenaImpl **v6;
  google::protobuf::internal::ArenaImpl *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *Aligned;
  void *v12;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v5 = 0;
    if (v2)
      goto LABEL_4;
LABEL_6:
    v6 = (google::protobuf::internal::ArenaImpl **)(a1 + 2);
    goto LABEL_7;
  }
  v5 = (_QWORD *)(google::protobuf::RepeatedField<long long>::elements((uint64_t)a1) - 8);
  v2 = a1[1];
  if (!v2)
    goto LABEL_6;
LABEL_4:
  v6 = (google::protobuf::internal::ArenaImpl **)(google::protobuf::RepeatedField<long long>::elements((uint64_t)a1) - 8);
  v2 = 2 * a1[1];
LABEL_7:
  v7 = *v6;
  if (v2 <= a2)
    v2 = a2;
  if (v2 <= 4)
    v8 = 4;
  else
    v8 = v2;
  v9 = 8 * v8;
  if (v7)
  {
    v10 = (v9 + 15) & 0x7FFFFFFF8;
    if (*((_QWORD *)v7 + 14))
      google::protobuf::Arena::OnArenaAllocation((uint64_t)v7, MEMORY[0x1E0DE4EC8], v10);
    Aligned = (_QWORD *)google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v10);
  }
  else
  {
    Aligned = operator new(v9 + 8);
  }
  *Aligned = v7;
  a1[1] = v8;
  *((_QWORD *)a1 + 1) = Aligned + 1;
  google::protobuf::RepeatedField<long long>::elements((uint64_t)a1);
  if (*a1 >= 1)
  {
    v12 = (void *)google::protobuf::RepeatedField<long long>::elements((uint64_t)a1);
    memcpy(v12, v5 + 1, 8 * *a1);
  }
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<long long>::AddNAlreadyReserved(uint64_t a1, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  v4 = *(_DWORD *)a1;
  if (*(_DWORD *)(a1 + 4) - *(_DWORD *)a1 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1153);
    v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (total_size_ - current_size_) >= (n): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, *(_DWORD *)(a1 + 4));
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, ", ");
    v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(_DWORD *)a1);
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    v4 = *(_DWORD *)a1;
  }
  result = *(_QWORD *)(a1 + 8) + 8 * v4;
  *(_DWORD *)a1 = v4 + a2;
  return result;
}

void sub_1BF8329A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<long long>::Mutable(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1197);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<long long>::elements((uint64_t)a1) + 8 * a2;
}

void sub_1BF832A74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<long long>::Get(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1176);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<long long>::elements((uint64_t)a1) + 8 * a2;
}

void sub_1BF832B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<long long>::~RepeatedField(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  if (*(int *)(a1 + 4) >= 1)
  {
    v2 = google::protobuf::RepeatedField<long long>::elements(a1);
    v4 = *(_QWORD *)(v2 - 8);
    v3 = (void *)(v2 - 8);
    if (!v4)
      operator delete(v3);
  }
  return a1;
}

void google::protobuf::RepeatedField<long long>::InternalSwap(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  std::string *v8;
  uint64_t v9;
  char v10;
  std::string v11[2];

  if (a1 == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1323);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: this != other: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 4))
    v5 = (uint64_t *)(google::protobuf::RepeatedField<long long>::elements(a1) - 8);
  else
    v5 = (uint64_t *)(a1 + 8);
  v6 = *v5;
  if (*(_DWORD *)(a2 + 4))
    v7 = (_QWORD *)(google::protobuf::RepeatedField<long long>::elements(a2) - 8);
  else
    v7 = (_QWORD *)(a2 + 8);
  if (v6 != *v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1324);
    v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArenaNoVirtual() == other->GetArenaNoVirtual(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v9;
  LODWORD(v9) = *(_DWORD *)a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)a2 = v9;
  LODWORD(v9) = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a2 + 4) = v9;
}

void sub_1BF832CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<long long>::elements(uint64_t a1)
{
  std::string *v2;
  char v4;
  std::string v5[2];

  if (*(int *)(a1 + 4) <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 300);
    v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_1BF832D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<long long>::Set(_DWORD *a1, int a2, uint64_t *a3)
{
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1204);
    v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1205);
    v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v8 = *a3;
  result = google::protobuf::RepeatedField<long long>::elements((uint64_t)a1);
  *(_QWORD *)(result + 8 * a2) = v8;
  return result;
}

void sub_1BF832E54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<long long>::MergeFrom(int *a1, int *a2)
{
  std::string *v4;
  int v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v9;
  std::string v10[2];

  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1279);
    v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (*a2)
  {
    v5 = *a1;
    google::protobuf::RepeatedField<long long>::Reserve(a1, *a1 + *a2);
    google::protobuf::RepeatedField<long long>::AddNAlreadyReserved((uint64_t)a1, *a2);
    v6 = (void *)google::protobuf::RepeatedField<long long>::Mutable(a1, v5);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<long long>::elements((uint64_t)a2);
    memcpy(v6, v8, 8 * *a2);
  }
}

void sub_1BF832F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<long long>::Swap(int *a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD v9[2];

  if (a1 != a2)
  {
    if (a1[1])
      v4 = (uint64_t *)(google::protobuf::RepeatedField<long long>::elements((uint64_t)a1) - 8);
    else
      v4 = (uint64_t *)(a1 + 2);
    v5 = *v4;
    if (a2[1])
      v6 = (_QWORD *)(google::protobuf::RepeatedField<long long>::elements((uint64_t)a2) - 8);
    else
      v6 = a2 + 2;
    if (v5 == *v6)
    {
      google::protobuf::RepeatedField<long long>::InternalSwap((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      if (a2[1])
        v7 = (uint64_t *)(google::protobuf::RepeatedField<long long>::elements((uint64_t)a2) - 8);
      else
        v7 = (uint64_t *)(a2 + 2);
      v8 = *v7;
      v9[0] = 0;
      v9[1] = v8;
      google::protobuf::RepeatedField<long long>::MergeFrom((int *)v9, a1);
      *a1 = 0;
      google::protobuf::RepeatedField<long long>::MergeFrom(a1, a2);
      if (v9 != (_QWORD *)a2)
        google::protobuf::RepeatedField<long long>::InternalSwap((uint64_t)a2, (uint64_t)v9);
      google::protobuf::RepeatedField<long long>::~RepeatedField((uint64_t)v9);
    }
  }
}

void sub_1BF83309C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::RepeatedField<long long>::~RepeatedField((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<long long>::SwapElements(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v6 = google::protobuf::RepeatedField<long long>::elements(a1);
  result = google::protobuf::RepeatedField<long long>::elements(a1);
  v8 = *(_QWORD *)(v6 + 8 * a2);
  *(_QWORD *)(v6 + 8 * a2) = *(_QWORD *)(result + 8 * a3);
  *(_QWORD *)(result + 8 * a3) = v8;
  return result;
}

uint64_t google::protobuf::RepeatedField<unsigned long long>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  std::string *v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v10;
  std::string v11[2];

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<unsigned long long>::Reserve((int *)a1, v4);
    google::protobuf::RepeatedField<unsigned long long>::AddNAlreadyReserved(a1, *a2);
    if (*(int *)a1 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
      v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v6 = (void *)google::protobuf::RepeatedField<unsigned long long>::elements(a1);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a2);
    memcpy(v6, v8, 8 * *a2);
  }
  return a1;
}

void sub_1BF833208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<unsigned long long>::Reserve(int *a1, int a2)
{
  int v2;
  _QWORD *v5;
  google::protobuf::internal::ArenaImpl **v6;
  google::protobuf::internal::ArenaImpl *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *Aligned;
  void *v12;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v5 = 0;
    if (v2)
      goto LABEL_4;
LABEL_6:
    v6 = (google::protobuf::internal::ArenaImpl **)(a1 + 2);
    goto LABEL_7;
  }
  v5 = (_QWORD *)(google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a1) - 8);
  v2 = a1[1];
  if (!v2)
    goto LABEL_6;
LABEL_4:
  v6 = (google::protobuf::internal::ArenaImpl **)(google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a1)
                                                - 8);
  v2 = 2 * a1[1];
LABEL_7:
  v7 = *v6;
  if (v2 <= a2)
    v2 = a2;
  if (v2 <= 4)
    v8 = 4;
  else
    v8 = v2;
  v9 = 8 * v8;
  if (v7)
  {
    v10 = (v9 + 15) & 0x7FFFFFFF8;
    if (*((_QWORD *)v7 + 14))
      google::protobuf::Arena::OnArenaAllocation((uint64_t)v7, MEMORY[0x1E0DE4EC8], v10);
    Aligned = (_QWORD *)google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v10);
  }
  else
  {
    Aligned = operator new(v9 + 8);
  }
  *Aligned = v7;
  a1[1] = v8;
  *((_QWORD *)a1 + 1) = Aligned + 1;
  google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a1);
  if (*a1 >= 1)
  {
    v12 = (void *)google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a1);
    memcpy(v12, v5 + 1, 8 * *a1);
  }
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<unsigned long long>::AddNAlreadyReserved(uint64_t a1, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  v4 = *(_DWORD *)a1;
  if (*(_DWORD *)(a1 + 4) - *(_DWORD *)a1 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1153);
    v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (total_size_ - current_size_) >= (n): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, *(_DWORD *)(a1 + 4));
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, ", ");
    v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(_DWORD *)a1);
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    v4 = *(_DWORD *)a1;
  }
  result = *(_QWORD *)(a1 + 8) + 8 * v4;
  *(_DWORD *)a1 = v4 + a2;
  return result;
}

void sub_1BF833404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned long long>::Mutable(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1197);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a1) + 8 * a2;
}

void sub_1BF8334D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned long long>::Get(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1176);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a1) + 8 * a2;
}

void sub_1BF8335B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned long long>::~RepeatedField(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  if (*(int *)(a1 + 4) >= 1)
  {
    v2 = google::protobuf::RepeatedField<unsigned long long>::elements(a1);
    v4 = *(_QWORD *)(v2 - 8);
    v3 = (void *)(v2 - 8);
    if (!v4)
      operator delete(v3);
  }
  return a1;
}

void google::protobuf::RepeatedField<unsigned long long>::InternalSwap(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  std::string *v8;
  uint64_t v9;
  char v10;
  std::string v11[2];

  if (a1 == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1323);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: this != other: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 4))
    v5 = (uint64_t *)(google::protobuf::RepeatedField<unsigned long long>::elements(a1) - 8);
  else
    v5 = (uint64_t *)(a1 + 8);
  v6 = *v5;
  if (*(_DWORD *)(a2 + 4))
    v7 = (_QWORD *)(google::protobuf::RepeatedField<unsigned long long>::elements(a2) - 8);
  else
    v7 = (_QWORD *)(a2 + 8);
  if (v6 != *v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1324);
    v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArenaNoVirtual() == other->GetArenaNoVirtual(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v9;
  LODWORD(v9) = *(_DWORD *)a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)a2 = v9;
  LODWORD(v9) = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a2 + 4) = v9;
}

void sub_1BF833744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned long long>::elements(uint64_t a1)
{
  std::string *v2;
  char v4;
  std::string v5[2];

  if (*(int *)(a1 + 4) <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 300);
    v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_1BF8337D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned long long>::Set(_DWORD *a1, int a2, uint64_t *a3)
{
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1204);
    v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1205);
    v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v8 = *a3;
  result = google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a1);
  *(_QWORD *)(result + 8 * a2) = v8;
  return result;
}

void sub_1BF8338B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<unsigned long long>::MergeFrom(int *a1, int *a2)
{
  std::string *v4;
  int v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v9;
  std::string v10[2];

  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1279);
    v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (*a2)
  {
    v5 = *a1;
    google::protobuf::RepeatedField<unsigned long long>::Reserve(a1, *a1 + *a2);
    google::protobuf::RepeatedField<unsigned long long>::AddNAlreadyReserved((uint64_t)a1, *a2);
    v6 = (void *)google::protobuf::RepeatedField<unsigned long long>::Mutable(a1, v5);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a2);
    memcpy(v6, v8, 8 * *a2);
  }
}

void sub_1BF8339E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<unsigned long long>::Swap(int *a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD v9[2];

  if (a1 != a2)
  {
    if (a1[1])
      v4 = (uint64_t *)(google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a1) - 8);
    else
      v4 = (uint64_t *)(a1 + 2);
    v5 = *v4;
    if (a2[1])
      v6 = (_QWORD *)(google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a2) - 8);
    else
      v6 = a2 + 2;
    if (v5 == *v6)
    {
      google::protobuf::RepeatedField<unsigned long long>::InternalSwap((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      if (a2[1])
        v7 = (uint64_t *)(google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a2) - 8);
      else
        v7 = (uint64_t *)(a2 + 2);
      v8 = *v7;
      v9[0] = 0;
      v9[1] = v8;
      google::protobuf::RepeatedField<unsigned long long>::MergeFrom((int *)v9, a1);
      *a1 = 0;
      google::protobuf::RepeatedField<unsigned long long>::MergeFrom(a1, a2);
      if (v9 != (_QWORD *)a2)
        google::protobuf::RepeatedField<unsigned long long>::InternalSwap((uint64_t)a2, (uint64_t)v9);
      google::protobuf::RepeatedField<unsigned long long>::~RepeatedField((uint64_t)v9);
    }
  }
}

void sub_1BF833B00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::RepeatedField<unsigned long long>::~RepeatedField((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<unsigned long long>::SwapElements(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v6 = google::protobuf::RepeatedField<unsigned long long>::elements(a1);
  result = google::protobuf::RepeatedField<unsigned long long>::elements(a1);
  v8 = *(_QWORD *)(v6 + 8 * a2);
  *(_QWORD *)(v6 + 8 * a2) = *(_QWORD *)(result + 8 * a3);
  *(_QWORD *)(result + 8 * a3) = v8;
  return result;
}

uint64_t google::protobuf::RepeatedField<float>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  std::string *v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v10;
  std::string v11[2];

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<float>::Reserve((int *)a1, v4);
    google::protobuf::RepeatedField<float>::AddNAlreadyReserved(a1, *a2);
    if (*(int *)a1 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
      v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v6 = (void *)google::protobuf::RepeatedField<float>::elements(a1);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<float>::elements((uint64_t)a2);
    memcpy(v6, v8, 4 * *a2);
  }
  return a1;
}

void sub_1BF833C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<float>::Reserve(int *a1, int a2)
{
  int v2;
  _QWORD *v5;
  google::protobuf::internal::ArenaImpl **v6;
  google::protobuf::internal::ArenaImpl *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *Aligned;
  void *v12;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v5 = 0;
    if (v2)
      goto LABEL_4;
LABEL_6:
    v6 = (google::protobuf::internal::ArenaImpl **)(a1 + 2);
    goto LABEL_7;
  }
  v5 = (_QWORD *)(google::protobuf::RepeatedField<float>::elements((uint64_t)a1) - 8);
  v2 = a1[1];
  if (!v2)
    goto LABEL_6;
LABEL_4:
  v6 = (google::protobuf::internal::ArenaImpl **)(google::protobuf::RepeatedField<float>::elements((uint64_t)a1) - 8);
  v2 = 2 * a1[1];
LABEL_7:
  v7 = *v6;
  if (v2 <= a2)
    v2 = a2;
  if (v2 <= 4)
    v8 = 4;
  else
    v8 = v2;
  v9 = 4 * v8;
  if (v7)
  {
    v10 = (v9 + 15) & 0x3FFFFFFF8;
    if (*((_QWORD *)v7 + 14))
      google::protobuf::Arena::OnArenaAllocation((uint64_t)v7, MEMORY[0x1E0DE4EC8], v10);
    Aligned = (_QWORD *)google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v10);
  }
  else
  {
    Aligned = operator new(v9 + 8);
  }
  *Aligned = v7;
  a1[1] = v8;
  *((_QWORD *)a1 + 1) = Aligned + 1;
  google::protobuf::RepeatedField<float>::elements((uint64_t)a1);
  if (*a1 >= 1)
  {
    v12 = (void *)google::protobuf::RepeatedField<float>::elements((uint64_t)a1);
    memcpy(v12, v5 + 1, 4 * *a1);
  }
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<float>::AddNAlreadyReserved(uint64_t a1, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  v4 = *(_DWORD *)a1;
  if (*(_DWORD *)(a1 + 4) - *(_DWORD *)a1 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1153);
    v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (total_size_ - current_size_) >= (n): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, *(_DWORD *)(a1 + 4));
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, ", ");
    v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(_DWORD *)a1);
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    v4 = *(_DWORD *)a1;
  }
  result = *(_QWORD *)(a1 + 8) + 4 * v4;
  *(_DWORD *)a1 = v4 + a2;
  return result;
}

void sub_1BF833E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<float>::Mutable(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1197);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<float>::elements((uint64_t)a1) + 4 * a2;
}

void sub_1BF833F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<float>::Get(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1176);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<float>::elements((uint64_t)a1) + 4 * a2;
}

void sub_1BF834018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<float>::~RepeatedField(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  if (*(int *)(a1 + 4) >= 1)
  {
    v2 = google::protobuf::RepeatedField<float>::elements(a1);
    v4 = *(_QWORD *)(v2 - 8);
    v3 = (void *)(v2 - 8);
    if (!v4)
      operator delete(v3);
  }
  return a1;
}

void google::protobuf::RepeatedField<float>::InternalSwap(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  std::string *v8;
  uint64_t v9;
  char v10;
  std::string v11[2];

  if (a1 == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1323);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: this != other: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 4))
    v5 = (uint64_t *)(google::protobuf::RepeatedField<float>::elements(a1) - 8);
  else
    v5 = (uint64_t *)(a1 + 8);
  v6 = *v5;
  if (*(_DWORD *)(a2 + 4))
    v7 = (_QWORD *)(google::protobuf::RepeatedField<float>::elements(a2) - 8);
  else
    v7 = (_QWORD *)(a2 + 8);
  if (v6 != *v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1324);
    v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArenaNoVirtual() == other->GetArenaNoVirtual(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v9;
  LODWORD(v9) = *(_DWORD *)a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)a2 = v9;
  LODWORD(v9) = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a2 + 4) = v9;
}

void sub_1BF8341A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<float>::elements(uint64_t a1)
{
  std::string *v2;
  char v4;
  std::string v5[2];

  if (*(int *)(a1 + 4) <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 300);
    v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_1BF834238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<float>::Set(_DWORD *a1, int a2, int *a3)
{
  std::string *v6;
  std::string *v7;
  int v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1204);
    v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1205);
    v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v8 = *a3;
  result = google::protobuf::RepeatedField<float>::elements((uint64_t)a1);
  *(_DWORD *)(result + 4 * a2) = v8;
  return result;
}

void sub_1BF834324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<float>::MergeFrom(int *a1, int *a2)
{
  std::string *v4;
  int v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v9;
  std::string v10[2];

  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1279);
    v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (*a2)
  {
    v5 = *a1;
    google::protobuf::RepeatedField<float>::Reserve(a1, *a1 + *a2);
    google::protobuf::RepeatedField<float>::AddNAlreadyReserved((uint64_t)a1, *a2);
    v6 = (void *)google::protobuf::RepeatedField<float>::Mutable(a1, v5);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<float>::elements((uint64_t)a2);
    memcpy(v6, v8, 4 * *a2);
  }
}

void sub_1BF834450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<float>::Swap(int *a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD v9[2];

  if (a1 != a2)
  {
    if (a1[1])
      v4 = (uint64_t *)(google::protobuf::RepeatedField<float>::elements((uint64_t)a1) - 8);
    else
      v4 = (uint64_t *)(a1 + 2);
    v5 = *v4;
    if (a2[1])
      v6 = (_QWORD *)(google::protobuf::RepeatedField<float>::elements((uint64_t)a2) - 8);
    else
      v6 = a2 + 2;
    if (v5 == *v6)
    {
      google::protobuf::RepeatedField<float>::InternalSwap((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      if (a2[1])
        v7 = (uint64_t *)(google::protobuf::RepeatedField<float>::elements((uint64_t)a2) - 8);
      else
        v7 = (uint64_t *)(a2 + 2);
      v8 = *v7;
      v9[0] = 0;
      v9[1] = v8;
      google::protobuf::RepeatedField<float>::MergeFrom((int *)v9, a1);
      *a1 = 0;
      google::protobuf::RepeatedField<float>::MergeFrom(a1, a2);
      if (v9 != (_QWORD *)a2)
        google::protobuf::RepeatedField<float>::InternalSwap((uint64_t)a2, (uint64_t)v9);
      google::protobuf::RepeatedField<float>::~RepeatedField((uint64_t)v9);
    }
  }
}

void sub_1BF83456C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::RepeatedField<float>::~RepeatedField((uint64_t)&a9);
  _Unwind_Resume(a1);
}

float google::protobuf::RepeatedField<float>::SwapElements(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  float result;

  v6 = google::protobuf::RepeatedField<float>::elements(a1);
  v7 = google::protobuf::RepeatedField<float>::elements(a1);
  result = *(float *)(v6 + 4 * a2);
  *(_DWORD *)(v6 + 4 * a2) = *(_DWORD *)(v7 + 4 * a3);
  *(float *)(v7 + 4 * a3) = result;
  return result;
}

uint64_t google::protobuf::RepeatedField<double>::RepeatedField(uint64_t a1, int *a2)
{
  int v4;
  std::string *v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v10;
  std::string v11[2];

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<double>::Reserve((int *)a1, v4);
    google::protobuf::RepeatedField<double>::AddNAlreadyReserved(a1, *a2);
    if (*(int *)a1 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
      v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v6 = (void *)google::protobuf::RepeatedField<double>::elements(a1);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<double>::elements((uint64_t)a2);
    memcpy(v6, v8, 8 * *a2);
  }
  return a1;
}

void sub_1BF8346D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<double>::Reserve(int *a1, int a2)
{
  int v2;
  _QWORD *v5;
  google::protobuf::internal::ArenaImpl **v6;
  google::protobuf::internal::ArenaImpl *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *Aligned;
  void *v12;

  v2 = a1[1];
  if (v2 >= a2)
    return;
  if (v2 < 1)
  {
    v5 = 0;
    if (v2)
      goto LABEL_4;
LABEL_6:
    v6 = (google::protobuf::internal::ArenaImpl **)(a1 + 2);
    goto LABEL_7;
  }
  v5 = (_QWORD *)(google::protobuf::RepeatedField<double>::elements((uint64_t)a1) - 8);
  v2 = a1[1];
  if (!v2)
    goto LABEL_6;
LABEL_4:
  v6 = (google::protobuf::internal::ArenaImpl **)(google::protobuf::RepeatedField<double>::elements((uint64_t)a1) - 8);
  v2 = 2 * a1[1];
LABEL_7:
  v7 = *v6;
  if (v2 <= a2)
    v2 = a2;
  if (v2 <= 4)
    v8 = 4;
  else
    v8 = v2;
  v9 = 8 * v8;
  if (v7)
  {
    v10 = (v9 + 15) & 0x7FFFFFFF8;
    if (*((_QWORD *)v7 + 14))
      google::protobuf::Arena::OnArenaAllocation((uint64_t)v7, MEMORY[0x1E0DE4EC8], v10);
    Aligned = (_QWORD *)google::protobuf::internal::ArenaImpl::AllocateAligned(v7, v10);
  }
  else
  {
    Aligned = operator new(v9 + 8);
  }
  *Aligned = v7;
  a1[1] = v8;
  *((_QWORD *)a1 + 1) = Aligned + 1;
  google::protobuf::RepeatedField<double>::elements((uint64_t)a1);
  if (*a1 >= 1)
  {
    v12 = (void *)google::protobuf::RepeatedField<double>::elements((uint64_t)a1);
    memcpy(v12, v5 + 1, 8 * *a1);
  }
  if (v5)
  {
    if (!*v5)
      operator delete(v5);
  }
}

uint64_t google::protobuf::RepeatedField<double>::AddNAlreadyReserved(uint64_t a1, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  v4 = *(_DWORD *)a1;
  if (*(_DWORD *)(a1 + 4) - *(_DWORD *)a1 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1153);
    v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (total_size_ - current_size_) >= (n): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, *(_DWORD *)(a1 + 4));
    v7 = google::protobuf::internal::LogMessage::operator<<(v6, ", ");
    v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(_DWORD *)a1);
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    v4 = *(_DWORD *)a1;
  }
  result = *(_QWORD *)(a1 + 8) + 8 * v4;
  *(_DWORD *)a1 = v4 + a2;
  return result;
}

void sub_1BF8348D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<double>::Mutable(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1197);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1198);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<double>::elements((uint64_t)a1) + 8 * a2;
}

void sub_1BF8349A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<double>::Get(_DWORD *a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1176);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::RepeatedField<double>::elements((uint64_t)a1) + 8 * a2;
}

void sub_1BF834A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<double>::~RepeatedField(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  if (*(int *)(a1 + 4) >= 1)
  {
    v2 = google::protobuf::RepeatedField<double>::elements(a1);
    v4 = *(_QWORD *)(v2 - 8);
    v3 = (void *)(v2 - 8);
    if (!v4)
      operator delete(v3);
  }
  return a1;
}

void google::protobuf::RepeatedField<double>::InternalSwap(uint64_t a1, uint64_t a2)
{
  std::string *v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  std::string *v8;
  uint64_t v9;
  char v10;
  std::string v11[2];

  if (a1 == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1323);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: this != other: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 4))
    v5 = (uint64_t *)(google::protobuf::RepeatedField<double>::elements(a1) - 8);
  else
    v5 = (uint64_t *)(a1 + 8);
  v6 = *v5;
  if (*(_DWORD *)(a2 + 4))
    v7 = (_QWORD *)(google::protobuf::RepeatedField<double>::elements(a2) - 8);
  else
    v7 = (_QWORD *)(a2 + 8);
  if (v6 != *v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1324);
    v8 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: GetArenaNoVirtual() == other->GetArenaNoVirtual(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v9 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = v9;
  LODWORD(v9) = *(_DWORD *)a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)a2 = v9;
  LODWORD(v9) = *(_DWORD *)(a1 + 4);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a2 + 4) = v9;
}

void sub_1BF834C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<double>::elements(uint64_t a1)
{
  std::string *v2;
  char v4;
  std::string v5[2];

  if (*(int *)(a1 + 4) <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 300);
    v2 = google::protobuf::internal::LogMessage::operator<<(v5, "CHECK failed: (total_size_) > (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(a1 + 8);
}

void sub_1BF834CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::RepeatedField<double>::Set(_DWORD *a1, int a2, uint64_t *a3)
{
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  uint64_t result;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1204);
    v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (*a1 <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1205);
    v7 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v8 = *a3;
  result = google::protobuf::RepeatedField<double>::elements((uint64_t)a1);
  *(_QWORD *)(result + 8 * a2) = v8;
  return result;
}

void sub_1BF834D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<double>::MergeFrom(int *a1, int *a2)
{
  std::string *v4;
  int v5;
  void *v6;
  std::string *v7;
  const void *v8;
  char v9;
  std::string v10[2];

  if (a2 == a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1279);
    v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (*a2)
  {
    v5 = *a1;
    google::protobuf::RepeatedField<double>::Reserve(a1, *a1 + *a2);
    google::protobuf::RepeatedField<double>::AddNAlreadyReserved((uint64_t)a1, *a2);
    v6 = (void *)google::protobuf::RepeatedField<double>::Mutable(a1, v5);
    if (*a2 <= 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1177);
      v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (index) < (current_size_): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    }
    v8 = (const void *)google::protobuf::RepeatedField<double>::elements((uint64_t)a2);
    memcpy(v6, v8, 8 * *a2);
  }
}

void sub_1BF834EBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedField<double>::Swap(int *a1, int *a2)
{
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  _QWORD v9[2];

  if (a1 != a2)
  {
    if (a1[1])
      v4 = (uint64_t *)(google::protobuf::RepeatedField<double>::elements((uint64_t)a1) - 8);
    else
      v4 = (uint64_t *)(a1 + 2);
    v5 = *v4;
    if (a2[1])
      v6 = (_QWORD *)(google::protobuf::RepeatedField<double>::elements((uint64_t)a2) - 8);
    else
      v6 = a2 + 2;
    if (v5 == *v6)
    {
      google::protobuf::RepeatedField<double>::InternalSwap((uint64_t)a1, (uint64_t)a2);
    }
    else
    {
      if (a2[1])
        v7 = (uint64_t *)(google::protobuf::RepeatedField<double>::elements((uint64_t)a2) - 8);
      else
        v7 = (uint64_t *)(a2 + 2);
      v8 = *v7;
      v9[0] = 0;
      v9[1] = v8;
      google::protobuf::RepeatedField<double>::MergeFrom((int *)v9, a1);
      *a1 = 0;
      google::protobuf::RepeatedField<double>::MergeFrom(a1, a2);
      if (v9 != (_QWORD *)a2)
        google::protobuf::RepeatedField<double>::InternalSwap((uint64_t)a2, (uint64_t)v9);
      google::protobuf::RepeatedField<double>::~RepeatedField((uint64_t)v9);
    }
  }
}

void sub_1BF834FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  google::protobuf::RepeatedField<double>::~RepeatedField((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double google::protobuf::RepeatedField<double>::SwapElements(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  double result;

  v6 = google::protobuf::RepeatedField<double>::elements(a1);
  v7 = google::protobuf::RepeatedField<double>::elements(a1);
  result = *(double *)(v6 + 8 * a2);
  *(_QWORD *)(v6 + 8 * a2) = *(_QWORD *)(v7 + 8 * a3);
  *(double *)(v7 + 8 * a3) = result;
  return result;
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::CloseGap(uint64_t this, int a2, int a3)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(int **)(this + 16);
  if (v3)
  {
    LODWORD(v4) = a3 + a2;
    LODWORD(v5) = *v3;
    if (a3 + a2 < *v3)
    {
      v4 = (int)v4;
      do
      {
        *(_QWORD *)((char *)&v3[2 * v4] + 8 - 8 * a3) = *(_QWORD *)&v3[2 * v4 + 2];
        ++v4;
        v3 = *(int **)(this + 16);
        v5 = *v3;
      }
      while (v4 < v5);
    }
    *(_DWORD *)(this + 8) -= a3;
    *v3 = v5 - a3;
  }
  return this;
}

void google::protobuf::internal::GetTypeUrl(const char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, std::string *a5@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[6];
  const char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v10 = a3;
  v11 = a4;
  if (a4)
  {
    v8 = google::protobuf::StringPiece::operator[](&v10, a4 - 1);
    a3 = v10;
    v9 = v11;
    if (v8 == 47)
    {
      v15 = v10;
      v16 = v11;
      v13 = a1;
      v14 = a2;
      google::protobuf::StrCat((uint64_t)&v15, (uint64_t)&v13, a5);
      return;
    }
  }
  else
  {
    v9 = 0;
  }
  v15 = a3;
  v16 = v9;
  v13 = "/";
  v14 = 1;
  v12[0] = a1;
  v12[1] = a2;
  google::protobuf::StrCat((uint64_t)&v15, (uint64_t)&v13, (uint64_t)v12, a5);
}

uint64_t google::protobuf::internal::ParseAnyTypeUrl(std::string *__str, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  std::string *v7;
  std::string::size_type size;
  std::string::size_type v9;
  uint64_t v10;
  int v11;
  std::string::size_type v12;
  std::string v14;
  char v15;

  v6 = 0;
  v7 = (std::string *)__str->__r_.__value_.__r.__words[0];
  size = __str->__r_.__value_.__l.__size_;
  if ((__str->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
  {
    v7 = __str;
    size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  v9 = ~size;
  v10 = (uint64_t)v7 + size - 1;
  do
  {
    if (v9 == -1)
      return 0;
    v11 = *(unsigned __int8 *)(v10 + v6);
    ++v9;
    --v6;
  }
  while (v11 != 47);
  if (!v9 || v6 == -1)
    return 0;
  v12 = -(uint64_t)v9;
  if (a2)
  {
    std::string::basic_string(&v14, __str, 0, -(uint64_t)v9, (std::allocator<char> *)&v15);
    if (*(char *)(a2 + 23) < 0)
      operator delete(*(void **)a2);
    *(std::string *)a2 = v14;
  }
  std::string::basic_string(&v14, __str, v12, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v15);
  if (*(char *)(a3 + 23) < 0)
    operator delete(*(void **)a3);
  *(std::string *)a3 = v14;
  return 1;
}

double google::protobuf::io::NoLocaleStrtod(google::protobuf::io *this, char *a2, char **a3)
{
  double v5;
  char *v6;
  int v7;
  std::string *v8;
  std::string *v9;
  std::string *v10;
  size_t v11;
  const std::string::value_type *v12;
  std::string *v13;
  char v14;
  int v15;
  int v16;
  std::string v18;
  char *v19;
  char v20;
  std::string v21[2];
  char v22;
  std::string::value_type v23[15];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v19 = 0;
  v5 = strtod((const char *)this, &v19);
  v6 = v19;
  if (a2)
    *(_QWORD *)a2 = v19;
  if (*v6 == 46)
  {
    v7 = sprintf(&v22, "%.1f", 1.5);
    if (v22 != 49)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/strtod.cc", 67);
      v8 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (temp[0]) == ('1'): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v8->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    if (v23[v7 - 2] != 53)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/strtod.cc", 68);
      v9 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (temp[size - 1]) == ('5'): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    if (v7 >= 7)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/strtod.cc", 69);
      v10 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (size) <= (6): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    memset(&v18, 0, sizeof(v18));
    v11 = strlen((const char *)this);
    std::string::reserve(&v18, v11 + v7 - 3);
    std::string::append[abi:ne180100]<char const*,0>(&v18, (char *)this, v6);
    std::string::append(&v18, v23, v7 - 2);
    v12 = v6 + 1;
    v13 = &v18;
    std::string::append(&v18, v12);
    if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v13 = (std::string *)v18.__r_.__value_.__r.__words[0];
    v21[0].__r_.__value_.__r.__words[0] = 0;
    v5 = strtod((const char *)v13, &v21[0].__r_.__value_.__l.__data_);
    v14 = HIBYTE(v18.__r_.__value_.__r.__words[2]);
    if (a2 && (int64_t)(v21[0].__r_.__value_.__r.__words[0] - (_QWORD)v13) > v19 - (char *)this)
    {
      v15 = strlen((const char *)this);
      if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v16 = HIBYTE(v18.__r_.__value_.__r.__words[2]);
      else
        v16 = v18.__r_.__value_.__r.__words[1];
      *(_QWORD *)a2 = (char *)this + v21[0].__r_.__value_.__r.__words[0] - ((_QWORD)v13 + v16 - v15);
    }
    if (v14 < 0)
      operator delete(v18.__r_.__value_.__l.__data_);
  }
  return v5;
}

void sub_1BF8354D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19)
{
  google::protobuf::internal::LogMessage::~LogMessage(&a19);
  _Unwind_Resume(a1);
}

float google::protobuf::io::SafeDoubleToFloat(google::protobuf::io *this, double a2)
{
  if (a2 <= 3.40282347e38)
  {
    if (a2 >= -3.40282347e38)
      return a2;
    if (a2 >= -3.40282357e38)
      return -3.4028e38;
    else
      return -INFINITY;
  }
  else if (a2 <= 3.40282357e38)
  {
    return 3.4028e38;
  }
  else
  {
    return INFINITY;
  }
}

std::string *std::string::append[abi:ne180100]<char const*,0>(std::string *this, char *a2, char *a3)
{
  char *v4;
  unint64_t v6;
  unint64_t v7;
  std::string::size_type size;
  std::string::size_type v9;
  std::string *v10;
  unint64_t v11;
  void **v12;
  std::string::size_type v13;
  std::string *v14;
  _BYTE *i;
  char v16;
  std::string::size_type v17;
  void *__p[2];
  unsigned __int8 v20;

  v4 = a2;
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  v7 = a3 - a2;
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == a2)
      return this;
    size = this->__r_.__value_.__l.__size_;
    v11 = this->__r_.__value_.__r.__words[2];
    v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    v6 = HIBYTE(v11);
  }
  else
  {
    if (a3 == a2)
      return this;
    size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    v9 = 22;
    v10 = this;
  }
  if (v10 > (std::string *)v4 || (char *)&v10->__r_.__value_.__l.__data_ + size + 1 <= v4)
  {
    if (v9 - size < v7)
    {
      std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0, 0);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v6) = *((_BYTE *)&this->__r_.__value_.__s + 23);
    }
    v14 = this;
    if ((v6 & 0x80) != 0)
      v14 = (std::string *)this->__r_.__value_.__r.__words[0];
    for (i = (char *)v14 + size; v4 != a3; ++i)
    {
      v16 = *v4++;
      *i = v16;
    }
    *i = 0;
    v17 = v7 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
      this->__r_.__value_.__l.__size_ = v17;
    else
      *((_BYTE *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
  }
  else
  {
    std::string::__init_with_size[abi:ne180100]<char *,char *>(__p, v4, a3, v7);
    if ((v20 & 0x80u) == 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    if ((v20 & 0x80u) == 0)
      v13 = v20;
    else
      v13 = (std::string::size_type)__p[1];
    std::string::append(this, (const std::string::value_type *)v12, v13);
    if ((char)v20 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_1BF8356E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::GeneratedExtensionFinder::Find(uint64_t a1, int a2, _OWORD *a3)
{
  int8x8_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  unint64_t v9;
  uint64_t **v10;
  uint64_t *i;
  unint64_t v12;
  __int128 v14;

  {
    if (v3)
    {
      v4 = *(_QWORD *)(a1 + 8);
      v5 = 0x9DDFEA08EB382D69 * (((8 * v4) + 8) ^ HIDWORD(v4));
      v6 = 0x9DDFEA08EB382D69 * (HIDWORD(v4) ^ (v5 >> 47) ^ v5);
      v7 = (0x9DDFEA08EB382D69 * (v6 ^ (v6 >> 47))) ^ a2;
      v8 = (uint8x8_t)vcnt_s8(v3);
      v8.i16[0] = vaddlv_u8(v8);
      if (v8.u32[0] > 1uLL)
      {
        v9 = v7;
        if (v7 >= *(_QWORD *)&v3)
          v9 = v7 % *(_QWORD *)&v3;
      }
      else
      {
        v9 = (*(_QWORD *)&v3 - 1) & v7;
      }
      if (v10)
      {
        for (i = *v10; i; i = (uint64_t *)*i)
        {
          v12 = i[1];
          if (v7 == v12)
          {
            if (i[2] == v4 && *((_DWORD *)i + 6) == a2)
            {
              v14 = *((_OWORD *)i + 3);
              *a3 = *((_OWORD *)i + 2);
              a3[1] = v14;
              return 1;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v12 >= *(_QWORD *)&v3)
                v12 %= *(_QWORD *)&v3;
            }
            else
            {
              v12 &= *(_QWORD *)&v3 - 1;
            }
            if (v12 != v9)
              return 0;
          }
        }
      }
    }
  }
  return 0;
}

uint64_t google::protobuf::internal::ExtensionSet::ExtensionSet(uint64_t result, uint64_t a2)
{
  *(_QWORD *)result = a2;
  *(_DWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  return result;
}

_DWORD *google::protobuf::internal::ExtensionSet::Has(int **this, int a2)
{
  _DWORD *result;
  _DWORD *v3;
  std::string *v4;
  char v5;
  std::string v6[2];

  result = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (result)
  {
    v3 = result;
    if (*((_BYTE *)result + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 239);
      v4 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: !ext->is_repeated: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    }
    return (_DWORD *)((*((_BYTE *)v3 + 10) & 1) == 0);
  }
  return result;
}

void sub_1BF8358A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_DWORD *google::protobuf::internal::ExtensionSet::FindOrNull(int **this, int a2)
{
  unint64_t v2;
  int *v3;
  int *v4;
  unint64_t v5;
  int *v6;
  int *v7;
  int v8;
  _DWORD *v9;
  int v10;

  if (*((unsigned __int16 *)this + 4) >= 0x101u)
    return (_DWORD *)google::protobuf::internal::ExtensionSet::FindOrNullInLargeMap((google::protobuf::internal::ExtensionSet *)this, a2);
  v2 = *((unsigned __int16 *)this + 5);
  if (!*((_WORD *)this + 5))
    return 0;
  v3 = this[2];
  v4 = &v3[8 * v2];
  do
  {
    v5 = v2 >> 1;
    v6 = &v3[8 * (v2 >> 1)];
    v8 = *v6;
    v7 = v6 + 8;
    v2 += ~(v2 >> 1);
    if (v8 < a2)
      v3 = v7;
    else
      v2 = v5;
  }
  while (v2);
  if (v3 == v4)
    return 0;
  v10 = *v3;
  v9 = v3 + 2;
  if (v10 == a2)
    return v9;
  else
    return 0;
}

{
  unint64_t v2;
  int *v3;
  int *v4;
  unint64_t v5;
  int *v6;
  int *v7;
  int v8;
  _DWORD *v9;
  int v10;

  if (*((unsigned __int16 *)this + 4) >= 0x101u)
    return (_DWORD *)google::protobuf::internal::ExtensionSet::FindOrNullInLargeMap((google::protobuf::internal::ExtensionSet *)this, a2);
  v2 = *((unsigned __int16 *)this + 5);
  if (!*((_WORD *)this + 5))
    return 0;
  v3 = this[2];
  v4 = &v3[8 * v2];
  do
  {
    v5 = v2 >> 1;
    v6 = &v3[8 * (v2 >> 1)];
    v8 = *v6;
    v7 = v6 + 8;
    v2 += ~(v2 >> 1);
    if (v8 < a2)
      v3 = v7;
    else
      v2 = v5;
  }
  while (v2);
  if (v3 == v4)
    return 0;
  v10 = *v3;
  v9 = v3 + 2;
  if (v10 == a2)
    return v9;
  else
    return 0;
}

google::protobuf::internal::ExtensionSet::Extension *google::protobuf::internal::ExtensionSet::ExtensionSize(int **this, int a2)
{
  google::protobuf::internal::ExtensionSet::Extension *result;

  result = (google::protobuf::internal::ExtensionSet::Extension *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (result)
    return (google::protobuf::internal::ExtensionSet::Extension *)google::protobuf::internal::ExtensionSet::Extension::GetSize(result);
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::GetSize(google::protobuf::internal::ExtensionSet::Extension *this)
{
  std::string *v2;
  uint64_t v3;
  std::string *v4;
  uint64_t result;
  std::string *v6;
  char v7;
  std::string v8[2];

  if (!*((_BYTE *)this + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 1707);
    v2 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: is_repeated: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  v3 = *((unsigned __int8 *)this + 8);
  if ((v3 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  switch(v3)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      result = **(unsigned int **)this;
      break;
    case 9:
    case 10:
    case 11:
    case 12:
      result = *(unsigned int *)(*(_QWORD *)this + 8);
      break;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 1726);
      v6 = google::protobuf::internal::LogMessage::operator<<(v8, "Can't get here.");
      google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
      result = 0;
      break;
  }
  return result;
}

void sub_1BF835A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::ClearExtension(int **this, int a2)
{
  google::protobuf::internal::ExtensionSet::Extension *v2;

  v2 = (google::protobuf::internal::ExtensionSet::Extension *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v2)
    google::protobuf::internal::ExtensionSet::Extension::Clear(v2);
}

void google::protobuf::internal::ExtensionSet::Extension::Clear(google::protobuf::internal::ExtensionSet::Extension *this)
{
  uint64_t v2;
  std::string *v3;
  uint64_t v4;
  std::string *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  char v10;
  std::string v11[2];

  if (*((_BYTE *)this + 9))
  {
    v2 = *((unsigned __int8 *)this + 8);
    if ((v2 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v3 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v3->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    switch(v2)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
        **(_DWORD **)this = 0;
        break;
      case 9:
      case 12:
        google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(*(_QWORD *)this);
        break;
      case 10:
      case 11:
        google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<google::protobuf::Message>::TypeHandler>(*(_QWORD *)this);
        break;
      default:
        return;
    }
  }
  else if ((*((_BYTE *)this + 10) & 1) == 0)
  {
    v4 = *((unsigned __int8 *)this + 8);
    if ((v4 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v6 = google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v4];
    if (v6 == 10)
    {
      v8 = **(_QWORD **)this;
      if ((*((_BYTE *)this + 10) & 0x10) != 0)
        v9 = *(void (**)(void))(v8 + 112);
      else
        v9 = *(void (**)(void))(v8 + 56);
      v9();
    }
    else if (v6 == 9)
    {
      v7 = *(_QWORD *)this;
      if (*(char *)(*(_QWORD *)this + 23) < 0)
      {
        **(_BYTE **)v7 = 0;
        *(_QWORD *)(v7 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v7 = 0;
        *(_BYTE *)(v7 + 23) = 0;
      }
    }
    *((_BYTE *)this + 10) = *((_BYTE *)this + 10) & 0xF0 | 1;
  }
}

void sub_1BF835CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetInt32(int **this, int a2, uint64_t a3)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  char v11;
  std::string v12[2];

  v4 = (unsigned __int8 *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4)
  {
    v5 = v4;
    if ((v4[10] & 1) == 0)
    {
      if (v4[9])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
        v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      v7 = v5[8];
      if ((v7 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v7] != 1)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
        v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT32): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      return *(unsigned int *)v5;
    }
  }
  return a3;
}

void sub_1BF835E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::SetInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v8;
  uint64_t **v9;
  char v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  char v17;
  std::string v18[2];

  v8 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v9 = v8;
  v8[2] = (uint64_t *)a5;
  if (v10)
  {
    *((_BYTE *)v8 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 1)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
      v12 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT32): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v9 + 9) = 0;
  }
  else
  {
    if (*((_BYTE *)v8 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
      v13 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v14 = *((unsigned __int8 *)v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v15 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v14] != 1)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
      v16 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT32): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
  }
  *((_BYTE *)v9 + 10) &= 0xF0u;
  *(_DWORD *)v9 = a4;
}

void sub_1BF836004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::internal::ExtensionSet::MaybeNewExtension(google::protobuf::internal::ExtensionSet *this, int a2, const google::protobuf::FieldDescriptor *a3, uint64_t ***a4)
{
  uint64_t **v6;
  char v7;

  v6 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  *a4 = v6;
  v6[2] = (uint64_t *)a3;
  return v7 != 0;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedInt32(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT32): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)google::protobuf::RepeatedField<int>::Get(*(_DWORD **)v4, a3);
}

void sub_1BF8361E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  std::string *v14;
  std::string *v15;
  google::protobuf::internal::ArenaImpl *v16;
  uint64_t *AlignedAndAddCleanup;
  std::string *v18;
  uint64_t v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  std::string v27[2];

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v14 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 1)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
      v15 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT32): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v12 + 9) = 1;
    *((_BYTE *)v12 + 11) = a4;
    v16 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v16 + 14))
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>);
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = (uint64_t)v16;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = 0;
    }
    *v12 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v11 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
      v18 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v20 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v19] != 1)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
      v21 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT32): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v21->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 356);
      v22 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (extension->is_packed) == (packed): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
  }
  v23 = (int *)*v12;
  if (*v23 == v23[1])
    google::protobuf::RepeatedField<int>::Reserve(v23, *v23 + 1);
  result = google::protobuf::RepeatedField<int>::elements((uint64_t)v23);
  v25 = *v23;
  *v23 = v25 + 1;
  *(_DWORD *)(result + 4 * v25) = a5;
  return result;
}

void sub_1BF8364D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetInt64(int **this, int a2, uint64_t a3)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  char v11;
  std::string v12[2];

  v4 = (unsigned __int8 *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4)
  {
    v5 = v4;
    if ((v4[10] & 1) == 0)
    {
      if (v4[9])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
        v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      v7 = v5[8];
      if ((v7 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v7] != 2)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
        v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT64): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      return *(_QWORD *)v5;
    }
  }
  return a3;
}

void sub_1BF836634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::SetInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3, uint64_t *a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v8;
  uint64_t **v9;
  char v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  char v17;
  std::string v18[2];

  v8 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v9 = v8;
  v8[2] = (uint64_t *)a5;
  if (v10)
  {
    *((_BYTE *)v8 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 2)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
      v12 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT64): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v9 + 9) = 0;
  }
  else
  {
    if (*((_BYTE *)v8 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
      v13 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v14 = *((unsigned __int8 *)v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v15 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v14] != 2)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
      v16 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT64): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
  }
  *((_BYTE *)v9 + 10) &= 0xF0u;
  *v9 = a4;
}

void sub_1BF836838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedInt64(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT64): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)google::protobuf::RepeatedField<long long>::Get(*(_DWORD **)v4, a3);
}

void sub_1BF8369E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, uint64_t a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  std::string *v14;
  std::string *v15;
  google::protobuf::internal::ArenaImpl *v16;
  uint64_t *AlignedAndAddCleanup;
  std::string *v18;
  uint64_t v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  std::string v27[2];

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v14 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 2)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
      v15 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT64): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v12 + 9) = 1;
    *((_BYTE *)v12 + 11) = a4;
    v16 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v16 + 14))
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>);
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = (uint64_t)v16;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = 0;
    }
    *v12 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v11 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
      v18 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v20 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v19] != 2)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
      v21 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT64): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v21->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 357);
      v22 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (extension->is_packed) == (packed): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
  }
  v23 = (int *)*v12;
  if (*v23 == v23[1])
    google::protobuf::RepeatedField<long long>::Reserve(v23, *v23 + 1);
  result = google::protobuf::RepeatedField<long long>::elements((uint64_t)v23);
  v25 = *v23;
  *v23 = v25 + 1;
  *(_QWORD *)(result + 8 * v25) = a5;
  return result;
}

void sub_1BF836CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetUInt32(int **this, int a2, uint64_t a3)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  char v11;
  std::string v12[2];

  v4 = (unsigned __int8 *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4)
  {
    v5 = v4;
    if ((v4[10] & 1) == 0)
    {
      if (v4[9])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
        v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      v7 = v5[8];
      if ((v7 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v7] != 3)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
        v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT32): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      return *(unsigned int *)v5;
    }
  }
  return a3;
}

void sub_1BF836E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::SetUInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v8;
  uint64_t **v9;
  char v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  char v17;
  std::string v18[2];

  v8 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v9 = v8;
  v8[2] = (uint64_t *)a5;
  if (v10)
  {
    *((_BYTE *)v8 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 3)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
      v12 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT32): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v9 + 9) = 0;
  }
  else
  {
    if (*((_BYTE *)v8 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
      v13 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v14 = *((unsigned __int8 *)v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v15 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v14] != 3)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
      v16 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT32): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
  }
  *((_BYTE *)v9 + 10) &= 0xF0u;
  *(_DWORD *)v9 = a4;
}

void sub_1BF837038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedUInt32(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT32): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)google::protobuf::RepeatedField<unsigned int>::Get(*(_DWORD **)v4, a3);
}

void sub_1BF8371E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddUInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  std::string *v14;
  std::string *v15;
  google::protobuf::internal::ArenaImpl *v16;
  uint64_t *AlignedAndAddCleanup;
  std::string *v18;
  uint64_t v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  std::string v27[2];

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v14 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 3)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
      v15 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT32): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v12 + 9) = 1;
    *((_BYTE *)v12 + 11) = a4;
    v16 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v16 + 14))
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>);
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = (uint64_t)v16;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = 0;
    }
    *v12 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v11 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
      v18 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v20 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v19] != 3)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
      v21 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT32): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v21->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 358);
      v22 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (extension->is_packed) == (packed): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
  }
  v23 = (int *)*v12;
  if (*v23 == v23[1])
    google::protobuf::RepeatedField<unsigned int>::Reserve(v23, *v23 + 1);
  result = google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)v23);
  v25 = *v23;
  *v23 = v25 + 1;
  *(_DWORD *)(result + 4 * v25) = a5;
  return result;
}

void sub_1BF8374D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetUInt64(int **this, int a2, uint64_t a3)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  char v11;
  std::string v12[2];

  v4 = (unsigned __int8 *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4)
  {
    v5 = v4;
    if ((v4[10] & 1) == 0)
    {
      if (v4[9])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
        v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      v7 = v5[8];
      if ((v7 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v7] != 4)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
        v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT64): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      return *(_QWORD *)v5;
    }
  }
  return a3;
}

void sub_1BF837634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::SetUInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3, uint64_t *a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v8;
  uint64_t **v9;
  char v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  char v17;
  std::string v18[2];

  v8 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v9 = v8;
  v8[2] = (uint64_t *)a5;
  if (v10)
  {
    *((_BYTE *)v8 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
      v12 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT64): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v9 + 9) = 0;
  }
  else
  {
    if (*((_BYTE *)v8 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
      v13 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v14 = *((unsigned __int8 *)v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v15 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v14] != 4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
      v16 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT64): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
  }
  *((_BYTE *)v9 + 10) &= 0xF0u;
  *v9 = a4;
}

void sub_1BF837838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedUInt64(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT64): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)google::protobuf::RepeatedField<unsigned long long>::Get(*(_DWORD **)v4, a3);
}

void sub_1BF8379E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddUInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, uint64_t a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  std::string *v14;
  std::string *v15;
  google::protobuf::internal::ArenaImpl *v16;
  uint64_t *AlignedAndAddCleanup;
  std::string *v18;
  uint64_t v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  std::string v27[2];

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v14 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
      v15 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT64): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v12 + 9) = 1;
    *((_BYTE *)v12 + 11) = a4;
    v16 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v16 + 14))
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>);
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = (uint64_t)v16;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = 0;
    }
    *v12 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v11 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
      v18 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v20 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v19] != 4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
      v21 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT64): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v21->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 359);
      v22 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (extension->is_packed) == (packed): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
  }
  v23 = (int *)*v12;
  if (*v23 == v23[1])
    google::protobuf::RepeatedField<unsigned long long>::Reserve(v23, *v23 + 1);
  result = google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)v23);
  v25 = *v23;
  *v23 = v25 + 1;
  *(_QWORD *)(result + 8 * v25) = a5;
  return result;
}

void sub_1BF837CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

float google::protobuf::internal::ExtensionSet::GetFloat(int **this, int a2, float a3)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  char v11;
  std::string v12[2];

  v4 = (unsigned __int8 *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4)
  {
    v5 = v4;
    if ((v4[10] & 1) == 0)
    {
      if (v4[9])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
        v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      v7 = v5[8];
      if ((v7 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v7] != 6)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
        v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      return *(float *)v5;
    }
  }
  return a3;
}

void sub_1BF837E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::SetFloat(google::protobuf::internal::ExtensionSet *this, int a2, int a3, float a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v8;
  uint64_t **v9;
  char v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  char v17;
  std::string v18[2];

  v8 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v9 = v8;
  v8[2] = (uint64_t *)a5;
  if (v10)
  {
    *((_BYTE *)v8 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 6)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
      v12 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v9 + 9) = 0;
  }
  else
  {
    if (*((_BYTE *)v8 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
      v13 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v14 = *((unsigned __int8 *)v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v15 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v14] != 6)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
      v16 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
  }
  *((_BYTE *)v9 + 10) &= 0xF0u;
  *(float *)v9 = a4;
}

void sub_1BF838048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

float google::protobuf::internal::ExtensionSet::GetRepeatedFloat(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(float *)google::protobuf::RepeatedField<float>::Get(*(_DWORD **)v4, a3);
}

void sub_1BF8381F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddFloat(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, float a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  std::string *v14;
  std::string *v15;
  google::protobuf::internal::ArenaImpl *v16;
  uint64_t *AlignedAndAddCleanup;
  std::string *v18;
  uint64_t v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  std::string v27[2];

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v14 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 6)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
      v15 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v12 + 9) = 1;
    *((_BYTE *)v12 + 11) = a4;
    v16 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v16 + 14))
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>);
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = (uint64_t)v16;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = 0;
    }
    *v12 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v11 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
      v18 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v20 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v19] != 6)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
      v21 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_FLOAT): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v21->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 360);
      v22 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (extension->is_packed) == (packed): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
  }
  v23 = (int *)*v12;
  if (*v23 == v23[1])
    google::protobuf::RepeatedField<float>::Reserve(v23, *v23 + 1);
  result = google::protobuf::RepeatedField<float>::elements((uint64_t)v23);
  v25 = *v23;
  *v23 = v25 + 1;
  *(float *)(result + 4 * v25) = a5;
  return result;
}

void sub_1BF8384EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

double google::protobuf::internal::ExtensionSet::GetDouble(int **this, int a2, double a3)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  char v11;
  std::string v12[2];

  v4 = (unsigned __int8 *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4)
  {
    v5 = v4;
    if ((v4[10] & 1) == 0)
    {
      if (v4[9])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
        v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      v7 = v5[8];
      if ((v7 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v7] != 5)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
        v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      return *(double *)v5;
    }
  }
  return a3;
}

void sub_1BF838654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::SetDouble(google::protobuf::internal::ExtensionSet *this, int a2, int a3, double a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v8;
  uint64_t **v9;
  char v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  char v17;
  std::string v18[2];

  v8 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v9 = v8;
  v8[2] = (uint64_t *)a5;
  if (v10)
  {
    *((_BYTE *)v8 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
      v12 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v9 + 9) = 0;
  }
  else
  {
    if (*((_BYTE *)v8 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
      v13 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v14 = *((unsigned __int8 *)v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v15 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v14] != 5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
      v16 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
  }
  *((_BYTE *)v9 + 10) &= 0xF0u;
  *(double *)v9 = a4;
}

void sub_1BF838860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

double google::protobuf::internal::ExtensionSet::GetRepeatedDouble(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(double *)google::protobuf::RepeatedField<double>::Get(*(_DWORD **)v4, a3);
}

void sub_1BF838A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddDouble(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, double a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  std::string *v14;
  std::string *v15;
  google::protobuf::internal::ArenaImpl *v16;
  uint64_t *AlignedAndAddCleanup;
  std::string *v18;
  uint64_t v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  std::string v27[2];

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v14 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
      v15 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v12 + 9) = 1;
    *((_BYTE *)v12 + 11) = a4;
    v16 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v16 + 14))
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>);
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = (uint64_t)v16;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = 0;
    }
    *v12 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v11 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
      v18 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v20 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v19] != 5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
      v21 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_DOUBLE): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v21->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 361);
      v22 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (extension->is_packed) == (packed): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
  }
  v23 = (int *)*v12;
  if (*v23 == v23[1])
    google::protobuf::RepeatedField<double>::Reserve(v23, *v23 + 1);
  result = google::protobuf::RepeatedField<double>::elements((uint64_t)v23);
  v25 = *v23;
  *v23 = v25 + 1;
  *(double *)(result + 8 * v25) = a5;
  return result;
}

void sub_1BF838D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::internal::ExtensionSet::GetBool(int **this, int a2, uint64_t a3)
{
  _DWORD *v4;
  _BYTE *v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  char v11;
  std::string v12[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4)
  {
    v5 = v4;
    if ((*((_BYTE *)v4 + 10) & 1) == 0)
    {
      if (*((_BYTE *)v4 + 9))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
        v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      v7 = v5[8];
      if ((v7 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v7] != 7)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
        v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_BOOL): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      return *v5 != 0;
    }
  }
  return a3;
}

void sub_1BF838E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::SetBool(google::protobuf::internal::ExtensionSet *this, int a2, int a3, char a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v8;
  _BYTE *v9;
  char v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  char v17;
  std::string v18[2];

  v8 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v9 = v8;
  v8[2] = (uint64_t *)a5;
  if (v10)
  {
    *((_BYTE *)v8 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 7)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
      v12 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_BOOL): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v9[9] = 0;
  }
  else
  {
    if (*((_BYTE *)v8 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
      v13 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v14 = v9[8];
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v15 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v14] != 7)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
      v16 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_BOOL): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
  }
  v9[10] &= 0xF0u;
  *v9 = a4;
}

void sub_1BF839070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedBool(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_BOOL): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(unsigned __int8 *)google::protobuf::RepeatedField<BOOL>::Get(*(_DWORD **)v4, a3);
}

void sub_1BF839218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddBool(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, char a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  std::string *v14;
  std::string *v15;
  google::protobuf::internal::ArenaImpl *v16;
  uint64_t *AlignedAndAddCleanup;
  std::string *v18;
  uint64_t v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  std::string v27[2];

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v14 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 7)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
      v15 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_BOOL): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v12 + 9) = 1;
    *((_BYTE *)v12 + 11) = a4;
    v16 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v16 + 14))
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>);
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = (uint64_t)v16;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = 0;
    }
    *v12 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v11 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
      v18 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v20 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v19] != 7)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
      v21 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_BOOL): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v21->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 362);
      v22 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (extension->is_packed) == (packed): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
  }
  v23 = (int *)*v12;
  if (*v23 == v23[1])
    google::protobuf::RepeatedField<BOOL>::Reserve(v23, *v23 + 1);
  result = google::protobuf::RepeatedField<BOOL>::elements((uint64_t)v23);
  v25 = *v23;
  *v23 = v25 + 1;
  *(_BYTE *)(result + v25) = a5;
  return result;
}

void sub_1BF83950C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(google::protobuf::internal::ExtensionSet *this, int a2, int a3, char a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v9;
  uint64_t **v10;
  char v11;
  google::protobuf::internal::ArenaImpl *v12;
  void (*v13)(void *);
  uint64_t *AlignedAndAddCleanup;
  google::protobuf::internal::ArenaImpl *v15;
  void (*v16)(void *);

  v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v10 = v9;
  v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((_BYTE *)v9 + 9) = 1;
    *((_BYTE *)v9 + 8) = a3;
    *((_BYTE *)v9 + 11) = a4;
    switch(a3)
    {
      case 1:
        v12 = *(google::protobuf::internal::ArenaImpl **)this;
        if (!v12)
          goto LABEL_32;
        if (*((_QWORD *)v12 + 14))
        v13 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>;
        goto LABEL_31;
      case 2:
        v12 = *(google::protobuf::internal::ArenaImpl **)this;
        if (!v12)
          goto LABEL_32;
        if (*((_QWORD *)v12 + 14))
        v13 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>;
        goto LABEL_31;
      case 3:
      case 16:
      case 18:
        v12 = *(google::protobuf::internal::ArenaImpl **)this;
        if (!v12)
          goto LABEL_32;
        if (*((_QWORD *)v12 + 14))
        v13 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>;
        goto LABEL_31;
      case 4:
      case 6:
        v12 = *(google::protobuf::internal::ArenaImpl **)this;
        if (!v12)
          goto LABEL_32;
        if (*((_QWORD *)v12 + 14))
        v13 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>;
        goto LABEL_31;
      case 5:
      case 14:
      case 15:
      case 17:
        v12 = *(google::protobuf::internal::ArenaImpl **)this;
        if (!v12)
          goto LABEL_32;
        if (*((_QWORD *)v12 + 14))
        v13 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>;
        goto LABEL_31;
      case 7:
      case 13:
        v12 = *(google::protobuf::internal::ArenaImpl **)this;
        if (!v12)
          goto LABEL_32;
        if (*((_QWORD *)v12 + 14))
        v13 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>;
        goto LABEL_31;
      case 8:
        v12 = *(google::protobuf::internal::ArenaImpl **)this;
        if (v12)
        {
          if (*((_QWORD *)v12 + 14))
          v13 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>;
LABEL_31:
          AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v12, 0x10uLL, v13);
          *AlignedAndAddCleanup = 0;
          AlignedAndAddCleanup[1] = (uint64_t)v12;
        }
        else
        {
LABEL_32:
          AlignedAndAddCleanup = (uint64_t *)operator new();
          *AlignedAndAddCleanup = 0;
          AlignedAndAddCleanup[1] = 0;
        }
        goto LABEL_44;
      case 9:
      case 12:
        v15 = *(google::protobuf::internal::ArenaImpl **)this;
        if (!v15)
          goto LABEL_42;
        if (*((_QWORD *)v15 + 14))
        v16 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>;
        goto LABEL_41;
      case 10:
      case 11:
        v15 = *(google::protobuf::internal::ArenaImpl **)this;
        if (v15)
        {
          if (*((_QWORD *)v15 + 14))
          v16 = (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>;
LABEL_41:
          AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v15, 0x18uLL, v16);
          AlignedAndAddCleanup[2] = 0;
          *AlignedAndAddCleanup = (uint64_t)v15;
        }
        else
        {
LABEL_42:
          AlignedAndAddCleanup = (uint64_t *)operator new();
          AlignedAndAddCleanup[2] = 0;
          *AlignedAndAddCleanup = 0;
        }
        AlignedAndAddCleanup[1] = 0;
LABEL_44:
        *v10 = AlignedAndAddCleanup;
        break;
      default:
        return *v10;
    }
  }
  return *v10;
}

uint64_t google::protobuf::internal::ExtensionSet::GetEnum(int **this, int a2, uint64_t a3)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  char v11;
  std::string v12[2];

  v4 = (unsigned __int8 *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4)
  {
    v5 = v4;
    if ((v4[10] & 1) == 0)
    {
      if (v4[9])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 458);
        v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      v7 = v5[8];
      if ((v7 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v7] != 8)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 458);
        v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_ENUM): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      return *(unsigned int *)v5;
    }
  }
  return a3;
}

void sub_1BF83993C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::SetEnum(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v8;
  uint64_t **v9;
  char v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  uint64_t v14;
  std::string *v15;
  std::string *v16;
  char v17;
  std::string v18[2];

  v8 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v9 = v8;
  v8[2] = (uint64_t *)a5;
  if (v10)
  {
    *((_BYTE *)v8 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 8)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 468);
      v12 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_ENUM): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v9 + 9) = 0;
  }
  else
  {
    if (*((_BYTE *)v8 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 471);
      v13 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v14 = *((unsigned __int8 *)v9 + 8);
    if ((v14 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v15 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v14] != 8)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 471);
      v16 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_ENUM): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
  }
  *((_BYTE *)v9 + 10) &= 0xF0u;
  *(_DWORD *)v9 = a4;
}

void sub_1BF839B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedEnum(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 479);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 480);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 480);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_ENUM): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)google::protobuf::RepeatedField<int>::Get(*(_DWORD **)v4, a3);
}

void sub_1BF839CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddEnum(google::protobuf::internal::ExtensionSet *this, int a2, int a3, int a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  uint64_t **v11;
  uint64_t **v12;
  char v13;
  std::string *v14;
  std::string *v15;
  google::protobuf::internal::ArenaImpl *v16;
  uint64_t *AlignedAndAddCleanup;
  std::string *v18;
  uint64_t v19;
  std::string *v20;
  std::string *v21;
  std::string *v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  char v26;
  std::string v27[2];

  v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v12 = v11;
  v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((_BYTE *)v11 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v14 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 8)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 496);
      v15 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_ENUM): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v12 + 9) = 1;
    *((_BYTE *)v12 + 11) = a4;
    v16 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v16 + 14))
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v16, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>);
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = (uint64_t)v16;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      *AlignedAndAddCleanup = 0;
      AlignedAndAddCleanup[1] = 0;
    }
    *v12 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v11 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 502);
      v18 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    v19 = *((unsigned __int8 *)v12 + 8);
    if ((v19 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v20 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v19] != 8)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 502);
      v21 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_ENUM): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v21->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (*((unsigned __int8 *)v12 + 11) != a4)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 503);
      v22 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (extension->is_packed) == (packed): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
  }
  v23 = (int *)*v12;
  if (*v23 == v23[1])
    google::protobuf::RepeatedField<int>::Reserve(v23, *v23 + 1);
  result = google::protobuf::RepeatedField<int>::elements((uint64_t)v23);
  v25 = *v23;
  *v23 = v25 + 1;
  *(_DWORD *)(result + 4 * v25) = a5;
  return result;
}

void sub_1BF839FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetString(int **a1, int a2, uint64_t a3)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  std::string *v9;
  char v11;
  std::string v12[2];

  v4 = (unsigned __int8 *)google::protobuf::internal::ExtensionSet::FindOrNull(a1, a2);
  if (v4)
  {
    v5 = v4;
    if ((v4[10] & 1) == 0)
    {
      if (v4[9])
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 518);
        v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      v7 = v5[8];
      if ((v7 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v7] != 9)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 518);
        v9 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_STRING): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      }
      return *(_QWORD *)v5;
    }
  }
  return a3;
}

void sub_1BF83A13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::MutableString(google::protobuf::internal::ExtensionSet *this, int a2, int a3, const google::protobuf::FieldDescriptor *a4)
{
  uint64_t **v7;
  unsigned __int8 *v8;
  char v9;
  std::string *v10;
  std::string *v11;
  google::protobuf::internal::ArenaImpl *v12;
  _QWORD *AlignedAndAddCleanup;
  std::string *v14;
  uint64_t v15;
  std::string *v16;
  std::string *v17;
  char v19;
  std::string v20[2];

  v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v8 = (unsigned __int8 *)v7;
  v7[2] = (uint64_t *)a4;
  if (v9)
  {
    *((_BYTE *)v7 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v10 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 9)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 528);
      v11 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_STRING): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
    }
    v8[9] = 0;
    v12 = *(google::protobuf::internal::ArenaImpl **)this;
    if (v12)
    {
      if (*((_QWORD *)v12 + 14))
      AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v12, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
    }
    else
    {
      AlignedAndAddCleanup = (_QWORD *)operator new();
    }
    *AlignedAndAddCleanup = 0;
    AlignedAndAddCleanup[1] = 0;
    AlignedAndAddCleanup[2] = 0;
    *(_QWORD *)v8 = AlignedAndAddCleanup;
  }
  else
  {
    if (*((_BYTE *)v7 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 532);
      v14 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
    }
    v15 = v8[8];
    if ((v15 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v16 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v15] != 9)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 532);
      v17 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_STRING): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
    }
  }
  v8[10] &= 0xF0u;
  return *(_QWORD *)v8;
}

void sub_1BF83A3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedString(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 541);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 542);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 9)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 542);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_STRING): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(*(_QWORD *)v4, a3);
}

void sub_1BF83A548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::internal::ExtensionSet::AddString(google::protobuf::internal::ExtensionSet *this, int a2, int a3, const google::protobuf::FieldDescriptor *a4)
{
  uint64_t **v7;
  uint64_t **v8;
  char v9;
  std::string *v10;
  std::string *v11;
  google::protobuf::internal::ArenaImpl *v12;
  uint64_t *AlignedAndAddCleanup;
  std::string *v14;
  uint64_t v15;
  std::string *v16;
  std::string *v17;
  uint64_t *v18;
  int *v19;
  uint64_t v20;
  int v21;
  _QWORD *result;
  google::protobuf::internal::ArenaImpl *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  std::string v27[2];

  v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v8 = v7;
  v7[2] = (uint64_t *)a4;
  if (v9)
  {
    *((_BYTE *)v7 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v10 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 9)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 558);
      v11 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_STRING): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v8 + 9) = 1;
    *((_BYTE *)v8 + 11) = 0;
    v12 = *(google::protobuf::internal::ArenaImpl **)this;
    if (v12)
    {
      if (*((_QWORD *)v12 + 14))
      AlignedAndAddCleanup = (uint64_t *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v12, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>);
      AlignedAndAddCleanup[2] = 0;
      *AlignedAndAddCleanup = (uint64_t)v12;
    }
    else
    {
      AlignedAndAddCleanup = (uint64_t *)operator new();
      AlignedAndAddCleanup[2] = 0;
      *AlignedAndAddCleanup = 0;
    }
    AlignedAndAddCleanup[1] = 0;
    *v8 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v7 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 564);
      v14 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    v15 = *((unsigned __int8 *)v8 + 8);
    if ((v15 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v16 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v15] != 9)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 564);
      v17 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_STRING): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
    }
  }
  v18 = *v8;
  v19 = (int *)v18[2];
  if (!v19)
  {
    v21 = *((_DWORD *)v18 + 3);
LABEL_23:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v18, v21 + 1);
    v19 = (int *)v18[2];
    v21 = *v19;
    goto LABEL_24;
  }
  v20 = *((int *)v18 + 2);
  v21 = *v19;
  if ((int)v20 < *v19)
  {
    *((_DWORD *)v18 + 2) = v20 + 1;
    return *(_QWORD **)&v19[2 * v20 + 2];
  }
  if (v21 == *((_DWORD *)v18 + 3))
    goto LABEL_23;
LABEL_24:
  *v19 = v21 + 1;
  v23 = (google::protobuf::internal::ArenaImpl *)*v18;
  if (*v18)
  {
    if (*((_QWORD *)v23 + 14))
    result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v23, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
  }
  else
  {
    result = (_QWORD *)operator new();
  }
  *result = 0;
  result[1] = 0;
  result[2] = 0;
  v24 = v18[2];
  v25 = *((int *)v18 + 2);
  *((_DWORD *)v18 + 2) = v25 + 1;
  *(_QWORD *)(v24 + 8 * v25 + 8) = result;
  return result;
}

void sub_1BF83A894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableMessage(google::protobuf::internal::ExtensionSet *this, int a2, int a3, const google::protobuf::MessageLite *a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v9;
  uint64_t **v10;
  char v11;
  std::string *v12;
  std::string *v13;
  uint64_t *result;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  char v19;
  char v20;
  std::string v21[2];

  v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v10 = v9;
  v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((_BYTE *)v9 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v12 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 599);
      v13 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    *((_BYTE *)v10 + 9) = 0;
    *((_BYTE *)v10 + 10) &= 0xFu;
    result = (uint64_t *)(*(uint64_t (**)(const google::protobuf::MessageLite *, _QWORD))(*(_QWORD *)a4 + 32))(a4, *(_QWORD *)this);
    *v10 = result;
    *((_BYTE *)v10 + 10) &= 0xF0u;
  }
  else
  {
    if (*((_BYTE *)v9 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 606);
      v15 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v15->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    v16 = *((unsigned __int8 *)v10 + 8);
    if ((v16 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v17 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v16] != 10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 606);
      v18 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    v19 = *((_BYTE *)v10 + 10);
    *((_BYTE *)v10 + 10) = v19 & 0xF0;
    result = *v10;
    if ((v19 & 0x10) != 0)
      return (uint64_t *)(*(uint64_t (**)(uint64_t *, const google::protobuf::MessageLite *))(*result + 32))(result, a4);
  }
  return result;
}

void sub_1BF83AAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::UnsafeArenaSetAllocatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, int a3, const google::protobuf::FieldDescriptor *a4, google::protobuf::MessageLite *a5)
{
  uint64_t **v9;
  unsigned __int8 *v10;
  char v11;
  std::string *v12;
  std::string *v13;
  google::protobuf::internal::ExtensionSet::Extension *v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  std::string *v18;
  char v19;
  std::string v20[2];

  if (a5)
  {
    v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
    v10 = (unsigned __int8 *)v9;
    v9[2] = (uint64_t *)a4;
    if (v11)
    {
      *((_BYTE *)v9 + 8) = a3;
      if ((a3 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v12 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v12->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 10)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 676);
        v13 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v13->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
      }
      v10[9] = 0;
      v10[10] &= 0xFu;
    }
    else
    {
      if (*((_BYTE *)v9 + 9))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 681);
        v15 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (OPTIONAL_FIELD): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v15->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
      }
      v16 = v10[8];
      if ((v16 - 19) <= 0xFFFFFFED)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v17 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v17->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
      }
      if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v16] != 10)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 681);
        v18 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v18->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
      }
      if ((v10[10] & 0x10) != 0)
      {
        (*(void (**)(_QWORD, google::protobuf::MessageLite *))(**(_QWORD **)v10 + 48))(*(_QWORD *)v10, a5);
        goto LABEL_9;
      }
      if (!*(_QWORD *)this && *(_QWORD *)v10)
        (*(void (**)(_QWORD))(**(_QWORD **)v10 + 8))(*(_QWORD *)v10);
    }
    *(_QWORD *)v10 = a5;
LABEL_9:
    v10[10] &= 0xF0u;
    return;
  }
  v14 = (google::protobuf::internal::ExtensionSet::Extension *)google::protobuf::internal::ExtensionSet::FindOrNull((int **)this, a2);
  if (v14)
    google::protobuf::internal::ExtensionSet::Extension::Clear(v14);
}

void sub_1BF83AD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::internal::ExtensionSet::Erase(google::protobuf::internal::ExtensionSet *this, int a2)
{
  unsigned int v3;
  char *result;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  int *v9;
  char *v10;
  int v11;
  int v12;

  v12 = a2;
  v3 = *((unsigned __int16 *)this + 4);
  result = (char *)*((_QWORD *)this + 2);
  if (v3 >= 0x101)
    return (char *)std::__tree<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>>>::__erase_unique<int>((uint64_t)result, &v12);
  v5 = *((unsigned __int16 *)this + 5);
  if (*((_WORD *)this + 5))
  {
    v6 = &result[32 * v5];
    v7 = *((unsigned __int16 *)this + 5);
    do
    {
      v8 = v7 >> 1;
      v9 = (int *)&result[32 * (v7 >> 1)];
      v11 = *v9;
      v10 = (char *)(v9 + 8);
      v7 += ~(v7 >> 1);
      if (v11 < a2)
        result = v10;
      else
        v7 = v8;
    }
    while (v7);
    if (result != v6 && *(_DWORD *)result == a2)
    {
      if (v6 != result + 32)
      {
        result = (char *)memmove(result, result + 32, v6 - (result + 32));
        LOWORD(v5) = *((_WORD *)this + 5);
      }
      *((_WORD *)this + 5) = v5 - 1;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedMessage(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 752);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 753);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 10)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 753);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*(_QWORD *)v4, a3);
}

void sub_1BF83AFDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::MutableRepeatedMessage(int **this, int a2, int a3)
{
  _DWORD *v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  uint64_t v8;
  std::string *v9;
  std::string *v10;
  char v12;
  std::string v13[2];

  v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 759);
    v5 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: extension != NULL: ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (!*((_BYTE *)v4 + 9))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 760);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v8 = *((unsigned __int8 *)v4 + 8);
  if ((v8 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v8] != 10)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 760);
    v10 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*(_QWORD *)v4, a3);
}

void sub_1BF83B178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddMessage(google::protobuf::internal::ExtensionSet *this, int a2, int a3, const google::protobuf::MessageLite *a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t **v9;
  unsigned __int8 *v10;
  char v11;
  std::string *v12;
  std::string *v13;
  google::protobuf::internal::ArenaImpl *v14;
  _QWORD *AlignedAndAddCleanup;
  std::string *v16;
  uint64_t v17;
  std::string *v18;
  std::string *v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  std::string v26[2];

  v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  v10 = (unsigned __int8 *)v9;
  v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((_BYTE *)v9 + 8) = a3;
    if ((a3 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v12 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v25, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[a3] != 10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 770);
      v13 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v25, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
    }
    v10[9] = 1;
    v14 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v14 + 14))
      AlignedAndAddCleanup = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v14, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>);
      AlignedAndAddCleanup[2] = 0;
      *AlignedAndAddCleanup = v14;
    }
    else
    {
      AlignedAndAddCleanup = (_QWORD *)operator new();
      AlignedAndAddCleanup[2] = 0;
      *AlignedAndAddCleanup = 0;
    }
    AlignedAndAddCleanup[1] = 0;
    *(_QWORD *)v10 = AlignedAndAddCleanup;
  }
  else
  {
    if (!*((_BYTE *)v9 + 9))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 775);
      v16 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: ((*extension).is_repeated ? REPEATED_FIELD : OPTIONAL_FIELD) == (REPEATED_FIELD): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v25, (const char **)&v16->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
    }
    v17 = v10[8];
    if ((v17 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v18 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v25, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
    }
    if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v17] != 10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 775);
      v19 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v25, (const char **)&v19->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
    }
  }
  v20 = *(_QWORD *)v10;
  v21 = *(_DWORD **)(*(_QWORD *)v10 + 16);
  if (!v21
    || (v22 = *(int *)(v20 + 8), (int)v22 >= *v21)
    || (*(_DWORD *)(v20 + 8) = v22 + 1, (v23 = *(_QWORD *)&v21[2 * v22 + 2]) == 0))
  {
    v23 = (*(uint64_t (**)(const google::protobuf::MessageLite *, _QWORD))(*(_QWORD *)a4 + 32))(a4, *(_QWORD *)this);
    google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*(unsigned int **)v10, v23);
  }
  return v23;
}

void sub_1BF83B44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::Clear(google::protobuf::internal::ExtensionSet *this)
{
  _QWORD *v1;
  uint64_t v2;
  google::protobuf::internal::ExtensionSet::Extension *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;

  v1 = (_QWORD *)*((_QWORD *)this + 2);
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    v6 = (_QWORD *)*v1;
    v4 = v1 + 1;
    v5 = v6;
    if (v6 != v4)
    {
      do
      {
        google::protobuf::internal::ExtensionSet::Extension::Clear((google::protobuf::internal::ExtensionSet::Extension *)(v5 + 5));
        v7 = (_QWORD *)v5[1];
        if (v7)
        {
          do
          {
            v8 = v7;
            v7 = (_QWORD *)*v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            v8 = (_QWORD *)v5[2];
            v9 = *v8 == (_QWORD)v5;
            v5 = v8;
          }
          while (!v9);
        }
        v5 = v8;
      }
      while (v8 != v4);
    }
  }
  else if (*((_WORD *)this + 5))
  {
    v2 = 32 * *((unsigned __int16 *)this + 5);
    v3 = (google::protobuf::internal::ExtensionSet::Extension *)(v1 + 1);
    do
    {
      google::protobuf::internal::ExtensionSet::Extension::Clear(v3);
      v3 = (google::protobuf::internal::ExtensionSet::Extension *)((char *)v3 + 32);
      v2 -= 32;
    }
    while (v2);
  }
}

void google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet *this, const google::protobuf::internal::ExtensionSet *a2)
{
  unsigned int v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char *v13;
  unint64_t v14;
  int *v15;
  int *v16;
  const google::protobuf::internal::ExtensionSet::Extension *v17;
  int v18;

  if (*((unsigned __int16 *)this + 4) <= 0x100u)
  {
    v4 = *((unsigned __int16 *)a2 + 4);
    v5 = (char *)*((_QWORD *)this + 2);
    v6 = *((unsigned __int16 *)this + 5);
    v7 = &v5[32 * v6];
    v8 = *((_QWORD *)a2 + 2);
    if (v4 > 0x100)
    {
    }
    else
    {
      v9 = *((unsigned __int16 *)a2 + 5);
      v10 = v8 + 32 * v9;
      v12 = (_DWORD)v6 == 0;
      v11 = 0;
      v12 = v12 || (_DWORD)v9 == 0;
      if (!v12)
      {
        do
        {
          if (*(_DWORD *)v5 == *(_DWORD *)v8)
            v13 = v5 + 32;
          else
            v13 = v5;
          if (*(_DWORD *)v5 < *(_DWORD *)v8)
          {
            v5 += 32;
          }
          else
          {
            v8 += 32;
            v5 = v13;
          }
          ++v11;
        }
        while (v5 != v7 && v8 != v10);
      }
      v14 = v11 + ((v10 - v8) >> 5) + ((v7 - v5) >> 5);
    }
    google::protobuf::internal::ExtensionSet::GrowCapacity((unint64_t)this, v14);
  }
  v15 = (int *)*((_QWORD *)a2 + 2);
  if (*((unsigned __int16 *)a2 + 4) >= 0x101u)
  {
    google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet const&)::$_0>(*(_QWORD **)v15, (_QWORD *)v15 + 1, this);
  }
  else if (*((_WORD *)a2 + 5))
  {
    v16 = &v15[8 * *((unsigned __int16 *)a2 + 5)];
    do
    {
      v17 = (const google::protobuf::internal::ExtensionSet::Extension *)(v15 + 2);
      v18 = *v15;
      v15 += 8;
      google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(this, v18, v17);
    }
    while (v15 != v16);
  }
}

unint64_t google::protobuf::internal::ExtensionSet::GrowCapacity(unint64_t this, unint64_t a2)
{
  unint64_t v2;
  _QWORD *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  google::protobuf::internal::ArenaImpl *v8;

  v2 = *(unsigned __int16 *)(this + 8);
  if (v2 <= 0x100 && v2 < a2)
  {
    v4 = (_QWORD *)this;
    do
    {
      if ((_WORD)v2)
        LOWORD(v2) = 4 * v2;
      else
        LOWORD(v2) = 1;
    }
    while ((unsigned __int16)v2 < a2);
    *(_WORD *)(this + 8) = v2;
    if ((unsigned __int16)v2 >= 0x101u)
      google::protobuf::internal::ExtensionSet::GrowCapacity();
    v5 = *(const void **)(this + 16);
    v6 = *(unsigned __int16 *)(this + 10);
    v7 = 32 * (unsigned __int16)v2;
    v8 = *(google::protobuf::internal::ArenaImpl **)this;
    if (*(_QWORD *)this)
    {
      if (*((_QWORD *)v8 + 14))
      this = google::protobuf::internal::ArenaImpl::AllocateAligned(v8, v7);
    }
    else
    {
      this = (unint64_t)operator new[](32 * (unsigned __int16)v2);
    }
    v4[2] = this;
    if ((_DWORD)v6)
      this = (unint64_t)memmove((void *)this, v5, 32 * v6);
    if (!*v4)
    {
      if (v5)
        JUMPOUT(0x1C3B8D878);
    }
  }
  return this;
}

uint64_t google::protobuf::internal::`anonymous namespace'::SizeOfUnion<google::protobuf::internal::ExtensionSet::KeyValue *,std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>>(char *a1, char *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  int v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  BOOL v13;

  v4 = 0;
  if (a1 != a2 && a3 != a4)
  {
    v4 = 0;
    do
    {
      v5 = *((_DWORD *)a3 + 8);
      if (*(_DWORD *)a1 >= v5)
      {
        if (*(_DWORD *)a1 == v5)
        {
          a1 += 32;
          v6 = (_QWORD *)a3[1];
          if (v6)
          {
            do
            {
              a3 = v6;
              v6 = (_QWORD *)*v6;
            }
            while (v6);
          }
          else
          {
            do
            {
              v7 = a3;
              a3 = (_QWORD *)a3[2];
            }
            while ((_QWORD *)*a3 != v7);
          }
        }
        else
        {
          v8 = (_QWORD *)a3[1];
          if (v8)
          {
            do
            {
              a3 = v8;
              v8 = (_QWORD *)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              v9 = a3;
              a3 = (_QWORD *)a3[2];
            }
            while ((_QWORD *)*a3 != v9);
          }
        }
      }
      else
      {
        a1 += 32;
      }
      ++v4;
    }
    while (a1 != a2 && a3 != a4);
  }
  if (a3 == a4)
  {
    v10 = 0;
  }
  else
  {
    v10 = 0;
    do
    {
      v11 = (_QWORD *)a3[1];
      if (v11)
      {
        do
        {
          v12 = v11;
          v11 = (_QWORD *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          v12 = (_QWORD *)a3[2];
          v13 = *v12 == (_QWORD)a3;
          a3 = v12;
        }
        while (!v13);
      }
      ++v10;
      a3 = v12;
    }
    while (v12 != a4);
  }
  return v4 + ((a2 - a1) >> 5) + v10;
}

void google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(google::protobuf::internal::ExtensionSet *this, int a2, const google::protobuf::internal::ExtensionSet::Extension *a3)
{
  uint64_t *v6;
  uint64_t **v7;
  unsigned int **v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  std::string *v12;
  std::string *v13;
  std::string *v14;
  std::string *v15;
  uint64_t v16;
  std::string *v17;
  google::protobuf::internal::ArenaImpl *v18;
  uint64_t v19;
  google::protobuf::internal::ArenaImpl *v20;
  uint64_t v21;
  google::protobuf::internal::ArenaImpl *v22;
  uint64_t v23;
  google::protobuf::internal::ArenaImpl *v24;
  uint64_t v25;
  google::protobuf::internal::ArenaImpl *v26;
  uint64_t AlignedAndAddCleanup;
  google::protobuf::internal::ArenaImpl *v28;
  uint64_t v29;
  google::protobuf::internal::ArenaImpl *v30;
  uint64_t v31;
  google::protobuf::internal::ArenaImpl *v32;
  uint64_t v33;
  google::protobuf::internal::ArenaImpl *v34;
  unsigned int *v35;
  int v36;
  __int128 *v37;
  __int128 v38;
  uint64_t *v39;
  uint64_t **v40;
  uint64_t **v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int *v49;
  _DWORD *v50;
  uint64_t v51;
  uint64_t v52;
  std::string *v53;
  std::string *v54;
  std::string *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  std::string __p;
  char v62;
  std::string v63[2];

  if (*((_BYTE *)a3 + 9))
  {
    v6 = (uint64_t *)*((_QWORD *)a3 + 2);
    v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
    v8 = (unsigned int **)v7;
    v7[2] = v6;
    v10 = v9;
    if (v9)
    {
      *((_BYTE *)v7 + 8) = *((_BYTE *)a3 + 8);
      *((_BYTE *)v7 + 11) = *((_BYTE *)a3 + 11);
      *((_BYTE *)v7 + 9) = 1;
    }
    else
    {
      if (*((unsigned __int8 *)v7 + 8) != *((unsigned __int8 *)a3 + 8))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v63, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 939);
        v13 = google::protobuf::internal::LogMessage::operator<<(v63, "CHECK failed: (extension->type) == (other_extension.type): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v62, (const char **)&v13->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v63[0].__r_.__value_.__l.__data_);
      }
      if (*((unsigned __int8 *)v8 + 11) != *((unsigned __int8 *)a3 + 11))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v63, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 940);
        v14 = google::protobuf::internal::LogMessage::operator<<(v63, "CHECK failed: (extension->is_packed) == (other_extension.is_packed): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v62, (const char **)&v14->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v63[0].__r_.__value_.__l.__data_);
      }
      if (!*((_BYTE *)v8 + 9))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v63, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 941);
        v15 = google::protobuf::internal::LogMessage::operator<<(v63, "CHECK failed: extension->is_repeated: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v62, (const char **)&v15->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v63[0].__r_.__value_.__l.__data_);
      }
    }
    v16 = *((unsigned __int8 *)a3 + 8);
    if ((v16 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v63, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v17 = google::protobuf::internal::LogMessage::operator<<(v63, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v62, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v63[0].__r_.__value_.__l.__data_);
    }
    switch(v16)
    {
      case 1:
        if (v10)
        {
          v26 = *(google::protobuf::internal::ArenaImpl **)this;
          if (v26)
          {
            if (*((_QWORD *)v26 + 14))
            AlignedAndAddCleanup = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v26, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<double>>);
            *(_QWORD *)AlignedAndAddCleanup = 0;
            *(_QWORD *)(AlignedAndAddCleanup + 8) = v26;
          }
          else
          {
            AlignedAndAddCleanup = operator new();
            *(_QWORD *)AlignedAndAddCleanup = 0;
            *(_QWORD *)(AlignedAndAddCleanup + 8) = 0;
          }
          *v8 = (unsigned int *)AlignedAndAddCleanup;
        }
        else
        {
          AlignedAndAddCleanup = (uint64_t)*v8;
        }
        google::protobuf::RepeatedField<double>::MergeFrom((int *)AlignedAndAddCleanup, *(int **)a3);
        break;
      case 2:
        if (v10)
        {
          v28 = *(google::protobuf::internal::ArenaImpl **)this;
          if (v28)
          {
            if (*((_QWORD *)v28 + 14))
            v29 = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v28, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<float>>);
            *(_QWORD *)v29 = 0;
            *(_QWORD *)(v29 + 8) = v28;
          }
          else
          {
            v29 = operator new();
            *(_QWORD *)v29 = 0;
            *(_QWORD *)(v29 + 8) = 0;
          }
          *v8 = (unsigned int *)v29;
        }
        else
        {
          v29 = (uint64_t)*v8;
        }
        google::protobuf::RepeatedField<float>::MergeFrom((int *)v29, *(int **)a3);
        break;
      case 3:
      case 16:
      case 18:
        if (v10)
        {
          v20 = *(google::protobuf::internal::ArenaImpl **)this;
          if (v20)
          {
            if (*((_QWORD *)v20 + 14))
            v21 = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v20, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<long long>>);
            *(_QWORD *)v21 = 0;
            *(_QWORD *)(v21 + 8) = v20;
          }
          else
          {
            v21 = operator new();
            *(_QWORD *)v21 = 0;
            *(_QWORD *)(v21 + 8) = 0;
          }
          *v8 = (unsigned int *)v21;
        }
        else
        {
          v21 = (uint64_t)*v8;
        }
        google::protobuf::RepeatedField<long long>::MergeFrom((int *)v21, *(int **)a3);
        break;
      case 4:
      case 6:
        if (v10)
        {
          v24 = *(google::protobuf::internal::ArenaImpl **)this;
          if (v24)
          {
            if (*((_QWORD *)v24 + 14))
            v25 = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v24, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned long long>>);
            *(_QWORD *)v25 = 0;
            *(_QWORD *)(v25 + 8) = v24;
          }
          else
          {
            v25 = operator new();
            *(_QWORD *)v25 = 0;
            *(_QWORD *)(v25 + 8) = 0;
          }
          *v8 = (unsigned int *)v25;
        }
        else
        {
          v25 = (uint64_t)*v8;
        }
        google::protobuf::RepeatedField<unsigned long long>::MergeFrom((int *)v25, *(int **)a3);
        break;
      case 5:
      case 14:
      case 15:
      case 17:
        if (v10)
        {
          v18 = *(google::protobuf::internal::ArenaImpl **)this;
          if (v18)
          {
            if (*((_QWORD *)v18 + 14))
            v19 = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v18, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<int>>);
            *(_QWORD *)v19 = 0;
            *(_QWORD *)(v19 + 8) = v18;
          }
          else
          {
            v19 = operator new();
            *(_QWORD *)v19 = 0;
            *(_QWORD *)(v19 + 8) = 0;
          }
          *v8 = (unsigned int *)v19;
        }
        else
        {
          v19 = (uint64_t)*v8;
        }
        google::protobuf::RepeatedField<int>::MergeFrom((int *)v19, *(int **)a3);
        break;
      case 7:
      case 13:
        if (v10)
        {
          v22 = *(google::protobuf::internal::ArenaImpl **)this;
          if (v22)
          {
            if (*((_QWORD *)v22 + 14))
            v23 = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v22, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<unsigned int>>);
            *(_QWORD *)v23 = 0;
            *(_QWORD *)(v23 + 8) = v22;
          }
          else
          {
            v23 = operator new();
            *(_QWORD *)v23 = 0;
            *(_QWORD *)(v23 + 8) = 0;
          }
          *v8 = (unsigned int *)v23;
        }
        else
        {
          v23 = (uint64_t)*v8;
        }
        google::protobuf::RepeatedField<unsigned int>::MergeFrom((int *)v23, *(int **)a3);
        break;
      case 8:
        if (v10)
        {
          v30 = *(google::protobuf::internal::ArenaImpl **)this;
          if (v30)
          {
            if (*((_QWORD *)v30 + 14))
            v31 = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v30, 0x10uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedField<BOOL>>);
            *(_QWORD *)v31 = 0;
            *(_QWORD *)(v31 + 8) = v30;
          }
          else
          {
            v31 = operator new();
            *(_QWORD *)v31 = 0;
            *(_QWORD *)(v31 + 8) = 0;
          }
          *v8 = (unsigned int *)v31;
        }
        else
        {
          v31 = (uint64_t)*v8;
        }
        google::protobuf::RepeatedField<BOOL>::MergeFrom((int *)v31, *(int **)a3);
        break;
      case 9:
      case 12:
        if (v10)
        {
          v32 = *(google::protobuf::internal::ArenaImpl **)this;
          if (v32)
          {
            if (*((_QWORD *)v32 + 14))
            v33 = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v32, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<std::string>>);
            *(_QWORD *)(v33 + 16) = 0;
            *(_QWORD *)v33 = v32;
          }
          else
          {
            v33 = operator new();
            *(_QWORD *)(v33 + 16) = 0;
            *(_QWORD *)v33 = 0;
          }
          *(_QWORD *)(v33 + 8) = 0;
          *v8 = (unsigned int *)v33;
        }
        else
        {
          v33 = (uint64_t)*v8;
        }
        google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int **)v33, *(_QWORD *)a3);
        break;
      case 10:
      case 11:
        if (v10)
        {
          v34 = *(google::protobuf::internal::ArenaImpl **)this;
          if (*(_QWORD *)this)
          {
            if (*((_QWORD *)v34 + 14))
            v35 = (unsigned int *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v34, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>>);
            *((_QWORD *)v35 + 2) = 0;
            *(_QWORD *)v35 = v34;
          }
          else
          {
            v35 = (unsigned int *)operator new();
            *((_QWORD *)v35 + 2) = 0;
            *(_QWORD *)v35 = 0;
          }
          *((_QWORD *)v35 + 1) = 0;
          *v8 = v35;
        }
        v45 = *(_QWORD *)a3;
        if (*(int *)(v45 + 8) >= 1)
        {
          v46 = 0;
          do
          {
            v47 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(v45, v46);
            v48 = v47;
            v49 = *v8;
            v50 = (_DWORD *)*((_QWORD *)*v8 + 2);
            if (!v50
              || (v51 = (int)v49[2], (int)v51 >= *v50)
              || (v49[2] = v51 + 1, (v52 = *(_QWORD *)&v50[2 * v51 + 2]) == 0))
            {
              v52 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v47 + 32))(v47, *(_QWORD *)this);
              google::protobuf::internal::RepeatedPtrFieldBase::AddAllocatedInternal<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(*v8, v52);
            }
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v52 + 80))(v52, v48);
            ++v46;
          }
          while (v46 < *(_DWORD *)(v45 + 8));
        }
        break;
      default:
        return;
    }
    return;
  }
  if ((*((_BYTE *)a3 + 10) & 1) != 0)
    return;
  v11 = *((unsigned __int8 *)a3 + 8);
  if ((v11 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v63, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v12 = google::protobuf::internal::LogMessage::operator<<(v63, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v62, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v63[0].__r_.__value_.__l.__data_);
  }
  switch(v11)
  {
    case 1:
      google::protobuf::internal::ExtensionSet::SetDouble(this, a2, *((unsigned __int8 *)a3 + 8), *(double *)a3, *((const google::protobuf::FieldDescriptor **)a3 + 2));
      return;
    case 2:
      google::protobuf::internal::ExtensionSet::SetFloat(this, a2, *((unsigned __int8 *)a3 + 8), *(float *)a3, *((const google::protobuf::FieldDescriptor **)a3 + 2));
      return;
    case 3:
    case 16:
    case 18:
      google::protobuf::internal::ExtensionSet::SetInt64(this, a2, *((unsigned __int8 *)a3 + 8), *(uint64_t **)a3, *((const google::protobuf::FieldDescriptor **)a3 + 2));
      return;
    case 4:
    case 6:
      google::protobuf::internal::ExtensionSet::SetUInt64(this, a2, *((unsigned __int8 *)a3 + 8), *(uint64_t **)a3, *((const google::protobuf::FieldDescriptor **)a3 + 2));
      return;
    case 5:
    case 15:
    case 17:
      google::protobuf::internal::ExtensionSet::SetInt32(this, a2, *((unsigned __int8 *)a3 + 8), *(_DWORD *)a3, *((const google::protobuf::FieldDescriptor **)a3 + 2));
      return;
    case 7:
    case 13:
      google::protobuf::internal::ExtensionSet::SetUInt32(this, a2, *((unsigned __int8 *)a3 + 8), *(_DWORD *)a3, *((const google::protobuf::FieldDescriptor **)a3 + 2));
      return;
    case 8:
      google::protobuf::internal::ExtensionSet::SetBool(this, a2, *((unsigned __int8 *)a3 + 8), *(_BYTE *)a3, *((const google::protobuf::FieldDescriptor **)a3 + 2));
      return;
    case 9:
    case 12:
      v36 = *((unsigned __int8 *)a3 + 8);
      v37 = *(__int128 **)a3;
      if (*(char *)(*(_QWORD *)a3 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v37, *((_QWORD *)v37 + 1));
      }
      else
      {
        v38 = *v37;
        __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v37 + 2);
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v38;
      }
      google::protobuf::internal::ExtensionSet::SetString(this, a2, v36, (__n128 *)&__p, *((google::protobuf::FieldDescriptor **)a3 + 2));
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      return;
    case 10:
    case 11:
      v39 = (uint64_t *)*((_QWORD *)a3 + 2);
      v40 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
      v41 = v40;
      v40[2] = v39;
      if (v42)
      {
        *((_BYTE *)v40 + 8) = *((_BYTE *)a3 + 8);
        *((_BYTE *)v40 + 11) = *((_BYTE *)a3 + 11);
        *((_BYTE *)v40 + 9) = 0;
        v43 = *((_BYTE *)v40 + 10) & 0xF;
        if ((*((_BYTE *)a3 + 10) & 0x10) != 0)
        {
          *((_BYTE *)v40 + 10) = v43 | 0x10;
          v59 = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)a3 + 16))(*(_QWORD *)a3, *(_QWORD *)this);
          *v41 = (uint64_t *)v59;
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v59 + 104))(v59, *(_QWORD *)a3);
          goto LABEL_135;
        }
        *((_BYTE *)v40 + 10) = v43;
        v44 = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)a3 + 32))(*(_QWORD *)a3, *(_QWORD *)this);
        *v41 = (uint64_t *)v44;
        goto LABEL_133;
      }
      if (*((unsigned __int8 *)v40 + 8) != *((unsigned __int8 *)a3 + 8))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v63, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 1034);
        v53 = google::protobuf::internal::LogMessage::operator<<(v63, "CHECK failed: (extension->type) == (other_extension.type): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v62, (const char **)&v53->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v63[0].__r_.__value_.__l.__data_);
      }
      if (*((unsigned __int8 *)v41 + 11) != *((unsigned __int8 *)a3 + 11))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v63, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 1035);
        v54 = google::protobuf::internal::LogMessage::operator<<(v63, "CHECK failed: (extension->is_packed) == (other_extension.is_packed): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v62, (const char **)&v54->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v63[0].__r_.__value_.__l.__data_);
      }
      if (*((_BYTE *)v41 + 9))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v63, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 1036);
        v55 = google::protobuf::internal::LogMessage::operator<<(v63, "CHECK failed: !extension->is_repeated: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v62, (const char **)&v55->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v63[0].__r_.__value_.__l.__data_);
      }
      v56 = *v41;
      v57 = *(_QWORD *)a3;
      if ((*((_BYTE *)a3 + 10) & 0x10) == 0)
      {
        v58 = *v56;
        if ((*((_BYTE *)v41 + 10) & 0x10) == 0)
        {
          (*(void (**)(uint64_t *, uint64_t))(v58 + 80))(v56, v57);
          goto LABEL_135;
        }
        v44 = (*(uint64_t (**)(uint64_t *, uint64_t))(v58 + 32))(*v41, v57);
LABEL_133:
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v44 + 80))(v44, *(_QWORD *)a3);
        goto LABEL_135;
      }
      if ((*((_BYTE *)v41 + 10) & 0x10) != 0)
      {
        (*(void (**)(uint64_t *, uint64_t))(*v56 + 104))(v56, v57);
      }
      else
      {
        v60 = (*(uint64_t (**)(_QWORD, uint64_t *))(*(_QWORD *)v57 + 24))(*(_QWORD *)a3, *v41);
        (*(void (**)(uint64_t *, uint64_t))(*v56 + 80))(v56, v60);
      }
LABEL_135:
      *((_BYTE *)v41 + 10) &= 0xF0u;
      return;
    case 14:
      google::protobuf::internal::ExtensionSet::SetEnum(this, a2, *((unsigned __int8 *)a3 + 8), *(_DWORD *)a3, *((const google::protobuf::FieldDescriptor **)a3 + 2));
      return;
    default:
      return;
  }
}

void sub_1BF83C2CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16)
{
  google::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

__n128 google::protobuf::internal::ExtensionSet::SetString(google::protobuf::internal::ExtensionSet *a1, int a2, int a3, __n128 *a4, google::protobuf::FieldDescriptor *a5)
{
  uint64_t v6;
  __n128 *v7;
  __n128 result;

  v6 = google::protobuf::internal::ExtensionSet::MutableString(a1, a2, a3, a5);
  v7 = (__n128 *)v6;
  if (*(char *)(v6 + 23) < 0)
    operator delete(*(void **)v6);
  result = *a4;
  v7[1].n128_u64[0] = a4[1].n128_u64[0];
  *v7 = result;
  a4[1].n128_u8[7] = 0;
  a4->n128_u8[0] = 0;
  return result;
}

void google::protobuf::internal::ExtensionSet::Swap(google::protobuf::internal::ExtensionSet *this, google::protobuf::internal::ExtensionSet *a2)
{
  __int16 v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  if (*(_QWORD *)this == *(_QWORD *)a2)
  {
    v4 = *((_WORD *)this + 4);
    *((_WORD *)this + 4) = *((_WORD *)a2 + 4);
    *((_WORD *)a2 + 4) = v4;
    v5 = *((_WORD *)this + 5);
    *((_WORD *)this + 5) = *((_WORD *)a2 + 5);
    *((_WORD *)a2 + 5) = v5;
    v6 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v6;
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v9 = 0;
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&v7, a2);
    google::protobuf::internal::ExtensionSet::Clear(a2);
    google::protobuf::internal::ExtensionSet::MergeFrom(a2, this);
    google::protobuf::internal::ExtensionSet::Clear(this);
    google::protobuf::internal::ExtensionSet::MergeFrom(this, (const google::protobuf::internal::ExtensionSet *)&v7);
    google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::internal::ExtensionSet *)&v7);
  }
}

void sub_1BF83C438(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::internal::ExtensionSet *)va);
  _Unwind_Resume(a1);
}

uint64_t **google::protobuf::internal::ExtensionSet::Insert(google::protobuf::internal::ExtensionSet *this, int a2)
{
  unsigned int v3;
  uint64_t **v4;
  uint64_t v6;
  uint64_t **v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t **v10;
  uint64_t **v11;
  int v12;
  uint64_t **result;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *((unsigned __int16 *)this + 4);
  v4 = (uint64_t **)*((_QWORD *)this + 2);
  if (v3 >= 0x101)
  {
    *((_QWORD *)&v14 + 1) = 0;
    v15 = 0;
    v16 = 0;
    LODWORD(v14) = a2;
    return std::__tree<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int const,google::protobuf::internal::ExtensionSet::Extension>>(v4, (int *)&v14, &v14)+ 5;
  }
  v6 = *((unsigned __int16 *)this + 5);
  v7 = &v4[4 * v6];
  if (!*((_WORD *)this + 5))
  {
    if (!*((_WORD *)this + 4))
      goto LABEL_18;
    LOWORD(v6) = 0;
LABEL_17:
    *((_WORD *)this + 5) = v6 + 1;
    *(_DWORD *)v7 = a2;
    v7[1] = 0;
    result = v7 + 1;
    v7[2] = 0;
    v7[3] = 0;
    return result;
  }
  v8 = *((unsigned __int16 *)this + 5);
  do
  {
    v9 = v8 >> 1;
    v10 = &v4[4 * (v8 >> 1)];
    v12 = *(_DWORD *)v10;
    v11 = v10 + 4;
    v8 += ~(v8 >> 1);
    if (v12 < a2)
      v4 = v11;
    else
      v8 = v9;
  }
  while (v8);
  if (v4 != v7)
  {
    if (*(_DWORD *)v4 == a2)
      return v4 + 1;
    if (v6 < v3)
    {
      memmove(v4 + 4, v4, (char *)v7 - (char *)v4);
      LOWORD(v6) = *((_WORD *)this + 5);
      v7 = v4;
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (v6 < v3)
    goto LABEL_17;
LABEL_18:
  google::protobuf::internal::ExtensionSet::GrowCapacity((unint64_t)this, v6 + 1);
  return (uint64_t **)google::protobuf::internal::ExtensionSet::Insert(this, a2);
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::IsInitialized(google::protobuf::internal::ExtensionSet::Extension *this)
{
  uint64_t v2;
  std::string *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  std::string v10[2];

  v2 = *((unsigned __int8 *)this + 8);
  if ((v2 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v3 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v3->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v2] != 10)
    return 1;
  if (*((_BYTE *)this + 9))
  {
    v4 = *(_QWORD *)this;
    if (*(int *)(*(_QWORD *)this + 8) >= 1)
    {
      v5 = 0;
      while (1)
      {
        v6 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(v4, v5);
        if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 64))(v6) & 1) == 0)
          break;
        ++v5;
        v4 = *(_QWORD *)this;
        if (v5 >= *(_DWORD *)(*(_QWORD *)this + 8))
          return 1;
      }
      return 0;
    }
    return 1;
  }
  if ((*((_BYTE *)this + 10) & 1) != 0)
    return 1;
  v7 = **(_QWORD **)this;
  if ((*((_BYTE *)this + 10) & 0x10) != 0)
    return ((*(uint64_t (**)(void))(v7 + 72))() & 1) != 0;
  result = (*(uint64_t (**)(void))(v7 + 64))();
  if ((_DWORD)result)
    return 1;
  return result;
}

void sub_1BF83C6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::FindExtensionInfoFromFieldNumber(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, _BYTE *a6)
{
  uint64_t result;
  uint64_t v10;
  std::string *v11;
  unsigned int v12;
  std::string *v13;
  char v14;
  std::string v15[2];

  result = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *))(*(_QWORD *)a4 + 16))(a4, a3, a5);
  if ((_DWORD)result)
  {
    v10 = *a5;
    if ((v10 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    v12 = google::protobuf::internal::WireFormatLite::kWireTypeForFieldType[v10];
    *a6 = 0;
    if (a2 == 2 && a5[1])
    {
      if (v12 > 5)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 82);
        v13 = google::protobuf::internal::LogMessage::operator<<(v15, "can't reach here.");
        google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v13->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
      }
      else
      {
        result = 1;
        if (((1 << v12) & 0x1C) == 0)
        {
          *a6 = 1;
          return result;
        }
      }
    }
    return v12 == a2;
  }
  return result;
}

void sub_1BF83C7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::InternalSerializeWithCachedSizesToArray(google::protobuf::internal::ExtensionSet *this, signed int a2, int a3, unsigned __int8 *a4, google::protobuf::io::EpsCopyOutputStream *a5)
{
  unsigned int *v7;
  unint64_t v8;
  unsigned int *v9;
  unint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  signed int v13;
  uint64_t v14;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  int **v19;
  int v20;
  BOOL v21;
  uint64_t *v22;
  uint64_t v23;
  unsigned int *v24;
  unsigned int *v25;
  BOOL v26;

  v7 = (unsigned int *)*((_QWORD *)this + 2);
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    v18 = *((_QWORD *)v7 + 1);
    v17 = v7 + 2;
    v16 = v18;
    if (v18)
    {
      v19 = (int **)v17;
      do
      {
        v20 = *(_DWORD *)(v16 + 32);
        v21 = v20 < a2;
        if (v20 >= a2)
          v22 = (uint64_t *)v16;
        else
          v22 = (uint64_t *)(v16 + 8);
        if (!v21)
          v19 = (int **)v16;
        v16 = *v22;
      }
      while (*v22);
      if (v19 != (int **)v17)
      {
        do
        {
          v23 = *((unsigned int *)v19 + 8);
          if ((int)v23 >= a3)
            break;
          a4 = google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray(v19 + 5, v23, (char *)a4, a5);
          v24 = (unsigned int *)v19[1];
          if (v24)
          {
            do
            {
              v25 = v24;
              v24 = *(unsigned int **)v24;
            }
            while (v24);
          }
          else
          {
            do
            {
              v25 = (unsigned int *)v19[2];
              v26 = *(_QWORD *)v25 == (_QWORD)v19;
              v19 = (int **)v25;
            }
            while (!v26);
          }
          v19 = (int **)v25;
        }
        while (v25 != v17);
      }
    }
  }
  else
  {
    v8 = *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      v9 = &v7[8 * v8];
      do
      {
        v10 = v8 >> 1;
        v11 = &v7[8 * (v8 >> 1)];
        v13 = *v11;
        v12 = v11 + 8;
        v8 += ~(v8 >> 1);
        if (v13 < a2)
          v7 = v12;
        else
          v8 = v10;
      }
      while (v8);
      while (v7 != v9)
      {
        v14 = *v7;
        if ((int)v14 >= a3)
          break;
        a4 = google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray((int **)v7 + 1, v14, (char *)a4, a5);
        v7 += 8;
      }
    }
  }
  return a4;
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray(int **this, uint64_t a2, char *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  char *v5;
  unsigned int v8;
  _BYTE *v9;
  int v10;
  std::string *v11;
  int *v12;
  unsigned int v13;
  unsigned int v14;
  int **v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  std::string *v19;
  int *v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  char v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  _QWORD *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  std::string *v40;
  std::string *v41;
  int *v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int *v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int *v54;
  int v55;
  int *v56;
  int v57;
  int *v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int *v63;
  int v64;
  int *v65;
  int v66;
  int *v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int *v73;
  int v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  int *v79;
  int v80;
  int *v81;
  int v82;
  int *v83;
  int v84;
  int *v85;
  int v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  int *v91;
  int v92;
  int *v93;
  int v94;
  uint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  int *v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  char v105;
  int v106;
  _DWORD *v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int *v111;
  int v112;
  unsigned int v113;
  char v114;
  unsigned int v115;
  unint64_t v116;
  _BYTE *v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  int *v124;
  int v125;
  unsigned int v126;
  char v127;
  unsigned int v128;
  unint64_t v129;
  _BYTE *v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  int *v137;
  int v138;
  unsigned int v139;
  char v140;
  unsigned int v141;
  unint64_t v142;
  _BYTE *v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  int *v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  char v154;
  unsigned int v155;
  unsigned int v156;
  uint64_t v157;
  _QWORD *v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int *v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  unsigned int v166;
  char v167;
  int v168;
  _DWORD *v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int *v173;
  int v174;
  unsigned int v175;
  char v176;
  unsigned int v177;
  char v178;
  _BYTE *v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  uint64_t v183;
  int v184;
  unsigned int v185;
  uint64_t v186;
  unsigned int v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int64_t v191;
  _BYTE *v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  char *v196;
  const void *v197;
  uint64_t v198;
  int v199;
  unsigned int v200;
  char v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  char v205;
  uint64_t v206;
  char *v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  char *v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  uint64_t v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  _BYTE *v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  _BYTE *v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  uint64_t v232;
  int v233;
  unsigned int v234;
  uint64_t v235;
  unsigned int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  int64_t v240;
  _BYTE *v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  char *v245;
  const void *v246;
  int *v247;
  int v248;
  unsigned int v249;
  char v250;
  unsigned int v251;
  unsigned int v252;
  _BYTE *v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  int *v260;
  int v261;
  unsigned int v262;
  char v263;
  unsigned int v264;
  unint64_t v265;
  _BYTE *v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  unint64_t v270;
  unint64_t v271;
  unint64_t v272;
  int *v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  char v278;
  int v279;
  _DWORD *v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  int *v284;
  int v285;
  unsigned int v286;
  unsigned int v287;
  char v288;
  unsigned int v289;
  unsigned int v290;
  uint64_t v291;
  _QWORD *v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int *v296;
  int v297;
  unsigned int v298;
  char v299;
  unsigned int v300;
  int v301;
  _BYTE *v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  int *v310;
  int v311;
  unsigned int v312;
  char v313;
  unsigned int v314;
  uint64_t v315;
  _BYTE *v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unint64_t v320;
  unint64_t v321;
  unint64_t v322;
  unint64_t v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int *v327;
  unsigned int v328;
  unsigned int v329;
  unint64_t v330;
  unsigned int v331;
  char *v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  int *v339;
  int64_t v340;
  int *v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  char *v345;
  int *v346;
  unsigned int v347;
  _BYTE *v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  unsigned int v352;
  uint64_t v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  unsigned int v369;
  unsigned int v370;
  _BYTE *v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unint64_t v382;
  unint64_t v383;
  unint64_t v384;
  unsigned int v385;
  unsigned int v386;
  unint64_t v387;
  unsigned int v388;
  unsigned int v389;
  unint64_t v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  unsigned int v407;
  unsigned int v408;
  unint64_t v409;
  unint64_t v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unint64_t v414;
  unsigned int v415;
  unsigned int v416;
  unint64_t v417;
  unint64_t v418;
  unsigned int v419;
  char *v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  _BYTE *v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v429;
  unsigned int v430;
  char v431;
  std::string v432[2];

  v5 = a3;
  if (*((_BYTE *)this + 9))
  {
    if (*((_BYTE *)this + 11))
    {
      if (*((_DWORD *)this + 3))
      {
        if (*(_QWORD *)a4 <= (unint64_t)a3)
          v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        v8 = (8 * a2) | 2;
        if (v8 > 0x7F)
        {
          *v5 = (8 * a2) | 0x82;
          v32 = (8 * a2) >> 7;
          if (v8 >> 14)
          {
            v9 = v5 + 2;
            do
            {
              *(v9 - 1) = v32 | 0x80;
              v33 = v32 >> 7;
              ++v9;
              v34 = v32 >> 14;
              v32 >>= 7;
            }
            while (v34);
            *(v9 - 1) = v33;
          }
          else
          {
            v5[1] = v32;
            v9 = v5 + 2;
          }
        }
        else
        {
          *v5 = v8;
          v9 = v5 + 1;
        }
        v35 = *((int *)this + 3);
        if (v35 > 0x7F)
        {
          *v9 = v35 | 0x80;
          v36 = v35 >> 7;
          if (v35 >> 14)
          {
            v5 = v9 + 2;
            do
            {
              *(v5 - 1) = v36 | 0x80;
              v37 = v36 >> 7;
              ++v5;
              v38 = v36 >> 14;
              v36 >>= 7;
            }
            while (v38);
            *(v5 - 1) = v37;
          }
          else
          {
            v9[1] = v36;
            v5 = v9 + 2;
          }
        }
        else
        {
          *v9 = v35;
          v5 = v9 + 1;
        }
        v39 = *((unsigned __int8 *)this + 8);
        if ((v39 - 19) <= 0xFFFFFFED)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v432, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
          v40 = google::protobuf::internal::LogMessage::operator<<(v432, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
          google::protobuf::internal::LogFinisher::operator=((int)&v431, (const char **)&v40->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v432[0].__r_.__value_.__l.__data_);
        }
        switch(v39)
        {
          case 1:
            v63 = *this;
            if (**this >= 1)
            {
              v64 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v63 = *this;
                }
                *(_QWORD *)v5 = *(_QWORD *)google::protobuf::RepeatedField<double>::Get(v63, v64);
                v5 += 8;
                ++v64;
                v63 = *this;
              }
              while (v64 < **this);
            }
            break;
          case 2:
            v65 = *this;
            if (**this >= 1)
            {
              v66 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v65 = *this;
                }
                *(_DWORD *)v5 = *(_DWORD *)google::protobuf::RepeatedField<float>::Get(v65, v66);
                v5 += 4;
                ++v66;
                v65 = *this;
              }
              while (v66 < **this);
            }
            break;
          case 3:
            v67 = *this;
            if (**this >= 1)
            {
              v68 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v67 = *this;
                }
                v69 = *(_QWORD *)google::protobuf::RepeatedField<long long>::Get(v67, v68);
                if (v69 > 0x7F)
                {
                  *v5 = v69 | 0x80;
                  v70 = v69 >> 7;
                  if (v69 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v70 | 0x80;
                      v71 = v70 >> 7;
                      ++v5;
                      v72 = v70 >> 14;
                      v70 >>= 7;
                    }
                    while (v72);
                    *(v5 - 1) = v71;
                  }
                  else
                  {
                    v5[1] = v70;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v69;
                }
                ++v68;
                v67 = *this;
              }
              while (v68 < **this);
            }
            break;
          case 4:
            v73 = *this;
            if (**this >= 1)
            {
              v74 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v73 = *this;
                }
                v75 = *(_QWORD *)google::protobuf::RepeatedField<unsigned long long>::Get(v73, v74);
                if (v75 > 0x7F)
                {
                  *v5 = v75 | 0x80;
                  v76 = v75 >> 7;
                  if (v75 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v76 | 0x80;
                      v77 = v76 >> 7;
                      ++v5;
                      v78 = v76 >> 14;
                      v76 >>= 7;
                    }
                    while (v78);
                    *(v5 - 1) = v77;
                  }
                  else
                  {
                    v5[1] = v76;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v75;
                }
                ++v74;
                v73 = *this;
              }
              while (v74 < **this);
            }
            break;
          case 5:
            v42 = *this;
            if (**this >= 1)
            {
              v43 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v42 = *this;
                }
                v44 = *(int *)google::protobuf::RepeatedField<int>::Get(v42, v43);
                if (v44 > 0x7F)
                {
                  *v5 = v44 | 0x80;
                  v45 = v44 >> 7;
                  if (v44 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v45 | 0x80;
                      v46 = v45 >> 7;
                      ++v5;
                      v47 = v45 >> 14;
                      v45 >>= 7;
                    }
                    while (v47);
                    *(v5 - 1) = v46;
                  }
                  else
                  {
                    v5[1] = v45;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v44;
                }
                ++v43;
                v42 = *this;
              }
              while (v43 < **this);
            }
            break;
          case 6:
            v79 = *this;
            if (**this >= 1)
            {
              v80 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v79 = *this;
                }
                *(_QWORD *)v5 = *(_QWORD *)google::protobuf::RepeatedField<unsigned long long>::Get(v79, v80);
                v5 += 8;
                ++v80;
                v79 = *this;
              }
              while (v80 < **this);
            }
            break;
          case 7:
            v81 = *this;
            if (**this >= 1)
            {
              v82 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v81 = *this;
                }
                *(_DWORD *)v5 = *(_DWORD *)google::protobuf::RepeatedField<unsigned int>::Get(v81, v82);
                v5 += 4;
                ++v82;
                v81 = *this;
              }
              while (v82 < **this);
            }
            break;
          case 8:
            v83 = *this;
            if (**this >= 1)
            {
              v84 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v83 = *this;
                }
                *v5++ = *(_BYTE *)google::protobuf::RepeatedField<BOOL>::Get(v83, v84++);
                v83 = *this;
              }
              while (v84 < **this);
            }
            break;
          case 9:
          case 10:
          case 11:
          case 12:
            google::protobuf::internal::LogMessage::LogMessage((uint64_t)v432, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 1969);
            v41 = google::protobuf::internal::LogMessage::operator<<(v432, "Non-primitive types can't be packed.");
            google::protobuf::internal::LogFinisher::operator=((int)&v431, (const char **)&v41->__r_.__value_.__l.__data_);
            google::protobuf::internal::LogMessage::~LogMessage((void **)&v432[0].__r_.__value_.__l.__data_);
            break;
          case 13:
            v48 = *this;
            if (**this >= 1)
            {
              v49 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v48 = *this;
                }
                v50 = *(_DWORD *)google::protobuf::RepeatedField<unsigned int>::Get(v48, v49);
                if (v50 > 0x7F)
                {
                  *v5 = v50 | 0x80;
                  v51 = v50 >> 7;
                  if (v50 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v51 | 0x80;
                      v52 = v51 >> 7;
                      ++v5;
                      v53 = v51 >> 14;
                      v51 >>= 7;
                    }
                    while (v53);
                    *(v5 - 1) = v52;
                  }
                  else
                  {
                    v5[1] = v51;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v50;
                }
                ++v49;
                v48 = *this;
              }
              while (v49 < **this);
            }
            break;
          case 14:
            v85 = *this;
            if (**this >= 1)
            {
              v86 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v85 = *this;
                }
                v87 = *(int *)google::protobuf::RepeatedField<int>::Get(v85, v86);
                if (v87 > 0x7F)
                {
                  *v5 = v87 | 0x80;
                  v88 = v87 >> 7;
                  if (v87 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v88 | 0x80;
                      v89 = v88 >> 7;
                      ++v5;
                      v90 = v88 >> 14;
                      v88 >>= 7;
                    }
                    while (v90);
                    *(v5 - 1) = v89;
                  }
                  else
                  {
                    v5[1] = v88;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v87;
                }
                ++v86;
                v85 = *this;
              }
              while (v86 < **this);
            }
            break;
          case 15:
            v54 = *this;
            if (**this >= 1)
            {
              v55 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v54 = *this;
                }
                *(_DWORD *)v5 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v54, v55);
                v5 += 4;
                ++v55;
                v54 = *this;
              }
              while (v55 < **this);
            }
            break;
          case 16:
            v91 = *this;
            if (**this >= 1)
            {
              v92 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v91 = *this;
                }
                *(_QWORD *)v5 = *(_QWORD *)google::protobuf::RepeatedField<long long>::Get(v91, v92);
                v5 += 8;
                ++v92;
                v91 = *this;
              }
              while (v92 < **this);
            }
            break;
          case 17:
            v56 = *this;
            if (**this >= 1)
            {
              v57 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v56 = *this;
                }
                v58 = (int *)google::protobuf::RepeatedField<int>::Get(v56, v57);
                v59 = (2 * *v58) ^ (*v58 >> 31);
                if (v59 > 0x7F)
                {
                  *v5 = v59 | 0x80;
                  v60 = v59 >> 7;
                  if (v59 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v60 | 0x80;
                      v61 = v60 >> 7;
                      ++v5;
                      v62 = v60 >> 14;
                      v60 >>= 7;
                    }
                    while (v62);
                    *(v5 - 1) = v61;
                  }
                  else
                  {
                    v5[1] = v60;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v59;
                }
                ++v57;
                v56 = *this;
              }
              while (v57 < **this);
            }
            break;
          case 18:
            v93 = *this;
            if (**this >= 1)
            {
              v94 = 0;
              do
              {
                if ((unint64_t)v5 >= *(_QWORD *)a4)
                {
                  v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  v93 = *this;
                }
                v95 = (uint64_t *)google::protobuf::RepeatedField<long long>::Get(v93, v94);
                v96 = (2 * *v95) ^ (*v95 >> 63);
                if (v96 > 0x7F)
                {
                  *v5 = v96 | 0x80;
                  v97 = v96 >> 7;
                  if (v96 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - 1) = v97 | 0x80;
                      v98 = v97 >> 7;
                      ++v5;
                      v99 = v97 >> 14;
                      v97 >>= 7;
                    }
                    while (v99);
                    *(v5 - 1) = v98;
                  }
                  else
                  {
                    v5[1] = v97;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v96;
                }
                ++v94;
                v93 = *this;
              }
              while (v94 < **this);
            }
            break;
          default:
            return (unsigned __int8 *)v5;
        }
      }
      return (unsigned __int8 *)v5;
    }
    v18 = *((unsigned __int8 *)this + 8);
    if ((v18 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v432, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v19 = google::protobuf::internal::LogMessage::operator<<(v432, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v431, (const char **)&v19->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v432[0].__r_.__value_.__l.__data_);
    }
    switch(v18)
    {
      case 1:
        v20 = *this;
        if (**this >= 1)
        {
          v21 = 0;
          v22 = 8 * a2;
          v23 = (8 * a2) | 1;
          v24 = (8 * a2) | 0x81;
          v25 = (a2 >> 4) & 0x1FFFFFF;
          v26 = v22 >> 7;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v20 = *this;
            }
            v27 = *(_QWORD *)google::protobuf::RepeatedField<double>::Get(v20, v21);
            if (v23 > 0x7F)
            {
              *v5 = v24;
              if (v23 >= 0x4000)
              {
                v28 = v5 + 2;
                v29 = v25;
                do
                {
                  *((_BYTE *)v28 - 1) = v29 | 0x80;
                  v30 = v29 >> 7;
                  v28 = (_QWORD *)((char *)v28 + 1);
                  v31 = v29 >> 14;
                  v29 >>= 7;
                }
                while (v31);
                *((_BYTE *)v28 - 1) = v30;
              }
              else
              {
                v5[1] = v26;
                v28 = v5 + 2;
              }
            }
            else
            {
              *v5 = v23;
              v28 = v5 + 1;
            }
            *v28 = v27;
            v5 = (char *)(v28 + 1);
            ++v21;
            v20 = *this;
          }
          while (v21 < **this);
        }
        return (unsigned __int8 *)v5;
      case 2:
        v100 = *this;
        if (**this >= 1)
        {
          v101 = 0;
          v102 = (8 * a2) | 5;
          v103 = (a2 >> 4) & 0x1FFFFFF;
          v104 = (8 * a2) >> 7;
          v105 = (8 * a2) | 0x85;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v100 = *this;
            }
            v106 = *(_DWORD *)google::protobuf::RepeatedField<float>::Get(v100, v101);
            if (v102 > 0x7F)
            {
              *v5 = v105;
              if (v102 >= 0x4000)
              {
                v107 = v5 + 2;
                v108 = v103;
                do
                {
                  *((_BYTE *)v107 - 1) = v108 | 0x80;
                  v109 = v108 >> 7;
                  v107 = (_DWORD *)((char *)v107 + 1);
                  v110 = v108 >> 14;
                  v108 >>= 7;
                }
                while (v110);
                *((_BYTE *)v107 - 1) = v109;
              }
              else
              {
                v5[1] = v104;
                v107 = v5 + 2;
              }
            }
            else
            {
              *v5 = v102;
              v107 = v5 + 1;
            }
            *v107 = v106;
            v5 = (char *)(v107 + 1);
            ++v101;
            v100 = *this;
          }
          while (v101 < **this);
        }
        return (unsigned __int8 *)v5;
      case 3:
        v111 = *this;
        if (**this >= 1)
        {
          v112 = 0;
          v113 = 8 * a2;
          v114 = (8 * a2) | 0x80;
          v115 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v111 = *this;
            }
            v116 = *(_QWORD *)google::protobuf::RepeatedField<long long>::Get(v111, v112);
            if (v113 > 0x7F)
            {
              *v5 = v114;
              if (v113 >= 0x4000)
              {
                v117 = v5 + 2;
                v118 = v115;
                do
                {
                  *(v117 - 1) = v118 | 0x80;
                  v119 = v118 >> 7;
                  ++v117;
                  v120 = v118 >> 14;
                  v118 >>= 7;
                }
                while (v120);
                *(v117 - 1) = v119;
              }
              else
              {
                v5[1] = v113 >> 7;
                v117 = v5 + 2;
              }
            }
            else
            {
              v117 = v5 + 1;
              *v5 = v113;
            }
            if (v116 > 0x7F)
            {
              *v117 = v116 | 0x80;
              v121 = v116 >> 7;
              if (v116 >> 14)
              {
                v5 = v117 + 2;
                do
                {
                  *(v5 - 1) = v121 | 0x80;
                  v122 = v121 >> 7;
                  ++v5;
                  v123 = v121 >> 14;
                  v121 >>= 7;
                }
                while (v123);
                *(v5 - 1) = v122;
              }
              else
              {
                v117[1] = v121;
                v5 = v117 + 2;
              }
            }
            else
            {
              *v117 = v116;
              v5 = v117 + 1;
            }
            ++v112;
            v111 = *this;
          }
          while (v112 < **this);
        }
        return (unsigned __int8 *)v5;
      case 4:
        v124 = *this;
        if (**this >= 1)
        {
          v125 = 0;
          v126 = 8 * a2;
          v127 = (8 * a2) | 0x80;
          v128 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v124 = *this;
            }
            v129 = *(_QWORD *)google::protobuf::RepeatedField<unsigned long long>::Get(v124, v125);
            if (v126 > 0x7F)
            {
              *v5 = v127;
              if (v126 >= 0x4000)
              {
                v130 = v5 + 2;
                v131 = v128;
                do
                {
                  *(v130 - 1) = v131 | 0x80;
                  v132 = v131 >> 7;
                  ++v130;
                  v133 = v131 >> 14;
                  v131 >>= 7;
                }
                while (v133);
                *(v130 - 1) = v132;
              }
              else
              {
                v5[1] = v126 >> 7;
                v130 = v5 + 2;
              }
            }
            else
            {
              v130 = v5 + 1;
              *v5 = v126;
            }
            if (v129 > 0x7F)
            {
              *v130 = v129 | 0x80;
              v134 = v129 >> 7;
              if (v129 >> 14)
              {
                v5 = v130 + 2;
                do
                {
                  *(v5 - 1) = v134 | 0x80;
                  v135 = v134 >> 7;
                  ++v5;
                  v136 = v134 >> 14;
                  v134 >>= 7;
                }
                while (v136);
                *(v5 - 1) = v135;
              }
              else
              {
                v130[1] = v134;
                v5 = v130 + 2;
              }
            }
            else
            {
              *v130 = v129;
              v5 = v130 + 1;
            }
            ++v125;
            v124 = *this;
          }
          while (v125 < **this);
        }
        return (unsigned __int8 *)v5;
      case 5:
        v137 = *this;
        if (**this >= 1)
        {
          v138 = 0;
          v139 = 8 * a2;
          v140 = (8 * a2) | 0x80;
          v141 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v137 = *this;
            }
            v142 = *(int *)google::protobuf::RepeatedField<int>::Get(v137, v138);
            if (v139 > 0x7F)
            {
              *v5 = v140;
              if (v139 >= 0x4000)
              {
                v143 = v5 + 2;
                v144 = v141;
                do
                {
                  *(v143 - 1) = v144 | 0x80;
                  v145 = v144 >> 7;
                  ++v143;
                  v146 = v144 >> 14;
                  v144 >>= 7;
                }
                while (v146);
                *(v143 - 1) = v145;
              }
              else
              {
                v5[1] = v139 >> 7;
                v143 = v5 + 2;
              }
            }
            else
            {
              v143 = v5 + 1;
              *v5 = v139;
            }
            if (v142 > 0x7F)
            {
              *v143 = v142 | 0x80;
              v147 = v142 >> 7;
              if (v142 >> 14)
              {
                v5 = v143 + 2;
                do
                {
                  *(v5 - 1) = v147 | 0x80;
                  v148 = v147 >> 7;
                  ++v5;
                  v149 = v147 >> 14;
                  v147 >>= 7;
                }
                while (v149);
                *(v5 - 1) = v148;
              }
              else
              {
                v143[1] = v147;
                v5 = v143 + 2;
              }
            }
            else
            {
              *v143 = v142;
              v5 = v143 + 1;
            }
            ++v138;
            v137 = *this;
          }
          while (v138 < **this);
        }
        return (unsigned __int8 *)v5;
      case 6:
        v150 = *this;
        if (**this >= 1)
        {
          v151 = 0;
          v152 = 8 * a2;
          v153 = (8 * a2) | 1;
          v154 = (8 * a2) | 0x81;
          v155 = (a2 >> 4) & 0x1FFFFFF;
          v156 = v152 >> 7;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v150 = *this;
            }
            v157 = *(_QWORD *)google::protobuf::RepeatedField<unsigned long long>::Get(v150, v151);
            if (v153 > 0x7F)
            {
              *v5 = v154;
              if (v153 >= 0x4000)
              {
                v158 = v5 + 2;
                v159 = v155;
                do
                {
                  *((_BYTE *)v158 - 1) = v159 | 0x80;
                  v160 = v159 >> 7;
                  v158 = (_QWORD *)((char *)v158 + 1);
                  v161 = v159 >> 14;
                  v159 >>= 7;
                }
                while (v161);
                *((_BYTE *)v158 - 1) = v160;
              }
              else
              {
                v5[1] = v156;
                v158 = v5 + 2;
              }
            }
            else
            {
              *v5 = v153;
              v158 = v5 + 1;
            }
            *v158 = v157;
            v5 = (char *)(v158 + 1);
            ++v151;
            v150 = *this;
          }
          while (v151 < **this);
        }
        return (unsigned __int8 *)v5;
      case 7:
        v162 = *this;
        if (**this >= 1)
        {
          v163 = 0;
          v164 = (8 * a2) | 5;
          v165 = (a2 >> 4) & 0x1FFFFFF;
          v166 = (8 * a2) >> 7;
          v167 = (8 * a2) | 0x85;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v162 = *this;
            }
            v168 = *(_DWORD *)google::protobuf::RepeatedField<unsigned int>::Get(v162, v163);
            if (v164 > 0x7F)
            {
              *v5 = v167;
              if (v164 >= 0x4000)
              {
                v169 = v5 + 2;
                v170 = v165;
                do
                {
                  *((_BYTE *)v169 - 1) = v170 | 0x80;
                  v171 = v170 >> 7;
                  v169 = (_DWORD *)((char *)v169 + 1);
                  v172 = v170 >> 14;
                  v170 >>= 7;
                }
                while (v172);
                *((_BYTE *)v169 - 1) = v171;
              }
              else
              {
                v5[1] = v166;
                v169 = v5 + 2;
              }
            }
            else
            {
              *v5 = v164;
              v169 = v5 + 1;
            }
            *v169 = v168;
            v5 = (char *)(v169 + 1);
            ++v163;
            v162 = *this;
          }
          while (v163 < **this);
        }
        return (unsigned __int8 *)v5;
      case 8:
        v173 = *this;
        if (**this >= 1)
        {
          v174 = 0;
          v175 = 8 * a2;
          v176 = (8 * a2) | 0x80;
          v177 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v173 = *this;
            }
            v178 = *(_BYTE *)google::protobuf::RepeatedField<BOOL>::Get(v173, v174);
            if (v175 > 0x7F)
            {
              *v5 = v176;
              if (v175 >= 0x4000)
              {
                v179 = v5 + 2;
                v180 = v177;
                do
                {
                  *(v179 - 1) = v180 | 0x80;
                  v181 = v180 >> 7;
                  ++v179;
                  v182 = v180 >> 14;
                  v180 >>= 7;
                }
                while (v182);
                *(v179 - 1) = v181;
              }
              else
              {
                v5[1] = v175 >> 7;
                v179 = v5 + 2;
              }
            }
            else
            {
              *v5 = v175;
              v179 = v5 + 1;
            }
            *v179 = v178;
            v5 = v179 + 1;
            ++v174;
            v173 = *this;
          }
          while (v174 < **this);
        }
        return (unsigned __int8 *)v5;
      case 9:
        v183 = (uint64_t)*this;
        if ((*this)[2] < 1)
          return (unsigned __int8 *)v5;
        v184 = 0;
        v185 = 8 * a2;
        v186 = 4;
        if (((a2 >> 25) & 0xF) != 0)
          v186 = 5;
        v187 = (8 * a2) | 2;
        v188 = 1;
        if (v185 >= 0x80)
          v188 = 2;
        if (v185 < 0x200000)
          v186 = 3;
        if (v185 >= 0x4000)
          v189 = v186;
        else
          v189 = v188;
        v429 = v185 >> 7;
        while (1)
        {
          if ((unint64_t)v5 >= *(_QWORD *)a4)
          {
            v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
            v183 = (uint64_t)*this;
          }
          v190 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v183, v184);
          if (*(char *)(v190 + 23) < 0)
          {
            v191 = *(_QWORD *)(v190 + 8);
            if (v191 > 127)
              goto LABEL_326;
          }
          else
          {
            v191 = *(unsigned __int8 *)(v190 + 23);
          }
          if ((uint64_t)(*(_QWORD *)a4 + ~(unint64_t)&v5[v189] + 16) >= v191)
          {
            if (v187 > 0x7F)
            {
              *v5 = (8 * a2) | 0x82;
              if (v187 >= 0x4000)
              {
                v192 = v5 + 2;
                v193 = (a2 >> 4) & 0x1FFFFFF;
                do
                {
                  *(v192 - 1) = v193 | 0x80;
                  v194 = v193 >> 7;
                  ++v192;
                  v195 = v193 >> 14;
                  v193 >>= 7;
                }
                while (v195);
                *(v192 - 1) = v194;
              }
              else
              {
                v5[1] = v429;
                v192 = v5 + 2;
              }
            }
            else
            {
              v192 = v5 + 1;
              *v5 = v187;
            }
            *v192 = v191;
            v196 = v192 + 1;
            if (*(char *)(v190 + 23) >= 0)
              v197 = (const void *)v190;
            else
              v197 = *(const void **)v190;
            memcpy(v196, v197, v191);
            v5 = &v196[v191];
            goto LABEL_324;
          }
LABEL_326:
          v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, v190, v5);
LABEL_324:
          ++v184;
          v183 = (uint64_t)*this;
          if (v184 >= (*this)[2])
            return (unsigned __int8 *)v5;
        }
      case 10:
        v198 = (uint64_t)*this;
        if ((*this)[2] >= 1)
        {
          v199 = 0;
          v200 = (8 * a2) | 3;
          v201 = (8 * a2) | 0x83;
          v202 = (a2 >> 4) & 0x1FFFFFF;
          v203 = (8 * a2) | 4;
          v204 = (8 * a2) >> 7;
          v205 = (8 * a2) | 0x84;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v198 = (uint64_t)*this;
            }
            v206 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(v198, v199);
            if (v200 > 0x7F)
            {
              *v5 = v201;
              if (v200 >= 0x4000)
              {
                v207 = v5 + 2;
                v208 = v202;
                do
                {
                  *(v207 - 1) = v208 | 0x80;
                  v209 = v208 >> 7;
                  ++v207;
                  v210 = v208 >> 14;
                  v208 >>= 7;
                }
                while (v210);
                *(v207 - 1) = v209;
              }
              else
              {
                v5[1] = v204;
                v207 = v5 + 2;
              }
            }
            else
            {
              v207 = v5 + 1;
              *v5 = v200;
            }
            v211 = (char *)(*(uint64_t (**)(uint64_t, char *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v206 + 112))(v206, v207, a4);
            if ((unint64_t)v211 >= *(_QWORD *)a4)
              v211 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v211);
            if (v203 > 0x7F)
            {
              *v211 = v205;
              if (v203 >= 0x4000)
              {
                v5 = v211 + 2;
                v212 = v202;
                do
                {
                  *(v5 - 1) = v212 | 0x80;
                  v213 = v212 >> 7;
                  ++v5;
                  v214 = v212 >> 14;
                  v212 >>= 7;
                }
                while (v214);
                *(v5 - 1) = v213;
              }
              else
              {
                v211[1] = v204;
                v5 = v211 + 2;
              }
            }
            else
            {
              v5 = v211 + 1;
              *v211 = v203;
            }
            ++v199;
            v198 = (uint64_t)*this;
          }
          while (v199 < (*this)[2]);
        }
        return (unsigned __int8 *)v5;
      case 11:
        v215 = (uint64_t)*this;
        if ((*this)[2] >= 1)
        {
          v216 = 0;
          v217 = (8 * a2) | 2;
          v218 = (a2 >> 4) & 0x1FFFFFF;
          v219 = (8 * a2) >> 7;
          v220 = (8 * a2) | 0x82;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v215 = (uint64_t)*this;
            }
            v221 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(v215, v216);
            v222 = v221;
            if (v217 > 0x7F)
            {
              *v5 = v220;
              if (v217 >= 0x4000)
              {
                v223 = v5 + 2;
                v224 = v218;
                do
                {
                  *(v223 - 1) = v224 | 0x80;
                  v225 = v224 >> 7;
                  ++v223;
                  v226 = v224 >> 14;
                  v224 >>= 7;
                }
                while (v226);
                *(v223 - 1) = v225;
              }
              else
              {
                v5[1] = v219;
                v223 = v5 + 2;
              }
            }
            else
            {
              v223 = v5 + 1;
              *v5 = v217;
            }
            v227 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v221 + 96))(v221);
            if (v227 > 0x7F)
            {
              *v223 = v227 | 0x80;
              v229 = v227 >> 7;
              if (v227 >> 14)
              {
                v228 = v223 + 2;
                do
                {
                  *(v228 - 1) = v229 | 0x80;
                  v230 = v229 >> 7;
                  ++v228;
                  v231 = v229 >> 14;
                  v229 >>= 7;
                }
                while (v231);
                *(v228 - 1) = v230;
              }
              else
              {
                v223[1] = v229;
                v228 = v223 + 2;
              }
            }
            else
            {
              *v223 = v227;
              v228 = v223 + 1;
            }
            v5 = (char *)(*(uint64_t (**)(uint64_t, _BYTE *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v222 + 112))(v222, v228, a4);
            ++v216;
            v215 = (uint64_t)*this;
          }
          while (v216 < (*this)[2]);
        }
        return (unsigned __int8 *)v5;
      case 12:
        v232 = (uint64_t)*this;
        if ((*this)[2] < 1)
          return (unsigned __int8 *)v5;
        v233 = 0;
        v234 = 8 * a2;
        v235 = 4;
        if (((a2 >> 25) & 0xF) != 0)
          v235 = 5;
        v236 = (8 * a2) | 2;
        v237 = 1;
        if (v234 >= 0x80)
          v237 = 2;
        if (v234 < 0x200000)
          v235 = 3;
        if (v234 >= 0x4000)
          v238 = v235;
        else
          v238 = v237;
        v430 = v234 >> 7;
        break;
      case 13:
        v247 = *this;
        if (**this >= 1)
        {
          v248 = 0;
          v249 = 8 * a2;
          v250 = (8 * a2) | 0x80;
          v251 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v247 = *this;
            }
            v252 = *(_DWORD *)google::protobuf::RepeatedField<unsigned int>::Get(v247, v248);
            if (v249 > 0x7F)
            {
              *v5 = v250;
              if (v249 >= 0x4000)
              {
                v253 = v5 + 2;
                v254 = v251;
                do
                {
                  *(v253 - 1) = v254 | 0x80;
                  v255 = v254 >> 7;
                  ++v253;
                  v256 = v254 >> 14;
                  v254 >>= 7;
                }
                while (v256);
                *(v253 - 1) = v255;
              }
              else
              {
                v5[1] = v249 >> 7;
                v253 = v5 + 2;
              }
            }
            else
            {
              v253 = v5 + 1;
              *v5 = v249;
            }
            if (v252 > 0x7F)
            {
              *v253 = v252 | 0x80;
              v257 = v252 >> 7;
              if (v252 >> 14)
              {
                v5 = v253 + 2;
                do
                {
                  *(v5 - 1) = v257 | 0x80;
                  v258 = v257 >> 7;
                  ++v5;
                  v259 = v257 >> 14;
                  v257 >>= 7;
                }
                while (v259);
                *(v5 - 1) = v258;
              }
              else
              {
                v253[1] = v257;
                v5 = v253 + 2;
              }
            }
            else
            {
              *v253 = v252;
              v5 = v253 + 1;
            }
            ++v248;
            v247 = *this;
          }
          while (v248 < **this);
        }
        return (unsigned __int8 *)v5;
      case 14:
        v260 = *this;
        if (**this >= 1)
        {
          v261 = 0;
          v262 = 8 * a2;
          v263 = (8 * a2) | 0x80;
          v264 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v260 = *this;
            }
            v265 = *(int *)google::protobuf::RepeatedField<int>::Get(v260, v261);
            if (v262 > 0x7F)
            {
              *v5 = v263;
              if (v262 >= 0x4000)
              {
                v266 = v5 + 2;
                v267 = v264;
                do
                {
                  *(v266 - 1) = v267 | 0x80;
                  v268 = v267 >> 7;
                  ++v266;
                  v269 = v267 >> 14;
                  v267 >>= 7;
                }
                while (v269);
                *(v266 - 1) = v268;
              }
              else
              {
                v5[1] = v262 >> 7;
                v266 = v5 + 2;
              }
            }
            else
            {
              v266 = v5 + 1;
              *v5 = v262;
            }
            if (v265 > 0x7F)
            {
              *v266 = v265 | 0x80;
              v270 = v265 >> 7;
              if (v265 >> 14)
              {
                v5 = v266 + 2;
                do
                {
                  *(v5 - 1) = v270 | 0x80;
                  v271 = v270 >> 7;
                  ++v5;
                  v272 = v270 >> 14;
                  v270 >>= 7;
                }
                while (v272);
                *(v5 - 1) = v271;
              }
              else
              {
                v266[1] = v270;
                v5 = v266 + 2;
              }
            }
            else
            {
              *v266 = v265;
              v5 = v266 + 1;
            }
            ++v261;
            v260 = *this;
          }
          while (v261 < **this);
        }
        return (unsigned __int8 *)v5;
      case 15:
        v273 = *this;
        if (**this >= 1)
        {
          v274 = 0;
          v275 = (8 * a2) | 5;
          v276 = (a2 >> 4) & 0x1FFFFFF;
          v277 = (8 * a2) >> 7;
          v278 = (8 * a2) | 0x85;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v273 = *this;
            }
            v279 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v273, v274);
            if (v275 > 0x7F)
            {
              *v5 = v278;
              if (v275 >= 0x4000)
              {
                v280 = v5 + 2;
                v281 = v276;
                do
                {
                  *((_BYTE *)v280 - 1) = v281 | 0x80;
                  v282 = v281 >> 7;
                  v280 = (_DWORD *)((char *)v280 + 1);
                  v283 = v281 >> 14;
                  v281 >>= 7;
                }
                while (v283);
                *((_BYTE *)v280 - 1) = v282;
              }
              else
              {
                v5[1] = v277;
                v280 = v5 + 2;
              }
            }
            else
            {
              *v5 = v275;
              v280 = v5 + 1;
            }
            *v280 = v279;
            v5 = (char *)(v280 + 1);
            ++v274;
            v273 = *this;
          }
          while (v274 < **this);
        }
        return (unsigned __int8 *)v5;
      case 16:
        v284 = *this;
        if (**this >= 1)
        {
          v285 = 0;
          v286 = 8 * a2;
          v287 = (8 * a2) | 1;
          v288 = (8 * a2) | 0x81;
          v289 = (a2 >> 4) & 0x1FFFFFF;
          v290 = v286 >> 7;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v284 = *this;
            }
            v291 = *(_QWORD *)google::protobuf::RepeatedField<long long>::Get(v284, v285);
            if (v287 > 0x7F)
            {
              *v5 = v288;
              if (v287 >= 0x4000)
              {
                v292 = v5 + 2;
                v293 = v289;
                do
                {
                  *((_BYTE *)v292 - 1) = v293 | 0x80;
                  v294 = v293 >> 7;
                  v292 = (_QWORD *)((char *)v292 + 1);
                  v295 = v293 >> 14;
                  v293 >>= 7;
                }
                while (v295);
                *((_BYTE *)v292 - 1) = v294;
              }
              else
              {
                v5[1] = v290;
                v292 = v5 + 2;
              }
            }
            else
            {
              *v5 = v287;
              v292 = v5 + 1;
            }
            *v292 = v291;
            v5 = (char *)(v292 + 1);
            ++v285;
            v284 = *this;
          }
          while (v285 < **this);
        }
        return (unsigned __int8 *)v5;
      case 17:
        v296 = *this;
        if (**this >= 1)
        {
          v297 = 0;
          v298 = 8 * a2;
          v299 = (8 * a2) | 0x80;
          v300 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v296 = *this;
            }
            v301 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v296, v297);
            if (v298 > 0x7F)
            {
              *v5 = v299;
              if (v298 >= 0x4000)
              {
                v302 = v5 + 2;
                v303 = v300;
                do
                {
                  *(v302 - 1) = v303 | 0x80;
                  v304 = v303 >> 7;
                  ++v302;
                  v305 = v303 >> 14;
                  v303 >>= 7;
                }
                while (v305);
                *(v302 - 1) = v304;
              }
              else
              {
                v5[1] = v298 >> 7;
                v302 = v5 + 2;
              }
            }
            else
            {
              v302 = v5 + 1;
              *v5 = v298;
            }
            v306 = (2 * v301) ^ (v301 >> 31);
            if (v306 > 0x7F)
            {
              *v302 = v306 | 0x80;
              v307 = v306 >> 7;
              if (v306 >> 14)
              {
                v5 = v302 + 2;
                do
                {
                  *(v5 - 1) = v307 | 0x80;
                  v308 = v307 >> 7;
                  ++v5;
                  v309 = v307 >> 14;
                  v307 >>= 7;
                }
                while (v309);
                *(v5 - 1) = v308;
              }
              else
              {
                v302[1] = v307;
                v5 = v302 + 2;
              }
            }
            else
            {
              *v302 = v306;
              v5 = v302 + 1;
            }
            ++v297;
            v296 = *this;
          }
          while (v297 < **this);
        }
        return (unsigned __int8 *)v5;
      case 18:
        v310 = *this;
        if (**this >= 1)
        {
          v311 = 0;
          v312 = 8 * a2;
          v313 = (8 * a2) | 0x80;
          v314 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if ((unint64_t)v5 >= *(_QWORD *)a4)
            {
              v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
              v310 = *this;
            }
            v315 = *(_QWORD *)google::protobuf::RepeatedField<long long>::Get(v310, v311);
            if (v312 > 0x7F)
            {
              *v5 = v313;
              if (v312 >= 0x4000)
              {
                v316 = v5 + 2;
                v317 = v314;
                do
                {
                  *(v316 - 1) = v317 | 0x80;
                  v318 = v317 >> 7;
                  ++v316;
                  v319 = v317 >> 14;
                  v317 >>= 7;
                }
                while (v319);
                *(v316 - 1) = v318;
              }
              else
              {
                v5[1] = v312 >> 7;
                v316 = v5 + 2;
              }
            }
            else
            {
              v316 = v5 + 1;
              *v5 = v312;
            }
            v320 = (2 * v315) ^ (v315 >> 63);
            if (v320 > 0x7F)
            {
              *v316 = v320 | 0x80;
              v321 = v320 >> 7;
              if (v320 >> 14)
              {
                v5 = v316 + 2;
                do
                {
                  *(v5 - 1) = v321 | 0x80;
                  v322 = v321 >> 7;
                  ++v5;
                  v323 = v321 >> 14;
                  v321 >>= 7;
                }
                while (v323);
                *(v5 - 1) = v322;
              }
              else
              {
                v316[1] = v321;
                v5 = v316 + 2;
              }
            }
            else
            {
              *v316 = v320;
              v5 = v316 + 1;
            }
            ++v311;
            v310 = *this;
          }
          while (v311 < **this);
        }
        return (unsigned __int8 *)v5;
      default:
        return (unsigned __int8 *)v5;
    }
    while (1)
    {
      if ((unint64_t)v5 >= *(_QWORD *)a4)
      {
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
        v232 = (uint64_t)*this;
      }
      v239 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v232, v233);
      if (*(char *)(v239 + 23) < 0)
      {
        v240 = *(_QWORD *)(v239 + 8);
        if (v240 > 127)
          goto LABEL_399;
      }
      else
      {
        v240 = *(unsigned __int8 *)(v239 + 23);
      }
      if ((uint64_t)(*(_QWORD *)a4 + ~(unint64_t)&v5[v238] + 16) >= v240)
      {
        if (v236 > 0x7F)
        {
          *v5 = (8 * a2) | 0x82;
          if (v236 >= 0x4000)
          {
            v241 = v5 + 2;
            v242 = (a2 >> 4) & 0x1FFFFFF;
            do
            {
              *(v241 - 1) = v242 | 0x80;
              v243 = v242 >> 7;
              ++v241;
              v244 = v242 >> 14;
              v242 >>= 7;
            }
            while (v244);
            *(v241 - 1) = v243;
          }
          else
          {
            v5[1] = v430;
            v241 = v5 + 2;
          }
        }
        else
        {
          v241 = v5 + 1;
          *v5 = v236;
        }
        *v241 = v240;
        v245 = v241 + 1;
        if (*(char *)(v239 + 23) >= 0)
          v246 = (const void *)v239;
        else
          v246 = *(const void **)v239;
        memcpy(v245, v246, v240);
        v5 = &v245[v240];
        goto LABEL_397;
      }
LABEL_399:
      v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, v239, v5);
LABEL_397:
      ++v233;
      v232 = (uint64_t)*this;
      if (v233 >= (*this)[2])
        return (unsigned __int8 *)v5;
    }
  }
  if ((*((_BYTE *)this + 10) & 1) != 0)
    return (unsigned __int8 *)v5;
  v10 = *((unsigned __int8 *)this + 8);
  if ((v10 - 19) <= 0xFFFFFFED)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v432, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
    v11 = google::protobuf::internal::LogMessage::operator<<(v432, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v431, (const char **)&v11->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v432[0].__r_.__value_.__l.__data_);
  }
  switch(v10)
  {
    case 1:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v12 = *this;
      v13 = (8 * a2) | 1;
      if (v13 <= 0x7F)
        goto LABEL_575;
      *v5 = (8 * a2) | 0x81;
      v14 = (8 * a2) >> 7;
      if (!(v13 >> 14))
        goto LABEL_602;
      v15 = (int **)(v5 + 2);
      do
      {
        *((_BYTE *)v15 - 1) = v14 | 0x80;
        v16 = v14 >> 7;
        v15 = (int **)((char *)v15 + 1);
        v17 = v14 >> 14;
        v14 >>= 7;
      }
      while (v17);
      goto LABEL_693;
    case 2:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v324 = *(_DWORD *)this;
      v325 = (8 * a2) | 5;
      if (v325 <= 0x7F)
        goto LABEL_571;
      *v5 = (8 * a2) | 0x85;
      v326 = (8 * a2) >> 7;
      if (!(v325 >> 14))
        goto LABEL_600;
      v327 = (unsigned int *)(v5 + 2);
      do
      {
        *((_BYTE *)v327 - 1) = v326 | 0x80;
        v328 = v326 >> 7;
        v327 = (unsigned int *)((char *)v327 + 1);
        v329 = v326 >> 14;
        v326 >>= 7;
      }
      while (v329);
      goto LABEL_689;
    case 3:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v330 = (unint64_t)*this;
      v331 = 8 * a2;
      if ((8 * a2) > 0x7F)
      {
        *v5 = v331 | 0x80;
        v355 = v331 >> 7;
        if (v331 >> 14)
        {
          v332 = v5 + 2;
          do
          {
            *(v332 - 1) = v355 | 0x80;
            v380 = v355 >> 7;
            ++v332;
            v381 = v355 >> 14;
            v355 >>= 7;
          }
          while (v381);
          *(v332 - 1) = v380;
        }
        else
        {
          v5[1] = v355;
          v332 = v5 + 2;
        }
      }
      else
      {
        *v5 = v331;
        v332 = v5 + 1;
      }
      if (v330 <= 0x7F)
        goto LABEL_684;
      *v332 = v330 | 0x80;
      v382 = v330 >> 7;
      if (!(v330 >> 14))
        goto LABEL_686;
      v5 = v332 + 2;
      do
      {
        *(v5 - 1) = v382 | 0x80;
        v383 = v382 >> 7;
        ++v5;
        v384 = v382 >> 14;
        v382 >>= 7;
      }
      while (v384);
      goto LABEL_718;
    case 4:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v330 = (unint64_t)*this;
      v333 = 8 * a2;
      if ((8 * a2) > 0x7F)
      {
        *v5 = v333 | 0x80;
        v356 = v333 >> 7;
        if (v333 >> 14)
        {
          v332 = v5 + 2;
          do
          {
            *(v332 - 1) = v356 | 0x80;
            v385 = v356 >> 7;
            ++v332;
            v386 = v356 >> 14;
            v356 >>= 7;
          }
          while (v386);
          *(v332 - 1) = v385;
        }
        else
        {
          v5[1] = v356;
          v332 = v5 + 2;
        }
      }
      else
      {
        *v5 = v333;
        v332 = v5 + 1;
      }
      if (v330 <= 0x7F)
        goto LABEL_684;
      *v332 = v330 | 0x80;
      v382 = v330 >> 7;
      if (!(v330 >> 14))
        goto LABEL_686;
      v5 = v332 + 2;
      do
      {
        *(v5 - 1) = v382 | 0x80;
        v383 = v382 >> 7;
        ++v5;
        v387 = v382 >> 14;
        v382 >>= 7;
      }
      while (v387);
      goto LABEL_718;
    case 5:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v330 = *(int *)this;
      v334 = 8 * a2;
      if ((8 * a2) > 0x7F)
      {
        *v5 = v334 | 0x80;
        v357 = v334 >> 7;
        if (v334 >> 14)
        {
          v332 = v5 + 2;
          do
          {
            *(v332 - 1) = v357 | 0x80;
            v388 = v357 >> 7;
            ++v332;
            v389 = v357 >> 14;
            v357 >>= 7;
          }
          while (v389);
          *(v332 - 1) = v388;
        }
        else
        {
          v5[1] = v357;
          v332 = v5 + 2;
        }
      }
      else
      {
        *v5 = v334;
        v332 = v5 + 1;
      }
      if (v330 <= 0x7F)
        goto LABEL_684;
      *v332 = v330 | 0x80;
      v382 = v330 >> 7;
      if (!(v330 >> 14))
        goto LABEL_686;
      v5 = v332 + 2;
      do
      {
        *(v5 - 1) = v382 | 0x80;
        v383 = v382 >> 7;
        ++v5;
        v390 = v382 >> 14;
        v382 >>= 7;
      }
      while (v390);
      goto LABEL_718;
    case 6:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v12 = *this;
      v13 = (8 * a2) | 1;
      if (v13 <= 0x7F)
        goto LABEL_575;
      *v5 = (8 * a2) | 0x81;
      v14 = (8 * a2) >> 7;
      if (!(v13 >> 14))
        goto LABEL_602;
      v15 = (int **)(v5 + 2);
      do
      {
        *((_BYTE *)v15 - 1) = v14 | 0x80;
        v16 = v14 >> 7;
        v15 = (int **)((char *)v15 + 1);
        v335 = v14 >> 14;
        v14 >>= 7;
      }
      while (v335);
      goto LABEL_693;
    case 7:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v324 = *(_DWORD *)this;
      v325 = (8 * a2) | 5;
      if (v325 <= 0x7F)
        goto LABEL_571;
      *v5 = (8 * a2) | 0x85;
      v326 = (8 * a2) >> 7;
      if (!(v325 >> 14))
        goto LABEL_600;
      v327 = (unsigned int *)(v5 + 2);
      do
      {
        *((_BYTE *)v327 - 1) = v326 | 0x80;
        v328 = v326 >> 7;
        v327 = (unsigned int *)((char *)v327 + 1);
        v336 = v326 >> 14;
        v326 >>= 7;
      }
      while (v336);
      goto LABEL_689;
    case 8:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      LOBYTE(v337) = *(_BYTE *)this;
      v338 = 8 * a2;
      if ((8 * a2) > 0x7F)
      {
        *v5 = v338 | 0x80;
        v358 = v338 >> 7;
        if (v338 >> 14)
        {
          v332 = v5 + 2;
          do
          {
            *(v332 - 1) = v358 | 0x80;
            v391 = v358 >> 7;
            ++v332;
            v392 = v358 >> 14;
            v358 >>= 7;
          }
          while (v392);
          *(v332 - 1) = v391;
        }
        else
        {
          v5[1] = v358;
          v332 = v5 + 2;
        }
      }
      else
      {
        *v5 = v338;
        v332 = v5 + 1;
      }
      goto LABEL_677;
    case 9:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v339 = *this;
      if (*((char *)*this + 23) < 0)
      {
        v340 = *((_QWORD *)v339 + 1);
        if (v340 > 127)
          return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v339, v5);
      }
      else
      {
        v340 = *((unsigned __int8 *)*this + 23);
      }
      v364 = 8 * a2;
      v365 = 1;
      v366 = 2;
      v367 = 3;
      v368 = 4;
      if ((8 * a2) >> 28)
        v368 = 5;
      if (v364 >= 0x200000)
        v367 = v368;
      if (v364 >= 0x4000)
        v366 = v367;
      if (v364 >= 0x80)
        v365 = v366;
      if ((uint64_t)(*(_QWORD *)a4 + ~(unint64_t)&v5[v365] + 16) < v340)
        return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v339, v5);
      v369 = v364 | 2;
      if ((v364 | 2) <= 0x7F)
        goto LABEL_633;
      *v5 = v364 | 0x82;
      v370 = v364 >> 7;
      if (!(v369 >> 14))
        goto LABEL_635;
      v371 = v5 + 2;
      do
      {
        *(v371 - 1) = v370 | 0x80;
        v372 = v370 >> 7;
        ++v371;
        v373 = v370 >> 14;
        v370 >>= 7;
      }
      while (v373);
      goto LABEL_727;
    case 10:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v341 = *this;
      v342 = 8 * a2;
      v343 = (8 * a2) | 3;
      v344 = (8 * a2) >> 7;
      if (v343 > 0x7F)
      {
        *v5 = (8 * a2) | 0x83;
        if (v343 >> 14)
        {
          v345 = v5 + 2;
          v393 = v342 >> 7;
          do
          {
            *(v345 - 1) = v393 | 0x80;
            v394 = v393 >> 7;
            ++v345;
            v395 = v393 >> 14;
            v393 >>= 7;
          }
          while (v395);
          *(v345 - 1) = v394;
        }
        else
        {
          v5[1] = v344;
          v345 = v5 + 2;
        }
      }
      else
      {
        *v5 = v343;
        v345 = v5 + 1;
      }
      v332 = (char *)(*(uint64_t (**)(int *, char *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v341 + 112))(v341, v345, a4);
      if ((unint64_t)v332 >= *(_QWORD *)a4)
        v332 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v332);
      v337 = v342 | 4;
      if ((v342 | 4) <= 0x7F)
        goto LABEL_677;
      *v332 = v342 | 0x84;
      if (!(v337 >> 14))
      {
        v332[1] = v344;
        return (unsigned __int8 *)(v332 + 2);
      }
      v5 = v332 + 2;
      do
      {
        *(v5 - 1) = v344 | 0x80;
        v411 = v344 >> 7;
        ++v5;
        v412 = v344 >> 14;
        v344 >>= 7;
      }
      while (v412);
      goto LABEL_715;
    case 11:
      if ((*((_BYTE *)this + 10) & 0x10) != 0)
        return (unsigned __int8 *)(*(uint64_t (**)(int *, uint64_t, char *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)*this + 136))(*this, a2, v5, a4);
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v346 = *this;
      v347 = (8 * a2) | 2;
      if (v347 > 0x7F)
      {
        *v5 = (8 * a2) | 0x82;
        v379 = (8 * a2) >> 7;
        if (v347 >> 14)
        {
          v348 = v5 + 2;
          do
          {
            *(v348 - 1) = v379 | 0x80;
            v421 = v379 >> 7;
            ++v348;
            v422 = v379 >> 14;
            v379 >>= 7;
          }
          while (v422);
          *(v348 - 1) = v421;
        }
        else
        {
          v5[1] = v379;
          v348 = v5 + 2;
        }
      }
      else
      {
        *v5 = v347;
        v348 = v5 + 1;
      }
      v423 = (*(uint64_t (**)(int *))(*(_QWORD *)v346 + 96))(v346);
      if (v423 > 0x7F)
      {
        *v348 = v423 | 0x80;
        v425 = v423 >> 7;
        if (v423 >> 14)
        {
          v424 = v348 + 2;
          do
          {
            *(v424 - 1) = v425 | 0x80;
            v426 = v425 >> 7;
            ++v424;
            v427 = v425 >> 14;
            v425 >>= 7;
          }
          while (v427);
          *(v424 - 1) = v426;
        }
        else
        {
          v348[1] = v425;
          v424 = v348 + 2;
        }
      }
      else
      {
        *v348 = v423;
        v424 = v348 + 1;
      }
      return (unsigned __int8 *)(*(uint64_t (**)(int *, _BYTE *, google::protobuf::io::EpsCopyOutputStream *))(*(_QWORD *)v346 + 112))(v346, v424, a4);
    case 12:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v339 = *this;
      if (*((char *)*this + 23) < 0)
      {
        v340 = *((_QWORD *)v339 + 1);
        if (v340 > 127)
          return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v339, v5);
      }
      else
      {
        v340 = *((unsigned __int8 *)*this + 23);
      }
      v374 = 8 * a2;
      v375 = 1;
      v376 = 2;
      v377 = 3;
      v378 = 4;
      if ((8 * a2) >> 28)
        v378 = 5;
      if (v374 >= 0x200000)
        v377 = v378;
      if (v374 >= 0x4000)
        v376 = v377;
      if (v374 >= 0x80)
        v375 = v376;
      if ((uint64_t)(*(_QWORD *)a4 + ~(unint64_t)&v5[v375] + 16) < v340)
        return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a4, a2, (uint64_t)v339, v5);
      v369 = v374 | 2;
      if ((v374 | 2) > 0x7F)
      {
        *v5 = v374 | 0x82;
        v370 = v374 >> 7;
        if (v369 >> 14)
        {
          v371 = v5 + 2;
          do
          {
            *(v371 - 1) = v370 | 0x80;
            v372 = v370 >> 7;
            ++v371;
            v419 = v370 >> 14;
            v370 >>= 7;
          }
          while (v419);
LABEL_727:
          *(v371 - 1) = v372;
        }
        else
        {
LABEL_635:
          v5[1] = v370;
          v371 = v5 + 2;
        }
      }
      else
      {
LABEL_633:
        *v5 = v369;
        v371 = v5 + 1;
      }
      *v371 = v340;
      v420 = v371 + 1;
      if (*((char *)v339 + 23) < 0)
        v339 = *(int **)v339;
      memcpy(v420, v339, v340);
      return (unsigned __int8 *)&v420[v340];
    case 13:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v337 = *(_DWORD *)this;
      v349 = 8 * a2;
      if ((8 * a2) > 0x7F)
      {
        *v5 = v349 | 0x80;
        v360 = v349 >> 7;
        if (v349 >> 14)
        {
          v332 = v5 + 2;
          do
          {
            *(v332 - 1) = v360 | 0x80;
            v396 = v360 >> 7;
            ++v332;
            v397 = v360 >> 14;
            v360 >>= 7;
          }
          while (v397);
          *(v332 - 1) = v396;
        }
        else
        {
          v5[1] = v360;
          v332 = v5 + 2;
        }
      }
      else
      {
        *v5 = v349;
        v332 = v5 + 1;
      }
      if (v337 <= 0x7F)
      {
LABEL_677:
        *v332 = v337;
        return (unsigned __int8 *)(v332 + 1);
      }
      *v332 = v337 | 0x80;
      v398 = v337 >> 7;
      if (!(v337 >> 14))
      {
        v332[1] = v398;
        return (unsigned __int8 *)(v332 + 2);
      }
      v5 = v332 + 2;
      do
      {
        *(v5 - 1) = v398 | 0x80;
        v411 = v398 >> 7;
        ++v5;
        v413 = v398 >> 14;
        v398 >>= 7;
      }
      while (v413);
LABEL_715:
      *(v5 - 1) = v411;
      return (unsigned __int8 *)v5;
    case 14:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v330 = *(int *)this;
      v350 = 8 * a2;
      if ((8 * a2) > 0x7F)
      {
        *v5 = v350 | 0x80;
        v361 = v350 >> 7;
        if (v350 >> 14)
        {
          v332 = v5 + 2;
          do
          {
            *(v332 - 1) = v361 | 0x80;
            v399 = v361 >> 7;
            ++v332;
            v400 = v361 >> 14;
            v361 >>= 7;
          }
          while (v400);
          *(v332 - 1) = v399;
        }
        else
        {
          v5[1] = v361;
          v332 = v5 + 2;
        }
      }
      else
      {
        *v5 = v350;
        v332 = v5 + 1;
      }
      if (v330 <= 0x7F)
      {
LABEL_684:
        *v332 = v330;
        return (unsigned __int8 *)(v332 + 1);
      }
      *v332 = v330 | 0x80;
      v382 = v330 >> 7;
      if (!(v330 >> 14))
      {
LABEL_686:
        v332[1] = v382;
        return (unsigned __int8 *)(v332 + 2);
      }
      v5 = v332 + 2;
      do
      {
        *(v5 - 1) = v382 | 0x80;
        v383 = v382 >> 7;
        ++v5;
        v414 = v382 >> 14;
        v382 >>= 7;
      }
      while (v414);
LABEL_718:
      *(v5 - 1) = v383;
      return (unsigned __int8 *)v5;
    case 15:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v324 = *(_DWORD *)this;
      v325 = (8 * a2) | 5;
      if (v325 > 0x7F)
      {
        *v5 = (8 * a2) | 0x85;
        v326 = (8 * a2) >> 7;
        if (v325 >> 14)
        {
          v327 = (unsigned int *)(v5 + 2);
          do
          {
            *((_BYTE *)v327 - 1) = v326 | 0x80;
            v328 = v326 >> 7;
            v327 = (unsigned int *)((char *)v327 + 1);
            v401 = v326 >> 14;
            v326 >>= 7;
          }
          while (v401);
LABEL_689:
          *((_BYTE *)v327 - 1) = v328;
        }
        else
        {
LABEL_600:
          v5[1] = v326;
          v327 = (unsigned int *)(v5 + 2);
        }
      }
      else
      {
LABEL_571:
        *v5 = v325;
        v327 = (unsigned int *)(v5 + 1);
      }
      *v327 = v324;
      return (unsigned __int8 *)(v327 + 1);
    case 16:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v12 = *this;
      v13 = (8 * a2) | 1;
      if (v13 > 0x7F)
      {
        *v5 = (8 * a2) | 0x81;
        v14 = (8 * a2) >> 7;
        if (v13 >> 14)
        {
          v15 = (int **)(v5 + 2);
          do
          {
            *((_BYTE *)v15 - 1) = v14 | 0x80;
            v16 = v14 >> 7;
            v15 = (int **)((char *)v15 + 1);
            v402 = v14 >> 14;
            v14 >>= 7;
          }
          while (v402);
LABEL_693:
          *((_BYTE *)v15 - 1) = v16;
        }
        else
        {
LABEL_602:
          v5[1] = v14;
          v15 = (int **)(v5 + 2);
        }
      }
      else
      {
LABEL_575:
        *v5 = v13;
        v15 = (int **)(v5 + 1);
      }
      *v15 = v12;
      return (unsigned __int8 *)(v15 + 1);
    case 17:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v351 = *(_DWORD *)this;
      v352 = 8 * a2;
      if ((8 * a2) > 0x7F)
      {
        *v5 = v352 | 0x80;
        v362 = v352 >> 7;
        if (v352 >> 14)
        {
          v332 = v5 + 2;
          do
          {
            *(v332 - 1) = v362 | 0x80;
            v403 = v362 >> 7;
            ++v332;
            v404 = v362 >> 14;
            v362 >>= 7;
          }
          while (v404);
          *(v332 - 1) = v403;
        }
        else
        {
          v5[1] = v362;
          v332 = v5 + 2;
        }
      }
      else
      {
        *v5 = v352;
        v332 = v5 + 1;
      }
      v405 = (2 * v351) ^ (v351 >> 31);
      if (v405 <= 0x7F)
      {
        *v332 = v405;
        return (unsigned __int8 *)(v332 + 1);
      }
      *v332 = v405 | 0x80;
      v406 = v405 >> 7;
      if (!(v405 >> 14))
      {
        v332[1] = v406;
        return (unsigned __int8 *)(v332 + 2);
      }
      v5 = v332 + 2;
      do
      {
        *(v5 - 1) = v406 | 0x80;
        v415 = v406 >> 7;
        ++v5;
        v416 = v406 >> 14;
        v406 >>= 7;
      }
      while (v416);
      *(v5 - 1) = v415;
      return (unsigned __int8 *)v5;
    case 18:
      if (*(_QWORD *)a4 <= (unint64_t)v5)
        v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
      v353 = (uint64_t)*this;
      v354 = 8 * a2;
      if ((8 * a2) > 0x7F)
      {
        *v5 = v354 | 0x80;
        v363 = v354 >> 7;
        if (v354 >> 14)
        {
          v332 = v5 + 2;
          do
          {
            *(v332 - 1) = v363 | 0x80;
            v407 = v363 >> 7;
            ++v332;
            v408 = v363 >> 14;
            v363 >>= 7;
          }
          while (v408);
          *(v332 - 1) = v407;
        }
        else
        {
          v5[1] = v363;
          v332 = v5 + 2;
        }
      }
      else
      {
        *v5 = v354;
        v332 = v5 + 1;
      }
      v409 = (2 * v353) ^ (v353 >> 63);
      if (v409 > 0x7F)
      {
        *v332 = v409 | 0x80;
        v410 = v409 >> 7;
        if (v409 >> 14)
        {
          v5 = v332 + 2;
          do
          {
            *(v5 - 1) = v410 | 0x80;
            v417 = v410 >> 7;
            ++v5;
            v418 = v410 >> 14;
            v410 >>= 7;
          }
          while (v418);
          *(v5 - 1) = v417;
        }
        else
        {
          v332[1] = v410;
          return (unsigned __int8 *)(v332 + 2);
        }
      }
      else
      {
        *v332 = v409;
        return (unsigned __int8 *)(v332 + 1);
      }
      return (unsigned __int8 *)v5;
    default:
      return (unsigned __int8 *)v5;
  }
}

void sub_1BF83F360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::ByteSize(google::protobuf::internal::ExtensionSet *this)
{
  int *v1;
  uint64_t v2;
  int *v3;
  int **v4;
  int v5;
  int *v6;
  int *v7;
  int *v8;
  unint64_t v9;
  int *v10;
  int *v11;
  BOOL v12;

  v1 = (int *)*((_QWORD *)this + 2);
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    if (*((_WORD *)this + 5))
    {
      v2 = 0;
      v3 = &v1[8 * *((unsigned __int16 *)this + 5)];
      do
      {
        v4 = (int **)(v1 + 2);
        v5 = *v1;
        v1 += 8;
        v2 += google::protobuf::internal::ExtensionSet::Extension::ByteSize(v4, v5);
      }
      while (v1 != v3);
      return v2;
    }
    return 0;
  }
  v8 = *(int **)v1;
  v6 = v1 + 2;
  v7 = v8;
  if (v8 == v6)
    return 0;
  v2 = 0;
  do
  {
    v9 = google::protobuf::internal::ExtensionSet::Extension::ByteSize((int **)v7 + 5, v7[8]);
    v10 = (int *)*((_QWORD *)v7 + 1);
    if (v10)
    {
      do
      {
        v11 = v10;
        v10 = *(int **)v10;
      }
      while (v10);
    }
    else
    {
      do
      {
        v11 = (int *)*((_QWORD *)v7 + 2);
        v12 = *(_QWORD *)v11 == (_QWORD)v7;
        v7 = v11;
      }
      while (!v12);
    }
    v2 += v9;
    v7 = v11;
  }
  while (v11 != v6);
  return v2;
}

unint64_t google::protobuf::internal::ExtensionSet::Extension::ByteSize(int **this, int a2)
{
  int v4;
  unsigned __int8 v5;
  std::string *v6;
  std::string *v7;
  unint64_t v8;
  int v9;
  unsigned __int8 v10;
  std::string *v11;
  int v12;
  std::string *v13;
  int v14;
  char v15;
  std::string *v16;
  unint64_t v17;
  unsigned int v18;
  char v19;
  std::string *v20;
  uint64_t v21;
  int *v22;
  int v23;
  int *v24;
  int v25;
  int *v26;
  int *v27;
  int v28;
  int *v29;
  int v30;
  int *v31;
  int v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  int v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  int v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  int v51;
  int v52;
  int *v53;
  int v54;
  int v55;
  int *v56;
  int v57;
  int v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  int v82;
  int v83;
  int *v84;
  int v85;
  int v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;
  int v91;
  int v92;
  int *v93;
  int *v94;
  int v95;
  int v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  int v102;
  int v103;
  char v104;
  std::string v105[2];

  if (*((_BYTE *)this + 9))
  {
    v4 = *((unsigned __int8 *)this + 8);
    v5 = v4 - 19;
    if (*((_BYTE *)this + 11))
    {
      if ((v4 - 19) <= 0xEDu)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v105, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v6 = google::protobuf::internal::LogMessage::operator<<(v105, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v104, (const char **)&v6->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v105[0].__r_.__value_.__l.__data_);
      }
      switch(v4)
      {
        case 1:
        case 6:
        case 16:
          v21 = 8 * **this;
          goto LABEL_63;
        case 2:
        case 7:
        case 15:
          v21 = 4 * **this;
          goto LABEL_63;
        case 3:
          v27 = *this;
          if (**this < 1)
            goto LABEL_7;
          v21 = 0;
          v28 = 0;
          do
          {
            v21 += (9 * (__clz(*(_QWORD *)google::protobuf::RepeatedField<long long>::Get(v27, v28++) | 1) ^ 0x3F) + 73) >> 6;
            v27 = *this;
          }
          while (v28 < **this);
          goto LABEL_63;
        case 4:
          v29 = *this;
          if (**this < 1)
            goto LABEL_7;
          v21 = 0;
          v30 = 0;
          do
          {
            v21 += (9
                  * (__clz(*(_QWORD *)google::protobuf::RepeatedField<unsigned long long>::Get(v29, v30++) | 1) ^ 0x3F)
                  + 73) >> 6;
            v29 = *this;
          }
          while (v30 < **this);
          goto LABEL_63;
        case 5:
          v31 = *this;
          if (**this < 1)
            goto LABEL_7;
          v21 = 0;
          v32 = 0;
          do
          {
            v33 = (int *)google::protobuf::RepeatedField<int>::Get(v31, v32);
            v34 = (9 * (__clz(*v33 | 1) ^ 0x1F) + 73) >> 6;
            if (*v33 >= 0)
              v35 = v34;
            else
              v35 = 10;
            v21 += v35;
            ++v32;
            v31 = *this;
          }
          while (v32 < **this);
          goto LABEL_63;
        case 8:
          v21 = **this;
          goto LABEL_63;
        case 9:
        case 10:
        case 11:
        case 12:
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v105, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 1606);
          v7 = google::protobuf::internal::LogMessage::operator<<(v105, "Non-primitive types can't be packed.");
          google::protobuf::internal::LogFinisher::operator=((int)&v104, (const char **)&v7->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v105[0].__r_.__value_.__l.__data_);
          goto LABEL_7;
        case 13:
          v22 = *this;
          if (**this < 1)
            goto LABEL_7;
          v21 = 0;
          v23 = 0;
          do
          {
            v21 += (9 * (__clz(*(_DWORD *)google::protobuf::RepeatedField<unsigned int>::Get(v22, v23++) | 1) ^ 0x1F)
                  + 73) >> 6;
            v22 = *this;
          }
          while (v23 < **this);
          goto LABEL_63;
        case 14:
          v36 = *this;
          if (**this < 1)
            goto LABEL_7;
          v21 = 0;
          v37 = 0;
          do
          {
            v38 = (int *)google::protobuf::RepeatedField<int>::Get(v36, v37);
            v39 = (9 * (__clz(*v38 | 1) ^ 0x1F) + 73) >> 6;
            if (*v38 >= 0)
              v40 = v39;
            else
              v40 = 10;
            v21 += v40;
            ++v37;
            v36 = *this;
          }
          while (v37 < **this);
          goto LABEL_63;
        case 17:
          v24 = *this;
          if (**this < 1)
            goto LABEL_7;
          v21 = 0;
          v25 = 0;
          do
          {
            v26 = (int *)google::protobuf::RepeatedField<int>::Get(v24, v25);
            v21 += (9 * (__clz((2 * *v26) ^ (*v26 >> 31) | 1) ^ 0x1F) + 73) >> 6;
            ++v25;
            v24 = *this;
          }
          while (v25 < **this);
          goto LABEL_63;
        case 18:
          v41 = *this;
          if (**this < 1)
            goto LABEL_7;
          v21 = 0;
          v42 = 0;
          do
          {
            v43 = (uint64_t *)google::protobuf::RepeatedField<long long>::Get(v41, v42);
            v21 += (9 * (__clz((2 * *v43) ^ (*v43 >> 63) | 1) ^ 0x3F) + 73) >> 6;
            ++v42;
            v41 = *this;
          }
          while (v42 < **this);
LABEL_63:
          *((_DWORD *)this + 3) = v21;
          v44 = v21 + ((9 * (__clz((8 * a2) | 3) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
          if (v21)
            v8 = v44;
          else
            v8 = 0;
          break;
        default:
LABEL_7:
          v8 = 0;
          *((_DWORD *)this + 3) = 0;
          break;
      }
    }
    else
    {
      if ((v4 - 19) > 0xEDu)
      {
        v14 = *((unsigned __int8 *)this + 8);
      }
      else
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v105, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v13 = google::protobuf::internal::LogMessage::operator<<(v105, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v104, (const char **)&v13->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v105[0].__r_.__value_.__l.__data_);
        v14 = *((unsigned __int8 *)this + 8);
        v5 = v14 - 19;
      }
      v15 = v4 == 10;
      if (v5 <= 0xEDu)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v105, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
        v16 = google::protobuf::internal::LogMessage::operator<<(v105, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v104, (const char **)&v16->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v105[0].__r_.__value_.__l.__data_);
      }
      v17 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << v15;
      switch(v14)
      {
        case 1:
        case 6:
        case 16:
          v18 = v17 + 8;
          goto LABEL_27;
        case 2:
        case 7:
        case 15:
          v18 = v17 + 4;
LABEL_27:
          v8 = v18 * (unint64_t)**this;
          break;
        case 3:
          v50 = *this;
          v51 = **this;
          v8 = v17 * (unint64_t)v51;
          if (v51 >= 1)
          {
            v52 = 0;
            do
            {
              v8 += (9 * (__clz(*(_QWORD *)google::protobuf::RepeatedField<long long>::Get(v50, v52++) | 1) ^ 0x3F)
                   + 73) >> 6;
              v50 = *this;
            }
            while (v52 < **this);
          }
          break;
        case 4:
          v53 = *this;
          v54 = **this;
          v8 = v17 * (unint64_t)v54;
          if (v54 >= 1)
          {
            v55 = 0;
            do
            {
              v8 += (9
                   * (__clz(*(_QWORD *)google::protobuf::RepeatedField<unsigned long long>::Get(v53, v55++) | 1) ^ 0x3F)
                   + 73) >> 6;
              v53 = *this;
            }
            while (v55 < **this);
          }
          break;
        case 5:
          v56 = *this;
          v57 = **this;
          v8 = v17 * (unint64_t)v57;
          if (v57 >= 1)
          {
            v58 = 0;
            do
            {
              v59 = (int *)google::protobuf::RepeatedField<int>::Get(v56, v58);
              v60 = (9 * (__clz(*v59 | 1) ^ 0x1F) + 73) >> 6;
              if (*v59 >= 0)
                v61 = v60;
              else
                v61 = 10;
              v8 += v61;
              ++v58;
              v56 = *this;
            }
            while (v58 < **this);
          }
          break;
        case 8:
          v8 = **this + **this * (unint64_t)v17;
          break;
        case 9:
          v62 = (uint64_t)*this;
          v63 = (*this)[2];
          v8 = v17 * (unint64_t)v63;
          if (v63 >= 1)
          {
            v64 = 0;
            do
            {
              v65 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v62, v64);
              v66 = *(unsigned __int8 *)(v65 + 23);
              if ((v66 & 0x80u) != 0)
                v66 = *(_QWORD *)(v65 + 8);
              v8 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6);
              ++v64;
              v62 = (uint64_t)*this;
            }
            while (v64 < (*this)[2]);
          }
          break;
        case 10:
          v67 = (uint64_t)*this;
          v68 = (*this)[2];
          v8 = v17 * (unint64_t)v68;
          if (v68 >= 1)
          {
            v69 = 0;
            do
            {
              v70 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(v67, v69);
              v8 += (*(uint64_t (**)(uint64_t))(*(_QWORD *)v70 + 88))(v70);
              ++v69;
              v67 = (uint64_t)*this;
            }
            while (v69 < (*this)[2]);
          }
          break;
        case 11:
          v71 = (uint64_t)*this;
          v72 = (*this)[2];
          v8 = v17 * (unint64_t)v72;
          if (v72 >= 1)
          {
            v73 = 0;
            do
            {
              v74 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(v71, v73);
              v75 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v74 + 88))(v74);
              v8 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6);
              ++v73;
              v71 = (uint64_t)*this;
            }
            while (v73 < (*this)[2]);
          }
          break;
        case 12:
          v76 = (uint64_t)*this;
          v77 = (*this)[2];
          v8 = v17 * (unint64_t)v77;
          if (v77 >= 1)
          {
            v78 = 0;
            do
            {
              v79 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>(v76, v78);
              v80 = *(unsigned __int8 *)(v79 + 23);
              if ((v80 & 0x80u) != 0)
                v80 = *(_QWORD *)(v79 + 8);
              v8 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6);
              ++v78;
              v76 = (uint64_t)*this;
            }
            while (v78 < (*this)[2]);
          }
          break;
        case 13:
          v81 = *this;
          v82 = **this;
          v8 = v17 * (unint64_t)v82;
          if (v82 >= 1)
          {
            v83 = 0;
            do
            {
              v8 += (9 * (__clz(*(_DWORD *)google::protobuf::RepeatedField<unsigned int>::Get(v81, v83++) | 1) ^ 0x1F)
                   + 73) >> 6;
              v81 = *this;
            }
            while (v83 < **this);
          }
          break;
        case 14:
          v84 = *this;
          v85 = **this;
          v8 = v17 * (unint64_t)v85;
          if (v85 >= 1)
          {
            v86 = 0;
            do
            {
              v87 = (int *)google::protobuf::RepeatedField<int>::Get(v84, v86);
              v88 = (9 * (__clz(*v87 | 1) ^ 0x1F) + 73) >> 6;
              if (*v87 >= 0)
                v89 = v88;
              else
                v89 = 10;
              v8 += v89;
              ++v86;
              v84 = *this;
            }
            while (v86 < **this);
          }
          break;
        case 17:
          v90 = *this;
          v91 = **this;
          v8 = v17 * (unint64_t)v91;
          if (v91 >= 1)
          {
            v92 = 0;
            do
            {
              v93 = (int *)google::protobuf::RepeatedField<int>::Get(v90, v92);
              v8 += (9 * (__clz((2 * *v93) ^ (*v93 >> 31) | 1) ^ 0x1F) + 73) >> 6;
              ++v92;
              v90 = *this;
            }
            while (v92 < **this);
          }
          break;
        case 18:
          v94 = *this;
          v95 = **this;
          v8 = v17 * (unint64_t)v95;
          if (v95 >= 1)
          {
            v96 = 0;
            do
            {
              v97 = (uint64_t *)google::protobuf::RepeatedField<long long>::Get(v94, v96);
              v8 += (9 * (__clz((2 * *v97) ^ (*v97 >> 63) | 1) ^ 0x3F) + 73) >> 6;
              ++v96;
              v94 = *this;
            }
            while (v96 < **this);
          }
          break;
        default:
          return 0;
      }
    }
  }
  else if ((*((_BYTE *)this + 10) & 1) != 0)
  {
    return 0;
  }
  else
  {
    v9 = *((unsigned __int8 *)this + 8);
    v10 = v9 - 19;
    if ((v9 - 19) > 0xEDu)
    {
      v12 = *((unsigned __int8 *)this + 8);
    }
    else
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v105, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v11 = google::protobuf::internal::LogMessage::operator<<(v105, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v104, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v105[0].__r_.__value_.__l.__data_);
      v12 = *((unsigned __int8 *)this + 8);
      v10 = v12 - 19;
    }
    v19 = v9 == 10;
    if (v10 <= 0xEDu)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v105, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v20 = google::protobuf::internal::LogMessage::operator<<(v105, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v104, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v105[0].__r_.__value_.__l.__data_);
    }
    v8 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << v19;
    switch(v12)
    {
      case 1:
      case 6:
      case 16:
        v8 += 8;
        return v8;
      case 2:
      case 7:
      case 15:
        v8 += 4;
        return v8;
      case 3:
      case 4:
        v46 = (uint64_t)*this;
        goto LABEL_138;
      case 5:
      case 14:
        v47 = (9 * (__clz(*(_DWORD *)this | 1) ^ 0x1F) + 73) >> 6;
        if (*(int *)this >= 0)
          v48 = v47;
        else
          v48 = 10;
        v8 += v48;
        return v8;
      case 8:
        return ++v8;
      case 9:
      case 12:
        v49 = *((_QWORD *)*this + 1);
        if (*((char *)*this + 23) >= 0)
          v49 = *((unsigned __int8 *)*this + 23);
        v8 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
        return v8;
      case 10:
        v8 += (*(uint64_t (**)(int *))(*(_QWORD *)*this + 88))(*this);
        return v8;
      case 11:
        v98 = *(_QWORD *)*this;
        if ((*((_BYTE *)this + 10) & 0x10) != 0)
        {
          v103 = (*(uint64_t (**)(void))(v98 + 80))();
          v100 = (9 * (__clz(v103 | 1) ^ 0x1F) + 73) >> 6;
          v101 = v8 + v103;
        }
        else
        {
          v99 = (*(uint64_t (**)(void))(v98 + 88))();
          v100 = (9 * (__clz(v99 | 1) ^ 0x1F) + 73) >> 6;
          v101 = v99 + v8;
        }
        return v101 + v100;
      case 13:
        v102 = *(_DWORD *)this;
        goto LABEL_136;
      case 17:
        v102 = (2 * *(_DWORD *)this) ^ (*(int *)this >> 31);
LABEL_136:
        v8 += (9 * (__clz(v102 | 1) ^ 0x1F) + 73) >> 6;
        break;
      case 18:
        v46 = (2 * (_QWORD)*this) ^ ((uint64_t)*this >> 63);
LABEL_138:
        v8 += (9 * (__clz(v46 | 1) ^ 0x3F) + 73) >> 6;
        break;
      default:
        return v8;
    }
  }
  return v8;
}

void sub_1BF83FFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::Extension::Free(google::protobuf::internal::ArenaImpl ***this)
{
  uint64_t v2;
  std::string *v3;
  uint64_t v4;
  std::string *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  google::protobuf::internal::ArenaImpl **v9;
  char v10;
  std::string v11[2];

  v2 = *((unsigned __int8 *)this + 8);
  if (*((_BYTE *)this + 9))
  {
    if ((v2 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v3 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v3->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    switch(v2)
    {
      case 1:
        if (*this)
        {
          v4 = google::protobuf::RepeatedField<double>::~RepeatedField();
          goto LABEL_29;
        }
        break;
      case 2:
        if (*this)
        {
          v4 = google::protobuf::RepeatedField<float>::~RepeatedField();
          goto LABEL_29;
        }
        break;
      case 3:
      case 16:
      case 18:
        if (*this)
        {
          v4 = google::protobuf::RepeatedField<long long>::~RepeatedField();
          goto LABEL_29;
        }
        break;
      case 4:
      case 6:
        if (*this)
        {
          v4 = google::protobuf::RepeatedField<unsigned long long>::~RepeatedField();
          goto LABEL_29;
        }
        break;
      case 5:
      case 14:
      case 15:
      case 17:
        if (*this)
        {
          v4 = google::protobuf::RepeatedField<int>::~RepeatedField(*this);
          goto LABEL_29;
        }
        break;
      case 7:
      case 13:
        if (*this)
        {
          v4 = google::protobuf::RepeatedField<unsigned int>::~RepeatedField();
          goto LABEL_29;
        }
        break;
      case 8:
        if (*this)
        {
          v4 = google::protobuf::RepeatedField<BOOL>::~RepeatedField();
LABEL_29:
          v8 = 0x1080C4057E67DB5;
          goto LABEL_35;
        }
        break;
      case 9:
      case 12:
        if (*this)
        {
          v4 = google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(*this);
          goto LABEL_34;
        }
        break;
      case 10:
      case 11:
        v9 = *this;
        if (v9)
        {
          google::protobuf::internal::RepeatedPtrFieldBase::Destroy<google::protobuf::RepeatedPtrField<google::protobuf::Field>::TypeHandler>(v9);
          google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v9);
LABEL_34:
          v8 = 0x1020C4014030ADELL;
          goto LABEL_35;
        }
        break;
      default:
        return;
    }
  }
  else
  {
    if ((v2 - 19) <= 0xFFFFFFED)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/extension_set.cc", 60);
      v5 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    }
    v6 = google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[v2];
    if (v6 == 10)
    {
      if (*this)
        (*((void (**)(google::protobuf::internal::ArenaImpl **))**this + 1))(*this);
    }
    else if (v6 == 9)
    {
      v7 = (uint64_t)*this;
      if (v7)
      {
        if (*(char *)(v7 + 23) < 0)
          operator delete(*(void **)v7);
        v4 = v7;
        v8 = 0x1012C40EC159624;
LABEL_35:
        MEMORY[0x1C3B8D890](v4, v8);
      }
    }
  }
}

void sub_1BF840220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::FindOrNullInLargeMap(google::protobuf::internal::ExtensionSet *this, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;

  if (*((unsigned __int16 *)this + 4) <= 0x100u)
    google::protobuf::internal::ExtensionSet::FindOrNullInLargeMap();
  v2 = *((_QWORD *)this + 2);
  v5 = *(_QWORD *)(v2 + 8);
  v3 = v2 + 8;
  v4 = v5;
  if (!v5)
    return 0;
  v6 = v3;
  do
  {
    v7 = *(_DWORD *)(v4 + 32);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (uint64_t *)v4;
    else
      v9 = (uint64_t *)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v3)
    return 0;
  v10 = *(_DWORD *)(v6 + 32);
  v11 = v6 + 40;
  if (v10 <= a2)
    return v11;
  else
    return 0;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;

  if (*((unsigned __int16 *)this + 4) <= 0x100u)
    google::protobuf::internal::ExtensionSet::FindOrNullInLargeMap();
  v2 = *((_QWORD *)this + 2);
  v5 = *(_QWORD *)(v2 + 8);
  v3 = v2 + 8;
  v4 = v5;
  if (!v5)
    return 0;
  v6 = v3;
  do
  {
    v7 = *(_DWORD *)(v4 + 32);
    v8 = v7 < a2;
    if (v7 >= a2)
      v9 = (uint64_t *)v4;
    else
      v9 = (uint64_t *)(v4 + 8);
    if (!v8)
      v6 = v4;
    v4 = *v9;
  }
  while (*v9);
  if (v6 == v3)
    return 0;
  v10 = *(_DWORD *)(v6 + 32);
  v11 = v6 + 40;
  if (v10 <= a2)
    return v11;
  else
    return 0;
}

void google::protobuf::internal::GeneratedExtensionFinder::~GeneratedExtensionFinder(google::protobuf::internal::GeneratedExtensionFinder *this)
{
  JUMPOUT(0x1C3B8D890);
}

double google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(uint64_t *a1)
{
  google::protobuf::internal::ArenaImpl *v2;
  uint64_t AlignedAndAddCleanup;
  double result;

  v2 = (google::protobuf::internal::ArenaImpl *)(*a1 & 0xFFFFFFFFFFFFFFFELL);
  if ((*a1 & 1) != 0)
  {
    v2 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)v2 + 3);
    if (v2)
      goto LABEL_3;
LABEL_7:
    AlignedAndAddCleanup = operator new();
    goto LABEL_8;
  }
  if (!v2)
    goto LABEL_7;
LABEL_3:
  if (*((_QWORD *)v2 + 14))
  AlignedAndAddCleanup = (uint64_t)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v2, 0x20uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::Container>);
LABEL_8:
  result = 0.0;
  *(_OWORD *)AlignedAndAddCleanup = 0u;
  *(_OWORD *)(AlignedAndAddCleanup + 16) = 0u;
  *a1 = AlignedAndAddCleanup | 1;
  *(_QWORD *)(AlignedAndAddCleanup + 24) = v2;
  return result;
}

void google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::~()::$_0>(google::protobuf::internal::ArenaImpl ***a1, google::protobuf::internal::ArenaImpl ****a2)
{
  google::protobuf::internal::ArenaImpl ***v3;
  google::protobuf::internal::ArenaImpl **v4;
  google::protobuf::internal::ArenaImpl ****v5;
  BOOL v6;

  if (a1 != (google::protobuf::internal::ArenaImpl ***)a2)
  {
    v3 = a1;
    do
    {
      google::protobuf::internal::ExtensionSet::Extension::Free(v3 + 5);
      v4 = v3[1];
      if (v4)
      {
        do
        {
          v5 = (google::protobuf::internal::ArenaImpl ****)v4;
          v4 = (google::protobuf::internal::ArenaImpl **)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          v5 = (google::protobuf::internal::ArenaImpl ****)v3[2];
          v6 = *v5 == v3;
          v3 = (google::protobuf::internal::ArenaImpl ***)v5;
        }
        while (!v6);
      }
      v3 = (google::protobuf::internal::ArenaImpl ***)v5;
    }
    while (v5 != a2);
  }
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF840508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Mutable<google::protobuf::RepeatedPtrField<google::protobuf::MessageLite>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1560);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1561);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF8405E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal::ExtensionSet *google::protobuf::internal::ExtensionSet::ForEach<std::__map_iterator<std::__tree_iterator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__tree_node<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,void *> *,long>>,google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet const&)::$_0>(_QWORD *a1, _QWORD *a2, google::protobuf::internal::ExtensionSet *this)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  BOOL v8;

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(this, *((_DWORD *)v5 + 8), (const google::protobuf::internal::ExtensionSet::Extension *)(v5 + 5));
      v6 = (_QWORD *)v5[1];
      if (v6)
      {
        do
        {
          v7 = v6;
          v6 = (_QWORD *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (_QWORD *)v5[2];
          v8 = *v7 == (_QWORD)v5;
          v5 = v7;
        }
        while (!v8);
      }
      v5 = v7;
    }
    while (v7 != a2);
  }
  return this;
}

uint64_t **std::__tree<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>>>::__emplace_unique_key_args<int,std::pair<int const,google::protobuf::internal::ExtensionSet::Extension>>(uint64_t **a1, int *a2, _OWORD *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  int v7;
  uint64_t **v8;
  int v9;
  uint64_t *v10;
  __int128 v11;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    v7 = *a2;
    while (1)
    {
      while (1)
      {
        v8 = (uint64_t **)v5;
        v9 = *((_DWORD *)v5 + 8);
        if (v7 >= v9)
          break;
        v5 = *v8;
        v6 = v8;
        if (!*v8)
          goto LABEL_10;
      }
      if (v9 >= v7)
        break;
      v5 = v8[1];
      if (!v5)
      {
        v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    v8 = a1 + 1;
LABEL_10:
    v10 = (uint64_t *)operator new(0x40uLL);
    v11 = a3[1];
    *((_OWORD *)v10 + 2) = *a3;
    *((_OWORD *)v10 + 3) = v11;
    std::__tree<std::string>::__insert_node_at(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

uint64_t std::__tree<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::__map_value_compare<int,std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>,std::less<int>,true>,std::allocator<std::__value_type<int,google::protobuf::internal::ExtensionSet::Extension>>>::__erase_unique<int>(uint64_t a1, int *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  uint64_t *v7;

  v2 = *(_QWORD *)(a1 + 8);
  if (!v2)
    return 0;
  v3 = *a2;
  v4 = a1 + 8;
  do
  {
    v5 = *(_DWORD *)(v2 + 32);
    v6 = v5 < v3;
    if (v5 >= v3)
      v7 = (uint64_t *)v2;
    else
      v7 = (uint64_t *)(v2 + 8);
    if (!v6)
      v4 = v2;
    v2 = *v7;
  }
  while (*v7);
  if (v4 == a1 + 8 || v3 < *(_DWORD *)(v4 + 32))
    return 0;
  std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__remove_node_pointer((uint64_t **)a1, (uint64_t *)v4);
  operator delete((void *)v4);
  return 1;
}

uint64_t google::protobuf::internal::LookUpEnumValue(uint64_t a1, unint64_t a2, void *__s2, int64_t a4, _DWORD *a5)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  size_t v14;
  int v15;
  BOOL v16;

  if (!a2)
    return 0;
  v8 = a2;
  v9 = a1;
  v10 = a1 + 24 * a2;
  do
  {
    v11 = v8 >> 1;
    v12 = v9 + 24 * (v8 >> 1);
    v13 = *(_QWORD *)(v12 + 8);
    if (v13 >= a4)
      v14 = a4;
    else
      v14 = *(_QWORD *)(v12 + 8);
    v15 = memcmp(*(const void **)v12, __s2, v14);
    if (v15 < 0 || (v13 < a4 ? (v16 = v15 == 0) : (v16 = 0), v16))
    {
      v9 = v12 + 24;
      v11 = v8 + ~v11;
    }
    v8 = v11;
  }
  while (v11);
  if (v9 == v10 || *(_QWORD *)(v9 + 8) != a4 || a4 >= 1 && *(void **)v9 != __s2 && memcmp(*(const void **)v9, __s2, a4))
    return 0;
  *a5 = *(_DWORD *)(v9 + 16);
  return 1;
}

uint64_t google::protobuf::internal::LookUpEnumName(uint64_t a1, int *a2, unint64_t a3, int a4)
{
  int *v4;
  int *v5;
  int *v6;
  int v7;
  int *v8;

  if (!a3)
    return 0xFFFFFFFFLL;
  v4 = &a2[a3];
  v5 = a2;
  do
  {
    v6 = &v5[a3 >> 1];
    v7 = a4;
    if (*v6 != -1)
      v7 = *(_DWORD *)(a1 + 24 * *v6 + 16);
    v8 = v6 + 1;
    if (v7 >= a4)
      a3 >>= 1;
    else
      a3 += ~(a3 >> 1);
    if (v7 < a4)
      v5 = v8;
  }
  while (a3);
  if (v5 != v4 && *(_DWORD *)(a1 + 24 * *v5 + 16) == a4)
    return (unint64_t)((char *)v5 - (char *)a2) >> 2;
  else
    return 0xFFFFFFFFLL;
}

uint64_t google::protobuf::internal::InitializeEnumStrings(uint64_t a1, int *a2, char *a3, void (*__dst)(const void *))
{
  char *v5;
  int v8;
  uint64_t v9;

  if (a3)
  {
    v5 = a3;
    do
    {
      v8 = *a2++;
      v9 = a1 + 24 * v8;
      if (*(_QWORD *)v9)
      {
        std::string::basic_string[abi:ne180100](__dst, *(void **)v9, *(_QWORD *)(v9 + 8));
      }
      else
      {
        *(_QWORD *)__dst = 0;
        *((_QWORD *)__dst + 1) = 0;
        *((_QWORD *)__dst + 2) = 0;
      }
      google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyString, __dst, a3);
      __dst = (void (*)(const void *))((char *)__dst + 24);
      --v5;
    }
    while (v5);
  }
  return 1;
}

void google::protobuf::io::CodedInputStream::~CodedInputStream(google::protobuf::io::CodedInputStream *this)
{
  if (*((_QWORD *)this + 2))
    google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition((uint64_t)this);
}

uint64_t google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(uint64_t this)
{
  uint64_t v1;
  unsigned int v2;

  if (*(_DWORD *)(this + 28) + *(_DWORD *)(this + 44) + *(_DWORD *)(this + 8) - *(_DWORD *)this >= 1)
  {
    v1 = this;
    this = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(this + 16) + 24))(*(_QWORD *)(this + 16));
    v2 = *(_DWORD *)(v1 + 24) - *(_DWORD *)(v1 + 44) + *(_QWORD *)v1 - *(_DWORD *)(v1 + 8);
    *(_QWORD *)(v1 + 8) = *(_QWORD *)v1;
    *(_DWORD *)(v1 + 44) = 0;
    *(_QWORD *)(v1 + 24) = v2;
  }
  return this;
}

uint64_t google::protobuf::io::CodedInputStream::PushLimit(google::protobuf::io::CodedInputStream *this, int a2)
{
  uint64_t result;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  int v13;

  result = *((unsigned int *)this + 10);
  if ((a2 & 0x80000000) == 0)
  {
    v4 = *((_DWORD *)this + 6);
    v5 = *((_QWORD *)this + 1);
    v6 = *((int *)this + 11);
    v7 = v4 - v6 + *(_DWORD *)this - v5;
    if ((v7 ^ 0x7FFFFFFF) >= a2 && (int)result - v7 > a2)
    {
      v9 = v7 + a2;
      *((_DWORD *)this + 10) = v9;
      v10 = v5 + v6;
      *((_QWORD *)this + 1) = v10;
      v11 = *((_DWORD *)this + 12);
      if (v11 >= v9)
        v11 = v9;
      v12 = __OFSUB__(v4, v11);
      v13 = v4 - v11;
      if ((v13 < 0) ^ v12 | (v13 == 0))
        v13 = 0;
      else
        *((_QWORD *)this + 1) = v10 - v13;
      *((_DWORD *)this + 11) = v13;
    }
  }
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::PopLimit(uint64_t this, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  BOOL v6;
  int v7;

  *(_DWORD *)(this + 40) = a2;
  v2 = *(_DWORD *)(this + 48);
  v3 = *(_QWORD *)(this + 8) + *(int *)(this + 44);
  *(_QWORD *)(this + 8) = v3;
  if (v2 >= a2)
    v4 = a2;
  else
    v4 = v2;
  v5 = *(_DWORD *)(this + 24);
  v6 = __OFSUB__(v5, v4);
  v7 = v5 - v4;
  if ((v7 < 0) ^ v6 | (v7 == 0))
    v7 = 0;
  else
    *(_QWORD *)(this + 8) = v3 - v7;
  *(_DWORD *)(this + 44) = v7;
  *(_BYTE *)(this + 36) = 0;
  return this;
}

uint64_t google::protobuf::io::CodedInputStream::BytesUntilLimit(google::protobuf::io::CodedInputStream *this)
{
  int v1;

  v1 = *((_DWORD *)this + 10);
  if (v1 == 0x7FFFFFFF)
    return 0xFFFFFFFFLL;
  else
    return (v1 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this);
}

void google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(google::protobuf::io::CodedInputStream *this)
{
  std::string *v2;
  std::string *v3;
  std::string *v4;
  char v5;
  std::string v6[2];

  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 193);
  v2 = google::protobuf::internal::LogMessage::operator<<(v6, "A protocol message was rejected because it was too big (more than ");
  v3 = google::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 12));
  v4 = google::protobuf::internal::LogMessage::operator<<(v3, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in third_party/protobuf/src/google/protobuf/io/coded_stream.h.");
  google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
}

void sub_1BF840BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::SkipFallback(google::protobuf::io::CodedInputStream *this, int a2, int a3)
{
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  int v8;

  if (*((int *)this + 11) < 1)
  {
    v5 = (a2 - a3);
    *(_QWORD *)this = 0;
    *((_QWORD *)this + 1) = 0;
    v6 = *((_DWORD *)this + 12);
    if (v6 >= *((_DWORD *)this + 10))
      v6 = *((_DWORD *)this + 10);
    v7 = v6 - *((_DWORD *)this + 6);
    if (v7 >= (int)v5)
    {
      if (((*(uint64_t (**)(_QWORD, uint64_t))(**((_QWORD **)this + 2) + 32))(*((_QWORD *)this + 2), v5) & 1) != 0)
      {
        *((_DWORD *)this + 6) += v5;
        return 1;
      }
      else
      {
        v8 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 2) + 40))(*((_QWORD *)this + 2));
        result = 0;
        *((_DWORD *)this + 6) = v8;
      }
    }
    else
    {
      if (v7 >= 1)
      {
        *((_DWORD *)this + 6) = v6;
        (*(void (**)(_QWORD))(**((_QWORD **)this + 2) + 32))(*((_QWORD *)this + 2));
      }
      return 0;
    }
  }
  else
  {
    result = 0;
    *(_QWORD *)this += a3;
  }
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::Refresh(google::protobuf::io::CodedInputStream *this)
{
  std::string *v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  int v9;
  uint64_t v10;
  std::string *v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  int v20;
  char v21;
  int v22;
  uint64_t v23;
  std::string v24[2];

  if (*((_DWORD *)this + 2) != *(_DWORD *)this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 617);
    v2 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (0) == (BufferSize()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  v3 = *((_DWORD *)this + 11);
  if (v3 > 0 || *((int *)this + 7) > 0 || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
  {
    v4 = *((_DWORD *)this + 6) - v3;
    v5 = *((_DWORD *)this + 12);
    if (v4 >= v5 && v5 != *((_DWORD *)this + 10))
      google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(this);
    return 0;
  }
  else
  {
    v23 = 0;
    v22 = 0;
    v8 = *((_QWORD *)this + 2);
    do
    {
      v6 = (*(uint64_t (**)(uint64_t, uint64_t *, int *))(*(_QWORD *)v8 + 16))(v8, &v23, &v22);
      if (!(_DWORD)v6)
      {
        *(_QWORD *)this = 0;
        *((_QWORD *)this + 1) = 0;
        return v6;
      }
      v9 = v22;
    }
    while (!v22);
    v10 = v23 + v22;
    *(_QWORD *)this = v23;
    *((_QWORD *)this + 1) = v10;
    if (v9 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 638);
      v11 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (buffer_size) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
      v9 = v22;
    }
    v12 = *((_DWORD *)this + 6);
    v13 = v12 - (v9 ^ 0x7FFFFFFF);
    if (v12 <= (v9 ^ 0x7FFFFFFF))
    {
      v15 = v9 + v12;
      v14 = *((_QWORD *)this + 1);
    }
    else
    {
      *((_DWORD *)this + 7) = v13;
      v14 = *((_QWORD *)this + 1) - v13;
      *((_QWORD *)this + 1) = v14;
      v15 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v15;
    v16 = *((_DWORD *)this + 10);
    v17 = v14 + *((int *)this + 11);
    *((_QWORD *)this + 1) = v17;
    v18 = *((_DWORD *)this + 12);
    if (v18 >= v16)
      v18 = v16;
    v19 = __OFSUB__(v15, v18);
    v20 = v15 - v18;
    if ((v20 < 0) ^ v19 | (v20 == 0))
      v20 = 0;
    else
      *((_QWORD *)this + 1) = v17 - v20;
    *((_DWORD *)this + 11) = v20;
  }
  return v6;
}

void sub_1BF840E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadRaw(google::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  int v6;
  const void *v7;
  uint64_t v8;
  BOOL v9;

  while (1)
  {
    v6 = a3;
    v7 = *(const void **)this;
    v8 = *((_QWORD *)this + 1) - *(_QWORD *)this;
    v9 = __OFSUB__(a3, (_DWORD)v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0))
      break;
    memcpy(__dst, v7, (int)v8);
    __dst += (int)v8;
    *(_QWORD *)this += (int)v8;
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
      return v6 <= (int)v8;
  }
  memcpy(__dst, v7, v6);
  *(_QWORD *)this += v6;
  return v6 <= (int)v8;
}

BOOL google::protobuf::io::CodedInputStream::ReadString(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __n)
{
  std::string *v3;
  size_t v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  if ((__n & 0x80000000) != 0)
    return 0;
  v3 = a2;
  if (*((_DWORD *)this + 2) - *(_DWORD *)this < (int)__n)
    return google::protobuf::io::CodedInputStream::ReadStringFallback(this, a2, __n);
  v6 = __n;
  std::string::resize(a2, __n, 0);
  if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0)
  {
    v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
    if (!v3)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 267);
      v7 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: z.first != NULL: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      v3 = 0;
    }
  }
  memcpy(v3, *(const void **)this, v6);
  *(_QWORD *)this += v6;
  return 1;
}

void sub_1BF84102C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadStringFallback(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __requested_capacity)
{
  int v3;
  int v6;
  int v7;
  BOOL v8;
  int v10;
  const std::string::value_type *v11;
  uint64_t v12;
  BOOL v13;

  v3 = __requested_capacity;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((_BYTE *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((_BYTE *)&a2->__r_.__value_.__s + 23) = 0;
  }
  v6 = *((_DWORD *)this + 12);
  if (v6 >= *((_DWORD *)this + 10))
    v6 = *((_DWORD *)this + 10);
  if (v6 != 0x7FFFFFFF)
  {
    v7 = v6 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this;
    v8 = v7 < (int)__requested_capacity || (int)__requested_capacity < 1;
    if (!v8 && v7 >= 1)
      std::string::reserve(a2, __requested_capacity);
  }
  while (1)
  {
    v10 = v3;
    v11 = *(const std::string::value_type **)this;
    v12 = *((_QWORD *)this + 1) - *(_QWORD *)this;
    v13 = __OFSUB__(v3, (_DWORD)v12);
    v3 -= v12;
    if ((v3 < 0) ^ v13 | (v3 == 0))
      break;
    if ((_DWORD)v12)
    {
      std::string::append(a2, v11, (int)v12);
      v11 = *(const std::string::value_type **)this;
    }
    *(_QWORD *)this = &v11[(int)v12];
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0)
      return v10 <= (int)v12;
  }
  std::string::append(a2, v11, v10);
  *(_QWORD *)this += v10;
  return v10 <= (int)v12;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(unsigned int **this, unsigned int *a2)
{
  unsigned int *v3;
  _BOOL8 result;
  char __dst[4];

  v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFFC) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    v3 = (unsigned int *)__dst;
    result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, __dst, 4);
    if (!result)
      return result;
  }
  *a2 = *v3;
  return 1;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(unint64_t **this, unint64_t *a2)
{
  unint64_t *v3;
  _BOOL8 result;
  char v5[8];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFF8) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    v3 = (unint64_t *)v5;
    result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, v5, 8);
    if (!result)
      return result;
  }
  *a2 = *v3;
  return 1;
}

unint64_t google::protobuf::io::CodedInputStream::ReadVarint64Fallback(google::protobuf::io::CodedInputStream *this)
{
  unint64_t v2;
  unsigned __int8 *v3;
  std::string *v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int v30;
  char v31;
  std::string v32[2];

  v3 = *(unsigned __int8 **)this;
  v2 = *((_QWORD *)this + 1);
  if ((int)(v2 - *(_QWORD *)this) <= 9 && (v2 <= (unint64_t)v3 || *(char *)(v2 - 1) < 0))
  {
    v32[0].__r_.__value_.__r.__words[0] = 0;
    google::protobuf::io::CodedInputStream::ReadVarint64Slow((char **)this, (unint64_t *)v32);
    return v32[0].__r_.__value_.__r.__words[0];
  }
  if (((char)*v3 & 0x80000000) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 417);
    v4 = google::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: (buffer[0]) >= (128): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v31, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
  }
  v5 = v3[1];
  if (((char)v3[1] & 0x80000000) == 0)
  {
    result = *v3 + (v5 << 7) - 128;
    v7 = 2;
LABEL_38:
    *(_QWORD *)this = &v3[v7];
    return result;
  }
  if (((char)v3[2] & 0x80000000) == 0)
  {
    result = (v5 << 7) + ((unint64_t)v3[2] << 14) + *v3 - 16512;
    v7 = 3;
    goto LABEL_38;
  }
  if (((char)v3[3] & 0x80000000) == 0)
  {
    v8 = 0;
    result = (unint64_t)v3[3] << 21;
    v7 = 4;
    v9 = v3;
    do
    {
      v10 = *v9++;
      result += (v10 - 128) << v8;
      v8 += 7;
    }
    while (v8 != 21);
    goto LABEL_38;
  }
  if (((char)v3[4] & 0x80000000) == 0)
  {
    v11 = 0;
    result = (unint64_t)v3[4] << 28;
    v7 = 5;
    v12 = v3;
    do
    {
      v13 = *v12++;
      result += (v13 - 128) << v11;
      v11 += 7;
    }
    while (v11 != 28);
    goto LABEL_38;
  }
  if (((char)v3[5] & 0x80000000) == 0)
  {
    v14 = 0;
    result = (unint64_t)v3[5] << 35;
    v7 = 6;
    v15 = v3;
    do
    {
      v16 = *v15++;
      result += (v16 - 128) << v14;
      v14 += 7;
    }
    while (v14 != 35);
    goto LABEL_38;
  }
  if (((char)v3[6] & 0x80000000) == 0)
  {
    v17 = 0;
    result = (unint64_t)v3[6] << 42;
    v7 = 7;
    v18 = v3;
    do
    {
      v19 = *v18++;
      result += (v19 - 128) << v17;
      v17 += 7;
    }
    while (v17 != 42);
    goto LABEL_38;
  }
  if (((char)v3[7] & 0x80000000) == 0)
  {
    v20 = 0;
    result = (unint64_t)v3[7] << 49;
    v7 = 8;
    v21 = v3;
    do
    {
      v22 = *v21++;
      result += (v22 - 128) << v20;
      v20 += 7;
    }
    while (v20 != 49);
    goto LABEL_38;
  }
  v23 = (char)v3[8];
  if ((v23 & 0x80000000) == 0)
  {
    v24 = 0;
    result = (unint64_t)v23 << 56;
    v7 = 9;
    v25 = v3;
    do
    {
      v26 = *v25++;
      result += (v26 - 128) << v24;
      v24 += 7;
    }
    while (v24 != 56);
    goto LABEL_38;
  }
  v27 = (char)v3[9];
  if ((v27 & 0x80000000) == 0)
  {
    v28 = 0;
    result = (unint64_t)v27 << 63;
    v7 = 10;
    v29 = v3;
    do
    {
      v30 = *v29++;
      result += (v30 - 128) << v28;
      v28 += 7;
    }
    while (v28 != 63);
    goto LABEL_38;
  }
  return 0;
}

void sub_1BF841500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint32Fallback(google::protobuf::io::CodedInputStream *this, int a2)
{
  unint64_t v4;
  unsigned __int8 *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  std::string *v9;
  std::string *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  int v15;
  uint64_t v16;
  char v17;
  std::string v18[2];

  v5 = *(unsigned __int8 **)this;
  v4 = *((_QWORD *)this + 1);
  if ((int)(v4 - *(_QWORD *)this) <= 9 && (v4 <= (unint64_t)v5 || *(char *)(v4 - 1) < 0))
  {
    LODWORD(result) = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
    if ((v14 & 1) != 0)
      return result;
    else
      return -1;
  }
  else
  {
    if (!a2)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 462);
      v6 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (first_byte_or_zero) != (0): ");
      v7 = google::protobuf::internal::LogMessage::operator<<(v6, "Caller should provide us with *buffer_ when buffer is non-empty");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
      v5 = *(unsigned __int8 **)this;
    }
    if (*v5 != a2)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 373);
      v8 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (*buffer) == (first_byte): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v8->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    if ((a2 & 0x80) == 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 374);
      v9 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (first_byte & 0x80) == (0x80): ");
      v10 = google::protobuf::internal::LogMessage::operator<<(v9, a2);
      google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
    }
    v11 = a2 + (v5[1] << 7) - 128;
    if ((char)v5[1] < 0)
    {
      v11 = v11 + (v5[2] << 14) - 0x4000;
      if ((char)v5[2] < 0)
      {
        v11 = v11 + (v5[3] << 21) - 0x200000;
        if ((char)v5[3] < 0)
        {
          v15 = (char)v5[4];
          v11 = v11 + (v15 << 28) - 0x10000000;
          if (v15 < 0)
          {
            v16 = 0;
            result = -1;
            while ((char)v5[v16 + 5] < 0)
            {
              if ((_DWORD)++v16 == 5)
                return result;
            }
            v12 = (uint64_t)&v5[v16 + 6];
          }
          else
          {
            v12 = (uint64_t)(v5 + 5);
          }
        }
        else
        {
          v12 = (uint64_t)(v5 + 4);
        }
      }
      else
      {
        v12 = (uint64_t)(v5 + 3);
      }
    }
    else
    {
      v12 = (uint64_t)(v5 + 2);
    }
    *(_QWORD *)this = v12;
    return v11;
  }
}

void sub_1BF841700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagSlow(google::protobuf::io::CodedInputStream *this)
{
  char *v2;
  unint64_t v3;
  unint64_t result;
  char v5;
  int v6;
  BOOL v7;

  v2 = *(char **)this;
  v3 = *((_QWORD *)this + 1);
  if (*(_QWORD *)this != v3)
  {
LABEL_4:
    if ((unint64_t)v2 >= v3 || *v2 < 0)
    {
      result = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
      if ((v5 & 1) == 0)
        return 0;
    }
    else
    {
      result = *v2;
      *(_QWORD *)this = v2 + 1;
    }
    return result;
  }
  if (google::protobuf::io::CodedInputStream::Refresh(this))
  {
    v2 = *(char **)this;
    v3 = *((_QWORD *)this + 1);
    goto LABEL_4;
  }
  v6 = *((_DWORD *)this + 12);
  result = 0;
  v7 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) < v6 || *((_DWORD *)this + 10) == v6;
  *((_BYTE *)this + 36) = v7;
  return result;
}

unint64_t google::protobuf::io::CodedInputStream::ReadTagFallback(google::protobuf::io::CodedInputStream *this, int a2)
{
  uint64_t v4;
  int v5;
  std::string *v6;
  unsigned __int8 *v7;
  std::string *v8;
  std::string *v9;
  std::string *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  char v18;
  std::string v19[2];

  v4 = *((_QWORD *)this + 1);
  v5 = v4 - *(_QWORD *)this;
  if (v5 <= 9)
  {
    if (v5 < 1)
    {
      if (!v5)
      {
        v14 = *((_DWORD *)this + 11);
        v15 = *((_DWORD *)this + 6);
        if ((v14 > 0 || v15 == *((_DWORD *)this + 10)) && v15 - v14 < *((_DWORD *)this + 12))
        {
          result = 0;
          *((_BYTE *)this + 36) = 1;
          return result;
        }
      }
    }
    else if ((*(char *)(v4 - 1) & 0x80000000) == 0)
    {
      goto LABEL_4;
    }
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
LABEL_4:
  if (**(unsigned __int8 **)this != a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 537);
    v6 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (first_byte_or_zero) == (buffer_[0]): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v18, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  v7 = *(unsigned __int8 **)this;
  if (a2)
  {
    if (*v7 != a2)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 373);
      v8 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (*buffer) == (first_byte): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v18, (const char **)&v8->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
    }
    if ((a2 & 0x80) == 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 374);
      v9 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (first_byte & 0x80) == (0x80): ");
      v10 = google::protobuf::internal::LogMessage::operator<<(v9, a2);
      google::protobuf::internal::LogFinisher::operator=((int)&v18, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
    }
    v11 = a2 + (v7[1] << 7) - 128;
    if ((char)v7[1] < 0)
    {
      v11 = v11 + (v7[2] << 14) - 0x4000;
      if ((char)v7[2] < 0)
      {
        v11 = v11 + (v7[3] << 21) - 0x200000;
        if ((char)v7[3] < 0)
        {
          v16 = (char)v7[4];
          v11 = (v11 + (v16 << 28) - 0x10000000);
          if (v16 < 0)
          {
            v17 = 0;
            while ((char)v7[v17 + 5] < 0)
            {
              result = 0;
              if ((_DWORD)++v17 == 5)
                return result;
            }
            v12 = (uint64_t)&v7[v17 + 6];
          }
          else
          {
            v12 = (uint64_t)(v7 + 5);
          }
        }
        else
        {
          v12 = (uint64_t)(v7 + 4);
        }
      }
      else
      {
        v12 = (uint64_t)(v7 + 3);
      }
    }
    else
    {
      v12 = (uint64_t)(v7 + 2);
    }
    *(_QWORD *)this = v12;
    return v11;
  }
  else
  {
    result = 0;
    *(_QWORD *)this = v7 + 1;
  }
  return result;
}

void sub_1BF841A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadVarint64Slow(char **this, unint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  _BOOL8 v6;
  char *v7;
  char v8;

  v4 = 0;
  v5 = 0;
  while (1)
  {
    v6 = v4 != 10;
    if (v4 == 10)
      break;
    while (1)
    {
      v7 = *this;
      if (*this != this[1])
        break;
      if ((google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this) & 1) == 0)
      {
        v5 = 0;
        v6 = 0;
        goto LABEL_7;
      }
    }
    v8 = *v7;
    v5 |= (unint64_t)(*v7 & 0x7F) << (7 * v4);
    *this = v7 + 1;
    ++v4;
    if ((v8 & 0x80) == 0)
      goto LABEL_7;
  }
  v5 = 0;
LABEL_7:
  *a2 = v5;
  return v6;
}

unint64_t google::protobuf::io::EpsCopyOutputStream::Flush(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  void *v4;
  unint64_t v5;
  int v6;
  std::string *v7;
  std::string *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  std::string *v12;
  char v14;
  std::string v15[2];

  while (1)
  {
    v5 = *(_QWORD *)this;
    v4 = (void *)*((_QWORD *)this + 1);
    if (!v4)
    {
      v10 = v5 - (_QWORD)a2;
      v9 = v10 + 16;
      *((_QWORD *)this + 1) = a2;
      if ((((_DWORD)v10 + 16) & 0x80000000) == 0)
        return v9;
      goto LABEL_12;
    }
    v6 = (_DWORD)a2 - v5;
    if ((unint64_t)a2 <= v5)
      break;
    if (*((_BYTE *)this + 56))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 685);
      v7 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !had_error_: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    if (v6 >= 17)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 686);
      v8 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: overrun <= kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v8->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    a2 = &google::protobuf::io::EpsCopyOutputStream::Next(this)[v6];
    if (*((_BYTE *)this + 56))
      return 0;
  }
  memcpy(v4, (char *)this + 16, a2 - ((char *)this + 16));
  v11 = *(_QWORD *)this;
  *((_QWORD *)this + 1) += a2 - ((char *)this + 16);
  v9 = v11 - (_QWORD)a2;
  if ((((_DWORD)v11 - (_DWORD)a2) & 0x80000000) == 0)
    return v9;
LABEL_12:
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 700);
  v12 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: s >= 0: ");
  google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v12->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  return v9;
}

void sub_1BF841C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::io::EpsCopyOutputStream::Next(google::protobuf::io::EpsCopyOutputStream *this)
{
  std::string *v2;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  std::string *v9;
  std::string::size_type v10;
  char v11;
  int v12;
  std::string v13[2];

  if (*((_BYTE *)this + 56))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 788);
    v2 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: !had_error_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (*((_QWORD *)this + 6))
  {
    v3 = (char *)this + 16;
    v5 = *(char **)this;
    v4 = (void *)*((_QWORD *)this + 1);
    if (v4)
    {
      memcpy(v4, (char *)this + 16, v5 - v3);
      v12 = 0;
      do
      {
        v13[0].__r_.__value_.__r.__words[0] = 0;
        if (((*(uint64_t (**)(_QWORD, std::string *, int *))(**((_QWORD **)this + 6) + 16))(*((_QWORD *)this + 6), v13, &v12) & 1) == 0)
        {
          *((_BYTE *)this + 56) = 1;
          goto LABEL_14;
        }
        v6 = v12;
      }
      while (!v12);
      v5 = (char *)v13[0].__r_.__value_.__r.__words[0];
      if (v12 >= 17)
      {
        *(_OWORD *)v13[0].__r_.__value_.__l.__data_ = *(_OWORD *)*(_QWORD *)this;
        *(_QWORD *)this = &v5[v6 - 16];
        *((_QWORD *)this + 1) = 0;
        return v5;
      }
      if (v12 <= 0)
      {
        v10 = v13[0].__r_.__value_.__r.__words[0];
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 810);
        v9 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: size > 0: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
        LODWORD(v6) = v12;
        v5 = (char *)v10;
      }
      *(_OWORD *)v3 = *(_OWORD *)*(_QWORD *)this;
      v7 = &v3[(int)v6];
    }
    else
    {
      *(_OWORD *)v3 = *(_OWORD *)v5;
      v7 = (char *)this + 32;
    }
    *(_QWORD *)this = v7;
    *((_QWORD *)this + 1) = v5;
  }
  else
  {
    *((_BYTE *)this + 56) = 1;
    v3 = (char *)this + 16;
LABEL_14:
    *(_QWORD *)this = (char *)this + 32;
  }
  return v3;
}

void sub_1BF841DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::io::EpsCopyOutputStream::Trim(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  unint64_t v3;

  if (!*((_BYTE *)this + 56))
  {
    v3 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
    if ((_DWORD)v3)
      (*(void (**)(_QWORD, unint64_t))(**((_QWORD **)this + 6) + 24))(*((_QWORD *)this + 6), v3);
    a2 = (char *)this + 16;
    *(_QWORD *)this = (char *)this + 16;
    *((_QWORD *)this + 1) = (char *)this + 16;
  }
  return a2;
}

uint64_t google::protobuf::io::EpsCopyOutputStream::FlushAndResetBuffer(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  int v3;
  uint64_t result;
  char *v5;
  uint64_t v6;

  if (*((_BYTE *)this + 56))
    return (uint64_t)this + 16;
  v3 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
  if (*((_BYTE *)this + 56))
    return (uint64_t)this + 16;
  v5 = (char *)(*((_QWORD *)this + 1) + v3 - 16);
  if (v3 > 16)
  {
    v6 = 0;
  }
  else
  {
    v5 = (char *)this + v3 + 16;
    v6 = *((_QWORD *)this + 1);
  }
  if (v3 <= 16)
    result = (uint64_t)this + 16;
  else
    result = *((_QWORD *)this + 1);
  *(_QWORD *)this = v5;
  *((_QWORD *)this + 1) = v6;
  return result;
}

char *google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(google::protobuf::io::EpsCopyOutputStream *this, char *a2)
{
  char *v3;
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  while (!*((_BYTE *)this + 56))
  {
    v3 = &a2[-*(_QWORD *)this];
    if ((v3 & 0x80000000) != 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 829);
      v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: overrun >= 0: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
      goto LABEL_6;
    }
    if (v3 > 0x10)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.cc", 830);
      v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: overrun <= kSlopBytes: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
LABEL_6:
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    }
    a2 = &google::protobuf::io::EpsCopyOutputStream::Next(this)[(int)v3];
    if ((unint64_t)a2 < *(_QWORD *)this)
      return a2;
  }
  return (char *)this + 16;
}

void sub_1BF841F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(google::protobuf::io::EpsCopyOutputStream *this, char *a2, int a3, unsigned __int8 *a4)
{
  unsigned __int8 *v4;
  int i;

  v4 = a4;
  for (i = google::protobuf::io::EpsCopyOutputStream::GetSize(this, a4);
        a3 > i;
        i = google::protobuf::io::EpsCopyOutputStream::GetSize(this, v4))
  {
    memcpy(v4, a2, i);
    a3 -= i;
    a2 += i;
    v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, (char *)&v4[i]);
  }
  memcpy(v4, a2, a3);
  return &v4[a3];
}

uint64_t google::protobuf::io::EpsCopyOutputStream::GetSize(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  uint64_t v3;
  std::string *v5;
  char v7;
  std::string v8[2];

  v3 = *(_QWORD *)this;
  if (*(_QWORD *)this + 16 < (unint64_t)a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.h", 836);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: ptr <= end_ + kSlopBytes: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
    v3 = *(_QWORD *)this;
  }
  return v3 - (_QWORD)a2 + 16;
}

void sub_1BF8420D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(google::protobuf::io::EpsCopyOutputStream *this, void *a2, uint64_t a3, char *a4)
{
  char *v8;

  if (google::protobuf::io::EpsCopyOutputStream::GetSize(this, (unsigned __int8 *)a4) <= (int)a3)
  {
    v8 = google::protobuf::io::EpsCopyOutputStream::Trim(this, a4);
    if (((*(uint64_t (**)(_QWORD, void *, uint64_t))(**((_QWORD **)this + 6) + 40))(*((_QWORD *)this + 6), a2, a3) & 1) == 0)
    {
      *((_BYTE *)this + 56) = 1;
      v8 = (char *)this + 16;
      *(_QWORD *)this = (char *)this + 32;
    }
    return (unsigned __int8 *)v8;
  }
  if (*(_QWORD *)this - (_QWORD)a4 >= (int)a3)
  {
    memcpy(a4, a2, (int)a3);
    return (unsigned __int8 *)&a4[(int)a3];
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, (char *)a2, a3, (unsigned __int8 *)a4);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, void **a3, char *a4)
{
  char *v4;
  unint64_t v8;
  uint64_t v9;
  std::string *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  char *v17;
  void *v18;
  unsigned int v20;
  unsigned int v21;
  char v22;
  std::string v23[2];

  v4 = a4;
  v8 = *(_QWORD *)this;
  if (*(_QWORD *)this <= (unint64_t)a4)
  {
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
    v8 = *(_QWORD *)this;
  }
  if (*((char *)a3 + 23) >= 0)
    v9 = *((unsigned __int8 *)a3 + 23);
  else
    v9 = *((unsigned int *)a3 + 2);
  if (v8 <= (unint64_t)v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.h", 856);
    v10 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: ptr < end_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  v11 = (8 * a2) | 2;
  if (v11 > 0x7F)
  {
    *v4 = (8 * a2) | 0x82;
    v13 = (8 * a2) >> 7;
    if (v11 >> 14)
    {
      v12 = v4 + 2;
      do
      {
        *(v12 - 1) = v13 | 0x80;
        v14 = v13 >> 7;
        ++v12;
        v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - 1) = v14;
    }
    else
    {
      v4[1] = v13;
      v12 = v4 + 2;
    }
  }
  else
  {
    *v4 = v11;
    v12 = v4 + 1;
  }
  if (v9 >= 0x80)
  {
    v20 = v9;
    do
    {
      *v12++ = v20 | 0x80;
      v16 = v20 >> 7;
      v21 = v20 >> 14;
      v20 >>= 7;
    }
    while (v21);
  }
  else
  {
    LOBYTE(v16) = v9;
  }
  *v12 = v16;
  v17 = v12 + 1;
  if (*((char *)a3 + 23) >= 0)
    v18 = a3;
  else
    v18 = *a3;
  return google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased(this, v18, v9, v17);
}

void sub_1BF842338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteRawMaybeAliased(google::protobuf::io::EpsCopyOutputStream *this, void *a2, uint64_t a3, char *a4)
{
  uint64_t v6;

  if (*((_BYTE *)this + 57))
    return google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(this, a2, a3, a4);
  if (*(_QWORD *)this - (_QWORD)a4 < (int)a3)
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, (char *)a2, a3, (unsigned __int8 *)a4);
  v6 = (int)a3;
  memcpy(a4, a2, (int)a3);
  return (unsigned __int8 *)&a4[v6];
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, char *a4)
{
  char *v4;
  unint64_t v8;
  uint64_t v9;
  std::string *v10;
  unsigned int v11;
  _BYTE *v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned __int8 *v17;
  char *v18;
  unsigned int v20;
  unsigned int v21;
  char v22;
  std::string v23[2];

  v4 = a4;
  v8 = *(_QWORD *)this;
  if (*(_QWORD *)this <= (unint64_t)a4)
  {
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
    v8 = *(_QWORD *)this;
  }
  if (*(char *)(a3 + 23) >= 0)
    LODWORD(v9) = *(unsigned __int8 *)(a3 + 23);
  else
    v9 = *(_QWORD *)(a3 + 8);
  if (v8 <= (unint64_t)v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.h", 856);
    v10 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: ptr < end_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  v11 = (8 * a2) | 2;
  if (v11 > 0x7F)
  {
    *v4 = (8 * a2) | 0x82;
    v13 = (8 * a2) >> 7;
    if (v11 >> 14)
    {
      v12 = v4 + 2;
      do
      {
        *(v12 - 1) = v13 | 0x80;
        v14 = v13 >> 7;
        ++v12;
        v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - 1) = v14;
    }
    else
    {
      v4[1] = v13;
      v12 = v4 + 2;
    }
  }
  else
  {
    *v4 = v11;
    v12 = v4 + 1;
  }
  if (v9 >= 0x80)
  {
    v20 = v9;
    do
    {
      *v12++ = v20 | 0x80;
      v16 = v20 >> 7;
      v21 = v20 >> 14;
      v20 >>= 7;
    }
    while (v21);
  }
  else
  {
    LOBYTE(v16) = v9;
  }
  *v12 = v16;
  v17 = v12 + 1;
  if (*(char *)(a3 + 23) >= 0)
    v18 = (char *)a3;
  else
    v18 = *(char **)a3;
  if (*(_QWORD *)this - (_QWORD)v17 < (int)v9)
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v18, v9, v17);
  memcpy(v17, v18, (int)v9);
  return &v17[(int)v9];
}

void sub_1BF84254C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::io::CodedOutputStream *google::protobuf::io::CodedOutputStream::CodedOutputStream(google::protobuf::io::CodedOutputStream *this, google::protobuf::io::ZeroCopyOutputStream *a2, int a3)
{
  char v6;
  char *v7;
  char *v9;
  uint64_t v10;
  char *v11;
  int v13;
  char *v14;

  v6 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
  v7 = (char *)this + 16;
  *(_QWORD *)this = (char *)this + 16;
  *((_QWORD *)this + 1) = (char *)this + 16;
  *((_QWORD *)this + 6) = a2;
  *((_WORD *)this + 28) = 0;
  *((_BYTE *)this + 58) = v6;
  *((_QWORD *)this + 8) = (char *)this + 16;
  *((_QWORD *)this + 9) = (*(uint64_t (**)(google::protobuf::io::ZeroCopyOutputStream *))(*(_QWORD *)a2 + 32))(a2);
  if (a3)
  {
    v14 = 0;
    v13 = 0;
    if ((*(unsigned int (**)(google::protobuf::io::ZeroCopyOutputStream *, char **, int *))(*(_QWORD *)a2 + 16))(a2, &v14, &v13)&& v13 != 0)
    {
      v9 = v14;
      if (v13 <= 16)
        v10 = (uint64_t)&v7[v13];
      else
        v10 = (uint64_t)&v14[v13 - 16];
      if (v13 <= 16)
        v11 = v14;
      else
        v11 = 0;
      if (v13 <= 16)
        v9 = v7;
      *(_QWORD *)this = v10;
      *((_QWORD *)this + 1) = v11;
      *((_QWORD *)this + 8) = v9;
    }
  }
  return this;
}

void google::protobuf::io::CodedOutputStream::~CodedOutputStream(google::protobuf::io::CodedOutputStream *this)
{
  *((_QWORD *)this + 8) = google::protobuf::io::EpsCopyOutputStream::Trim(this, *((char **)this + 8));
}

void google::protobuf::StringPiece::LogFatalSizeTooBig(google::protobuf::StringPiece *this, const std::string::value_type *a2, const char *a3)
{
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  char v9;
  std::string v10[2];

  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/stringpiece.cc", 49);
  v5 = google::protobuf::internal::LogMessage::operator<<(v10, "size too big: ");
  v6 = google::protobuf::internal::LogMessage::operator<<(v5, (uint64_t)this);
  v7 = google::protobuf::internal::LogMessage::operator<<(v6, " details: ");
  v8 = google::protobuf::internal::LogMessage::operator<<(v7, a2);
  google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v8->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
}

void sub_1BF8426E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::StringPiece::find_last_not_of(google::protobuf::StringPiece *this, unsigned __int8 a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  v3 = *((_QWORD *)this + 1);
  if (v3 < 1)
    return -1;
  if (v3 - 1 >= a3)
    result = a3;
  else
    result = v3 - 1;
  v6 = *(_QWORD *)this;
  while (*(unsigned __int8 *)(v6 + result) == a2)
  {
    if (result-- <= 0)
      return -1;
  }
  return result;
}

unint64_t google::protobuf::StringPiece::substr(google::protobuf::StringPiece *this, unint64_t a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *((_QWORD *)this + 1);
  if (v3 >= a2)
    v4 = a2;
  else
    v4 = *((_QWORD *)this + 1);
  v5 = v3 - v4;
  if (v5 >= a3)
    v6 = a3;
  else
    v6 = v5;
  if ((v6 & 0x8000000000000000) != 0)
    google::protobuf::StringPiece::substr();
  return *(_QWORD *)this + v4;
}

const char *google::protobuf::internal::EpsCopyInputStream::SkipFallback(google::protobuf::internal::EpsCopyInputStream *this, const char *a2, int a3)
{
  const char *v4;
  int v6;
  std::string *v7;
  const char *v8;
  char v9;
  uint64_t v10;
  char v12;
  std::string v13[2];

  v4 = a2;
  v6 = *((_DWORD *)this + 2) - (_DWORD)a2 + 16;
  while (1)
  {
    if (a3 <= v6)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/parse_context.h", 293);
      v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: size > chunk_size: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
    }
    if (*((_DWORD *)this + 7) == 16)
      break;
    v8 = google::protobuf::internal::EpsCopyInputStream::DoneFallback(this, &v4[v6], -1);
    if ((v9 & 1) != 0)
      break;
    v4 = v8;
    v10 = a3 - (uint64_t)v6;
    v6 = *((_DWORD *)this + 2) - (_DWORD)v8 + 16;
    a3 = v10;
    if ((int)v10 <= v6)
      return &v8[v10];
  }
  return 0;
}

void sub_1BF842864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const std::string::value_type *google::protobuf::internal::EpsCopyInputStream::ReadStringFallback(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    *this->__r_.__value_.__l.__data_ = 0;
    this->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    this->__r_.__value_.__s.__data_[0] = 0;
    *((_BYTE *)&this->__r_.__value_.__s + 23) = 0;
  }
  if (*(_QWORD *)(a1 + 8) - (_QWORD)__s + *(int *)(a1 + 28) >= a3)
    std::string::reserve(this, a3);
  return google::protobuf::internal::EpsCopyInputStream::AppendStringFallback(a1, __s, a3, this);
}

const std::string::value_type *google::protobuf::internal::EpsCopyInputStream::AppendStringFallback(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  int v5;
  const std::string::value_type *v6;
  uint64_t v8;
  int v9;
  std::string *v10;
  const char *v11;
  char v12;
  std::string::size_type v13;
  char v15;
  std::string v16[2];

  v5 = a3;
  v6 = __s;
  v8 = *(_QWORD *)(a1 + 8);
  if (v8 - (uint64_t)__s + *(int *)(a1 + 28) >= a3)
  {
    std::string::reserve(this, a3);
    v8 = *(_QWORD *)(a1 + 8);
  }
  v9 = v8 - (_DWORD)v6 + 16;
  while (1)
  {
    if (v5 <= v9)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/parse_context.h", 293);
      v10 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: size > chunk_size: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
    }
    std::string::append(this, v6, v9);
    if (*(_DWORD *)(a1 + 28) == 16)
      break;
    v11 = google::protobuf::internal::EpsCopyInputStream::DoneFallback((google::protobuf::internal::EpsCopyInputStream *)a1, &v6[v9], -1);
    if ((v12 & 1) != 0)
      break;
    v6 = v11;
    v13 = v5 - (uint64_t)v9;
    v9 = *(_DWORD *)(a1 + 8) - (_DWORD)v11 + 16;
    v5 = v13;
    if ((int)v13 <= v9)
    {
      std::string::append(this, v11, v13);
      return &v6[v13];
    }
  }
  return 0;
}

void sub_1BF842A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::internal::ParseContext::ParseMessage<google::protobuf::MessageLite>(google::protobuf::internal::EpsCopyInputStream *this, uint64_t a2, google::protobuf::internal *a3)
{
  int v6;
  const char *v7;
  const char *v8;
  char *result;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  int v15;

  v6 = *(char *)a3;
  v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result)
      return result;
    v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    v8 = (char *)a3 + 1;
  }
  v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  v12 = *((_DWORD *)this + 22);
  v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13)
    return 0;
  v14 = v11;
  result = (char *)(*(uint64_t (**)(uint64_t, const char *, google::protobuf::internal::EpsCopyInputStream *))(*(_QWORD *)a2 + 104))(a2, v8, this);
  if (!result)
    return result;
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20))
    return 0;
  v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(_QWORD *)this = *((_QWORD *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

void google::protobuf::internal::WriteVarint(int a1, unint64_t a2, std::string *this)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = (8 * a1);
  if (v5 < 0x80)
  {
    LOBYTE(v6) = 8 * a1;
  }
  else
  {
    do
    {
      std::string::push_back(this, v5 | 0x80);
      v6 = v5 >> 7;
      v7 = v5 >> 14;
      v5 >>= 7;
    }
    while (v7);
  }
  std::string::push_back(this, v6);
  if (a2 < 0x80)
  {
    LOBYTE(v8) = a2;
  }
  else
  {
    do
    {
      std::string::push_back(this, a2 | 0x80);
      v8 = a2 >> 7;
      v9 = a2 >> 14;
      a2 >>= 7;
    }
    while (v9);
  }
  std::string::push_back(this, v8);
}

uint64_t google::protobuf::internal::ReadTagFallback(google::protobuf::internal *this, const char *a2)
{
  uint64_t result;
  char *v4;
  uint64_t v5;
  int v6;

  result = (uint64_t)this + 3;
  v4 = (char *)this + 2;
  v5 = -21;
  while (1)
  {
    v6 = *v4++;
    LODWORD(a2) = ((v6 - 1) << (v5 + 35)) + (_DWORD)a2;
    if ((v6 & 0x80000000) == 0)
      break;
    ++result;
    v5 += 7;
    if (!v5)
      return 0;
  }
  return result;
}

char *google::protobuf::internal::InlineGreedyStringParserUTF8(std::string *a1, std::string::value_type *a2, uint64_t a3, google::protobuf::internal *a4)
{
  char *v6;
  const char *v7;
  void *v9[2];

  v6 = google::protobuf::internal::InlineGreedyStringParser(a1, a2, a3);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v9, (uint64_t *)a1, v7);
  if (google::protobuf::internal::VerifyUTF8(v9[0], (size_t)v9[1], a4))
    return v6;
  else
    return 0;
}

char *google::protobuf::internal::PackedInt32Parser(google::protobuf::internal *this, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *a3, google::protobuf::internal::ParseContext *a4)
{
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(a3, a2, (int *)this);
}

char *google::protobuf::internal::PackedUInt32Parser(google::protobuf::internal *this, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *a3, google::protobuf::internal::ParseContext *a4)
{
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(a3, a2, (int *)this);
}

char *google::protobuf::internal::PackedInt64Parser(google::protobuf::internal *this, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *a3, google::protobuf::internal::ParseContext *a4)
{
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(a3, a2, (int *)this);
}

char *google::protobuf::internal::PackedUInt64Parser(google::protobuf::internal *this, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *a3, google::protobuf::internal::ParseContext *a4)
{
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(a3, a2, (int *)this);
}

char *google::protobuf::internal::PackedSInt32Parser(google::protobuf::internal *this, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *a3, google::protobuf::internal::ParseContext *a4)
{
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(a3, a2, (int *)this);
}

char *google::protobuf::internal::PackedSInt64Parser(google::protobuf::internal *this, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *a3, google::protobuf::internal::ParseContext *a4)
{
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(a3, a2, (int *)this);
}

char *google::protobuf::internal::PackedBoolParser(google::protobuf::internal *this, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *a3, google::protobuf::internal::ParseContext *a4)
{
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(a3, a2, (int *)this);
}

char *google::protobuf::internal::FixedParser<unsigned int>(int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5;
  char *v6;
  char *result;
  int v8;

  v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)this + 1;
  }
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<unsigned int>(a3, v6, v5, a1);
}

char *google::protobuf::internal::FixedParser<int>(int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5;
  char *v6;
  char *result;
  int v8;

  v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)this + 1;
  }
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<int>(a3, v6, v5, a1);
}

char *google::protobuf::internal::FixedParser<unsigned long long>(int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5;
  char *v6;
  char *result;
  int v8;

  v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)this + 1;
  }
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<unsigned long long>(a3, v6, v5, a1);
}

char *google::protobuf::internal::FixedParser<long long>(int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5;
  char *v6;
  char *result;
  int v8;

  v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)this + 1;
  }
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<long long>(a3, v6, v5, a1);
}

char *google::protobuf::internal::FixedParser<float>(int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5;
  char *v6;
  char *result;
  int v8;

  v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)this + 1;
  }
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<float>(a3, v6, v5, a1);
}

char *google::protobuf::internal::FixedParser<double>(int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5;
  char *v6;
  char *result;
  int v8;

  v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)this + 1;
  }
  return google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<double>(a3, v6, v5, a1);
}

char *google::protobuf::internal::WireFormatParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(google::protobuf::internal::UnknownFieldLiteParserHelper *a1, char *a2, google::protobuf::internal::EpsCopyInputStream *this)
{
  char *v5;
  int v6;
  uint64_t v8;
  char *v10;

  v10 = a2;
  while (1)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v10, *((_DWORD *)this + 23)) & 1) != 0)return v10;
    v5 = v10 + 1;
    v6 = *v10;
    if (*v10 < 0)
    {
      v6 = v6 + (*v5 << 7) - 128;
      if (*v5 < 0)
      {
        v5 = v10 + 3;
        v8 = -21;
        while (1)
        {
          v6 += (*(v5 - 1) - 1) << (v8 + 35);
          if ((*(v5 - 1) & 0x80000000) == 0)
            break;
          ++v5;
          v8 += 7;
          if (!v8)
            return 0;
        }
      }
      else
      {
        v5 = v10 + 2;
      }
    }
    v10 = v5;
    if (!v6 || (v6 & 7) == 4)
      break;
    v10 = (char *)google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(v6, a1, (google::protobuf::internal *)v5);
    if (!v10)
      return 0;
  }
  *((_DWORD *)this + 20) = v6 - 1;
  return v5;
}

unsigned __int8 *google::protobuf::internal::UnknownFieldParse(unsigned int a1, std::string *a2, google::protobuf::internal *a3, google::protobuf::internal::ParseContext *a4)
{
  std::string *v5;

  v5 = a2;
  return google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(a1, &v5, a3, a4);
}

unsigned __int8 *google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(unint64_t a1, std::string **this, google::protobuf::internal *a3, google::protobuf::internal::ParseContext *a4)
{
  unint64_t v4;
  unsigned __int8 *v5;
  std::string *v7;
  char *v8;
  char v10;
  std::string v11[2];

  v4 = a1 >> 3;
  if (!(a1 >> 3))
    return 0;
  v5 = (unsigned __int8 *)a3;
  switch(a1 & 7)
  {
    case 0uLL:
      v11[0].__r_.__value_.__r.__words[0] = 0;
      v5 = google::protobuf::internal::VarintParse<unsigned long long>((char *)a3, v11);
      if (v5)
        google::protobuf::internal::UnknownFieldLiteParserHelper::AddVarint(this, v4, v11[0].__r_.__value_.__r.__words[0]);
      return v5;
    case 1uLL:
      v5 = (unsigned __int8 *)a3 + 8;
      google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed64((std::string *)this, v4, *(_QWORD *)a3);
      return v5;
    case 2uLL:
      v8 = google::protobuf::internal::UnknownFieldLiteParserHelper::ParseLengthDelimited(this, v4, (std::string::value_type *)a3, a4);
      goto LABEL_10;
    case 3uLL:
      v8 = google::protobuf::internal::UnknownFieldLiteParserHelper::ParseGroup(this, v4, (char *)a3, (int32x2_t *)a4);
LABEL_10:
      v5 = (unsigned __int8 *)v8;
      break;
    case 4uLL:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/parse_context.h", 695);
      v7 = google::protobuf::internal::LogMessage::operator<<(v11, "Can't happen");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
      break;
    case 5uLL:
      v5 = (unsigned __int8 *)a3 + 4;
      google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed32((std::string *)this, v4, *(_DWORD *)a3);
      break;
    default:
      return 0;
  }
  return v5;
}

void sub_1BF84316C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *google::protobuf::internal::UnknownFieldParse(unsigned int a1, uint64_t *a2, google::protobuf::internal *a3, google::protobuf::internal::ParseContext *a4)
{
  std::string *v7;
  std::string *v9;

  if ((*a2 & 1) != 0)
    v7 = (std::string *)(*a2 & 0xFFFFFFFFFFFFFFFELL);
  else
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(a2);
  v9 = v7;
  return google::protobuf::internal::FieldParser<google::protobuf::internal::UnknownFieldLiteParserHelper>(a1, &v9, a3, a4);
}

unsigned __int8 *google::protobuf::internal::VarintParse<unsigned long long>(char *a1, _QWORD *a2)
{
  uint64_t v2;
  unsigned __int8 *result;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  if (*a1 < 0)
  {
    v4 = a1[1];
    v5 = (v2 + (v4 << 7) - 128);
    if ((v4 & 0x80) != 0)
    {
      result = (unsigned __int8 *)(a1 + 3);
      v6 = 14;
      while (1)
      {
        v5 += (*(result - 1) - 1) << v6;
        if (((char)*(result - 1) & 0x80000000) == 0)
          break;
        ++result;
        v6 += 7;
        if (v6 == 70)
        {
          result = 0;
          v5 = 0;
          break;
        }
      }
      *a2 = v5;
    }
    else
    {
      *a2 = v5;
      return (unsigned __int8 *)(a1 + 2);
    }
  }
  else
  {
    *a2 = v2;
    return (unsigned __int8 *)(a1 + 1);
  }
  return result;
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::internal *a2, int *a3)
{
  unsigned int v5;
  const char *v6;
  char *result;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;

  v5 = *(unsigned __int8 *)a2;
  if (*(char *)a2 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a2, (const char *)*(unsigned __int8 *)a2);
    v16 = result;
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)a2 + 1;
    v16 = (char *)a2 + 1;
  }
  v9 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v6, v5);
  if (v9 < 0)
    return 0;
  v10 = v9;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1) & 1) != 0)
  {
LABEL_11:
    if (*((_DWORD *)this + 20))
    {
      return 0;
    }
    else
    {
      v14 = *((_DWORD *)this + 7) + v10;
      *((_DWORD *)this + 7) = v14;
      *(_QWORD *)this = *((_QWORD *)this + 1) + (v14 & (v14 >> 31));
      return v16;
    }
  }
  else
  {
    while (1)
    {
      v15 = 0;
      result = (char *)google::protobuf::internal::VarintParse<unsigned long long>(v16, &v15);
      v16 = result;
      if (!result)
        break;
      v11 = v15;
      if (*a3 == a3[1])
        google::protobuf::RepeatedField<int>::Reserve(a3, *a3 + 1);
      v12 = google::protobuf::RepeatedField<int>::elements((uint64_t)a3);
      v13 = *a3;
      *a3 = v13 + 1;
      *(_DWORD *)(v12 + 4 * v13) = v11;
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1))
        goto LABEL_11;
    }
  }
  return result;
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned int,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::internal *a2, int *a3)
{
  unsigned int v5;
  const char *v6;
  char *result;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;

  v5 = *(unsigned __int8 *)a2;
  if (*(char *)a2 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a2, (const char *)*(unsigned __int8 *)a2);
    v16 = result;
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)a2 + 1;
    v16 = (char *)a2 + 1;
  }
  v9 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v6, v5);
  if (v9 < 0)
    return 0;
  v10 = v9;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1) & 1) != 0)
  {
LABEL_11:
    if (*((_DWORD *)this + 20))
    {
      return 0;
    }
    else
    {
      v14 = *((_DWORD *)this + 7) + v10;
      *((_DWORD *)this + 7) = v14;
      *(_QWORD *)this = *((_QWORD *)this + 1) + (v14 & (v14 >> 31));
      return v16;
    }
  }
  else
  {
    while (1)
    {
      v15 = 0;
      result = (char *)google::protobuf::internal::VarintParse<unsigned long long>(v16, &v15);
      v16 = result;
      if (!result)
        break;
      v11 = v15;
      if (*a3 == a3[1])
        google::protobuf::RepeatedField<unsigned int>::Reserve(a3, *a3 + 1);
      v12 = google::protobuf::RepeatedField<unsigned int>::elements((uint64_t)a3);
      v13 = *a3;
      *a3 = v13 + 1;
      *(_DWORD *)(v12 + 4 * v13) = v11;
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1))
        goto LABEL_11;
    }
  }
  return result;
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::internal *a2, int *a3)
{
  unsigned int v5;
  const char *v6;
  char *result;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;

  v5 = *(unsigned __int8 *)a2;
  if (*(char *)a2 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a2, (const char *)*(unsigned __int8 *)a2);
    v16 = result;
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)a2 + 1;
    v16 = (char *)a2 + 1;
  }
  v9 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v6, v5);
  if (v9 < 0)
    return 0;
  v10 = v9;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1) & 1) != 0)
  {
LABEL_11:
    if (*((_DWORD *)this + 20))
    {
      return 0;
    }
    else
    {
      v14 = *((_DWORD *)this + 7) + v10;
      *((_DWORD *)this + 7) = v14;
      *(_QWORD *)this = *((_QWORD *)this + 1) + (v14 & (v14 >> 31));
      return v16;
    }
  }
  else
  {
    while (1)
    {
      v15 = 0;
      result = (char *)google::protobuf::internal::VarintParse<unsigned long long>(v16, &v15);
      v16 = result;
      if (!result)
        break;
      v11 = v15;
      if (*a3 == a3[1])
        google::protobuf::RepeatedField<long long>::Reserve(a3, *a3 + 1);
      v12 = google::protobuf::RepeatedField<long long>::elements((uint64_t)a3);
      v13 = *a3;
      *a3 = v13 + 1;
      *(_QWORD *)(v12 + 8 * v13) = v11;
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1))
        goto LABEL_11;
    }
  }
  return result;
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<unsigned long long,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::internal *a2, int *a3)
{
  unsigned int v5;
  const char *v6;
  char *result;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;

  v5 = *(unsigned __int8 *)a2;
  if (*(char *)a2 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a2, (const char *)*(unsigned __int8 *)a2);
    v16 = result;
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)a2 + 1;
    v16 = (char *)a2 + 1;
  }
  v9 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v6, v5);
  if (v9 < 0)
    return 0;
  v10 = v9;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1) & 1) != 0)
  {
LABEL_11:
    if (*((_DWORD *)this + 20))
    {
      return 0;
    }
    else
    {
      v14 = *((_DWORD *)this + 7) + v10;
      *((_DWORD *)this + 7) = v14;
      *(_QWORD *)this = *((_QWORD *)this + 1) + (v14 & (v14 >> 31));
      return v16;
    }
  }
  else
  {
    while (1)
    {
      v15 = 0;
      result = (char *)google::protobuf::internal::VarintParse<unsigned long long>(v16, &v15);
      v16 = result;
      if (!result)
        break;
      v11 = v15;
      if (*a3 == a3[1])
        google::protobuf::RepeatedField<unsigned long long>::Reserve(a3, *a3 + 1);
      v12 = google::protobuf::RepeatedField<unsigned long long>::elements((uint64_t)a3);
      v13 = *a3;
      *a3 = v13 + 1;
      *(_QWORD *)(v12 + 8 * v13) = v11;
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1))
        goto LABEL_11;
    }
  }
  return result;
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<int,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::internal *a2, int *a3)
{
  unsigned int v5;
  const char *v6;
  char *result;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;

  v5 = *(unsigned __int8 *)a2;
  if (*(char *)a2 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a2, (const char *)*(unsigned __int8 *)a2);
    v16 = result;
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)a2 + 1;
    v16 = (char *)a2 + 1;
  }
  v9 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v6, v5);
  if (v9 < 0)
    return 0;
  v10 = v9;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1) & 1) != 0)
  {
LABEL_11:
    if (*((_DWORD *)this + 20))
    {
      return 0;
    }
    else
    {
      v14 = *((_DWORD *)this + 7) + v10;
      *((_DWORD *)this + 7) = v14;
      *(_QWORD *)this = *((_QWORD *)this + 1) + (v14 & (v14 >> 31));
      return v16;
    }
  }
  else
  {
    while (1)
    {
      v15 = 0;
      result = (char *)google::protobuf::internal::VarintParse<unsigned long long>(v16, &v15);
      v16 = result;
      if (!result)
        break;
      v11 = v15;
      if (*a3 == a3[1])
        google::protobuf::RepeatedField<int>::Reserve(a3, *a3 + 1);
      v12 = google::protobuf::RepeatedField<int>::elements((uint64_t)a3);
      v13 = *a3;
      *a3 = v13 + 1;
      *(_DWORD *)(v12 + 4 * v13) = -(v11 & 1) ^ (v11 >> 1);
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1))
        goto LABEL_11;
    }
  }
  return result;
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<long long,true>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::internal *a2, int *a3)
{
  unsigned int v5;
  const char *v6;
  char *result;
  unsigned int v8;
  int v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  char *v16;

  v5 = *(unsigned __int8 *)a2;
  if (*(char *)a2 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a2, (const char *)*(unsigned __int8 *)a2);
    v16 = result;
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)a2 + 1;
    v16 = (char *)a2 + 1;
  }
  v9 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v6, v5);
  if (v9 < 0)
    return 0;
  v10 = v9;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1) & 1) != 0)
  {
LABEL_11:
    if (*((_DWORD *)this + 20))
    {
      return 0;
    }
    else
    {
      v14 = *((_DWORD *)this + 7) + v10;
      *((_DWORD *)this + 7) = v14;
      *(_QWORD *)this = *((_QWORD *)this + 1) + (v14 & (v14 >> 31));
      return v16;
    }
  }
  else
  {
    while (1)
    {
      v15 = 0;
      result = (char *)google::protobuf::internal::VarintParse<unsigned long long>(v16, &v15);
      v16 = result;
      if (!result)
        break;
      v11 = v15;
      if (*a3 == a3[1])
        google::protobuf::RepeatedField<long long>::Reserve(a3, *a3 + 1);
      v12 = google::protobuf::RepeatedField<long long>::elements((uint64_t)a3);
      v13 = *a3;
      *a3 = v13 + 1;
      *(_QWORD *)(v12 + 8 * v13) = -(uint64_t)(v11 & 1) ^ (v11 >> 1);
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1))
        goto LABEL_11;
    }
  }
  return result;
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedVarint<char const* google::protobuf::internal::VarintParser<BOOL,false>(void *,char const*,google::protobuf::internal::ParseContext *)::{lambda(unsigned long long)#1}>(google::protobuf::internal::EpsCopyInputStream *this, google::protobuf::internal *a2, int *a3)
{
  unsigned int v5;
  const char *v6;
  char *result;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;

  v5 = *(unsigned __int8 *)a2;
  if (*(char *)a2 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a2, (const char *)*(unsigned __int8 *)a2);
    v16 = result;
    if (!result)
      return result;
    v6 = result;
    v5 = v8;
  }
  else
  {
    v6 = (char *)a2 + 1;
    v16 = (char *)a2 + 1;
  }
  v9 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v6, v5);
  if (v9 < 0)
    return 0;
  v10 = v9;
  if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1) & 1) != 0)
  {
LABEL_11:
    if (*((_DWORD *)this + 20))
    {
      return 0;
    }
    else
    {
      v14 = *((_DWORD *)this + 7) + v10;
      *((_DWORD *)this + 7) = v14;
      *(_QWORD *)this = *((_QWORD *)this + 1) + (v14 & (v14 >> 31));
      return v16;
    }
  }
  else
  {
    while (1)
    {
      v15 = 0;
      result = (char *)google::protobuf::internal::VarintParse<unsigned long long>(v16, &v15);
      v16 = result;
      if (!result)
        break;
      v11 = v15;
      if (*a3 == a3[1])
        google::protobuf::RepeatedField<BOOL>::Reserve(a3, *a3 + 1);
      v12 = google::protobuf::RepeatedField<BOOL>::elements((uint64_t)a3);
      v13 = *a3;
      *a3 = v13 + 1;
      *(_BYTE *)(v12 + v13) = v11 != 0;
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(this, (const char **)&v16, -1))
        goto LABEL_11;
    }
  }
  return result;
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<unsigned int>(google::protobuf::internal::EpsCopyInputStream *a1, void *a2, int a3, int *a4)
{
  int v5;
  int v6;
  int v8;
  signed int v9;
  void *v10;
  void *v11;
  void *__src;

  v5 = a3;
  __src = a2;
  v6 = *((_DWORD *)a1 + 2) - (_DWORD)a2 + 16;
  if (v6 >= a3)
  {
LABEL_4:
    google::protobuf::RepeatedField<unsigned int>::Reserve(a4, *a4 + (v5 >> 2));
    v11 = (void *)google::protobuf::RepeatedField<unsigned int>::AddNAlreadyReserved((uint64_t)a4, v5 >> 2);
    memcpy(v11, __src, (int)(v5 & 0xFFFFFFFC));
    if (v5 == (v5 & 0xFFFFFFFC))
      return (char *)__src + (int)(v5 & 0xFFFFFFFC);
    else
      return 0;
  }
  else
  {
    while (1)
    {
      v8 = v6 >> 2;
      google::protobuf::RepeatedField<unsigned int>::Reserve(a4, *a4 + (v6 >> 2));
      v9 = v6 & 0xFFFFFFFC;
      v10 = (void *)google::protobuf::RepeatedField<unsigned int>::AddNAlreadyReserved((uint64_t)a4, v8);
      memcpy(v10, __src, v9);
      __src = (char *)__src + v9;
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a1, (const char **)&__src, -1) & 1) != 0)
        return 0;
      v5 -= v9;
      v6 = *((_DWORD *)a1 + 2) - (_DWORD)__src + 16;
      if (v5 <= v6)
        goto LABEL_4;
    }
  }
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<int>(google::protobuf::internal::EpsCopyInputStream *a1, void *a2, int a3, int *a4)
{
  int v5;
  int v6;
  int v8;
  signed int v9;
  void *v10;
  void *v11;
  void *__src;

  v5 = a3;
  __src = a2;
  v6 = *((_DWORD *)a1 + 2) - (_DWORD)a2 + 16;
  if (v6 >= a3)
  {
LABEL_4:
    google::protobuf::RepeatedField<int>::Reserve(a4, *a4 + (v5 >> 2));
    v11 = (void *)google::protobuf::RepeatedField<int>::AddNAlreadyReserved((uint64_t)a4, v5 >> 2);
    memcpy(v11, __src, (int)(v5 & 0xFFFFFFFC));
    if (v5 == (v5 & 0xFFFFFFFC))
      return (char *)__src + (int)(v5 & 0xFFFFFFFC);
    else
      return 0;
  }
  else
  {
    while (1)
    {
      v8 = v6 >> 2;
      google::protobuf::RepeatedField<int>::Reserve(a4, *a4 + (v6 >> 2));
      v9 = v6 & 0xFFFFFFFC;
      v10 = (void *)google::protobuf::RepeatedField<int>::AddNAlreadyReserved((uint64_t)a4, v8);
      memcpy(v10, __src, v9);
      __src = (char *)__src + v9;
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a1, (const char **)&__src, -1) & 1) != 0)
        return 0;
      v5 -= v9;
      v6 = *((_DWORD *)a1 + 2) - (_DWORD)__src + 16;
      if (v5 <= v6)
        goto LABEL_4;
    }
  }
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<unsigned long long>(google::protobuf::internal::EpsCopyInputStream *a1, void *a2, int a3, int *a4)
{
  int v5;
  int v6;
  int v8;
  signed int v9;
  void *v10;
  void *v11;
  void *__src;

  v5 = a3;
  __src = a2;
  v6 = *((_DWORD *)a1 + 2) - (_DWORD)a2 + 16;
  if (v6 >= a3)
  {
LABEL_4:
    google::protobuf::RepeatedField<unsigned long long>::Reserve(a4, *a4 + (v5 >> 3));
    v11 = (void *)google::protobuf::RepeatedField<unsigned long long>::AddNAlreadyReserved((uint64_t)a4, v5 >> 3);
    memcpy(v11, __src, (int)(v5 & 0xFFFFFFF8));
    if (v5 == (v5 & 0xFFFFFFF8))
      return (char *)__src + (int)(v5 & 0xFFFFFFF8);
    else
      return 0;
  }
  else
  {
    while (1)
    {
      v8 = v6 >> 3;
      google::protobuf::RepeatedField<unsigned long long>::Reserve(a4, *a4 + (v6 >> 3));
      v9 = v6 & 0xFFFFFFF8;
      v10 = (void *)google::protobuf::RepeatedField<unsigned long long>::AddNAlreadyReserved((uint64_t)a4, v8);
      memcpy(v10, __src, v9);
      __src = (char *)__src + v9;
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a1, (const char **)&__src, -1) & 1) != 0)
        return 0;
      v5 -= v9;
      v6 = *((_DWORD *)a1 + 2) - (_DWORD)__src + 16;
      if (v5 <= v6)
        goto LABEL_4;
    }
  }
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<long long>(google::protobuf::internal::EpsCopyInputStream *a1, void *a2, int a3, int *a4)
{
  int v5;
  int v6;
  int v8;
  signed int v9;
  void *v10;
  void *v11;
  void *__src;

  v5 = a3;
  __src = a2;
  v6 = *((_DWORD *)a1 + 2) - (_DWORD)a2 + 16;
  if (v6 >= a3)
  {
LABEL_4:
    google::protobuf::RepeatedField<long long>::Reserve(a4, *a4 + (v5 >> 3));
    v11 = (void *)google::protobuf::RepeatedField<long long>::AddNAlreadyReserved((uint64_t)a4, v5 >> 3);
    memcpy(v11, __src, (int)(v5 & 0xFFFFFFF8));
    if (v5 == (v5 & 0xFFFFFFF8))
      return (char *)__src + (int)(v5 & 0xFFFFFFF8);
    else
      return 0;
  }
  else
  {
    while (1)
    {
      v8 = v6 >> 3;
      google::protobuf::RepeatedField<long long>::Reserve(a4, *a4 + (v6 >> 3));
      v9 = v6 & 0xFFFFFFF8;
      v10 = (void *)google::protobuf::RepeatedField<long long>::AddNAlreadyReserved((uint64_t)a4, v8);
      memcpy(v10, __src, v9);
      __src = (char *)__src + v9;
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a1, (const char **)&__src, -1) & 1) != 0)
        return 0;
      v5 -= v9;
      v6 = *((_DWORD *)a1 + 2) - (_DWORD)__src + 16;
      if (v5 <= v6)
        goto LABEL_4;
    }
  }
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<float>(google::protobuf::internal::EpsCopyInputStream *a1, void *a2, int a3, int *a4)
{
  int v5;
  int v6;
  int v8;
  signed int v9;
  void *v10;
  void *v11;
  void *__src;

  v5 = a3;
  __src = a2;
  v6 = *((_DWORD *)a1 + 2) - (_DWORD)a2 + 16;
  if (v6 >= a3)
  {
LABEL_4:
    google::protobuf::RepeatedField<float>::Reserve(a4, *a4 + (v5 >> 2));
    v11 = (void *)google::protobuf::RepeatedField<float>::AddNAlreadyReserved((uint64_t)a4, v5 >> 2);
    memcpy(v11, __src, (int)(v5 & 0xFFFFFFFC));
    if (v5 == (v5 & 0xFFFFFFFC))
      return (char *)__src + (int)(v5 & 0xFFFFFFFC);
    else
      return 0;
  }
  else
  {
    while (1)
    {
      v8 = v6 >> 2;
      google::protobuf::RepeatedField<float>::Reserve(a4, *a4 + (v6 >> 2));
      v9 = v6 & 0xFFFFFFFC;
      v10 = (void *)google::protobuf::RepeatedField<float>::AddNAlreadyReserved((uint64_t)a4, v8);
      memcpy(v10, __src, v9);
      __src = (char *)__src + v9;
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a1, (const char **)&__src, -1) & 1) != 0)
        return 0;
      v5 -= v9;
      v6 = *((_DWORD *)a1 + 2) - (_DWORD)__src + 16;
      if (v5 <= v6)
        goto LABEL_4;
    }
  }
}

char *google::protobuf::internal::EpsCopyInputStream::ReadPackedFixed<double>(google::protobuf::internal::EpsCopyInputStream *a1, void *a2, int a3, int *a4)
{
  int v5;
  int v6;
  int v8;
  signed int v9;
  void *v10;
  void *v11;
  void *__src;

  v5 = a3;
  __src = a2;
  v6 = *((_DWORD *)a1 + 2) - (_DWORD)a2 + 16;
  if (v6 >= a3)
  {
LABEL_4:
    google::protobuf::RepeatedField<double>::Reserve(a4, *a4 + (v5 >> 3));
    v11 = (void *)google::protobuf::RepeatedField<double>::AddNAlreadyReserved((uint64_t)a4, v5 >> 3);
    memcpy(v11, __src, (int)(v5 & 0xFFFFFFF8));
    if (v5 == (v5 & 0xFFFFFFF8))
      return (char *)__src + (int)(v5 & 0xFFFFFFF8);
    else
      return 0;
  }
  else
  {
    while (1)
    {
      v8 = v6 >> 3;
      google::protobuf::RepeatedField<double>::Reserve(a4, *a4 + (v6 >> 3));
      v9 = v6 & 0xFFFFFFF8;
      v10 = (void *)google::protobuf::RepeatedField<double>::AddNAlreadyReserved((uint64_t)a4, v8);
      memcpy(v10, __src, v9);
      __src = (char *)__src + v9;
      if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a1, (const char **)&__src, -1) & 1) != 0)
        return 0;
      v5 -= v9;
      v6 = *((_DWORD *)a1 + 2) - (_DWORD)__src + 16;
      if (v5 <= v6)
        goto LABEL_4;
    }
  }
}

void google::protobuf::internal::UnknownFieldLiteParserHelper::AddVarint(std::string **this, int a2, unint64_t a3)
{
  std::string *v3;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  std::string *v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *this;
  if (*this)
  {
    v6 = (8 * a2);
    if (v6 < 0x80)
    {
      LOBYTE(v7) = 8 * a2;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        v7 = v6 >> 7;
        v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    v9 = *this;
    if (a3 < 0x80)
    {
      LOBYTE(v10) = a3;
    }
    else
    {
      do
      {
        std::string::push_back(v9, a3 | 0x80);
        v10 = a3 >> 7;
        v11 = a3 >> 14;
        a3 >>= 7;
      }
      while (v11);
    }
    std::string::push_back(v9, v10);
  }
}

std::string *google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed64(std::string *this, int a2, uint64_t a3)
{
  std::string *v3;
  std::string **v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = (std::string *)this->__r_.__value_.__r.__words[0];
  if (this->__r_.__value_.__r.__words[0])
  {
    v5 = (std::string **)this;
    v6 = (8 * a2) | 1u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 1;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        v7 = v6 >> 7;
        v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    v9[0] = a3;
    return std::string::append(*v5, (const std::string::value_type *)v9, 8uLL);
  }
  return this;
}

char *google::protobuf::internal::UnknownFieldLiteParserHelper::ParseLengthDelimited(std::string **this, int a2, std::string::value_type *a3, google::protobuf::internal::ParseContext *a4)
{
  int v7;
  std::string::value_type *v8;
  char *result;
  int v10;
  std::string *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  std::string *v16;
  unint64_t v17;
  unint64_t v18;

  v7 = *a3;
  if (*a3 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)a3, (const char *)*a3);
    if (!result)
      return result;
    v8 = result;
    v7 = v10;
  }
  else
  {
    v8 = a3 + 1;
  }
  v11 = *this;
  if (*this)
  {
    v12 = (8 * a2) | 2u;
    if (v12 < 0x80)
    {
      LOBYTE(v13) = v12;
    }
    else
    {
      do
      {
        std::string::push_back(v11, v12 | 0x80);
        v13 = v12 >> 7;
        v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
    }
    std::string::push_back(v11, v13);
    v15 = v7;
    v16 = *this;
    if (v7 < 0x80)
    {
      LOBYTE(v17) = v7;
    }
    else
    {
      do
      {
        std::string::push_back(v16, v15 | 0x80);
        v17 = v15 >> 7;
        v18 = v15 >> 14;
        v15 >>= 7;
      }
      while (v18);
    }
    std::string::push_back(v16, v17);
    return (char *)google::protobuf::internal::EpsCopyInputStream::AppendString((uint64_t)a4, v8, v7, *this);
  }
  else if (*((_QWORD *)a4 + 1) - (_QWORD)v8 + 16 >= v7)
  {
    return &v8[v7];
  }
  else
  {
    return (char *)google::protobuf::internal::EpsCopyInputStream::SkipFallback(a4, v8, v7);
  }
}

char *google::protobuf::internal::UnknownFieldLiteParserHelper::ParseGroup(std::string **this, int a2, char *a3, int32x2_t *a4)
{
  std::string *v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  BOOL v13;
  char *v14;
  __int32 v15;
  char *v17;
  std::string *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v7 = *this;
  v8 = 8 * a2;
  if (*this)
  {
    v9 = v8 | 3u;
    if (v9 < 0x80)
    {
      LOBYTE(v10) = v8 | 3;
    }
    else
    {
      do
      {
        std::string::push_back(v7, v9 | 0x80);
        v10 = v9 >> 7;
        v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
    }
    std::string::push_back(v7, v10);
  }
  v12 = a4[11].i32[0];
  v13 = __OFSUB__(v12--, 1);
  a4[11].i32[0] = v12;
  if (v12 < 0 != v13)
    return 0;
  ++a4[11].i32[1];
  v14 = google::protobuf::internal::WireFormatParser<google::protobuf::internal::UnknownFieldLiteParserHelper>((google::protobuf::internal::UnknownFieldLiteParserHelper *)this, a3, (google::protobuf::internal::EpsCopyInputStream *)a4);
  a4[11] = vadd_s32(a4[11], (int32x2_t)0xFFFFFFFF00000001);
  v15 = a4[10].i32[0];
  a4[10].i32[0] = 0;
  if (v15 != (v8 | 3) || v14 == 0)
    return 0;
  v17 = v14;
  v18 = *this;
  if (v18)
  {
    v19 = v8 | 4u;
    if (v19 < 0x80)
    {
      LOBYTE(v20) = v8 | 4;
    }
    else
    {
      do
      {
        std::string::push_back(v18, v19 | 0x80);
        v20 = v19 >> 7;
        v21 = v19 >> 14;
        v19 >>= 7;
      }
      while (v21);
    }
    std::string::push_back(v18, v20);
  }
  return v17;
}

std::string *google::protobuf::internal::UnknownFieldLiteParserHelper::AddFixed32(std::string *this, int a2, int a3)
{
  std::string *v3;
  std::string **v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  std::string::value_type __s[4];

  v3 = (std::string *)this->__r_.__value_.__r.__words[0];
  if (this->__r_.__value_.__r.__words[0])
  {
    v5 = (std::string **)this;
    v6 = (8 * a2) | 5u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 5;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        v7 = v6 >> 7;
        v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    *(_DWORD *)__s = a3;
    return std::string::append(*v5, __s, 4uLL);
  }
  return this;
}

const std::string::value_type *google::protobuf::internal::EpsCopyInputStream::AppendString(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  uint64_t v6;

  if (*(_QWORD *)(a1 + 8) - (_QWORD)__s + 16 < a3)
    return google::protobuf::internal::EpsCopyInputStream::AppendStringFallback(a1, __s, a3, this);
  v6 = a3;
  std::string::append(this, __s, a3);
  return &__s[v6];
}

void google::protobuf::internal::PrintUTF8ErrorLog(google::protobuf::internal *this, const char *a2, const char *a3)
{
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  std::string *v13;
  char v14;
  std::string v15[2];
  std::string __p;
  void *v17[2];
  uint64_t v18;

  v17[0] = 0;
  v17[1] = 0;
  v18 = 0;
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  if (this)
  {
    google::protobuf::StringPrintf((google::protobuf *)" '%s'", v15, this);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    __p = v15[0];
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/wire_format_lite.cc", 578);
  v5 = google::protobuf::internal::LogMessage::operator<<(v15, "String field");
  v6 = google::protobuf::internal::LogMessage::operator<<(v5, (const std::string::value_type *)&__p);
  v7 = google::protobuf::internal::LogMessage::operator<<(v6, " contains invalid ");
  v8 = google::protobuf::internal::LogMessage::operator<<(v7, "UTF-8 data when ");
  v9 = google::protobuf::internal::LogMessage::operator<<(v8, a2);
  v10 = google::protobuf::internal::LogMessage::operator<<(v9, " a protocol ");
  v11 = google::protobuf::internal::LogMessage::operator<<(v10, "buffer. Use the 'bytes' type if you intend to send raw ");
  v12 = google::protobuf::internal::LogMessage::operator<<(v11, "bytes. ");
  v13 = google::protobuf::internal::LogMessage::operator<<(v12, (const std::string::value_type *)v17);
  google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v13->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v18) < 0)
    operator delete(v17[0]);
}

void sub_1BF844690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  uint64_t v22;

  if (a22 < 0)
    operator delete(__p);
  if (*(char *)(v22 - 17) < 0)
    operator delete(*(void **)(v22 - 40));
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::WireFormatLite::VerifyUtf8String(google::protobuf::internal *a1, const char *a2, int a3, google::protobuf::internal *a4)
{
  _BOOL8 IsStructurallyValidUTF8;
  const char *v7;
  const char *v8;

  IsStructurallyValidUTF8 = google::protobuf::internal::IsStructurallyValidUTF8(a1, a2);
  if (!IsStructurallyValidUTF8)
  {
    v7 = "serializing";
    if (a3 != 1)
      v7 = 0;
    if (a3)
      v8 = v7;
    else
      v8 = "parsing";
    google::protobuf::internal::PrintUTF8ErrorLog(a4, v8, 0);
  }
  return IsStructurallyValidUTF8;
}

uint64_t google::protobuf::internal::WireFormatLite::Int32Size(int *a1)
{
  int v1;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v1 = *a1;
  if (*a1 < 1)
    return 0;
  v3 = 0;
  v4 = 0;
  do
  {
    v5 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(a1, v3);
    if (v5 < 0)
      v6 = 10;
    else
      v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    v4 += v6;
    ++v3;
  }
  while (v1 != v3);
  return v4;
}

_QWORD *std::operator<<[abi:ne180100]<std::char_traits<char>>(_QWORD *a1, char *a2)
{
  char *v3;
  int v4;
  const std::locale::facet *v5;
  int v6;
  std::locale v8;

  v3 = (char *)a1 + *(_QWORD *)(*a1 - 24);
  v4 = *a2;
  if (*((_DWORD *)v3 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)));
    v5 = std::locale::use_facet(&v8, MEMORY[0x1E0DE4A90]);
    v6 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v5->__vftable[2].~facet_0)(v5, 32);
    std::locale::~locale(&v8);
    *((_DWORD *)v3 + 36) = v6;
  }
  *((_DWORD *)v3 + 36) = v4;
  return a1;
}

void sub_1BF844854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
  std::locale::~locale(&a10);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ArrayInputStream::ArrayInputStream(uint64_t this, const void *a2, int a3, int a4)
{
  int v4;

  *(_QWORD *)this = &off_1E7929D48;
  *(_QWORD *)(this + 8) = a2;
  if (a4 <= 0)
    v4 = a3;
  else
    v4 = a4;
  *(_DWORD *)(this + 16) = a3;
  *(_DWORD *)(this + 20) = v4;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

BOOL google::protobuf::io::ArrayInputStream::Next(google::protobuf::io::ArrayInputStream *this, const void **a2, int *a3)
{
  uint64_t v3;
  int v4;
  int v5;

  v3 = *((int *)this + 6);
  v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5))
      v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 7) = v5;
    *a2 = (const void *)(*((_QWORD *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void google::protobuf::io::ArrayInputStream::BackUp(google::protobuf::io::ArrayInputStream *this, int a2)
{
  int v4;
  std::string *v5;
  std::string *v6;
  std::string *v7;
  std::string *v8;
  char v9;
  std::string v10[2];

  v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 80);
    v5 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (last_returned_size_) > (0): ");
    v6 = google::protobuf::internal::LogMessage::operator<<(v5, "BackUp() can only be called after a successful Next().");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 82);
    v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (last_returned_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 83);
    v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  *((_QWORD *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_1BF8449EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::ArrayInputStream::Skip(google::protobuf::io::ArrayInputStream *this, int a2)
{
  std::string *v4;
  int v5;
  int v6;
  int v7;
  _BOOL8 result;
  int v9;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 89);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_DWORD *)this + 4);
  v6 = *((_DWORD *)this + 6);
  v7 = v5 - v6;
  result = v5 - v6 >= a2;
  v9 = v6 + a2;
  if (v7 >= a2)
    v5 = v9;
  *((_DWORD *)this + 6) = v5;
  *((_DWORD *)this + 7) = 0;
  return result;
}

void sub_1BF844A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ArrayInputStream::ByteCount(google::protobuf::io::ArrayInputStream *this)
{
  return *((int *)this + 6);
}

_QWORD *google::protobuf::io::StringOutputStream::StringOutputStream(_QWORD *result, uint64_t a2)
{
  *result = &off_1E7929D88;
  result[1] = a2;
  return result;
}

uint64_t google::protobuf::io::StringOutputStream::Next(google::protobuf::io::StringOutputStream *this, void **a2, int *a3)
{
  uint64_t v6;
  std::string *v7;
  uint64_t v8;
  std::string::size_type v9;
  uint64_t v10;
  uint64_t v11;
  std::string *v12;
  std::string *v13;
  int v15;
  uint64_t **v16;
  uint64_t v17;
  char v18;
  std::string v19[2];

  v6 = *((_QWORD *)this + 1);
  if (!v6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 142);
    v7 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v18, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
    v6 = *((_QWORD *)this + 1);
  }
  if (*(char *)(v6 + 23) < 0)
  {
    v10 = *(_QWORD *)(v6 + 8);
    v8 = (int)v10;
    v9 = (*(_QWORD *)(v6 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if ((int)v10 < v9)
      goto LABEL_13;
    v11 = *(_QWORD *)(v6 + 8);
    if ((int)v10 >= 0x40000000)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 155);
      v12 = google::protobuf::internal::LogMessage::operator<<(v19, "Cannot allocate buffer larger than kint32max for ");
      v13 = google::protobuf::internal::LogMessage::operator<<(v12, "StringOutputStream.");
      google::protobuf::internal::LogFinisher::operator=((int)&v18, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
      return 0;
    }
LABEL_10:
    v15 = 2 * v11;
    if (v15 <= 16)
      v9 = 16;
    else
      v9 = v15;
    goto LABEL_13;
  }
  v8 = *(unsigned __int8 *)(v6 + 23);
  if (*(unsigned __int8 *)(v6 + 23) >= 0x16u)
  {
    LODWORD(v11) = *(unsigned __int8 *)(v6 + 23);
    LODWORD(v10) = v11;
    goto LABEL_10;
  }
  v9 = 22;
  LODWORD(v10) = *(unsigned __int8 *)(v6 + 23);
LABEL_13:
  std::string::resize((std::string *)v6, v9, 0);
  v16 = (uint64_t **)*((_QWORD *)this + 1);
  if (*((char *)v16 + 23) < 0)
    v16 = (uint64_t **)*v16;
  *a2 = (char *)v16 + v8;
  v17 = *((_QWORD *)this + 1);
  if (*(char *)(v17 + 23) < 0)
    v17 = *(_QWORD *)(v17 + 8);
  else
    LODWORD(v17) = *(unsigned __int8 *)(v17 + 23);
  *a3 = v17 - v10;
  return 1;
}

void sub_1BF844C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::io::StringOutputStream::BackUp(google::protobuf::io::StringOutputStream *this, int a2)
{
  std::string *v4;
  uint64_t v5;
  std::string *v6;
  uint64_t v7;
  unint64_t v8;
  std::string *v9;
  char v10;
  std::string v11[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 173);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)this + 1);
  if (!v5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 174);
    v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    v5 = *((_QWORD *)this + 1);
  }
  LODWORD(v7) = *(char *)(v5 + 23);
  if ((v7 & 0x80000000) != 0)
    v8 = *(_QWORD *)(v5 + 8);
  else
    v8 = *(unsigned __int8 *)(v5 + 23);
  if (v8 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 175);
    v9 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) <= (target_->size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    v5 = *((_QWORD *)this + 1);
    LOBYTE(v7) = *(_BYTE *)(v5 + 23);
  }
  if ((v7 & 0x80) != 0)
    v7 = *(_QWORD *)(v5 + 8);
  else
    v7 = v7;
  std::string::resize((std::string *)v5, v7 - a2, 0);
}

void sub_1BF844D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::StringOutputStream::ByteCount(google::protobuf::io::StringOutputStream *this)
{
  uint64_t v1;
  std::string *v3;
  char v5;
  std::string v6[2];

  v1 = *((_QWORD *)this + 1);
  if (!v1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc", 180);
    v3 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v3->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    v1 = *((_QWORD *)this + 1);
  }
  if (*(char *)(v1 + 23) < 0)
    return *(_QWORD *)(v1 + 8);
  else
    return *(unsigned __int8 *)(v1 + 23);
}

void sub_1BF844E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::io::ArrayInputStream::~ArrayInputStream(google::protobuf::io::ArrayInputStream *this)
{
  JUMPOUT(0x1C3B8D890);
}

void google::protobuf::io::StringOutputStream::~StringOutputStream(google::protobuf::io::StringOutputStream *this)
{
  JUMPOUT(0x1C3B8D890);
}

_QWORD *google::protobuf::internal::ArenaImpl::thread_cache(google::protobuf::internal::ArenaImpl *this)
{
  unsigned __int8 v1;
  pthread_key_t *v3;

  if ((v1 & 1) == 0
  {
    v3 = (pthread_key_t *)operator new();
    pthread_key_create(v3, (void (__cdecl *)(void *))google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Delete);
    google::protobuf::internal::ArenaImpl::thread_cache(void)::thread_cache_ = (uint64_t)v3;
  }
  return google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Get((pthread_key_t *)google::protobuf::internal::ArenaImpl::thread_cache(void)::thread_cache_);
}

void sub_1BF844F1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Get(pthread_key_t *a1)
{
  _QWORD *v2;

  v2 = pthread_getspecific(*a1);
  if (!v2)
  {
    v2 = (_QWORD *)operator new();
    *v2 = -1;
    v2[1] = 0;
    pthread_setspecific(*a1, v2);
  }
  return v2;
}

_QWORD *google::protobuf::internal::ArenaImpl::SerialArena::New(google::protobuf::internal::ArenaImpl::SerialArena *this, google::protobuf::internal::ArenaImpl::Block *a2, void *a3, google::protobuf::internal::ArenaImpl *a4)
{
  std::string *v7;
  std::string *v8;
  _QWORD *v9;
  uint64_t v10;
  char v12;
  std::string v13[2];

  if (*((_QWORD *)this + 1) != 24)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/arena.cc", 349);
    v7 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (b->pos()) == (kBlockHeaderSize): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  if (*((_QWORD *)this + 2) <= 0x5FuLL)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/arena.cc", 350);
    v8 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (kBlockHeaderSize + kSerialArenaSize) <= (b->size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  v9 = (_QWORD *)google::protobuf::internal::ArenaImpl::Block::Pointer(this, 0x18uLL);
  *((_QWORD *)this + 1) = 96;
  *v9 = a3;
  v9[1] = a2;
  v9[2] = this;
  v9[5] = google::protobuf::internal::ArenaImpl::Block::Pointer(this, 0x60uLL);
  v10 = google::protobuf::internal::ArenaImpl::Block::Pointer(this, *((_QWORD *)this + 2));
  v9[3] = 0;
  v9[7] = 0;
  v9[8] = 0;
  v9[6] = v10;
  return v9;
}

void sub_1BF8450E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

_QWORD *google::protobuf::internal::ArenaImpl::NewBlock(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  std::string *v8;
  unint64_t v9;
  _QWORD *result;
  unint64_t *v11;
  unint64_t v12;
  char v13;
  std::string v14[2];

  if (a2)
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (*(_QWORD *)(a1 + 48) >= (unint64_t)(2 * v6))
      v7 = 2 * v6;
    else
      v7 = *(_QWORD *)(a1 + 48);
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 40);
  }
  if (a3 >= 0xFFFFFFFFFFFFFFE8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/arena.cc", 118);
    v8 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kBlockHeaderSize): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  if (v7 <= a3 + 24)
    v9 = a3 + 24;
  else
    v9 = v7;
  result = (_QWORD *)(*(uint64_t (**)(unint64_t))(a1 + 72))(v9);
  *result = a2;
  result[1] = 24;
  result[2] = v9;
  v11 = (unint64_t *)(a1 + 16);
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + v9, v11));
  return result;
}

void sub_1BF8451F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_QWORD *google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(google::protobuf::internal::ArenaImpl::SerialArena *this, void *a2, void (*a3)(void *))
{
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;

  result = (_QWORD *)*((_QWORD *)this + 3);
  do
  {
    if (result)
    {
      if ((unint64_t)(2 * *result) >= 0x40)
        v7 = 64;
      else
        v7 = 2 * *result;
    }
    else
    {
      v7 = 8;
    }
    result = (_QWORD *)google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(this, (16 * (_WORD)v7 + 23) & 0xFF0);
    v8 = *((_QWORD *)this + 3);
    *result = v7;
    result[1] = v8;
    *((_QWORD *)this + 3) = result;
    *((_QWORD *)this + 7) = result + 2;
    *((_QWORD *)this + 8) = &result[2 * v7 + 2];
  }
  while (!(16 * v7));
  result[2] = a2;
  result[3] = a3;
  *((_QWORD *)this + 7) = result + 4;
  return result;
}

unint64_t google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(google::protobuf::internal::ArenaImpl::SerialArena *this, unint64_t a2)
{
  std::string *v4;
  unint64_t result;
  unint64_t v6;
  std::string *v7;
  char v8;
  std::string v9[2];

  if (((a2 + 7) & 0xFFFFFFFFFFFFFFF8) != a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/arena_impl.h", 160);
    v4 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (internal::AlignUpTo8(n)) == (n): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  result = *((_QWORD *)this + 5);
  v6 = *((_QWORD *)this + 6);
  if (v6 < result)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/arena_impl.h", 161);
    v7 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (limit_) >= (ptr_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
    result = *((_QWORD *)this + 5);
    v6 = *((_QWORD *)this + 6);
  }
  if (v6 - result < a2)
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedFallback(this, a2);
  *((_QWORD *)this + 5) = result + a2;
  return result;
}

void sub_1BF845390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unint64_t google::protobuf::internal::ArenaImpl::AllocateAligned(google::protobuf::internal::ArenaImpl *this, unint64_t a2)
{
  _QWORD *v4;
  google::protobuf::internal::ArenaImpl::SerialArena *v5;

  v4 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  if (*v4 == *((_QWORD *)this + 4))
  {
    v5 = (google::protobuf::internal::ArenaImpl::SerialArena *)v4[1];
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(v5, a2);
  }
  v5 = (google::protobuf::internal::ArenaImpl::SerialArena *)atomic_load((unint64_t *)this + 1);
  if (v5 && *((_QWORD **)v5 + 1) == v4)
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(v5, a2);
  return google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(this, a2);
}

unint64_t google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(google::protobuf::internal::ArenaImpl *this, unint64_t a2)
{
  google::protobuf::internal::ArenaImpl *SerialArena;

  SerialArena = google::protobuf::internal::ArenaImpl::GetSerialArena(this);
  return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(SerialArena, a2);
}

void *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(google::protobuf::internal::ArenaImpl *this, unint64_t a2, void (*a3)(void *))
{
  _QWORD *v6;
  google::protobuf::internal::ArenaImpl::SerialArena *v7;

  v6 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  if (*v6 == *((_QWORD *)this + 4))
  {
    v7 = (google::protobuf::internal::ArenaImpl::SerialArena *)v6[1];
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedAndAddCleanup(v7, a2, a3);
  }
  v7 = (google::protobuf::internal::ArenaImpl::SerialArena *)atomic_load((unint64_t *)this + 1);
  if (v7 && *((_QWORD **)v7 + 1) == v6)
    return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedAndAddCleanup(v7, a2, a3);
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(this, a2, a3);
}

void *google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedAndAddCleanup(google::protobuf::internal::ArenaImpl::SerialArena *this, unint64_t a2, void (*a3)(void *))
{
  void *Aligned;
  void *v6;
  _QWORD *v7;

  Aligned = (void *)google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(this, a2);
  v6 = Aligned;
  v7 = (_QWORD *)*((_QWORD *)this + 7);
  if (v7 == *((_QWORD **)this + 8))
  {
    google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(this, Aligned, a3);
  }
  else
  {
    *v7 = Aligned;
    v7[1] = a3;
    *((_QWORD *)this + 7) = v7 + 2;
  }
  return v6;
}

void *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(google::protobuf::internal::ArenaImpl *this, unint64_t a2, void (*a3)(void *))
{
  google::protobuf::internal::ArenaImpl *SerialArena;

  SerialArena = google::protobuf::internal::ArenaImpl::GetSerialArena(this);
  return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedAndAddCleanup(SerialArena, a2, a3);
}

google::protobuf::internal::ArenaImpl *google::protobuf::internal::ArenaImpl::AddCleanup(google::protobuf::internal::ArenaImpl *this, void *a2, void (*a3)(void *))
{
  _QWORD *v6;
  _QWORD *v7;
  google::protobuf::internal::ArenaImpl *result;
  _QWORD *v9;

  v6 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  v7 = v6;
  if (*v6 == *((_QWORD *)this + 4))
  {
    result = (google::protobuf::internal::ArenaImpl *)v6[1];
  }
  else
  {
    result = (google::protobuf::internal::ArenaImpl *)atomic_load((unint64_t *)this + 1);
    if (!result || *((_QWORD **)result + 1) != v7)
      return google::protobuf::internal::ArenaImpl::AddCleanupFallback(this, a2, a3);
  }
  v9 = (_QWORD *)*((_QWORD *)result + 7);
  if (v9 == *((_QWORD **)result + 8))
    return (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(result, a2, a3);
  *v9 = a2;
  v9[1] = a3;
  *((_QWORD *)result + 7) = v9 + 2;
  return result;
}

google::protobuf::internal::ArenaImpl *google::protobuf::internal::ArenaImpl::AddCleanupFallback(google::protobuf::internal::ArenaImpl *this, void *a2, void (*a3)(void *))
{
  google::protobuf::internal::ArenaImpl *result;
  _QWORD *v6;

  result = google::protobuf::internal::ArenaImpl::GetSerialArena(this);
  v6 = (_QWORD *)*((_QWORD *)result + 7);
  if (v6 == *((_QWORD **)result + 8))
    return (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::SerialArena::AddCleanupFallback(result, a2, a3);
  *v6 = a2;
  v6[1] = a3;
  *((_QWORD *)result + 7) = v6 + 2;
  return result;
}

google::protobuf::internal::ArenaImpl *google::protobuf::internal::ArenaImpl::GetSerialArena(google::protobuf::internal::ArenaImpl *this)
{
  google::protobuf::internal::ArenaImpl *v2;
  unint64_t v3;
  google::protobuf::internal::ArenaImpl::Block *v5;

  v2 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache(this);
  if (*(_QWORD *)v2 == *((_QWORD *)this + 4))
    return (google::protobuf::internal::ArenaImpl *)*((_QWORD *)v2 + 1);
  v3 = atomic_load((unint64_t *)this + 1);
  if (v3 && *(google::protobuf::internal::ArenaImpl **)(v3 + 8) == v2)
    return (google::protobuf::internal::ArenaImpl *)v3;
  v5 = (google::protobuf::internal::ArenaImpl::Block *)google::protobuf::internal::ArenaImpl::thread_cache(v2);
  return google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(this, v5);
}

google::protobuf::internal::ArenaImpl *google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(google::protobuf::internal::ArenaImpl *this, google::protobuf::internal::ArenaImpl::Block *a2)
{
  unint64_t *v3;
  google::protobuf::internal::ArenaImpl *v4;
  uint64_t v5;
  google::protobuf::internal::ArenaImpl::SerialArena *v6;
  google::protobuf::internal::ArenaImpl *v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  google::protobuf::internal::ArenaImpl *v14;
  unint64_t v15;

  v3 = (unint64_t *)this;
  v4 = (google::protobuf::internal::ArenaImpl *)atomic_load((unint64_t *)this);
  if (!v4)
  {
LABEL_4:
    if (*((_QWORD *)this + 5) <= 0x60uLL)
      v5 = 96;
    else
      v5 = *((_QWORD *)this + 5);
    v6 = (google::protobuf::internal::ArenaImpl::SerialArena *)(*((uint64_t (**)(uint64_t))this + 9))(v5);
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 24;
    *((_QWORD *)v6 + 2) = v5;
    v8 = v3 + 2;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + v5, v8));
    this = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::SerialArena::New(v6, a2, v3, v7);
    v4 = this;
    v10 = *v3;
    *((_QWORD *)this + 4) = *v3;
    v11 = __ldxr(v3);
    if (v11 == v10)
    {
      if (__stlxr((unint64_t)this, v3))
        goto LABEL_13;
      goto LABEL_19;
    }
    __clrex();
LABEL_13:
    while (1)
    {
      *((_QWORD *)this + 4) = v11;
      v12 = __ldxr(v3);
      if (v12 != v11)
        break;
      if (__stlxr((unint64_t)this, v3))
        goto LABEL_17;
      v13 = 1;
LABEL_18:
      v11 = v12;
      if ((v13 & 1) != 0)
        goto LABEL_19;
    }
    __clrex();
LABEL_17:
    v13 = 0;
    goto LABEL_18;
  }
  while (*((google::protobuf::internal::ArenaImpl::Block **)v4 + 1) != a2)
  {
    v4 = (google::protobuf::internal::ArenaImpl *)*((_QWORD *)v4 + 4);
    if (!v4)
      goto LABEL_4;
  }
LABEL_19:
  v14 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache(this);
  *((_QWORD *)v14 + 1) = v4;
  v15 = v3[4];
  *google::protobuf::internal::ArenaImpl::thread_cache(v14) = v15;
  atomic_store((unint64_t)v4, v3 + 1);
  return v4;
}

uint64_t google::protobuf::internal::ArenaImpl::SerialArena::AllocateAlignedFallback(google::protobuf::internal::ArenaImpl::SerialArena *this, unint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;

  v4 = *((_QWORD *)this + 2);
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(v4 + 16) - *((_QWORD *)this + 6) + *((_QWORD *)this + 5);
  v5 = google::protobuf::internal::ArenaImpl::NewBlock(*(_QWORD *)this, v4, a2);
  *((_QWORD *)this + 2) = v5;
  *((_QWORD *)this + 5) = google::protobuf::internal::ArenaImpl::Block::Pointer((google::protobuf::internal::ArenaImpl::Block *)v5, v5[1]);
  *((_QWORD *)this + 6) = google::protobuf::internal::ArenaImpl::Block::Pointer(*((google::protobuf::internal::ArenaImpl::Block **)this + 2), *(_QWORD *)(*((_QWORD *)this + 2) + 16));
  return google::protobuf::internal::ArenaImpl::SerialArena::AllocateAligned(this, a2);
}

uint64_t google::protobuf::internal::ArenaImpl::Block::Pointer(google::protobuf::internal::ArenaImpl::Block *this, unint64_t a2)
{
  std::string *v4;
  char v6;
  std::string v7[2];

  if (*((_QWORD *)this + 2) < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/arena_impl.h", 222);
    v4 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: n <= size_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  return (uint64_t)this + a2;
}

void sub_1BF8458AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ArenaImpl::SpaceAllocated(google::protobuf::internal::ArenaImpl *this)
{
  return *((_QWORD *)this + 2);
}

uint64_t google::protobuf::Arena::OnArenaAllocation(uint64_t this, const std::type_info *a2, uint64_t a3)
{
  uint64_t (*v3)(const std::type_info *, uint64_t, _QWORD);

  v3 = *(uint64_t (**)(const std::type_info *, uint64_t, _QWORD))(this + 88);
  if (v3)
    return v3(a2, a3, *(_QWORD *)(this + 112));
  return this;
}

uint64_t google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Delete(uint64_t result)
{
  if (result)
    JUMPOUT(0x1C3B8D890);
  return result;
}

BOOL google::protobuf::internal::SecondsToDateTime(int64_t a1, int *a2)
{
  unint64_t v2;
  int v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t i;
  char v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;

  v2 = a1 + 0xE7791F700;
  if ((unint64_t)(a1 + 0xE7791F700) <= 0x497786387FLL)
  {
    if (a1 < (uint64_t)0xFFFFFFF478CE6280)
    {
      v3 = 1;
      v4 = a1 + 0xE7791F700;
    }
    else
    {
      v3 = (400 * (v2 / 0x2F0605980)) | 1;
      v4 = v2 % 0x2F0605980;
    }
    if ((unsigned __int16)v3 % 0x190u <= 0x12C)
      v5 = 3155673600;
    else
      v5 = 3155760000;
    if (v4 >= (unint64_t)v5)
    {
      do
      {
        v4 -= v5;
        v3 += 100;
        if (v3 % 400 > 300 || v3 % 400 == 0)
          v5 = 3155760000;
        else
          v5 = 3155673600;
      }
      while (v4 >= v5);
    }
    while (1)
    {
      if (v3 % 100 && v3 % 100 < 97 || !(v3 % 400) || v3 % 400 >= 397)
      {
        v7 = -126230400;
        if (v4 < 126230400)
        {
          while (1)
          {
LABEL_25:
            HIDWORD(v8) = 85899344 - 1030792151 * v3;
            LODWORD(v8) = HIDWORD(v8);
            if ((v8 >> 4) < 0xA3D70B)
            {
              v10 = -31622400;
              if (v4 < 31622400)
              {
                v9 = 1;
LABEL_37:
                for (i = 1; ; ++i)
                {
                  v12 = i != 2 || !v9;
                  if ((v12 & 1) != 0)
                  {
                    if (v4 < 86400 * v14)
                    {
LABEL_47:
                      v15 = v4 / 86400 + 1;
                      v16 = v4 % 86400;
                      v17 = v16 / 3600;
                      v16 %= 3600;
                      *a2 = v3;
                      a2[1] = i;
                      a2[2] = v15;
                      a2[3] = v17;
                      a2[4] = ((__int16)((34953 * (__int16)v16) >> 16) >> 5)
                            + (((v16 + ((-30583 * (__int16)v16) >> 16)) & 0x8000) >> 15);
                      a2[5] = (__int16)(v16
                                      - 60
                                      * (((__int16)((34953 * (__int16)v16) >> 16) >> 5)
                                       + (((v16 + ((-30583 * (__int16)v16) >> 16)) & 0x8000) >> 15)));
                      return v2 < 0x4977863880;
                    }
                    v13 = -86400 * v14;
                  }
                  else
                  {
                    if (v4 < 2505600)
                      goto LABEL_47;
                    v13 = -2505600;
                  }
                  v4 += v13;
                }
              }
            }
            else
            {
              v9 = v3 != 100 * (v3 / 100);
              if ((v3 & 3) != 0 || !(v3 % 100))
              {
                if (v4 < 31536000)
                {
                  if ((v3 & 3) != 0)
                    v9 = 0;
                  goto LABEL_37;
                }
                v10 = -31536000;
              }
              else
              {
                v10 = -31622400;
                if (v4 < 31622400)
                  goto LABEL_37;
              }
            }
            v4 += v10;
            ++v3;
          }
        }
      }
      else
      {
        if (v4 < 126144000)
          goto LABEL_25;
        v7 = -126144000;
      }
      v4 += v7;
      v3 += 4;
    }
  }
  return v2 < 0x4977863880;
}

void google::protobuf::internal::FormatTime(google::protobuf::internal *this@<X0>, unsigned int a2@<W1>, void **a3@<X8>)
{
  unint64_t v5;
  char *v6;
  std::string *v7;
  __int128 v8;
  void **v9;
  std::string::size_type v10;
  size_t size;
  std::string *v12;
  std::string v13;
  void *__p[2];
  int64_t v15;
  std::string v16;
  int v17[6];

  if (a2 <= 0x3B9AC9FF && google::protobuf::internal::SecondsToDateTime((int64_t)this, v17))
  {
    google::protobuf::StringPrintf((google::protobuf *)"%04d-%02d-%02dT%02d:%02d:%02d", &v16, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5]);
    if (a2)
    {
      v5 = a2 / 0xF4240uLL;
      if (a2 % 0xF4240)
      {
        LODWORD(v5) = a2 / 0x3E8;
        if (a2 % 0x3E8)
          v6 = "%09d";
        else
          v6 = "%06d";
        if (a2 % 0x3E8)
          v5 = a2;
        else
          v5 = v5;
      }
      else
      {
        v6 = "%03d";
      }
      google::protobuf::StringPrintf((google::protobuf *)v6, &v13, v5);
      v7 = std::string::insert(&v13, 0, ".");
      v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
      v15 = v7->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v8;
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      if (v15 >= 0)
        v9 = __p;
      else
        v9 = (void **)__p[0];
      if (v15 >= 0)
        v10 = HIBYTE(v15);
      else
        v10 = (std::string::size_type)__p[1];
      std::string::append(&v16, (const std::string::value_type *)v9, v10);
      if (SHIBYTE(v15) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v13.__r_.__value_.__l.__data_);
    }
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v16.__r_.__value_.__r.__words[2]);
    else
      size = v16.__r_.__value_.__l.__size_;
    std::string::basic_string[abi:ne180100]((uint64_t)a3, size + 1);
    if (*((char *)a3 + 23) < 0)
      a3 = (void **)*a3;
    if (size)
    {
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v12 = &v16;
      else
        v12 = (std::string *)v16.__r_.__value_.__r.__words[0];
      memmove(a3, v12, size);
    }
    *(_WORD *)((char *)a3 + size) = 90;
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(a3, "InvalidTime");
  }
}

void sub_1BF845E08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a27 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (*(char *)(v27 - 41) < 0)
    operator delete(*(void **)(v27 - 64));
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::DestroyMessage(google::protobuf::internal *this, const void *a2)
{
  return (**(uint64_t (***)(google::protobuf::internal *))this)(this);
}

void google::protobuf::internal::DestroyString(void **this, const void *a2)
{
  if (*((char *)this + 23) < 0)
    operator delete(*this);
}

uint64_t google::protobuf::internal::StringSpaceUsedExcludingSelfLong(unint64_t a1)
{
  BOOL v1;

  if (*(char *)(a1 + 23) < 0 && (*(_QWORD *)a1 >= a1 ? (v1 = *(_QWORD *)a1 >= a1 + 24) : (v1 = 1), v1))
    return (*(_QWORD *)(a1 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
  else
    return 0;
}

_QWORD *google::protobuf::MessageLite::InitializationErrorString@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "(cannot determine missing fields for lite message)");
}

void google::protobuf::MessageLite::LogInitializationErrorMessage(google::protobuf::MessageLite *this)
{
  std::string *v2;
  char v3;
  std::string __p;
  std::string v5[2];

  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/message_lite.cc", 122);
  v2 = google::protobuf::internal::LogMessage::operator<<(v5, (const std::string::value_type *)&__p);
  google::protobuf::internal::LogFinisher::operator=((int)&v3, (const char **)&v2->__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
}

void sub_1BF845F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0)
    operator delete(__p);
  google::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

void google::protobuf::`anonymous namespace'::InitializationErrorMessage(const std::string::value_type *this@<X0>, const char *a2@<X1>, std::string *a3@<X8>)
{
  const std::string::value_type *p_p;
  std::string::size_type v8;
  const std::string::value_type *v9;
  std::string::size_type v10;
  void *__p;
  std::string::size_type v12;
  unsigned __int8 v13;

  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::append(a3, "Can't ");
  std::string::append(a3, this);
  std::string::append(a3, " message of type \"");
  (*(void (**)(void **__return_ptr, const char *))(*(_QWORD *)a2 + 16))(&__p, a2);
  if ((v13 & 0x80u) == 0)
    p_p = (const std::string::value_type *)&__p;
  else
    p_p = (const std::string::value_type *)__p;
  if ((v13 & 0x80u) == 0)
    v8 = v13;
  else
    v8 = v12;
  std::string::append(a3, p_p, v8);
  if ((char)v13 < 0)
    operator delete(__p);
  std::string::append(a3, "\" because it is missing required fields: ");
  (*(void (**)(void **__return_ptr, const char *))(*(_QWORD *)a2 + 72))(&__p, a2);
  if ((v13 & 0x80u) == 0)
    v9 = (const std::string::value_type *)&__p;
  else
    v9 = (const std::string::value_type *)__p;
  if ((v13 & 0x80u) == 0)
    v10 = v13;
  else
    v10 = v12;
  std::string::append(a3, v9, v10);
  if ((char)v13 < 0)
    operator delete(__p);
}

void sub_1BF846074(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (a15 < 0)
    operator delete(__p);
  if (*(char *)(v15 + 23) < 0)
    operator delete(*(void **)v15);
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)1,std::string>(google::protobuf::MessageLite *a1, uint64_t *a2)
{
  const char *v4;
  _BOOL8 result;
  char *v6[2];

  (*(void (**)(google::protobuf::MessageLite *))(*(_QWORD *)a1 + 56))(a1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v6, a2, v4);
  result = google::protobuf::internal::MergePartialFromImpl<false>(v6[0], (int64_t)v6[1], (uint64_t)a1);
  if (result)
  {
    if (((*(uint64_t (**)(google::protobuf::MessageLite *))(*(_QWORD *)a1 + 64))(a1) & 1) != 0)
    {
      return 1;
    }
    else
    {
      google::protobuf::MessageLite::LogInitializationErrorMessage(a1);
      return 0;
    }
  }
  return result;
}

BOOL google::protobuf::MessageLite::ParseFrom<(google::protobuf::MessageLite::ParseFlags)3,std::string>(uint64_t a1, uint64_t *a2)
{
  const char *v4;
  char *v6[2];

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v6, a2, v4);
  return google::protobuf::internal::MergePartialFromImpl<false>(v6[0], (int64_t)v6[1], a1);
}

BOOL google::protobuf::MessageLite::AppendToString(const char *a1, std::string *a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string __p;
  std::string v9[2];

  if (((*(uint64_t (**)(const char *))(*(_QWORD *)a1 + 64))(a1) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/message_lite.cc", 417);
    v4 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: IsInitialized(): ");
    v5 = google::protobuf::internal::LogMessage::operator<<(v4, (const std::string::value_type *)&__p);
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return google::protobuf::MessageLite::AppendPartialToString((uint64_t)a1, a2);
}

void sub_1BF84623C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0)
    operator delete(__p);
  google::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::AppendPartialToString(uint64_t a1, std::string *a2)
{
  std::string *v2;
  std::string::size_type size;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  std::string *v8;
  std::string *v9;
  std::string *v10;
  std::string *v11;
  std::string *v12;
  char v14;
  std::string __p[2];
  std::string v16[2];
  uint64_t v17;
  __int16 v18;
  char v19;
  uint64_t v20;

  v2 = a2;
  v20 = *MEMORY[0x1E0C80C00];
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    size = a2->__r_.__value_.__l.__size_;
  else
    size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 88))(a1);
  v6 = v5;
  v7 = v5 >> 31;
  if (v5 >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/message_lite.cc", 425);
    (*(void (**)(std::string *__return_ptr, uint64_t))(*(_QWORD *)a1 + 16))(__p, a1);
    v10 = google::protobuf::internal::LogMessage::operator<<(v16, (const std::string::value_type *)__p);
    v11 = google::protobuf::internal::LogMessage::operator<<(v10, " exceeded maximum protobuf size of 2GB: ");
    v12 = google::protobuf::internal::LogMessage::operator<<(v11, v6);
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v12->__r_.__value_.__l.__data_);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p[0].__r_.__value_.__l.__data_);
    v9 = v16;
    goto LABEL_12;
  }
  std::string::resize(v2, v5 + size, 0);
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
    v2 = (std::string *)v2->__r_.__value_.__r.__words[0];
  *(_OWORD *)&v16[0].__r_.__value_.__l.__data_ = (unint64_t)v2 + size + v6;
  v17 = 0;
  v18 = 0;
  v19 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
  if (v16[0].__r_.__value_.__r.__words[0] != (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 112))(a1))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/message_lite.cc", 328);
    v8 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: target + size == res: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v8->__r_.__value_.__l.__data_);
    v9 = __p;
LABEL_12:
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9->__r_.__value_.__l.__data_);
  }
  return v7 == 0;
}

void sub_1BF846418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::SerializeToString(const char *a1, std::string *a2)
{
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    *a2->__r_.__value_.__l.__data_ = 0;
    a2->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((_BYTE *)&a2->__r_.__value_.__s + 23) = 0;
  }
  return google::protobuf::MessageLite::AppendToString(a1, a2);
}

BOOL google::protobuf::MessageLite::SerializeAsString@<W0>(google::protobuf::MessageLite *this@<X0>, uint64_t a2@<X8>)
{
  _BOOL8 result;

  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  result = google::protobuf::MessageLite::AppendToString((const char *)this, (std::string *)a2);
  if (!result)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      **(_BYTE **)a2 = 0;
      *(_QWORD *)(a2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)a2 = 0;
      *(_BYTE *)(a2 + 23) = 0;
    }
  }
  return result;
}

void sub_1BF8464D4(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::internal::GenericTypeHandler<std::string>::Merge(std::string *__str, std::string *this)
{
  return std::string::operator=(this, __str);
}

void google::protobuf::util::internal::StatusOrHelper::Crash(google::protobuf::util::internal::StatusOrHelper *this, const google::protobuf::util::Status *a2)
{
  std::string *v3;
  std::string *v4;
  char v5;
  void *__p[2];
  char v7;
  std::string v8[2];

  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/stubs/statusor.cc", 41);
  v3 = google::protobuf::internal::LogMessage::operator<<(v8, "Attempting to fetch value instead of handling error ");
  google::protobuf::util::Status::ToString(this, __p);
  v4 = google::protobuf::internal::LogMessage::operator<<(v3, (const std::string::value_type *)__p);
  google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
  if (v7 < 0)
    operator delete(__p[0]);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
}

void sub_1BF84658C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16)
{
  if (a15 < 0)
    operator delete(__p);
  google::protobuf::internal::LogMessage::~LogMessage(&a16);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::StringAppendV(std::string *a1, char *__format, va_list a3)
{
  uint64_t result;
  int v6;
  char *v7;
  int v8;
  char __str[1024];
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  result = vsnprintf(__str, 0x400uLL, __format, a3);
  v6 = result;
  if ((int)result > 1023)
  {
    v7 = (char *)operator new[]();
    v8 = vsnprintf(v7, (v6 + 1), __format, a3);
    if ((v8 & 0x80000000) == 0 && v8 <= v6)
      std::string::append(a1, v7, v8);
    return MEMORY[0x1C3B8D878](v7, 0x1000C8077774924);
  }
  else if ((result & 0x80000000) == 0)
  {
    return (uint64_t)std::string::append(a1, __str, result);
  }
  return result;
}

uint64_t google::protobuf::StringPrintf@<X0>(google::protobuf *this@<X0>, std::string *a2@<X8>, ...)
{
  va_list va;

  va_start(va, a2);
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return google::protobuf::StringAppendV(a2, (char *)this, va);
}

void sub_1BF84670C(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::StringAppendF(std::string *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  return google::protobuf::StringAppendV(a1, a2, &a9);
}

void InitDefaultsscc_info_Input_SchemaBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/SchemaBinary.pb.cc", a4);
  siri::dialogengine::SchemaBinary::Input::Input((siri::dialogengine::SchemaBinary::Input *)&siri::dialogengine::SchemaBinary::_Input_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::SchemaBinary::_Input_default_instance_, v4);
}

siri::dialogengine::SchemaBinary::Input *siri::dialogengine::SchemaBinary::Input::Input(siri::dialogengine::SchemaBinary::Input *this)
{
  *(_QWORD *)this = &off_1E7929F48;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_Input_SchemaBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Input_SchemaBinary_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 16) = 0;
  *((_BYTE *)this + 68) = 1;
  return this;
}

void sub_1BF846818(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  if ((*a1 & 1) != 0)
  {
    v3 = v2 & 0xFFFFFFFFFFFFFFFELL;
    if (!*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFFFELL) + 24) && v3 != 0)
    {
      if (*(char *)(v3 + 23) < 0)
        operator delete(*(void **)v3);
      MEMORY[0x1C3B8D890](v3, 0x1032C402ED93987);
    }
  }
  *a1 = 0;
  return a1;
}

void siri::dialogengine::SchemaBinary::Input::~Input(siri::dialogengine::SchemaBinary::Input *this)
{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E7929F48;
  v1 = (uint64_t *)((char *)this + 8);
  siri::dialogengine::SchemaBinary::Input::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E7929F48;
  v1 = (uint64_t *)((char *)this + 8);
  siri::dialogengine::SchemaBinary::Input::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E7929F48;
  v1 = (uint64_t *)((char *)this + 8);
  siri::dialogengine::SchemaBinary::Input::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

_QWORD *siri::dialogengine::SchemaBinary::Input::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.SchemaBinary.Input");
}

siri::dialogengine::SchemaBinary::Input *siri::dialogengine::SchemaBinary::Input::New(siri::dialogengine::SchemaBinary::Input *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Input>(0);
}

siri::dialogengine::SchemaBinary::Input *siri::dialogengine::SchemaBinary::Input::New(siri::dialogengine::SchemaBinary::Input *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Input>(a2);
}

void siri::dialogengine::SchemaBinary::Input::Clear(siri::dialogengine::SchemaBinary::Input *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  google::protobuf::internal::InternalMetadataWithArenaLite *v7;
  char v8;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 0x1F) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0)
        goto LABEL_4;
LABEL_12:
      v3 = *((_QWORD *)this + 4);
      if (*(char *)(v3 + 23) < 0)
      {
        **(_BYTE **)v3 = 0;
        *(_QWORD *)(v3 + 8) = 0;
        if ((v1 & 4) != 0)
          goto LABEL_16;
      }
      else
      {
        *(_BYTE *)v3 = 0;
        *(_BYTE *)(v3 + 23) = 0;
        if ((v1 & 4) != 0)
          goto LABEL_16;
      }
LABEL_5:
      if ((v1 & 8) == 0)
        goto LABEL_6;
LABEL_20:
      v5 = *((_QWORD *)this + 6);
      if (*(char *)(v5 + 23) < 0)
      {
        **(_BYTE **)v5 = 0;
        *(_QWORD *)(v5 + 8) = 0;
        if ((v1 & 0x10) == 0)
          goto LABEL_27;
      }
      else
      {
        *(_BYTE *)v5 = 0;
        *(_BYTE *)(v5 + 23) = 0;
        if ((v1 & 0x10) == 0)
          goto LABEL_27;
      }
      goto LABEL_24;
    }
    v2 = *((_QWORD *)this + 3);
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
      if ((v1 & 2) != 0)
        goto LABEL_12;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
      if ((v1 & 2) != 0)
        goto LABEL_12;
    }
LABEL_4:
    if ((v1 & 4) == 0)
      goto LABEL_5;
LABEL_16:
    v4 = *((_QWORD *)this + 5);
    if (*(char *)(v4 + 23) < 0)
    {
      **(_BYTE **)v4 = 0;
      *(_QWORD *)(v4 + 8) = 0;
      if ((v1 & 8) != 0)
        goto LABEL_20;
    }
    else
    {
      *(_BYTE *)v4 = 0;
      *(_BYTE *)(v4 + 23) = 0;
      if ((v1 & 8) != 0)
        goto LABEL_20;
    }
LABEL_6:
    if ((v1 & 0x10) == 0)
      goto LABEL_27;
LABEL_24:
    v6 = *((_QWORD *)this + 7);
    if (*(char *)(v6 + 23) < 0)
    {
      **(_BYTE **)v6 = 0;
      *(_QWORD *)(v6 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v6 = 0;
      *(_BYTE *)(v6 + 23) = 0;
    }
  }
LABEL_27:
  if ((v1 & 0x60) != 0)
  {
    *((_DWORD *)this + 16) = 0;
    *((_BYTE *)this + 68) = 1;
  }
  v8 = *((_BYTE *)this + 8);
  v7 = (siri::dialogengine::SchemaBinary::Input *)((char *)this + 8);
  *((_DWORD *)v7 + 2) = 0;
  if ((v8 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v7);
}

uint64_t siri::dialogengine::SchemaBinary::Input::IsInitialized(siri::dialogengine::SchemaBinary::Input *this)
{
  return 1;
}

void siri::dialogengine::SchemaBinary::Input::CheckTypeAndMergeFrom(siri::dialogengine::SchemaBinary::Input *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::SchemaBinary::Input::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::SchemaBinary::Input::ByteSizeLong(siri::dialogengine::SchemaBinary::Input *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v23;
  uint64_t v24;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 0x7F) == 0)
  {
    v3 = 0;
    goto LABEL_33;
  }
  if ((v1 & 1) == 0)
  {
    v2 = 0;
    if ((v1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v4 = *((_QWORD *)this + 3);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v6 = v5;
  v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    v7 = *((_QWORD *)this + 4);
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = *(_QWORD *)(v7 + 8);
    if ((v8 & 0x80u) == 0)
      v9 = v8;
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    v10 = *((_QWORD *)this + 5);
    v11 = *(unsigned __int8 *)(v10 + 23);
    v12 = *(_QWORD *)(v10 + 8);
    if ((v11 & 0x80u) == 0)
      v12 = v11;
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0)
        goto LABEL_15;
LABEL_23:
      v16 = *((_QWORD *)this + 7);
      v17 = *(unsigned __int8 *)(v16 + 23);
      v18 = *(_QWORD *)(v16 + 8);
      if ((v17 & 0x80u) == 0)
        v18 = v17;
      v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 0x20) == 0)
        goto LABEL_30;
      goto LABEL_26;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  v13 = *((_QWORD *)this + 6);
  v14 = *(unsigned __int8 *)(v13 + 23);
  v15 = *(_QWORD *)(v13 + 8);
  if ((v14 & 0x80u) == 0)
    v15 = v14;
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0)
    goto LABEL_23;
LABEL_15:
  if ((v1 & 0x20) != 0)
  {
LABEL_26:
    v19 = *((_DWORD *)this + 16);
    if (v19 < 0)
      v20 = 11;
    else
      v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    v2 += v20;
  }
LABEL_30:
  if ((v1 & 0x40) != 0)
    v3 = v2 + 2;
  else
    v3 = v2;
LABEL_33:
  v21 = *((_QWORD *)this + 1);
  if ((v21 & 1) != 0)
  {
    v23 = v21 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v23 + 23) < 0)
      v24 = *(_QWORD *)(v23 + 8);
    else
      v24 = *(unsigned __int8 *)(v23 + 23);
    v3 += v24;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

uint64_t siri::dialogengine::SchemaBinary::Input::GetCachedSize(siri::dialogengine::SchemaBinary::Input *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::SchemaBinary::Input::_InternalParse(siri::dialogengine::SchemaBinary::Input *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  int v5;
  std::string **v6;
  std::string **v7;
  uint64_t *v8;
  std::string **v9;
  google::protobuf::internal *TagFallback;
  const char *v11;
  std::string *v12;
  google::protobuf::internal *v13;
  unint64_t v14;
  int v15;
  std::string **v16;
  google::protobuf::internal *v17;
  google::protobuf::internal *v18;
  unint64_t v19;
  int v20;
  BOOL v21;
  google::protobuf::internal *v22;
  uint64_t v23;
  std::string *v24;
  std::string *v25;
  unint64_t v27;
  std::string **v28;
  std::string **v29;
  google::protobuf::internal *v30;

  v5 = 0;
  v29 = (std::string **)((char *)this + 56);
  v30 = a2;
  v28 = (std::string **)((char *)this + 48);
  v6 = (std::string **)((char *)this + 40);
  v7 = (std::string **)((char *)this + 32);
  v8 = (uint64_t *)((char *)this + 8);
  v9 = (std::string **)((char *)this + 24);
  while ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v30, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    TagFallback = (google::protobuf::internal *)((char *)v30 + 1);
    LODWORD(v11) = *(unsigned __int8 *)v30;
    if (*(char *)v30 < 0)
    {
      v11 = (const char *)(v11 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if (*(char *)TagFallback < 0)
      {
        TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v30, v11);
        v30 = TagFallback;
        if (!TagFallback)
          goto LABEL_56;
        goto LABEL_7;
      }
      TagFallback = (google::protobuf::internal *)((char *)v30 + 2);
    }
    v30 = TagFallback;
LABEL_7:
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 10)
          goto LABEL_42;
        *((_DWORD *)this + 4) |= 1u;
        v12 = (std::string *)*((_QWORD *)this + 3);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_34;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v9;
        goto LABEL_33;
      case 2u:
        if (v11 != 16)
          goto LABEL_42;
        v13 = (google::protobuf::internal *)((char *)TagFallback + 1);
        v14 = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0)
          goto LABEL_17;
        v15 = *(char *)v13;
        v14 = v14 + (v15 << 7) - 128;
        if (v15 < 0)
        {
          v30 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v14);
          if (!v30)
            goto LABEL_58;
        }
        else
        {
          v13 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_17:
          v30 = v13;
        }
        if (v14 > 1)
        {
          if ((*v8 & 1) != 0)
          {
            v24 = (std::string *)(*v8 & 0xFFFFFFFFFFFFFFFELL);
          }
          else
          {
            v27 = v14;
            google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v8);
            v14 = v27;
            v24 = v25;
          }
          google::protobuf::internal::WriteVarint(2, v14, v24);
        }
        else
        {
          *((_DWORD *)this + 4) |= 0x20u;
          *((_DWORD *)this + 16) = v14;
        }
        continue;
      case 3u:
        if (v11 != 26)
          goto LABEL_42;
        *((_DWORD *)this + 4) |= 2u;
        v12 = (std::string *)*((_QWORD *)this + 4);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_34;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v7;
        goto LABEL_33;
      case 4u:
        if (v11 != 34)
          goto LABEL_42;
        *((_DWORD *)this + 4) |= 4u;
        v12 = (std::string *)*((_QWORD *)this + 5);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_34;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v6;
        goto LABEL_33;
      case 5u:
        if (v11 != 42)
          goto LABEL_42;
        *((_DWORD *)this + 4) |= 8u;
        v12 = (std::string *)*((_QWORD *)this + 6);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_34;
        v16 = v28;
        goto LABEL_32;
      case 6u:
        if (v11 != 50)
          goto LABEL_42;
        *((_DWORD *)this + 4) |= 0x10u;
        v12 = (std::string *)*((_QWORD *)this + 7);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_34;
        v16 = v29;
LABEL_32:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v16, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v16;
LABEL_33:
        TagFallback = v30;
LABEL_34:
        v17 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_35;
      case 7u:
        if (v11 != 56)
          goto LABEL_42;
        v5 |= 0x40u;
        v18 = (google::protobuf::internal *)((char *)TagFallback + 1);
        v19 = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0)
          goto LABEL_41;
        v20 = *(char *)v18;
        v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v19);
          v30 = v22;
          *((_BYTE *)this + 68) = v23 != 0;
          if (!v22)
            goto LABEL_58;
        }
        else
        {
          v18 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_41:
          v30 = v18;
          *((_BYTE *)this + 68) = v19 != 0;
        }
        continue;
      default:
LABEL_42:
        if ((_DWORD)v11)
          v21 = (v11 & 7) == 4;
        else
          v21 = 1;
        if (v21)
        {
          *((_DWORD *)a3 + 20) = (_DWORD)v11 - 1;
          goto LABEL_56;
        }
        v17 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v11, v8, TagFallback, a3);
LABEL_35:
        v30 = v17;
        if (!v17)
        {
LABEL_58:
          TagFallback = 0;
          goto LABEL_56;
        }
        break;
    }
  }
  TagFallback = v30;
LABEL_56:
  *((_DWORD *)this + 4) |= v5;
  return TagFallback;
}

unsigned __int8 *siri::dialogengine::SchemaBinary::Input::InternalSerializeWithCachedSizesToArray(siri::dialogengine::SchemaBinary::Input *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 0x20) == 0)
      goto LABEL_3;
LABEL_10:
    if ((unint64_t)v4 >= *(_QWORD *)a3)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v7 = *((int *)this + 16);
    *v4 = 16;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      v8 = v7 >> 7;
      if (v7 >> 14)
      {
        v9 = v4 + 2;
        do
        {
          v10 = v9;
          *v9++ = v8 | 0x80;
          v11 = v8 >> 7;
          v12 = v8 >> 14;
          v8 >>= 7;
        }
        while (v12);
        v4 = v10 + 2;
        *v9 = v11;
        if ((v6 & 2) != 0)
          goto LABEL_21;
      }
      else
      {
        v4[2] = v8;
        v4 += 3;
        if ((v6 & 2) != 0)
          goto LABEL_21;
      }
    }
    else
    {
      v4[1] = v7;
      v4 += 2;
      if ((v6 & 2) != 0)
        goto LABEL_21;
    }
LABEL_4:
    if ((v6 & 4) == 0)
      goto LABEL_5;
    goto LABEL_22;
  }
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3), a2);
  if ((v6 & 0x20) != 0)
    goto LABEL_10;
LABEL_3:
  if ((v6 & 2) == 0)
    goto LABEL_4;
LABEL_21:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 4), v4);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_22:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((_QWORD *)this + 5), v4);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_23:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((_QWORD *)this + 6), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_28;
    goto LABEL_25;
  }
LABEL_24:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((_QWORD *)this + 7), v4);
  if ((v6 & 0x40) == 0)
    goto LABEL_28;
LABEL_25:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v13 = *((_BYTE *)this + 68);
  *v4 = 56;
  v4[1] = v13;
  v4 += 2;
LABEL_28:
  v14 = *((_QWORD *)this + 1);
  if ((v14 & 1) == 0)
    return (unsigned __int8 *)v4;
  v16 = v14 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    v18 = *(void **)v16;
    v17 = *(_QWORD *)(v16 + 8);
  }
  else
  {
    LODWORD(v17) = *(unsigned __int8 *)(v16 + 23);
    v18 = (void *)v16;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v17)
  {
    v19 = (int)v17;
    memcpy(v4, v18, (int)v17);
    v4 += v19;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v18, v17, (unsigned __int8 *)v4);
}

void google::protobuf::internal::arena_destruct_object<google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::Container>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void siri::dialogengine::SchemaBinary::Input::MergeFrom(siri::dialogengine::SchemaBinary::Input *this, const siri::dialogengine::SchemaBinary::Input *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  const std::string *v10;
  std::string *v11;
  const std::string *v12;
  std::string *v13;
  const std::string *v14;
  std::string *v15;
  const std::string *v16;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/SchemaBinary.pb.cc", 1183);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x7F) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v8);
          if ((v6 & 2) == 0)
            goto LABEL_17;
LABEL_11:
          v9 = (std::string *)*((_QWORD *)this + 4);
          *((_DWORD *)this + 4) |= 2u;
          v10 = (const std::string *)*((_QWORD *)a2 + 4);
          if (v9 != v10)
          {
            if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v10);
            else
              std::string::operator=(v9, v10);
          }
LABEL_17:
          if ((v6 & 4) != 0)
          {
            v11 = (std::string *)*((_QWORD *)this + 5);
            *((_DWORD *)this + 4) |= 4u;
            v12 = (const std::string *)*((_QWORD *)a2 + 5);
            if (v11 != v12)
            {
              if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 5, (uint64_t)v12);
                if ((v6 & 8) == 0)
                  goto LABEL_28;
LABEL_22:
                v13 = (std::string *)*((_QWORD *)this + 6);
                *((_DWORD *)this + 4) |= 8u;
                v14 = (const std::string *)*((_QWORD *)a2 + 6);
                if (v13 != v14)
                {
                  if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, (uint64_t)v14);
                  else
                    std::string::operator=(v13, v14);
                }
LABEL_28:
                if ((v6 & 0x10) != 0)
                {
                  v15 = (std::string *)*((_QWORD *)this + 7);
                  *((_DWORD *)this + 4) |= 0x10u;
                  v16 = (const std::string *)*((_QWORD *)a2 + 7);
                  if (v15 != v16)
                  {
                    if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                    {
                      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 7, (uint64_t)v16);
                      if ((v6 & 0x20) == 0)
                        goto LABEL_34;
                      goto LABEL_33;
                    }
                    std::string::operator=(v15, v16);
                  }
                }
                if ((v6 & 0x20) == 0)
                {
LABEL_34:
                  if ((v6 & 0x40) != 0)
                    *((_BYTE *)this + 68) = *((_BYTE *)a2 + 68);
                  *((_DWORD *)this + 4) |= v6;
                  return;
                }
LABEL_33:
                *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
                goto LABEL_34;
              }
              std::string::operator=(v11, v12);
            }
          }
          if ((v6 & 8) == 0)
            goto LABEL_28;
          goto LABEL_22;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) == 0)
      goto LABEL_17;
    goto LABEL_11;
  }
}

void sub_1BF84745C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(uint64_t *a1, uint64_t a2)
{
  std::string *v3;
  int v4;
  const std::string::value_type *v5;
  std::string::size_type v6;

  if ((*a1 & 1) != 0)
    v3 = (std::string *)(*a1 & 0xFFFFFFFFFFFFFFFELL);
  else
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(a1);
  v4 = *(char *)(a2 + 23);
  if (v4 >= 0)
    v5 = (const std::string::value_type *)a2;
  else
    v5 = *(const std::string::value_type **)a2;
  if (v4 >= 0)
    v6 = *(unsigned __int8 *)(a2 + 23);
  else
    v6 = *(_QWORD *)(a2 + 8);
  return std::string::append(v3, v5, v6);
}

void google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(google::protobuf::internal::InternalMetadataWithArenaLite *this)
{
  unint64_t v1;

  if ((*(_QWORD *)this & 1) != 0)
    v1 = *(_QWORD *)this & 0xFFFFFFFFFFFFFFFELL;
  else
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)this);
  if (*(char *)(v1 + 23) < 0)
  {
    **(_BYTE **)v1 = 0;
    *(_QWORD *)(v1 + 8) = 0;
  }
  else
  {
    *(_BYTE *)v1 = 0;
    *(_BYTE *)(v1 + 23) = 0;
  }
}

siri::dialogengine::SchemaBinary::Input *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Input>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::SchemaBinary::Input *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::SchemaBinary::Input *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x48uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::SchemaBinary::Input>);
    siri::dialogengine::SchemaBinary::Input::Input(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::SchemaBinary::Input *)operator new();
    siri::dialogengine::SchemaBinary::Input::Input(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF847584(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C408CCD3B87);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::SchemaBinary::Input>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

_QWORD *siri::dialogengine::SchemaBinary::Input::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;

  v1 = this;
  v2 = this[3];
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = v1[4];
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  v6 = v1[5];
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v6, 0x1012C40EC159624);
  }
  v8 = v1[6];
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v8, 0x1012C40EC159624);
  }
  v10 = v1[7];
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0)
      operator delete(*(void **)v10);
    JUMPOUT(0x1C3B8D890);
  }
  return this;
}

void InitDefaultsscc_info_Property_SchemaBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/SchemaBinary.pb.cc", a4);
  siri::dialogengine::SchemaBinary::Property::Property((siri::dialogengine::SchemaBinary::Property *)&siri::dialogengine::SchemaBinary::_Property_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::SchemaBinary::_Property_default_instance_, v4);
}

siri::dialogengine::SchemaBinary::Property *siri::dialogengine::SchemaBinary::Property::Property(siri::dialogengine::SchemaBinary::Property *this)
{
  *(_QWORD *)this = &off_1E7929FD8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_Property_SchemaBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Property_SchemaBinary_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 10) = &google::protobuf::internal::fixed_address_empty_string;
  *((_BYTE *)this + 88) = 1;
  return this;
}

void sub_1BF8477CC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::SchemaBinary::Property::~Property(siri::dialogengine::SchemaBinary::Property *this)
{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E7929FD8;
  v1 = (uint64_t *)((char *)this + 8);
  siri::dialogengine::SchemaBinary::Property::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E7929FD8;
  v1 = (uint64_t *)((char *)this + 8);
  siri::dialogengine::SchemaBinary::Property::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E7929FD8;
  v1 = (uint64_t *)((char *)this + 8);
  siri::dialogengine::SchemaBinary::Property::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

_QWORD *siri::dialogengine::SchemaBinary::Property::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.SchemaBinary.Property");
}

siri::dialogengine::SchemaBinary::Property *siri::dialogengine::SchemaBinary::Property::New(siri::dialogengine::SchemaBinary::Property *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Property>(0);
}

siri::dialogengine::SchemaBinary::Property *siri::dialogengine::SchemaBinary::Property::New(siri::dialogengine::SchemaBinary::Property *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Property>(a2);
}

void siri::dialogengine::SchemaBinary::Property::Clear(siri::dialogengine::SchemaBinary::Property *this)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;

  v1 = *((_BYTE *)this + 16);
  if (!v1)
    goto LABEL_42;
  if ((*((_BYTE *)this + 16) & 1) == 0)
  {
    if ((*((_BYTE *)this + 16) & 2) == 0)
      goto LABEL_4;
LABEL_15:
    v3 = *((_QWORD *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
      if ((v1 & 4) != 0)
        goto LABEL_19;
    }
    else
    {
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
      if ((v1 & 4) != 0)
        goto LABEL_19;
    }
LABEL_5:
    if ((v1 & 8) == 0)
      goto LABEL_6;
LABEL_23:
    v5 = *((_QWORD *)this + 6);
    if (*(char *)(v5 + 23) < 0)
    {
      **(_BYTE **)v5 = 0;
      *(_QWORD *)(v5 + 8) = 0;
      if ((v1 & 0x10) != 0)
        goto LABEL_27;
    }
    else
    {
      *(_BYTE *)v5 = 0;
      *(_BYTE *)(v5 + 23) = 0;
      if ((v1 & 0x10) != 0)
        goto LABEL_27;
    }
LABEL_7:
    if ((v1 & 0x20) == 0)
      goto LABEL_8;
LABEL_31:
    v7 = *((_QWORD *)this + 8);
    if (*(char *)(v7 + 23) < 0)
    {
      **(_BYTE **)v7 = 0;
      *(_QWORD *)(v7 + 8) = 0;
      if ((v1 & 0x40) != 0)
        goto LABEL_35;
    }
    else
    {
      *(_BYTE *)v7 = 0;
      *(_BYTE *)(v7 + 23) = 0;
      if ((v1 & 0x40) != 0)
        goto LABEL_35;
    }
LABEL_9:
    if ((v1 & 0x80) == 0)
      goto LABEL_42;
LABEL_39:
    v9 = *((_QWORD *)this + 10);
    if (*(char *)(v9 + 23) < 0)
    {
      **(_BYTE **)v9 = 0;
      *(_QWORD *)(v9 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v9 = 0;
      *(_BYTE *)(v9 + 23) = 0;
    }
    goto LABEL_42;
  }
  v2 = *((_QWORD *)this + 3);
  if (*(char *)(v2 + 23) < 0)
  {
    **(_BYTE **)v2 = 0;
    *(_QWORD *)(v2 + 8) = 0;
    if ((v1 & 2) != 0)
      goto LABEL_15;
  }
  else
  {
    *(_BYTE *)v2 = 0;
    *(_BYTE *)(v2 + 23) = 0;
    if ((v1 & 2) != 0)
      goto LABEL_15;
  }
LABEL_4:
  if ((v1 & 4) == 0)
    goto LABEL_5;
LABEL_19:
  v4 = *((_QWORD *)this + 5);
  if (*(char *)(v4 + 23) < 0)
  {
    **(_BYTE **)v4 = 0;
    *(_QWORD *)(v4 + 8) = 0;
    if ((v1 & 8) != 0)
      goto LABEL_23;
  }
  else
  {
    *(_BYTE *)v4 = 0;
    *(_BYTE *)(v4 + 23) = 0;
    if ((v1 & 8) != 0)
      goto LABEL_23;
  }
LABEL_6:
  if ((v1 & 0x10) == 0)
    goto LABEL_7;
LABEL_27:
  v6 = *((_QWORD *)this + 7);
  if (*(char *)(v6 + 23) < 0)
  {
    **(_BYTE **)v6 = 0;
    *(_QWORD *)(v6 + 8) = 0;
    if ((v1 & 0x20) != 0)
      goto LABEL_31;
  }
  else
  {
    *(_BYTE *)v6 = 0;
    *(_BYTE *)(v6 + 23) = 0;
    if ((v1 & 0x20) != 0)
      goto LABEL_31;
  }
LABEL_8:
  if ((v1 & 0x40) == 0)
    goto LABEL_9;
LABEL_35:
  v8 = *((_QWORD *)this + 9);
  if (*(char *)(v8 + 23) < 0)
  {
    **(_BYTE **)v8 = 0;
    *(_QWORD *)(v8 + 8) = 0;
    if ((v1 & 0x80) == 0)
      goto LABEL_42;
    goto LABEL_39;
  }
  *(_BYTE *)v8 = 0;
  *(_BYTE *)(v8 + 23) = 0;
  if (v1 < 0)
    goto LABEL_39;
LABEL_42:
  v11 = *((_BYTE *)this + 8);
  v10 = (char *)this + 8;
  v10[80] = 1;
  *((_DWORD *)v10 + 2) = 0;
  if ((v11 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v10);
}

uint64_t siri::dialogengine::SchemaBinary::Property::IsInitialized(siri::dialogengine::SchemaBinary::Property *this)
{
  return 1;
}

void siri::dialogengine::SchemaBinary::Property::CheckTypeAndMergeFrom(siri::dialogengine::SchemaBinary::Property *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::SchemaBinary::Property::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::SchemaBinary::Property::ByteSizeLong(siri::dialogengine::SchemaBinary::Property *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v1 = *((_DWORD *)this + 4);
  if (!(_BYTE)v1)
  {
    v2 = 0;
    goto LABEL_21;
  }
  if ((v1 & 1) == 0)
  {
    v2 = 0;
    if ((v1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v3 = *((_QWORD *)this + 3);
  v4 = *(unsigned __int8 *)(v3 + 23);
  v5 = *(_QWORD *)(v3 + 8);
  if ((v4 & 0x80u) == 0)
    v5 = v4;
  v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    v6 = *((_QWORD *)this + 4);
    v7 = *(unsigned __int8 *)(v6 + 23);
    v8 = *(_QWORD *)(v6 + 8);
    if ((v7 & 0x80u) == 0)
      v8 = v7;
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    v15 = *((_QWORD *)this + 5);
    v16 = *(unsigned __int8 *)(v15 + 23);
    v17 = *(_QWORD *)(v15 + 8);
    if ((v16 & 0x80u) == 0)
      v17 = v16;
    v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0)
        goto LABEL_15;
      goto LABEL_32;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  v18 = *((_QWORD *)this + 6);
  v19 = *(unsigned __int8 *)(v18 + 23);
  v20 = *(_QWORD *)(v18 + 8);
  if ((v19 & 0x80u) == 0)
    v20 = v19;
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0)
      goto LABEL_16;
    goto LABEL_35;
  }
LABEL_32:
  v21 = *((_QWORD *)this + 7);
  v22 = *(unsigned __int8 *)(v21 + 23);
  v23 = *(_QWORD *)(v21 + 8);
  if ((v22 & 0x80u) == 0)
    v23 = v22;
  v2 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_16:
    if ((v1 & 0x40) == 0)
      goto LABEL_17;
    goto LABEL_38;
  }
LABEL_35:
  v24 = *((_QWORD *)this + 8);
  v25 = *(unsigned __int8 *)(v24 + 23);
  v26 = *(_QWORD *)(v24 + 8);
  if ((v25 & 0x80u) == 0)
    v26 = v25;
  v2 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) == 0)
  {
LABEL_17:
    if ((v1 & 0x80) == 0)
      goto LABEL_21;
    goto LABEL_18;
  }
LABEL_38:
  v27 = *((_QWORD *)this + 9);
  v28 = *(unsigned __int8 *)(v27 + 23);
  v29 = *(_QWORD *)(v27 + 8);
  if ((v28 & 0x80u) == 0)
    v29 = v28;
  v2 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x80) != 0)
  {
LABEL_18:
    v9 = *((_QWORD *)this + 10);
    v10 = *(unsigned __int8 *)(v9 + 23);
    v11 = *(_QWORD *)(v9 + 8);
    if ((v10 & 0x80u) == 0)
      v11 = v10;
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  if ((v1 & 0x100) != 0)
    v12 = v2 + 2;
  else
    v12 = v2;
  v13 = *((_QWORD *)this + 1);
  if ((v13 & 1) != 0)
  {
    v30 = v13 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v30 + 23) < 0)
      v31 = *(_QWORD *)(v30 + 8);
    else
      v31 = *(unsigned __int8 *)(v30 + 23);
    v12 += v31;
  }
  *((_DWORD *)this + 5) = v12;
  return v12;
}

uint64_t siri::dialogengine::SchemaBinary::Property::GetCachedSize(siri::dialogengine::SchemaBinary::Property *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::SchemaBinary::Property::_InternalParse(siri::dialogengine::SchemaBinary::Property *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  int v5;
  std::string **v6;
  std::string **v7;
  std::string **v8;
  uint64_t *v9;
  google::protobuf::internal *TagFallback;
  const char *v11;
  std::string *v12;
  std::string **v13;
  google::protobuf::internal *v14;
  google::protobuf::internal *v15;
  unint64_t v16;
  int v17;
  BOOL v18;
  google::protobuf::internal *v19;
  uint64_t v20;
  std::string **v22;
  std::string **v23;
  std::string **v24;
  std::string **v25;
  std::string **v26;
  google::protobuf::internal *v27;

  v5 = 0;
  v26 = (std::string **)((char *)this + 80);
  v27 = a2;
  v24 = (std::string **)((char *)this + 64);
  v25 = (std::string **)((char *)this + 72);
  v22 = (std::string **)((char *)this + 48);
  v23 = (std::string **)((char *)this + 56);
  v6 = (std::string **)((char *)this + 40);
  v7 = (std::string **)((char *)this + 32);
  v8 = (std::string **)((char *)this + 24);
  v9 = (uint64_t *)((char *)this + 8);
  while (2)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v27, *((_DWORD *)a3 + 23)) & 1) != 0)
    {
      TagFallback = v27;
      break;
    }
    TagFallback = (google::protobuf::internal *)((char *)v27 + 1);
    LODWORD(v11) = *(unsigned __int8 *)v27;
    if ((*(char *)v27 & 0x80000000) == 0)
      goto LABEL_6;
    v11 = (const char *)(v11 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v27 + 2);
LABEL_6:
      v27 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v27, v11);
    v27 = TagFallback;
    if (!TagFallback)
      break;
LABEL_7:
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 10)
          goto LABEL_44;
        *((_DWORD *)this + 4) |= 1u;
        v12 = (std::string *)*((_QWORD *)this + 3);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_36;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v8;
        goto LABEL_35;
      case 3u:
        if (v11 != 26)
          goto LABEL_44;
        *((_DWORD *)this + 4) |= 2u;
        v12 = (std::string *)*((_QWORD *)this + 4);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_36;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v7;
        goto LABEL_35;
      case 5u:
        if (v11 != 42)
          goto LABEL_44;
        *((_DWORD *)this + 4) |= 4u;
        v12 = (std::string *)*((_QWORD *)this + 5);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_36;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v6;
        goto LABEL_35;
      case 6u:
        if (v11 != 50)
          goto LABEL_44;
        *((_DWORD *)this + 4) |= 8u;
        v12 = (std::string *)*((_QWORD *)this + 6);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_36;
        v13 = v22;
        goto LABEL_34;
      case 7u:
        if (v11 != 58)
          goto LABEL_44;
        *((_DWORD *)this + 4) |= 0x10u;
        v12 = (std::string *)*((_QWORD *)this + 7);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_36;
        v13 = v23;
        goto LABEL_34;
      case 8u:
        if (v11 != 66)
          goto LABEL_44;
        *((_DWORD *)this + 4) |= 0x20u;
        v12 = (std::string *)*((_QWORD *)this + 8);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_36;
        v13 = v24;
        goto LABEL_34;
      case 9u:
        if (v11 != 74)
          goto LABEL_44;
        *((_DWORD *)this + 4) |= 0x40u;
        v12 = (std::string *)*((_QWORD *)this + 9);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_36;
        v13 = v25;
        goto LABEL_34;
      case 0xAu:
        if (v11 != 82)
          goto LABEL_44;
        *((_DWORD *)this + 4) |= 0x80u;
        v12 = (std::string *)*((_QWORD *)this + 10);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_36;
        v13 = v26;
LABEL_34:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v13, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v13;
LABEL_35:
        TagFallback = v27;
LABEL_36:
        v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_37;
      case 0xBu:
        if (v11 != 88)
          goto LABEL_44;
        v5 |= 0x100u;
        v15 = (google::protobuf::internal *)((char *)TagFallback + 1);
        v16 = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0)
          goto LABEL_43;
        v17 = *(char *)v15;
        v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          v19 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v16);
          v27 = v19;
          *((_BYTE *)this + 88) = v20 != 0;
          if (!v19)
            goto LABEL_50;
        }
        else
        {
          v15 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_43:
          v27 = v15;
          *((_BYTE *)this + 88) = v16 != 0;
        }
        continue;
      default:
LABEL_44:
        if ((_DWORD)v11)
          v18 = (v11 & 7) == 4;
        else
          v18 = 1;
        if (v18)
        {
          *((_DWORD *)a3 + 20) = (_DWORD)v11 - 1;
          goto LABEL_52;
        }
        v14 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v11, v9, TagFallback, a3);
LABEL_37:
        v27 = v14;
        if (v14)
          continue;
LABEL_50:
        TagFallback = 0;
        break;
    }
    break;
  }
LABEL_52:
  *((_DWORD *)this + 4) |= v5;
  return TagFallback;
}

unsigned __int8 *siri::dialogengine::SchemaBinary::Property::InternalSerializeWithCachedSizesToArray(siri::dialogengine::SchemaBinary::Property *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  char v7;
  uint64_t v8;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
  {
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 4), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((_QWORD *)this + 5), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((_QWORD *)this + 6), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((_QWORD *)this + 7), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_17;
  }
LABEL_16:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((_QWORD *)this + 8), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_18;
  }
LABEL_17:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((_QWORD *)this + 9), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_22;
    goto LABEL_19;
  }
LABEL_18:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 10, *((_QWORD *)this + 10), v4);
  if ((v6 & 0x100) == 0)
    goto LABEL_22;
LABEL_19:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v7 = *((_BYTE *)this + 88);
  *v4 = 88;
  v4[1] = v7;
  v4 += 2;
LABEL_22:
  v8 = *((_QWORD *)this + 1);
  if ((v8 & 1) == 0)
    return (unsigned __int8 *)v4;
  v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    v12 = *(void **)v10;
    v11 = *(_QWORD *)(v10 + 8);
  }
  else
  {
    LODWORD(v11) = *(unsigned __int8 *)(v10 + 23);
    v12 = (void *)v10;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v11)
  {
    v13 = (int)v11;
    memcpy(v4, v12, (int)v11);
    v4 += v13;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v12, v11, (unsigned __int8 *)v4);
}

void siri::dialogengine::SchemaBinary::Property::MergeFrom(siri::dialogengine::SchemaBinary::Property *this, const siri::dialogengine::SchemaBinary::Property *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  const std::string *v10;
  std::string *v11;
  const std::string *v12;
  std::string *v13;
  const std::string *v14;
  std::string *v15;
  const std::string *v16;
  std::string *v17;
  const std::string *v18;
  std::string *v19;
  const std::string *v20;
  std::string *v21;
  const std::string *v22;
  char v23;
  char v24;
  std::string v25[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/SchemaBinary.pb.cc", 1662);
    v4 = google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v24, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v8);
          if ((v6 & 2) == 0)
            goto LABEL_17;
LABEL_11:
          v9 = (std::string *)*((_QWORD *)this + 4);
          *((_DWORD *)this + 4) |= 2u;
          v10 = (const std::string *)*((_QWORD *)a2 + 4);
          if (v9 != v10)
          {
            if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v10);
            else
              std::string::operator=(v9, v10);
          }
LABEL_17:
          if ((v6 & 4) != 0)
          {
            v11 = (std::string *)*((_QWORD *)this + 5);
            *((_DWORD *)this + 4) |= 4u;
            v12 = (const std::string *)*((_QWORD *)a2 + 5);
            if (v11 != v12)
            {
              if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 5, (uint64_t)v12);
                if ((v6 & 8) == 0)
                  goto LABEL_28;
LABEL_22:
                v13 = (std::string *)*((_QWORD *)this + 6);
                *((_DWORD *)this + 4) |= 8u;
                v14 = (const std::string *)*((_QWORD *)a2 + 6);
                if (v13 != v14)
                {
                  if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, (uint64_t)v14);
                  else
                    std::string::operator=(v13, v14);
                }
LABEL_28:
                if ((v6 & 0x10) != 0)
                {
                  v15 = (std::string *)*((_QWORD *)this + 7);
                  *((_DWORD *)this + 4) |= 0x10u;
                  v16 = (const std::string *)*((_QWORD *)a2 + 7);
                  if (v15 != v16)
                  {
                    if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                    {
                      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 7, (uint64_t)v16);
                      if ((v6 & 0x20) == 0)
                        goto LABEL_39;
LABEL_33:
                      v17 = (std::string *)*((_QWORD *)this + 8);
                      *((_DWORD *)this + 4) |= 0x20u;
                      v18 = (const std::string *)*((_QWORD *)a2 + 8);
                      if (v17 != v18)
                      {
                        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 8, (uint64_t)v18);
                        else
                          std::string::operator=(v17, v18);
                      }
LABEL_39:
                      if ((v6 & 0x40) != 0)
                      {
                        v19 = (std::string *)*((_QWORD *)this + 9);
                        *((_DWORD *)this + 4) |= 0x40u;
                        v20 = (const std::string *)*((_QWORD *)a2 + 9);
                        if (v19 != v20)
                        {
                          if (v19 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                          {
                            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 9, (uint64_t)v20);
                            if ((v6 & 0x80) == 0)
                              goto LABEL_50;
                            goto LABEL_44;
                          }
                          std::string::operator=(v19, v20);
                        }
                      }
                      if ((v6 & 0x80) == 0)
                        goto LABEL_50;
LABEL_44:
                      v21 = (std::string *)*((_QWORD *)this + 10);
                      *((_DWORD *)this + 4) |= 0x80u;
                      v22 = (const std::string *)*((_QWORD *)a2 + 10);
                      if (v21 != v22)
                      {
                        if (v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 10, (uint64_t)v22);
                        else
                          std::string::operator=(v21, v22);
                      }
                      goto LABEL_50;
                    }
                    std::string::operator=(v15, v16);
                  }
                }
                if ((v6 & 0x20) == 0)
                  goto LABEL_39;
                goto LABEL_33;
              }
              std::string::operator=(v11, v12);
            }
          }
          if ((v6 & 8) == 0)
            goto LABEL_28;
          goto LABEL_22;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) == 0)
      goto LABEL_17;
    goto LABEL_11;
  }
LABEL_50:
  if ((v6 & 0x100) != 0)
  {
    v23 = *((_BYTE *)a2 + 88);
    *((_DWORD *)this + 4) |= 0x100u;
    *((_BYTE *)this + 88) = v23;
  }
}

void sub_1BF84852C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::SchemaBinary::Property *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Property>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::SchemaBinary::Property *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::SchemaBinary::Property *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x60uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::SchemaBinary::Property>);
    siri::dialogengine::SchemaBinary::Property::Property(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::SchemaBinary::Property *)operator new();
    siri::dialogengine::SchemaBinary::Property::Property(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF8485C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40493B3CACLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::SchemaBinary::Property>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

_QWORD *siri::dialogengine::SchemaBinary::Property::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = this;
  v2 = this[3];
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = v1[4];
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  v6 = v1[5];
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v6, 0x1012C40EC159624);
  }
  v8 = v1[6];
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v8, 0x1012C40EC159624);
  }
  v10 = v1[7];
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0)
      operator delete(*(void **)v10);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v10, 0x1012C40EC159624);
  }
  v11 = v1[8];
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0)
      operator delete(*(void **)v11);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v11, 0x1012C40EC159624);
  }
  v12 = v1[9];
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v12)
  {
    if (*(char *)(v12 + 23) < 0)
      operator delete(*(void **)v12);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v12, 0x1012C40EC159624);
  }
  v13 = v1[10];
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string && v13)
  {
    if (*(char *)(v13 + 23) < 0)
      operator delete(*(void **)v13);
    JUMPOUT(0x1C3B8D890);
  }
  return this;
}

void InitDefaultsscc_info_Schema_SchemaBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/SchemaBinary.pb.cc", a4);
  siri::dialogengine::SchemaBinary::Schema::Schema((siri::dialogengine::SchemaBinary::Schema *)&siri::dialogengine::SchemaBinary::_Schema_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::SchemaBinary::_Schema_default_instance_, v4);
}

void InitDefaultsscc_info_Value_SchemaBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/SchemaBinary.pb.cc", a4);
  siri::dialogengine::SchemaBinary::Value::Value((siri::dialogengine::SchemaBinary::Value *)&siri::dialogengine::SchemaBinary::_Value_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::SchemaBinary::_Value_default_instance_, v4);
}

siri::dialogengine::SchemaBinary::Value *siri::dialogengine::SchemaBinary::Value::Value(siri::dialogengine::SchemaBinary::Value *this)
{
  *(_QWORD *)this = &off_1E792A068;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_Value_SchemaBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Value_SchemaBinary_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1BF8488F8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::SchemaBinary::Value::~Value(siri::dialogengine::SchemaBinary::Value *this)
{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E792A068;
  v1 = (uint64_t *)((char *)this + 8);
  siri::dialogengine::SchemaBinary::Value::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E792A068;
  v1 = (uint64_t *)((char *)this + 8);
  siri::dialogengine::SchemaBinary::Value::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E792A068;
  v1 = (uint64_t *)((char *)this + 8);
  siri::dialogengine::SchemaBinary::Value::SharedDtor(this);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

_QWORD *siri::dialogengine::SchemaBinary::Value::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.SchemaBinary.Value");
}

siri::dialogengine::SchemaBinary::Value *siri::dialogengine::SchemaBinary::Value::New(siri::dialogengine::SchemaBinary::Value *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Value>(0);
}

siri::dialogengine::SchemaBinary::Value *siri::dialogengine::SchemaBinary::Value::New(siri::dialogengine::SchemaBinary::Value *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Value>(a2);
}

void siri::dialogengine::SchemaBinary::Value::Clear(siri::dialogengine::SchemaBinary::Value *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  google::protobuf::internal::InternalMetadataWithArenaLite *v6;
  char v7;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 0xF) == 0)
    goto LABEL_22;
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0)
      goto LABEL_4;
LABEL_11:
    v3 = *((_QWORD *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
      if ((v1 & 4) != 0)
        goto LABEL_15;
    }
    else
    {
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
      if ((v1 & 4) != 0)
        goto LABEL_15;
    }
LABEL_5:
    if ((v1 & 8) == 0)
      goto LABEL_22;
LABEL_19:
    v5 = *((_QWORD *)this + 6);
    if (*(char *)(v5 + 23) < 0)
    {
      **(_BYTE **)v5 = 0;
      *(_QWORD *)(v5 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v5 = 0;
      *(_BYTE *)(v5 + 23) = 0;
    }
    goto LABEL_22;
  }
  v2 = *((_QWORD *)this + 3);
  if (*(char *)(v2 + 23) < 0)
  {
    **(_BYTE **)v2 = 0;
    *(_QWORD *)(v2 + 8) = 0;
    if ((v1 & 2) != 0)
      goto LABEL_11;
  }
  else
  {
    *(_BYTE *)v2 = 0;
    *(_BYTE *)(v2 + 23) = 0;
    if ((v1 & 2) != 0)
      goto LABEL_11;
  }
LABEL_4:
  if ((v1 & 4) == 0)
    goto LABEL_5;
LABEL_15:
  v4 = *((_QWORD *)this + 5);
  if (*(char *)(v4 + 23) < 0)
  {
    **(_BYTE **)v4 = 0;
    *(_QWORD *)(v4 + 8) = 0;
    if ((v1 & 8) == 0)
      goto LABEL_22;
    goto LABEL_19;
  }
  *(_BYTE *)v4 = 0;
  *(_BYTE *)(v4 + 23) = 0;
  if ((v1 & 8) != 0)
    goto LABEL_19;
LABEL_22:
  v7 = *((_BYTE *)this + 8);
  v6 = (siri::dialogengine::SchemaBinary::Value *)((char *)this + 8);
  *((_DWORD *)v6 + 2) = 0;
  if ((v7 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v6);
}

uint64_t siri::dialogengine::SchemaBinary::Value::IsInitialized(siri::dialogengine::SchemaBinary::Value *this)
{
  return 1;
}

void siri::dialogengine::SchemaBinary::Value::CheckTypeAndMergeFrom(siri::dialogengine::SchemaBinary::Value *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::SchemaBinary::Value::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::SchemaBinary::Value::ByteSizeLong(siri::dialogengine::SchemaBinary::Value *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 0xF) == 0)
  {
    v2 = 0;
    goto LABEL_17;
  }
  if ((v1 & 1) == 0)
  {
    v2 = 0;
    if ((v1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v3 = *((_QWORD *)this + 3);
  v4 = *(unsigned __int8 *)(v3 + 23);
  v5 = *(_QWORD *)(v3 + 8);
  if ((v4 & 0x80u) == 0)
    v5 = v4;
  v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    v6 = *((_QWORD *)this + 4);
    v7 = *(unsigned __int8 *)(v6 + 23);
    v8 = *(_QWORD *)(v6 + 8);
    if ((v7 & 0x80u) == 0)
      v8 = v7;
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0)
      goto LABEL_17;
    goto LABEL_14;
  }
  v14 = *((_QWORD *)this + 5);
  v15 = *(unsigned __int8 *)(v14 + 23);
  v16 = *(_QWORD *)(v14 + 8);
  if ((v15 & 0x80u) == 0)
    v16 = v15;
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0)
  {
LABEL_14:
    v9 = *((_QWORD *)this + 6);
    v10 = *(unsigned __int8 *)(v9 + 23);
    v11 = *(_QWORD *)(v9 + 8);
    if ((v10 & 0x80u) == 0)
      v11 = v10;
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  v12 = *((_QWORD *)this + 1);
  if ((v12 & 1) != 0)
  {
    v17 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v17 + 23) < 0)
      v18 = *(_QWORD *)(v17 + 8);
    else
      v18 = *(unsigned __int8 *)(v17 + 23);
    v2 += v18;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t siri::dialogengine::SchemaBinary::Value::GetCachedSize(siri::dialogengine::SchemaBinary::Value *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::SchemaBinary::Value::_InternalParse(siri::dialogengine::SchemaBinary::Value *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  std::string **v5;
  std::string **v6;
  std::string **v7;
  std::string **v8;
  uint64_t *v9;
  google::protobuf::internal *TagFallback;
  const char *v11;
  std::string *v12;
  google::protobuf::internal *v13;
  BOOL v14;
  google::protobuf::internal *v16;

  v16 = a2;
  v5 = (std::string **)((char *)this + 48);
  v6 = (std::string **)((char *)this + 40);
  v7 = (std::string **)((char *)this + 32);
  v8 = (std::string **)((char *)this + 24);
  v9 = (uint64_t *)((char *)this + 8);
  while (2)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v16, *((_DWORD *)a3 + 23)) & 1) != 0)
      return v16;
    TagFallback = (google::protobuf::internal *)((char *)v16 + 1);
    LODWORD(v11) = *(unsigned __int8 *)v16;
    if ((*(char *)v16 & 0x80000000) == 0)
      goto LABEL_6;
    v11 = (const char *)(v11 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v16 + 2);
LABEL_6:
      v16 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v16, v11);
    v16 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 10)
          goto LABEL_24;
        *((_DWORD *)this + 4) |= 1u;
        v12 = (std::string *)*((_QWORD *)this + 3);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_21;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v8;
        goto LABEL_20;
      case 2u:
        if (v11 != 18)
          goto LABEL_24;
        *((_DWORD *)this + 4) |= 2u;
        v12 = (std::string *)*((_QWORD *)this + 4);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_21;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v7;
        goto LABEL_20;
      case 3u:
        if (v11 != 26)
          goto LABEL_24;
        *((_DWORD *)this + 4) |= 4u;
        v12 = (std::string *)*((_QWORD *)this + 5);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_21;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v6;
        goto LABEL_20;
      case 4u:
        if (v11 != 34)
          goto LABEL_24;
        *((_DWORD *)this + 4) |= 8u;
        v12 = (std::string *)*((_QWORD *)this + 6);
        if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_21;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v12 = *v5;
LABEL_20:
        TagFallback = v16;
LABEL_21:
        v13 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_22;
      default:
LABEL_24:
        if ((_DWORD)v11)
          v14 = (v11 & 7) == 4;
        else
          v14 = 1;
        if (v14)
        {
          *((_DWORD *)a3 + 20) = (_DWORD)v11 - 1;
          return TagFallback;
        }
        v13 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v11, v9, TagFallback, a3);
LABEL_22:
        v16 = v13;
        if (v13)
          continue;
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

unsigned __int8 *siri::dialogengine::SchemaBinary::Value::InternalSerializeWithCachedSizesToArray(siri::dialogengine::SchemaBinary::Value *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  uint64_t v7;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v4 = (unsigned __int8 *)a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
  {
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 4), (char *)v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 5), (char *)v4);
  if ((v6 & 8) != 0)
LABEL_5:
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((_QWORD *)this + 6), (char *)v4);
LABEL_6:
  v7 = *((_QWORD *)this + 1);
  if ((v7 & 1) == 0)
    return v4;
  v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    v11 = *(void **)v9;
    v10 = *(_QWORD *)(v9 + 8);
  }
  else
  {
    LODWORD(v10) = *(unsigned __int8 *)(v9 + 23);
    v11 = (void *)v9;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v10)
  {
    v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

void siri::dialogengine::SchemaBinary::Value::MergeFrom(siri::dialogengine::SchemaBinary::Value *this, const siri::dialogengine::SchemaBinary::Value *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  const std::string *v10;
  std::string *v11;
  const std::string *v12;
  std::string *v13;
  std::string **v14;
  std::string *v15;
  const std::string *v16;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/SchemaBinary.pb.cc", 2001);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0xF) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v8);
          if ((v6 & 2) == 0)
            goto LABEL_17;
LABEL_11:
          v9 = (std::string *)*((_QWORD *)this + 4);
          *((_DWORD *)this + 4) |= 2u;
          v10 = (const std::string *)*((_QWORD *)a2 + 4);
          if (v9 != v10)
          {
            if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v10);
            else
              std::string::operator=(v9, v10);
          }
LABEL_17:
          if ((v6 & 4) != 0)
          {
            v11 = (std::string *)*((_QWORD *)this + 5);
            *((_DWORD *)this + 4) |= 4u;
            v12 = (const std::string *)*((_QWORD *)a2 + 5);
            if (v11 != v12)
            {
              if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 5, (uint64_t)v12);
                if ((v6 & 8) == 0)
                  return;
                goto LABEL_22;
              }
              std::string::operator=(v11, v12);
            }
          }
          if ((v6 & 8) == 0)
            return;
LABEL_22:
          v15 = (std::string *)*((_QWORD *)this + 6);
          v14 = (std::string **)((char *)this + 48);
          v13 = v15;
          *((_DWORD *)v14 - 8) |= 8u;
          v16 = (const std::string *)*((_QWORD *)a2 + 6);
          if (v15 != v16)
          {
            if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v14, (uint64_t)v16);
            else
              std::string::operator=(v13, v16);
          }
          return;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) == 0)
      goto LABEL_17;
    goto LABEL_11;
  }
}

void sub_1BF849144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::SchemaBinary::Value *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Value>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::SchemaBinary::Value *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::SchemaBinary::Value *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::SchemaBinary::Value>);
    siri::dialogengine::SchemaBinary::Value::Value(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::SchemaBinary::Value *)operator new();
    siri::dialogengine::SchemaBinary::Value::Value(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF8491E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C404E50D5EBLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::SchemaBinary::Value>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

_QWORD *siri::dialogengine::SchemaBinary::Value::SharedDtor(_QWORD *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;

  v1 = this;
  v2 = this[3];
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = v1[4];
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  v6 = v1[5];
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    this = (_QWORD *)MEMORY[0x1C3B8D890](v6, 0x1012C40EC159624);
  }
  v8 = v1[6];
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    JUMPOUT(0x1C3B8D890);
  }
  return this;
}

siri::dialogengine::SchemaBinary::Schema *siri::dialogengine::SchemaBinary::Schema::Schema(siri::dialogengine::SchemaBinary::Schema *this)
{
  *(_QWORD *)this = &off_1E7929EB8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  if (atomic_load(scc_info_Schema_SchemaBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Schema_SchemaBinary_2eproto);
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 18) = 0;
  return this;
}

void sub_1BF8493B4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t *v2;

  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 72));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 48));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(google::protobuf::internal::RepeatedPtrFieldBase *this)
{
  unsigned int *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (unsigned int *)*((_QWORD *)this + 2);
  if (v2 && !*(_QWORD *)this)
  {
    v3 = v2 + 2;
    v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
          (*(void (**)(_QWORD))(*(_QWORD *)*v3 + 8))(*v3);
        ++v3;
        --v4;
      }
      while (v4);
      v2 = (unsigned int *)*((_QWORD *)this + 2);
    }
    operator delete(v2);
  }
  *((_QWORD *)this + 2) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase((google::protobuf::internal::ArenaImpl **)this);
}

void siri::dialogengine::SchemaBinary::Schema::~Schema(siri::dialogengine::SchemaBinary::Schema *this)
{
  siri::dialogengine::SchemaBinary::Schema::~Schema(this);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_1E7929EB8;
  v2 = *((_QWORD *)this + 12);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 13);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  v6 = *((_QWORD *)this + 14);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    MEMORY[0x1C3B8D890](v6, 0x1012C40EC159624);
  }
  v8 = *((_QWORD *)this + 15);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    MEMORY[0x1C3B8D890](v8, 0x1012C40EC159624);
  }
  v10 = *((_QWORD *)this + 16);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0)
      operator delete(*(void **)v10);
    MEMORY[0x1C3B8D890](v10, 0x1012C40EC159624);
  }
  v11 = *((_QWORD *)this + 17);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0)
      operator delete(*(void **)v11);
    MEMORY[0x1C3B8D890](v11, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::SchemaBinary::Schema *)((char *)this + 72));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::SchemaBinary::Schema *)((char *)this + 48));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::SchemaBinary::Schema *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *siri::dialogengine::SchemaBinary::Schema::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.SchemaBinary.Schema");
}

siri::dialogengine::SchemaBinary::Schema *siri::dialogengine::SchemaBinary::Schema::New(siri::dialogengine::SchemaBinary::Schema *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Schema>(0);
}

siri::dialogengine::SchemaBinary::Schema *siri::dialogengine::SchemaBinary::Schema::New(siri::dialogengine::SchemaBinary::Schema *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Schema>(a2);
}

void siri::dialogengine::SchemaBinary::Schema::Clear(siri::dialogengine::SchemaBinary::Schema *this)
{
  uint64_t v2;
  siri::dialogengine::SchemaBinary::Input **v3;
  siri::dialogengine::SchemaBinary::Input *v4;
  std::string *v5;
  uint64_t v6;
  siri::dialogengine::SchemaBinary::Property **v7;
  siri::dialogengine::SchemaBinary::Property *v8;
  std::string *v9;
  uint64_t v10;
  siri::dialogengine::SchemaBinary::Value **v11;
  siri::dialogengine::SchemaBinary::Value *v12;
  std::string *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  google::protobuf::internal::InternalMetadataWithArenaLite *v21;
  char v22;
  char v23;
  std::string v24[2];

  v2 = *((unsigned int *)this + 8);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v2)
  {
    v3 = (siri::dialogengine::SchemaBinary::Input **)(*((_QWORD *)this + 5) + 8);
    do
    {
      v4 = *v3++;
      siri::dialogengine::SchemaBinary::Input::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  v6 = *((unsigned int *)this + 14);
  if ((v6 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v9 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v6)
  {
    v7 = (siri::dialogengine::SchemaBinary::Property **)(*((_QWORD *)this + 8) + 8);
    do
    {
      v8 = *v7++;
      siri::dialogengine::SchemaBinary::Property::Clear(v8);
      --v6;
    }
    while (v6);
    *((_DWORD *)this + 14) = 0;
  }
  v10 = *((unsigned int *)this + 20);
  if ((v10 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v13 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v13->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v10)
  {
    v11 = (siri::dialogengine::SchemaBinary::Value **)(*((_QWORD *)this + 11) + 8);
    do
    {
      v12 = *v11++;
      siri::dialogengine::SchemaBinary::Value::Clear(v12);
      --v10;
    }
    while (v10);
    *((_DWORD *)this + 20) = 0;
  }
  v14 = *((_DWORD *)this + 4);
  if ((v14 & 0x3F) != 0)
  {
    if ((v14 & 1) == 0)
    {
      if ((v14 & 2) == 0)
        goto LABEL_22;
LABEL_31:
      v16 = *((_QWORD *)this + 13);
      if (*(char *)(v16 + 23) < 0)
      {
        **(_BYTE **)v16 = 0;
        *(_QWORD *)(v16 + 8) = 0;
        if ((v14 & 4) != 0)
          goto LABEL_35;
      }
      else
      {
        *(_BYTE *)v16 = 0;
        *(_BYTE *)(v16 + 23) = 0;
        if ((v14 & 4) != 0)
          goto LABEL_35;
      }
LABEL_23:
      if ((v14 & 8) == 0)
        goto LABEL_24;
LABEL_39:
      v18 = *((_QWORD *)this + 15);
      if (*(char *)(v18 + 23) < 0)
      {
        **(_BYTE **)v18 = 0;
        *(_QWORD *)(v18 + 8) = 0;
        if ((v14 & 0x10) != 0)
          goto LABEL_43;
      }
      else
      {
        *(_BYTE *)v18 = 0;
        *(_BYTE *)(v18 + 23) = 0;
        if ((v14 & 0x10) != 0)
          goto LABEL_43;
      }
LABEL_25:
      if ((v14 & 0x20) == 0)
        goto LABEL_50;
LABEL_47:
      v20 = *((_QWORD *)this + 17);
      if (*(char *)(v20 + 23) < 0)
      {
        **(_BYTE **)v20 = 0;
        *(_QWORD *)(v20 + 8) = 0;
      }
      else
      {
        *(_BYTE *)v20 = 0;
        *(_BYTE *)(v20 + 23) = 0;
      }
      goto LABEL_50;
    }
    v15 = *((_QWORD *)this + 12);
    if (*(char *)(v15 + 23) < 0)
    {
      **(_BYTE **)v15 = 0;
      *(_QWORD *)(v15 + 8) = 0;
      if ((v14 & 2) != 0)
        goto LABEL_31;
    }
    else
    {
      *(_BYTE *)v15 = 0;
      *(_BYTE *)(v15 + 23) = 0;
      if ((v14 & 2) != 0)
        goto LABEL_31;
    }
LABEL_22:
    if ((v14 & 4) == 0)
      goto LABEL_23;
LABEL_35:
    v17 = *((_QWORD *)this + 14);
    if (*(char *)(v17 + 23) < 0)
    {
      **(_BYTE **)v17 = 0;
      *(_QWORD *)(v17 + 8) = 0;
      if ((v14 & 8) != 0)
        goto LABEL_39;
    }
    else
    {
      *(_BYTE *)v17 = 0;
      *(_BYTE *)(v17 + 23) = 0;
      if ((v14 & 8) != 0)
        goto LABEL_39;
    }
LABEL_24:
    if ((v14 & 0x10) == 0)
      goto LABEL_25;
LABEL_43:
    v19 = *((_QWORD *)this + 16);
    if (*(char *)(v19 + 23) < 0)
    {
      **(_BYTE **)v19 = 0;
      *(_QWORD *)(v19 + 8) = 0;
      if ((v14 & 0x20) == 0)
        goto LABEL_50;
    }
    else
    {
      *(_BYTE *)v19 = 0;
      *(_BYTE *)(v19 + 23) = 0;
      if ((v14 & 0x20) == 0)
        goto LABEL_50;
    }
    goto LABEL_47;
  }
LABEL_50:
  if ((v14 & 0xC0) != 0)
    *((_QWORD *)this + 18) = 0;
  v22 = *((_BYTE *)this + 8);
  v21 = (siri::dialogengine::SchemaBinary::Schema *)((char *)this + 8);
  *((_DWORD *)v21 + 2) = 0;
  if ((v22 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v21);
}

void sub_1BF849760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::SchemaBinary::Schema::IsInitialized(siri::dialogengine::SchemaBinary::Schema *this)
{
  return 1;
}

void siri::dialogengine::SchemaBinary::Schema::CheckTypeAndMergeFrom(siri::dialogengine::SchemaBinary::Schema *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::SchemaBinary::Schema::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::SchemaBinary::Schema::ByteSizeLong(siri::dialogengine::SchemaBinary::Schema *this)
{
  uint64_t v2;
  uint64_t v3;
  siri::dialogengine::SchemaBinary::Input **v4;
  uint64_t v5;
  siri::dialogengine::SchemaBinary::Input *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  siri::dialogengine::SchemaBinary::Property **v11;
  uint64_t v12;
  siri::dialogengine::SchemaBinary::Property *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  siri::dialogengine::SchemaBinary::Value **v18;
  uint64_t v19;
  siri::dialogengine::SchemaBinary::Value *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v2 = *((int *)this + 8);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = (siri::dialogengine::SchemaBinary::Input **)(v3 + 8);
  else
    v4 = 0;
  if ((_DWORD)v2)
  {
    v5 = 8 * v2;
    do
    {
      v6 = *v4++;
      v7 = siri::dialogengine::SchemaBinary::Input::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    v2 = 0;
  }
  v8 = *((int *)this + 14);
  v9 = v2 + v8;
  v10 = *((_QWORD *)this + 8);
  if (v10)
    v11 = (siri::dialogengine::SchemaBinary::Property **)(v10 + 8);
  else
    v11 = 0;
  if ((_DWORD)v8)
  {
    v12 = 8 * v8;
    do
    {
      v13 = *v11++;
      v14 = siri::dialogengine::SchemaBinary::Property::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  v15 = *((int *)this + 20);
  v16 = v9 + v15;
  v17 = *((_QWORD *)this + 11);
  if (v17)
    v18 = (siri::dialogengine::SchemaBinary::Value **)(v17 + 8);
  else
    v18 = 0;
  if ((_DWORD)v15)
  {
    v19 = 8 * v15;
    do
    {
      v20 = *v18++;
      v21 = siri::dialogengine::SchemaBinary::Value::ByteSizeLong(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  if (!*((_BYTE *)this + 16))
    goto LABEL_34;
  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v27 = *((_QWORD *)this + 12);
    v28 = *(unsigned __int8 *)(v27 + 23);
    v29 = *(_QWORD *)(v27 + 8);
    if ((v28 & 0x80u) == 0)
      v29 = v28;
    v16 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*((_BYTE *)this + 16) & 2) == 0)
    {
LABEL_24:
      if ((*((_BYTE *)this + 16) & 4) == 0)
        goto LABEL_25;
      goto LABEL_42;
    }
  }
  else if ((*((_BYTE *)this + 16) & 2) == 0)
  {
    goto LABEL_24;
  }
  v30 = *((_QWORD *)this + 13);
  v31 = *(unsigned __int8 *)(v30 + 23);
  v32 = *(_QWORD *)(v30 + 8);
  if ((v31 & 0x80u) == 0)
    v32 = v31;
  v16 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*((_BYTE *)this + 16) & 4) == 0)
  {
LABEL_25:
    if ((*((_BYTE *)this + 16) & 8) == 0)
      goto LABEL_26;
    goto LABEL_45;
  }
LABEL_42:
  v33 = *((_QWORD *)this + 14);
  v34 = *(unsigned __int8 *)(v33 + 23);
  v35 = *(_QWORD *)(v33 + 8);
  if ((v34 & 0x80u) == 0)
    v35 = v34;
  v16 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*((_BYTE *)this + 16) & 8) == 0)
  {
LABEL_26:
    if ((*((_BYTE *)this + 16) & 0x10) == 0)
      goto LABEL_27;
    goto LABEL_48;
  }
LABEL_45:
  v36 = *((_QWORD *)this + 15);
  v37 = *(unsigned __int8 *)(v36 + 23);
  v38 = *(_QWORD *)(v36 + 8);
  if ((v37 & 0x80u) == 0)
    v38 = v37;
  v16 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*((_BYTE *)this + 16) & 0x10) == 0)
  {
LABEL_27:
    if ((*((_BYTE *)this + 16) & 0x20) == 0)
      goto LABEL_28;
LABEL_51:
    v42 = *((_QWORD *)this + 17);
    v43 = *(unsigned __int8 *)(v42 + 23);
    v44 = *(_QWORD *)(v42 + 8);
    if ((v43 & 0x80u) == 0)
      v44 = v43;
    v16 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*((_BYTE *)this + 16) & 0x40) == 0)
    {
LABEL_29:
      if ((*((_BYTE *)this + 16) & 0x80) == 0)
        goto LABEL_34;
      goto LABEL_30;
    }
    goto LABEL_54;
  }
LABEL_48:
  v39 = *((_QWORD *)this + 16);
  v40 = *(unsigned __int8 *)(v39 + 23);
  v41 = *(_QWORD *)(v39 + 8);
  if ((v40 & 0x80u) == 0)
    v41 = v40;
  v16 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*((_BYTE *)this + 16) & 0x20) != 0)
    goto LABEL_51;
LABEL_28:
  if ((*((_BYTE *)this + 16) & 0x40) == 0)
    goto LABEL_29;
LABEL_54:
  v45 = *((_DWORD *)this + 36);
  v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v45 >= 0)
    v47 = v46;
  else
    v47 = 11;
  v16 += v47;
  if ((*((_BYTE *)this + 16) & 0x80) != 0)
  {
LABEL_30:
    v22 = *((_DWORD *)this + 37);
    v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v22 >= 0)
      v24 = v23;
    else
      v24 = 11;
    v16 += v24;
  }
LABEL_34:
  v25 = *((_QWORD *)this + 1);
  if ((v25 & 1) != 0)
  {
    v48 = v25 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v48 + 23) < 0)
      v49 = *(_QWORD *)(v48 + 8);
    else
      v49 = *(unsigned __int8 *)(v48 + 23);
    v16 += v49;
  }
  *((_DWORD *)this + 5) = v16;
  return v16;
}

uint64_t siri::dialogengine::SchemaBinary::Schema::GetCachedSize(siri::dialogengine::SchemaBinary::Schema *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::SchemaBinary::Schema::_InternalParse(siri::dialogengine::SchemaBinary::Schema *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  google::protobuf::internal *TagFallback;
  const char *v9;
  std::string *v10;
  std::string **v11;
  google::protobuf::internal *v12;
  unint64_t v13;
  int v14;
  int v15;
  google::protobuf::internal *v16;
  int v17;
  int v18;
  google::protobuf::internal *v19;
  google::protobuf::internal *v20;
  int *v21;
  uint64_t v22;
  int v23;
  siri::dialogengine::SchemaBinary::Input *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  char *v28;
  char *SizeFallback;
  unsigned int v30;
  int v31;
  int v32;
  BOOL v33;
  int v34;
  int v35;
  unint64_t v36;
  google::protobuf::internal *v37;
  google::protobuf::internal *v38;
  int *v39;
  uint64_t v40;
  int v41;
  siri::dialogengine::SchemaBinary::Property *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  char *v46;
  char *v47;
  unsigned int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unint64_t v53;
  google::protobuf::internal *v54;
  google::protobuf::internal *v55;
  int *v56;
  uint64_t v57;
  int v58;
  siri::dialogengine::SchemaBinary::Value *v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int v62;
  char *v63;
  char *v64;
  unsigned int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unint64_t v70;
  google::protobuf::internal *v71;
  BOOL v72;
  unint64_t v73;
  unint64_t v74;
  std::string *v75;
  int v76;
  std::string *v77;
  std::string *v78;
  std::string **v80;
  std::string **v81;
  std::string **v82;
  std::string **v83;
  std::string **v84;
  std::string **v85;
  uint64_t *v86;
  google::protobuf::internal *v87;

  v5 = (unsigned int *)((char *)this + 72);
  v6 = (unsigned int *)((char *)this + 48);
  v7 = (unsigned int *)((char *)this + 24);
  v86 = (uint64_t *)((char *)this + 8);
  v87 = a2;
  v84 = (std::string **)((char *)this + 128);
  v85 = (std::string **)((char *)this + 136);
  v82 = (std::string **)((char *)this + 112);
  v83 = (std::string **)((char *)this + 120);
  v80 = (std::string **)((char *)this + 96);
  v81 = (std::string **)((char *)this + 104);
  while (2)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v87, *((_DWORD *)a3 + 23)) & 1) != 0)
      return v87;
    TagFallback = (google::protobuf::internal *)((char *)v87 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v87;
    if ((*(char *)v87 & 0x80000000) == 0)
      goto LABEL_6;
    v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v87 + 2);
LABEL_6:
      v87 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v87, v9);
    v87 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10)
          goto LABEL_103;
        *((_DWORD *)this + 4) |= 1u;
        v10 = (std::string *)*((_QWORD *)this + 12);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_100;
        v11 = v80;
        goto LABEL_99;
      case 2u:
        if (v9 != 18)
          goto LABEL_103;
        *((_DWORD *)this + 4) |= 2u;
        v10 = (std::string *)*((_QWORD *)this + 13);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_100;
        v11 = v81;
        goto LABEL_99;
      case 3u:
        if (v9 != 26)
          goto LABEL_103;
        *((_DWORD *)this + 4) |= 4u;
        v10 = (std::string *)*((_QWORD *)this + 14);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_100;
        v11 = v82;
        goto LABEL_99;
      case 4u:
        if (v9 != 34)
          goto LABEL_103;
        *((_DWORD *)this + 4) |= 8u;
        v10 = (std::string *)*((_QWORD *)this + 15);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_100;
        v11 = v83;
        goto LABEL_99;
      case 5u:
        if (v9 != 40)
          goto LABEL_103;
        v12 = (google::protobuf::internal *)((char *)TagFallback + 1);
        v13 = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0)
          goto LABEL_26;
        v14 = *(char *)v12;
        v15 = v13 + (v14 << 7);
        v13 = (v15 - 128);
        if (v14 < 0)
        {
          v87 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, (v15 - 128));
          if (!v87)
            goto LABEL_121;
          v13 = v73;
        }
        else
        {
          v12 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_26:
          v87 = v12;
        }
        if (v13 <= 1)
        {
          *((_DWORD *)this + 4) |= 0x40u;
          *((_DWORD *)this + 36) = v13;
          continue;
        }
        if ((*v86 & 1) != 0)
        {
          v75 = (std::string *)(*v86 & 0xFFFFFFFFFFFFFFFELL);
        }
        else
        {
          google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v86);
          v75 = v77;
        }
        v76 = 5;
        goto LABEL_118;
      case 6u:
        if (v9 != 50)
          goto LABEL_103;
        *((_DWORD *)this + 4) |= 0x10u;
        v10 = (std::string *)*((_QWORD *)this + 16);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_100;
        v11 = v84;
        goto LABEL_99;
      case 7u:
        if (v9 != 56)
          goto LABEL_103;
        v16 = (google::protobuf::internal *)((char *)TagFallback + 1);
        v13 = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0)
          goto LABEL_36;
        v17 = *(char *)v16;
        v18 = v13 + (v17 << 7);
        v13 = (v18 - 128);
        if (v17 < 0)
        {
          v87 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, (v18 - 128));
          if (!v87)
            goto LABEL_121;
          v13 = v74;
        }
        else
        {
          v16 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_36:
          v87 = v16;
        }
        if (v13 > 2)
        {
          if ((*v86 & 1) != 0)
          {
            v75 = (std::string *)(*v86 & 0xFFFFFFFFFFFFFFFELL);
          }
          else
          {
            google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v86);
            v75 = v78;
          }
          v76 = 7;
LABEL_118:
          google::protobuf::internal::WriteVarint(v76, v13, v75);
        }
        else
        {
          *((_DWORD *)this + 4) |= 0x80u;
          *((_DWORD *)this + 37) = v13;
        }
        continue;
      case 8u:
        if (v9 != 66)
          goto LABEL_103;
        v19 = (google::protobuf::internal *)((char *)TagFallback - 1);
LABEL_41:
        v20 = (google::protobuf::internal *)((char *)v19 + 1);
        v87 = v20;
        v21 = (int *)*((_QWORD *)this + 5);
        if (!v21)
        {
          v23 = *((_DWORD *)this + 9);
LABEL_46:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v23 + 1);
          v21 = (int *)*((_QWORD *)this + 5);
          v23 = *v21;
          goto LABEL_47;
        }
        v22 = *((int *)this + 8);
        v23 = *v21;
        if ((int)v22 < *v21)
        {
          *((_DWORD *)this + 8) = v22 + 1;
          v24 = *(siri::dialogengine::SchemaBinary::Input **)&v21[2 * v22 + 2];
          goto LABEL_48;
        }
        if (v23 == *((_DWORD *)this + 9))
          goto LABEL_46;
LABEL_47:
        *v21 = v23 + 1;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Input>(*((google::protobuf::internal::ArenaImpl **)this + 3));
        v25 = *((_QWORD *)this + 5);
        v26 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v26 + 1;
        *(_QWORD *)(v25 + 8 * v26 + 8) = v24;
        v20 = v87;
LABEL_48:
        v27 = *(unsigned __int8 *)v20;
        if (*(char *)v20 < 0)
        {
          SizeFallback = google::protobuf::internal::ReadSizeFallback(v20, (const char *)*(unsigned __int8 *)v20);
          if (!SizeFallback)
            goto LABEL_121;
          v28 = SizeFallback;
          v27 = v30;
        }
        else
        {
          v28 = (char *)v20 + 1;
        }
        v31 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v28, v27);
        v32 = *((_DWORD *)a3 + 22);
        v33 = __OFSUB__(v32--, 1);
        *((_DWORD *)a3 + 22) = v32;
        if (v32 < 0 == v33)
        {
          v34 = v31;
          v19 = siri::dialogengine::SchemaBinary::Input::_InternalParse(v24, (google::protobuf::internal *)v28, a3);
          if (v19)
          {
            ++*((_DWORD *)a3 + 22);
            if (!*((_DWORD *)a3 + 20))
            {
              v35 = *((_DWORD *)a3 + 7) + v34;
              *((_DWORD *)a3 + 7) = v35;
              v36 = *((_QWORD *)a3 + 1) + (v35 & (v35 >> 31));
              *(_QWORD *)a3 = v36;
              v87 = v19;
              if (v36 <= (unint64_t)v19 || *(_BYTE *)v19 != 66)
                continue;
              goto LABEL_41;
            }
          }
        }
        goto LABEL_121;
      case 9u:
        if (v9 != 74)
          goto LABEL_103;
        v37 = (google::protobuf::internal *)((char *)TagFallback - 1);
LABEL_60:
        v38 = (google::protobuf::internal *)((char *)v37 + 1);
        v87 = v38;
        v39 = (int *)*((_QWORD *)this + 8);
        if (!v39)
        {
          v41 = *((_DWORD *)this + 15);
LABEL_65:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v41 + 1);
          v39 = (int *)*((_QWORD *)this + 8);
          v41 = *v39;
          goto LABEL_66;
        }
        v40 = *((int *)this + 14);
        v41 = *v39;
        if ((int)v40 < *v39)
        {
          *((_DWORD *)this + 14) = v40 + 1;
          v42 = *(siri::dialogengine::SchemaBinary::Property **)&v39[2 * v40 + 2];
          goto LABEL_67;
        }
        if (v41 == *((_DWORD *)this + 15))
          goto LABEL_65;
LABEL_66:
        *v39 = v41 + 1;
        v42 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Property>(*((google::protobuf::internal::ArenaImpl **)this + 6));
        v43 = *((_QWORD *)this + 8);
        v44 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v44 + 1;
        *(_QWORD *)(v43 + 8 * v44 + 8) = v42;
        v38 = v87;
LABEL_67:
        v45 = *(unsigned __int8 *)v38;
        if (*(char *)v38 < 0)
        {
          v47 = google::protobuf::internal::ReadSizeFallback(v38, (const char *)*(unsigned __int8 *)v38);
          if (!v47)
            goto LABEL_121;
          v46 = v47;
          v45 = v48;
        }
        else
        {
          v46 = (char *)v38 + 1;
        }
        v49 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v46, v45);
        v50 = *((_DWORD *)a3 + 22);
        v33 = __OFSUB__(v50--, 1);
        *((_DWORD *)a3 + 22) = v50;
        if (v50 < 0 == v33)
        {
          v51 = v49;
          v37 = siri::dialogengine::SchemaBinary::Property::_InternalParse(v42, (google::protobuf::internal *)v46, a3);
          if (v37)
          {
            ++*((_DWORD *)a3 + 22);
            if (!*((_DWORD *)a3 + 20))
            {
              v52 = *((_DWORD *)a3 + 7) + v51;
              *((_DWORD *)a3 + 7) = v52;
              v53 = *((_QWORD *)a3 + 1) + (v52 & (v52 >> 31));
              *(_QWORD *)a3 = v53;
              v87 = v37;
              if (v53 <= (unint64_t)v37 || *(_BYTE *)v37 != 74)
                continue;
              goto LABEL_60;
            }
          }
        }
        goto LABEL_121;
      case 0xAu:
        if (v9 != 82)
          goto LABEL_103;
        v54 = (google::protobuf::internal *)((char *)TagFallback - 1);
LABEL_79:
        v55 = (google::protobuf::internal *)((char *)v54 + 1);
        v87 = v55;
        v56 = (int *)*((_QWORD *)this + 11);
        if (!v56)
        {
          v58 = *((_DWORD *)this + 21);
LABEL_84:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v58 + 1);
          v56 = (int *)*((_QWORD *)this + 11);
          v58 = *v56;
          goto LABEL_85;
        }
        v57 = *((int *)this + 20);
        v58 = *v56;
        if ((int)v57 < *v56)
        {
          *((_DWORD *)this + 20) = v57 + 1;
          v59 = *(siri::dialogengine::SchemaBinary::Value **)&v56[2 * v57 + 2];
          goto LABEL_86;
        }
        if (v58 == *((_DWORD *)this + 21))
          goto LABEL_84;
LABEL_85:
        *v56 = v58 + 1;
        v59 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Value>(*((google::protobuf::internal::ArenaImpl **)this + 9));
        v60 = *((_QWORD *)this + 11);
        v61 = *((int *)this + 20);
        *((_DWORD *)this + 20) = v61 + 1;
        *(_QWORD *)(v60 + 8 * v61 + 8) = v59;
        v55 = v87;
LABEL_86:
        v62 = *(unsigned __int8 *)v55;
        if (*(char *)v55 < 0)
        {
          v64 = google::protobuf::internal::ReadSizeFallback(v55, (const char *)*(unsigned __int8 *)v55);
          if (!v64)
            goto LABEL_121;
          v63 = v64;
          v62 = v65;
        }
        else
        {
          v63 = (char *)v55 + 1;
        }
        v66 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v63, v62);
        v67 = *((_DWORD *)a3 + 22);
        v33 = __OFSUB__(v67--, 1);
        *((_DWORD *)a3 + 22) = v67;
        if (v67 < 0 == v33)
        {
          v68 = v66;
          v54 = siri::dialogengine::SchemaBinary::Value::_InternalParse(v59, (google::protobuf::internal *)v63, a3);
          if (v54)
          {
            ++*((_DWORD *)a3 + 22);
            if (!*((_DWORD *)a3 + 20))
            {
              v69 = *((_DWORD *)a3 + 7) + v68;
              *((_DWORD *)a3 + 7) = v69;
              v70 = *((_QWORD *)a3 + 1) + (v69 & (v69 >> 31));
              *(_QWORD *)a3 = v70;
              v87 = v54;
              if (v70 <= (unint64_t)v54 || *(_BYTE *)v54 != 82)
                continue;
              goto LABEL_79;
            }
          }
        }
LABEL_121:
        TagFallback = 0;
        break;
      case 0xBu:
        if (v9 != 90)
          goto LABEL_103;
        *((_DWORD *)this + 4) |= 0x20u;
        v10 = (std::string *)*((_QWORD *)this + 17);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_100;
        v11 = v85;
LABEL_99:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v11, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v10 = *v11;
        TagFallback = v87;
LABEL_100:
        v71 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_101;
      default:
LABEL_103:
        if ((_DWORD)v9)
          v72 = (v9 & 7) == 4;
        else
          v72 = 1;
        if (v72)
        {
          *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
          return TagFallback;
        }
        v71 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v86, TagFallback, a3);
LABEL_101:
        v87 = v71;
        if (!v71)
          goto LABEL_121;
        continue;
    }
    return TagFallback;
  }
}

unsigned __int8 *siri::dialogengine::SchemaBinary::Schema::InternalSerializeWithCachedSizesToArray(siri::dialogengine::SchemaBinary::Schema *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  int v20;
  std::string *v21;
  std::string *v22;
  siri::dialogengine::SchemaBinary::Input *v23;
  unsigned int v24;
  char *v25;
  unsigned int v26;
  _BYTE *v27;
  _BYTE *v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  std::string *v33;
  std::string *v34;
  siri::dialogengine::SchemaBinary::Property *v35;
  unsigned int v36;
  char *v37;
  unsigned int v38;
  _BYTE *v39;
  _BYTE *v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  std::string *v45;
  std::string *v46;
  siri::dialogengine::SchemaBinary::Value *v47;
  unsigned int v48;
  char *v49;
  unsigned int v50;
  _BYTE *v51;
  _BYTE *v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char v61;
  std::string v62[2];

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
  {
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 12), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 13), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 14), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x40) == 0)
      goto LABEL_6;
LABEL_13:
    if ((unint64_t)v4 >= *(_QWORD *)a3)
      v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    v7 = *((int *)this + 36);
    *v4 = 40;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      v8 = v7 >> 7;
      if (v7 >> 14)
      {
        v9 = v4 + 2;
        do
        {
          v10 = v9;
          *v9++ = v8 | 0x80;
          v11 = v8 >> 7;
          v12 = v8 >> 14;
          v8 >>= 7;
        }
        while (v12);
        v4 = v10 + 2;
        *v9 = v11;
        if ((v6 & 0x10) != 0)
          goto LABEL_24;
      }
      else
      {
        v4[2] = v8;
        v4 += 3;
        if ((v6 & 0x10) != 0)
          goto LABEL_24;
      }
    }
    else
    {
      v4[1] = v7;
      v4 += 2;
      if ((v6 & 0x10) != 0)
        goto LABEL_24;
    }
LABEL_7:
    if ((v6 & 0x80) == 0)
      goto LABEL_34;
    goto LABEL_25;
  }
LABEL_12:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((_QWORD *)this + 15), v4);
  if ((v6 & 0x40) != 0)
    goto LABEL_13;
LABEL_6:
  if ((v6 & 0x10) == 0)
    goto LABEL_7;
LABEL_24:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((_QWORD *)this + 16), v4);
  if ((v6 & 0x80) == 0)
    goto LABEL_34;
LABEL_25:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v13 = *((int *)this + 37);
  *v4 = 56;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    v14 = v13 >> 7;
    if (v13 >> 14)
    {
      v15 = v4 + 2;
      do
      {
        v16 = v15;
        *v15++ = v14 | 0x80;
        v17 = v14 >> 7;
        v18 = v14 >> 14;
        v14 >>= 7;
      }
      while (v18);
      v4 = v16 + 2;
      *v15 = v17;
    }
    else
    {
      v4[2] = v14;
      v4 += 3;
    }
  }
  else
  {
    v4[1] = v13;
    v4 += 2;
  }
LABEL_34:
  v19 = *((_DWORD *)this + 8);
  if (v19)
  {
    v20 = 0;
    while ((unint64_t)v4 < *(_QWORD *)a3)
    {
      if (v20 < 0)
        goto LABEL_38;
LABEL_39:
      if (*((_DWORD *)this + 8) <= v20)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
        v22 = google::protobuf::internal::LogMessage::operator<<(v62, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v61, (const char **)&v22->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v62[0].__r_.__value_.__l.__data_);
      }
      v23 = *(siri::dialogengine::SchemaBinary::Input **)(*((_QWORD *)this + 5) + 8 * v20 + 8);
      *v4 = 66;
      v24 = *((_DWORD *)v23 + 5);
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        v26 = v24 >> 7;
        if (v24 >> 14)
        {
          v27 = v4 + 2;
          do
          {
            v28 = v27;
            *v27++ = v26 | 0x80;
            v29 = v26 >> 7;
            v30 = v26 >> 14;
            v26 >>= 7;
          }
          while (v30);
          v25 = v28 + 2;
          *v27 = v29;
        }
        else
        {
          v4[2] = v26;
          v25 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v24;
        v25 = v4 + 2;
      }
      v4 = (char *)siri::dialogengine::SchemaBinary::Input::InternalSerializeWithCachedSizesToArray(v23, v25, a3);
      if (++v20 == v19)
        goto LABEL_52;
    }
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    if ((v20 & 0x80000000) == 0)
      goto LABEL_39;
LABEL_38:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v21 = google::protobuf::internal::LogMessage::operator<<(v62, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v61, (const char **)&v21->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v62[0].__r_.__value_.__l.__data_);
    goto LABEL_39;
  }
LABEL_52:
  v31 = *((_DWORD *)this + 14);
  if (v31)
  {
    v32 = 0;
    while ((unint64_t)v4 < *(_QWORD *)a3)
    {
      if (v32 < 0)
        goto LABEL_56;
LABEL_57:
      if (*((_DWORD *)this + 14) <= v32)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
        v34 = google::protobuf::internal::LogMessage::operator<<(v62, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v61, (const char **)&v34->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v62[0].__r_.__value_.__l.__data_);
      }
      v35 = *(siri::dialogengine::SchemaBinary::Property **)(*((_QWORD *)this + 8) + 8 * v32 + 8);
      *v4 = 74;
      v36 = *((_DWORD *)v35 + 5);
      if (v36 > 0x7F)
      {
        v4[1] = v36 | 0x80;
        v38 = v36 >> 7;
        if (v36 >> 14)
        {
          v39 = v4 + 2;
          do
          {
            v40 = v39;
            *v39++ = v38 | 0x80;
            v41 = v38 >> 7;
            v42 = v38 >> 14;
            v38 >>= 7;
          }
          while (v42);
          v37 = v40 + 2;
          *v39 = v41;
        }
        else
        {
          v4[2] = v38;
          v37 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v36;
        v37 = v4 + 2;
      }
      v4 = (char *)siri::dialogengine::SchemaBinary::Property::InternalSerializeWithCachedSizesToArray(v35, v37, a3);
      if (++v32 == v31)
        goto LABEL_70;
    }
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    if ((v32 & 0x80000000) == 0)
      goto LABEL_57;
LABEL_56:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v33 = google::protobuf::internal::LogMessage::operator<<(v62, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v61, (const char **)&v33->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v62[0].__r_.__value_.__l.__data_);
    goto LABEL_57;
  }
LABEL_70:
  v43 = *((_DWORD *)this + 20);
  if (v43)
  {
    v44 = 0;
    while ((unint64_t)v4 < *(_QWORD *)a3)
    {
      if (v44 < 0)
        goto LABEL_74;
LABEL_75:
      if (*((_DWORD *)this + 20) <= v44)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
        v46 = google::protobuf::internal::LogMessage::operator<<(v62, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v61, (const char **)&v46->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v62[0].__r_.__value_.__l.__data_);
      }
      v47 = *(siri::dialogengine::SchemaBinary::Value **)(*((_QWORD *)this + 11) + 8 * v44 + 8);
      *v4 = 82;
      v48 = *((_DWORD *)v47 + 5);
      if (v48 > 0x7F)
      {
        v4[1] = v48 | 0x80;
        v50 = v48 >> 7;
        if (v48 >> 14)
        {
          v51 = v4 + 2;
          do
          {
            v52 = v51;
            *v51++ = v50 | 0x80;
            v53 = v50 >> 7;
            v54 = v50 >> 14;
            v50 >>= 7;
          }
          while (v54);
          v49 = v52 + 2;
          *v51 = v53;
        }
        else
        {
          v4[2] = v50;
          v49 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v48;
        v49 = v4 + 2;
      }
      v4 = (char *)siri::dialogengine::SchemaBinary::Value::InternalSerializeWithCachedSizesToArray(v47, v49, a3);
      if (++v44 == v43)
        goto LABEL_88;
    }
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    if ((v44 & 0x80000000) == 0)
      goto LABEL_75;
LABEL_74:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v62, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v45 = google::protobuf::internal::LogMessage::operator<<(v62, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v61, (const char **)&v45->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v62[0].__r_.__value_.__l.__data_);
    goto LABEL_75;
  }
LABEL_88:
  if ((v6 & 0x20) != 0)
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 11, *((_QWORD *)this + 17), v4);
  v55 = *((_QWORD *)this + 1);
  if ((v55 & 1) == 0)
    return (unsigned __int8 *)v4;
  v57 = v55 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v57 + 23) < 0)
  {
    v59 = *(void **)v57;
    v58 = *(_QWORD *)(v57 + 8);
  }
  else
  {
    LODWORD(v58) = *(unsigned __int8 *)(v57 + 23);
    v59 = (void *)v57;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v58)
  {
    v60 = (int)v58;
    memcpy(v4, v59, (int)v58);
    v4 += v60;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v59, v58, (unsigned __int8 *)v4);
}

void sub_1BF84A974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::SchemaBinary::Schema::MergeFrom(siri::dialogengine::SchemaBinary::Schema *this, const siri::dialogengine::SchemaBinary::Schema *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  const std::string *v10;
  std::string *v11;
  const std::string *v12;
  std::string *v13;
  const std::string *v14;
  std::string *v15;
  const std::string *v16;
  std::string *v17;
  const std::string *v18;
  char v19;
  std::string v20[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/SchemaBinary.pb.cc", 754);
    v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Input>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Property>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 12);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 12);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 12, (uint64_t)v8);
          if ((v6 & 2) == 0)
            goto LABEL_17;
LABEL_11:
          v9 = (std::string *)*((_QWORD *)this + 13);
          *((_DWORD *)this + 4) |= 2u;
          v10 = (const std::string *)*((_QWORD *)a2 + 13);
          if (v9 != v10)
          {
            if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 13, (uint64_t)v10);
            else
              std::string::operator=(v9, v10);
          }
LABEL_17:
          if ((v6 & 4) != 0)
          {
            v11 = (std::string *)*((_QWORD *)this + 14);
            *((_DWORD *)this + 4) |= 4u;
            v12 = (const std::string *)*((_QWORD *)a2 + 14);
            if (v11 != v12)
            {
              if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 14, (uint64_t)v12);
                if ((v6 & 8) == 0)
                  goto LABEL_28;
LABEL_22:
                v13 = (std::string *)*((_QWORD *)this + 15);
                *((_DWORD *)this + 4) |= 8u;
                v14 = (const std::string *)*((_QWORD *)a2 + 15);
                if (v13 != v14)
                {
                  if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 15, (uint64_t)v14);
                  else
                    std::string::operator=(v13, v14);
                }
LABEL_28:
                if ((v6 & 0x10) != 0)
                {
                  v15 = (std::string *)*((_QWORD *)this + 16);
                  *((_DWORD *)this + 4) |= 0x10u;
                  v16 = (const std::string *)*((_QWORD *)a2 + 16);
                  if (v15 != v16)
                  {
                    if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                    {
                      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 16, (uint64_t)v16);
                      if ((v6 & 0x20) != 0)
                      {
LABEL_33:
                        v17 = (std::string *)*((_QWORD *)this + 17);
                        *((_DWORD *)this + 4) |= 0x20u;
                        v18 = (const std::string *)*((_QWORD *)a2 + 17);
                        if (v17 != v18)
                        {
                          if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                            google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 17, (uint64_t)v18);
                          else
                            std::string::operator=(v17, v18);
                        }
                      }
LABEL_39:
                      if ((v6 & 0x40) != 0)
                        *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
                      if ((v6 & 0x80) != 0)
                        *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
                      *((_DWORD *)this + 4) |= v6;
                      return;
                    }
                    std::string::operator=(v15, v16);
                  }
                }
                if ((v6 & 0x20) != 0)
                  goto LABEL_33;
                goto LABEL_39;
              }
              std::string::operator=(v11, v12);
            }
          }
          if ((v6 & 8) == 0)
            goto LABEL_28;
          goto LABEL_22;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) == 0)
      goto LABEL_17;
    goto LABEL_11;
  }
}

void sub_1BF84AC34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Input>::TypeHandler>(int **this, uint64_t a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  siri::dialogengine::SchemaBinary::Input **v13;
  siri::dialogengine::SchemaBinary::Input **v14;
  siri::dialogengine::SchemaBinary::Input *v15;
  siri::dialogengine::SchemaBinary::Input *v16;
  siri::dialogengine::SchemaBinary::Input *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  siri::dialogengine::SchemaBinary::Input **v21;
  siri::dialogengine::SchemaBinary::Input **v22;
  siri::dialogengine::SchemaBinary::Input *v23;
  siri::dialogengine::SchemaBinary::Input *v24;
  int v25;
  int *v26;
  char v27;
  std::string v28[2];

  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    v8 = v7;
    v9 = *this[2];
    v10 = *((int *)this + 2);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (siri::dialogengine::SchemaBinary::Input **)(v6 + 8);
      v14 = (siri::dialogengine::SchemaBinary::Input **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::SchemaBinary::Input>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = (google::protobuf::internal::ArenaImpl *)*this;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (siri::dialogengine::SchemaBinary::Input **)((char *)v8 + v20);
      v22 = (siri::dialogengine::SchemaBinary::Input **)(v20 + v6 + 8);
      do
      {
        v23 = *v22++;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Input>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::SchemaBinary::Input>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    v26 = this[2];
    if (*v26 < v25)
      *v26 = v25;
  }
}

void sub_1BF84ADA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Property>::TypeHandler>(int **this, uint64_t a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  siri::dialogengine::SchemaBinary::Property **v13;
  siri::dialogengine::SchemaBinary::Property **v14;
  siri::dialogengine::SchemaBinary::Property *v15;
  siri::dialogengine::SchemaBinary::Property *v16;
  siri::dialogengine::SchemaBinary::Property *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  siri::dialogengine::SchemaBinary::Property **v21;
  siri::dialogengine::SchemaBinary::Property **v22;
  siri::dialogengine::SchemaBinary::Property *v23;
  siri::dialogengine::SchemaBinary::Property *v24;
  int v25;
  int *v26;
  char v27;
  std::string v28[2];

  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    v8 = v7;
    v9 = *this[2];
    v10 = *((int *)this + 2);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (siri::dialogengine::SchemaBinary::Property **)(v6 + 8);
      v14 = (siri::dialogengine::SchemaBinary::Property **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::SchemaBinary::Property>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = (google::protobuf::internal::ArenaImpl *)*this;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (siri::dialogengine::SchemaBinary::Property **)((char *)v8 + v20);
      v22 = (siri::dialogengine::SchemaBinary::Property **)(v20 + v6 + 8);
      do
      {
        v23 = *v22++;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Property>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::SchemaBinary::Property>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    v26 = this[2];
    if (*v26 < v25)
      *v26 = v25;
  }
}

void sub_1BF84AF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::TypeHandler>(int **this, uint64_t a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  siri::dialogengine::SchemaBinary::Value **v13;
  siri::dialogengine::SchemaBinary::Value **v14;
  siri::dialogengine::SchemaBinary::Value *v15;
  siri::dialogengine::SchemaBinary::Value *v16;
  siri::dialogengine::SchemaBinary::Value *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  siri::dialogengine::SchemaBinary::Value **v21;
  siri::dialogengine::SchemaBinary::Value **v22;
  siri::dialogengine::SchemaBinary::Value *v23;
  siri::dialogengine::SchemaBinary::Value *v24;
  int v25;
  int *v26;
  char v27;
  std::string v28[2];

  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    v8 = v7;
    v9 = *this[2];
    v10 = *((int *)this + 2);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (siri::dialogengine::SchemaBinary::Value **)(v6 + 8);
      v14 = (siri::dialogengine::SchemaBinary::Value **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::SchemaBinary::Value>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = (google::protobuf::internal::ArenaImpl *)*this;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (siri::dialogengine::SchemaBinary::Value **)((char *)v8 + v20);
      v22 = (siri::dialogengine::SchemaBinary::Value **)(v20 + v6 + 8);
      do
      {
        v23 = *v22++;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Value>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::SchemaBinary::Value>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    v26 = this[2];
    if (*v26 < v25)
      *v26 = v25;
  }
}

void sub_1BF84B078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::SchemaBinary::Value>::Merge(siri::dialogengine::SchemaBinary::Value *a1, siri::dialogengine::SchemaBinary::Value *this)
{
  siri::dialogengine::SchemaBinary::Value::MergeFrom(this, a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::SchemaBinary::Property>::Merge(siri::dialogengine::SchemaBinary::Property *a1, siri::dialogengine::SchemaBinary::Property *this)
{
  siri::dialogengine::SchemaBinary::Property::MergeFrom(this, a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::SchemaBinary::Input>::Merge(siri::dialogengine::SchemaBinary::Input *a1, siri::dialogengine::SchemaBinary::Input *this)
{
  siri::dialogengine::SchemaBinary::Input::MergeFrom(this, a1);
}

siri::dialogengine::SchemaBinary::Schema *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::SchemaBinary::Schema>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::SchemaBinary::Schema *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::SchemaBinary::Schema *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x98uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::SchemaBinary::Schema>);
    siri::dialogengine::SchemaBinary::Schema::Schema(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::SchemaBinary::Schema *)operator new();
    siri::dialogengine::SchemaBinary::Schema::Schema(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF84B144(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40A7419971);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::SchemaBinary::Schema>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

BOOL siri::dialogengine::SchemaBinary::Schema_Type_IsValid(siri::dialogengine::SchemaBinary *this)
{
  return this < 2;
}

uint64_t *siri::dialogengine::SchemaBinary::Schema_Type_Name(int a1)
{
  unsigned __int8 v2;
  google::protobuf::internal *v3;

  if ((v2 & 1) == 0
  {
    siri::dialogengine::SchemaBinary::Schema_Type_Name(siri::dialogengine::SchemaBinary::Schema_Type)::dummy = google::protobuf::internal::InitializeEnumStrings((uint64_t)&siri::dialogengine::SchemaBinary::Schema_Type_entries, (int *)&siri::dialogengine::SchemaBinary::Schema_Type_entries_by_number, (char *)2, (void (*)(const void *))&siri::dialogengine::SchemaBinary::Schema_Type_strings);
  }
  v3 = (google::protobuf::internal *)google::protobuf::internal::LookUpEnumName((uint64_t)&siri::dialogengine::SchemaBinary::Schema_Type_entries, (int *)&siri::dialogengine::SchemaBinary::Schema_Type_entries_by_number, 2uLL, a1);
  if ((_DWORD)v3 != -1)
    return (uint64_t *)((char *)&siri::dialogengine::SchemaBinary::Schema_Type_strings + 24 * (int)v3);
  google::protobuf::internal::InitProtobufDefaults(v3);
  return &google::protobuf::internal::fixed_address_empty_string;
}

void sub_1BF84B3E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::SchemaBinary::Schema_Type_Parse(uint64_t *a1, _DWORD *a2, const char *a3)
{
  uint64_t result;
  void *v5[2];
  int v6;

  v6 = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v5, a1, a3);
  result = google::protobuf::internal::LookUpEnumValue((uint64_t)&siri::dialogengine::SchemaBinary::Schema_Type_entries, 2uLL, v5[0], (int64_t)v5[1], &v6);
  if ((_DWORD)result)
    *a2 = v6;
  return result;
}

BOOL siri::dialogengine::SchemaBinary::Schema_ValueType_IsValid(siri::dialogengine::SchemaBinary *this)
{
  return this < 3;
}

uint64_t *siri::dialogengine::SchemaBinary::Schema_ValueType_Name(int a1)
{
  unsigned __int8 v2;
  google::protobuf::internal *v3;

  if ((v2 & 1) == 0
  {
    siri::dialogengine::SchemaBinary::Schema_ValueType_Name(siri::dialogengine::SchemaBinary::Schema_ValueType)::dummy = google::protobuf::internal::InitializeEnumStrings((uint64_t)&siri::dialogengine::SchemaBinary::Schema_ValueType_entries, siri::dialogengine::SchemaBinary::Schema_ValueType_entries_by_number, (char *)3, (void (*)(const void *))&siri::dialogengine::SchemaBinary::Schema_ValueType_strings);
  }
  v3 = (google::protobuf::internal *)google::protobuf::internal::LookUpEnumName((uint64_t)&siri::dialogengine::SchemaBinary::Schema_ValueType_entries, siri::dialogengine::SchemaBinary::Schema_ValueType_entries_by_number, 3uLL, a1);
  if ((_DWORD)v3 != -1)
    return (uint64_t *)((char *)&siri::dialogengine::SchemaBinary::Schema_ValueType_strings + 24 * (int)v3);
  google::protobuf::internal::InitProtobufDefaults(v3);
  return &google::protobuf::internal::fixed_address_empty_string;
}

void sub_1BF84B518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::SchemaBinary::Schema_ValueType_Parse(uint64_t *a1, _DWORD *a2, const char *a3)
{
  uint64_t result;
  void *v5[2];
  int v6;

  v6 = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v5, a1, a3);
  result = google::protobuf::internal::LookUpEnumValue((uint64_t)&siri::dialogengine::SchemaBinary::Schema_ValueType_entries, 3uLL, v5[0], (int64_t)v5[1], &v6);
  if ((_DWORD)result)
    *a2 = v6;
  return result;
}

BOOL siri::dialogengine::SchemaBinary::Input_AccessMode_IsValid(siri::dialogengine::SchemaBinary *this)
{
  return this < 2;
}

uint64_t *siri::dialogengine::SchemaBinary::Input_AccessMode_Name(int a1)
{
  unsigned __int8 v2;
  google::protobuf::internal *v3;

  if ((v2 & 1) == 0
  {
    siri::dialogengine::SchemaBinary::Input_AccessMode_Name(siri::dialogengine::SchemaBinary::Input_AccessMode)::dummy = google::protobuf::internal::InitializeEnumStrings((uint64_t)&siri::dialogengine::SchemaBinary::Input_AccessMode_entries, (int *)&siri::dialogengine::SchemaBinary::Input_AccessMode_entries_by_number, (char *)2, (void (*)(const void *))&siri::dialogengine::SchemaBinary::Input_AccessMode_strings);
  }
  v3 = (google::protobuf::internal *)google::protobuf::internal::LookUpEnumName((uint64_t)&siri::dialogengine::SchemaBinary::Input_AccessMode_entries, (int *)&siri::dialogengine::SchemaBinary::Input_AccessMode_entries_by_number, 2uLL, a1);
  if ((_DWORD)v3 != -1)
    return (uint64_t *)((char *)&siri::dialogengine::SchemaBinary::Input_AccessMode_strings + 24 * (int)v3);
  google::protobuf::internal::InitProtobufDefaults(v3);
  return &google::protobuf::internal::fixed_address_empty_string;
}

void sub_1BF84B64C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::SchemaBinary::Input_AccessMode_Parse(uint64_t *a1, _DWORD *a2, const char *a3)
{
  uint64_t result;
  void *v5[2];
  int v6;

  v6 = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v5, a1, a3);
  result = google::protobuf::internal::LookUpEnumValue((uint64_t)&siri::dialogengine::SchemaBinary::Input_AccessMode_entries, 2uLL, v5[0], (int64_t)v5[1], &v6);
  if ((_DWORD)result)
    *a2 = v6;
  return result;
}

siri::dialogengine::SchemaBinary::Schema *siri::dialogengine::SchemaBinary::Schema::Schema(siri::dialogengine::SchemaBinary::Schema *this, const siri::dialogengine::SchemaBinary::Schema *a2)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;

  *(_QWORD *)this = &off_1E7929EB8;
  *((_QWORD *)this + 1) = 0;
  v4 = (uint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(_QWORD *)((char *)this + 28) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *(_QWORD *)((char *)this + 20) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Input>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Property>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 1) != 0)
  {
    v7 = (uint64_t *)*((_QWORD *)a2 + 12);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 12, (uint64_t)v7);
      v6 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    v8 = (uint64_t *)*((_QWORD *)a2 + 13);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 13, (uint64_t)v8);
      v6 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    v9 = (uint64_t *)*((_QWORD *)a2 + 14);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 14, (uint64_t)v9);
      v6 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    v10 = (uint64_t *)*((_QWORD *)a2 + 15);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 15, (uint64_t)v10);
      v6 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    v11 = (uint64_t *)*((_QWORD *)a2 + 16);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 16, (uint64_t)v11);
      v6 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x20) != 0)
  {
    v12 = (uint64_t *)*((_QWORD *)a2 + 17);
    if (v12 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 17, (uint64_t)v12);
  }
  *((_QWORD *)this + 18) = *((_QWORD *)a2 + 18);
  return this;
}

void sub_1BF84B850(_Unwind_Exception *a1)
{
  uint64_t *v1;
  google::protobuf::internal::RepeatedPtrFieldBase *v2;
  google::protobuf::internal::RepeatedPtrFieldBase *v3;
  google::protobuf::internal::ArenaImpl **v4;

  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v4);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v3);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::SchemaBinary::Schema::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::SchemaBinary::Schema::default_instance(siri::dialogengine::SchemaBinary::Schema *this)
{
  if (atomic_load(scc_info_Schema_SchemaBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Schema_SchemaBinary_2eproto);
  return &siri::dialogengine::SchemaBinary::_Schema_default_instance_;
}

void siri::dialogengine::SchemaBinary::Schema::CopyFrom(siri::dialogengine::SchemaBinary::Schema *this, const siri::dialogengine::SchemaBinary::Schema *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::SchemaBinary::Schema::Clear(this);
    siri::dialogengine::SchemaBinary::Schema::MergeFrom(this, a2);
  }
}

void siri::dialogengine::SchemaBinary::Schema::InternalSwap(siri::dialogengine::SchemaBinary::Schema *this, siri::dialogengine::SchemaBinary::Schema *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t *v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t **v20;
  uint64_t *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t **v26;
  uint64_t *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t **v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t **v38;
  uint64_t *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t **v44;
  uint64_t *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  int v49;
  int v50;
  unint64_t v51;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v51;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_46;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_OWORD *)v8;
      v11 = *(_QWORD *)(v7 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v7;
      *(_QWORD *)(v8 + 16) = v11;
      *(_OWORD *)v7 = v10;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_46:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::SchemaBinary::Schema *)((char *)this + 24), (siri::dialogengine::SchemaBinary::Schema *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::SchemaBinary::Schema *)((char *)this + 48), (siri::dialogengine::SchemaBinary::Schema *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::SchemaBinary::Schema *)((char *)this + 72), (siri::dialogengine::SchemaBinary::Schema *)((char *)a2 + 72));
  v13 = (uint64_t *)*((_QWORD *)this + 12);
  v14 = (uint64_t **)((char *)a2 + 96);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_14;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v13 = (uint64_t *)*((_QWORD *)this + 12);
  }
  v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 12, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  v16 = v13[2];
  v17 = *(_OWORD *)v13;
  v18 = v15[2];
  *(_OWORD *)v13 = *(_OWORD *)v15;
  v13[2] = v18;
  *(_OWORD *)v15 = v17;
  v15[2] = v16;
LABEL_14:
  v19 = (uint64_t *)*((_QWORD *)this + 13);
  v20 = (uint64_t **)((char *)a2 + 104);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_20;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 13, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v19 = (uint64_t *)*((_QWORD *)this + 13);
  }
  v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 13, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v21 = *v20;
  }
  v22 = v19[2];
  v23 = *(_OWORD *)v19;
  v24 = v21[2];
  *(_OWORD *)v19 = *(_OWORD *)v21;
  v19[2] = v24;
  *(_OWORD *)v21 = v23;
  v21[2] = v22;
LABEL_20:
  v25 = (uint64_t *)*((_QWORD *)this + 14);
  v26 = (uint64_t **)((char *)a2 + 112);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_26;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 14, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v25 = (uint64_t *)*((_QWORD *)this + 14);
  }
  v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 14, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v27 = *v26;
  }
  v28 = v25[2];
  v29 = *(_OWORD *)v25;
  v30 = v27[2];
  *(_OWORD *)v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)v27 = v29;
  v27[2] = v28;
LABEL_26:
  v31 = (uint64_t *)*((_QWORD *)this + 15);
  v32 = (uint64_t **)((char *)a2 + 120);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_32;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 15, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v31 = (uint64_t *)*((_QWORD *)this + 15);
  }
  v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 15, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v33 = *v32;
  }
  v34 = v31[2];
  v35 = *(_OWORD *)v31;
  v36 = v33[2];
  *(_OWORD *)v31 = *(_OWORD *)v33;
  v31[2] = v36;
  *(_OWORD *)v33 = v35;
  v33[2] = v34;
LABEL_32:
  v37 = (uint64_t *)*((_QWORD *)this + 16);
  v38 = (uint64_t **)((char *)a2 + 128);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_38;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 16, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v37 = (uint64_t *)*((_QWORD *)this + 16);
  }
  v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 16, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v39 = *v38;
  }
  v40 = v37[2];
  v41 = *(_OWORD *)v37;
  v42 = v39[2];
  *(_OWORD *)v37 = *(_OWORD *)v39;
  v37[2] = v42;
  *(_OWORD *)v39 = v41;
  v39[2] = v40;
LABEL_38:
  v43 = (uint64_t *)*((_QWORD *)this + 17);
  v44 = (uint64_t **)((char *)a2 + 136);
  if (v43 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_44;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 17, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v43 = (uint64_t *)*((_QWORD *)this + 17);
  }
  v45 = *v44;
  if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 17, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v45 = *v44;
  }
  v46 = v43[2];
  v47 = *(_OWORD *)v43;
  v48 = v45[2];
  *(_OWORD *)v43 = *(_OWORD *)v45;
  v43[2] = v48;
  *(_OWORD *)v45 = v47;
  v45[2] = v46;
LABEL_44:
  v49 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v49;
  v50 = *((_DWORD *)this + 37);
  *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
  *((_DWORD *)a2 + 37) = v50;
}

void google::protobuf::internal::arena_destruct_object<std::string>(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

siri::dialogengine::SchemaBinary::Input *siri::dialogengine::SchemaBinary::Input::Input(siri::dialogengine::SchemaBinary::Input *this, const siri::dialogengine::SchemaBinary::Input *a2)
{
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  int v11;

  *(_QWORD *)this = &off_1E7929F48;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v6);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    v7 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v7);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 4) != 0)
  {
    v8 = (uint64_t *)*((_QWORD *)a2 + 5);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 5, (uint64_t)v8);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 8) != 0)
  {
    v9 = (uint64_t *)*((_QWORD *)a2 + 6);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, (uint64_t)v9);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 0x10) != 0)
  {
    v10 = (uint64_t *)*((_QWORD *)a2 + 7);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 7, (uint64_t)v10);
  }
  v11 = *((_DWORD *)a2 + 16);
  *((_BYTE *)this + 68) = *((_BYTE *)a2 + 68);
  *((_DWORD *)this + 16) = v11;
  return this;
}

void sub_1BF84BE44(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::SchemaBinary::Input::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::SchemaBinary::Input::default_instance(siri::dialogengine::SchemaBinary::Input *this)
{
  if (atomic_load(scc_info_Input_SchemaBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Input_SchemaBinary_2eproto);
  return &siri::dialogengine::SchemaBinary::_Input_default_instance_;
}

void siri::dialogengine::SchemaBinary::Input::CopyFrom(siri::dialogengine::SchemaBinary::Input *this, const siri::dialogengine::SchemaBinary::Input *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::SchemaBinary::Input::Clear(this);
    siri::dialogengine::SchemaBinary::Input::MergeFrom(this, a2);
  }
}

void siri::dialogengine::SchemaBinary::Input::InternalSwap(siri::dialogengine::SchemaBinary::Input *this, siri::dialogengine::SchemaBinary::Input *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t **v20;
  uint64_t *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t **v26;
  uint64_t *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t **v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t **v38;
  uint64_t *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  int v43;
  unint64_t v44;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v44;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_40;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_OWORD *)v8;
      v11 = *(_QWORD *)(v7 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v7;
      *(_QWORD *)(v8 + 16) = v11;
      *(_OWORD *)v7 = v10;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_40:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = (uint64_t *)*((_QWORD *)this + 3);
  v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_14;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v12 = (uint64_t *)*((_QWORD *)this + 3);
  }
  v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  v16 = v12[2];
  v17 = *(_OWORD *)v12;
  v18 = v15[2];
  *(_OWORD *)v12 = *(_OWORD *)v15;
  v12[2] = v18;
  *(_OWORD *)v15 = v17;
  v15[2] = v16;
LABEL_14:
  v19 = (uint64_t *)*((_QWORD *)this + 4);
  v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_20;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v19 = (uint64_t *)*((_QWORD *)this + 4);
  }
  v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v21 = *v20;
  }
  v22 = v19[2];
  v23 = *(_OWORD *)v19;
  v24 = v21[2];
  *(_OWORD *)v19 = *(_OWORD *)v21;
  v19[2] = v24;
  *(_OWORD *)v21 = v23;
  v21[2] = v22;
LABEL_20:
  v25 = (uint64_t *)*((_QWORD *)this + 5);
  v26 = (uint64_t **)((char *)a2 + 40);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_26;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v25 = (uint64_t *)*((_QWORD *)this + 5);
  }
  v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v27 = *v26;
  }
  v28 = v25[2];
  v29 = *(_OWORD *)v25;
  v30 = v27[2];
  *(_OWORD *)v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)v27 = v29;
  v27[2] = v28;
LABEL_26:
  v31 = (uint64_t *)*((_QWORD *)this + 6);
  v32 = (uint64_t **)((char *)a2 + 48);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_32;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v31 = (uint64_t *)*((_QWORD *)this + 6);
  }
  v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v33 = *v32;
  }
  v34 = v31[2];
  v35 = *(_OWORD *)v31;
  v36 = v33[2];
  *(_OWORD *)v31 = *(_OWORD *)v33;
  v31[2] = v36;
  *(_OWORD *)v33 = v35;
  v33[2] = v34;
LABEL_32:
  v37 = (uint64_t *)*((_QWORD *)this + 7);
  v38 = (uint64_t **)((char *)a2 + 56);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_38;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v37 = (uint64_t *)*((_QWORD *)this + 7);
  }
  v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v39 = *v38;
  }
  v40 = v37[2];
  v41 = *(_OWORD *)v37;
  v42 = v39[2];
  *(_OWORD *)v37 = *(_OWORD *)v39;
  v37[2] = v42;
  *(_OWORD *)v39 = v41;
  v39[2] = v40;
LABEL_38:
  v43 = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v43;
  LOBYTE(v43) = *((_BYTE *)this + 68);
  *((_BYTE *)this + 68) = *((_BYTE *)a2 + 68);
  *((_BYTE *)a2 + 68) = v43;
}

siri::dialogengine::SchemaBinary::Property *siri::dialogengine::SchemaBinary::Property::Property(siri::dialogengine::SchemaBinary::Property *this, const siri::dialogengine::SchemaBinary::Property *a2)
{
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;

  *(_QWORD *)this = &off_1E7929FD8;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v6);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    v7 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v7);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 4) != 0)
  {
    v8 = (uint64_t *)*((_QWORD *)a2 + 5);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 5, (uint64_t)v8);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 8) != 0)
  {
    v9 = (uint64_t *)*((_QWORD *)a2 + 6);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, (uint64_t)v9);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 0x10) != 0)
  {
    v10 = (uint64_t *)*((_QWORD *)a2 + 7);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 7, (uint64_t)v10);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 0x20) != 0)
  {
    v11 = (uint64_t *)*((_QWORD *)a2 + 8);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 8, (uint64_t)v11);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 0x40) != 0)
  {
    v12 = (uint64_t *)*((_QWORD *)a2 + 9);
    if (v12 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 9, (uint64_t)v12);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 10) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 0x80) != 0)
  {
    v13 = (uint64_t *)*((_QWORD *)a2 + 10);
    if (v13 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 10, (uint64_t)v13);
  }
  *((_BYTE *)this + 88) = *((_BYTE *)a2 + 88);
  return this;
}

void sub_1BF84C3D0(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::SchemaBinary::Property::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::SchemaBinary::Property::default_instance(siri::dialogengine::SchemaBinary::Property *this)
{
  if (atomic_load(scc_info_Property_SchemaBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Property_SchemaBinary_2eproto);
  return &siri::dialogengine::SchemaBinary::_Property_default_instance_;
}

void siri::dialogengine::SchemaBinary::Property::CopyFrom(siri::dialogengine::SchemaBinary::Property *this, const siri::dialogengine::SchemaBinary::Property *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::SchemaBinary::Property::Clear(this);
    siri::dialogengine::SchemaBinary::Property::MergeFrom(this, a2);
  }
}

void siri::dialogengine::SchemaBinary::Property::InternalSwap(siri::dialogengine::SchemaBinary::Property *this, siri::dialogengine::SchemaBinary::Property *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t **v20;
  uint64_t *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t **v26;
  uint64_t *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t **v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t **v38;
  uint64_t *v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t **v44;
  uint64_t *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t **v50;
  uint64_t *v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t **v56;
  uint64_t *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v62;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_58;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_OWORD *)v8;
      v11 = *(_QWORD *)(v7 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v7;
      *(_QWORD *)(v8 + 16) = v11;
      *(_OWORD *)v7 = v10;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_58:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = (uint64_t *)*((_QWORD *)this + 3);
  v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_14;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v12 = (uint64_t *)*((_QWORD *)this + 3);
  }
  v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  v16 = v12[2];
  v17 = *(_OWORD *)v12;
  v18 = v15[2];
  *(_OWORD *)v12 = *(_OWORD *)v15;
  v12[2] = v18;
  *(_OWORD *)v15 = v17;
  v15[2] = v16;
LABEL_14:
  v19 = (uint64_t *)*((_QWORD *)this + 4);
  v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_20;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v19 = (uint64_t *)*((_QWORD *)this + 4);
  }
  v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v21 = *v20;
  }
  v22 = v19[2];
  v23 = *(_OWORD *)v19;
  v24 = v21[2];
  *(_OWORD *)v19 = *(_OWORD *)v21;
  v19[2] = v24;
  *(_OWORD *)v21 = v23;
  v21[2] = v22;
LABEL_20:
  v25 = (uint64_t *)*((_QWORD *)this + 5);
  v26 = (uint64_t **)((char *)a2 + 40);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_26;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v25 = (uint64_t *)*((_QWORD *)this + 5);
  }
  v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v27 = *v26;
  }
  v28 = v25[2];
  v29 = *(_OWORD *)v25;
  v30 = v27[2];
  *(_OWORD *)v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)v27 = v29;
  v27[2] = v28;
LABEL_26:
  v31 = (uint64_t *)*((_QWORD *)this + 6);
  v32 = (uint64_t **)((char *)a2 + 48);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_32;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v31 = (uint64_t *)*((_QWORD *)this + 6);
  }
  v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v33 = *v32;
  }
  v34 = v31[2];
  v35 = *(_OWORD *)v31;
  v36 = v33[2];
  *(_OWORD *)v31 = *(_OWORD *)v33;
  v31[2] = v36;
  *(_OWORD *)v33 = v35;
  v33[2] = v34;
LABEL_32:
  v37 = (uint64_t *)*((_QWORD *)this + 7);
  v38 = (uint64_t **)((char *)a2 + 56);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_38;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v37 = (uint64_t *)*((_QWORD *)this + 7);
  }
  v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v39 = *v38;
  }
  v40 = v37[2];
  v41 = *(_OWORD *)v37;
  v42 = v39[2];
  *(_OWORD *)v37 = *(_OWORD *)v39;
  v37[2] = v42;
  *(_OWORD *)v39 = v41;
  v39[2] = v40;
LABEL_38:
  v43 = (uint64_t *)*((_QWORD *)this + 8);
  v44 = (uint64_t **)((char *)a2 + 64);
  if (v43 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_44;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 8, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v43 = (uint64_t *)*((_QWORD *)this + 8);
  }
  v45 = *v44;
  if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 8, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v45 = *v44;
  }
  v46 = v43[2];
  v47 = *(_OWORD *)v43;
  v48 = v45[2];
  *(_OWORD *)v43 = *(_OWORD *)v45;
  v43[2] = v48;
  *(_OWORD *)v45 = v47;
  v45[2] = v46;
LABEL_44:
  v49 = (uint64_t *)*((_QWORD *)this + 9);
  v50 = (uint64_t **)((char *)a2 + 72);
  if (v49 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v50 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_50;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v49 = (uint64_t *)*((_QWORD *)this + 9);
  }
  v51 = *v50;
  if (*v50 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v51 = *v50;
  }
  v52 = v49[2];
  v53 = *(_OWORD *)v49;
  v54 = v51[2];
  *(_OWORD *)v49 = *(_OWORD *)v51;
  v49[2] = v54;
  *(_OWORD *)v51 = v53;
  v51[2] = v52;
LABEL_50:
  v55 = (uint64_t *)*((_QWORD *)this + 10);
  v56 = (uint64_t **)((char *)a2 + 80);
  if (v55 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v56 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_56;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 10, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v55 = (uint64_t *)*((_QWORD *)this + 10);
  }
  v57 = *v56;
  if (*v56 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 10, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v57 = *v56;
  }
  v58 = v55[2];
  v59 = *(_OWORD *)v55;
  v60 = v57[2];
  *(_OWORD *)v55 = *(_OWORD *)v57;
  v55[2] = v60;
  *(_OWORD *)v57 = v59;
  v57[2] = v58;
LABEL_56:
  v61 = *((_BYTE *)this + 88);
  *((_BYTE *)this + 88) = *((_BYTE *)a2 + 88);
  *((_BYTE *)a2 + 88) = v61;
}

siri::dialogengine::SchemaBinary::Value *siri::dialogengine::SchemaBinary::Value::Value(siri::dialogengine::SchemaBinary::Value *this, const siri::dialogengine::SchemaBinary::Value *a2)
{
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;

  *(_QWORD *)this = &off_1E792A068;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v6);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    v7 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v7);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 4) != 0)
  {
    v8 = (uint64_t *)*((_QWORD *)a2 + 5);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 5, (uint64_t)v8);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 8) != 0)
  {
    v9 = (uint64_t *)*((_QWORD *)a2 + 6);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, (uint64_t)v9);
  }
  return this;
}

void sub_1BF84CA38(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::SchemaBinary::Value::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::SchemaBinary::Value::default_instance(siri::dialogengine::SchemaBinary::Value *this)
{
  if (atomic_load(scc_info_Value_SchemaBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Value_SchemaBinary_2eproto);
  return &siri::dialogengine::SchemaBinary::_Value_default_instance_;
}

void siri::dialogengine::SchemaBinary::Value::CopyFrom(siri::dialogengine::SchemaBinary::Value *this, const siri::dialogengine::SchemaBinary::Value *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::SchemaBinary::Value::Clear(this);
    siri::dialogengine::SchemaBinary::Value::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::SchemaBinary::Value::InternalSwap(siri::dialogengine::SchemaBinary::Value *this, siri::dialogengine::SchemaBinary::Value *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  __n128 *v8;
  unint64_t v9;
  __n128 result;
  unint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t **v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t **v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  std::string **v28;
  std::string *v29;
  uint64_t *v30;
  std::string **v31;
  std::string *v32;
  std::string::size_type v33;
  std::string::size_type v34;
  unint64_t v35;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v35;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_34;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      v9 = v8[1].n128_u64[0];
      result = *v8;
      v11 = *(_QWORD *)(v7 + 16);
      *v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)v7 = result;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_34:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = (uint64_t *)*((_QWORD *)this + 3);
  v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_14;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v12 = (uint64_t *)*((_QWORD *)this + 3);
  }
  v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  v16 = v12[2];
  result = *(__n128 *)v12;
  v17 = v15[2];
  *(_OWORD *)v12 = *(_OWORD *)v15;
  v12[2] = v17;
  *(__n128 *)v15 = result;
  v15[2] = v16;
LABEL_14:
  v18 = (uint64_t *)*((_QWORD *)this + 4);
  v19 = (uint64_t **)((char *)a2 + 32);
  if (v18 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v19 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_20;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v18 = (uint64_t *)*((_QWORD *)this + 4);
  }
  v20 = *v19;
  if (*v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v20 = *v19;
  }
  v21 = v18[2];
  result = *(__n128 *)v18;
  v22 = v20[2];
  *(_OWORD *)v18 = *(_OWORD *)v20;
  v18[2] = v22;
  *(__n128 *)v20 = result;
  v20[2] = v21;
LABEL_20:
  v23 = (uint64_t *)*((_QWORD *)this + 5);
  v24 = (uint64_t **)((char *)a2 + 40);
  if (v23 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v24 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_26;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v23 = (uint64_t *)*((_QWORD *)this + 5);
  }
  v25 = *v24;
  if (*v24 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v25 = *v24;
  }
  v26 = v23[2];
  result = *(__n128 *)v23;
  v27 = v25[2];
  *(_OWORD *)v23 = *(_OWORD *)v25;
  v23[2] = v27;
  *(__n128 *)v25 = result;
  v25[2] = v26;
LABEL_26:
  v30 = (uint64_t *)*((_QWORD *)this + 6);
  v28 = (std::string **)((char *)this + 48);
  v29 = (std::string *)v30;
  v31 = (std::string **)((char *)a2 + 48);
  if (v30 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v31 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      return result;
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v28, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v29 = *v28;
  }
  v32 = *v31;
  if (*v31 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v31, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v32 = *v31;
  }
  v33 = v29->__r_.__value_.__r.__words[2];
  result = *(__n128 *)&v29->__r_.__value_.__l.__data_;
  v34 = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v29->__r_.__value_.__l.__data_ = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  v29->__r_.__value_.__r.__words[2] = v34;
  *(__n128 *)&v32->__r_.__value_.__l.__data_ = result;
  v32->__r_.__value_.__r.__words[2] = v33;
  return result;
}

uint64_t siri::dialogengine::CSV::CSV(uint64_t this)
{
  *(_WORD *)this = 11265;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

{
  *(_WORD *)this = 11265;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

uint64_t siri::dialogengine::CSV::CSV(uint64_t this, char a2, const char *a3)
{
  *(_BYTE *)this = a2;
  *(_BYTE *)(this + 1) = *a3;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

{
  *(_BYTE *)this = a2;
  *(_BYTE *)(this + 1) = *a3;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  return this;
}

BOOL siri::dialogengine::CSV::IsEmpty(siri::dialogengine::CSV *this)
{
  return *((_QWORD *)this + 1) == *((_QWORD *)this + 2);
}

uint64_t siri::dialogengine::CSV::SetDelim(uint64_t this, const char *a2)
{
  *(_BYTE *)(this + 1) = *a2;
  return this;
}

uint64_t siri::dialogengine::CSV::GetDelim(siri::dialogengine::CSV *this)
{
  return *((char *)this + 1);
}

uint64_t siri::dialogengine::CSV::AddRow(_QWORD *a1, __int128 **a2)
{
  _QWORD *v4;
  unint64_t v5;
  std::string *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  std::string *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  __int128 v19;
  int64x2_t v20;
  unint64_t v21;
  unint64_t v22;
  int64x2_t v23;
  unint64_t v24;
  _QWORD *v25;

  v4 = a1 + 3;
  v5 = a1[3];
  v6 = (std::string *)a1[2];
  if ((unint64_t)v6 >= v5)
  {
    v9 = a1[1];
    v10 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v6 - v9) >> 3);
    if (v10 + 1 > 0xAAAAAAAAAAAAAAALL)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - v9) >> 3);
    v12 = 2 * v11;
    if (2 * v11 <= v10 + 1)
      v12 = v10 + 1;
    if (v11 >= 0x555555555555555)
      v13 = 0xAAAAAAAAAAAAAAALL;
    else
      v13 = v12;
    v25 = v4;
    if (v13)
      v13 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::string>>>(v13);
    else
      v14 = 0;
    v15 = (std::string *)(v13 + 24 * v10);
    v22 = v13;
    v23.i64[0] = (uint64_t)v15;
    v23.i64[1] = (uint64_t)v15;
    v24 = v13 + 24 * v14;
    v15->__r_.__value_.__r.__words[0] = 0;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(v15, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
    v16 = v23.i64[0];
    v8 = v23.i64[1] + 24;
    v23.i64[1] += 24;
    v18 = (_QWORD *)a1[1];
    v17 = (_QWORD *)a1[2];
    if (v17 == v18)
    {
      v20 = vdupq_n_s64((unint64_t)v17);
    }
    else
    {
      do
      {
        *(_QWORD *)(v16 - 24) = 0;
        *(_QWORD *)(v16 - 16) = 0;
        v16 -= 24;
        *(_QWORD *)(v16 + 16) = 0;
        v19 = *(_OWORD *)(v17 - 3);
        v17 -= 3;
        *(_OWORD *)v16 = v19;
        *(_QWORD *)(v16 + 16) = v17[2];
        *v17 = 0;
        v17[1] = 0;
        v17[2] = 0;
      }
      while (v17 != v18);
      v20 = *(int64x2_t *)(a1 + 1);
      v8 = v23.i64[1];
    }
    a1[1] = v16;
    a1[2] = v8;
    v23 = v20;
    v21 = a1[3];
    a1[3] = v24;
    v24 = v21;
    v22 = v20.i64[0];
    result = std::__split_buffer<std::vector<std::string>>::~__split_buffer((uint64_t)&v22);
  }
  else
  {
    v6->__r_.__value_.__r.__words[0] = 0;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    result = (uint64_t)std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(v6, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a2[1] - (char *)*a2) >> 3));
    v8 = (uint64_t)&v6[1];
    a1[2] = v6 + 1;
  }
  a1[2] = v8;
  return result;
}

void sub_1BF84CFBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::vector<std::string>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::string>>>(unint64_t a1)
{
  if (a1 >= 0xAAAAAAAAAAAAAABLL)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(24 * a1);
}

uint64_t std::__split_buffer<std::vector<std::string>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void **v4;
  void **v6;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = (void **)(i - 24);
    *(_QWORD *)(a1 + 16) = v4;
    v6 = v4;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v6);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t siri::dialogengine::CSV::GetRows@<X0>(uint64_t this@<X0>, std::string **a2@<X8>)
{
  __int128 **v3;
  __int128 **v4;
  unint64_t v5;
  std::string *v6;
  uint64_t v7;
  std::string *v8;
  _QWORD v9[3];
  char v10;
  std::string *v11;
  std::string *v12;

  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v3 = *(__int128 ***)(this + 8);
  v4 = *(__int128 ***)(this + 16);
  if (v4 != v3)
  {
    v5 = 0xAAAAAAAAAAAAAAABLL * (v4 - v3);
    if (v5 >= 0xAAAAAAAAAAAAAABLL)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v6 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::string>>>(v5);
    *a2 = v6;
    a2[1] = v6;
    a2[2] = &v6[v7];
    v11 = v6;
    v12 = v6;
    v9[0] = a2 + 2;
    v9[1] = &v11;
    v9[2] = &v12;
    v10 = 0;
    v8 = v6;
    do
    {
      v8->__r_.__value_.__r.__words[0] = 0;
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(v8, *v3, v3[1], 0xAAAAAAAAAAAAAAABLL * (((char *)v3[1] - (char *)*v3) >> 3));
      v8 = ++v12;
      v3 += 3;
    }
    while (v3 != v4);
    v10 = 1;
    this = std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::string>>,std::vector<std::string>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
    a2[1] = v8;
  }
  return this;
}

void sub_1BF84D184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::vector<std::string>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<std::string>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;
  void **v6;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        v6 = v4;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<std::string>>,std::vector<std::string>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  void **v3;
  void **v4;
  void **v5;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = **(void ****)(a1 + 16);
    v4 = **(void ****)(a1 + 8);
    while (v3 != v4)
    {
      v3 -= 3;
      v5 = v3;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v5);
    }
  }
  return a1;
}

void siri::dialogengine::CSV::Read(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  const std::locale::facet *v5;
  unsigned __int8 v6;
  std::__split_buffer<std::string>::pointer begin;
  __int128 v8;
  std::string *v9;
  const std::locale::facet *v10;
  unsigned __int8 v11;
  char v12;
  _BOOL4 v13;
  _BOOL4 v14;
  std::string::size_type size;
  std::vector<std::string>::pointer end;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  std::string *v21;
  std::string *v22;
  __int128 v23;
  std::string *v24;
  uint64_t v25;
  std::locale::__imp *v26;
  std::locale::__imp *locale;
  std::string v29;
  std::vector<std::string> v30;
  std::locale v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[56];
  void *v35;
  char v36;
  _BYTE v37[152];
  std::string __p;
  std::string v39;
  std::__split_buffer<std::string> __v;
  _QWORD v41[2];
  _QWORD v42[51];
  _QWORD v43[21];

  v43[19] = *MEMORY[0x1E0C80C00];
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  v2 = *(_BYTE *)(a1 + 1);
  memset(&v39, 0, sizeof(v39));
  memset(&__p, 0, sizeof(__p));
  std::ifstream::basic_ifstream(v41);
  if (v42[15])
  {
    if (!*(_DWORD *)((char *)&v42[2] + *(_QWORD *)(v41[0] - 24)))
    {
      v3 = MEMORY[0x1E0DE4FB8];
      v4 = MEMORY[0x1E0DE4F50];
      if (*(_BYTE *)a1)
      {
        memset(&__v, 0, 24);
        std::ios_base::getloc((const std::ios_base *)((char *)v41 + *(_QWORD *)(v41[0] - 24)));
        v5 = std::locale::use_facet((const std::locale *)&v30, MEMORY[0x1E0DE4A90]);
        v6 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v5->__vftable[2].~facet_0)(v5, 10);
        std::locale::~locale((std::locale *)&v30);
        std::getline[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v41, (uint64_t)&v39, v6);
        std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&v31, &v39);
        while (1)
        {
          std::getline[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v31, (uint64_t)&__p, v2);
          if ((v34[*((_QWORD *)v31.__locale_ - 3)] & 5) != 0)
            break;
          begin = __v.__begin_;
          if (__v.__begin_ >= __v.__end_)
          {
            v9 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&__v, (__int128 *)&__p);
          }
          else
          {
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            {
              std::string::__init_copy_ctor_external(__v.__begin_, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
            }
            else
            {
              v8 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
              __v.__begin_->__r_.__value_.__r.__words[2] = __p.__r_.__value_.__r.__words[2];
              *(_OWORD *)&begin->__r_.__value_.__l.__data_ = v8;
            }
            v9 = begin + 1;
          }
          __v.__begin_ = v9;
        }
        siri::dialogengine::CSV::AddRow((_QWORD *)a1, (__int128 **)&__v);
        v31.__locale_ = *(std::locale::__imp **)v4;
        locale = v31.__locale_;
        v25 = *(_QWORD *)(v4 + 72);
        v26 = *(std::locale::__imp **)(v4 + 64);
        *(std::locale::__imp **)((char *)&v31.__locale_ + *((_QWORD *)v31.__locale_ - 3)) = v26;
        v32 = v25;
        v33 = v3 + 16;
        if (v36 < 0)
          operator delete(v35);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x1C3B8D80C](v37);
        v31.__locale_ = (std::locale::__imp *)&__v;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v31);
      }
      else
      {
        v26 = *(std::locale::__imp **)(MEMORY[0x1E0DE4F50] + 64);
        locale = (std::locale::__imp *)*MEMORY[0x1E0DE4F50];
        v25 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 72);
      }
LABEL_25:
      std::ios_base::getloc((const std::ios_base *)((char *)v41 + *(_QWORD *)(v41[0] - 24)));
      v10 = std::locale::use_facet(&v31, MEMORY[0x1E0DE4A90]);
      v11 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 10);
      std::locale::~locale(&v31);
      std::getline[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(v41, (uint64_t)&v39, v11);
      if ((*((_BYTE *)&v42[2] + *(_QWORD *)(v41[0] - 24)) & 5) == 0)
      {
        memset(&v30, 0, sizeof(v30));
        std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&v31, &v39);
        v12 = 0;
        while (1)
        {
          std::getline[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&v31, (uint64_t)&__p, v2);
          if ((v34[*((_QWORD *)v31.__locale_ - 3)] & 5) != 0)
          {
            siri::dialogengine::CSV::AddRow((_QWORD *)a1, (__int128 **)&v30);
            v31.__locale_ = locale;
            *(std::locale::__imp **)((char *)&v31.__locale_ + *((_QWORD *)locale - 3)) = v26;
            v32 = v25;
            v33 = v3 + 16;
            if (v36 < 0)
              operator delete(v35);
            std::streambuf::~streambuf();
            std::iostream::~basic_iostream();
            MEMORY[0x1C3B8D80C](v37);
            v31.__locale_ = (std::locale::__imp *)&v30;
            std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v31);
            goto LABEL_25;
          }
          if (std::istream::peek() == 34)
          {
            std::istream::ignore();
            v2 = 34;
          }
          std::string::basic_string[abi:ne180100]<0>(&__v, "\u200E");
          v13 = siri::dialogengine::StringEndsWith(&__p, (unsigned __int8 *)&__v);
          v14 = v13;
          if (SHIBYTE(__v.__end_) < 0)
          {
            operator delete(__v.__first_);
            if (v14)
            {
LABEL_32:
              v2 = *(_BYTE *)(a1 + 1);
              goto LABEL_35;
            }
          }
          else if (v13)
          {
            goto LABEL_32;
          }
          if ((v12 & 1) == 0)
          {
            v12 = 0;
            goto LABEL_40;
          }
LABEL_35:
          v12 = 0;
          size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
            size = __p.__r_.__value_.__l.__size_;
          if (size)
          {
            v12 = 1;
LABEL_40:
            siri::dialogengine::RemoveUnicodeControlChars((uint64_t)&__p, &v29);
            end = v30.__end_;
            if (v30.__end_ >= v30.__end_cap_.__value_)
            {
              v18 = 0xAAAAAAAAAAAAAAABLL * (((char *)v30.__end_ - (char *)v30.__begin_) >> 3);
              v19 = v18 + 1;
              if (v18 + 1 > 0xAAAAAAAAAAAAAAALL)
                std::vector<BOOL>::__throw_length_error[abi:ne180100]();
              if (0x5555555555555556 * (((char *)v30.__end_cap_.__value_ - (char *)v30.__begin_) >> 3) > v19)
                v19 = 0x5555555555555556 * (((char *)v30.__end_cap_.__value_ - (char *)v30.__begin_) >> 3);
              if (0xAAAAAAAAAAAAAAABLL * (((char *)v30.__end_cap_.__value_ - (char *)v30.__begin_) >> 3) >= 0x555555555555555)
                v20 = 0xAAAAAAAAAAAAAAALL;
              else
                v20 = v19;
              __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v30.__end_cap_;
              if (v20)
                v21 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&v30.__end_cap_, v20);
              else
                v21 = 0;
              v22 = v21 + v18;
              __v.__first_ = v21;
              __v.__begin_ = v22;
              __v.__end_cap_.__value_ = &v21[v20];
              v23 = *(_OWORD *)&v29.__r_.__value_.__l.__data_;
              v22->__r_.__value_.__r.__words[2] = v29.__r_.__value_.__r.__words[2];
              *(_OWORD *)&v22->__r_.__value_.__l.__data_ = v23;
              memset(&v29, 0, sizeof(v29));
              __v.__end_ = v22 + 1;
              std::vector<std::string>::__swap_out_circular_buffer(&v30, &__v);
              v24 = v30.__end_;
              std::__split_buffer<std::string>::~__split_buffer(&__v);
              v30.__end_ = v24;
              if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v29.__r_.__value_.__l.__data_);
            }
            else
            {
              v17 = *(_OWORD *)&v29.__r_.__value_.__l.__data_;
              v30.__end_->__r_.__value_.__r.__words[2] = v29.__r_.__value_.__r.__words[2];
              *(_OWORD *)&end->__r_.__value_.__l.__data_ = v17;
              v30.__end_ = end + 1;
            }
          }
        }
      }
    }
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)((char *)v41 + *(_QWORD *)(v41[0] - 24)), *(_DWORD *)((char *)&v42[2] + *(_QWORD *)(v41[0] - 24)) | 4);
  }
  else
  {
    puts("Could not open file!");
  }
  v41[0] = *MEMORY[0x1E0DE4F40];
  *(_QWORD *)((char *)v41 + *(_QWORD *)(v41[0] - 24)) = *(_QWORD *)(MEMORY[0x1E0DE4F40] + 24);
  MEMORY[0x1C3B8D608](v42);
  std::istream::~istream();
  MEMORY[0x1C3B8D80C](v43);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v39.__r_.__value_.__l.__data_);
}

void sub_1BF84D850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,std::locale a22,uint64_t a23,uint64_t a24,std::locale a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *__p,uint64_t a61,int a62,__int16 a63)
{
  char a65;
  void *a66;
  char a71;
  uint64_t a72;
  void **a73;

  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a25);
  a25.__locale_ = (std::locale::__imp *)&a72;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a25);
  std::ifstream::~ifstream(&a73);
  if (a65 < 0)
    operator delete(__p);
  if (a71 < 0)
    operator delete(a66);
  a73 = a9;
  std::vector<std::vector<std::string>>::__destroy_vector::operator()[abi:ne180100](&a73);
  _Unwind_Resume(a1);
}

_QWORD *std::ifstream::basic_ifstream(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;

  v2 = MEMORY[0x1E0DE4FA8];
  v3 = MEMORY[0x1E0DE4FA8] + 64;
  a1[53] = MEMORY[0x1E0DE4FA8] + 64;
  v4 = a1 + 2;
  v5 = *(_QWORD *)(MEMORY[0x1E0DE4F40] + 8);
  v6 = *(_QWORD *)(MEMORY[0x1E0DE4F40] + 16);
  *a1 = v5;
  *(_QWORD *)((char *)a1 + *(_QWORD *)(v5 - 24)) = v6;
  a1[1] = 0;
  v7 = (std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::ios_base::init(v7, a1 + 2);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *a1 = v2 + 24;
  a1[53] = v3;
  MEMORY[0x1C3B8D5FC](v4);
  if (!std::filebuf::open())
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 4);
  return a1;
}

{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;

  v2 = MEMORY[0x1E0DE4FA8];
  v3 = MEMORY[0x1E0DE4FA8] + 64;
  a1[53] = MEMORY[0x1E0DE4FA8] + 64;
  v4 = a1 + 2;
  v5 = *(_QWORD *)(MEMORY[0x1E0DE4F40] + 8);
  v6 = *(_QWORD *)(MEMORY[0x1E0DE4F40] + 16);
  *a1 = v5;
  *(_QWORD *)((char *)a1 + *(_QWORD *)(v5 - 24)) = v6;
  a1[1] = 0;
  v7 = (std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::ios_base::init(v7, a1 + 2);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *a1 = v2 + 24;
  a1[53] = v3;
  MEMORY[0x1C3B8D5FC](v4);
  if (!std::filebuf::open())
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 4);
  return a1;
}

void sub_1BF84DA40(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x1C3B8D80C](v1 + 424);
  _Unwind_Resume(a1);
}

_QWORD *std::getline[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(_QWORD *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v6;
  _QWORD *v7;
  _BYTE *v8;
  int v9;
  char v11;

  MEMORY[0x1C3B8D638](&v11, a1, 1);
  if (!v11)
    return a1;
  if (*(char *)(a2 + 23) < 0)
  {
    **(_BYTE **)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  else
  {
    *(_BYTE *)a2 = 0;
    *(_BYTE *)(a2 + 23) = 0;
  }
  v6 = 0;
  while (1)
  {
    v7 = *(_QWORD **)((char *)a1 + *(_QWORD *)(*a1 - 24) + 40);
    v8 = (_BYTE *)v7[3];
    if (v8 != (_BYTE *)v7[4])
    {
      v7[3] = v8 + 1;
      LOBYTE(v7) = *v8;
      goto LABEL_9;
    }
    LODWORD(v7) = (*(uint64_t (**)(_QWORD *))(*v7 + 80))(v7);
    if ((_DWORD)v7 == -1)
      break;
LABEL_9:
    if (v7 == a3)
    {
      v9 = 0;
      goto LABEL_17;
    }
    std::string::push_back((std::string *)a2, (std::string::value_type)v7);
    ++v6;
    if (*(char *)(a2 + 23) < 0 && *(_QWORD *)(a2 + 8) == 0x7FFFFFFFFFFFFFF7)
    {
      v9 = 4;
      goto LABEL_17;
    }
  }
  if (v6)
    v9 = 2;
  else
    v9 = 6;
LABEL_17:
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | v9);
  return a1;
}

void sub_1BF84DBA4(void *a1)
{
  _QWORD *v1;
  uint64_t v2;

  __cxa_begin_catch(a1);
  v2 = *v1;
  *(_DWORD *)((char *)v1 + *(_QWORD *)(*v1 - 24) + 32) |= 1u;
  if ((*((_BYTE *)v1 + *(_QWORD *)(v2 - 24) + 36) & 1) == 0)
  {
    __cxa_end_catch();
    JUMPOUT(0x1BF84DB70);
  }
  __cxa_rethrow();
}

void sub_1BF84DBE8(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100](uint64_t a1, const std::string *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  std::ios_base *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = MEMORY[0x1E0DE4FD0];
  v5 = MEMORY[0x1E0DE4FD0] + 104;
  *(_QWORD *)(a1 + 128) = MEMORY[0x1E0DE4FD0] + 104;
  *(_QWORD *)(a1 + 16) = v4 + 64;
  v6 = a1 + 16;
  v7 = a1 + 24;
  v8 = (_QWORD *)MEMORY[0x1E0DE4F50];
  v9 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 16);
  v10 = *(_QWORD *)(MEMORY[0x1E0DE4F50] + 24);
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + *(_QWORD *)(v9 - 24)) = v10;
  *(_QWORD *)(a1 + 8) = 0;
  v11 = (std::ios_base *)(a1 + *(_QWORD *)(*(_QWORD *)a1 - 24));
  std::ios_base::init(v11, (void *)(a1 + 24));
  v11[1].__vftable = 0;
  v11[1].__fmtflags_ = -1;
  v12 = v8[4];
  v13 = v8[5];
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v6 + *(_QWORD *)(v12 - 24)) = v13;
  v14 = v8[1];
  *(_QWORD *)a1 = v14;
  *(_QWORD *)(a1 + *(_QWORD *)(v14 - 24)) = v8[6];
  *(_QWORD *)a1 = v4 + 24;
  *(_QWORD *)(a1 + 128) = v5;
  *(_QWORD *)(a1 + 16) = v4 + 64;
  std::streambuf::basic_streambuf();
  v15 = MEMORY[0x1E0DE4FB8] + 16;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_QWORD *)(a1 + 24) = v15;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 24;
  std::string::operator=((std::string *)(a1 + 88), a2);
  std::stringbuf::__init_buf_ptrs[abi:ne180100](v7);
  return a1;
}

void sub_1BF84DD1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::iostream::~basic_iostream();
  MEMORY[0x1C3B8D80C](v1);
  _Unwind_Resume(a1);
}

uint64_t std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = MEMORY[0x1E0DE4F50];
  v3 = *MEMORY[0x1E0DE4F50];
  *(_QWORD *)a1 = *MEMORY[0x1E0DE4F50];
  v4 = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DE4FB8] + 16;
  *(_QWORD *)(a1 + 16) = v4;
  if (*(char *)(a1 + 111) < 0)
    operator delete(*(void **)(a1 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x1C3B8D80C](a1 + 128);
  return a1;
}

_QWORD *std::ifstream::~ifstream(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DE4F40];
  v3 = *MEMORY[0x1E0DE4F40];
  *a1 = *MEMORY[0x1E0DE4F40];
  *(_QWORD *)((char *)a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  MEMORY[0x1C3B8D608](a1 + 2);
  std::istream::~istream();
  MEMORY[0x1C3B8D80C](a1 + 53);
  return a1;
}

void std::stringbuf::__init_buf_ptrs[abi:ne180100](uint64_t a1)
{
  std::string *v2;
  char v3;
  std::string *v4;
  unint64_t v5;
  int v6;
  std::string::size_type v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  *(_QWORD *)(a1 + 88) = 0;
  v2 = (std::string *)(a1 + 64);
  v3 = *(_BYTE *)(a1 + 87);
  if (v3 < 0)
  {
    v4 = *(std::string **)(a1 + 64);
    v5 = *(_QWORD *)(a1 + 72);
  }
  else
  {
    v4 = v2;
    v5 = *(unsigned __int8 *)(a1 + 87);
  }
  v6 = *(_DWORD *)(a1 + 96);
  if ((v6 & 8) != 0)
  {
    *(_QWORD *)(a1 + 88) = (char *)v4 + v5;
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = (char *)v4 + v5;
  }
  if ((v6 & 0x10) != 0)
  {
    *(_QWORD *)(a1 + 88) = (char *)v4 + v5;
    v7 = v3 < 0 ? (*(_QWORD *)(a1 + 80) & 0x7FFFFFFFFFFFFFFFLL) - 1 : 22;
    std::string::resize(v2, v7, 0);
    v8 = *(char *)(a1 + 87) < 0 ? *(_QWORD *)(a1 + 72) : *(unsigned __int8 *)(a1 + 87);
    *(_QWORD *)(a1 + 40) = v4;
    *(_QWORD *)(a1 + 48) = v4;
    *(_QWORD *)(a1 + 56) = (char *)v4 + v8;
    if ((*(_BYTE *)(a1 + 96) & 3) != 0)
    {
      if (v5 >> 31)
      {
        v9 = ((v5 - 0x80000000) * (unsigned __int128)0x200000005uLL) >> 64;
        v10 = 0x7FFFFFFF * ((v9 + ((v5 - 0x80000000 - v9) >> 1)) >> 30);
        v4 = (std::string *)((char *)v4 + v10 + 0x7FFFFFFF);
        v5 = v5 - v10 - 0x7FFFFFFF;
        *(_QWORD *)(a1 + 48) = v4;
      }
      if (v5)
        *(_QWORD *)(a1 + 48) = (char *)v4 + v5;
    }
  }
}

BOOL siri::dialogengine::CSV::Write(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  __int128 *v9;
  __int128 v10;
  int v11;
  int v12;
  std::string *v13;
  std::string::size_type v14;
  char v15;
  std::string *v16;
  std::string::size_type size;
  uint64_t v19;
  std::string __p;
  std::string v21;
  _QWORD v22[2];
  uint64_t v23;
  _BYTE v24[120];
  uint64_t v25;
  _QWORD v26[21];

  v26[19] = *MEMORY[0x1E0C80C00];
  std::ofstream::basic_ofstream(&v23);
  v2 = v25;
  if (v25)
  {
    v19 = v25;
    v3 = *(_QWORD *)(a1 + 8);
    if (*(_QWORD *)(a1 + 16) != v3)
    {
      v4 = 0;
      while (1)
      {
        v6 = (uint64_t *)(v3 + 24 * v4);
        v5 = *v6;
        if (v6[1] != *v6)
          break;
LABEL_28:
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v23, (uint64_t)"\n", 1);
        ++v4;
        v3 = *(_QWORD *)(a1 + 8);
        if (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(a1 + 16) - v3) >> 3) <= v4)
          goto LABEL_29;
      }
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = (__int128 *)(v5 + v7);
        if (*((char *)v9 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v21, *(const std::string::value_type **)v9, *((_QWORD *)v9 + 1));
        }
        else
        {
          v10 = *v9;
          v21.__r_.__value_.__r.__words[2] = *((_QWORD *)v9 + 2);
          *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v10;
        }
        std::string::basic_string[abi:ne180100]<0>(&__p, ",");
        v11 = siri::dialogengine::StringContains(&v21.__r_.__value_.__l.__data_, (char *)&__p);
        v12 = v11;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(__p.__r_.__value_.__l.__data_);
          if (v12)
          {
LABEL_13:
            std::operator+<char>();
            v13 = std::string::append(&__p, "\u200E\"");
            v14 = v13->__r_.__value_.__r.__words[0];
            v22[0] = v13->__r_.__value_.__l.__size_;
            *(_QWORD *)((char *)v22 + 7) = *(std::string::size_type *)((char *)&v13->__r_.__value_.__r.__words[1] + 7);
            v15 = HIBYTE(v13->__r_.__value_.__r.__words[2]);
            v13->__r_.__value_.__l.__size_ = 0;
            v13->__r_.__value_.__r.__words[2] = 0;
            v13->__r_.__value_.__r.__words[0] = 0;
            if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v21.__r_.__value_.__l.__data_);
            v21.__r_.__value_.__r.__words[0] = v14;
            v21.__r_.__value_.__l.__size_ = v22[0];
            *(std::string::size_type *)((char *)&v21.__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)v22 + 7);
            *((_BYTE *)&v21.__r_.__value_.__s + 23) = v15;
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else if (v11)
        {
          goto LABEL_13;
        }
        if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v16 = &v21;
        else
          v16 = (std::string *)v21.__r_.__value_.__r.__words[0];
        if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
        else
          size = v21.__r_.__value_.__l.__size_;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v23, (uint64_t)v16, size);
        if (v8 != -1
                 - 0x5555555555555555
                 * ((uint64_t)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 24 * v4 + 8) - *(_QWORD *)(*(_QWORD *)(a1 + 8) + 24 * v4)) >> 3))
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v23, (uint64_t)",", 1);
        if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v21.__r_.__value_.__l.__data_);
        ++v8;
        v5 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 24 * v4);
        v7 += 24;
        if (0xAAAAAAAAAAAAAAABLL * ((*(_QWORD *)(*(_QWORD *)(a1 + 8) + 24 * v4 + 8) - v5) >> 3) <= v8)
          goto LABEL_28;
      }
    }
LABEL_29:
    v2 = v19;
    if (!std::filebuf::close())
      std::ios_base::clear((std::ios_base *)&v24[*(_QWORD *)(v23 - 24) - 8], *(_DWORD *)&v24[*(_QWORD *)(v23 - 24) + 24] | 4);
  }
  else
  {
    puts("Could not open file!");
  }
  v23 = *MEMORY[0x1E0DE4F48];
  *(_QWORD *)&v24[*(_QWORD *)(v23 - 24) - 8] = *(_QWORD *)(MEMORY[0x1E0DE4F48] + 24);
  MEMORY[0x1C3B8D608](v24);
  std::ostream::~ostream();
  MEMORY[0x1C3B8D80C](v26);
  return v2 != 0;
}

void sub_1BF84E240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  std::ofstream::~ofstream(&a24);
  _Unwind_Resume(a1);
}

_QWORD *std::ofstream::basic_ofstream(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  std::ios_base *v7;

  v2 = MEMORY[0x1E0DE4FB0];
  v3 = MEMORY[0x1E0DE4FB0] + 64;
  a1[52] = MEMORY[0x1E0DE4FB0] + 64;
  v4 = a1 + 1;
  v5 = *(_QWORD *)(MEMORY[0x1E0DE4F48] + 8);
  v6 = *(_QWORD *)(MEMORY[0x1E0DE4F48] + 16);
  *a1 = v5;
  *(_QWORD *)((char *)a1 + *(_QWORD *)(v5 - 24)) = v6;
  v7 = (std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24));
  std::ios_base::init(v7, a1 + 1);
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *a1 = v2 + 24;
  a1[52] = v3;
  MEMORY[0x1C3B8D5FC](v4);
  if (!std::filebuf::open())
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 4);
  return a1;
}

void sub_1BF84E374(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x1C3B8D80C](v1 + 416);
  _Unwind_Resume(a1);
}

_QWORD *std::ofstream::~ofstream(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DE4F48];
  v3 = *MEMORY[0x1E0DE4F48];
  *a1 = *MEMORY[0x1E0DE4F48];
  *(_QWORD *)((char *)a1 + *(_QWORD *)(v3 - 24)) = *(_QWORD *)(v2 + 24);
  MEMORY[0x1C3B8D608](a1 + 1);
  std::ostream::~ostream();
  MEMORY[0x1C3B8D80C](a1 + 52);
  return a1;
}

void siri::dialogengine::UpdatableDir::SetDirs(siri::dialogengine::UpdatableDir *this)
{
  size_t v2;
  const void **v3;
  size_t v4;
  uint64_t v5;
  int v6;
  siri::dialogengine::UpdatableDir *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  const std::string::value_type *v10;
  uint64_t i;
  void *__p[2];
  char v13;
  std::string __str;
  std::string v15;
  __int128 v16;

  *((_QWORD *)&v16 + 1) = *MEMORY[0x1E0C80C00];
  if (*((char *)this + 47) < 0)
  {
    v2 = *((_QWORD *)this + 4);
    if (!v2)
      goto LABEL_26;
  }
  else
  {
    if (!*((_BYTE *)this + 47))
      goto LABEL_26;
    v2 = *((_QWORD *)this + 4);
  }
  v3 = (const void **)((char *)this + 24);
  if (*((char *)this + 47) >= 0)
    v4 = *((unsigned __int8 *)this + 47);
  else
    v4 = v2;
  v5 = *((unsigned __int8 *)this + 23);
  v6 = (char)v5;
  if ((v5 & 0x80u) != 0)
    v5 = *((_QWORD *)this + 1);
  if (v4 == v5)
  {
    if (v6 >= 0)
      v7 = this;
    else
      v7 = *(siri::dialogengine::UpdatableDir **)this;
    if ((*((_BYTE *)this + 47) & 0x80) == 0)
    {
      v8 = (unsigned __int8 *)this + 24;
      v9 = *((unsigned __int8 *)this + 47);
      while (*v8 == *(unsigned __int8 *)v7)
      {
        ++v8;
        v7 = (siri::dialogengine::UpdatableDir *)((char *)v7 + 1);
        if (!--v9)
          goto LABEL_26;
      }
      goto LABEL_19;
    }
    v10 = (const std::string::value_type *)*v3;
    if (memcmp(*v3, v7, v2))
      goto LABEL_23;
LABEL_26:
    if (*((char *)this + 23) < 0)
      std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)this, *((_QWORD *)this + 1));
    else
      __str = *(std::string *)this;
    std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string const*,std::string const*>((std::vector<std::string> *)this + 2, &__str, (__int128 *)&v15, 1uLL);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__str.__r_.__value_.__l.__data_);
    std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string const*,std::string const*>((std::vector<std::string> *)this + 3, 0, 0, 0);
    return;
  }
LABEL_19:
  if ((*((_BYTE *)this + 47) & 0x80) == 0)
  {
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = *(_OWORD *)v3;
    __str.__r_.__value_.__r.__words[2] = *((_QWORD *)this + 5);
    goto LABEL_24;
  }
  v10 = (const std::string::value_type *)*v3;
LABEL_23:
  std::string::__init_copy_ctor_external(&__str, v10, v2);
  LOBYTE(v6) = *((_BYTE *)this + 23);
LABEL_24:
  if ((v6 & 0x80) != 0)
    std::string::__init_copy_ctor_external(&v15, *(const std::string::value_type **)this, *((_QWORD *)this + 1));
  else
    v15 = *(std::string *)this;
  std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string const*,std::string const*>((std::vector<std::string> *)this + 2, &__str, &v16, 2uLL);
  for (i = 0; i != -6; i -= 3)
  {
    if (SHIBYTE(v15.__r_.__value_.__r.__words[i + 2]) < 0)
      operator delete(*(void **)((char *)&__str + i * 8 + 24));
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "exclude");
  siri::dialogengine::JoinPath((uint64_t)this + 24, (uint64_t)__p, (uint64_t)&__str);
  std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string const*,std::string const*>((std::vector<std::string> *)this + 3, &__str, (__int128 *)&v15, 1uLL);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (v13 < 0)
    operator delete(__p[0]);
}

void sub_1BF84E650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string const*,std::string const*>(std::vector<std::string> *a1, std::string *__str, __int128 *a3, unint64_t a4)
{
  __int128 *v6;
  uint64_t p_end_cap;
  std::string *begin;
  unint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string *end;
  __int128 *v14;
  uint64_t v15;

  v6 = (__int128 *)__str;
  p_end_cap = (uint64_t)&a1->__end_cap_;
  begin = a1->__begin_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3) < a4)
  {
    std::vector<std::string>::__vdeallocate(a1);
    v10 = 0x5555555555555556 * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3) >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v10;
    std::vector<std::string>::__vallocate[abi:ne180100](a1, v11);
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>(p_end_cap, v6, a3, a1->__end_);
LABEL_14:
    a1->__end_ = v12;
    return;
  }
  end = a1->__end_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)begin) >> 3) < a4)
  {
    v14 = (__int128 *)(&__str->__r_.__value_.__l.__data_ + (((char *)end - (char *)begin) >> 3));
    if (end != begin)
    {
      v15 = 8 * (((char *)end - (char *)begin) >> 3);
      do
      {
        std::string::operator=(begin, (const std::string *)v6);
        v6 = (__int128 *)((char *)v6 + 24);
        ++begin;
        v15 -= 24;
      }
      while (v15);
      begin = a1->__end_;
    }
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>(p_end_cap, v14, a3, begin);
    goto LABEL_14;
  }
  if (__str != (std::string *)a3)
  {
    do
    {
      std::string::operator=(begin, (const std::string *)v6);
      v6 = (__int128 *)((char *)v6 + 24);
      ++begin;
    }
    while (v6 != a3);
    end = a1->__end_;
  }
  while (end != begin)
  {
    if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0)
      operator delete(end[-1].__r_.__value_.__l.__data_);
    --end;
  }
  a1->__end_ = begin;
}

void sub_1BF84E860(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

std::string *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>(uint64_t a1, __int128 *a2, __int128 *a3, std::string *this)
{
  std::string *v4;
  __int128 *v6;
  __int128 v7;
  _QWORD v9[3];
  char v10;
  std::string *v11;
  std::string *v12;

  v4 = this;
  v11 = this;
  v12 = this;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  v10 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(v4, *(const std::string::value_type **)v6, *((_QWORD *)v6 + 1));
        v4 = v12;
      }
      else
      {
        v7 = *v6;
        v4->__r_.__value_.__r.__words[2] = *((_QWORD *)v6 + 2);
        *(_OWORD *)&v4->__r_.__value_.__l.__data_ = v7;
      }
      v6 = (__int128 *)((char *)v6 + 24);
      v12 = ++v4;
    }
    while (v6 != a3);
  }
  v10 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v9);
  return v4;
}

void sub_1BF84E914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::string*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::UpdatableDir::IsExcluded(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *__p[2];
  char v5;

  siri::dialogengine::FindFileInPaths(a2, (_QWORD *)(a1 + 72), (uint64_t)__p);
  if (v5 < 0)
  {
    if (!__p[1])
    {
LABEL_6:
      v2 = 0;
      goto LABEL_8;
    }
  }
  else if (!v5)
  {
    goto LABEL_6;
  }
  if (siri::dialogengine::DirExists((uint64_t *)__p))
    goto LABEL_6;
  v2 = 1;
LABEL_8:
  if (v5 < 0)
    operator delete(__p[0]);
  return v2;
}

void sub_1BF84E9A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

siri::dialogengine::UpdatableDir *siri::dialogengine::UpdatableDir::UpdatableDir(siri::dialogengine::UpdatableDir *this, __int128 *a2, int a3)
{
  __int128 v5;
  void **v6;
  std::string v8;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)this = v5;
  }
  *(_OWORD *)((char *)this + 24) = 0u;
  v6 = (void **)((char *)this + 24);
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  if (a3)
  {
    siri::dialogengine::GetUpdatedTemplateDir((uint64_t)this, &v8);
    if (*((char *)this + 47) < 0)
      operator delete(*v6);
    *(_OWORD *)v6 = *(_OWORD *)&v8.__r_.__value_.__l.__data_;
    *((_QWORD *)this + 5) = *((_QWORD *)&v8.__r_.__value_.__l + 2);
  }
  siri::dialogengine::UpdatableDir::SetDirs(this);
  return this;
}

void sub_1BF84EA78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  uint64_t v10;
  void **v11;

  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a10);
  a10 = v11 + 3;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a10);
  if (*(char *)(v10 + 47) < 0)
    operator delete(*v11);
  if (*(char *)(v10 + 23) < 0)
    operator delete(*(void **)v10);
  _Unwind_Resume(a1);
}

std::string *siri::dialogengine::UpdatableDir::UpdatableDir(std::string *this, __int128 *a2, __int128 *a3)
{
  __int128 v5;
  __int128 v6;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *(const std::string::value_type **)a3, *((_QWORD *)a3 + 1));
  }
  else
  {
    v6 = *a3;
    this[1].__r_.__value_.__r.__words[2] = *((_QWORD *)a3 + 2);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v6;
  }
  *(_OWORD *)&this[2].__r_.__value_.__l.__data_ = 0u;
  *(_OWORD *)&this[2].__r_.__value_.__r.__words[2] = 0u;
  *(_OWORD *)&this[3].__r_.__value_.__r.__words[1] = 0u;
  siri::dialogengine::UpdatableDir::SetDirs((siri::dialogengine::UpdatableDir *)this);
  return this;
}

void sub_1BF84EB6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  if (*(char *)(v10 + 23) < 0)
    operator delete(*(void **)v10);
  _Unwind_Resume(exception_object);
}

_QWORD *siri::dialogengine::UpdatableDir::FindFile@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  if (siri::dialogengine::UpdatableDir::IsExcluded(a1, a2))
    return std::string::basic_string[abi:ne180100]<0>(a3, "");
  else
    return siri::dialogengine::FindFileInPaths(a2, (_QWORD *)(a1 + 48), (uint64_t)a3);
}

void siri::dialogengine::UpdatableDir::ListDir(uint64_t a1@<X0>, uint64_t a2@<X1>, std::vector<std::string> *a3@<X8>)
{
  uint64_t v6;
  size_t v7;
  size_t v8;
  uint64_t v9;
  int v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t i;
  uint64_t v17;
  int v18;
  int *v19;
  int v20;
  int v21;
  std::string *v23;
  uint64_t v24;
  const void **p_data;
  std::vector<std::string>::pointer v26;
  __n128 *end;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  __int128 *v33;
  char IsExcluded;
  char v35;
  std::string *v36;
  uint64_t v37;
  __n128 *v38;
  unint64_t v39;
  uint64_t v40;
  void *v41[2];
  char v42;
  void *p_p;
  char *v44;
  uint64_t v45;
  void *__p;
  _BYTE *v47;
  char v48;
  __int128 v49;
  std::string *v50;

  a3->__begin_ = 0;
  a3->__end_ = 0;
  a3->__end_cap_.__value_ = 0;
  v6 = *(unsigned __int8 *)(a1 + 47);
  if (*(char *)(a1 + 47) < 0)
  {
    v7 = *(_QWORD *)(a1 + 32);
    if (!v7)
      goto LABEL_43;
  }
  else
  {
    if (!*(_BYTE *)(a1 + 47))
      goto LABEL_43;
    v7 = *(_QWORD *)(a1 + 32);
  }
  if ((v6 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(a1 + 47);
  else
    v8 = v7;
  v9 = *(unsigned __int8 *)(a1 + 23);
  v10 = (char)v9;
  if ((v9 & 0x80u) != 0)
    v9 = *(_QWORD *)(a1 + 8);
  if (v8 == v9)
  {
    if (v10 >= 0)
      v11 = (unsigned __int8 *)a1;
    else
      v11 = *(unsigned __int8 **)a1;
    if ((v6 & 0x80) == 0)
    {
      v12 = (unsigned __int8 *)(a1 + 24);
      while (*v12 == *v11)
      {
        ++v12;
        ++v11;
        if (!--v6)
          goto LABEL_43;
      }
      goto LABEL_20;
    }
    if (!memcmp(*(const void **)(a1 + 24), v11, v7))
    {
LABEL_43:
      siri::dialogengine::JoinPath(a1, a2, (uint64_t)&__p);
      siri::dialogengine::ListDir((const char *)&__p, (uint64_t)&v49);
      std::vector<std::string>::__vdeallocate(a3);
      *(_OWORD *)&a3->__begin_ = v49;
      a3->__end_cap_.__value_ = v50;
      v50 = 0;
      v49 = 0uLL;
      p_p = &v49;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
      if (v48 < 0)
        operator delete(__p);
      end = (__n128 *)a3->__end_;
      v28 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)a3->__begin_) >> 3));
      if (end == (__n128 *)a3->__begin_)
        v29 = 0;
      else
        v29 = v28;
      std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *,false>((__n128 *)a3->__begin_, end, v29, 1);
      return;
    }
  }
LABEL_20:
  siri::dialogengine::JoinPath(a1 + 24, a2, (uint64_t)&__p);
  siri::dialogengine::ListDir((const char *)&__p, (uint64_t)&v49);
  if (v48 < 0)
    operator delete(__p);
  siri::dialogengine::JoinPath(a1, a2, (uint64_t)&p_p);
  siri::dialogengine::ListDir((const char *)&p_p, (uint64_t)&__p);
  if (SHIBYTE(v45) < 0)
    operator delete(p_p);
  v13 = *((_QWORD *)&v49 + 1);
  v14 = v49;
  if (*((_QWORD *)&v49 + 1) != (_QWORD)v49)
  {
    v15 = 0;
    for (i = 0; i < 0xAAAAAAAAAAAAAAABLL * ((v13 - v14) >> 3); ++i)
    {
      v17 = v14 + v15;
      v18 = *(char *)(v14 + v15 + 23);
      if (v18 < 0)
      {
        if (*(_QWORD *)(v17 + 8) == 7)
        {
          v19 = *(int **)v17;
LABEL_31:
          v20 = *v19;
          v21 = *(int *)((char *)v19 + 3);
          if (v20 == 1818458213 && v21 == 1701082476)
            goto LABEL_39;
        }
      }
      else
      {
        v19 = (int *)(v14 + v15);
        if (v18 == 7)
          goto LABEL_31;
      }
      v23 = a3->__end_;
      if (v23 >= a3->__end_cap_.__value_)
      {
        v24 = std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)a3, (__int128 *)v17);
      }
      else
      {
        std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a3, (__int128 *)v17);
        v24 = (uint64_t)&v23[1];
      }
      a3->__end_ = (std::vector<std::string>::pointer)v24;
      v13 = *((_QWORD *)&v49 + 1);
      v14 = v49;
LABEL_39:
      v15 += 24;
    }
  }
  p_data = (const void **)&a3->__begin_->__r_.__value_.__l.__data_;
  v26 = a3->__end_;
  v44 = 0;
  v45 = 0;
  p_p = &v44;
  while (p_data != (const void **)v26)
  {
    std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>((uint64_t *)&p_p, (uint64_t)&v44, p_data, (uint64_t)p_data);
    p_data += 3;
  }
  v30 = (char *)__p;
  if (v47 != __p)
  {
    v31 = 0;
    v32 = 0;
    do
    {
      v33 = (__int128 *)&v30[v31];
      siri::dialogengine::JoinPath(a2, (uint64_t)&v30[v31], (uint64_t)v41);
      IsExcluded = siri::dialogengine::UpdatableDir::IsExcluded(a1, (uint64_t)v41);
      v35 = IsExcluded;
      if (v42 < 0)
      {
        operator delete(v41[0]);
        if ((v35 & 1) == 0)
        {
LABEL_55:
          if (&v44 == (char **)std::__tree<std::string>::find<std::string>((uint64_t)&p_p, (const void **)v33))
          {
            v36 = a3->__end_;
            if (v36 >= a3->__end_cap_.__value_)
            {
              v37 = std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)a3, v33);
            }
            else
            {
              std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a3, v33);
              v37 = (uint64_t)&v36[1];
            }
            a3->__end_ = (std::vector<std::string>::pointer)v37;
          }
        }
      }
      else if ((IsExcluded & 1) == 0)
      {
        goto LABEL_55;
      }
      ++v32;
      v30 = (char *)__p;
      v31 += 24;
    }
    while (v32 < 0xAAAAAAAAAAAAAAABLL * ((v47 - (_BYTE *)__p) >> 3));
  }
  v38 = (__n128 *)a3->__end_;
  v39 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((char *)v38 - (char *)a3->__begin_) >> 3));
  if (v38 == (__n128 *)a3->__begin_)
    v40 = 0;
  else
    v40 = v39;
  std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *,false>((__n128 *)a3->__begin_, v38, v40, 1);
  std::__tree<std::string>::destroy((uint64_t)&p_p, v44);
  p_p = &__p;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  __p = &v49;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
}

void sub_1BF84EFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28)
{
  if (a21 < 0)
    operator delete(__p);
  a22 = &a28;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a22);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a28);
  _Unwind_Resume(a1);
}

void std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *,false>(__n128 *a1, __n128 *a2, uint64_t a3, char a4)
{
  unint64_t *v8;
  unint64_t *v9;
  __n128 *v10;
  uint64_t v11;
  unint64_t v12;
  __n128 *v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  unint64_t v17;
  __n128 v18;
  __n128 v19;
  __n128 *v20;
  __n128 *v21;
  __n128 *v22;
  __n128 *v23;
  __n128 v24;
  unint64_t v25;
  unint64_t v26;
  __int8 *v27;
  __n128 v28;
  __n128 v29;
  BOOL v30;
  __n128 v31;
  __n128 *v32;
  _BOOL4 v33;
  __n128 *v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __int8 *v38;
  __n128 v39;
  __n128 v40;
  __n128 v41;
  __n128 v42;
  __n128 v43;
  __n128 *v44;
  BOOL v46;
  uint64_t v47;
  __n128 *v48;
  __n128 *v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  __n128 v54;
  int64_t v55;
  int64_t v56;
  int64_t v57;
  uint64_t v58;
  char *v59;
  unint64_t *v60;
  __n128 v61;
  unint64_t *v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  int64_t v67;
  __n128 *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  __n128 v77;
  unint64_t v78;
  uint64_t v79;
  int64_t v80;
  unint64_t v81;
  char *v82;
  __n128 v83;
  uint64_t v84;
  __int128 v85;
  __n128 v86;
  uint64_t v87;
  BOOL v88;
  __n128 *v89;
  __n128 v90;
  __n128 *v91;
  __n128 *v92;
  BOOL v93;
  __n128 v94;
  unint64_t v95;
  __n128 *v96;
  unsigned __int8 v97;
  __n128 *v98;
  __n128 v99;
  unint64_t v100;
  __n128 v101;
  unint64_t v102;
  uint64_t v103;

  v103 = *MEMORY[0x1E0C80C00];
LABEL_2:
  v8 = &a2[-2].n128_u64[1];
  v96 = a2 - 3;
  v98 = a2;
  v9 = &a2[-5].n128_u64[1];
  v10 = a1;
  while (2)
  {
    a1 = v10;
    v11 = (char *)a2 - (char *)v10;
    v12 = 0xAAAAAAAAAAAAAAABLL * (v11 >> 3);
    switch(v12)
    {
      case 0uLL:
      case 1uLL:
        return;
      case 2uLL:
        if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v8, a1))
        {
          v41 = *a1;
          v100 = a1[1].n128_u64[0];
          v99 = v41;
          v42 = *(__n128 *)v8;
          a1[1].n128_u64[0] = v8[2];
          *a1 = v42;
          v43 = v99;
          v8[2] = v100;
          *(__n128 *)v8 = v43;
        }
        return;
      case 3uLL:
        std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, &a1[1].n128_u64[1], v8);
        return;
      case 4uLL:
        std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, &a1[1].n128_u64[1], (__n128 *)a1[3].n128_u64, v8);
        return;
      case 5uLL:
        std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, &a1[1].n128_u64[1], (__n128 *)a1[3].n128_u64, &a1[4].n128_u64[1], v8);
        return;
      default:
        if (v11 <= 575)
        {
          v44 = (__n128 *)((char *)a1 + 24);
          v46 = a1 == a2 || v44 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v46)
            {
              v47 = 0;
              v48 = a1;
              do
              {
                v49 = v48;
                v48 = v44;
                if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v44, v49))
                {
                  v50 = *v48;
                  v100 = v48[1].n128_u64[0];
                  v99 = v50;
                  v48->n128_u64[1] = 0;
                  v48[1].n128_u64[0] = 0;
                  v48->n128_u64[0] = 0;
                  v51 = v47;
                  while (1)
                  {
                    v52 = (char *)a1 + v51;
                    *(__n128 *)(v52 + 24) = *(__n128 *)((char *)a1 + v51);
                    *((_QWORD *)v52 + 5) = *(unint64_t *)((char *)a1[1].n128_u64 + v51);
                    v52[23] = 0;
                    *v52 = 0;
                    if (!v51)
                      break;
                    v51 -= 24;
                    if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&v99, (unint64_t *)((char *)a1->n128_u64 + v51)))
                    {
                      v53 = (uint64_t)&a1[1].n128_i64[1] + v51;
                      goto LABEL_80;
                    }
                  }
                  v53 = (uint64_t)a1;
LABEL_80:
                  v54 = v99;
                  *(_QWORD *)(v53 + 16) = v100;
                  *(__n128 *)v53 = v54;
                }
                v44 = (__n128 *)((char *)v48 + 24);
                v47 += 24;
              }
              while (&v48[1].n128_i8[8] != (__int8 *)a2);
            }
          }
          else if (!v46)
          {
            do
            {
              v89 = a1;
              a1 = v44;
              if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v44, v89))
              {
                v90 = *a1;
                v100 = a1[1].n128_u64[0];
                v99 = v90;
                a1->n128_u64[1] = 0;
                a1[1].n128_u64[0] = 0;
                a1->n128_u64[0] = 0;
                v91 = a1;
                do
                {
                  v92 = (__n128 *)((char *)v91 - 24);
                  *v91 = *(__n128 *)((char *)v91 - 24);
                  v91[1].n128_u64[0] = v91[-1].n128_u64[1];
                  v91[-1].n128_u8[15] = 0;
                  v91[-2].n128_u8[8] = 0;
                  v93 = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&v99, (__n128 *)v91[-3].n128_u64);
                  v91 = v92;
                }
                while (v93);
                v94 = v99;
                v92[1].n128_u64[0] = v100;
                *v92 = v94;
              }
              v44 = (__n128 *)((char *)a1 + 24);
            }
            while (&a1[1].n128_i8[8] != (__int8 *)a2);
          }
          return;
        }
        if (!a3)
        {
          if (a1 != a2)
          {
            v55 = (v12 - 2) >> 1;
            v56 = v55;
            do
            {
              v57 = v56;
              if (v55 >= v56)
              {
                v58 = (2 * v56) | 1;
                v59 = (char *)a1 + 24 * v58;
                if (2 * v56 + 2 < (uint64_t)v12
                  && std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&a1->n128_u64[3 * v58], (_QWORD *)v59 + 3))
                {
                  v59 += 24;
                  v58 = 2 * v57 + 2;
                }
                v60 = &a1->n128_u64[3 * v57];
                a2 = v98;
                if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v59, v60))
                {
                  v61 = *(__n128 *)v60;
                  v100 = v60[2];
                  v99 = v61;
                  v60[1] = 0;
                  v60[2] = 0;
                  *v60 = 0;
                  do
                  {
                    v62 = (unint64_t *)v59;
                    v63 = *(_OWORD *)v59;
                    v60[2] = *((_QWORD *)v59 + 2);
                    *(_OWORD *)v60 = v63;
                    v59[23] = 0;
                    *v59 = 0;
                    if (v55 < v58)
                      break;
                    v64 = (2 * v58) | 1;
                    v59 = (char *)a1 + 24 * v64;
                    v65 = 2 * v58 + 2;
                    if (v65 < (uint64_t)v12
                      && std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&a1->n128_u64[3 * v64], (_QWORD *)v59 + 3))
                    {
                      v59 += 24;
                      v64 = v65;
                    }
                    v60 = v62;
                    v58 = v64;
                  }
                  while (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v59, &v99));
                  v66 = v99;
                  v62[2] = v100;
                  *(__n128 *)v62 = v66;
                  a2 = v98;
                }
              }
              v56 = v57 - 1;
            }
            while (v57);
            v67 = v11 / 0x18uLL;
            do
            {
              v68 = a2;
              v69 = 0;
              v95 = a1->n128_u64[0];
              v101.n128_u64[0] = a1->n128_u64[1];
              *(unint64_t *)((char *)v101.n128_u64 + 7) = *(unint64_t *)((char *)&a1->n128_u64[1] + 7);
              v97 = a1[1].n128_u8[7];
              a1->n128_u64[1] = 0;
              a1[1].n128_u64[0] = 0;
              a1->n128_u64[0] = 0;
              v70 = v67 - 2;
              if (v67 < 2)
                v70 = v67 - 1;
              v71 = v70 >> 1;
              v72 = (uint64_t)a1;
              do
              {
                v73 = v72 + 24 * v69 + 24;
                v74 = 2 * v69;
                v69 = (2 * v69) | 1;
                v75 = v74 + 2;
                if (v74 + 2 < v67
                  && std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>((_QWORD *)v73, (_QWORD *)(v73 + 24)))
                {
                  v73 += 24;
                  v69 = v75;
                }
                if (*(char *)(v72 + 23) < 0)
                  operator delete(*(void **)v72);
                v76 = *(__n128 *)v73;
                *(_QWORD *)(v72 + 16) = *(_QWORD *)(v73 + 16);
                *(__n128 *)v72 = v76;
                *(_BYTE *)(v73 + 23) = 0;
                *(_BYTE *)v73 = 0;
                v72 = v73;
              }
              while (v69 <= v71);
              a2 = (__n128 *)((char *)v68 - 24);
              if ((__int8 *)v73 == &v68[-2].n128_i8[8])
              {
                *(_QWORD *)v73 = v95;
                v87 = *(uint64_t *)((char *)v101.n128_i64 + 7);
                *(_QWORD *)(v73 + 8) = v101.n128_u64[0];
                *(_QWORD *)(v73 + 15) = v87;
                *(_BYTE *)(v73 + 23) = v97;
                v80 = v67 - 1;
              }
              else
              {
                v77 = *a2;
                *(_QWORD *)(v73 + 16) = v68[-1].n128_u64[1];
                *(__n128 *)v73 = v77;
                v68[-2].n128_u64[1] = v95;
                v78 = v101.n128_u64[0];
                *(unint64_t *)((char *)v68[-1].n128_u64 + 7) = *(unint64_t *)((char *)v101.n128_u64 + 7);
                v68[-1].n128_u64[0] = v78;
                v68[-1].n128_u8[15] = v97;
                v79 = v73 - (_QWORD)a1 + 24;
                v80 = v67 - 1;
                if (v79 >= 25)
                {
                  v81 = (unint64_t)(-2 - 0x5555555555555555 * (v79 >> 3)) >> 1;
                  v82 = (char *)a1 + 24 * v81;
                  if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v82, (_QWORD *)v73))
                  {
                    v83 = *(__n128 *)v73;
                    v100 = *(_QWORD *)(v73 + 16);
                    v99 = v83;
                    *(_QWORD *)(v73 + 8) = 0;
                    *(_QWORD *)(v73 + 16) = 0;
                    *(_QWORD *)v73 = 0;
                    do
                    {
                      v84 = (uint64_t)v82;
                      v85 = *(_OWORD *)v82;
                      *(_QWORD *)(v73 + 16) = *((_QWORD *)v82 + 2);
                      *(_OWORD *)v73 = v85;
                      v82[23] = 0;
                      *v82 = 0;
                      if (!v81)
                        break;
                      v81 = (v81 - 1) >> 1;
                      v82 = (char *)a1 + 24 * v81;
                      v73 = v84;
                    }
                    while (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v82, &v99));
                    v86 = v99;
                    *(_QWORD *)(v84 + 16) = v100;
                    *(__n128 *)v84 = v86;
                  }
                }
              }
              v88 = v67 <= 2;
              v67 = v80;
            }
            while (!v88);
          }
          return;
        }
        v13 = (__n128 *)((char *)a1 + 24 * (v12 >> 1));
        if ((unint64_t)v11 < 0xC01)
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(&a1->n128_u64[3 * (v12 >> 1)], a1, v8);
        }
        else
        {
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, &a1->n128_u64[3 * (v12 >> 1)], v8);
          v14 = 3 * (v12 >> 1);
          v15 = (_QWORD *)&a1[-1] + 3 * (v12 >> 1) - 1;
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(&a1[1].n128_u64[1], v15, v96);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>((__n128 *)a1[3].n128_u64, &a1[1].n128_u64[v14 + 1], v9);
          std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(v15, v13, &a1[1].n128_u64[v14 + 1]);
          v16 = *a1;
          v100 = a1[1].n128_u64[0];
          v99 = v16;
          v17 = v13[1].n128_u64[0];
          *a1 = *v13;
          a1[1].n128_u64[0] = v17;
          v18 = v99;
          v13[1].n128_u64[0] = v100;
          *v13 = v18;
        }
        --a3;
        a2 = v98;
        if ((a4 & 1) == 0
          && !std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&a1[-2].n128_u64[1], a1))
        {
          v31 = *a1;
          v102 = a1[1].n128_u64[0];
          v101 = v31;
          a1->n128_u64[1] = 0;
          a1[1].n128_u64[0] = 0;
          a1->n128_u64[0] = 0;
          if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&v101, v8))
          {
            v10 = a1;
            do
              v10 = (__n128 *)((char *)v10 + 24);
            while (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&v101, v10));
          }
          else
          {
            v32 = (__n128 *)((char *)a1 + 24);
            do
            {
              v10 = v32;
              if (v32 >= v98)
                break;
              v33 = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&v101, v32);
              v32 = (__n128 *)((char *)v10 + 24);
            }
            while (!v33);
          }
          v34 = v98;
          if (v10 < v98)
          {
            v34 = v98;
            do
              v34 = (__n128 *)((char *)v34 - 24);
            while (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&v101, v34));
          }
          while (v10 < v34)
          {
            v35 = *v10;
            v100 = v10[1].n128_u64[0];
            v99 = v35;
            v36 = *v34;
            v10[1].n128_u64[0] = v34[1].n128_u64[0];
            *v10 = v36;
            v37 = v99;
            v34[1].n128_u64[0] = v100;
            *v34 = v37;
            do
              v10 = (__n128 *)((char *)v10 + 24);
            while (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&v101, v10));
            do
              v34 = (__n128 *)((char *)v34 - 24);
            while (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&v101, v34));
          }
          v38 = &v10[-2].n128_i8[8];
          if (&v10[-2].n128_i8[8] == (__int8 *)a1)
          {
            if (v10[-1].n128_i8[15] < 0)
              operator delete((void *)a1->n128_u64[0]);
          }
          else
          {
            if (a1[1].n128_i8[7] < 0)
              operator delete((void *)a1->n128_u64[0]);
            v39 = *(__n128 *)v38;
            a1[1].n128_u64[0] = v10[-1].n128_u64[1];
            *a1 = v39;
            v10[-1].n128_u8[15] = 0;
            v10[-2].n128_u8[8] = 0;
          }
          a4 = 0;
          v40 = v101;
          v10[-1].n128_u64[1] = v102;
          *(__n128 *)v38 = v40;
          continue;
        }
        v19 = *a1;
        v102 = a1[1].n128_u64[0];
        v101 = v19;
        a1->n128_u64[1] = 0;
        a1[1].n128_u64[0] = 0;
        a1->n128_u64[0] = 0;
        v20 = a1;
        do
        {
          v21 = v20;
          v20 = (__n128 *)((char *)v20 + 24);
        }
        while (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v20, &v101));
        v22 = v98;
        if (v21 == a1)
        {
          v22 = v98;
          do
          {
            if (v20 >= v22)
              break;
            v22 = (__n128 *)((char *)v22 - 24);
          }
          while (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v22, &v101));
        }
        else
        {
          do
            v22 = (__n128 *)((char *)v22 - 24);
          while (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v22, &v101));
        }
        v10 = v20;
        if (v20 < v22)
        {
          v23 = v22;
          do
          {
            v99 = *v10;
            v24 = v99;
            v100 = v10[1].n128_u64[0];
            v25 = v100;
            v26 = v23[1].n128_u64[0];
            *v10 = *v23;
            v10[1].n128_u64[0] = v26;
            v23[1].n128_u64[0] = v25;
            *v23 = v24;
            do
              v10 = (__n128 *)((char *)v10 + 24);
            while (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v10, &v101));
            do
              v23 = (__n128 *)((char *)v23 - 24);
            while (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v23, &v101));
          }
          while (v10 < v23);
        }
        v27 = &v10[-2].n128_i8[8];
        if (&v10[-2].n128_i8[8] == (__int8 *)a1)
        {
          if (v10[-1].n128_i8[15] < 0)
            operator delete((void *)a1->n128_u64[0]);
        }
        else
        {
          if (a1[1].n128_i8[7] < 0)
            operator delete((void *)a1->n128_u64[0]);
          v28 = *(__n128 *)v27;
          a1[1].n128_u64[0] = v10[-1].n128_u64[1];
          *a1 = v28;
          v10[-1].n128_u8[15] = 0;
          v10[-2].n128_u8[8] = 0;
        }
        v29 = v101;
        v10[-1].n128_u64[1] = v102;
        *(__n128 *)v27 = v29;
        if (v20 < v22)
        {
LABEL_34:
          std::__introsort<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *,false>(a1, &v10[-2].n128_i8[8], a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v30 = std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, (__n128 *)((char *)v10 - 24));
        if (!std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(v10, v98))
        {
          if (v30)
            continue;
          goto LABEL_34;
        }
        a2 = (__n128 *)((char *)v10 - 24);
        if (!v30)
          goto LABEL_2;
        return;
    }
  }
}

uint64_t *std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>(uint64_t *result, uint64_t a2, const void **a3, uint64_t a4)
{
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t **v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;

  v7 = (uint64_t **)result;
  v8 = result + 1;
  if (result + 1 == (uint64_t *)a2
    || (result = (uint64_t *)std::less<std::string>::operator()[abi:ne180100]((uint64_t)(result + 2), a3, (const void **)(a2 + 32)), (_DWORD)result))
  {
    if (*v7 == (uint64_t *)a2)
    {
      v10 = a2;
LABEL_16:
      if (*(_QWORD *)a2)
      {
        v20 = v10;
        v12 = (uint64_t **)(v10 + 8);
      }
      else
      {
        v20 = a2;
        v12 = (uint64_t **)a2;
      }
      goto LABEL_30;
    }
    v9 = *(_QWORD *)a2;
    if (*(_QWORD *)a2)
    {
      do
      {
        v10 = v9;
        v9 = *(_QWORD *)(v9 + 8);
      }
      while (v9);
    }
    else
    {
      v15 = a2;
      do
      {
        v10 = *(_QWORD *)(v15 + 16);
        v16 = *(_QWORD *)v10 == v15;
        v15 = v10;
      }
      while (v16);
    }
    result = (uint64_t *)std::less<std::string>::operator()[abi:ne180100]((uint64_t)(v7 + 2), (const void **)(v10 + 32), a3);
    if ((_DWORD)result)
      goto LABEL_16;
LABEL_29:
    result = std::__tree<std::string>::__find_equal<std::string>((uint64_t)v7, &v20, a3);
    v12 = (uint64_t **)result;
    goto LABEL_30;
  }
  result = (uint64_t *)std::less<std::string>::operator()[abi:ne180100]((uint64_t)(v7 + 2), (const void **)(a2 + 32), a3);
  if ((_DWORD)result)
  {
    v12 = (uint64_t **)(a2 + 8);
    v11 = *(uint64_t **)(a2 + 8);
    if (v11)
    {
      v13 = *(_QWORD **)(a2 + 8);
      do
      {
        v14 = (uint64_t)v13;
        v13 = (_QWORD *)*v13;
      }
      while (v13);
    }
    else
    {
      v17 = a2;
      do
      {
        v14 = *(_QWORD *)(v17 + 16);
        v16 = *(_QWORD *)v14 == v17;
        v17 = v14;
      }
      while (!v16);
    }
    if ((uint64_t *)v14 != v8)
    {
      result = (uint64_t *)std::less<std::string>::operator()[abi:ne180100]((uint64_t)(v7 + 2), a3, (const void **)(v14 + 32));
      if (!(_DWORD)result)
        goto LABEL_29;
      v11 = *v12;
    }
    if (v11)
    {
      v20 = v14;
      v12 = (uint64_t **)v14;
    }
    else
    {
      v20 = a2;
    }
LABEL_30:
    if (*v12)
      return result;
    goto LABEL_31;
  }
  v19 = a2;
  v20 = a2;
  v12 = (uint64_t **)&v19;
  if (a2)
    return result;
LABEL_31:
  std::__tree<std::string>::__construct_node<std::string const&>((uint64_t)v7, a4, (uint64_t)&v18);
  return std::__tree<std::string>::__insert_node_at(v7, v20, v12, v18);
}

BOOL std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(_QWORD *a1, _QWORD *a2)
{
  int v2;
  int v3;
  size_t v4;
  size_t v5;
  size_t v6;
  int v7;

  v2 = *((char *)a2 + 23);
  v3 = *((char *)a1 + 23);
  if (v3 >= 0)
    v4 = *((unsigned __int8 *)a1 + 23);
  else
    v4 = a1[1];
  if (v3 < 0)
    a1 = (_QWORD *)*a1;
  if (v2 >= 0)
    v5 = *((unsigned __int8 *)a2 + 23);
  else
    v5 = a2[1];
  if (v2 < 0)
    a2 = (_QWORD *)*a2;
  if (v5 >= v4)
    v6 = v4;
  else
    v6 = v5;
  v7 = memcmp(a1, a2, v6);
  if (v7)
    return v7 < 0;
  else
    return v4 < v5;
}

BOOL std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  BOOL v6;
  _BOOL8 result;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v6 = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a2, a1);
  result = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a3, a2);
  if (v6)
  {
    if (result)
    {
      v8 = a1[2];
      v9 = *(_OWORD *)a1;
      v10 = a3[2];
      *(_OWORD *)a1 = *(_OWORD *)a3;
      a1[2] = v10;
    }
    else
    {
      v17 = a1[2];
      v18 = *(_OWORD *)a1;
      v19 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v19;
      *(_OWORD *)a2 = v18;
      a2[2] = v17;
      result = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a3, a2);
      if (!result)
        return result;
      v8 = a2[2];
      v9 = *(_OWORD *)a2;
      v20 = a3[2];
      *(_OWORD *)a2 = *(_OWORD *)a3;
      a2[2] = v20;
    }
    *(_OWORD *)a3 = v9;
    a3[2] = v8;
  }
  else if (result)
  {
    v11 = a2[2];
    v12 = *(_OWORD *)a2;
    v13 = a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v13;
    *(_OWORD *)a3 = v12;
    a3[2] = v11;
    result = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a2, a1);
    if (result)
    {
      v14 = a1[2];
      v15 = *(_OWORD *)a1;
      v16 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v16;
      *(_OWORD *)a2 = v15;
      a2[2] = v14;
    }
  }
  return result;
}

__n128 std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(__n128 *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  __n128 result;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, a2, a3);
  if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a4, a3))
  {
    v9 = a3[2];
    v10 = *(_OWORD *)a3;
    v11 = a4[2];
    *(_OWORD *)a3 = *(_OWORD *)a4;
    a3[2] = v11;
    *(_OWORD *)a4 = v10;
    a4[2] = v9;
    if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a3, a2))
    {
      v12 = a2[2];
      v13 = *(_OWORD *)a2;
      v14 = a3[2];
      *(_OWORD *)a2 = *(_OWORD *)a3;
      a2[2] = v14;
      *(_OWORD *)a3 = v13;
      a3[2] = v12;
      if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a2, a1))
      {
        v15 = a1[1].n128_u64[0];
        result = *a1;
        v16 = a2[2];
        *a1 = *(__n128 *)a2;
        a1[1].n128_u64[0] = v16;
        *(__n128 *)a2 = result;
        a2[2] = v15;
      }
    }
  }
  return result;
}

__n128 std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(__n128 *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, _QWORD *a5)
{
  __n128 result;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, a2, a3, a4);
  if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a5, a4))
  {
    v11 = a4[2];
    v12 = *(_OWORD *)a4;
    v13 = a5[2];
    *(_OWORD *)a4 = *(_OWORD *)a5;
    a4[2] = v13;
    *(_OWORD *)a5 = v12;
    a5[2] = v11;
    if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a4, a3))
    {
      v14 = a3[2];
      v15 = *(_OWORD *)a3;
      v16 = a4[2];
      *(_OWORD *)a3 = *(_OWORD *)a4;
      a3[2] = v16;
      *(_OWORD *)a4 = v15;
      a4[2] = v14;
      if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a3, a2))
      {
        v17 = a2[2];
        v18 = *(_OWORD *)a2;
        v19 = a3[2];
        *(_OWORD *)a2 = *(_OWORD *)a3;
        a2[2] = v19;
        *(_OWORD *)a3 = v18;
        a3[2] = v17;
        if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a2, a1))
        {
          v20 = a1[1].n128_u64[0];
          result = *a1;
          v21 = a2[2];
          *a1 = *(__n128 *)a2;
          a1[1].n128_u64[0] = v21;
          *(__n128 *)a2 = result;
          a2[2] = v20;
        }
      }
    }
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(__n128 *a1, __n128 *a2)
{
  unint64_t v4;
  _BOOL8 result;
  __n128 *v6;
  unint64_t v7;
  __n128 v8;
  unint64_t v9;
  __n128 *v10;
  unint64_t *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  unint64_t v18;

  v4 = 0xAAAAAAAAAAAAAAABLL * (((char *)a2 - (char *)a1) >> 3);
  result = 1;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v6 = (__n128 *)((char *)a2 - 24);
      if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&a2[-2].n128_u64[1], a1))
      {
        v7 = a1[1].n128_u64[0];
        v8 = *a1;
        v9 = v6[1].n128_u64[0];
        *a1 = *v6;
        a1[1].n128_u64[0] = v9;
        *v6 = v8;
        v6[1].n128_u64[0] = v7;
      }
      return 1;
    case 3uLL:
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, &a1[1].n128_u64[1], &a2[-2].n128_u64[1]);
      return 1;
    case 4uLL:
      std::__sort4[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, &a1[1].n128_u64[1], (__n128 *)a1[3].n128_u64, &a2[-2].n128_u64[1]);
      return 1;
    case 5uLL:
      std::__sort5[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, &a1[1].n128_u64[1], (__n128 *)a1[3].n128_u64, &a1[4].n128_u64[1], &a2[-2].n128_u64[1]);
      return 1;
    default:
      v10 = a1 + 3;
      std::__sort3[abi:ne180100]<std::_ClassicAlgPolicy,std::__less<void,void> &,std::string *>(a1, &a1[1].n128_u64[1], (__n128 *)a1[3].n128_u64);
      v11 = &a1[4].n128_u64[1];
      if (&a1[4].n128_i8[8] == (__int8 *)a2)
        return 1;
      v12 = 0;
      v13 = 0;
      break;
  }
  while (1)
  {
    if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v11, v10))
    {
      v17 = *(_OWORD *)v11;
      v18 = v11[2];
      v11[1] = 0;
      v11[2] = 0;
      *v11 = 0;
      v14 = v12;
      while (1)
      {
        v15 = (char *)a1 + v14;
        *(__n128 *)(v15 + 72) = *(__n128 *)((char *)a1 + v14 + 48);
        *((_QWORD *)v15 + 11) = *(unint64_t *)((char *)a1[4].n128_u64 + v14);
        v15[71] = 0;
        v15[48] = 0;
        if (v14 == -48)
          break;
        v14 -= 24;
        if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(&v17, (_QWORD *)v15 + 3))
        {
          v16 = (uint64_t)&a1[4].n128_i64[1] + v14;
          goto LABEL_12;
        }
      }
      v16 = (uint64_t)a1;
LABEL_12:
      *(_OWORD *)v16 = v17;
      *(_QWORD *)(v16 + 16) = v18;
      if (++v13 == 8)
        return v11 + 3 == (unint64_t *)a2;
    }
    v10 = (__n128 *)v11;
    v12 += 24;
    v11 += 3;
    if (v11 == (unint64_t *)a2)
      return 1;
  }
}

void siri::dialogengine::UpdatableDir::GetBaseDir(siri::dialogengine::UpdatableDir *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)this, *((_QWORD *)this + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)this;
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 2);
  }
}

_QWORD *siri::dialogengine::FindFileInUpdatableDirs@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  _QWORD *result;

  v4 = *a2;
  if (a2[1] != *a2)
  {
    v7 = 0;
    v8 = 0;
    do
    {
      result = siri::dialogengine::UpdatableDir::FindFile(v4 + v7, a1, (_QWORD *)a3);
      if (*(char *)(a3 + 23) < 0)
      {
        if (*(_QWORD *)(a3 + 8))
          return result;
        operator delete(*(void **)a3);
      }
      else if (*(_BYTE *)(a3 + 23))
      {
        return result;
      }
      ++v8;
      v4 = *a2;
      v7 += 96;
    }
    while (v8 < 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 5));
  }
  return std::string::basic_string[abi:ne180100]<0>((_QWORD *)a3, "");
}

void siri::dialogengine::GetBaseDir(__int128 **a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v2;
  __int128 v3;

  v2 = *a1;
  if (a1[1] == *a1)
  {
    std::string::basic_string[abi:ne180100]<0>(a2, "");
  }
  else if (*((char *)v2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *v2;
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)v2 + 2);
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v3;
  }
}

uint64_t siri::dialogengine::VisualComponentsCombination::Entry::GetType(siri::dialogengine::VisualComponentsCombination::Entry *this)
{
  return *(unsigned int *)this;
}

_DWORD *siri::dialogengine::VisualComponentsCombination::Entry::SetType(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

void siri::dialogengine::VisualComponentsCombination::Entry::GetComponentName(siri::dialogengine::VisualComponentsCombination::Entry *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 1), *((_QWORD *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 3);
  }
}

std::string *siri::dialogengine::VisualComponentsCombination::Entry::SetComponentName(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 8), a2);
}

_QWORD *siri::dialogengine::VisualComponentsCombination::Entry::GetChildren@<X0>(siri::dialogengine::VisualComponentsCombination::Entry *this@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>*,std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>*>(a2, *((_QWORD **)this + 4), *((_QWORD **)this + 5), (uint64_t)(*((_QWORD *)this + 5) - *((_QWORD *)this + 4)) >> 4);
}

_QWORD *std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>*,std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>*>(_QWORD *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if (a4)
  {
    if (a4 >> 60)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v6 = result;
    result = std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(a4);
    *v6 = result;
    v6[1] = result;
    v6[2] = &result[2 * v7];
    while (a2 != a3)
    {
      *result = *a2;
      v8 = a2[1];
      result[1] = v8;
      if (v8)
      {
        v9 = (unint64_t *)(v8 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      a2 += 2;
      result += 2;
    }
    v6[1] = result;
  }
  return result;
}

void sub_1BF8503C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100](v4 - 16);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(unint64_t a1)
{
  if (a1 >> 60)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(16 * a1);
}

void siri::dialogengine::VisualComponentsCombination::Entry::AddChild(uint64_t a1, __int128 *a2)
{
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::emplace_back<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry> const&>((char **)(a1 + 32), a2);
}

void std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::emplace_back<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry> const&>(char **a1, __int128 *a2)
{
  char *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  unint64_t *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  __int128 v23;
  int64x2_t v24;
  uint64_t v25;
  void *v26;

  v4 = a1[1];
  v5 = (unint64_t)a1[2];
  if ((unint64_t)v4 >= v5)
  {
    v10 = (v4 - *a1) >> 4;
    v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 60)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v12 = v5 - (_QWORD)*a1;
    if (v12 >> 3 > v11)
      v11 = v12 >> 3;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0)
      v13 = 0xFFFFFFFFFFFFFFFLL;
    else
      v13 = v11;
    v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(v13);
    v16 = &v14[16 * v10];
    v17 = *a2;
    *(_OWORD *)v16 = *a2;
    if (*((_QWORD *)&v17 + 1))
    {
      v18 = (unint64_t *)(*((_QWORD *)&v17 + 1) + 8);
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
    }
    v21 = *a1;
    v20 = a1[1];
    if (v20 == *a1)
    {
      v24 = vdupq_n_s64((unint64_t)v20);
      v22 = &v14[16 * v10];
    }
    else
    {
      v22 = &v14[16 * v10];
      do
      {
        v23 = *((_OWORD *)v20 - 1);
        v20 -= 16;
        *((_OWORD *)v22 - 1) = v23;
        v22 -= 16;
        *(_QWORD *)v20 = 0;
        *((_QWORD *)v20 + 1) = 0;
      }
      while (v20 != v21);
      v24 = *(int64x2_t *)a1;
    }
    v9 = v16 + 16;
    *a1 = v22;
    a1[1] = v16 + 16;
    a1[2] = &v14[16 * v15];
    v25 = v24.i64[1];
    v26 = (void *)v24.i64[0];
    while ((void *)v25 != v26)
      v25 = std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100](v25 - 16);
    if (v26)
      operator delete(v26);
  }
  else
  {
    v6 = *((_QWORD *)a2 + 1);
    *(_QWORD *)v4 = *(_QWORD *)a2;
    *((_QWORD *)v4 + 1) = v6;
    if (v6)
    {
      v7 = (unint64_t *)(v6 + 8);
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 1, v7));
    }
    v9 = v4 + 16;
  }
  a1[1] = v9;
}

uint64_t siri::dialogengine::VisualComponentsCombination::GetType(siri::dialogengine::VisualComponentsCombination *this)
{
  return *(unsigned int *)this;
}

_DWORD *siri::dialogengine::VisualComponentsCombination::SetType(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_QWORD *siri::dialogengine::VisualComponentsCombination::GetEntries@<X0>(siri::dialogengine::VisualComponentsCombination *this@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>*,std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>*>(a2, *((_QWORD **)this + 1), *((_QWORD **)this + 2), (uint64_t)(*((_QWORD *)this + 2) - *((_QWORD *)this + 1)) >> 4);
}

void siri::dialogengine::VisualComponentsCombination::AddEntry(uint64_t a1, __int128 *a2)
{
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::emplace_back<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry> const&>((char **)(a1 + 8), a2);
}

uint64_t siri::dialogengine::GetCombinationTypeFromString(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  uint64_t v8;
  unsigned __int16 *v13;
  uint64_t v14;
  char v15;

  siri::dialogengine::StringToLower(a1, (uint64_t)&v13);
  if (v15 < 0)
  {
    switch(v14)
    {
      case 3:
        if (*v13 == 28257 && *((_BYTE *)v13 + 2) == 121)
        {
          v8 = 1;
LABEL_50:
          operator delete(v13);
          return v8;
        }
        break;
      case 5:
        if (*(_DWORD *)v13 == 1868918383 && *((_BYTE *)v13 + 4) == 102)
        {
          v8 = 2;
          goto LABEL_50;
        }
        break;
      case 6:
        v4 = 1668641652;
        v5 = bswap32(*(_DWORD *)v13);
        if (v5 == 1668641652 && (v5 = bswap32(v13[2]) >> 16, v4 = 28525, v5 == 28525))
        {
          v6 = 0;
        }
        else if (v5 < v4)
        {
          v6 = -1;
        }
        else
        {
          v6 = 1;
        }
        if (v6)
          v8 = 0;
        else
          v8 = 3;
        goto LABEL_50;
    }
    v8 = 0;
    goto LABEL_50;
  }
  if (v15 == 3)
    return (unsigned __int16)v13 == 28257 && BYTE2(v13) == 121;
  if (v15 == 5)
  {
    if ((_DWORD)v13 == 1868918383 && BYTE4(v13) == 102)
      return 2;
    return 0;
  }
  if (v15 != 6)
    return 0;
  v1 = 1668641652;
  v2 = bswap32(v13);
  if (v2 == 1668641652 && (v2 = bswap32(WORD2(v13)) >> 16, v1 = 28525, v2 == 28525))
  {
    v3 = 0;
  }
  else if (v2 < v1)
  {
    v3 = -1;
  }
  else
  {
    v3 = 1;
  }
  if (v3)
    return 0;
  else
    return 3;
}

_QWORD *siri::dialogengine::CombinationTypeToString@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  char *v2;

  if ((a1 - 1) > 2)
    v2 = "";
  else
    v2 = off_1E792A148[a1 - 1];
  return std::string::basic_string[abi:ne180100]<0>(a2, v2);
}

uint64_t siri::dialogengine::GetEntryTypeFromString(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  unint64_t v4;
  int v5;
  unint64_t v8;
  int v9;
  void *__p;
  uint64_t v12;
  char v13;

  siri::dialogengine::StringToLower(a1, (uint64_t)&__p);
  if (v13 < 0)
  {
    v1 = 0;
    v2 = __p;
    switch(v12)
    {
      case 2:
        if (*(_WORD *)__p != 29295)
          goto LABEL_28;
        v1 = 2;
        break;
      case 3:
        if (*(_WORD *)__p != 28257 || *((_BYTE *)__p + 2) != 100)
          goto LABEL_28;
        v1 = 1;
        break;
      case 5:
        if (*(_DWORD *)__p == 1868852833 && *((_BYTE *)__p + 4) == 114)
        {
          v1 = 3;
          goto LABEL_41;
        }
LABEL_28:
        v1 = 0;
        break;
      case 9:
        v8 = bswap64(*(_QWORD *)__p);
        if (v8 == 0x636F6D706F6E656ELL)
        {
          v9 = *((unsigned __int8 *)__p + 8) - 116;
        }
        else if (v8 < 0x636F6D706F6E656ELL)
        {
          v9 = -1;
        }
        else
        {
          v9 = 1;
        }
        v1 = 4 * (v9 == 0);
LABEL_41:
        v2 = __p;
        break;
      default:
        break;
    }
    operator delete(v2);
  }
  else
  {
    v1 = 0;
    switch(v13)
    {
      case 2:
        if ((unsigned __int16)__p != 29295)
          goto LABEL_12;
        v1 = 2;
        break;
      case 3:
        if ((unsigned __int16)__p == 28257 && BYTE2(__p) == 100)
          v1 = 1;
        else
LABEL_12:
          v1 = 0;
        break;
      case 5:
        if (__p ^ 0x6F646E61 | BYTE4(__p) ^ 0x72)
          v1 = 0;
        else
          v1 = 3;
        break;
      case 9:
        v4 = bswap64((unint64_t)__p);
        if (v4 == 0x636F6D706F6E656ELL)
        {
          v5 = v12 - 116;
        }
        else if (v4 < 0x636F6D706F6E656ELL)
        {
          v5 = -1;
        }
        else
        {
          v5 = 1;
        }
        v1 = 4 * (v5 == 0);
        break;
      default:
        return v1;
    }
  }
  return v1;
}

_QWORD *siri::dialogengine::EntryTypeToString@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  char *v2;

  if ((a1 - 1) > 3)
    v2 = "";
  else
    v2 = off_1E792A160[a1 - 1];
  return std::string::basic_string[abi:ne180100]<0>(a2, v2);
}

void siri::dialogengine::MorphunUpdaterTuriTrial::~MorphunUpdaterTuriTrial(siri::dialogengine::MorphunUpdaterTuriTrial *this)
{
  JUMPOUT(0x1C3B8D890);
}

uint64_t siri::dialogengine::MorphunUpdaterTuriTrial::Download(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  void (**v5)(_QWORD);
  void *v6;
  uint64_t *v7;
  void *v8;
  void *v9;
  id v10;
  std::string *v11;
  std::string *v12;
  __int128 v13;
  std::string *v14;
  __int128 v15;
  std::string *v16;
  __int128 v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, void *);
  void *v25;
  void (**v26)(_QWORD);
  void **v27;
  void *__p[2];
  uint64_t v29;
  __n128 (*v30)(__n128 *, __n128 *);
  void (*v31)(uint64_t);
  uint64_t v32;
  void *v33;
  char v34;
  void *v35;
  char v36;
  std::string v37;

  v5 = a4;
  v6 = (void *)MEMORY[0x1E0C99DC8];
  if (*((char *)a2 + 23) >= 0)
    v7 = a2;
  else
    v7 = (uint64_t *)*a2;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "localeWithLocaleIdentifier:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v9)
  {
    std::operator+<char>();
    v16 = std::string::append(&v37, " was nil!");
    v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v29 = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 1u);
    if (SHIBYTE(v29) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v37.__r_.__value_.__l.__data_);
      if (!v5)
      {
LABEL_24:
        v20 = 0;
        goto LABEL_25;
      }
    }
    else if (!v5)
    {
      goto LABEL_24;
    }
LABEL_23:
    v5[2](v5);
    goto LABEL_24;
  }
  if (objc_msgSend(MEMORY[0x1E0D50600], "isLocaleEmbedded:", v9))
  {
    objc_msgSend(v9, "localeIdentifier");
    v10 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    v11 = (std::string *)std::string::basic_string[abi:ne180100]<0>(&v35, (char *)objc_msgSend(v10, "UTF8String"));
    v12 = std::string::insert(v11, 0, "Morphun language '");
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    v14 = std::string::append(&v37, "' is already embedded on device; skipping...");
    v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v29 = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 0);
    if (SHIBYTE(v29) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v37.__r_.__value_.__l.__data_);
    if (v36 < 0)
      operator delete(v35);

    if (!v5)
      goto LABEL_24;
    goto LABEL_23;
  }
  __p[0] = 0;
  __p[1] = __p;
  v29 = 0x4812000000;
  v30 = __Block_byref_object_copy_;
  v31 = __Block_byref_object_dispose_;
  v32 = 0;
  objc_msgSend(v9, "localeIdentifier");
  v18 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(&v33, (char *)objc_msgSend(v18, "UTF8String"));

  v22 = MEMORY[0x1E0C809B0];
  v23 = 3221225472;
  v24 = ___ZN4siri12dialogengine23MorphunUpdaterTuriTrial8DownloadERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbU13block_pointerFvvE_block_invoke;
  v25 = &unk_1E792A188;
  v27 = __p;
  v26 = v5;
  v19 = (void *)MEMORY[0x1C3B8DDB8](&v22);
  objc_msgSend(MEMORY[0x1E0D50600], "onDemandDownloadForLocale:withProgress:withCompletion:", v9, 0, v19, v22, v23, v24, v25);

  _Block_object_dispose(__p, 8);
  if (v34 < 0)
    operator delete(v33);
  v20 = 1;
LABEL_25:

  return v20;
}

void sub_1BF850D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  void *v29;
  void *v30;
  void *v31;

  _Block_object_dispose(&a15, 8);
  if (a29 < 0)
    operator delete(__p);

  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::MorphunUpdaterTuriTrial::Download(uint64_t a1, __int128 **a2, uint64_t a3, void *a4)
{
  void (**v5)(_QWORD);
  const char *v6;
  void (**v7)(_QWORD);
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  __int128 v11;
  int v12;
  std::string __p;

  v5 = a4;
  v7 = v5;
  v8 = *a2;
  v9 = a2[1];
  if (*a2 == v9)
  {
    siri::dialogengine::Log::Info((siri::dialogengine::Log *)"No Morphun locales specified for download!", v6);
    if (v7)
      v7[2](v7);
    v10 = 0;
  }
  else
  {
    LODWORD(v10) = 1;
    do
    {
      if (*((char *)v8 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v8, *((_QWORD *)v8 + 1));
      }
      else
      {
        v11 = *v8;
        __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v8 + 2);
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v11;
      }
      v5 = (void (**)(_QWORD))siri::dialogengine::MorphunUpdaterTuriTrial::Download((uint64_t)v5, (uint64_t *)&__p, 0, 0);
      v12 = (int)v5;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v10 = v12 & v10;
      v8 = (__int128 *)((char *)v8 + 24);
    }
    while (v8 != v9);
    if (v7)
      v7[2](v7);
  }

  return v10;
}

void sub_1BF850F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::MorphunUpdaterTuriTrial::Delete(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  const char *v9;
  void *v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  id v15;
  std::string *v16;
  __int128 v17;
  std::string *v18;
  __int128 v19;
  uint64_t v20;
  std::string v22;
  std::string v23;
  void *__p[2];
  std::string::size_type v25;

  v2 = (void *)MEMORY[0x1E0C99DC8];
  if (*((char *)a2 + 23) >= 0)
    v3 = a2;
  else
    v3 = (uint64_t *)*a2;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "localeWithLocaleIdentifier:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v5)
  {
    std::operator+<char>();
    v13 = std::string::append(&v23, " was nil!");
    v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v25 = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 1u);
    if (SHIBYTE(v25) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v23.__r_.__value_.__l.__data_);
    goto LABEL_24;
  }
  objc_msgSend(MEMORY[0x1E0D50600], "blockingRemoveAssetForLocale:withTimeout:", v5, 5000000000);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "localizedDescription");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v8;
    if (v8)
    {
      std::string::basic_string[abi:ne180100]<0>(&v23, (char *)objc_msgSend(objc_retainAutorelease(v8), "UTF8String"));
      v11 = std::string::insert(&v23, 0, "Unable to delete Morphun assets: ");
      v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
      v25 = v11->__r_.__value_.__r.__words[2];
      *(_OWORD *)__p = v12;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 1u);
      if (SHIBYTE(v25) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v23.__r_.__value_.__l.__data_);
    }
    else
    {
      siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"Unable to delete Morphun assets: Unknown reason", v9);
    }

LABEL_24:
    v20 = 0;
    goto LABEL_25;
  }
  objc_msgSend(v5, "localeIdentifier");
  v15 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(&v22, (char *)objc_msgSend(v15, "UTF8String"));
  v16 = std::string::insert(&v22, 0, "Successfully deleted Morphun assets for language \"");
  v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  v18 = std::string::append(&v23, "\"");
  v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v25 = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 0);
  if (SHIBYTE(v25) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v23.__r_.__value_.__l.__data_);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v22.__r_.__value_.__l.__data_);

  v20 = 1;
LABEL_25:

  return v20;
}

void sub_1BF8511A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  void *v28;
  void *v29;
  void *v30;

  _Unwind_Resume(a1);
}

void sub_1BF851280()
{
  void *v0;

  JUMPOUT(0x1BF851278);
}

uint64_t siri::dialogengine::MorphunUpdaterTuriTrial::Delete(uint64_t a1, const char *a2)
{
  __int128 *v2;
  __int128 *v3;
  uint64_t v4;
  __int128 v5;
  int v6;
  std::string __p;

  v2 = *(__int128 **)a2;
  v3 = (__int128 *)*((_QWORD *)a2 + 1);
  if (*(__int128 **)a2 == v3)
  {
    siri::dialogengine::Log::Info((siri::dialogengine::Log *)"No Morphun languages specified for deletion!", a2);
    return 0;
  }
  else
  {
    LODWORD(v4) = 1;
    do
    {
      if (*((char *)v2 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v2, *((_QWORD *)v2 + 1));
      }
      else
      {
        v5 = *v2;
        __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v2 + 2);
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v5;
      }
      a1 = siri::dialogengine::MorphunUpdaterTuriTrial::Delete(a1, (uint64_t *)&__p);
      v6 = a1;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      v4 = v6 & v4;
      v2 = (__int128 *)((char *)v2 + 24);
    }
    while (v2 != v3);
  }
  return v4;
}

void sub_1BF851330(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::MorphunUpdaterTuriTrial::DeleteAll(siri::dialogengine::MorphunUpdaterTuriTrial *this)
{
  __int128 *v2;
  void *v3;
  std::string *v4;
  void *v5;
  void *v6;
  std::string *v7;
  __int128 v8;
  std::string *v9;
  __int128 *v10;
  __int128 *v11;
  BOOL v12;
  uint64_t v13;
  std::string v15;
  void *__p;
  char v17;
  __int128 *v18;
  _QWORD *v19[2];
  uint64_t v20;
  std::string *v21;
  unint64_t v22;

  v20 = 0;
  v21 = 0;
  v22 = 0;
  (*(void (**)(__int128 **__return_ptr))(*(_QWORD *)this + 64))(&v18);
  v2 = v18;
  if (v18 != (__int128 *)v19)
  {
    do
    {
      std::pair<std::string const,std::string>::pair[abi:ne180100](&v15, v2 + 2);
      v3 = (void *)MEMORY[0x1E0C99DC8];
      if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v4 = &v15;
      else
        v4 = (std::string *)v15.__r_.__value_.__r.__words[0];
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "localeWithLocaleIdentifier:", v5);
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      if ((objc_msgSend(MEMORY[0x1E0D50600], "isLocaleEmbedded:", v6) & 1) == 0)
      {
        v7 = v21;
        if ((unint64_t)v21 >= v22)
        {
          v9 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>(&v20, (__int128 *)&v15);
        }
        else
        {
          if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
          {
            std::string::__init_copy_ctor_external(v21, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
          }
          else
          {
            v8 = *(_OWORD *)&v15.__r_.__value_.__l.__data_;
            v21->__r_.__value_.__r.__words[2] = v15.__r_.__value_.__r.__words[2];
            *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
          }
          v9 = v7 + 1;
        }
        v21 = v9;
      }

      if (v17 < 0)
        operator delete(__p);
      if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v15.__r_.__value_.__l.__data_);
      v10 = (__int128 *)*((_QWORD *)v2 + 1);
      if (v10)
      {
        do
        {
          v11 = v10;
          v10 = *(__int128 **)v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          v11 = (__int128 *)*((_QWORD *)v2 + 2);
          v12 = *(_QWORD *)v11 == (_QWORD)v2;
          v2 = v11;
        }
        while (!v12);
      }
      v2 = v11;
    }
    while (v11 != (__int128 *)v19);
  }
  v13 = (*(uint64_t (**)(siri::dialogengine::MorphunUpdaterTuriTrial *, uint64_t *))(*(_QWORD *)this + 40))(this, &v20);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v19[0]);
  v15.__r_.__value_.__r.__words[0] = (std::string::size_type)&v20;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v15);
  return v13;
}

void sub_1BF851500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _QWORD *a16, uint64_t a17, char a18)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a16);
  a9 = (void **)&a18;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

void siri::dialogengine::MorphunUpdaterTuriTrial::GetPath(uint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  std::string *v9;
  __int128 v10;
  std::string v11;
  void *__p[2];
  std::string::size_type v13;
  void *v14[2];
  uint64_t v15;

  v14[0] = 0;
  v14[1] = 0;
  v15 = 0;
  v3 = (void *)MEMORY[0x1E0C99DC8];
  if (*((char *)a1 + 23) >= 0)
    v4 = a1;
  else
    v4 = (uint64_t *)*a1;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "localeWithLocaleIdentifier:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(MEMORY[0x1E0D50600], "getAssetPathForLocale:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "path");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
      MEMORY[0x1C3B8D53C](v14, objc_msgSend(objc_retainAutorelease(v8), "UTF8String"));
    *(_OWORD *)a2 = *(_OWORD *)v14;
    a2[2] = v15;
    v14[1] = 0;
    v15 = 0;
    v14[0] = 0;

  }
  else
  {
    std::operator+<char>();
    v9 = std::string::append(&v11, " was nil!");
    v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v13 = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 1u);
    if (SHIBYTE(v13) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v11.__r_.__value_.__l.__data_);
    std::string::basic_string[abi:ne180100]<0>(a2, "");
  }

  if (SHIBYTE(v15) < 0)
    operator delete(v14[0]);
}

void sub_1BF8516D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  void *v27;

  if (a27 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void siri::dialogengine::MorphunUpdaterTuriTrial::GetPaths(uint64_t a1@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  const char *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t *v12;
  std::string __str;
  void *__p[2];
  char v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void **v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  objc_msgSend(MEMORY[0x1E0D50600], "SupportedLocales");
  v18 = 0u;
  v19 = 0u;
  v16 = 0u;
  v17 = 0u;
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
  if (v4)
  {
    v5 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v17 != v5)
          objc_enumerationMutation(v3);
        v8 = *(id *)(*((_QWORD *)&v16 + 1) + 8 * i);
        if (v8)
        {
          objc_msgSend(MEMORY[0x1E0D50600], "getAssetPathForLocale:", v8);
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "path");
          v10 = (void *)objc_claimAutoreleasedReturnValue();

          if (v10)
          {
            objc_msgSend(v8, "localeIdentifier");
            v11 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
            std::string::basic_string[abi:ne180100]<0>(__p, (char *)objc_msgSend(v11, "UTF8String"));

            std::string::basic_string[abi:ne180100]<0>(&__str, (char *)objc_msgSend(objc_retainAutorelease(v10), "UTF8String"));
            v20 = __p;
            v12 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)a1, (const void **)__p, (__int128 **)&v20);
            std::string::operator=((std::string *)(v12 + 7), &__str);
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
              operator delete(__str.__r_.__value_.__l.__data_);
            if (v15 < 0)
              operator delete(__p[0]);
          }

        }
        else
        {
          siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"An NSLocale gathered from MorphunAssets::SupportedLocales was nil!", v7);
        }

      }
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v16, v21, 16);
    }
    while (v4);
  }

}

void sub_1BF85193C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _QWORD **a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;

  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*a10);
  _Unwind_Resume(a1);
}

uint64_t *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, const void **a2, __int128 **a3)
{
  uint64_t **v5;
  uint64_t *v6;
  uint64_t **v7;
  std::string *v8;
  __int128 *v9;
  __int128 v10;
  _QWORD v12[2];
  char v13;
  uint64_t v14;

  v5 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v14, a2);
  v6 = *v5;
  if (!*v5)
  {
    v7 = v5;
    v6 = (uint64_t *)operator new(0x50uLL);
    v12[0] = v6;
    v12[1] = a1 + 1;
    v13 = 0;
    v8 = (std::string *)(v6 + 4);
    v9 = *a3;
    if (*((char *)*a3 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v8, *(const std::string::value_type **)v9, *((_QWORD *)v9 + 1));
    }
    else
    {
      v10 = *v9;
      v6[6] = *((_QWORD *)v9 + 2);
      *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v10;
    }
    v6[7] = 0;
    v6[8] = 0;
    v6[9] = 0;
    v13 = 1;
    std::__tree<std::string>::__insert_node_at(a1, v14, v7, v6);
    v12[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v12);
  }
  return v6;
}

void sub_1BF851AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(_QWORD *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*a1);
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v1)
  {
    if (*(_BYTE *)(a1 + 16))
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)v1 + 32);
    operator delete(v1);
  }
}

std::string *std::pair<std::string const,std::string>::pair[abi:ne180100](std::string *this, __int128 *a2)
{
  __int128 v4;
  std::string *v5;
  __int128 v6;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  v5 = this + 1;
  if (*((char *)a2 + 47) < 0)
  {
    std::string::__init_copy_ctor_external(v5, *((const std::string::value_type **)a2 + 3), *((_QWORD *)a2 + 4));
  }
  else
  {
    v6 = *(__int128 *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 5);
    *(_OWORD *)&v5->__r_.__value_.__l.__data_ = v6;
  }
  return this;
}

void sub_1BF851C00(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

uint64_t std::pair<std::string const,std::string>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

__n128 __Block_byref_object_copy_(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  a2[3].n128_u64[0] = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0)
    operator delete(*(void **)(a1 + 48));
}

void ___ZN4siri12dialogengine23MorphunUpdaterTuriTrial8DownloadERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbU13block_pointerFvvE_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  std::string *v7;
  __int128 v8;
  id v9;
  void **v10;
  std::string::size_type v11;
  std::string *v12;
  __int128 v13;
  uint64_t v14;
  void *v15[2];
  unsigned __int8 v16;
  std::string v17;
  std::string v18;
  void *__p[2];
  std::string::size_type v20;

  v4 = a3;
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "localizedDescription");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    std::operator+<char>();
    v7 = std::string::append(&v17, "': ");
    v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v8;
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    v9 = objc_retainAutorelease(v6);
    std::string::basic_string[abi:ne180100]<0>(v15, (char *)objc_msgSend(v9, "UTF8String"));
    if ((v16 & 0x80u) == 0)
      v10 = v15;
    else
      v10 = (void **)v15[0];
    if ((v16 & 0x80u) == 0)
      v11 = v16;
    else
      v11 = (std::string::size_type)v15[1];
    v12 = std::string::append(&v18, (const std::string::value_type *)v10, v11);
    v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v20 = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 1u);
    if (SHIBYTE(v20) < 0)
      operator delete(__p[0]);
    if ((char)v16 < 0)
      operator delete(v15[0]);
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v18.__r_.__value_.__l.__data_);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v17.__r_.__value_.__l.__data_);

  }
  v14 = *(_QWORD *)(a1 + 32);
  if (v14)
    (*(void (**)(void))(v14 + 16))();

}

void sub_1BF851DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  void *v33;

  _Unwind_Resume(a1);
}

BOOL siri::dialogengine::GetParamsForDialogCat(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7;
  _BOOL8 v8;
  const siri::dialogengine::Parameter *i;
  std::__split_buffer<std::string>::pointer begin;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  std::string *v17;
  std::string::size_type v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  std::string *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  std::string *v35;
  std::string *v36;
  std::string *v38;
  __int128 v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  std::__shared_weak_count *v43;
  std::__split_buffer<std::string> __p[87];
  void *v45[2];
  unsigned __int8 v46;
  std::__split_buffer<std::string> v47;
  __int128 v48;
  std::string::size_type v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  siri::dialogengine::CatIdToPath(a2, &v47);
  std::string::basic_string[abi:ne180100]<0>(&v48, "_params.cat.xml");
  siri::dialogengine::JoinPath((uint64_t)&v47, (uint64_t)&v48, (uint64_t)__p);
  siri::dialogengine::FindFileInUpdatableDirs((uint64_t)__p, a1, (uint64_t)v45);
  if (SHIBYTE(__p[0].__end_) < 0)
    operator delete(__p[0].__first_);
  if (SHIBYTE(v49) < 0)
    operator delete((void *)v48);
  if (SHIBYTE(v47.__end_) < 0)
    operator delete(v47.__first_);
  v7 = v46;
  if ((v46 & 0x80u) != 0)
    v7 = (unint64_t)v45[1];
  if (v7)
  {
    siri::dialogengine::Context::Context((siri::dialogengine::Context *)__p);
    siri::dialogengine::ParseXmlFile((Context *)__p, (uint64_t)v45, (uint64_t)&v42);
    v8 = v42 != 0;
    if (v42)
    {
      memset(&v47, 0, 24);
      std::vector<siri::dialogengine::Parameter>::__init_with_size[abi:ne180100]<siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(&v47, *(_QWORD *)(v42 + 176), *(_QWORD *)(v42 + 184), 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(*(_QWORD *)(v42 + 184) - *(_QWORD *)(v42 + 176)) >> 4));
      begin = v47.__begin_;
      for (i = (const siri::dialogengine::Parameter *)v47.__first_;
            i != (const siri::dialogengine::Parameter *)begin;
            i = (const siri::dialogengine::Parameter *)((char *)i + 336))
      {
        std::allocate_shared[abi:ne180100]<siri::dialogengine::Parameter,std::allocator<siri::dialogengine::Parameter>,siri::dialogengine::Parameter const&,void>((siri::dialogengine::Parameter **)&v48, i);
        siri::dialogengine::ParameterCollection::AddParameter(a3, (uint64_t *)&v48);
        v11 = (std::__shared_weak_count *)*((_QWORD *)&v48 + 1);
        if (*((_QWORD *)&v48 + 1))
        {
          v12 = (unint64_t *)(*((_QWORD *)&v48 + 1) + 8);
          do
            v13 = __ldaxr(v12);
          while (__stlxr(v13 - 1, v12));
          if (!v13)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      *(_QWORD *)&v48 = &v47;
      std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100]((void ***)&v48);
    }
    else if (a4)
    {
      std::operator+<char>();
      v23 = *(_QWORD *)(a4 + 16);
      v24 = *(_QWORD *)(a4 + 8);
      if (v24 >= v23)
      {
        v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v24 - *(_QWORD *)a4) >> 3);
        v32 = v31 + 1;
        if (v31 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v23 - *(_QWORD *)a4) >> 3);
        if (2 * v33 > v32)
          v32 = 2 * v33;
        if (v33 >= 0x555555555555555)
          v34 = 0xAAAAAAAAAAAAAAALL;
        else
          v34 = v32;
        v47.__end_cap_.__value_ = (std::allocator<std::string> *)(a4 + 16);
        if (v34)
          v35 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(a4 + 16, v34);
        else
          v35 = 0;
        v38 = v35 + v31;
        v47.__first_ = v35;
        v47.__begin_ = v38;
        v47.__end_cap_.__value_ = &v35[v34];
        v39 = v48;
        v38->__r_.__value_.__r.__words[2] = v49;
        *(_OWORD *)&v38->__r_.__value_.__l.__data_ = v39;
        v49 = 0;
        v48 = 0uLL;
        v47.__end_ = v38 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a4, &v47);
        v40 = *(_QWORD *)(a4 + 8);
        std::__split_buffer<std::string>::~__split_buffer(&v47);
        v41 = SHIBYTE(v49);
        *(_QWORD *)(a4 + 8) = v40;
        if (v41 < 0)
          operator delete((void *)v48);
      }
      else
      {
        v25 = v48;
        *(_QWORD *)(v24 + 16) = v49;
        *(_OWORD *)v24 = v25;
        *(_QWORD *)(a4 + 8) = v24 + 24;
      }
    }
    v14 = v43;
    if (v43)
    {
      p_shared_owners = (unint64_t *)&v43->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
        std::__shared_weak_count::__release_weak(v14);
      }
    }
    siri::dialogengine::Context::~Context((siri::dialogengine::Context *)__p);
  }
  else
  {
    if (a4)
    {
      std::operator+<char>();
      v17 = std::string::append((std::string *)&v47, " was not found");
      v18 = v17->__r_.__value_.__r.__words[0];
      *(_QWORD *)&v48 = v17->__r_.__value_.__l.__size_;
      *(_QWORD *)((char *)&v48 + 7) = *(std::string::size_type *)((char *)&v17->__r_.__value_.__r.__words[1] + 7);
      v19 = HIBYTE(v17->__r_.__value_.__r.__words[2]);
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      v20 = *(_QWORD *)(a4 + 16);
      v21 = *(_QWORD *)(a4 + 8);
      if (v21 >= v20)
      {
        v26 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v21 - *(_QWORD *)a4) >> 3);
        v27 = v26 + 1;
        if (v26 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        v28 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - *(_QWORD *)a4) >> 3);
        if (2 * v28 > v27)
          v27 = 2 * v28;
        if (v28 >= 0x555555555555555)
          v29 = 0xAAAAAAAAAAAAAAALL;
        else
          v29 = v27;
        __p[0].__end_cap_.__value_ = (std::allocator<std::string> *)(a4 + 16);
        if (v29)
          v30 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(a4 + 16, v29);
        else
          v30 = 0;
        v36 = v30 + v26;
        __p[0].__first_ = v30;
        __p[0].__begin_ = v36;
        __p[0].__end_cap_.__value_ = &v30[v29];
        v36->__r_.__value_.__r.__words[0] = v18;
        v36->__r_.__value_.__l.__size_ = v48;
        *(std::string::size_type *)((char *)&v36->__r_.__value_.__r.__words[1] + 7) = *(_QWORD *)((char *)&v48 + 7);
        *((_BYTE *)&v36->__r_.__value_.__s + 23) = v19;
        __p[0].__end_ = v36 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a4, __p);
        v22 = *(_QWORD *)(a4 + 8);
        std::__split_buffer<std::string>::~__split_buffer(__p);
      }
      else
      {
        *(_QWORD *)v21 = v18;
        *(_QWORD *)(v21 + 8) = v48;
        *(_QWORD *)(v21 + 15) = *(_QWORD *)((char *)&v48 + 7);
        *(_BYTE *)(v21 + 23) = v19;
        v22 = v21 + 24;
        *(_QWORD *)(a4 + 8) = v21 + 24;
      }
      *(_QWORD *)(a4 + 8) = v22;
      if (SHIBYTE(v47.__end_) < 0)
        operator delete(v47.__first_);
    }
    v8 = 0;
  }
  if ((char)v46 < 0)
    operator delete(v45[0]);
  return v8;
}

void sub_1BF8522E8(_Unwind_Exception *a1, char a2, uint64_t a3, std::__split_buffer<std::string> *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)(v12 - 120));
  if (*(char *)(v12 - 57) < 0)
    operator delete(*(void **)(v12 - 80));
  std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100]((uint64_t)&a10);
  siri::dialogengine::Context::~Context((siri::dialogengine::Context *)&a12);
  if (*(char *)(v12 - 121) < 0)
    operator delete(*(void **)(v12 - 144));
  _Unwind_Resume(a1);
}

void std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void (***v2)(_QWORD);
  void (***v4)(_QWORD);
  void *v5;
  void (***v6)(_QWORD);
  BOOL v7;

  v1 = *a1;
  v2 = (void (***)(_QWORD))**a1;
  if (v2)
  {
    v4 = (void (***)(_QWORD))v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      v6 = v4 - 42;
      do
      {
        (**v6)(v6);
        v7 = v6 == v2;
        v6 -= 42;
      }
      while (!v7);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

siri::dialogengine::Parameter *std::allocate_shared[abi:ne180100]<siri::dialogengine::Parameter,std::allocator<siri::dialogengine::Parameter>,siri::dialogengine::Parameter const&,void>(siri::dialogengine::Parameter **a1, const siri::dialogengine::Parameter *a2)
{
  _QWORD *v4;
  siri::dialogengine::Parameter *result;

  v4 = operator new(0x168uLL);
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_1E79345A0;
  result = siri::dialogengine::Parameter::Parameter((siri::dialogengine::Parameter *)(v4 + 3), a2);
  *a1 = result;
  a1[1] = (siri::dialogengine::Parameter *)v4;
  return result;
}

void sub_1BF8524D4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

siri::dialogengine::Parameter *siri::dialogengine::Parameter::Parameter(siri::dialogengine::Parameter *this, const siri::dialogengine::Parameter *a2)
{
  siri::dialogengine::ObjectProperty *v4;
  __int128 v5;
  std::string *v6;
  __int128 v7;

  v4 = siri::dialogengine::ObjectProperty::ObjectProperty(this, a2);
  *((_QWORD *)v4 + 30) = &off_1E793AEA8;
  *((_QWORD *)v4 + 31) = *((_QWORD *)a2 + 31);
  if (*((char *)a2 + 279) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)v4 + 256), *((const std::string::value_type **)a2 + 32), *((_QWORD *)a2 + 33));
  }
  else
  {
    v5 = *((_OWORD *)a2 + 16);
    *((_QWORD *)v4 + 34) = *((_QWORD *)a2 + 34);
    *((_OWORD *)v4 + 16) = v5;
  }
  v6 = (std::string *)((char *)this + 280);
  if (*((char *)a2 + 303) < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)a2 + 35), *((_QWORD *)a2 + 36));
  }
  else
  {
    v7 = *(_OWORD *)((char *)a2 + 280);
    *((_QWORD *)this + 37) = *((_QWORD *)a2 + 37);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  *((_QWORD *)this + 38) = off_1E793AED8;
  std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)this + 312, (const void ***)a2 + 39);
  *(_QWORD *)this = &off_1E793AE30;
  *((_QWORD *)this + 30) = &unk_1E793AE60;
  *((_QWORD *)this + 38) = &unk_1E793AE80;
  return this;
}

void sub_1BF8525C4(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;

  if (*(char *)(v1 + 279) < 0)
    operator delete(*v2);
  siri::dialogengine::ObjectProperty::~ObjectProperty((void **)v1);
  _Unwind_Resume(a1);
}

siri::dialogengine::ObjectProperty *siri::dialogengine::ObjectProperty::ObjectProperty(siri::dialogengine::ObjectProperty *this, const siri::dialogengine::ObjectProperty *a2)
{
  siri::dialogengine::PropertyBase *v4;
  __int128 v5;
  __int128 v6;
  std::string *v7;
  __int128 v8;

  v4 = siri::dialogengine::PropertyBase::PropertyBase(this, a2);
  *(_QWORD *)v4 = &off_1E793AE08;
  if (*((char *)a2 + 183) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)v4 + 160), *((const std::string::value_type **)a2 + 20), *((_QWORD *)a2 + 21));
  }
  else
  {
    v5 = *((_OWORD *)a2 + 10);
    *((_QWORD *)v4 + 22) = *((_QWORD *)a2 + 22);
    *((_OWORD *)v4 + 10) = v5;
  }
  if (*((char *)a2 + 207) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 184), *((const std::string::value_type **)a2 + 23), *((_QWORD *)a2 + 24));
  }
  else
  {
    v6 = *(_OWORD *)((char *)a2 + 184);
    *((_QWORD *)this + 25) = *((_QWORD *)a2 + 25);
    *(_OWORD *)((char *)this + 184) = v6;
  }
  v7 = (std::string *)((char *)this + 208);
  if (*((char *)a2 + 231) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *((const std::string::value_type **)a2 + 26), *((_QWORD *)a2 + 27));
  }
  else
  {
    v8 = *((_OWORD *)a2 + 13);
    *((_QWORD *)this + 28) = *((_QWORD *)a2 + 28);
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = v8;
  }
  *((_WORD *)this + 116) = *((_WORD *)a2 + 116);
  return this;
}

void sub_1BF8526D0(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(char *)(v1 + 207) < 0)
    operator delete(*v3);
  if (*(char *)(v1 + 183) < 0)
    operator delete(*v2);
  siri::dialogengine::PropertyBase::~PropertyBase((void **)v1);
  _Unwind_Resume(a1);
}

uint64_t std::map<std::string,std::string>::map[abi:ne180100](uint64_t a1, const void ***a2)
{
  uint64_t v3;
  const void ***v4;
  const void **v5;
  const void **v6;
  const void ***v7;
  BOOL v8;

  *(_QWORD *)(a1 + 8) = 0;
  v3 = a1 + 8;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)a1 = a1 + 8;
  v4 = a2 + 1;
  v5 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::string> const&>((uint64_t **)a1, v3, v5 + 4, (__int128 *)v5 + 2);
      v6 = (const void **)v5[1];
      if (v6)
      {
        do
        {
          v7 = (const void ***)v6;
          v6 = (const void **)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          v7 = (const void ***)v5[2];
          v8 = *v7 == v5;
          v5 = (const void **)v7;
        }
        while (!v8);
      }
      v5 = (const void **)v7;
    }
    while (v7 != v4);
  }
  return a1;
}

void sub_1BF8527A8(_Unwind_Exception *a1)
{
  _QWORD **v1;

  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::ObjectProperty::~ObjectProperty(void **this)
{
  *this = &off_1E793AE08;
  if (*((char *)this + 231) < 0)
    operator delete(this[26]);
  if (*((char *)this + 207) < 0)
    operator delete(this[23]);
  if (*((char *)this + 183) < 0)
    operator delete(this[20]);
  siri::dialogengine::PropertyBase::~PropertyBase(this);
}

{
  siri::dialogengine::ObjectProperty::~ObjectProperty(this);
  JUMPOUT(0x1C3B8D890);
}

void siri::dialogengine::PropertyBase::~PropertyBase(void **this)
{
  *this = off_1E793ADD0;
  if (*((char *)this + 151) < 0)
    operator delete(this[16]);
  if (*((char *)this + 127) < 0)
    operator delete(this[13]);
  if (*((char *)this + 103) < 0)
    operator delete(this[10]);
  if (*((char *)this + 79) < 0)
    operator delete(this[7]);
  if (*((char *)this + 55) < 0)
    operator delete(this[4]);
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

void std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::string> const&>(uint64_t **a1, uint64_t a2, const void **a3, __int128 *a4)
{
  uint64_t v6;
  uint64_t **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t **v12;
  const void **v13;
  const void **v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t *v18[3];
  uint64_t v19;
  uint64_t v20;

  v6 = a2;
  v8 = a1 + 1;
  if (a1 + 1 != (uint64_t **)a2
    && !std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a3, (const void **)(a2 + 32)))
  {
    if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), (const void **)(v6 + 32), a3))
    {
      v19 = v6;
      v20 = v6;
      v12 = (uint64_t **)&v19;
      if (v6)
        return;
LABEL_31:
      v6 = v20;
      goto LABEL_32;
    }
    v12 = (uint64_t **)(v6 + 8);
    v11 = *(uint64_t **)(v6 + 8);
    if (v11)
    {
      v13 = *(const void ***)(v6 + 8);
      do
      {
        v14 = v13;
        v13 = (const void **)*v13;
      }
      while (v13);
    }
    else
    {
      v17 = v6;
      do
      {
        v14 = *(const void ***)(v17 + 16);
        v16 = *v14 == (const void *)v17;
        v17 = (uint64_t)v14;
      }
      while (!v16);
    }
    if (v14 != (const void **)v8)
    {
      if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a3, v14 + 4))
      {
LABEL_29:
        v12 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v20, a3);
        goto LABEL_30;
      }
      v11 = *v12;
    }
    if (v11)
    {
      v20 = (uint64_t)v14;
      v12 = (uint64_t **)v14;
    }
    else
    {
      v20 = v6;
    }
LABEL_30:
    if (*v12)
      return;
    goto LABEL_31;
  }
  if (*a1 == (uint64_t *)v6)
  {
    v10 = v6;
    goto LABEL_16;
  }
  v9 = *(_QWORD *)v6;
  if (*(_QWORD *)v6)
  {
    do
    {
      v10 = v9;
      v9 = *(_QWORD *)(v9 + 8);
    }
    while (v9);
  }
  else
  {
    v15 = v6;
    do
    {
      v10 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)v10 == v15;
      v15 = v10;
    }
    while (v16);
  }
  if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), (const void **)(v10 + 32), a3))
    goto LABEL_29;
LABEL_16:
  if (*(_QWORD *)v6)
  {
    v20 = v10;
    v12 = (uint64_t **)(v10 + 8);
    goto LABEL_30;
  }
  v20 = v6;
  v12 = (uint64_t **)v6;
LABEL_32:
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__construct_node<std::pair<std::string const,std::string> const&>((uint64_t)v18, (uint64_t)a1, a4);
  std::__tree<std::string>::__insert_node_at(a1, v6, v12, v18[0]);
  v18[0] = 0;
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v18);
}

std::string *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__construct_node<std::pair<std::string const,std::string> const&>(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5;
  char *v6;
  std::string *result;

  v5 = a2 + 8;
  v6 = (char *)operator new(0x50uLL);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = 0;
  result = std::pair<std::string const,std::string>::pair[abi:ne180100]((std::string *)(v6 + 32), a3);
  *(_BYTE *)(a1 + 16) = 1;
  return result;
}

void sub_1BF852AC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

siri::dialogengine::PropertyBase *siri::dialogengine::PropertyBase::PropertyBase(siri::dialogengine::PropertyBase *this, const siri::dialogengine::PropertyBase *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  std::string *v9;
  __int128 v10;
  __int16 v11;

  *(_QWORD *)this = off_1E793ADD0;
  if (*((char *)a2 + 31) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 8), *((const std::string::value_type **)a2 + 1), *((_QWORD *)a2 + 2));
  }
  else
  {
    v4 = *(_OWORD *)((char *)a2 + 8);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *(_OWORD *)((char *)this + 8) = v4;
  }
  if (*((char *)a2 + 55) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 32), *((const std::string::value_type **)a2 + 4), *((_QWORD *)a2 + 5));
  }
  else
  {
    v5 = *((_OWORD *)a2 + 2);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_OWORD *)this + 2) = v5;
  }
  if (*((char *)a2 + 79) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 56), *((const std::string::value_type **)a2 + 7), *((_QWORD *)a2 + 8));
  }
  else
  {
    v6 = *(_OWORD *)((char *)a2 + 56);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *(_OWORD *)((char *)this + 56) = v6;
  }
  if (*((char *)a2 + 103) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 80), *((const std::string::value_type **)a2 + 10), *((_QWORD *)a2 + 11));
  }
  else
  {
    v7 = *((_OWORD *)a2 + 5);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_OWORD *)this + 5) = v7;
  }
  if (*((char *)a2 + 127) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 104), *((const std::string::value_type **)a2 + 13), *((_QWORD *)a2 + 14));
  }
  else
  {
    v8 = *(_OWORD *)((char *)a2 + 104);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *(_OWORD *)((char *)this + 104) = v8;
  }
  v9 = (std::string *)((char *)this + 128);
  if (*((char *)a2 + 151) < 0)
  {
    std::string::__init_copy_ctor_external(v9, *((const std::string::value_type **)a2 + 16), *((_QWORD *)a2 + 17));
  }
  else
  {
    v10 = *((_OWORD *)a2 + 8);
    *((_QWORD *)this + 18) = *((_QWORD *)a2 + 18);
    *(_OWORD *)&v9->__r_.__value_.__l.__data_ = v10;
  }
  v11 = *((_WORD *)a2 + 76);
  *((_BYTE *)this + 154) = *((_BYTE *)a2 + 154);
  *((_WORD *)this + 76) = v11;
  return this;
}

void sub_1BF852C50(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;
  void **v6;

  if (v1[127] < 0)
    operator delete(*v6);
  if (v1[103] < 0)
    operator delete(*v5);
  if (v1[79] < 0)
    operator delete(*v4);
  if (v1[55] < 0)
    operator delete(*v3);
  if (v1[31] < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void std::__shared_ptr_emplace<siri::dialogengine::Parameter>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E79345A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<siri::dialogengine::Parameter>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E79345A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C3B8D890);
}

uint64_t std::__shared_ptr_emplace<siri::dialogengine::Parameter>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t siri::dialogengine::GetParamsForVisualCat(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  std::__split_buffer<std::string>::pointer first;
  std::__split_buffer<std::string>::pointer begin;
  char v14;
  std::string::size_type *v15;
  std::string::size_type size;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  BOOL ParamsForDialogCat;
  std::string *v21;
  std::string::size_type v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __int128 v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  std::string *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  std::string *v39;
  std::string *v40;
  std::string *v41;
  __int128 v42;
  uint64_t v43;
  int v44;
  std::__shared_weak_count *v45;
  unint64_t *p_shared_owners;
  unint64_t v47;
  uint64_t v49;
  std::__shared_weak_count *v50;
  std::__split_buffer<std::string> v51[12];
  std::__split_buffer<std::string> __p[87];
  void *v53[2];
  unsigned __int8 v54;
  std::string v55;
  uint64_t v56;

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = (uint64_t *)v1;
  v56 = *MEMORY[0x1E0C80C00];
  std::string::basic_string[abi:ne180100]<0>(v51, ".vcatxml");
  siri::dialogengine::VisualCatIdToPath(v9, (uint64_t)v51, __p);
  siri::dialogengine::FindFileInUpdatableDirs((uint64_t)__p, v10, (uint64_t)v53);
  if (SHIBYTE(__p[0].__end_) < 0)
    operator delete(__p[0].__first_);
  if (SHIBYTE(v51[0].__end_) < 0)
    operator delete(v51[0].__first_);
  v11 = v54;
  if ((v54 & 0x80u) != 0)
    v11 = (unint64_t)v53[1];
  if (v11)
  {
    siri::dialogengine::Context::Context((siri::dialogengine::Context *)__p, (std::string **)v10);
    siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)v51, (const siri::dialogengine::RequestInfo *)&__p[0].__begin_);
    LODWORD(v51[0].__first_) = 1;
    siri::dialogengine::Context::SetRequestInfo((uint64_t)__p, (uint64_t)v51);
    siri::dialogengine::RequestInfo::~RequestInfo((void **)&v51[0].__first_);
    siri::dialogengine::ParseXmlFile((Context *)__p, (uint64_t)v53, (uint64_t)&v49);
    if (v49)
    {
      memset(v51, 0, 24);
      std::vector<siri::dialogengine::Parameter>::__init_with_size[abi:ne180100]<siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(v51, *(_QWORD *)(v49 + 176), *(_QWORD *)(v49 + 184), 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(*(_QWORD *)(v49 + 184) - *(_QWORD *)(v49 + 176)) >> 4));
      begin = v51[0].__begin_;
      first = v51[0].__first_;
      v14 = 1;
      while (1)
      {
        if (first == begin)
        {
          v55.__r_.__value_.__r.__words[0] = (std::string::size_type)v51;
          std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100]((void ***)&v55);
          goto LABEL_63;
        }
        v15 = &first[7].__r_.__value_.__r.__words[2];
        if (first[8].__r_.__value_.__s.__data_[15] < 0)
        {
          std::string::__init_copy_ctor_external(&v55, (const std::string::value_type *)first[7].__r_.__value_.__r.__words[2], first[8].__r_.__value_.__r.__words[0]);
        }
        else
        {
          *(_OWORD *)&v55.__r_.__value_.__l.__data_ = *(_OWORD *)v15;
          v55.__r_.__value_.__r.__words[2] = first[8].__r_.__value_.__l.__size_;
        }
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
        {
          size = v55.__r_.__value_.__l.__size_;
          operator delete(v55.__r_.__value_.__l.__data_);
          if (size)
          {
LABEL_16:
            if (v7)
            {
              if (first[8].__r_.__value_.__s.__data_[15] < 0)
              {
                std::string::__init_copy_ctor_external(&v55, (const std::string::value_type *)first[7].__r_.__value_.__r.__words[2], first[8].__r_.__value_.__r.__words[0]);
              }
              else
              {
                *(_OWORD *)&v55.__r_.__value_.__l.__data_ = *(_OWORD *)v15;
                v55.__r_.__value_.__r.__words[2] = first[8].__r_.__value_.__l.__size_;
              }
              ParamsForDialogCat = siri::dialogengine::GetParamsForDialogCat(v10, (uint64_t)&v55, v5, v3);
              if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v55.__r_.__value_.__l.__data_);
              v14 &= ParamsForDialogCat;
            }
            goto LABEL_30;
          }
        }
        else if (*((_BYTE *)&v55.__r_.__value_.__s + 23))
        {
          goto LABEL_16;
        }
        if (!first[9].__r_.__value_.__s.__data_[16])
        {
          std::allocate_shared[abi:ne180100]<siri::dialogengine::Parameter,std::allocator<siri::dialogengine::Parameter>,siri::dialogengine::Parameter const&,void>((siri::dialogengine::Parameter **)&v55, (const siri::dialogengine::Parameter *)first);
          siri::dialogengine::ParameterCollection::AddParameter(v5, (uint64_t *)&v55);
          v17 = (std::__shared_weak_count *)v55.__r_.__value_.__l.__size_;
          if (v55.__r_.__value_.__l.__size_)
          {
            v18 = (unint64_t *)(v55.__r_.__value_.__l.__size_ + 8);
            do
              v19 = __ldaxr(v18);
            while (__stlxr(v19 - 1, v18));
            if (!v19)
            {
              ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
              std::__shared_weak_count::__release_weak(v17);
            }
          }
        }
LABEL_30:
        first += 14;
      }
    }
    if (v3)
    {
      std::operator+<char>();
      v27 = *(_QWORD *)(v3 + 16);
      v28 = *(_QWORD *)(v3 + 8);
      if (v28 >= v27)
      {
        v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *(_QWORD *)v3) >> 3);
        v36 = v35 + 1;
        if (v35 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        v37 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v27 - *(_QWORD *)v3) >> 3);
        if (2 * v37 > v36)
          v36 = 2 * v37;
        if (v37 >= 0x555555555555555)
          v38 = 0xAAAAAAAAAAAAAAALL;
        else
          v38 = v36;
        v51[0].__end_cap_.__value_ = (std::allocator<std::string> *)(v3 + 16);
        if (v38)
          v39 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v3 + 16, v38);
        else
          v39 = 0;
        v41 = v39 + v35;
        v51[0].__first_ = v39;
        v51[0].__begin_ = v41;
        v51[0].__end_cap_.__value_ = &v39[v38];
        v42 = *(_OWORD *)&v55.__r_.__value_.__l.__data_;
        v41->__r_.__value_.__r.__words[2] = v55.__r_.__value_.__r.__words[2];
        *(_OWORD *)&v41->__r_.__value_.__l.__data_ = v42;
        memset(&v55, 0, sizeof(v55));
        v51[0].__end_ = v41 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)v3, v51);
        v43 = *(_QWORD *)(v3 + 8);
        std::__split_buffer<std::string>::~__split_buffer(v51);
        v44 = SHIBYTE(v55.__r_.__value_.__r.__words[2]);
        *(_QWORD *)(v3 + 8) = v43;
        if (v44 < 0)
          operator delete(v55.__r_.__value_.__l.__data_);
      }
      else
      {
        v29 = *(_OWORD *)&v55.__r_.__value_.__l.__data_;
        *(_QWORD *)(v28 + 16) = *((_QWORD *)&v55.__r_.__value_.__l + 2);
        *(_OWORD *)v28 = v29;
        *(_QWORD *)(v3 + 8) = v28 + 24;
      }
    }
    v14 = 0;
LABEL_63:
    v45 = v50;
    if (v50)
    {
      p_shared_owners = (unint64_t *)&v50->__shared_owners_;
      do
        v47 = __ldaxr(p_shared_owners);
      while (__stlxr(v47 - 1, p_shared_owners));
      if (!v47)
      {
        ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
        std::__shared_weak_count::__release_weak(v45);
      }
    }
    siri::dialogengine::Context::~Context((siri::dialogengine::Context *)__p);
  }
  else
  {
    if (v3)
    {
      std::operator+<char>();
      v21 = std::string::append((std::string *)v51, " was not found");
      v22 = v21->__r_.__value_.__r.__words[0];
      v55.__r_.__value_.__r.__words[0] = v21->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v55.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v21->__r_.__value_.__r.__words[1] + 7);
      v23 = HIBYTE(v21->__r_.__value_.__r.__words[2]);
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      v24 = *(_QWORD *)(v3 + 16);
      v25 = *(_QWORD *)(v3 + 8);
      if (v25 >= v24)
      {
        v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v25 - *(_QWORD *)v3) >> 3);
        v31 = v30 + 1;
        if (v30 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        v32 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v24 - *(_QWORD *)v3) >> 3);
        if (2 * v32 > v31)
          v31 = 2 * v32;
        if (v32 >= 0x555555555555555)
          v33 = 0xAAAAAAAAAAAAAAALL;
        else
          v33 = v31;
        __p[0].__end_cap_.__value_ = (std::allocator<std::string> *)(v3 + 16);
        if (v33)
          v34 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(v3 + 16, v33);
        else
          v34 = 0;
        v40 = v34 + v30;
        __p[0].__first_ = v34;
        __p[0].__begin_ = v40;
        __p[0].__end_cap_.__value_ = &v34[v33];
        v40->__r_.__value_.__r.__words[0] = v22;
        v40->__r_.__value_.__l.__size_ = v55.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)&v40->__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v55.__r_.__value_.__r.__words + 7);
        *((_BYTE *)&v40->__r_.__value_.__s + 23) = v23;
        __p[0].__end_ = v40 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)v3, __p);
        v26 = *(_QWORD *)(v3 + 8);
        std::__split_buffer<std::string>::~__split_buffer(__p);
      }
      else
      {
        *(_QWORD *)v25 = v22;
        *(_QWORD *)(v25 + 8) = v55.__r_.__value_.__r.__words[0];
        *(_QWORD *)(v25 + 15) = *(std::string::size_type *)((char *)v55.__r_.__value_.__r.__words + 7);
        *(_BYTE *)(v25 + 23) = v23;
        v26 = v25 + 24;
        *(_QWORD *)(v3 + 8) = v25 + 24;
      }
      *(_QWORD *)(v3 + 8) = v26;
      if (SHIBYTE(v51[0].__end_) < 0)
        operator delete(v51[0].__first_);
    }
    v14 = 0;
  }
  if ((char)v54 < 0)
    operator delete(v53[0]);
  return v14 & 1;
}

void sub_1BF85328C(_Unwind_Exception *a1, uint64_t a2, std::__split_buffer<std::string> *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,std::__split_buffer<std::string> *a61)
{
  uint64_t v61;
  uint64_t v62;

  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)&a11);
  if (*(char *)(v61 + 47) < 0)
    operator delete(*(void **)(v62 - 128));
  std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  siri::dialogengine::Context::~Context((siri::dialogengine::Context *)&STACK[0x200]);
  if (*(char *)(v61 + 23) < 0)
    operator delete(*(void **)(v62 - 152));
  _Unwind_Resume(a1);
}

void siri::dialogengine::RequestInfo::~RequestInfo(void **this)
{
  void **v2;

  if (*((char *)this + 487) < 0)
    operator delete(this[58]);
  if (*((char *)this + 463) < 0)
    operator delete(this[55]);
  v2 = this + 52;
  std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 415) < 0)
    operator delete(this[49]);
  if (*((char *)this + 391) < 0)
    operator delete(this[46]);
  if (*((char *)this + 367) < 0)
    operator delete(this[43]);
  if (*((char *)this + 343) < 0)
    operator delete(this[40]);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(this[38]);
  if (*((char *)this + 279) < 0)
    operator delete(this[32]);
  v2 = this + 29;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 231) < 0)
    operator delete(this[26]);
  if (*((char *)this + 207) < 0)
    operator delete(this[23]);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(this[21]);
  if (*((char *)this + 151) < 0)
    operator delete(this[16]);
  if (*((char *)this + 127) < 0)
    operator delete(this[13]);
  if (*((char *)this + 103) < 0)
    operator delete(this[10]);
  if (*((char *)this + 79) < 0)
    operator delete(this[7]);
  if (*((char *)this + 55) < 0)
    operator delete(this[4]);
  v2 = this + 1;
  std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100](&v2);
}

void std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>(v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 96;
        std::allocator<siri::dialogengine::UpdatableDir>::destroy[abi:ne180100](v4);
      }
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::allocator<siri::dialogengine::UpdatableDir>::destroy[abi:ne180100](uint64_t a1)
{
  void **v2;

  v2 = (void **)(a1 + 72);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  v2 = (void **)(a1 + 48);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*(char *)(a1 + 47) < 0)
    operator delete(*(void **)(a1 + 24));
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::~CATResultDialogFilterAdapter(id *this)
{
  siri::dialogengine::CATResultDialogFilterAdapter::~CATResultDialogFilterAdapter(this);
  JUMPOUT(0x1C3B8D890);
}

{

}

uint64_t siri::dialogengine::CATResultDialogFilterAdapter::size(siri::dialogengine::CATResultDialogFilterAdapter *this)
{
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)*((_QWORD *)this + 1);
  if (!v1)
    return 0;
  objc_msgSend(v1, "speak");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "count");

  return v3;
}

void sub_1BF8536BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::GetId(id *this@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  objc_msgSend(this[2], "objectAtIndexedSubscript:", a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(a3, (char *)objc_msgSend(v4, "UTF8String"));

}

void sub_1BF85371C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::GetFullPrint(id *this@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  objc_msgSend(this[4], "objectAtIndexedSubscript:", a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(a3, (char *)objc_msgSend(v4, "UTF8String"));

}

void sub_1BF853780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::GetFullSpeak(id *this@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  objc_msgSend(this[3], "objectAtIndexedSubscript:", a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(a3, (char *)objc_msgSend(v4, "UTF8String"));

}

void sub_1BF8537E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::GetSupportingPrint(id *this@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  objc_msgSend(this[6], "objectAtIndexedSubscript:", a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(a3, (char *)objc_msgSend(v4, "UTF8String"));

}

void sub_1BF853848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::GetSupportingSpeak(id *this@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  objc_msgSend(this[5], "objectAtIndexedSubscript:", a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(a3, (char *)objc_msgSend(v4, "UTF8String"));

}

void sub_1BF8538AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CATResultDialogFilterAdapter::GetSpokenOnly(id *this, uint64_t a2)
{
  void *v4;
  int v5;
  void *v6;
  int v7;
  int v8;

  objc_msgSend(this[9], "objectAtIndexedSubscript:", a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "BOOLValue");

  if (v5)
  {
    objc_msgSend(this[8], "objectAtIndexedSubscript:", a2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "BOOLValue");

    v8 = 1;
  }
  else
  {
    v7 = 0;
    v8 = 0;
  }
  return v7 | (v8 << 8);
}

void sub_1BF853940(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CATResultDialogFilterAdapter::GetPrintOnly(id *this, uint64_t a2)
{
  void *v2;
  int v3;

  objc_msgSend(this[7], "objectAtIndexedSubscript:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "BOOLValue");

  return v3 | 0x100u;
}

void sub_1BF853990(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::GetRedactedFullPrint(id *this@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  objc_msgSend(this[11], "objectAtIndexedSubscript:", a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(a3, (char *)objc_msgSend(v4, "UTF8String"));

}

void sub_1BF8539F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::GetRedactedFullSpeak(id *this@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  objc_msgSend(this[10], "objectAtIndexedSubscript:", a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(a3, (char *)objc_msgSend(v4, "UTF8String"));

}

void sub_1BF853A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::GetRedactedSupportingPrint(id *this@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  objc_msgSend(this[13], "objectAtIndexedSubscript:", a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(a3, (char *)objc_msgSend(v4, "UTF8String"));

}

void sub_1BF853AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void siri::dialogengine::CATResultDialogFilterAdapter::GetRedactedSupportingSpeak(id *this@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v4;

  objc_msgSend(this[12], "objectAtIndexedSubscript:", a2);
  v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  std::string::basic_string[abi:ne180100]<0>(a3, (char *)objc_msgSend(v4, "UTF8String"));

}

void sub_1BF853B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CATResultDialogFilterAdapter::ClearFullDialog(id *this, uint64_t a2)
{
  objc_msgSend(this[3], "setObject:atIndexedSubscript:", &stru_1E793AF80, a2);
  objc_msgSend(this[4], "setObject:atIndexedSubscript:", &stru_1E793AF80, a2);
  objc_msgSend(this[10], "setObject:atIndexedSubscript:", &stru_1E793AF80, a2);
  return objc_msgSend(this[11], "setObject:atIndexedSubscript:", &stru_1E793AF80, a2);
}

uint64_t siri::dialogengine::CATResultDialogFilterAdapter::ClearSupportingDialog(id *this, uint64_t a2)
{
  objc_msgSend(this[5], "setObject:atIndexedSubscript:", &stru_1E793AF80, a2);
  objc_msgSend(this[6], "setObject:atIndexedSubscript:", &stru_1E793AF80, a2);
  objc_msgSend(this[12], "setObject:atIndexedSubscript:", &stru_1E793AF80, a2);
  return objc_msgSend(this[13], "setObject:atIndexedSubscript:", &stru_1E793AF80, a2);
}

void siri::dialogengine::CATResultDialogFilterAdapter::SetPrintOnly(id *this)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(this[7], "setObject:atIndexedSubscript:");

}

void sub_1BF853C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CATResultDialogFilterAdapter::SetSpokenOnly(id *this, uint64_t a2)
{
  void *v4;

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(this[8], "setObject:atIndexedSubscript:", v4, a2);

  return objc_msgSend(this[9], "setObject:atIndexedSubscript:", MEMORY[0x1E0C9AAB0], a2);
}

void sub_1BF853CCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CATResultDialogFilterAdapter::MarkDialogForRemoval(id *this, uint64_t a2)
{
  return objc_msgSend(this[14], "addIndex:", a2);
}

uint64_t siri::dialogengine::CATResultDialogFilterAdapter::RemoveMarkedDialogs(uint64_t this)
{
  id *v1;

  if (*(_QWORD *)(this + 8))
  {
    v1 = (id *)this;
    this = objc_msgSend(*(id *)(this + 112), "count");
    if (this)
    {
      objc_msgSend(v1[2], "removeObjectsAtIndexes:", v1[14]);
      objc_msgSend(v1[3], "removeObjectsAtIndexes:", v1[14]);
      objc_msgSend(v1[4], "removeObjectsAtIndexes:", v1[14]);
      objc_msgSend(v1[5], "removeObjectsAtIndexes:", v1[14]);
      objc_msgSend(v1[6], "removeObjectsAtIndexes:", v1[14]);
      objc_msgSend(v1[7], "removeObjectsAtIndexes:", v1[14]);
      objc_msgSend(v1[8], "removeObjectsAtIndexes:", v1[14]);
      objc_msgSend(v1[9], "removeObjectsAtIndexes:", v1[14]);
      return objc_msgSend(v1[14], "removeAllIndexes");
    }
  }
  return this;
}

siri::dialogengine::CATResultDialogFilterAdapter *siri::dialogengine::CATResultDialogFilterAdapter::CATResultDialogFilterAdapter(siri::dialogengine::CATResultDialogFilterAdapter *this, CATResult *a2)
{
  CATResult *v3;
  CATResult *v4;
  CATResult *v5;
  void **v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;

  v3 = a2;
  *(_QWORD *)this = &off_1E792A1D0;
  v4 = v3;
  v5 = v4;
  *((_OWORD *)this + 1) = 0u;
  v6 = (void **)((char *)this + 16);
  *((_QWORD *)this + 1) = v4;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_QWORD *)this + 14) = 0;
  if (v4)
  {
    -[CATResult dialogId](v4, "dialogId");
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = *v6;
    *v6 = (void *)v7;

    -[CATResult speak](v5, "speak");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = (void *)*((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = v9;

    -[CATResult print](v5, "print");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)*((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = v11;

    -[CATResult captionSpeak](v5, "captionSpeak");
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = (void *)*((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = v13;

    -[CATResult captionPrint](v5, "captionPrint");
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = (void *)*((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = v15;

    -[CATResult printOnly](v5, "printOnly");
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = (void *)*((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = v17;

    -[CATResult spokenOnly](v5, "spokenOnly");
    v19 = objc_claimAutoreleasedReturnValue();
    v20 = (void *)*((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = v19;

    -[CATResult spokenOnlyDefined](v5, "spokenOnlyDefined");
    v21 = objc_claimAutoreleasedReturnValue();
    v22 = (void *)*((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v21;

    -[CATResult redactedSpeak](v5, "redactedSpeak");
    v23 = objc_claimAutoreleasedReturnValue();
    v24 = (void *)*((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v23;

    -[CATResult redactedPrint](v5, "redactedPrint");
    v25 = objc_claimAutoreleasedReturnValue();
    v26 = (void *)*((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v25;

    -[CATResult redactedCaptionSpeak](v5, "redactedCaptionSpeak");
    v27 = objc_claimAutoreleasedReturnValue();
    v28 = (void *)*((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v27;

    -[CATResult redactedCaptionPrint](v5, "redactedCaptionPrint");
    v29 = objc_claimAutoreleasedReturnValue();
    v30 = (void *)*((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v29;

    v31 = objc_opt_new();
    v32 = (void *)*((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v31;

  }
  return this;
}

void sub_1BF853FB8(_Unwind_Exception *a1)
{
  id *v1;
  void *v2;

  _Unwind_Resume(a1);
}

char *CATExecute(char *a1)
{
  return CATExecuteWithStrings(a1, 0, 0);
}

char *CATExecuteWithStrings(char *a1, char *a2, char *a3)
{
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  void *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v14;
  char v15;
  std::string __p;
  siri::dialogengine *v17;
  std::__shared_weak_count *v18;
  std::string v19;
  std::string v20;
  void *v21[2];
  char v22;

  if (a1)
    v5 = a1;
  else
    v5 = "";
  std::string::basic_string[abi:ne180100]<0>(v21, v5);
  if (a2)
    v6 = a2;
  else
    v6 = "";
  std::string::basic_string[abi:ne180100]<0>(&v20, v6);
  if (a3)
    v7 = a3;
  else
    v7 = "";
  std::string::basic_string[abi:ne180100]<0>(&v19, v7);
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  siri::dialogengine::PrepareRequestFromJson((const char *)v21, &v20, &v19, &__p, &v17);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v17)
  {
    siri::dialogengine::GenerateResponse((uint64_t *)&__p, v17);
    std::string::basic_string[abi:ne180100]<0>(&v14, "");
    if (v15 < 0)
      operator delete(v14);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      v9 = (void *)__p.__r_.__value_.__r.__words[0];
      v8 = strdup(__p.__r_.__value_.__l.__data_);
      operator delete(v9);
    }
    else
    {
      v8 = strdup((const char *)&__p);
    }
  }
  else
  {
    v8 = 0;
  }
  v10 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  if (v22 < 0)
    operator delete(v21[0]);
  return v8;
}

void sub_1BF8541C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;

  if (a18 < 0)
    operator delete(__p);
  std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100]((uint64_t)&a19);
  if (a26 < 0)
    operator delete(a21);
  if (*(char *)(v26 - 57) < 0)
    operator delete(*(void **)(v26 - 80));
  if (*(char *)(v26 - 33) < 0)
    operator delete(*(void **)(v26 - 56));
  _Unwind_Resume(a1);
}

char *CATValidate(char *a1)
{
  return CATValidateWithStrings(a1, 0, 0);
}

char *CATValidateWithStrings(char *a1, char *a2, char *a3)
{
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  void *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v14;
  char v15;
  std::string __p;
  siri::dialogengine *v17;
  std::__shared_weak_count *v18;
  std::string v19;
  std::string v20;
  void *v21[2];
  char v22;

  if (a1)
    v5 = a1;
  else
    v5 = "";
  std::string::basic_string[abi:ne180100]<0>(v21, v5);
  if (a2)
    v6 = a2;
  else
    v6 = "";
  std::string::basic_string[abi:ne180100]<0>(&v20, v6);
  if (a3)
    v7 = a3;
  else
    v7 = "";
  std::string::basic_string[abi:ne180100]<0>(&v19, v7);
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  siri::dialogengine::PrepareRequestFromJson((const char *)v21, &v20, &v19, &__p, &v17);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v17)
  {
    siri::dialogengine::GenerateValidationResponse(v17, &__p);
    std::string::basic_string[abi:ne180100]<0>(&v14, "");
    if (v15 < 0)
      operator delete(v14);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      v9 = (void *)__p.__r_.__value_.__r.__words[0];
      v8 = strdup(__p.__r_.__value_.__l.__data_);
      operator delete(v9);
    }
    else
    {
      v8 = strdup((const char *)&__p);
    }
  }
  else
  {
    v8 = 0;
  }
  v10 = v18;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v20.__r_.__value_.__l.__data_);
  if (v22 < 0)
    operator delete(v21[0]);
  return v8;
}

void sub_1BF8543CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  uint64_t v26;

  if (a18 < 0)
    operator delete(__p);
  std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100]((uint64_t)&a19);
  if (a26 < 0)
    operator delete(a21);
  if (*(char *)(v26 - 57) < 0)
    operator delete(*(void **)(v26 - 80));
  if (*(char *)(v26 - 33) < 0)
    operator delete(*(void **)(v26 - 56));
  _Unwind_Resume(a1);
}

void CATRegisterBundle(char *__s, char *a2)
{
  const char *v3;
  unint64_t v4;
  const char *v5;
  unint64_t v6;
  char *v7;
  void *__p[2];
  unsigned __int8 v9;
  void *v10[2];
  unsigned __int8 v11;

  if (!__s)
  {
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"CATRegisterBundle: bundleId is null", a2);
    return;
  }
  std::string::basic_string[abi:ne180100]<0>(v10, __s);
  v4 = v11;
  if ((v11 & 0x80u) != 0)
    v4 = (unint64_t)v10[1];
  if (v4)
  {
    if (a2)
    {
      std::string::basic_string[abi:ne180100]<0>(__p, a2);
      v6 = v9;
      if ((v9 & 0x80u) != 0)
        v6 = (unint64_t)__p[1];
      if (v6)
        siri::dialogengine::GradingAllowListFactory::RegisterBundle((char *)v10, (__int128 *)__p);
      else
        siri::dialogengine::Log::Error((siri::dialogengine::Log *)"CATRegisterBundle: templateDir is empty", v5);
      if ((char)v9 < 0)
        operator delete(__p[0]);
      goto LABEL_17;
    }
    v7 = "CATRegisterBundle: templateDir is null";
  }
  else
  {
    v7 = "CATRegisterBundle: bundleId is empty";
  }
  siri::dialogengine::Log::Error((siri::dialogengine::Log *)v7, v3);
LABEL_17:
  if ((char)v11 < 0)
    operator delete(v10[0]);
}

void sub_1BF85453C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
    operator delete(__p);
  if (a20 < 0)
    operator delete(a15);
  _Unwind_Resume(exception_object);
}

void CATInitLogging(uint64_t a1, int a2, char **a3)
{
  std::vector<std::string>::pointer end;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  std::string *v9;
  std::vector<std::string> v10;
  std::__split_buffer<std::string> __v;

  memset(&v10, 0, sizeof(v10));
  if (a2 >= 1)
  {
    end = 0;
    v5 = a2;
    do
    {
      if (end >= v10.__end_cap_.__value_)
      {
        v6 = 0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)v10.__begin_) >> 3);
        v7 = v6 + 1;
        if (v6 + 1 > 0xAAAAAAAAAAAAAAALL)
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        if (0x5555555555555556 * (((char *)v10.__end_cap_.__value_ - (char *)v10.__begin_) >> 3) > v7)
          v7 = 0x5555555555555556 * (((char *)v10.__end_cap_.__value_ - (char *)v10.__begin_) >> 3);
        if (0xAAAAAAAAAAAAAAABLL * (((char *)v10.__end_cap_.__value_ - (char *)v10.__begin_) >> 3) >= 0x555555555555555)
          v8 = 0xAAAAAAAAAAAAAAALL;
        else
          v8 = v7;
        __v.__end_cap_.__value_ = (std::allocator<std::string> *)&v10.__end_cap_;
        if (v8)
          v9 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&v10.__end_cap_, v8);
        else
          v9 = 0;
        __v.__first_ = v9;
        __v.__begin_ = v9 + v6;
        __v.__end_ = __v.__begin_;
        __v.__end_cap_.__value_ = &v9[v8];
        std::string::basic_string[abi:ne180100]<0>(__v.__begin_->__r_.__value_.__r.__words, *a3);
        ++__v.__end_;
        std::vector<std::string>::__swap_out_circular_buffer(&v10, &__v);
        end = v10.__end_;
        std::__split_buffer<std::string>::~__split_buffer(&__v);
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>(end++, *a3);
      }
      v10.__end_ = end;
      ++a3;
      --v5;
    }
    while (v5);
  }
  __v.__first_ = (std::__split_buffer<std::string>::pointer)&v10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__v);
}

void sub_1BF8546CC(_Unwind_Exception *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, std::__split_buffer<std::string> *a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void **a13)
{
  a13 = (void **)&a10;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a13);
  _Unwind_Resume(a1);
}

sqlite3 *siri::dialogengine::OpenDatabase(const char *a1)
{
  char *v1;
  std::string *v2;
  __int128 v3;
  std::string v5;
  void *__p[2];
  std::string::size_type v7;
  sqlite3 *ppDb;

  ppDb = 0;
  if (a1[23] < 0)
    a1 = *(const char **)a1;
  if (!sqlite3_open(a1, &ppDb))
    return ppDb;
  v1 = (char *)sqlite3_errmsg(ppDb);
  std::string::basic_string[abi:ne180100]<0>(&v5, v1);
  v2 = std::string::insert(&v5, 0, "Cannot open database: ");
  v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v7 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 3u);
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v5.__r_.__value_.__l.__data_);
  sqlite3_close(ppDb);
  return 0;
}

void sub_1BF8547C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::CloseDatabase(siri::dialogengine *this, sqlite3 *a2)
{
  uint64_t result;
  char *v4;
  std::string *v5;
  __int128 v6;
  std::string v7;
  void *__p[2];
  std::string::size_type v9;

  if (this)
  {
    result = sqlite3_close(this);
    if (!(_DWORD)result)
      return result;
    v4 = (char *)sqlite3_errmsg(this);
    std::string::basic_string[abi:ne180100]<0>(&v7, v4);
    v5 = std::string::insert(&v7, 0, "Cannot close database: ");
    v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v9 = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 3u);
    if (SHIBYTE(v9) < 0)
      operator delete(__p[0]);
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v7.__r_.__value_.__l.__data_);
  }
  else
  {
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Database pointer is null!", (const char *)a2);
  }
  return 1;
}

void sub_1BF8548AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::DoesRowExist(const char *a1, uint64_t a2, sqlite3 *a3)
{
  int v6;
  const char *v7;
  uint64_t v9[3];
  void *__p[2];
  char v11;
  uint64_t (*v12)(siri::dialogengine *, void *, int, char **, char **);
  std::string v13;

  v13.__r_.__value_.__s.__data_[0] = 0;
  std::string::basic_string[abi:ne180100]<0>(__p, "doesContainCallback");
  v12 = siri::dialogengine::doesExist;
  memset(v9, 0, sizeof(v9));
  v6 = siri::dialogengine::SelectWhere(a2, a1, (uint64_t)__p, a3, &v13, v9);
  *(std::string::size_type *)((char *)v13.__r_.__value_.__r.__words + 1) = (std::string::size_type)v9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)((char *)v13.__r_.__value_.__r.__words
                                                                                + 1));
  if (v11 < 0)
    operator delete(__p[0]);
  if (v6)
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Error occurred during SQL query!", v7);
  return v13.__r_.__value_.__s.__data_[0];
}

void sub_1BF854990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v19 - 40) = v18;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v19 - 40));
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::doesExist(siri::dialogengine *this, void *a2, int a3, char **a4, char **a5)
{
  *(_DWORD *)this = 1;
  return 0;
}

uint64_t siri::dialogengine::SelectWhere(uint64_t a1, const char *a2, uint64_t a3, sqlite3 *a4, std::string *a5, uint64_t *a6)
{
  std::string *v11;
  __int128 v12;
  std::string *v13;
  __int128 v14;
  uint64_t v15;
  std::string *v16;
  __int128 v17;
  int v18;
  const std::string::value_type *v19;
  std::string::size_type v20;
  std::string *v21;
  __int128 v22;
  std::string *v23;
  __int128 v24;
  __int128 *v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;
  size_t size;
  std::string *v30;
  std::string *v31;
  std::string *v32;
  std::string::size_type v33;
  std::string *v34;
  __int128 v35;
  std::string *v36;
  __int128 v37;
  std::string *p_p;
  std::string::size_type v39;
  _BOOL4 v40;
  _BOOL4 v41;
  std::string *v42;
  _BOOL4 v43;
  const char *v44;
  _BOOL4 v45;
  std::string *v46;
  __int128 v47;
  unint64_t v48;
  std::vector<std::pair<std::string, std::string>> *v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  std::vector<std::pair<std::string, std::string>> *v55;
  std::vector<std::pair<std::string, std::string>> *v56;
  std::string::size_type v57;
  std::string *v60;
  std::string v61;
  std::string v62;
  std::string v63;
  std::string v64;
  std::string __p;
  std::string v66;
  __int128 v67;
  std::string::size_type v68;
  char *errmsg;

  if (*(_QWORD *)a2 == *((_QWORD *)a2 + 1))
  {
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Nothing to query!", a2);
    return 1;
  }
  errmsg = 0;
  if (*a6 == a6[1])
  {
    std::string::basic_string[abi:ne180100]<0>(&v67, " * ");
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, ", ");
    siri::dialogengine::StringJoinInternal<std::vector<std::string>>((uint64_t)&v66, *a6, a6[1], (uint64_t)&__p);
    v11 = std::string::insert(&v66, 0, " ");
    v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v62.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v62.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    v13 = std::string::append(&v62, " ");
    v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v68 = v13->__r_.__value_.__r.__words[2];
    v67 = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v62.__r_.__value_.__l.__data_);
    if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v66.__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::operator+<char>();
  v16 = std::string::append(&v64, "FROM ");
  v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  v18 = *(char *)(a1 + 23);
  if (v18 >= 0)
    v19 = (const std::string::value_type *)a1;
  else
    v19 = *(const std::string::value_type **)a1;
  if (v18 >= 0)
    v20 = *(unsigned __int8 *)(a1 + 23);
  else
    v20 = *(_QWORD *)(a1 + 8);
  v21 = std::string::append(&__p, v19, v20);
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v62.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v62.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  v23 = std::string::append(&v62, " WHERE ");
  v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v66.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v62.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v60 = a5;
  if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v64.__r_.__value_.__l.__data_);
  v25 = *(__int128 **)a2;
  v26 = (__int128 *)*((_QWORD *)a2 + 1);
  if (*(__int128 **)a2 != v26)
  {
    do
    {
      if (*((char *)v25 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v62, *(const std::string::value_type **)v25, *((_QWORD *)v25 + 1));
      }
      else
      {
        v27 = *v25;
        v62.__r_.__value_.__r.__words[2] = *((_QWORD *)v25 + 2);
        *(_OWORD *)&v62.__r_.__value_.__l.__data_ = v27;
      }
      if (*((char *)v25 + 47) < 0)
      {
        std::string::__init_copy_ctor_external(&v63, *((const std::string::value_type **)v25 + 3), *((_QWORD *)v25 + 4));
      }
      else
      {
        v28 = *(__int128 *)((char *)v25 + 24);
        v63.__r_.__value_.__r.__words[2] = *((_QWORD *)v25 + 5);
        *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v28;
      }
      if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v62.__r_.__value_.__r.__words[2]);
      else
        size = v62.__r_.__value_.__l.__size_;
      std::string::basic_string[abi:ne180100]((uint64_t)&v61, size + 7);
      if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v30 = &v61;
      else
        v30 = (std::string *)v61.__r_.__value_.__r.__words[0];
      if (size)
      {
        if ((v62.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v31 = &v62;
        else
          v31 = (std::string *)v62.__r_.__value_.__r.__words[0];
        memmove(v30, v31, size);
      }
      strcpy((char *)v30 + size, " LIKE '");
      if ((v63.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v32 = &v63;
      else
        v32 = (std::string *)v63.__r_.__value_.__r.__words[0];
      if ((v63.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v33 = HIBYTE(v63.__r_.__value_.__r.__words[2]);
      else
        v33 = v63.__r_.__value_.__l.__size_;
      v34 = std::string::append(&v61, (const std::string::value_type *)v32, v33);
      v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
      v64.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v64.__r_.__value_.__l.__data_ = v35;
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      v36 = std::string::append(&v64, "' AND ");
      v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v37;
      v36->__r_.__value_.__l.__size_ = 0;
      v36->__r_.__value_.__r.__words[2] = 0;
      v36->__r_.__value_.__r.__words[0] = 0;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        p_p = &__p;
      else
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v39 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      else
        v39 = __p.__r_.__value_.__l.__size_;
      std::string::append(&v66, (const std::string::value_type *)p_p, v39);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v64.__r_.__value_.__l.__data_);
      if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v61.__r_.__value_.__l.__data_);
      if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v63.__r_.__value_.__l.__data_);
      if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v62.__r_.__value_.__l.__data_);
      v25 += 3;
    }
    while (v25 != v26);
  }
  siri::dialogengine::StringTrimRight("AND ", &v66, &v62);
  if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v66.__r_.__value_.__l.__data_);
  v66 = v62;
  std::operator+<char>();
  siri::dialogengine::Log::Debug((siri::dialogengine *)&v62);
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v62.__r_.__value_.__l.__data_);
  std::string::basic_string[abi:ne180100]<0>(&v62, "doesContainCallback");
  v40 = siri::dialogengine::StringsEqual(a3, (uint64_t)&v62);
  v41 = v40;
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v62.__r_.__value_.__l.__data_);
    if (v41)
      goto LABEL_70;
  }
  else if (v40)
  {
LABEL_70:
    LODWORD(v62.__r_.__value_.__l.__data_) = 0;
    a5->__r_.__value_.__s.__data_[0] = 0;
    if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v42 = &v66;
    else
      v42 = (std::string *)v66.__r_.__value_.__r.__words[0];
    if (!sqlite3_exec(a4, (const char *)v42, *(int (__cdecl **)(void *, int, char **, char **))(a3 + 24), &v62, &errmsg))
    {
      v15 = 0;
      if (LODWORD(v62.__r_.__value_.__l.__data_))
        a5->__r_.__value_.__s.__data_[0] = 1;
      goto LABEL_108;
    }
    fprintf((FILE *)*MEMORY[0x1E0C80C10], "SQL error: %s\n", errmsg);
    sqlite3_free(errmsg);
    goto LABEL_87;
  }
  std::string::basic_string[abi:ne180100]<0>(&v62, "getRows");
  v43 = siri::dialogengine::StringsEqual(a3, (uint64_t)&v62);
  v45 = v43;
  if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v62.__r_.__value_.__l.__data_);
    if (v45)
    {
LABEL_78:
      memset(&v62, 0, sizeof(v62));
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v46 = &v66;
      else
        v46 = (std::string *)v66.__r_.__value_.__r.__words[0];
      if (sqlite3_exec(a4, (const char *)v46, *(int (__cdecl **)(void *, int, char **, char **))(a3 + 24), &v62, &errmsg))
      {
        fprintf((FILE *)*MEMORY[0x1E0C80C10], "SQL error: %s\n", errmsg);
        sqlite3_free(errmsg);
        v15 = 1;
      }
      else if (&v62 == a5)
      {
        v15 = 0;
      }
      else
      {
        v47 = *(_OWORD *)&v62.__r_.__value_.__l.__data_;
        v48 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v62.__r_.__value_.__l.__size_ - v62.__r_.__value_.__r.__words[0]) >> 3);
        v49 = (std::vector<std::pair<std::string, std::string>> *)v60->__r_.__value_.__r.__words[0];
        if (0xAAAAAAAAAAAAAAABLL
           * ((uint64_t)(v60->__r_.__value_.__r.__words[2] - v60->__r_.__value_.__r.__words[0]) >> 3) >= v48)
        {
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v60->__r_.__value_.__l.__size_ - (_QWORD)v49) >> 3) >= v48)
          {
            v56 = std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::vector<siri::dialogengine::DatabaseField> *,std::vector<siri::dialogengine::DatabaseField> *,std::vector<siri::dialogengine::DatabaseField> *>((std::vector<std::pair<std::string, std::string>> *)v62.__r_.__value_.__l.__data_, (std::vector<std::pair<std::string, std::string>> *)v62.__r_.__value_.__l.__size_, v49);
            v57 = v60->__r_.__value_.__l.__size_;
            while ((std::vector<std::pair<std::string, std::string>> *)v57 != v56)
            {
              v57 -= 24;
              __p.__r_.__value_.__r.__words[0] = v57;
              std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
            }
            v15 = 0;
            v60->__r_.__value_.__l.__size_ = (std::string::size_type)v56;
            goto LABEL_107;
          }
          v55 = (std::vector<std::pair<std::string, std::string>> *)(v62.__r_.__value_.__r.__words[0]
                                                                   + 8
                                                                   * ((uint64_t)(v60->__r_.__value_.__l.__size_
                                                                              - (_QWORD)v49) >> 3));
          std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::vector<siri::dialogengine::DatabaseField> *,std::vector<siri::dialogengine::DatabaseField> *,std::vector<siri::dialogengine::DatabaseField> *>((std::vector<std::pair<std::string, std::string>> *)v62.__r_.__value_.__l.__data_, v55, v49);
          v54 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<siri::dialogengine::DatabaseField>>,std::vector<siri::dialogengine::DatabaseField>*,std::vector<siri::dialogengine::DatabaseField>*,std::vector<siri::dialogengine::DatabaseField>*>((uint64_t)&v60->__r_.__value_.__r.__words[2], (uint64_t *)v55, *((uint64_t **)&v47 + 1), (_QWORD *)v60->__r_.__value_.__l.__size_);
        }
        else
        {
          std::vector<std::vector<siri::dialogengine::DatabaseField>>::__vdeallocate((void ***)v60);
          if (v48 > 0xAAAAAAAAAAAAAAALL)
            goto LABEL_113;
          v50 = 0x5555555555555556
              * ((uint64_t)(v60->__r_.__value_.__r.__words[2] - v60->__r_.__value_.__r.__words[0]) >> 3);
          if (v50 <= v48)
            v50 = v48;
          v51 = 0xAAAAAAAAAAAAAAABLL
              * ((uint64_t)(v60->__r_.__value_.__r.__words[2] - v60->__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555
              ? 0xAAAAAAAAAAAAAAALL
              : v50;
          if (v51 > 0xAAAAAAAAAAAAAAALL)
LABEL_113:
            std::vector<BOOL>::__throw_length_error[abi:ne180100]();
          v52 = std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::string>>>(v51);
          v60->__r_.__value_.__r.__words[0] = (std::string::size_type)v52;
          v60->__r_.__value_.__l.__size_ = (std::string::size_type)v52;
          v60->__r_.__value_.__r.__words[2] = (std::string::size_type)&v52[3 * v53];
          v54 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<siri::dialogengine::DatabaseField>>,std::vector<siri::dialogengine::DatabaseField>*,std::vector<siri::dialogengine::DatabaseField>*,std::vector<siri::dialogengine::DatabaseField>*>((uint64_t)&v60->__r_.__value_.__r.__words[2], (uint64_t *)v47, *((uint64_t **)&v47 + 1), v52);
        }
        v15 = 0;
        v60->__r_.__value_.__l.__size_ = (std::string::size_type)v54;
      }
LABEL_107:
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v62;
      std::vector<std::vector<siri::dialogengine::DatabaseField>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
      goto LABEL_108;
    }
  }
  else if (v43)
  {
    goto LABEL_78;
  }
  siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Unknown SQL callback type!", v44);
LABEL_87:
  v15 = 1;
LABEL_108:
  if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v66.__r_.__value_.__l.__data_);
  if (SHIBYTE(v68) < 0)
    operator delete((void *)v67);
  return v15;
}

void sub_1BF855110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void **a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *(_QWORD *)(v49 + 8) = v48;
  a36 = &a20;
  std::vector<std::vector<siri::dialogengine::DatabaseField>>::__destroy_vector::operator()[abi:ne180100](&a36);
  if (a48 < 0)
    operator delete(__p);
  if (*(char *)(v50 - 121) < 0)
    operator delete(*(void **)(v50 - 144));
  _Unwind_Resume(a1);
}

void std::vector<std::vector<siri::dialogengine::DatabaseField>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  void **v1;
  void **v2;
  void **v4;
  void *v5;
  void **v6;

  v1 = *a1;
  v2 = (void **)**a1;
  if (v2)
  {
    v4 = (void **)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        v6 = v4;
        std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

std::vector<std::pair<std::string, std::string>> *std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<std::vector<siri::dialogengine::DatabaseField> *,std::vector<siri::dialogengine::DatabaseField> *,std::vector<siri::dialogengine::DatabaseField> *>(std::vector<std::pair<std::string, std::string>> *a1, std::vector<std::pair<std::string, std::string>> *a2, std::vector<std::pair<std::string, std::string>> *this)
{
  std::vector<std::pair<std::string, std::string>> *v5;

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      if (v5 != this)
        std::vector<siri::dialogengine::DatabaseField>::__assign_with_size[abi:ne180100]<siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>(this, &v5->__begin_->first, &v5->__end_->first, 0xAAAAAAAAAAAAAAABLL * (((char *)v5->__end_ - (char *)v5->__begin_) >> 4));
      ++v5;
      ++this;
    }
    while (v5 != a2);
  }
  return this;
}

_QWORD *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::vector<siri::dialogengine::DatabaseField>>,std::vector<siri::dialogengine::DatabaseField>*,std::vector<siri::dialogengine::DatabaseField>*,std::vector<siri::dialogengine::DatabaseField>*>(uint64_t a1, uint64_t *a2, uint64_t *a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t *v6;
  _QWORD v8[3];
  char v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a4;
  v10 = a4;
  v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  v9 = 0;
  if (a2 != a3)
  {
    v6 = a2;
    do
    {
      *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
      std::vector<siri::dialogengine::DatabaseField>::__init_with_size[abi:ne180100]<siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>(v4, *v6, v6[1], 0xAAAAAAAAAAAAAAABLL * ((v6[1] - *v6) >> 4));
      v4 = v11 + 3;
      v11 += 3;
      v6 += 3;
    }
    while (v6 != a3);
  }
  v9 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<siri::dialogengine::DatabaseField>>,std::vector<siri::dialogengine::DatabaseField>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v8);
  return v4;
}

void sub_1BF855428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<siri::dialogengine::DatabaseField>>,std::vector<siri::dialogengine::DatabaseField>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<siri::dialogengine::DatabaseField>>::__vdeallocate(void ***a1)
{
  void **v1;
  void **v3;
  void **v4;
  void **v5;

  v1 = *a1;
  if (*a1)
  {
    v3 = a1[1];
    v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v3 -= 3;
        v5 = v3;
        std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100](&v5);
      }
      while (v3 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

_QWORD *std::vector<siri::dialogengine::DatabaseField>::__init_with_size[abi:ne180100]<siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>(_QWORD *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;

  if (a4)
  {
    v6 = result;
    std::vector<siri::dialogengine::DatabaseField>::__vallocate[abi:ne180100](result, a4);
    result = (_QWORD *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::DatabaseField>,siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1BF855510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 + 8) = v10;
  std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::vector<siri::dialogengine::DatabaseField>>,std::vector<siri::dialogengine::DatabaseField>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  void **v3;
  void **v4;
  void **v5;

  if (!*(_BYTE *)(a1 + 24))
  {
    v3 = **(void ****)(a1 + 16);
    v4 = **(void ****)(a1 + 8);
    while (v3 != v4)
    {
      v3 -= 3;
      v5 = v3;
      std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100](&v5);
    }
  }
  return a1;
}

char *std::vector<siri::dialogengine::DatabaseField>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x555555555555556)
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::DatabaseField>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[48 * v4];
  return result;
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::DatabaseField>,siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  __int128 v10;
  std::string *v11;
  const std::string::value_type **v12;
  __int128 v13;

  if (a2 != a3)
  {
    v7 = 0;
    do
    {
      v8 = a4 + v7;
      v9 = (__int128 *)(a2 + v7);
      if (*(char *)(a2 + v7 + 23) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)(a4 + v7), *(const std::string::value_type **)v9, *((_QWORD *)v9 + 1));
      }
      else
      {
        v10 = *v9;
        *(_QWORD *)(v8 + 16) = *((_QWORD *)v9 + 2);
        *(_OWORD *)v8 = v10;
      }
      v11 = (std::string *)(a4 + v7 + 24);
      v12 = (const std::string::value_type **)(a2 + v7 + 24);
      if (*(char *)(a2 + v7 + 47) < 0)
      {
        std::string::__init_copy_ctor_external(v11, *v12, *(_QWORD *)(a2 + v7 + 32));
      }
      else
      {
        v13 = *(_OWORD *)v12;
        *(_QWORD *)(a4 + v7 + 40) = *(_QWORD *)(a2 + v7 + 40);
        *(_OWORD *)&v11->__r_.__value_.__l.__data_ = v13;
      }
      v7 += 48;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1BF85569C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  uint64_t v2;

  if (*(char *)(v2 + 23) < 0)
    operator delete(*(void **)v2);
  while (v2 != v1)
  {
    v2 -= 48;
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>(v2);
  }
  _Unwind_Resume(exception_object);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::DatabaseField>>(unint64_t a1)
{
  if (a1 >= 0x555555555555556)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(48 * a1);
}

void std::vector<siri::dialogengine::DatabaseField>::__assign_with_size[abi:ne180100]<siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>(std::vector<std::pair<std::string, std::string>> *this, std::string *__str, std::string *a3, unint64_t a4)
{
  std::__compressed_pair<std::pair<std::string, std::string> *, std::allocator<std::pair<std::string, std::string>>> *p_end_cap;
  std::vector<std::pair<std::string, std::string>>::pointer begin;
  unint64_t v10;
  unint64_t v11;
  std::pair<std::string, std::string> *v12;
  std::string *v13;
  std::pair<std::string, std::string> *v14;
  std::vector<std::pair<std::string, std::string>>::pointer i;

  p_end_cap = &this->__end_cap_;
  begin = this->__begin_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 4) < a4)
  {
    std::vector<siri::dialogengine::DatabaseField>::__vdeallocate(this);
    if (a4 > 0x555555555555555)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = 0x5555555555555556 * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 4);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_cap_.__value_ - (char *)this->__begin_) >> 4) >= 0x2AAAAAAAAAAAAAALL)
      v11 = 0x555555555555555;
    else
      v11 = v10;
    std::vector<siri::dialogengine::DatabaseField>::__vallocate[abi:ne180100](this, v11);
    v12 = (std::pair<std::string, std::string> *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::DatabaseField>,siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>((uint64_t)p_end_cap, (uint64_t)__str, (uint64_t)a3, (uint64_t)this->__end_);
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * (((char *)this->__end_ - (char *)begin) >> 4) < a4)
  {
    v13 = (std::string *)((char *)__str + 16 * (((char *)this->__end_ - (char *)begin) >> 4));
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<siri::dialogengine::DatabaseField *,siri::dialogengine::DatabaseField *,siri::dialogengine::DatabaseField *>(__str, v13, &begin->first);
    v12 = (std::pair<std::string, std::string> *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::DatabaseField>,siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>((uint64_t)p_end_cap, (uint64_t)v13, (uint64_t)a3, (uint64_t)this->__end_);
LABEL_11:
    this->__end_ = v12;
    return;
  }
  v14 = (std::pair<std::string, std::string> *)std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<siri::dialogengine::DatabaseField *,siri::dialogengine::DatabaseField *,siri::dialogengine::DatabaseField *>(__str, a3, &begin->first);
  for (i = this->__end_; i != v14; std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)i))
    --i;
  this->__end_ = v14;
}

void sub_1BF855874(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1BF85587C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

std::string *std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<siri::dialogengine::DatabaseField *,siri::dialogengine::DatabaseField *,siri::dialogengine::DatabaseField *>(std::string *__str, std::string *a2, std::string *this)
{
  std::string *v5;

  if (__str != a2)
  {
    v5 = __str;
    do
    {
      std::string::operator=(this, v5);
      std::string::operator=(this + 1, v5 + 1);
      this += 2;
      v5 += 2;
    }
    while (v5 != a2);
  }
  return this;
}

void std::vector<siri::dialogengine::DatabaseField>::__vdeallocate(std::vector<std::pair<std::string, std::string>> *this)
{
  std::pair<std::string, std::string> *begin;
  std::vector<std::pair<std::string, std::string>>::pointer end;
  std::vector<std::pair<std::string, std::string>>::pointer v4;

  begin = this->__begin_;
  if (this->__begin_)
  {
    end = this->__end_;
    v4 = this->__begin_;
    if (end != begin)
    {
      do
        std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)--end);
      while (end != begin);
      v4 = this->__begin_;
    }
    this->__end_ = begin;
    operator delete(v4);
    this->__begin_ = 0;
    this->__end_ = 0;
    this->__end_cap_.__value_ = 0;
  }
}

void siri::dialogengine::GetRows(const char *a1@<X0>, uint64_t a2@<X1>, sqlite3 *a3@<X2>, uint64_t *a4@<X3>, std::string *a5@<X8>)
{
  int v10;
  const char *v11;
  int v12;
  void *__p[2];
  char v14;
  uint64_t (*v15)(int64x2_t *, void *, uint64_t, char **, char **);

  a5->__r_.__value_.__r.__words[0] = 0;
  a5->__r_.__value_.__l.__size_ = 0;
  a5->__r_.__value_.__r.__words[2] = 0;
  std::string::basic_string[abi:ne180100]<0>(__p, "getRows");
  v15 = siri::dialogengine::getRows;
  v10 = siri::dialogengine::SelectWhere(a2, a1, (uint64_t)__p, a3, a5, a4);
  v12 = v10;
  if (v14 < 0)
  {
    operator delete(__p[0]);
    if (!v12)
      return;
    goto LABEL_5;
  }
  if (v10)
LABEL_5:
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Error occurred during SQL query!", v11);
}

void sub_1BF8559F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17)
{
  if (a15 < 0)
    operator delete(__p);
  std::vector<std::vector<siri::dialogengine::DatabaseField>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a17);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::getRows(int64x2_t *this, void *a2, uint64_t a3, char **a4, char **a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  _QWORD *v37;
  __int128 v38;
  int64x2_t v39;
  uint64_t v40;
  void *v43[3];
  __int128 __p;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;

  v46 = 0;
  v47 = 0;
  v48 = 0;
  if ((int)a2 >= 1)
  {
    v7 = 0;
    v8 = a2;
    while (1)
    {
      std::string::basic_string[abi:ne180100]<0>(v43, a4[v7]);
      v9 = *(_QWORD *)(a3 + 8 * v7) ? *(char **)(a3 + 8 * v7) : "";
      std::string::basic_string[abi:ne180100]<0>(&__p, v9);
      v10 = v47;
      if (v47 >= v48)
        break;
      v11 = *(_OWORD *)v43;
      *(void **)(v47 + 16) = v43[2];
      *(_OWORD *)v10 = v11;
      memset(v43, 0, sizeof(v43));
      v12 = v45;
      *(_OWORD *)(v10 + 24) = __p;
      *(_QWORD *)(v10 + 40) = v12;
      v45 = 0;
      __p = 0uLL;
      v47 = v10 + 48;
LABEL_26:
      if (SHIBYTE(v43[2]) < 0)
        operator delete(v43[0]);
      if (++v7 == v8)
        goto LABEL_32;
    }
    v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v47 - v46) >> 4);
    v14 = v13 + 1;
    if (v13 + 1 > 0x555555555555555)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    if (0x5555555555555556 * ((uint64_t)(v48 - v46) >> 4) > v14)
      v14 = 0x5555555555555556 * ((uint64_t)(v48 - v46) >> 4);
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v48 - v46) >> 4) >= 0x2AAAAAAAAAAAAAALL)
      v15 = 0x555555555555555;
    else
      v15 = v14;
    if (v15)
      v15 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::DatabaseField>>(v15);
    else
      v16 = 0;
    v17 = v15 + 48 * v13;
    v18 = *(_OWORD *)v43;
    *(void **)(v17 + 16) = v43[2];
    *(_OWORD *)v17 = v18;
    memset(v43, 0, sizeof(v43));
    v19 = __p;
    *(_QWORD *)(v17 + 40) = v45;
    *(_OWORD *)(v17 + 24) = v19;
    v45 = 0;
    __p = 0uLL;
    v20 = v17 + 48;
    v21 = v46;
    v22 = (char *)v47;
    if (v47 == v46)
    {
      v46 = v17;
      v47 = v17 + 48;
      v48 = v15 + 48 * v16;
      if (!v22)
      {
LABEL_24:
        v47 = v20;
        if (SHIBYTE(v45) < 0)
          operator delete((void *)__p);
        goto LABEL_26;
      }
    }
    else
    {
      do
      {
        v23 = *((_OWORD *)v22 - 3);
        *(_QWORD *)(v17 - 32) = *((_QWORD *)v22 - 4);
        *(_OWORD *)(v17 - 48) = v23;
        *((_QWORD *)v22 - 5) = 0;
        *((_QWORD *)v22 - 4) = 0;
        *((_QWORD *)v22 - 6) = 0;
        v24 = *(_OWORD *)(v22 - 24);
        *(_QWORD *)(v17 - 8) = *((_QWORD *)v22 - 1);
        *(_OWORD *)(v17 - 24) = v24;
        v17 -= 48;
        *((_QWORD *)v22 - 2) = 0;
        *((_QWORD *)v22 - 1) = 0;
        *((_QWORD *)v22 - 3) = 0;
        v22 -= 48;
      }
      while (v22 != (char *)v21);
      v25 = v46;
      v22 = (char *)v47;
      v46 = v17;
      v47 = v20;
      v48 = v15 + 48 * v16;
      if (v22 != (char *)v25)
      {
        do
        {
          v22 -= 48;
          std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::string>,0>((uint64_t)v22);
        }
        while (v22 != (char *)v25);
        v22 = (char *)v25;
      }
      if (!v22)
        goto LABEL_24;
    }
    operator delete(v22);
    goto LABEL_24;
  }
LABEL_32:
  v26 = this[1].u64[0];
  v27 = (_QWORD *)this->i64[1];
  if ((unint64_t)v27 >= v26)
  {
    v29 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v27 - this->i64[0]) >> 3);
    if (v29 + 1 > 0xAAAAAAAAAAAAAAALL)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v26 - this->i64[0]) >> 3);
    v31 = 2 * v30;
    if (2 * v30 <= v29 + 1)
      v31 = v29 + 1;
    if (v30 >= 0x555555555555555)
      v32 = 0xAAAAAAAAAAAAAAALL;
    else
      v32 = v31;
    *((_QWORD *)&__p + 1) = this + 1;
    if (v32)
      v32 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::vector<std::string>>>(v32);
    else
      v33 = 0;
    v34 = (_QWORD *)(v32 + 24 * v29);
    v43[0] = (void *)v32;
    v43[1] = v34;
    v43[2] = v34;
    *(_QWORD *)&__p = v32 + 24 * v33;
    *v34 = 0;
    v34[1] = 0;
    v34[2] = 0;
    std::vector<siri::dialogengine::DatabaseField>::__init_with_size[abi:ne180100]<siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>(v34, v46, v47, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v47 - v46) >> 4));
    v35 = (char *)v43[1];
    v28 = (char *)v43[2] + 24;
    v43[2] = (char *)v43[2] + 24;
    v37 = (_QWORD *)this->i64[0];
    v36 = (_QWORD *)this->i64[1];
    if (v36 == (_QWORD *)this->i64[0])
    {
      v39 = vdupq_n_s64((unint64_t)v36);
    }
    else
    {
      do
      {
        *((_QWORD *)v35 - 3) = 0;
        *((_QWORD *)v35 - 2) = 0;
        v35 -= 24;
        *((_QWORD *)v35 + 2) = 0;
        v38 = *(_OWORD *)(v36 - 3);
        v36 -= 3;
        *(_OWORD *)v35 = v38;
        *((_QWORD *)v35 + 2) = v36[2];
        *v36 = 0;
        v36[1] = 0;
        v36[2] = 0;
      }
      while (v36 != v37);
      v39 = *this;
      v28 = (char *)v43[2];
    }
    this->i64[0] = (uint64_t)v35;
    this->i64[1] = (uint64_t)v28;
    *(int64x2_t *)&v43[1] = v39;
    v40 = this[1].i64[0];
    this[1].i64[0] = __p;
    *(_QWORD *)&__p = v40;
    v43[0] = (void *)v39.i64[0];
    std::__split_buffer<std::vector<siri::dialogengine::DatabaseField>>::~__split_buffer((uint64_t)v43);
  }
  else
  {
    *v27 = 0;
    v27[1] = 0;
    v27[2] = 0;
    std::vector<siri::dialogengine::DatabaseField>::__init_with_size[abi:ne180100]<siri::dialogengine::DatabaseField*,siri::dialogengine::DatabaseField*>(v27, v46, v47, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v47 - v46) >> 4));
    v28 = (char *)(v27 + 3);
    this->i64[1] = (uint64_t)(v27 + 3);
  }
  this->i64[1] = (uint64_t)v28;
  v43[0] = &v46;
  std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)v43);
  return 0;
}

void sub_1BF855E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char *a23)
{
  std::__split_buffer<std::vector<siri::dialogengine::DatabaseField>>::~__split_buffer((uint64_t)&__p);
  a23 = &a20;
  std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a23);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<std::vector<siri::dialogengine::DatabaseField>>::~__split_buffer(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;
  void **v4;
  void **v6;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    v4 = (void **)(i - 24);
    *(_QWORD *)(a1 + 16) = v4;
    v6 = v4;
    std::vector<std::pair<std::string,std::string>>::__destroy_vector::operator()[abi:ne180100](&v6);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t siri::dialogengine::DialogTimeZone::formatShort(siri::dialogengine::DialogTimeZone *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  const char *v4;
  unsigned int v5;
  uint64_t v6;
  std::string __p;
  void *v9[2];
  char v10;
  _QWORD v11[3];
  char v12;

  siri::dialogengine::GetRequestTimeStamp(this, a2, v11);
  if (v11[0] == 0x7FFFFFFFFFFFFFFFLL)
  {
    v11[0] = 0;
    v5 = 2;
  }
  else
  {
    v5 = 1;
  }
  siri::dialogengine::Context::GetLocaleWithUserCalendar(this, v4, (uint64_t)&__p);
  siri::dialogengine::GetICUTimeZone(v11, v5, v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v6 = operator new();
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  siri::dialogengine::VariableString::VariableString(v6, &__p, (uint64_t)v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v10 < 0)
    operator delete(v9[0]);
  if (v12 < 0)
    operator delete((void *)v11[1]);
  return v6;
}

void sub_1BF855FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1C3B8D890](v27, 0x10B3C40D3060B95);
  if (a20 < 0)
    operator delete(a15);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::DialogTimeZone::formatLong(siri::dialogengine::DialogTimeZone *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  const char *v4;
  unsigned int v5;
  uint64_t v6;
  std::string __p;
  void *v9[2];
  char v10;
  _QWORD v11[3];
  char v12;

  siri::dialogengine::GetRequestTimeStamp(this, a2, v11);
  if (v11[0] == 0x7FFFFFFFFFFFFFFFLL)
  {
    v11[0] = 0;
    v5 = 3;
  }
  else
  {
    v5 = 0;
  }
  siri::dialogengine::Context::GetLocaleWithUserCalendar(this, v4, (uint64_t)&__p);
  siri::dialogengine::GetICUTimeZone(v11, v5, v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v6 = operator new();
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  siri::dialogengine::VariableString::VariableString(v6, &__p, (uint64_t)v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v10 < 0)
    operator delete(v9[0]);
  if (v12 < 0)
    operator delete((void *)v11[1]);
  return v6;
}

void sub_1BF856124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1C3B8D890](v27, 0x10B3C40D3060B95);
  if (a20 < 0)
    operator delete(a15);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::DialogTimeZone::formatShortGeneric(siri::dialogengine::DialogTimeZone *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  const char *v4;
  uint64_t v5;
  std::string __p;
  void *v8[2];
  char v9;
  void *v10[3];
  char v11;

  siri::dialogengine::GetRequestTimeStamp(this, a2, v10);
  siri::dialogengine::Context::GetLocaleWithUserCalendar(this, v4, (uint64_t)&__p);
  siri::dialogengine::GetICUTimeZone(v10, 2u, v8);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v5 = operator new();
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  siri::dialogengine::VariableString::VariableString(v5, &__p, (uint64_t)v8);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v9 < 0)
    operator delete(v8[0]);
  if (v11 < 0)
    operator delete(v10[1]);
  return v5;
}

void sub_1BF856270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1C3B8D890](v27, 0x10B3C40D3060B95);
  if (a20 < 0)
    operator delete(a15);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::DialogTimeZone::formatLongGeneric(siri::dialogengine::DialogTimeZone *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  const char *v4;
  uint64_t v5;
  std::string __p;
  void *v8[2];
  char v9;
  void *v10[3];
  char v11;

  siri::dialogengine::GetRequestTimeStamp(this, a2, v10);
  siri::dialogengine::Context::GetLocaleWithUserCalendar(this, v4, (uint64_t)&__p);
  siri::dialogengine::GetICUTimeZone(v10, 3u, v8);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v5 = operator new();
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  siri::dialogengine::VariableString::VariableString(v5, &__p, (uint64_t)v8);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  if (v9 < 0)
    operator delete(v8[0]);
  if (v11 < 0)
    operator delete(v10[1]);
  return v5;
}

void sub_1BF8563BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  uint64_t v27;

  if (a14 < 0)
    operator delete(__p);
  MEMORY[0x1C3B8D890](v27, 0x10B3C40D3060B95);
  if (a20 < 0)
    operator delete(a15);
  if (a27 < 0)
    operator delete(a22);
  _Unwind_Resume(a1);
}

void sub_1BF8564AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BF856530(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1BF856964(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1BF857050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;

  if (a34 < 0)
    operator delete(__p);
  if (a28 < 0)
    operator delete(a23);

  if (a22 < 0)
    operator delete(a17);

  _Unwind_Resume(a1);
}

void sub_1BF857B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,_Unwind_Exception *exception_object,uint64_t a38,uint64_t a39,uint64_t a40)
{
  void *v40;

  _Unwind_Resume(a1);
}

void sub_1BF857E68()
{
  void *v0;
  void *v1;

  JUMPOUT(0x1BF857E74);
}

void sub_1BF858530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_1BF858894(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  _Unwind_Resume(a1);
}

void sub_1BF8589F4(_Unwind_Exception *a1, uint64_t a2, int a3, __int16 a4, char a5, char a6, std::string *a7, std::string *a8, void *a9, std::string *a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

uint64_t YAML::Tag::Tag(uint64_t a1, uint64_t a2)
{
  int v3;
  std::string *v4;
  const std::string *v6;

  v3 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)a1 = v3;
  *(_OWORD *)(a1 + 8) = 0u;
  v4 = (std::string *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  switch(v3)
  {
    case 0:
    case 1:
    case 2:
      v6 = (const std::string *)(a2 + 24);
      goto LABEL_4;
    case 3:
      std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 24));
      v6 = *(const std::string **)(a2 + 48);
LABEL_4:
      std::string::operator=(v4, v6);
      break;
    case 4:
      return a1;
    default:
      __assert_rtn("Tag", "tag.cpp", 28, "false");
  }
  return a1;
}

void sub_1BF858CC8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(char *)(v1 + 55) < 0)
    operator delete(*v3);
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void YAML::Tag::Translate(YAML::Tag *this@<X0>, const YAML::Directives *a2@<X1>, std::string *a3@<X8>)
{
  std::string *v6;
  __int128 v7;
  void *v8;
  std::string v9;
  void *v10[2];
  std::string::size_type v11;
  std::string __p;

  switch(*(_DWORD *)this)
  {
    case 0:
      if (*((char *)this + 55) < 0)
      {
        std::string::__init_copy_ctor_external(a3, *((const std::string::value_type **)this + 4), *((_QWORD *)this + 5));
      }
      else
      {
        *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *((_OWORD *)this + 2);
        a3->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 6);
      }
      return;
    case 1:
      std::string::basic_string[abi:ne180100]<0>(v10, "!");
      YAML::Directives::TranslateTagHandle((uint64_t)a2, (uint64_t)v10, &__p);
      std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&__p.__r_.__value_.__l.__data_, (const void **)this + 4, (uint64_t)a3);
      goto LABEL_13;
    case 2:
      std::string::basic_string[abi:ne180100]<0>(v10, "!!");
      YAML::Directives::TranslateTagHandle((uint64_t)a2, (uint64_t)v10, &__p);
      std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&__p.__r_.__value_.__l.__data_, (const void **)this + 4, (uint64_t)a3);
LABEL_13:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v11) & 0x80000000) == 0)
        return;
      v8 = v10[0];
      break;
    case 3:
      std::operator+<char>();
      v6 = std::string::append(&v9, "!");
      v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      v11 = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)v10 = v7;
      v6->__r_.__value_.__l.__size_ = 0;
      v6->__r_.__value_.__r.__words[2] = 0;
      v6->__r_.__value_.__r.__words[0] = 0;
      YAML::Directives::TranslateTagHandle((uint64_t)a2, (uint64_t)v10, &__p);
      std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)&__p.__r_.__value_.__l.__data_, (const void **)this + 4, (uint64_t)a3);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (SHIBYTE(v11) < 0)
        operator delete(v10[0]);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
      v8 = (void *)v9.__r_.__value_.__r.__words[0];
      break;
    case 4:
      std::string::basic_string[abi:ne180100]<0>(a3, "!");
      return;
    default:
      __assert_rtn("Translate", "tag.cpp", 46, "false");
  }
  operator delete(v8);
}

void sub_1BF858EDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  if (a21 < 0)
    operator delete(a16);
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::ApplySemanticConcept(siri::dialogengine::Context *a1@<X0>, std::string *a2@<X1>, const std::string *a3@<X2>, __int128 **a4@<X3>, std::string *a5@<X8>)
{
  _QWORD **v10;
  int v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  std::string v15;
  std::string v16;
  std::string v17;
  std::string v18;
  std::string v19;
  std::string v20;
  std::string __p;
  std::string __str;
  _BYTE v23[56];
  void *v24;
  char v25;
  void *v26;
  char v27;
  std::string v28;
  uint64_t v29;
  std::__shared_weak_count *v30;
  uint64_t v31;
  _QWORD *v32[2];

  siri::dialogengine::SpeakableString::SpeakableString((uint64_t)a5, (uint64_t)a3);
  siri::dialogengine::GetSemanticModel(a1, a2, (uint64_t)&v29);
  siri::dialogengine::StringToLower((uint64_t)a3, (uint64_t)&v28);
  if (v32 == (_QWORD **)std::__tree<std::string>::find<std::string>((uint64_t)&v31, (const void **)&v28.__r_.__value_.__l.__data_))std::string::operator=(&v28, a3);
  if (v29)
  {
    morphun::util::StringUtils::to_u16string();
    morphun::util::StringUtils::to_u16string();
    morphun::dialog::SemanticValue::SemanticValue();
    morphun::dialog::SemanticConcept::SemanticConcept();
    siri::dialogengine::InflectConcept(a1, (const char *)&__str, a4, (uint64_t)&v15);
    std::string::operator=(a5, &v15);
    std::string::operator=(a5 + 1, &v16);
    std::string::operator=(a5 + 2, &v17);
    std::string::operator=(a5 + 3, &v18);
    std::string::operator=(a5 + 4, &v19);
    std::string::operator=(a5 + 5, &v20);
    std::string::operator=(a5 + 6, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v20.__r_.__value_.__l.__data_);
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v19.__r_.__value_.__l.__data_);
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v18.__r_.__value_.__l.__data_);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v17.__r_.__value_.__l.__data_);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v15.__r_.__value_.__l.__data_);
    morphun::dialog::SemanticConcept::~SemanticConcept((morphun::dialog::SemanticConcept *)&__str);
    morphun::dialog::SemanticValue::~SemanticValue((morphun::dialog::SemanticValue *)v23);
    if (v25 < 0)
      operator delete(v24);
    if (v27 < 0)
      operator delete(v26);
  }
  else
  {
    v10 = (_QWORD **)std::__tree<std::string>::find<std::string>((uint64_t)&v31, (const void **)&v28.__r_.__value_.__l.__data_);
    if (v32 != v10)
      siri::dialogengine::SpeakableString::SetString((uint64_t)a5, (uint64_t)(v10 + 7));
  }
  std::string::basic_string[abi:ne180100]<0>(&__str, "<");
  if ((siri::dialogengine::StringContains(&a5[1].__r_.__value_.__l.__data_, (char *)&__str) & 1) != 0
    || siri::dialogengine::StringContains(&a5->__r_.__value_.__l.__data_, (char *)&__str))
  {
    std::string::basic_string[abi:ne180100]<0>(&v15, ">");
    if ((siri::dialogengine::StringContains(&a5[1].__r_.__value_.__l.__data_, (char *)&v15) & 1) != 0)
      v11 = 1;
    else
      v11 = siri::dialogengine::StringContains(&a5->__r_.__value_.__l.__data_, (char *)&v15);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v15.__r_.__value_.__l.__data_);
  }
  else
  {
    v11 = 0;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__str.__r_.__value_.__l.__data_);
    if (!v11)
      goto LABEL_40;
  }
  else if (!v11)
  {
    goto LABEL_40;
  }
  siri::dialogengine::SpeakableString::GetExpandedPrint((siri::dialogengine::SpeakableString *)a5, a1, &__str);
  std::string::operator=(a5, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  siri::dialogengine::SpeakableString::GetExpandedSpeak((uint64_t *)&__str, (siri::dialogengine::SpeakableString *)a5, a1);
  std::string::operator=(a5 + 1, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
LABEL_40:
  std::string::operator=(a5 + 4, &v28);
  std::string::operator=(a5 + 5, a2);
  siri::dialogengine::SemanticFeatureConstraint::ToString(a4, (uint64_t)&__str);
  std::string::operator=(a5 + 6, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__str.__r_.__value_.__l.__data_);
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v28.__r_.__value_.__l.__data_);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v32[0]);
  v12 = v30;
  if (v30)
  {
    p_shared_owners = (unint64_t *)&v30->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_1BF859304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,__int128 __p,int a32,__int16 a33,char a34,char a35)
{
  void **v35;
  uint64_t v36;

  if (*(char *)(v36 - 113) < 0)
    operator delete(*(void **)(v36 - 136));
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(_QWORD **)(v36 - 88));
  std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100](v36 - 112);
  siri::dialogengine::SpeakableString::~SpeakableString(v35);
  _Unwind_Resume(a1);
}

void sub_1BF8593BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  siri::dialogengine::SpeakableString::~SpeakableString(&a9);
  JUMPOUT(0x1BF8593CCLL);
}

void sub_1BF859500(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  uint64_t v39;

  if (a39 < 0)
    operator delete(__p);
  if (a14 < 0)
    operator delete(a9);
  if (*(char *)(v39 - 217) < 0)
    operator delete(*(void **)(v39 - 240));
  if (*(char *)(v39 - 137) < 0)
    operator delete(*(void **)(v39 - 160));
  __cxa_end_catch();
  JUMPOUT(0x1BF85938CLL);
}

void siri::dialogengine::SpeakableString::~SpeakableString(void **this)
{
  if (*((char *)this + 167) < 0)
    operator delete(this[18]);
  if (*((char *)this + 143) < 0)
    operator delete(this[15]);
  if (*((char *)this + 119) < 0)
    operator delete(this[12]);
  if (*((char *)this + 95) < 0)
    operator delete(this[9]);
  if (*((char *)this + 71) < 0)
    operator delete(this[6]);
  if (*((char *)this + 47) < 0)
    operator delete(this[3]);
  if (*((char *)this + 23) < 0)
    operator delete(*this);
}

BOOL siri::dialogengine::IsValidSemanticConcept(uint64_t a1, const void **a2)
{
  _BOOL8 v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8[3];
  void **v9;

  siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)&v5, (const siri::dialogengine::RequestInfo *)(a1 + 8));
  memset(v8, 0, sizeof(v8));
  std::vector<siri::dialogengine::UpdatableDir>::__init_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(v8, v6, v7, 0xAAAAAAAAAAAAAAABLL * ((v7 - v6) >> 5));
  v3 = siri::dialogengine::DialogMetadataDirExists(v8, a2);
  v9 = (void **)v8;
  std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100](&v9);
  siri::dialogengine::RequestInfo::~RequestInfo(&v5);
  return v3;
}

void sub_1BF85968C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 40) = v9;
  std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)(v10 - 40));
  siri::dialogengine::RequestInfo::~RequestInfo(&a9);
  _Unwind_Resume(a1);
}

BOOL siri::dialogengine::IsValidSemanticConceptType(uint64_t a1, uint64_t a2)
{
  size_t v3;
  _BOOL8 v4;
  void *v5;
  std::string v7;
  std::string __s1;

  if (*(char *)(a2 + 23) < 0)
    std::string::__init_copy_ctor_external(&__s1, *(const std::string::value_type **)a2, *(_QWORD *)(a2 + 8));
  else
    __s1 = *(std::string *)a2;
  if (siri::dialogengine::IsArrayType((std::string *)a2))
  {
    siri::dialogengine::GetArrayElementType(a2, &v7);
    if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__s1.__r_.__value_.__l.__data_);
    __s1 = v7;
  }
  v3 = strlen(siri::dialogengine::TYPE_STRING[0]);
  if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0)
  {
    if (v3 == __s1.__r_.__value_.__l.__size_)
    {
      if (v3 == -1)
        std::string::__throw_out_of_range[abi:ne180100]();
      v5 = (void *)__s1.__r_.__value_.__r.__words[0];
      v4 = memcmp(__s1.__r_.__value_.__l.__data_, siri::dialogengine::TYPE_STRING[0], v3) == 0;
    }
    else
    {
      v4 = 0;
      v5 = (void *)__s1.__r_.__value_.__r.__words[0];
    }
    operator delete(v5);
  }
  else
  {
    return v3 == HIBYTE(__s1.__r_.__value_.__r.__words[2]) && memcmp(&__s1, siri::dialogengine::TYPE_STRING[0], v3) == 0;
  }
  return v4;
}

void sub_1BF8597D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::PatternSchemaConcreteGroup::~PatternSchemaConcreteGroup(void **this)
{
  siri::dialogengine::PatternSchemaConcreteGroup::~PatternSchemaConcreteGroup(this);
  JUMPOUT(0x1C3B8D890);
}

{
  void **v2;

  *this = &off_1E792A2C0;
  if (*((char *)this + 215) < 0)
    operator delete(this[24]);
  if (*((char *)this + 191) < 0)
    operator delete(this[21]);
  v2 = this + 18;
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](&v2);
  v2 = this + 15;
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](&v2);
  v2 = this + 12;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100]((uint64_t)(this + 10));
  v2 = this + 7;
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 55) < 0)
    operator delete(this[4]);
  *this = off_1E792F2C8;
  if (*((char *)this + 31) < 0)
    operator delete(this[1]);
}

void siri::dialogengine::PatternSchemaConcreteGroup::GetDescription(siri::dialogengine::PatternSchemaConcreteGroup *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 55) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 4), *((_QWORD *)this + 5));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 2);
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 6);
  }
}

char *siri::dialogengine::PatternSchemaConcreteGroup::GetUsage@<X0>(siri::dialogengine::PatternSchemaConcreteGroup *this@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  return std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*,std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*>((char *)a2, *((_QWORD **)this + 7), *((_QWORD **)this + 8), (uint64_t)(*((_QWORD *)this + 8) - *((_QWORD *)this + 7)) >> 4);
}

std::string *siri::dialogengine::PatternSchemaConcreteGroup::GetNestedPatterns@<X0>(__int128 **this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(a2, this[12], this[13], 0xAAAAAAAAAAAAAAABLL * (((char *)this[13] - (char *)this[12]) >> 3));
}

char *siri::dialogengine::PatternSchemaConcreteGroup::GetDialogComponents@<X0>(siri::dialogengine::PatternSchemaConcreteGroup *this@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  return std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>*,std::shared_ptr<siri::dialogengine::PatternSchemaComponent>*>((char *)a2, *((_QWORD **)this + 15), *((_QWORD **)this + 16), (uint64_t)(*((_QWORD *)this + 16) - *((_QWORD *)this + 15)) >> 4);
}

void siri::dialogengine::PatternSchemaConcreteGroup::GetDialogComponent(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  __int128 *v7;
  __int128 v8;
  std::string::size_type size;
  uint64_t v10;
  int v11;
  unsigned __int8 *v12;
  uint64_t v13;
  int v14;
  int v15;
  void *v17;
  int v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::string __p;

  v4 = *(_QWORD **)(a1 + 120);
  v5 = *(_QWORD **)(a1 + 128);
  if (v4 == v5)
  {
LABEL_28:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  while (1)
  {
    v7 = (__int128 *)*v4;
    if (*(char *)(*v4 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v7, *((_QWORD *)v7 + 1));
    }
    else
    {
      v8 = *v7;
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v7 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v8;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    v10 = *(unsigned __int8 *)(a2 + 23);
    v11 = (char)v10;
    if ((v10 & 0x80u) != 0)
      v10 = *(_QWORD *)(a2 + 8);
    if (size != v10)
    {
      if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_27;
    }
    v12 = v11 >= 0 ? (unsigned __int8 *)a2 : *(unsigned __int8 **)a2;
    if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) == 0)
      break;
    v17 = (void *)__p.__r_.__value_.__r.__words[0];
    v18 = memcmp(__p.__r_.__value_.__l.__data_, v12, __p.__r_.__value_.__l.__size_);
    operator delete(v17);
    if (!v18)
      goto LABEL_30;
LABEL_27:
    v4 += 2;
    if (v4 == v5)
      goto LABEL_28;
  }
  if (*((_BYTE *)&__p.__r_.__value_.__s + 23))
  {
    v13 = 0;
    do
    {
      v14 = __p.__r_.__value_.__s.__data_[v13];
      v15 = v12[v13];
    }
    while (v14 == v15 && HIBYTE(__p.__r_.__value_.__r.__words[2]) - 1 != v13++);
    if (v14 != v15)
      goto LABEL_27;
  }
LABEL_30:
  v19 = v4[1];
  *a3 = *v4;
  a3[1] = v19;
  if (v19)
  {
    v20 = (unint64_t *)(v19 + 8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }
}

char *siri::dialogengine::PatternSchemaConcreteGroup::GetVisualComponents@<X0>(siri::dialogengine::PatternSchemaConcreteGroup *this@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  return std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>*,std::shared_ptr<siri::dialogengine::PatternSchemaComponent>*>((char *)a2, *((_QWORD **)this + 18), *((_QWORD **)this + 19), (uint64_t)(*((_QWORD *)this + 19) - *((_QWORD *)this + 18)) >> 4);
}

void siri::dialogengine::PatternSchemaConcreteGroup::GetVisualComponent(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  __int128 *v7;
  __int128 v8;
  std::string::size_type size;
  uint64_t v10;
  int v11;
  unsigned __int8 *v12;
  uint64_t v13;
  int v14;
  int v15;
  void *v17;
  int v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::string __p;

  v4 = *(_QWORD **)(a1 + 144);
  v5 = *(_QWORD **)(a1 + 152);
  if (v4 == v5)
  {
LABEL_28:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  while (1)
  {
    v7 = (__int128 *)*v4;
    if (*(char *)(*v4 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v7, *((_QWORD *)v7 + 1));
    }
    else
    {
      v8 = *v7;
      __p.__r_.__value_.__r.__words[2] = *((_QWORD *)v7 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v8;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    else
      size = __p.__r_.__value_.__l.__size_;
    v10 = *(unsigned __int8 *)(a2 + 23);
    v11 = (char)v10;
    if ((v10 & 0x80u) != 0)
      v10 = *(_QWORD *)(a2 + 8);
    if (size != v10)
    {
      if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      goto LABEL_27;
    }
    v12 = v11 >= 0 ? (unsigned __int8 *)a2 : *(unsigned __int8 **)a2;
    if ((*((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x80) == 0)
      break;
    v17 = (void *)__p.__r_.__value_.__r.__words[0];
    v18 = memcmp(__p.__r_.__value_.__l.__data_, v12, __p.__r_.__value_.__l.__size_);
    operator delete(v17);
    if (!v18)
      goto LABEL_30;
LABEL_27:
    v4 += 2;
    if (v4 == v5)
      goto LABEL_28;
  }
  if (*((_BYTE *)&__p.__r_.__value_.__s + 23))
  {
    v13 = 0;
    do
    {
      v14 = __p.__r_.__value_.__s.__data_[v13];
      v15 = v12[v13];
    }
    while (v14 == v15 && HIBYTE(__p.__r_.__value_.__r.__words[2]) - 1 != v13++);
    if (v14 != v15)
      goto LABEL_27;
  }
LABEL_30:
  v19 = v4[1];
  *a3 = *v4;
  a3[1] = v19;
  if (v19)
  {
    v20 = (unint64_t *)(v19 + 8);
    do
      v21 = __ldxr(v20);
    while (__stxr(v21 + 1, v20));
  }
}

uint64_t siri::dialogengine::PatternSchemaConcreteGroup::GetVisualComponentsCombination@<X0>(uint64_t this@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(this + 88);
  *a2 = *(_QWORD *)(this + 80);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return this;
}

void siri::dialogengine::PatternSchemaConcreteGroup::GetDeprecated(siri::dialogengine::PatternSchemaConcreteGroup *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 191) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 21), *((_QWORD *)this + 22));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 168);
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 23);
  }
}

void siri::dialogengine::PatternSchemaConcreteGroup::GetReplacementName(siri::dialogengine::PatternSchemaConcreteGroup *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 215) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 24), *((_QWORD *)this + 25));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 12);
    a2->__r_.__value_.__r.__words[2] = *((_QWORD *)this + 26);
  }
}

char *std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>*,std::shared_ptr<siri::dialogengine::PatternSchemaComponent>*>(char *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if (a4)
  {
    v6 = result;
    result = std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__vallocate[abi:ne180100](result, a4);
    v7 = (_QWORD *)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      *v7 = *a2;
      v8 = a2[1];
      v7[1] = v8;
      if (v8)
      {
        v9 = (unint64_t *)(v8 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      a2 += 2;
      v7 += 2;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_1BF859C64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

char *std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 60)
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

char *std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*,std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*>(char *result, _QWORD *a2, _QWORD *a3, unint64_t a4)
{
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  if (a4)
  {
    v6 = result;
    result = std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__vallocate[abi:ne180100](result, a4);
    v7 = (_QWORD *)*((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      *v7 = *a2;
      v8 = a2[1];
      v7[1] = v8;
      if (v8)
      {
        v9 = (unint64_t *)(v8 + 8);
        do
          v10 = __ldxr(v9);
        while (__stxr(v10 + 1, v9));
      }
      a2 += 2;
      v7 += 2;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

void sub_1BF859D40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

siri::dialogengine::PatternSchemaConcreteGroup *siri::dialogengine::PatternSchemaConcreteGroup::PatternSchemaConcreteGroup(siri::dialogengine::PatternSchemaConcreteGroup *this)
{
  void *__p[2];
  uint64_t v4;

  std::string::basic_string[abi:ne180100]<0>(__p, "");
  *(_QWORD *)this = off_1E792F2C8;
  if (SHIBYTE(v4) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 8), (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
    if (SHIBYTE(v4) < 0)
      operator delete(__p[0]);
  }
  else
  {
    *(_OWORD *)((char *)this + 8) = *(_OWORD *)__p;
    *((_QWORD *)this + 3) = v4;
  }
  *(_QWORD *)this = &off_1E792A2C0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_QWORD *)this + 26) = 0;
  siri::dialogengine::PatternSchemaConcreteGroup::ResetVisualComponentsCombination(this);
  return this;
}

void sub_1BF859F10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::PatternSchemaConcreteGroup::ResetVisualComponentsCombination(siri::dialogengine::PatternSchemaConcreteGroup *this)
{
  char *v2;
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v2 = (char *)operator new(0x38uLL);
  *((_QWORD *)v2 + 1) = 0;
  *((_QWORD *)v2 + 2) = 0;
  *(_QWORD *)v2 = &off_1E79316E0;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_QWORD *)&v3 = v2 + 24;
  *((_QWORD *)&v3 + 1) = v2;
  v4 = (std::__shared_weak_count *)*((_QWORD *)this + 11);
  *((_OWORD *)this + 5) = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void std::__shared_ptr_emplace<siri::dialogengine::VisualComponentsCombination>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E79316E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<siri::dialogengine::VisualComponentsCombination>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E79316E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C3B8D890);
}

void std::__shared_ptr_emplace<siri::dialogengine::VisualComponentsCombination>::__on_zero_shared(uint64_t a1)
{
  void **v1;

  v1 = (void **)(a1 + 32);
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](&v1);
}

std::string *siri::dialogengine::PatternSchemaConcreteGroup::SetDescription(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 32), a2);
}

uint64_t **siri::dialogengine::PatternSchemaConcreteGroup::SetUsage(uint64_t a1, uint64_t **a2)
{
  uint64_t **result;

  result = (uint64_t **)(a1 + 56);
  if (result != a2)
    return (uint64_t **)std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>>::__assign_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*,std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*>(result, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 4);
  return result;
}

uint64_t std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>>::__assign_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*,std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*>(_QWORD *a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  uint64_t *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2;
  v8 = a1[2];
  v9 = (_QWORD *)*a1;
  if (a4 > (v8 - *a1) >> 4)
  {
    if (v9)
    {
      v10 = a1[1];
      v11 = v9;
      if ((_QWORD *)v10 != v9)
      {
        do
          v10 = std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100](v10 - 16);
        while ((_QWORD *)v10 != v9);
        v11 = (_QWORD *)*a1;
      }
      a1[1] = v9;
      operator delete(v11);
      v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 >> 60)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v12 = v8 >> 3;
    if (v8 >> 3 <= a4)
      v12 = a4;
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0)
      v13 = 0xFFFFFFFFFFFFFFFLL;
    else
      v13 = v12;
    result = (uint64_t)std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__vallocate[abi:ne180100](a1, v13);
    v15 = (uint64_t *)a1[1];
    while (v6 != a3)
    {
      v16 = v6[1];
      *v15 = *v6;
      v15[1] = v16;
      if (v16)
      {
        v17 = (unint64_t *)(v16 + 8);
        do
          v18 = __ldxr(v17);
        while (__stxr(v18 + 1, v17));
      }
      v6 += 2;
      v15 += 2;
    }
LABEL_29:
    a1[1] = v15;
    return result;
  }
  result = a1[1];
  v19 = (result - (uint64_t)v9) >> 4;
  if (v19 < a4)
  {
    v20 = &a2[2 * v19];
    if ((_QWORD *)result != v9)
    {
      do
      {
        v21 = *v6;
        v22 = v6[1];
        v6 += 2;
        result = (uint64_t)std::shared_ptr<siri::dialogengine::PatternSchemaUsage>::operator=[abi:ne180100](v9, v21, v22);
        v9 += 2;
      }
      while (v6 != v20);
      v9 = (_QWORD *)a1[1];
    }
    v15 = v9;
    if (v20 != a3)
    {
      v15 = v9;
      do
      {
        v23 = v20[1];
        *v15 = *v20;
        v15[1] = v23;
        if (v23)
        {
          v24 = (unint64_t *)(v23 + 8);
          do
            v25 = __ldxr(v24);
          while (__stxr(v25 + 1, v24));
        }
        v20 += 2;
        v15 += 2;
      }
      while (v20 != a3);
    }
    goto LABEL_29;
  }
  if (a2 != a3)
  {
    do
    {
      v26 = *v6;
      v27 = v6[1];
      v6 += 2;
      std::shared_ptr<siri::dialogengine::PatternSchemaUsage>::operator=[abi:ne180100](v9, v26, v27);
      v9 += 2;
    }
    while (v6 != a3);
    result = a1[1];
  }
  while ((_QWORD *)result != v9)
    result = std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>::~shared_ptr[abi:ne180100](result - 16);
  a1[1] = v9;
  return result;
}

_QWORD *std::shared_ptr<siri::dialogengine::PatternSchemaUsage>::operator=[abi:ne180100](_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (a3)
  {
    v4 = (unint64_t *)(a3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = (std::__shared_weak_count *)a1[1];
  *a1 = a2;
  a1[1] = a3;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  return a1;
}

void siri::dialogengine::PatternSchemaConcreteGroup::SetNestedPatterns(std::vector<std::string> *a1, uint64_t a2)
{
  std::vector<std::string> *v2;

  v2 = a1 + 4;
  if (v2 != (std::vector<std::string> *)a2)
    std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>(v2, *(std::string **)a2, *(__int128 **)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 3));
}

void std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>(std::vector<std::string> *a1, std::string *__str, __int128 *a3, unint64_t a4)
{
  __int128 *v6;
  uint64_t p_end_cap;
  std::string *begin;
  unint64_t v10;
  unint64_t v11;
  std::string *v12;
  std::string *end;
  __int128 *v14;
  uint64_t v15;

  v6 = (__int128 *)__str;
  p_end_cap = (uint64_t)&a1->__end_cap_;
  begin = a1->__begin_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3) < a4)
  {
    std::vector<std::string>::__vdeallocate(a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL)
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    v10 = 0x5555555555555556 * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3);
    if (v10 <= a4)
      v10 = a4;
    if (0xAAAAAAAAAAAAAAABLL * (((char *)a1->__end_cap_.__value_ - (char *)a1->__begin_) >> 3) >= 0x555555555555555)
      v11 = 0xAAAAAAAAAAAAAAALL;
    else
      v11 = v10;
    std::vector<std::string>::__vallocate[abi:ne180100](a1, v11);
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>(p_end_cap, v6, a3, a1->__end_);
LABEL_15:
    a1->__end_ = v12;
    return;
  }
  end = a1->__end_;
  if (0xAAAAAAAAAAAAAAABLL * (((char *)end - (char *)begin) >> 3) < a4)
  {
    v14 = (__int128 *)(&__str->__r_.__value_.__l.__data_ + (((char *)end - (char *)begin) >> 3));
    if (end != begin)
    {
      v15 = 8 * (((char *)end - (char *)begin) >> 3);
      do
      {
        std::string::operator=(begin, (const std::string *)v6);
        v6 = (__int128 *)((char *)v6 + 24);
        ++begin;
        v15 -= 24;
      }
      while (v15);
      begin = a1->__end_;
    }
    v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string*,std::string*,std::string*>(p_end_cap, v14, a3, begin);
    goto LABEL_15;
  }
  if (__str != (std::string *)a3)
  {
    do
    {
      std::string::operator=(begin, (const std::string *)v6);
      v6 = (__int128 *)((char *)v6 + 24);
      ++begin;
    }
    while (v6 != a3);
    end = a1->__end_;
  }
  while (end != begin)
  {
    if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0)
      operator delete(end[-1].__r_.__value_.__l.__data_);
    --end;
  }
  a1->__end_ = begin;
}

void sub_1BF85A4D4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::PatternSchemaConcreteGroup::AddNestedPattern(uint64_t *a1, __int128 *a2)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t result;

  v3 = a1 + 12;
  v4 = a1[13];
  if (v4 >= a1[14])
  {
    result = std::vector<std::string>::__push_back_slow_path<std::string const&>(v3, a2);
  }
  else
  {
    std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v3, a2);
    result = v4 + 24;
  }
  a1[13] = result;
  return result;
}

uint64_t **siri::dialogengine::PatternSchemaConcreteGroup::SetDialogComponents(uint64_t a1, uint64_t **a2)
{
  uint64_t **result;

  result = (uint64_t **)(a1 + 120);
  if (result != a2)
    return (uint64_t **)std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>>::__assign_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*,std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*>(result, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 4);
  return result;
}

void siri::dialogengine::PatternSchemaConcreteGroup::AddDialogComponent(uint64_t a1, __int128 *a2)
{
  if (*(_QWORD *)a2)
    std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::emplace_back<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry> const&>((char **)(a1 + 120), a2);
}

uint64_t **siri::dialogengine::PatternSchemaConcreteGroup::SetVisualComponents(uint64_t a1, uint64_t **a2)
{
  uint64_t **result;

  result = (uint64_t **)(a1 + 144);
  if (result != a2)
    return (uint64_t **)std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>>::__assign_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*,std::shared_ptr<siri::dialogengine::PatternSchemaUsage>*>(result, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 4);
  return result;
}

void siri::dialogengine::PatternSchemaConcreteGroup::AddVisualComponent(uint64_t a1, __int128 *a2)
{
  if (*(_QWORD *)a2)
    std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::emplace_back<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry> const&>((char **)(a1 + 144), a2);
}

void siri::dialogengine::PatternSchemaConcreteGroup::SetVisualComponentsCombination(siri::dialogengine::PatternSchemaConcreteGroup *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  v2 = *a2;
  if (*a2)
  {
    v3 = a2[1];
    if (v3)
    {
      v4 = (unint64_t *)(v3 + 8);
      do
        v5 = __ldxr(v4);
      while (__stxr(v5 + 1, v4));
    }
    v6 = (std::__shared_weak_count *)*((_QWORD *)a1 + 11);
    *((_QWORD *)a1 + 10) = v2;
    *((_QWORD *)a1 + 11) = v3;
    if (v6)
    {
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v8 = __ldaxr(p_shared_owners);
      while (__stlxr(v8 - 1, p_shared_owners));
      if (!v8)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
  else
  {
    siri::dialogengine::PatternSchemaConcreteGroup::ResetVisualComponentsCombination(a1);
  }
}

std::string *siri::dialogengine::PatternSchemaConcreteGroup::SetDeprecated(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 7, a2);
}

std::string *siri::dialogengine::PatternSchemaConcreteGroup::SetReplacementName(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 8, a2);
}

void InitDefaultsscc_info_Component_PatternBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", a4);
  siri::dialogengine::PatternBinary::Component::Component((siri::dialogengine::PatternBinary::Component *)&siri::dialogengine::PatternBinary::_Component_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::PatternBinary::_Component_default_instance_, v4);
}

siri::dialogengine::PatternBinary::Component *siri::dialogengine::PatternBinary::Component::Component(siri::dialogengine::PatternBinary::Component *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E792A508;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  if (atomic_load(scc_info_Component_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Component_PatternBinary_2eproto);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1BF85A6F0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t *v2;

  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v1 + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PatternBinary::Component::~Component(siri::dialogengine::PatternBinary::Component *this)
{
  siri::dialogengine::PatternBinary::Component::~Component(this);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E792A508;
  v2 = *((_QWORD *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField((char *)this + 24);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *siri::dialogengine::PatternBinary::Component::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.PatternBinary.Component");
}

siri::dialogengine::PatternBinary::Component *siri::dialogengine::PatternBinary::Component::New(siri::dialogengine::PatternBinary::Component *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Component>(0);
}

siri::dialogengine::PatternBinary::Component *siri::dialogengine::PatternBinary::Component::New(siri::dialogengine::PatternBinary::Component *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Component>(a2);
}

void siri::dialogengine::PatternBinary::Component::Clear(siri::dialogengine::PatternBinary::Component *this)
{
  uint64_t v2;
  google::protobuf::internal::InternalMetadataWithArenaLite *v3;
  char v4;

  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24);
  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v2 = *((_QWORD *)this + 6);
    if (*(char *)(v2 + 23) < 0)
    {
      **(_BYTE **)v2 = 0;
      *(_QWORD *)(v2 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v2 = 0;
      *(_BYTE *)(v2 + 23) = 0;
    }
  }
  v4 = *((_BYTE *)this + 8);
  v3 = (siri::dialogengine::PatternBinary::Component *)((char *)this + 8);
  *((_DWORD *)v3 + 2) = 0;
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v3);
}

uint64_t siri::dialogengine::PatternBinary::Component::IsInitialized(siri::dialogengine::PatternBinary::Component *this)
{
  return 1;
}

void siri::dialogengine::PatternBinary::Component::CheckTypeAndMergeFrom(siri::dialogengine::PatternBinary::Component *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::PatternBinary::Component::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::PatternBinary::Component::ByteSizeLong(siri::dialogengine::PatternBinary::Component *this)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;

  v2 = *((_DWORD *)this + 8);
  if (v2 < 1)
  {
    v4 = *((unsigned int *)this + 8);
  }
  else
  {
    v3 = 0;
    v4 = *((unsigned int *)this + 8);
    do
    {
      v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, v3);
      v6 = *(unsigned __int8 *)(v5 + 23);
      if ((v6 & 0x80u) != 0)
        v6 = *(_QWORD *)(v5 + 8);
      v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      ++v3;
    }
    while (v2 != v3);
  }
  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v7 = *((_QWORD *)this + 6);
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = *(_QWORD *)(v7 + 8);
    if ((v8 & 0x80u) == 0)
      v9 = v8;
    v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v10 = *((_QWORD *)this + 1);
  if ((v10 & 1) != 0)
  {
    v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
      v13 = *(_QWORD *)(v12 + 8);
    else
      v13 = *(unsigned __int8 *)(v12 + 23);
    v4 += v13;
  }
  *((_DWORD *)this + 5) = v4;
  return v4;
}

uint64_t siri::dialogengine::PatternBinary::Component::GetCachedSize(siri::dialogengine::PatternBinary::Component *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::PatternBinary::Component::_InternalParse(siri::dialogengine::PatternBinary::Component *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int *v5;
  std::string **v6;
  uint64_t *v7;
  google::protobuf::internal *TagFallback;
  const char *v9;
  BOOL v11;
  google::protobuf::internal *v12;
  char *v13;
  std::string::value_type *v14;
  int *v15;
  uint64_t v16;
  int v17;
  std::string *AlignedAndAddCleanup;
  google::protobuf::internal::ArenaImpl *v19;
  uint64_t v20;
  uint64_t v21;
  std::string *v22;
  google::protobuf::internal *v24;

  v24 = a2;
  v5 = (unsigned int *)((char *)this + 24);
  v6 = (std::string **)((char *)this + 48);
  v7 = (uint64_t *)((char *)this + 8);
  while ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v24, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    TagFallback = (google::protobuf::internal *)((char *)v24 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v24;
    if ((*(char *)v24 & 0x80000000) == 0)
      goto LABEL_6;
    v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v24 + 2);
LABEL_6:
      v24 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, v9);
    v24 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    if (v9 >> 3 == 2)
    {
      if (v9 != 18)
        goto LABEL_12;
      v13 = (char *)TagFallback - 1;
LABEL_19:
      v14 = v13 + 1;
      v24 = (google::protobuf::internal *)(v13 + 1);
      v15 = (int *)*((_QWORD *)this + 5);
      if (v15)
      {
        v16 = *((int *)this + 8);
        v17 = *v15;
        if ((int)v16 < *v15)
        {
          *((_DWORD *)this + 8) = v16 + 1;
          AlignedAndAddCleanup = *(std::string **)&v15[2 * v16 + 2];
          goto LABEL_31;
        }
        if (v17 == *((_DWORD *)this + 9))
        {
LABEL_24:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v17 + 1);
          v15 = (int *)*((_QWORD *)this + 5);
          v17 = *v15;
        }
        *v15 = v17 + 1;
        v19 = *(google::protobuf::internal::ArenaImpl **)v5;
        if (*(_QWORD *)v5)
        {
          if (*((_QWORD *)v19 + 14))
          AlignedAndAddCleanup = (std::string *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(v19, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<std::string>);
        }
        else
        {
          AlignedAndAddCleanup = (std::string *)operator new();
        }
        AlignedAndAddCleanup->__r_.__value_.__r.__words[0] = 0;
        AlignedAndAddCleanup->__r_.__value_.__l.__size_ = 0;
        AlignedAndAddCleanup->__r_.__value_.__r.__words[2] = 0;
        v20 = *((_QWORD *)this + 5);
        v21 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v21 + 1;
        *(_QWORD *)(v20 + 8 * v21 + 8) = AlignedAndAddCleanup;
        v14 = (std::string::value_type *)v24;
LABEL_31:
        v13 = google::protobuf::internal::InlineGreedyStringParser(AlignedAndAddCleanup, v14, (uint64_t)a3);
        v24 = (google::protobuf::internal *)v13;
        if (!v13)
          return 0;
        if (*(_QWORD *)a3 <= (unint64_t)v13 || *v13 != 18)
          continue;
        goto LABEL_19;
      }
      v17 = *((_DWORD *)this + 9);
      goto LABEL_24;
    }
    if (v9 >> 3 == 1 && v9 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      v22 = (std::string *)*((_QWORD *)this + 6);
      if (v22 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v22 = *v6;
        TagFallback = v24;
      }
      v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v22, (std::string::value_type *)TagFallback, (uint64_t)a3);
      goto LABEL_38;
    }
LABEL_12:
    if ((_DWORD)v9)
      v11 = (v9 & 7) == 4;
    else
      v11 = 1;
    if (v11)
    {
      *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
      return TagFallback;
    }
    v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v7, TagFallback, a3);
LABEL_38:
    v24 = v12;
    if (!v12)
      return 0;
  }
  return v24;
}

unsigned __int8 *siri::dialogengine::PatternBinary::Component::InternalSerializeWithCachedSizesToArray(siri::dialogengine::PatternBinary::Component *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  int i;
  uint64_t v8;
  int64_t v9;
  const void *v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v4 = a2;
  if ((*((_BYTE *)this + 16) & 1) != 0)
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 6), a2);
  v6 = *((_DWORD *)this + 8);
  if (v6 >= 1)
  {
    for (i = 0; v6 != i; ++i)
    {
      v8 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((uint64_t)this + 24, i);
      if (*(char *)(v8 + 23) < 0)
      {
        v9 = *(_QWORD *)(v8 + 8);
        if (v9 > 127)
          goto LABEL_15;
      }
      else
      {
        v9 = *(unsigned __int8 *)(v8 + 23);
      }
      if (*(_QWORD *)a3 - (_QWORD)v4 + 14 >= v9)
      {
        *v4 = 18;
        v4[1] = v9;
        if (*(char *)(v8 + 23) >= 0)
          v10 = (const void *)v8;
        else
          v10 = *(const void **)v8;
        memcpy(v4 + 2, v10, v9);
        v4 += v9 + 2;
        continue;
      }
LABEL_15:
      v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a3, 2, v8, v4);
    }
  }
  v11 = *((_QWORD *)this + 1);
  if ((v11 & 1) == 0)
    return (unsigned __int8 *)v4;
  v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v13 + 23) < 0)
  {
    v15 = *(void **)v13;
    v14 = *(_QWORD *)(v13 + 8);
  }
  else
  {
    LODWORD(v14) = *(unsigned __int8 *)(v13 + 23);
    v15 = (void *)v13;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v14)
  {
    v16 = (int)v14;
    memcpy(v4, v15, (int)v14);
    v4 += v16;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v15, v14, (unsigned __int8 *)v4);
}

void siri::dialogengine::PatternBinary::Component::MergeFrom(siri::dialogengine::PatternBinary::Component *this, const siri::dialogengine::PatternBinary::Component *a2)
{
  std::string *v4;
  uint64_t v5;
  std::string *v6;
  std::string **v7;
  std::string *v8;
  const std::string *v9;
  char v10;
  std::string v11[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", 1179);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  if ((*((_BYTE *)a2 + 16) & 1) != 0)
  {
    v8 = (std::string *)*((_QWORD *)this + 6);
    v7 = (std::string **)((char *)this + 48);
    v6 = v8;
    *((_DWORD *)v7 - 8) |= 1u;
    v9 = (const std::string *)*((_QWORD *)a2 + 6);
    if (v8 != v9)
    {
      if (v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)v9);
      else
        std::string::operator=(v6, v9);
    }
  }
}

void sub_1BF85AE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::PatternBinary::Component *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Component>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::PatternBinary::Component *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Component *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Component>);
    siri::dialogengine::PatternBinary::Component::Component(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Component *)operator new();
    siri::dialogengine::PatternBinary::Component::Component(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF85AEB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40D196C376);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Component>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void InitDefaultsscc_info_Group_PatternBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", a4);
  siri::dialogengine::PatternBinary::Group::Group((siri::dialogengine::PatternBinary::Group *)&siri::dialogengine::PatternBinary::_Group_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::PatternBinary::_Group_default_instance_, v4);
  qword_1EF583E78 = (uint64_t)&siri::dialogengine::PatternBinary::_Component_default_instance_;
  unk_1EF583E80 = &siri::dialogengine::PatternBinary::_Component_default_instance_;
}

siri::dialogengine::PatternBinary::Group *siri::dialogengine::PatternBinary::Group::Group(siri::dialogengine::PatternBinary::Group *this)
{
  *(_QWORD *)this = &off_1E792A598;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_Group_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Group_PatternBinary_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  return this;
}

void sub_1BF85B028(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PatternBinary::Group::~Group(siri::dialogengine::PatternBinary::Group *this)
{
  siri::dialogengine::PatternBinary::Group::~Group(this);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_1E792A598;
  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  if (this != (siri::dialogengine::PatternBinary::Group *)&siri::dialogengine::PatternBinary::_Group_default_instance_)
  {
    v6 = *((_QWORD *)this + 5);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 6);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *siri::dialogengine::PatternBinary::Group::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.PatternBinary.Group");
}

siri::dialogengine::PatternBinary::Group *siri::dialogengine::PatternBinary::Group::New(siri::dialogengine::PatternBinary::Group *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Group>(0);
}

siri::dialogengine::PatternBinary::Group *siri::dialogengine::PatternBinary::Group::New(siri::dialogengine::PatternBinary::Group *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Group>(a2);
}

void siri::dialogengine::PatternBinary::Group::Clear(siri::dialogengine::PatternBinary::Group *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  siri::dialogengine::PatternBinary::Component *v5;
  std::string *v6;
  siri::dialogengine::PatternBinary::Component *v7;
  std::string *v8;
  google::protobuf::internal::InternalMetadataWithArenaLite *v9;
  char v10;
  char v11;
  std::string v12[2];

  v2 = *((_DWORD *)this + 4);
  if ((v2 & 0xF) == 0)
    goto LABEL_21;
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0)
      goto LABEL_4;
LABEL_11:
    v4 = *((_QWORD *)this + 4);
    if (*(char *)(v4 + 23) < 0)
    {
      **(_BYTE **)v4 = 0;
      *(_QWORD *)(v4 + 8) = 0;
      if ((v2 & 4) != 0)
        goto LABEL_15;
    }
    else
    {
      *(_BYTE *)v4 = 0;
      *(_BYTE *)(v4 + 23) = 0;
      if ((v2 & 4) != 0)
        goto LABEL_15;
    }
LABEL_5:
    if ((v2 & 8) == 0)
      goto LABEL_21;
    goto LABEL_18;
  }
  v3 = *((_QWORD *)this + 3);
  if (*(char *)(v3 + 23) < 0)
  {
    **(_BYTE **)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0;
    if ((v2 & 2) != 0)
      goto LABEL_11;
  }
  else
  {
    *(_BYTE *)v3 = 0;
    *(_BYTE *)(v3 + 23) = 0;
    if ((v2 & 2) != 0)
      goto LABEL_11;
  }
LABEL_4:
  if ((v2 & 4) == 0)
    goto LABEL_5;
LABEL_15:
  v5 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 5);
  if (!v5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", 1327);
    v6 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: dialog_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
    v5 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 5);
  }
  siri::dialogengine::PatternBinary::Component::Clear(v5);
  if ((v2 & 8) != 0)
  {
LABEL_18:
    v7 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 6);
    if (!v7)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", 1331);
      v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: visual_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
      v7 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 6);
    }
    siri::dialogengine::PatternBinary::Component::Clear(v7);
  }
LABEL_21:
  v10 = *((_BYTE *)this + 8);
  v9 = (siri::dialogengine::PatternBinary::Group *)((char *)this + 8);
  *((_DWORD *)v9 + 2) = 0;
  if ((v10 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v9);
}

void sub_1BF85B1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::PatternBinary::Group::IsInitialized(siri::dialogengine::PatternBinary::Group *this)
{
  return 1;
}

void siri::dialogengine::PatternBinary::Group::CheckTypeAndMergeFrom(siri::dialogengine::PatternBinary::Group *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::PatternBinary::Group::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::PatternBinary::Group::ByteSizeLong(siri::dialogengine::PatternBinary::Group *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v2 = *((_DWORD *)this + 4);
  if ((v2 & 0xF) == 0)
  {
    v3 = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v4 = *((_QWORD *)this + 3);
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = *(_QWORD *)(v4 + 8);
  if ((v5 & 0x80u) == 0)
    v6 = v5;
  v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    v7 = *((_QWORD *)this + 4);
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = *(_QWORD *)(v7 + 8);
    if ((v8 & 0x80u) == 0)
      v9 = v8;
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_15;
    goto LABEL_14;
  }
  v13 = siri::dialogengine::PatternBinary::Component::ByteSizeLong(*((siri::dialogengine::PatternBinary::Component **)this
                                                                   + 5));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_14:
    v10 = siri::dialogengine::PatternBinary::Component::ByteSizeLong(*((siri::dialogengine::PatternBinary::Component **)this
                                                                     + 6));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  v11 = *((_QWORD *)this + 1);
  if ((v11 & 1) != 0)
  {
    v14 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v14 + 23) < 0)
      v15 = *(_QWORD *)(v14 + 8);
    else
      v15 = *(unsigned __int8 *)(v14 + 23);
    v3 += v15;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

uint64_t siri::dialogengine::PatternBinary::Group::GetCachedSize(siri::dialogengine::PatternBinary::Group *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::PatternBinary::Group::_InternalParse(siri::dialogengine::PatternBinary::Group *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  std::string **v5;
  std::string **v6;
  uint64_t *v7;
  google::protobuf::internal *TagFallback;
  const char *v9;
  std::string *v10;
  siri::dialogengine::PatternBinary::Component *v11;
  google::protobuf::internal *v12;
  BOOL v13;
  google::protobuf::internal *v15;

  v15 = a2;
  v5 = (std::string **)((char *)this + 32);
  v6 = (std::string **)((char *)this + 24);
  v7 = (uint64_t *)((char *)this + 8);
  while (2)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v15, *((_DWORD *)a3 + 23)) & 1) != 0)
      return v15;
    TagFallback = (google::protobuf::internal *)((char *)v15 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v15;
    if ((*(char *)v15 & 0x80000000) == 0)
      goto LABEL_6;
    v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
      v15 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, v9);
    v15 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10)
          goto LABEL_24;
        *((_DWORD *)this + 4) |= 1u;
        v10 = (std::string *)*((_QWORD *)this + 3);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_23;
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v10 = *v6;
        goto LABEL_22;
      case 2u:
        if (v9 != 18)
          goto LABEL_24;
        *((_DWORD *)this + 4) |= 4u;
        v11 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 5);
        if (v11)
          goto LABEL_18;
        v11 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Component>(0);
        *((_QWORD *)this + 5) = v11;
        goto LABEL_17;
      case 3u:
        if (v9 != 26)
          goto LABEL_24;
        *((_DWORD *)this + 4) |= 8u;
        v11 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 6);
        if (v11)
          goto LABEL_18;
        v11 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Component>(0);
        *((_QWORD *)this + 6) = v11;
LABEL_17:
        TagFallback = v15;
LABEL_18:
        v12 = (google::protobuf::internal *)google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::PatternBinary::Component>(a3, v11, TagFallback);
        goto LABEL_29;
      case 4u:
        if (v9 != 34)
          goto LABEL_24;
        *((_DWORD *)this + 4) |= 2u;
        v10 = (std::string *)*((_QWORD *)this + 4);
        if (v10 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v10 = *v5;
LABEL_22:
          TagFallback = v15;
        }
LABEL_23:
        v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_29;
      default:
LABEL_24:
        if ((_DWORD)v9)
          v13 = (v9 & 7) == 4;
        else
          v13 = 1;
        if (v13)
        {
          *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
          return TagFallback;
        }
        v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v7, TagFallback, a3);
LABEL_29:
        v15 = v12;
        if (v12)
          continue;
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

unsigned __int8 *siri::dialogengine::PatternBinary::Group::InternalSerializeWithCachedSizesToArray(siri::dialogengine::PatternBinary::Group *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  uint64_t v7;
  siri::dialogengine::PatternBinary::Component *v9;
  unsigned int v10;
  char *v11;
  unsigned int v12;
  _BYTE *v13;
  _BYTE *v14;
  unsigned int v15;
  unsigned int v16;
  siri::dialogengine::PatternBinary::Component *v17;
  unsigned int v18;
  char *v19;
  unsigned int v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned int v23;
  unsigned int v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
  {
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3), a2);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0)
        goto LABEL_4;
      goto LABEL_19;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v9 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 5);
  *v4 = 18;
  v10 = *((_DWORD *)v9 + 5);
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    v12 = v10 >> 7;
    if (v10 >> 14)
    {
      v13 = v4 + 2;
      do
      {
        v14 = v13;
        *v13++ = v12 | 0x80;
        v15 = v12 >> 7;
        v16 = v12 >> 14;
        v12 >>= 7;
      }
      while (v16);
      v11 = v14 + 2;
      *v13 = v15;
    }
    else
    {
      v4[2] = v12;
      v11 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v10;
    v11 = v4 + 2;
  }
  v4 = (char *)siri::dialogengine::PatternBinary::Component::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_19:
  if ((unint64_t)v4 >= *(_QWORD *)a3)
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  v17 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 6);
  *v4 = 26;
  v18 = *((_DWORD *)v17 + 5);
  if (v18 > 0x7F)
  {
    v4[1] = v18 | 0x80;
    v20 = v18 >> 7;
    if (v18 >> 14)
    {
      v21 = v4 + 2;
      do
      {
        v22 = v21;
        *v21++ = v20 | 0x80;
        v23 = v20 >> 7;
        v24 = v20 >> 14;
        v20 >>= 7;
      }
      while (v24);
      v19 = v22 + 2;
      *v21 = v23;
    }
    else
    {
      v4[2] = v20;
      v19 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v18;
    v19 = v4 + 2;
  }
  v4 = (char *)siri::dialogengine::PatternBinary::Component::InternalSerializeWithCachedSizesToArray(v17, v19, a3);
  if ((v6 & 2) != 0)
LABEL_5:
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((_QWORD *)this + 4), v4);
LABEL_6:
  v7 = *((_QWORD *)this + 1);
  if ((v7 & 1) == 0)
    return (unsigned __int8 *)v4;
  v25 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v25 + 23) < 0)
  {
    v27 = *(void **)v25;
    v26 = *(_QWORD *)(v25 + 8);
  }
  else
  {
    LODWORD(v26) = *(unsigned __int8 *)(v25 + 23);
    v27 = (void *)v25;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v26)
  {
    v28 = (int)v26;
    memcpy(v4, v27, (int)v26);
    v4 += v28;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v27, v26, (unsigned __int8 *)v4);
}

char *google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::PatternBinary::Component>(google::protobuf::internal::EpsCopyInputStream *this, siri::dialogengine::PatternBinary::Component *a2, google::protobuf::internal *a3)
{
  int v6;
  const char *v7;
  char *v8;
  char *result;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  int v15;

  v6 = *(char *)a3;
  v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result)
      return result;
    v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    v8 = (char *)a3 + 1;
  }
  v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  v12 = *((_DWORD *)this + 22);
  v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13)
    return 0;
  v14 = v11;
  result = (char *)siri::dialogengine::PatternBinary::Component::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result)
    return result;
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20))
    return 0;
  v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(_QWORD *)this = *((_QWORD *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

void siri::dialogengine::PatternBinary::Group::MergeFrom(siri::dialogengine::PatternBinary::Group *this, const siri::dialogengine::PatternBinary::Group *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  const std::string *v10;
  siri::dialogengine::PatternBinary::Component *v11;
  const siri::dialogengine::PatternBinary::Component *v12;
  siri::dialogengine::PatternBinary::Component *v13;
  const siri::dialogengine::PatternBinary::Component *v14;
  char v15;
  std::string v16[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", 1494);
    v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0xF) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v8);
          if ((v6 & 2) != 0)
          {
LABEL_11:
            v9 = (std::string *)*((_QWORD *)this + 4);
            *((_DWORD *)this + 4) |= 2u;
            v10 = (const std::string *)*((_QWORD *)a2 + 4);
            if (v9 != v10)
            {
              if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v10);
              else
                std::string::operator=(v9, v10);
            }
          }
LABEL_17:
          if ((v6 & 4) != 0)
          {
            *((_DWORD *)this + 4) |= 4u;
            v11 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 5);
            if (!v11)
            {
              v11 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Component>(0);
              *((_QWORD *)this + 5) = v11;
            }
            if (*((_QWORD *)a2 + 5))
              v12 = (const siri::dialogengine::PatternBinary::Component *)*((_QWORD *)a2 + 5);
            else
              v12 = (const siri::dialogengine::PatternBinary::Component *)&siri::dialogengine::PatternBinary::_Component_default_instance_;
            siri::dialogengine::PatternBinary::Component::MergeFrom(v11, v12);
          }
          if ((v6 & 8) != 0)
          {
            *((_DWORD *)this + 4) |= 8u;
            v13 = (siri::dialogengine::PatternBinary::Component *)*((_QWORD *)this + 6);
            if (!v13)
            {
              v13 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Component>(0);
              *((_QWORD *)this + 6) = v13;
            }
            if (*((_QWORD *)a2 + 6))
              v14 = (const siri::dialogengine::PatternBinary::Component *)*((_QWORD *)a2 + 6);
            else
              v14 = (const siri::dialogengine::PatternBinary::Component *)&siri::dialogengine::PatternBinary::_Component_default_instance_;
            siri::dialogengine::PatternBinary::Component::MergeFrom(v13, v14);
          }
          return;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
      goto LABEL_11;
    goto LABEL_17;
  }
}

void sub_1BF85BA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::PatternBinary::Group *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Group>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::PatternBinary::Group *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Group *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Group>);
    siri::dialogengine::PatternBinary::Group::Group(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Group *)operator new();
    siri::dialogengine::PatternBinary::Group::Group(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF85BAD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C404E50D5EBLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Group>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void InitDefaultsscc_info_Metadata_PatternBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", a4);
  siri::dialogengine::PatternBinary::Metadata::Metadata((siri::dialogengine::PatternBinary::Metadata *)&siri::dialogengine::PatternBinary::_Metadata_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::PatternBinary::_Metadata_default_instance_, v4);
}

siri::dialogengine::PatternBinary::Metadata *siri::dialogengine::PatternBinary::Metadata::Metadata(siri::dialogengine::PatternBinary::Metadata *this)
{
  *(_QWORD *)this = &off_1E792A3E8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_Metadata_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Metadata_PatternBinary_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1BF85BCA8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PatternBinary::Metadata::~Metadata(siri::dialogengine::PatternBinary::Metadata *this)
{
  siri::dialogengine::PatternBinary::Metadata::~Metadata(this);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)this = &off_1E792A3E8;
  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *siri::dialogengine::PatternBinary::Metadata::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.PatternBinary.Metadata");
}

siri::dialogengine::PatternBinary::Metadata *siri::dialogengine::PatternBinary::Metadata::New(siri::dialogengine::PatternBinary::Metadata *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Metadata>(0);
}

siri::dialogengine::PatternBinary::Metadata *siri::dialogengine::PatternBinary::Metadata::New(siri::dialogengine::PatternBinary::Metadata *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Metadata>(a2);
}

void siri::dialogengine::PatternBinary::Metadata::Clear(siri::dialogengine::PatternBinary::Metadata *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  google::protobuf::internal::InternalMetadataWithArenaLite *v4;
  char v5;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
    goto LABEL_11;
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0)
      goto LABEL_6;
    goto LABEL_11;
  }
  v2 = *((_QWORD *)this + 3);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v2 = 0;
    *(_BYTE *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(_BYTE **)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    v3 = *((_QWORD *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  v5 = *((_BYTE *)this + 8);
  v4 = (siri::dialogengine::PatternBinary::Metadata *)((char *)this + 8);
  *((_DWORD *)v4 + 2) = 0;
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
}

uint64_t siri::dialogengine::PatternBinary::Metadata::IsInitialized(siri::dialogengine::PatternBinary::Metadata *this)
{
  return 1;
}

void siri::dialogengine::PatternBinary::Metadata::CheckTypeAndMergeFrom(siri::dialogengine::PatternBinary::Metadata *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::PatternBinary::Metadata::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::PatternBinary::Metadata::ByteSizeLong(siri::dialogengine::PatternBinary::Metadata *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    v2 = 0;
    if ((v1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v3 = *((_QWORD *)this + 3);
  v4 = *(unsigned __int8 *)(v3 + 23);
  v5 = *(_QWORD *)(v3 + 8);
  if ((v4 & 0x80u) == 0)
    v5 = v4;
  v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    v6 = *((_QWORD *)this + 4);
    v7 = *(unsigned __int8 *)(v6 + 23);
    v8 = *(_QWORD *)(v6 + 8);
    if ((v7 & 0x80u) == 0)
      v8 = v7;
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  v9 = *((_QWORD *)this + 1);
  if ((v9 & 1) != 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
      v12 = *(_QWORD *)(v11 + 8);
    else
      v12 = *(unsigned __int8 *)(v11 + 23);
    v2 += v12;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t siri::dialogengine::PatternBinary::Metadata::GetCachedSize(siri::dialogengine::PatternBinary::Metadata *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::PatternBinary::Metadata::_InternalParse(siri::dialogengine::PatternBinary::Metadata *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  std::string **v5;
  std::string **v6;
  uint64_t *v7;
  google::protobuf::internal *TagFallback;
  const char *v9;
  google::protobuf::internal *v12;
  std::string *v13;
  google::protobuf::internal *v15;

  v15 = a2;
  v5 = (std::string **)((char *)this + 32);
  v6 = (std::string **)((char *)this + 24);
  v7 = (uint64_t *)((char *)this + 8);
  while (1)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v15, *((_DWORD *)a3 + 23)) & 1) != 0)
      return v15;
    TagFallback = (google::protobuf::internal *)((char *)v15 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v15;
    if ((*(char *)v15 & 0x80000000) == 0)
      goto LABEL_6;
    v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
      v15 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, v9);
    v15 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    if (v9 >> 3 == 2)
    {
      if (v9 == 18)
      {
        *((_DWORD *)this + 4) |= 2u;
        v13 = (std::string *)*((_QWORD *)this + 4);
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v13 = *v5;
          goto LABEL_22;
        }
LABEL_23:
        v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_24;
      }
    }
    else if (v9 >> 3 == 1 && v9 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      v13 = (std::string *)*((_QWORD *)this + 3);
      if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v13 = *v6;
LABEL_22:
        TagFallback = v15;
      }
      goto LABEL_23;
    }
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      break;
    v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v7, TagFallback, a3);
LABEL_24:
    v15 = v12;
    if (!v12)
      return 0;
  }
  *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
  return TagFallback;
}

unsigned __int8 *siri::dialogengine::PatternBinary::Metadata::InternalSerializeWithCachedSizesToArray(siri::dialogengine::PatternBinary::Metadata *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  uint64_t v7;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v4 = (unsigned __int8 *)a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3), a2);
  if ((v6 & 2) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 4), (char *)v4);
  v7 = *((_QWORD *)this + 1);
  if ((v7 & 1) == 0)
    return v4;
  v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    v11 = *(void **)v9;
    v10 = *(_QWORD *)(v9 + 8);
  }
  else
  {
    LODWORD(v10) = *(unsigned __int8 *)(v9 + 23);
    v11 = (void *)v9;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v10)
  {
    v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

void siri::dialogengine::PatternBinary::Metadata::MergeFrom(siri::dialogengine::PatternBinary::Metadata *this, const siri::dialogengine::PatternBinary::Metadata *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  std::string **v10;
  std::string *v11;
  const std::string *v12;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", 717);
    v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v8);
          if ((v6 & 2) == 0)
            return;
          goto LABEL_11;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) == 0)
      return;
LABEL_11:
    v11 = (std::string *)*((_QWORD *)this + 4);
    v10 = (std::string **)((char *)this + 32);
    v9 = v11;
    *((_DWORD *)v10 - 4) |= 2u;
    v12 = (const std::string *)*((_QWORD *)a2 + 4);
    if (v11 != v12)
    {
      if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v10, (uint64_t)v12);
      else
        std::string::operator=(v9, v12);
    }
  }
}

void sub_1BF85C230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::PatternBinary::Metadata *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Metadata>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::PatternBinary::Metadata *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Metadata *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Metadata>);
    siri::dialogengine::PatternBinary::Metadata::Metadata(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Metadata *)operator new();
    siri::dialogengine::PatternBinary::Metadata::Metadata(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF85C2CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40DFBAE579);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Metadata>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void InitDefaultsscc_info_Pattern_PatternBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", a4);
  siri::dialogengine::PatternBinary::Pattern::Pattern((siri::dialogengine::PatternBinary::Pattern *)&siri::dialogengine::PatternBinary::_Pattern_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::PatternBinary::_Pattern_default_instance_, v4);
}

void InitDefaultsscc_info_Setting_PatternBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", a4);
  siri::dialogengine::PatternBinary::Setting::Setting((siri::dialogengine::PatternBinary::Setting *)&siri::dialogengine::PatternBinary::_Setting_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::PatternBinary::_Setting_default_instance_, v4);
}

siri::dialogengine::PatternBinary::Setting *siri::dialogengine::PatternBinary::Setting::Setting(siri::dialogengine::PatternBinary::Setting *this)
{
  *(_QWORD *)this = &off_1E792A478;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_Setting_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Setting_PatternBinary_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1BF85C4B4(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PatternBinary::Setting::~Setting(siri::dialogengine::PatternBinary::Setting *this)
{
  siri::dialogengine::PatternBinary::Setting::~Setting(this);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)this = &off_1E792A478;
  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *siri::dialogengine::PatternBinary::Setting::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.PatternBinary.Setting");
}

siri::dialogengine::PatternBinary::Setting *siri::dialogengine::PatternBinary::Setting::New(siri::dialogengine::PatternBinary::Setting *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Setting>(0);
}

siri::dialogengine::PatternBinary::Setting *siri::dialogengine::PatternBinary::Setting::New(siri::dialogengine::PatternBinary::Setting *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Setting>(a2);
}

void siri::dialogengine::PatternBinary::Setting::Clear(siri::dialogengine::PatternBinary::Setting *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  google::protobuf::internal::InternalMetadataWithArenaLite *v4;
  char v5;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
    goto LABEL_11;
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0)
      goto LABEL_6;
    goto LABEL_11;
  }
  v2 = *((_QWORD *)this + 3);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v2 = 0;
    *(_BYTE *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(_BYTE **)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    v3 = *((_QWORD *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  v5 = *((_BYTE *)this + 8);
  v4 = (siri::dialogengine::PatternBinary::Setting *)((char *)this + 8);
  *((_DWORD *)v4 + 2) = 0;
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
}

uint64_t siri::dialogengine::PatternBinary::Setting::IsInitialized(siri::dialogengine::PatternBinary::Setting *this)
{
  return 1;
}

void siri::dialogengine::PatternBinary::Setting::CheckTypeAndMergeFrom(siri::dialogengine::PatternBinary::Setting *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::PatternBinary::Setting::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::PatternBinary::Setting::ByteSizeLong(siri::dialogengine::PatternBinary::Setting *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    v2 = 0;
    if ((v1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v3 = *((_QWORD *)this + 3);
  v4 = *(unsigned __int8 *)(v3 + 23);
  v5 = *(_QWORD *)(v3 + 8);
  if ((v4 & 0x80u) == 0)
    v5 = v4;
  v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    v6 = *((_QWORD *)this + 4);
    v7 = *(unsigned __int8 *)(v6 + 23);
    v8 = *(_QWORD *)(v6 + 8);
    if ((v7 & 0x80u) == 0)
      v8 = v7;
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  v9 = *((_QWORD *)this + 1);
  if ((v9 & 1) != 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
      v12 = *(_QWORD *)(v11 + 8);
    else
      v12 = *(unsigned __int8 *)(v11 + 23);
    v2 += v12;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t siri::dialogengine::PatternBinary::Setting::GetCachedSize(siri::dialogengine::PatternBinary::Setting *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::PatternBinary::Setting::_InternalParse(siri::dialogengine::PatternBinary::Setting *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  std::string **v5;
  std::string **v6;
  uint64_t *v7;
  google::protobuf::internal *TagFallback;
  const char *v9;
  google::protobuf::internal *v12;
  std::string *v13;
  google::protobuf::internal *v15;

  v15 = a2;
  v5 = (std::string **)((char *)this + 32);
  v6 = (std::string **)((char *)this + 24);
  v7 = (uint64_t *)((char *)this + 8);
  while (1)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v15, *((_DWORD *)a3 + 23)) & 1) != 0)
      return v15;
    TagFallback = (google::protobuf::internal *)((char *)v15 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v15;
    if ((*(char *)v15 & 0x80000000) == 0)
      goto LABEL_6;
    v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
      v15 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, v9);
    v15 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    if (v9 >> 3 == 2)
    {
      if (v9 == 18)
      {
        *((_DWORD *)this + 4) |= 2u;
        v13 = (std::string *)*((_QWORD *)this + 4);
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v13 = *v5;
          goto LABEL_22;
        }
LABEL_23:
        v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_24;
      }
    }
    else if (v9 >> 3 == 1 && v9 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      v13 = (std::string *)*((_QWORD *)this + 3);
      if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v13 = *v6;
LABEL_22:
        TagFallback = v15;
      }
      goto LABEL_23;
    }
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      break;
    v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v7, TagFallback, a3);
LABEL_24:
    v15 = v12;
    if (!v12)
      return 0;
  }
  *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
  return TagFallback;
}

unsigned __int8 *siri::dialogengine::PatternBinary::Setting::InternalSerializeWithCachedSizesToArray(siri::dialogengine::PatternBinary::Setting *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  uint64_t v7;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v4 = (unsigned __int8 *)a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3), a2);
  if ((v6 & 2) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 4), (char *)v4);
  v7 = *((_QWORD *)this + 1);
  if ((v7 & 1) == 0)
    return v4;
  v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    v11 = *(void **)v9;
    v10 = *(_QWORD *)(v9 + 8);
  }
  else
  {
    LODWORD(v10) = *(unsigned __int8 *)(v9 + 23);
    v11 = (void *)v9;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v10)
  {
    v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

void siri::dialogengine::PatternBinary::Setting::MergeFrom(siri::dialogengine::PatternBinary::Setting *this, const siri::dialogengine::PatternBinary::Setting *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  std::string **v10;
  std::string *v11;
  const std::string *v12;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", 952);
    v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v8);
          if ((v6 & 2) == 0)
            return;
          goto LABEL_11;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) == 0)
      return;
LABEL_11:
    v11 = (std::string *)*((_QWORD *)this + 4);
    v10 = (std::string **)((char *)this + 32);
    v9 = v11;
    *((_DWORD *)v10 - 4) |= 2u;
    v12 = (const std::string *)*((_QWORD *)a2 + 4);
    if (v11 != v12)
    {
      if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v10, (uint64_t)v12);
      else
        std::string::operator=(v9, v12);
    }
  }
}

void sub_1BF85CA3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::PatternBinary::Setting *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Setting>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::PatternBinary::Setting *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Setting *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Setting>);
    siri::dialogengine::PatternBinary::Setting::Setting(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Setting *)operator new();
    siri::dialogengine::PatternBinary::Setting::Setting(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF85CAD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40DFBAE579);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Setting>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

siri::dialogengine::PatternBinary::Pattern *siri::dialogengine::PatternBinary::Pattern::Pattern(siri::dialogengine::PatternBinary::Pattern *this)
{
  *(_QWORD *)this = &off_1E792A358;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  if (atomic_load(scc_info_Pattern_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Pattern_PatternBinary_2eproto);
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1BF85CC40(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;

  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 72));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 48));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PatternBinary::Pattern::~Pattern(siri::dialogengine::PatternBinary::Pattern *this)
{
  siri::dialogengine::PatternBinary::Pattern::~Pattern(this);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;

  *(_QWORD *)this = &off_1E792A358;
  v2 = *((_QWORD *)this + 12);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 13);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  v6 = *((_QWORD *)this + 14);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0)
      operator delete(*(void **)v6);
    MEMORY[0x1C3B8D890](v6, 0x1012C40EC159624);
  }
  v8 = *((_QWORD *)this + 15);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0)
      operator delete(*(void **)v8);
    MEMORY[0x1C3B8D890](v8, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::PatternBinary::Pattern *)((char *)this + 72));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::PatternBinary::Pattern *)((char *)this + 48));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::PatternBinary::Pattern *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *siri::dialogengine::PatternBinary::Pattern::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.PatternBinary.Pattern");
}

siri::dialogengine::PatternBinary::Pattern *siri::dialogengine::PatternBinary::Pattern::New(siri::dialogengine::PatternBinary::Pattern *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Pattern>(0);
}

siri::dialogengine::PatternBinary::Pattern *siri::dialogengine::PatternBinary::Pattern::New(siri::dialogengine::PatternBinary::Pattern *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Pattern>(a2);
}

void siri::dialogengine::PatternBinary::Pattern::Clear(siri::dialogengine::PatternBinary::Pattern *this)
{
  uint64_t v2;
  siri::dialogengine::PatternBinary::Metadata **v3;
  siri::dialogengine::PatternBinary::Metadata *v4;
  std::string *v5;
  uint64_t v6;
  siri::dialogengine::PatternBinary::Setting **v7;
  siri::dialogengine::PatternBinary::Setting *v8;
  std::string *v9;
  uint64_t v10;
  siri::dialogengine::PatternBinary::Group **v11;
  siri::dialogengine::PatternBinary::Group *v12;
  std::string *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  google::protobuf::internal::InternalMetadataWithArenaLite *v19;
  char v20;
  char v21;
  std::string v22[2];

  v2 = *((unsigned int *)this + 8);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v2)
  {
    v3 = (siri::dialogengine::PatternBinary::Metadata **)(*((_QWORD *)this + 5) + 8);
    do
    {
      v4 = *v3++;
      siri::dialogengine::PatternBinary::Metadata::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  v6 = *((unsigned int *)this + 14);
  if ((v6 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v9 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v6)
  {
    v7 = (siri::dialogengine::PatternBinary::Setting **)(*((_QWORD *)this + 8) + 8);
    do
    {
      v8 = *v7++;
      siri::dialogengine::PatternBinary::Setting::Clear(v8);
      --v6;
    }
    while (v6);
    *((_DWORD *)this + 14) = 0;
  }
  v10 = *((unsigned int *)this + 20);
  if ((v10 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v13 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v13->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v10)
  {
    v11 = (siri::dialogengine::PatternBinary::Group **)(*((_QWORD *)this + 11) + 8);
    do
    {
      v12 = *v11++;
      siri::dialogengine::PatternBinary::Group::Clear(v12);
      --v10;
    }
    while (v10);
    *((_DWORD *)this + 20) = 0;
  }
  v14 = *((_DWORD *)this + 4);
  if ((v14 & 0xF) == 0)
    goto LABEL_40;
  if ((v14 & 1) != 0)
  {
    v15 = *((_QWORD *)this + 12);
    if (*(char *)(v15 + 23) < 0)
    {
      **(_BYTE **)v15 = 0;
      *(_QWORD *)(v15 + 8) = 0;
      if ((v14 & 2) != 0)
        goto LABEL_29;
    }
    else
    {
      *(_BYTE *)v15 = 0;
      *(_BYTE *)(v15 + 23) = 0;
      if ((v14 & 2) != 0)
        goto LABEL_29;
    }
LABEL_22:
    if ((v14 & 4) == 0)
      goto LABEL_23;
    goto LABEL_33;
  }
  if ((v14 & 2) == 0)
    goto LABEL_22;
LABEL_29:
  v16 = *((_QWORD *)this + 13);
  if ((*(char *)(v16 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v16 = 0;
    *(_BYTE *)(v16 + 23) = 0;
    if ((v14 & 4) != 0)
      goto LABEL_33;
LABEL_23:
    if ((v14 & 8) == 0)
      goto LABEL_40;
LABEL_37:
    v18 = *((_QWORD *)this + 15);
    if (*(char *)(v18 + 23) < 0)
    {
      **(_BYTE **)v18 = 0;
      *(_QWORD *)(v18 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v18 = 0;
      *(_BYTE *)(v18 + 23) = 0;
    }
    goto LABEL_40;
  }
  **(_BYTE **)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  if ((v14 & 4) == 0)
    goto LABEL_23;
LABEL_33:
  v17 = *((_QWORD *)this + 14);
  if (*(char *)(v17 + 23) < 0)
  {
    **(_BYTE **)v17 = 0;
    *(_QWORD *)(v17 + 8) = 0;
    if ((v14 & 8) == 0)
      goto LABEL_40;
    goto LABEL_37;
  }
  *(_BYTE *)v17 = 0;
  *(_BYTE *)(v17 + 23) = 0;
  if ((v14 & 8) != 0)
    goto LABEL_37;
LABEL_40:
  v20 = *((_BYTE *)this + 8);
  v19 = (siri::dialogengine::PatternBinary::Pattern *)((char *)this + 8);
  *((_DWORD *)v19 + 2) = 0;
  if ((v20 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v19);
}

void sub_1BF85CF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::PatternBinary::Pattern::IsInitialized(siri::dialogengine::PatternBinary::Pattern *this)
{
  return *((_DWORD *)this + 4) & 1;
}

void siri::dialogengine::PatternBinary::Pattern::CheckTypeAndMergeFrom(siri::dialogengine::PatternBinary::Pattern *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::PatternBinary::Pattern::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::PatternBinary::Pattern::ByteSizeLong(siri::dialogengine::PatternBinary::Pattern *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  siri::dialogengine::PatternBinary::Metadata **v9;
  uint64_t v10;
  siri::dialogengine::PatternBinary::Metadata *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  siri::dialogengine::PatternBinary::Setting **v16;
  uint64_t v17;
  siri::dialogengine::PatternBinary::Setting *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  siri::dialogengine::PatternBinary::Group **v23;
  uint64_t v24;
  siri::dialogengine::PatternBinary::Group *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;

  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 12);
    v4 = *(unsigned __int8 *)(v3 + 23);
    v5 = *(_QWORD *)(v3 + 8);
    if ((v4 & 0x80u) == 0)
      v5 = v4;
    v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    v2 = 0;
  }
  v6 = *((int *)this + 8);
  v7 = v2 + v6;
  v8 = *((_QWORD *)this + 5);
  if (v8)
    v9 = (siri::dialogengine::PatternBinary::Metadata **)(v8 + 8);
  else
    v9 = 0;
  if ((_DWORD)v6)
  {
    v10 = 8 * v6;
    do
    {
      v11 = *v9++;
      v12 = siri::dialogengine::PatternBinary::Metadata::ByteSizeLong(v11);
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  v13 = *((int *)this + 14);
  v14 = v7 + v13;
  v15 = *((_QWORD *)this + 8);
  if (v15)
    v16 = (siri::dialogengine::PatternBinary::Setting **)(v15 + 8);
  else
    v16 = 0;
  if ((_DWORD)v13)
  {
    v17 = 8 * v13;
    do
    {
      v18 = *v16++;
      v19 = siri::dialogengine::PatternBinary::Setting::ByteSizeLong(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  v20 = *((int *)this + 20);
  v21 = v14 + v20;
  v22 = *((_QWORD *)this + 11);
  if (v22)
    v23 = (siri::dialogengine::PatternBinary::Group **)(v22 + 8);
  else
    v23 = 0;
  if ((_DWORD)v20)
  {
    v24 = 8 * v20;
    do
    {
      v25 = *v23++;
      v26 = siri::dialogengine::PatternBinary::Group::ByteSizeLong(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  v27 = *((_DWORD *)this + 4);
  if ((v27 & 0xE) != 0)
  {
    if ((v27 & 2) != 0)
    {
      v33 = *((_QWORD *)this + 13);
      v34 = *(unsigned __int8 *)(v33 + 23);
      v35 = *(_QWORD *)(v33 + 8);
      if ((v34 & 0x80u) == 0)
        v35 = v34;
      v21 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v27 & 4) == 0)
      {
LABEL_27:
        if ((v27 & 8) == 0)
          goto LABEL_31;
        goto LABEL_28;
      }
    }
    else if ((v27 & 4) == 0)
    {
      goto LABEL_27;
    }
    v36 = *((_QWORD *)this + 14);
    v37 = *(unsigned __int8 *)(v36 + 23);
    v38 = *(_QWORD *)(v36 + 8);
    if ((v37 & 0x80u) == 0)
      v38 = v37;
    v21 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v27 & 8) != 0)
    {
LABEL_28:
      v28 = *((_QWORD *)this + 15);
      v29 = *(unsigned __int8 *)(v28 + 23);
      v30 = *(_QWORD *)(v28 + 8);
      if ((v29 & 0x80u) == 0)
        v30 = v29;
      v21 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_31:
  v31 = *((_QWORD *)this + 1);
  if ((v31 & 1) != 0)
  {
    v39 = v31 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v39 + 23) < 0)
      v40 = *(_QWORD *)(v39 + 8);
    else
      v40 = *(unsigned __int8 *)(v39 + 23);
    v21 += v40;
  }
  *((_DWORD *)this + 5) = v21;
  return v21;
}

uint64_t siri::dialogengine::PatternBinary::Pattern::GetCachedSize(siri::dialogengine::PatternBinary::Pattern *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::PatternBinary::Pattern::_InternalParse(siri::dialogengine::PatternBinary::Pattern *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  google::protobuf::internal *TagFallback;
  const char *v9;
  std::string *v10;
  std::string **v11;
  google::protobuf::internal *v12;
  google::protobuf::internal *v13;
  google::protobuf::internal *v14;
  int *v15;
  uint64_t v16;
  int v17;
  siri::dialogengine::PatternBinary::Metadata *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  char *v22;
  char *SizeFallback;
  unsigned int v24;
  int v25;
  int v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v30;
  google::protobuf::internal *v31;
  google::protobuf::internal *v32;
  int *v33;
  uint64_t v34;
  int v35;
  siri::dialogengine::PatternBinary::Setting *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  char *v40;
  char *v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unint64_t v47;
  google::protobuf::internal *v48;
  google::protobuf::internal *v49;
  int *v50;
  uint64_t v51;
  int v52;
  siri::dialogengine::PatternBinary::Group *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  char *v57;
  char *v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  unint64_t v64;
  BOOL v65;
  std::string **v67;
  std::string **v68;
  std::string **v69;
  std::string **v70;
  uint64_t *v71;
  google::protobuf::internal *v72;

  v5 = (unsigned int *)((char *)this + 72);
  v6 = (unsigned int *)((char *)this + 48);
  v7 = (unsigned int *)((char *)this + 24);
  v69 = (std::string **)((char *)this + 112);
  v70 = (std::string **)((char *)this + 120);
  v67 = (std::string **)((char *)this + 96);
  v68 = (std::string **)((char *)this + 104);
  v71 = (uint64_t *)((char *)this + 8);
  v72 = a2;
  while (2)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v72, *((_DWORD *)a3 + 23)) & 1) != 0)
      return v72;
    TagFallback = (google::protobuf::internal *)((char *)v72 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v72;
    if ((*(char *)v72 & 0x80000000) == 0)
      goto LABEL_6;
    v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v72 + 2);
LABEL_6:
      v72 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v72, v9);
    v72 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10)
          goto LABEL_83;
        *((_DWORD *)this + 4) |= 1u;
        v10 = (std::string *)*((_QWORD *)this + 12);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_23;
        v11 = v67;
        goto LABEL_22;
      case 2u:
        if (v9 != 18)
          goto LABEL_83;
        *((_DWORD *)this + 4) |= 2u;
        v10 = (std::string *)*((_QWORD *)this + 13);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_23;
        v11 = v68;
        goto LABEL_22;
      case 3u:
        if (v9 != 26)
          goto LABEL_83;
        *((_DWORD *)this + 4) |= 4u;
        v10 = (std::string *)*((_QWORD *)this + 14);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_23;
        v11 = v69;
        goto LABEL_22;
      case 4u:
        if (v9 != 34)
          goto LABEL_83;
        *((_DWORD *)this + 4) |= 8u;
        v10 = (std::string *)*((_QWORD *)this + 15);
        if (v10 != (std::string *)&google::protobuf::internal::fixed_address_empty_string)
          goto LABEL_23;
        v11 = v70;
LABEL_22:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v11, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v10 = *v11;
        TagFallback = v72;
LABEL_23:
        v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v10, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_24;
      case 5u:
        if (v9 != 42)
          goto LABEL_83;
        v13 = (google::protobuf::internal *)((char *)TagFallback - 1);
LABEL_28:
        v14 = (google::protobuf::internal *)((char *)v13 + 1);
        v72 = v14;
        v15 = (int *)*((_QWORD *)this + 5);
        if (!v15)
        {
          v17 = *((_DWORD *)this + 9);
LABEL_33:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v17 + 1);
          v15 = (int *)*((_QWORD *)this + 5);
          v17 = *v15;
          goto LABEL_34;
        }
        v16 = *((int *)this + 8);
        v17 = *v15;
        if ((int)v16 < *v15)
        {
          *((_DWORD *)this + 8) = v16 + 1;
          v18 = *(siri::dialogengine::PatternBinary::Metadata **)&v15[2 * v16 + 2];
          goto LABEL_35;
        }
        if (v17 == *((_DWORD *)this + 9))
          goto LABEL_33;
LABEL_34:
        *v15 = v17 + 1;
        v18 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Metadata>(*((google::protobuf::internal::ArenaImpl **)this + 3));
        v19 = *((_QWORD *)this + 5);
        v20 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v20 + 1;
        *(_QWORD *)(v19 + 8 * v20 + 8) = v18;
        v14 = v72;
LABEL_35:
        v21 = *(unsigned __int8 *)v14;
        if (*(char *)v14 < 0)
        {
          SizeFallback = google::protobuf::internal::ReadSizeFallback(v14, (const char *)*(unsigned __int8 *)v14);
          if (!SizeFallback)
            goto LABEL_88;
          v22 = SizeFallback;
          v21 = v24;
        }
        else
        {
          v22 = (char *)v14 + 1;
        }
        v25 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v22, v21);
        v26 = *((_DWORD *)a3 + 22);
        v27 = __OFSUB__(v26--, 1);
        *((_DWORD *)a3 + 22) = v26;
        if (v26 < 0 == v27)
        {
          v28 = v25;
          v13 = siri::dialogengine::PatternBinary::Metadata::_InternalParse(v18, (google::protobuf::internal *)v22, a3);
          if (v13)
          {
            ++*((_DWORD *)a3 + 22);
            if (!*((_DWORD *)a3 + 20))
            {
              v29 = *((_DWORD *)a3 + 7) + v28;
              *((_DWORD *)a3 + 7) = v29;
              v30 = *((_QWORD *)a3 + 1) + (v29 & (v29 >> 31));
              *(_QWORD *)a3 = v30;
              v72 = v13;
              if (v30 <= (unint64_t)v13 || *(_BYTE *)v13 != 42)
                continue;
              goto LABEL_28;
            }
          }
        }
        goto LABEL_88;
      case 7u:
        if (v9 != 58)
          goto LABEL_83;
        v31 = (google::protobuf::internal *)((char *)TagFallback - 1);
LABEL_47:
        v32 = (google::protobuf::internal *)((char *)v31 + 1);
        v72 = v32;
        v33 = (int *)*((_QWORD *)this + 8);
        if (!v33)
        {
          v35 = *((_DWORD *)this + 15);
LABEL_52:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v35 + 1);
          v33 = (int *)*((_QWORD *)this + 8);
          v35 = *v33;
          goto LABEL_53;
        }
        v34 = *((int *)this + 14);
        v35 = *v33;
        if ((int)v34 < *v33)
        {
          *((_DWORD *)this + 14) = v34 + 1;
          v36 = *(siri::dialogengine::PatternBinary::Setting **)&v33[2 * v34 + 2];
          goto LABEL_54;
        }
        if (v35 == *((_DWORD *)this + 15))
          goto LABEL_52;
LABEL_53:
        *v33 = v35 + 1;
        v36 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Setting>(*((google::protobuf::internal::ArenaImpl **)this + 6));
        v37 = *((_QWORD *)this + 8);
        v38 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v38 + 1;
        *(_QWORD *)(v37 + 8 * v38 + 8) = v36;
        v32 = v72;
LABEL_54:
        v39 = *(unsigned __int8 *)v32;
        if (*(char *)v32 < 0)
        {
          v41 = google::protobuf::internal::ReadSizeFallback(v32, (const char *)*(unsigned __int8 *)v32);
          if (!v41)
            goto LABEL_88;
          v40 = v41;
          v39 = v42;
        }
        else
        {
          v40 = (char *)v32 + 1;
        }
        v43 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v40, v39);
        v44 = *((_DWORD *)a3 + 22);
        v27 = __OFSUB__(v44--, 1);
        *((_DWORD *)a3 + 22) = v44;
        if (v44 < 0 == v27)
        {
          v45 = v43;
          v31 = siri::dialogengine::PatternBinary::Setting::_InternalParse(v36, (google::protobuf::internal *)v40, a3);
          if (v31)
          {
            ++*((_DWORD *)a3 + 22);
            if (!*((_DWORD *)a3 + 20))
            {
              v46 = *((_DWORD *)a3 + 7) + v45;
              *((_DWORD *)a3 + 7) = v46;
              v47 = *((_QWORD *)a3 + 1) + (v46 & (v46 >> 31));
              *(_QWORD *)a3 = v47;
              v72 = v31;
              if (v47 <= (unint64_t)v31 || *(_BYTE *)v31 != 58)
                continue;
              goto LABEL_47;
            }
          }
        }
        goto LABEL_88;
      case 8u:
        if (v9 != 66)
          goto LABEL_83;
        v48 = (google::protobuf::internal *)((char *)TagFallback - 1);
LABEL_66:
        v49 = (google::protobuf::internal *)((char *)v48 + 1);
        v72 = v49;
        v50 = (int *)*((_QWORD *)this + 11);
        if (!v50)
        {
          v52 = *((_DWORD *)this + 21);
LABEL_71:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v52 + 1);
          v50 = (int *)*((_QWORD *)this + 11);
          v52 = *v50;
          goto LABEL_72;
        }
        v51 = *((int *)this + 20);
        v52 = *v50;
        if ((int)v51 < *v50)
        {
          *((_DWORD *)this + 20) = v51 + 1;
          v53 = *(siri::dialogengine::PatternBinary::Group **)&v50[2 * v51 + 2];
          goto LABEL_73;
        }
        if (v52 == *((_DWORD *)this + 21))
          goto LABEL_71;
LABEL_72:
        *v50 = v52 + 1;
        v53 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Group>(*((google::protobuf::internal::ArenaImpl **)this + 9));
        v54 = *((_QWORD *)this + 11);
        v55 = *((int *)this + 20);
        *((_DWORD *)this + 20) = v55 + 1;
        *(_QWORD *)(v54 + 8 * v55 + 8) = v53;
        v49 = v72;
LABEL_73:
        v56 = *(unsigned __int8 *)v49;
        if (*(char *)v49 < 0)
        {
          v58 = google::protobuf::internal::ReadSizeFallback(v49, (const char *)*(unsigned __int8 *)v49);
          if (!v58)
            goto LABEL_88;
          v57 = v58;
          v56 = v59;
        }
        else
        {
          v57 = (char *)v49 + 1;
        }
        v60 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v57, v56);
        v61 = *((_DWORD *)a3 + 22);
        v27 = __OFSUB__(v61--, 1);
        *((_DWORD *)a3 + 22) = v61;
        if (v61 < 0 == v27)
        {
          v62 = v60;
          v48 = siri::dialogengine::PatternBinary::Group::_InternalParse(v53, (google::protobuf::internal *)v57, a3);
          if (v48)
          {
            ++*((_DWORD *)a3 + 22);
            if (!*((_DWORD *)a3 + 20))
            {
              v63 = *((_DWORD *)a3 + 7) + v62;
              *((_DWORD *)a3 + 7) = v63;
              v64 = *((_QWORD *)a3 + 1) + (v63 & (v63 >> 31));
              *(_QWORD *)a3 = v64;
              v72 = v48;
              if (v64 <= (unint64_t)v48 || *(_BYTE *)v48 != 66)
                continue;
              goto LABEL_66;
            }
          }
        }
LABEL_88:
        TagFallback = 0;
        break;
      default:
LABEL_83:
        if ((_DWORD)v9)
          v65 = (v9 & 7) == 4;
        else
          v65 = 1;
        if (v65)
        {
          *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
          return TagFallback;
        }
        v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v71, TagFallback, a3);
LABEL_24:
        v72 = v12;
        if (!v12)
          goto LABEL_88;
        continue;
    }
    return TagFallback;
  }
}

unsigned __int8 *siri::dialogengine::PatternBinary::Pattern::InternalSerializeWithCachedSizesToArray(siri::dialogengine::PatternBinary::Pattern *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  int v7;
  int v8;
  std::string *v9;
  std::string *v10;
  siri::dialogengine::PatternBinary::Metadata *v11;
  unsigned int v12;
  char *v13;
  unsigned int v14;
  _BYTE *v15;
  _BYTE *v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  int v20;
  std::string *v21;
  std::string *v22;
  siri::dialogengine::PatternBinary::Setting *v23;
  unsigned int v24;
  char *v25;
  unsigned int v26;
  _BYTE *v27;
  _BYTE *v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  std::string *v33;
  std::string *v34;
  siri::dialogengine::PatternBinary::Group *v35;
  unsigned int v36;
  char *v37;
  unsigned int v38;
  _BYTE *v39;
  _BYTE *v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char v49;
  std::string v50[2];

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
  {
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 12), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_64;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 13), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_64:
  v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((_QWORD *)this + 14), v4);
  if ((v6 & 8) != 0)
LABEL_5:
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((_QWORD *)this + 15), v4);
LABEL_6:
  v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    v8 = 0;
    while ((unint64_t)v4 < *(_QWORD *)a3)
    {
      if (v8 < 0)
        goto LABEL_10;
LABEL_11:
      if (*((_DWORD *)this + 8) <= v8)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v50, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
        v10 = google::protobuf::internal::LogMessage::operator<<(v50, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v49, (const char **)&v10->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v50[0].__r_.__value_.__l.__data_);
      }
      v11 = *(siri::dialogengine::PatternBinary::Metadata **)(*((_QWORD *)this + 5) + 8 * v8 + 8);
      *v4 = 42;
      v12 = *((_DWORD *)v11 + 5);
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        v14 = v12 >> 7;
        if (v12 >> 14)
        {
          v15 = v4 + 2;
          do
          {
            v16 = v15;
            *v15++ = v14 | 0x80;
            v17 = v14 >> 7;
            v18 = v14 >> 14;
            v14 >>= 7;
          }
          while (v18);
          v13 = v16 + 2;
          *v15 = v17;
        }
        else
        {
          v4[2] = v14;
          v13 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v12;
        v13 = v4 + 2;
      }
      v4 = (char *)siri::dialogengine::PatternBinary::Metadata::InternalSerializeWithCachedSizesToArray(v11, v13, a3);
      if (++v8 == v7)
        goto LABEL_24;
    }
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_11;
LABEL_10:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v50, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v9 = google::protobuf::internal::LogMessage::operator<<(v50, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v49, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v50[0].__r_.__value_.__l.__data_);
    goto LABEL_11;
  }
LABEL_24:
  v19 = *((_DWORD *)this + 14);
  if (v19)
  {
    v20 = 0;
    while ((unint64_t)v4 < *(_QWORD *)a3)
    {
      if (v20 < 0)
        goto LABEL_28;
LABEL_29:
      if (*((_DWORD *)this + 14) <= v20)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v50, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
        v22 = google::protobuf::internal::LogMessage::operator<<(v50, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v49, (const char **)&v22->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v50[0].__r_.__value_.__l.__data_);
      }
      v23 = *(siri::dialogengine::PatternBinary::Setting **)(*((_QWORD *)this + 8) + 8 * v20 + 8);
      *v4 = 58;
      v24 = *((_DWORD *)v23 + 5);
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        v26 = v24 >> 7;
        if (v24 >> 14)
        {
          v27 = v4 + 2;
          do
          {
            v28 = v27;
            *v27++ = v26 | 0x80;
            v29 = v26 >> 7;
            v30 = v26 >> 14;
            v26 >>= 7;
          }
          while (v30);
          v25 = v28 + 2;
          *v27 = v29;
        }
        else
        {
          v4[2] = v26;
          v25 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v24;
        v25 = v4 + 2;
      }
      v4 = (char *)siri::dialogengine::PatternBinary::Setting::InternalSerializeWithCachedSizesToArray(v23, v25, a3);
      if (++v20 == v19)
        goto LABEL_42;
    }
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    if ((v20 & 0x80000000) == 0)
      goto LABEL_29;
LABEL_28:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v50, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v21 = google::protobuf::internal::LogMessage::operator<<(v50, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v49, (const char **)&v21->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v50[0].__r_.__value_.__l.__data_);
    goto LABEL_29;
  }
LABEL_42:
  v31 = *((_DWORD *)this + 20);
  if (v31)
  {
    v32 = 0;
    while ((unint64_t)v4 < *(_QWORD *)a3)
    {
      if (v32 < 0)
        goto LABEL_46;
LABEL_47:
      if (*((_DWORD *)this + 20) <= v32)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v50, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
        v34 = google::protobuf::internal::LogMessage::operator<<(v50, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v49, (const char **)&v34->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v50[0].__r_.__value_.__l.__data_);
      }
      v35 = *(siri::dialogengine::PatternBinary::Group **)(*((_QWORD *)this + 11) + 8 * v32 + 8);
      *v4 = 66;
      v36 = *((_DWORD *)v35 + 5);
      if (v36 > 0x7F)
      {
        v4[1] = v36 | 0x80;
        v38 = v36 >> 7;
        if (v36 >> 14)
        {
          v39 = v4 + 2;
          do
          {
            v40 = v39;
            *v39++ = v38 | 0x80;
            v41 = v38 >> 7;
            v42 = v38 >> 14;
            v38 >>= 7;
          }
          while (v42);
          v37 = v40 + 2;
          *v39 = v41;
        }
        else
        {
          v4[2] = v38;
          v37 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v36;
        v37 = v4 + 2;
      }
      v4 = (char *)siri::dialogengine::PatternBinary::Group::InternalSerializeWithCachedSizesToArray(v35, v37, a3);
      if (++v32 == v31)
        goto LABEL_60;
    }
    v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    if ((v32 & 0x80000000) == 0)
      goto LABEL_47;
LABEL_46:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v50, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v33 = google::protobuf::internal::LogMessage::operator<<(v50, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v49, (const char **)&v33->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v50[0].__r_.__value_.__l.__data_);
    goto LABEL_47;
  }
LABEL_60:
  v43 = *((_QWORD *)this + 1);
  if ((v43 & 1) == 0)
    return (unsigned __int8 *)v4;
  v45 = v43 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v45 + 23) < 0)
  {
    v47 = *(void **)v45;
    v46 = *(_QWORD *)(v45 + 8);
  }
  else
  {
    LODWORD(v46) = *(unsigned __int8 *)(v45 + 23);
    v47 = (void *)v45;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v46)
  {
    v48 = (int)v46;
    memcpy(v4, v47, (int)v46);
    v4 += v48;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v47, v46, (unsigned __int8 *)v4);
}

void sub_1BF85DD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PatternBinary::Pattern::MergeFrom(siri::dialogengine::PatternBinary::Pattern *this, const siri::dialogengine::PatternBinary::Pattern *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  const std::string *v10;
  std::string *v11;
  const std::string *v12;
  std::string *v13;
  std::string **v14;
  std::string *v15;
  const std::string *v16;
  char v17;
  std::string v18[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.cc", 463);
    v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::PatternBinary::Metadata>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::PatternBinary::Setting>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::PatternBinary::Group>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0xF) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 12);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 12);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 12, (uint64_t)v8);
          if ((v6 & 2) == 0)
            goto LABEL_17;
LABEL_11:
          v9 = (std::string *)*((_QWORD *)this + 13);
          *((_DWORD *)this + 4) |= 2u;
          v10 = (const std::string *)*((_QWORD *)a2 + 13);
          if (v9 != v10)
          {
            if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 13, (uint64_t)v10);
            else
              std::string::operator=(v9, v10);
          }
LABEL_17:
          if ((v6 & 4) != 0)
          {
            v11 = (std::string *)*((_QWORD *)this + 14);
            *((_DWORD *)this + 4) |= 4u;
            v12 = (const std::string *)*((_QWORD *)a2 + 14);
            if (v11 != v12)
            {
              if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 14, (uint64_t)v12);
                if ((v6 & 8) == 0)
                  return;
                goto LABEL_22;
              }
              std::string::operator=(v11, v12);
            }
          }
          if ((v6 & 8) == 0)
            return;
LABEL_22:
          v15 = (std::string *)*((_QWORD *)this + 15);
          v14 = (std::string **)((char *)this + 120);
          v13 = v15;
          *((_DWORD *)v14 - 26) |= 8u;
          v16 = (const std::string *)*((_QWORD *)a2 + 15);
          if (v15 != v16)
          {
            if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v14, (uint64_t)v16);
            else
              std::string::operator=(v13, v16);
          }
          return;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) == 0)
      goto LABEL_17;
    goto LABEL_11;
  }
}

void sub_1BF85DF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::PatternBinary::Metadata>::TypeHandler>(int **this, uint64_t a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  siri::dialogengine::PatternBinary::Metadata **v13;
  siri::dialogengine::PatternBinary::Metadata **v14;
  siri::dialogengine::PatternBinary::Metadata *v15;
  siri::dialogengine::PatternBinary::Metadata *v16;
  siri::dialogengine::PatternBinary::Metadata *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  siri::dialogengine::PatternBinary::Metadata **v21;
  siri::dialogengine::PatternBinary::Metadata **v22;
  siri::dialogengine::PatternBinary::Metadata *v23;
  siri::dialogengine::PatternBinary::Metadata *v24;
  int v25;
  int *v26;
  char v27;
  std::string v28[2];

  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    v8 = v7;
    v9 = *this[2];
    v10 = *((int *)this + 2);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (siri::dialogengine::PatternBinary::Metadata **)(v6 + 8);
      v14 = (siri::dialogengine::PatternBinary::Metadata **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::PatternBinary::Metadata>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = (google::protobuf::internal::ArenaImpl *)*this;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (siri::dialogengine::PatternBinary::Metadata **)((char *)v8 + v20);
      v22 = (siri::dialogengine::PatternBinary::Metadata **)(v20 + v6 + 8);
      do
      {
        v23 = *v22++;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Metadata>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::PatternBinary::Metadata>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    v26 = this[2];
    if (*v26 < v25)
      *v26 = v25;
  }
}

void sub_1BF85E0A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::PatternBinary::Setting>::TypeHandler>(int **this, uint64_t a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  siri::dialogengine::PatternBinary::Setting **v13;
  siri::dialogengine::PatternBinary::Setting **v14;
  siri::dialogengine::PatternBinary::Setting *v15;
  siri::dialogengine::PatternBinary::Setting *v16;
  siri::dialogengine::PatternBinary::Setting *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  siri::dialogengine::PatternBinary::Setting **v21;
  siri::dialogengine::PatternBinary::Setting **v22;
  siri::dialogengine::PatternBinary::Setting *v23;
  siri::dialogengine::PatternBinary::Setting *v24;
  int v25;
  int *v26;
  char v27;
  std::string v28[2];

  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    v8 = v7;
    v9 = *this[2];
    v10 = *((int *)this + 2);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (siri::dialogengine::PatternBinary::Setting **)(v6 + 8);
      v14 = (siri::dialogengine::PatternBinary::Setting **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::PatternBinary::Setting>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = (google::protobuf::internal::ArenaImpl *)*this;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (siri::dialogengine::PatternBinary::Setting **)((char *)v8 + v20);
      v22 = (siri::dialogengine::PatternBinary::Setting **)(v20 + v6 + 8);
      do
      {
        v23 = *v22++;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Setting>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::PatternBinary::Setting>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    v26 = this[2];
    if (*v26 < v25)
      *v26 = v25;
  }
}

void sub_1BF85E214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::PatternBinary::Group>::TypeHandler>(int **this, uint64_t a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  siri::dialogengine::PatternBinary::Group **v13;
  siri::dialogengine::PatternBinary::Group **v14;
  siri::dialogengine::PatternBinary::Group *v15;
  siri::dialogengine::PatternBinary::Group *v16;
  siri::dialogengine::PatternBinary::Group *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  siri::dialogengine::PatternBinary::Group **v21;
  siri::dialogengine::PatternBinary::Group **v22;
  siri::dialogengine::PatternBinary::Group *v23;
  siri::dialogengine::PatternBinary::Group *v24;
  int v25;
  int *v26;
  char v27;
  std::string v28[2];

  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    v8 = v7;
    v9 = *this[2];
    v10 = *((int *)this + 2);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (siri::dialogengine::PatternBinary::Group **)(v6 + 8);
      v14 = (siri::dialogengine::PatternBinary::Group **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::PatternBinary::Group>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = (google::protobuf::internal::ArenaImpl *)*this;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (siri::dialogengine::PatternBinary::Group **)((char *)v8 + v20);
      v22 = (siri::dialogengine::PatternBinary::Group **)(v20 + v6 + 8);
      do
      {
        v23 = *v22++;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Group>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::PatternBinary::Group>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    v26 = this[2];
    if (*v26 < v25)
      *v26 = v25;
  }
}

void sub_1BF85E380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::PatternBinary::Group>::Merge(siri::dialogengine::PatternBinary::Group *a1, siri::dialogengine::PatternBinary::Group *this)
{
  siri::dialogengine::PatternBinary::Group::MergeFrom(this, a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::PatternBinary::Setting>::Merge(siri::dialogengine::PatternBinary::Setting *a1, siri::dialogengine::PatternBinary::Setting *this)
{
  siri::dialogengine::PatternBinary::Setting::MergeFrom(this, a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::PatternBinary::Metadata>::Merge(siri::dialogengine::PatternBinary::Metadata *a1, siri::dialogengine::PatternBinary::Metadata *this)
{
  siri::dialogengine::PatternBinary::Metadata::MergeFrom(this, a1);
}

siri::dialogengine::PatternBinary::Pattern *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::PatternBinary::Pattern>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::PatternBinary::Pattern *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Pattern *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x80uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Pattern>);
    siri::dialogengine::PatternBinary::Pattern::Pattern(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::PatternBinary::Pattern *)operator new();
    siri::dialogengine::PatternBinary::Pattern::Pattern(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF85E44C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C401299D0D1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::PatternBinary::Pattern>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

siri::dialogengine::PatternBinary::Pattern *siri::dialogengine::PatternBinary::Pattern::Pattern(siri::dialogengine::PatternBinary::Pattern *this, const siri::dialogengine::PatternBinary::Pattern *a2)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;

  *(_QWORD *)this = &off_1E792A358;
  *((_QWORD *)this + 1) = 0;
  v4 = (uint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(_QWORD *)((char *)this + 28) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *(_QWORD *)((char *)this + 20) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::PatternBinary::Metadata>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::PatternBinary::Setting>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::PatternBinary::Group>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 1) != 0)
  {
    v7 = (uint64_t *)*((_QWORD *)a2 + 12);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 12, (uint64_t)v7);
      v6 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    v8 = (uint64_t *)*((_QWORD *)a2 + 13);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 13, (uint64_t)v8);
      v6 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    v9 = (uint64_t *)*((_QWORD *)a2 + 14);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 14, (uint64_t)v9);
      v6 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    v10 = (uint64_t *)*((_QWORD *)a2 + 15);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 15, (uint64_t)v10);
  }
  return this;
}

void sub_1BF85E704(_Unwind_Exception *a1)
{
  uint64_t *v1;
  google::protobuf::internal::RepeatedPtrFieldBase *v2;
  google::protobuf::internal::RepeatedPtrFieldBase *v3;
  google::protobuf::internal::ArenaImpl **v4;

  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v4);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v3);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::PatternBinary::Pattern::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::PatternBinary::Pattern::default_instance(siri::dialogengine::PatternBinary::Pattern *this)
{
  if (atomic_load(scc_info_Pattern_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Pattern_PatternBinary_2eproto);
  return &siri::dialogengine::PatternBinary::_Pattern_default_instance_;
}

void siri::dialogengine::PatternBinary::Pattern::CopyFrom(siri::dialogengine::PatternBinary::Pattern *this, const siri::dialogengine::PatternBinary::Pattern *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::PatternBinary::Pattern::Clear(this);
    siri::dialogengine::PatternBinary::Pattern::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::PatternBinary::Pattern::InternalSwap(siri::dialogengine::PatternBinary::Pattern *this, siri::dialogengine::PatternBinary::Pattern *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  __n128 result;
  uint64_t *v14;
  uint64_t **v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t **v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t **v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  std::string **v29;
  std::string *v30;
  uint64_t *v31;
  std::string **v32;
  std::string *v33;
  std::string::size_type v34;
  std::string::size_type v35;
  unint64_t v36;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v36;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_34;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_OWORD *)v8;
      v11 = *(_QWORD *)(v7 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v7;
      *(_QWORD *)(v8 + 16) = v11;
      *(_OWORD *)v7 = v10;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_34:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::PatternBinary::Pattern *)((char *)this + 24), (siri::dialogengine::PatternBinary::Pattern *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::PatternBinary::Pattern *)((char *)this + 48), (siri::dialogengine::PatternBinary::Pattern *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::PatternBinary::Pattern *)((char *)this + 72), (siri::dialogengine::PatternBinary::Pattern *)((char *)a2 + 72));
  v14 = (uint64_t *)*((_QWORD *)this + 12);
  v15 = (uint64_t **)((char *)a2 + 96);
  if (v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v15 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_14;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v14 = (uint64_t *)*((_QWORD *)this + 12);
  }
  v16 = *v15;
  if (*v15 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 12, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v16 = *v15;
  }
  v17 = v14[2];
  result = *(__n128 *)v14;
  v18 = v16[2];
  *(_OWORD *)v14 = *(_OWORD *)v16;
  v14[2] = v18;
  *(__n128 *)v16 = result;
  v16[2] = v17;
LABEL_14:
  v19 = (uint64_t *)*((_QWORD *)this + 13);
  v20 = (uint64_t **)((char *)a2 + 104);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_20;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 13, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v19 = (uint64_t *)*((_QWORD *)this + 13);
  }
  v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 13, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v21 = *v20;
  }
  v22 = v19[2];
  result = *(__n128 *)v19;
  v23 = v21[2];
  *(_OWORD *)v19 = *(_OWORD *)v21;
  v19[2] = v23;
  *(__n128 *)v21 = result;
  v21[2] = v22;
LABEL_20:
  v24 = (uint64_t *)*((_QWORD *)this + 14);
  v25 = (uint64_t **)((char *)a2 + 112);
  if (v24 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v25 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_26;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 14, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v24 = (uint64_t *)*((_QWORD *)this + 14);
  }
  v26 = *v25;
  if (*v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 14, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v26 = *v25;
  }
  v27 = v24[2];
  result = *(__n128 *)v24;
  v28 = v26[2];
  *(_OWORD *)v24 = *(_OWORD *)v26;
  v24[2] = v28;
  *(__n128 *)v26 = result;
  v26[2] = v27;
LABEL_26:
  v31 = (uint64_t *)*((_QWORD *)this + 15);
  v29 = (std::string **)((char *)this + 120);
  v30 = (std::string *)v31;
  v32 = (std::string **)((char *)a2 + 120);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      return result;
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v29, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v30 = *v29;
  }
  v33 = *v32;
  if (*v32 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v32, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v33 = *v32;
  }
  v34 = v30->__r_.__value_.__r.__words[2];
  result = *(__n128 *)&v30->__r_.__value_.__l.__data_;
  v35 = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v30->__r_.__value_.__l.__data_ = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v30->__r_.__value_.__r.__words[2] = v35;
  *(__n128 *)&v33->__r_.__value_.__l.__data_ = result;
  v33->__r_.__value_.__r.__words[2] = v34;
  return result;
}

siri::dialogengine::PatternBinary::Metadata *siri::dialogengine::PatternBinary::Metadata::Metadata(siri::dialogengine::PatternBinary::Metadata *this, const siri::dialogengine::PatternBinary::Metadata *a2)
{
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t *v7;

  *(_QWORD *)this = &off_1E792A3E8;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v6);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    v7 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v7);
  }
  return this;
}

void sub_1BF85EB50(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::PatternBinary::Metadata::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::PatternBinary::Metadata::default_instance(siri::dialogengine::PatternBinary::Metadata *this)
{
  if (atomic_load(scc_info_Metadata_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Metadata_PatternBinary_2eproto);
  return &siri::dialogengine::PatternBinary::_Metadata_default_instance_;
}

void siri::dialogengine::PatternBinary::Metadata::CopyFrom(siri::dialogengine::PatternBinary::Metadata *this, const siri::dialogengine::PatternBinary::Metadata *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::PatternBinary::Metadata::Clear(this);
    siri::dialogengine::PatternBinary::Metadata::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::PatternBinary::Metadata::InternalSwap(siri::dialogengine::PatternBinary::Metadata *this, siri::dialogengine::PatternBinary::Metadata *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  __n128 *v8;
  unint64_t v9;
  __n128 result;
  unint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  std::string **v18;
  std::string *v19;
  uint64_t *v20;
  std::string **v21;
  std::string *v22;
  std::string::size_type v23;
  std::string::size_type v24;
  unint64_t v25;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v25;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_22;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      v9 = v8[1].n128_u64[0];
      result = *v8;
      v11 = *(_QWORD *)(v7 + 16);
      *v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)v7 = result;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = (uint64_t *)*((_QWORD *)this + 3);
  v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_14;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v12 = (uint64_t *)*((_QWORD *)this + 3);
  }
  v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  v16 = v12[2];
  result = *(__n128 *)v12;
  v17 = v15[2];
  *(_OWORD *)v12 = *(_OWORD *)v15;
  v12[2] = v17;
  *(__n128 *)v15 = result;
  v15[2] = v16;
LABEL_14:
  v20 = (uint64_t *)*((_QWORD *)this + 4);
  v18 = (std::string **)((char *)this + 32);
  v19 = (std::string *)v20;
  v21 = (std::string **)((char *)a2 + 32);
  if (v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      return result;
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v18, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v19 = *v18;
  }
  v22 = *v21;
  if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v22 = *v21;
  }
  v23 = v19->__r_.__value_.__r.__words[2];
  result = *(__n128 *)&v19->__r_.__value_.__l.__data_;
  v24 = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v19->__r_.__value_.__r.__words[2] = v24;
  *(__n128 *)&v22->__r_.__value_.__l.__data_ = result;
  v22->__r_.__value_.__r.__words[2] = v23;
  return result;
}

siri::dialogengine::PatternBinary::Setting *siri::dialogengine::PatternBinary::Setting::Setting(siri::dialogengine::PatternBinary::Setting *this, const siri::dialogengine::PatternBinary::Setting *a2)
{
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t *v7;

  *(_QWORD *)this = &off_1E792A478;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v6);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    v7 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v7);
  }
  return this;
}

void sub_1BF85EE38(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::PatternBinary::Setting::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::PatternBinary::Setting::default_instance(siri::dialogengine::PatternBinary::Setting *this)
{
  if (atomic_load(scc_info_Setting_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Setting_PatternBinary_2eproto);
  return &siri::dialogengine::PatternBinary::_Setting_default_instance_;
}

void siri::dialogengine::PatternBinary::Setting::CopyFrom(siri::dialogengine::PatternBinary::Setting *this, const siri::dialogengine::PatternBinary::Setting *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::PatternBinary::Setting::Clear(this);
    siri::dialogengine::PatternBinary::Setting::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::PatternBinary::Setting::InternalSwap(siri::dialogengine::PatternBinary::Setting *this, siri::dialogengine::PatternBinary::Setting *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  __n128 *v8;
  unint64_t v9;
  __n128 result;
  unint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  std::string **v18;
  std::string *v19;
  uint64_t *v20;
  std::string **v21;
  std::string *v22;
  std::string::size_type v23;
  std::string::size_type v24;
  unint64_t v25;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v25;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_22;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      v9 = v8[1].n128_u64[0];
      result = *v8;
      v11 = *(_QWORD *)(v7 + 16);
      *v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)v7 = result;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = (uint64_t *)*((_QWORD *)this + 3);
  v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_14;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v12 = (uint64_t *)*((_QWORD *)this + 3);
  }
  v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  v16 = v12[2];
  result = *(__n128 *)v12;
  v17 = v15[2];
  *(_OWORD *)v12 = *(_OWORD *)v15;
  v12[2] = v17;
  *(__n128 *)v15 = result;
  v15[2] = v16;
LABEL_14:
  v20 = (uint64_t *)*((_QWORD *)this + 4);
  v18 = (std::string **)((char *)this + 32);
  v19 = (std::string *)v20;
  v21 = (std::string **)((char *)a2 + 32);
  if (v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      return result;
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v18, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v19 = *v18;
  }
  v22 = *v21;
  if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v22 = *v21;
  }
  v23 = v19->__r_.__value_.__r.__words[2];
  result = *(__n128 *)&v19->__r_.__value_.__l.__data_;
  v24 = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v19->__r_.__value_.__r.__words[2] = v24;
  *(__n128 *)&v22->__r_.__value_.__l.__data_ = result;
  v22->__r_.__value_.__r.__words[2] = v23;
  return result;
}

siri::dialogengine::PatternBinary::Component *siri::dialogengine::PatternBinary::Component::Component(siri::dialogengine::PatternBinary::Component *this, const siri::dialogengine::PatternBinary::Component *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;

  *(_QWORD *)this = &off_1E792A508;
  *((_QWORD *)this + 1) = 0;
  v4 = (uint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(_QWORD *)((char *)this + 28) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *(_QWORD *)((char *)this + 20) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<std::string>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if ((*((_BYTE *)a2 + 16) & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 6);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, (uint64_t)v6);
  }
  return this;
}

void sub_1BF85F120(_Unwind_Exception *a1)
{
  uint64_t *v1;
  uint64_t v2;

  google::protobuf::RepeatedPtrField<std::string>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::PatternBinary::Component::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::PatternBinary::Component::default_instance(siri::dialogengine::PatternBinary::Component *this)
{
  if (atomic_load(scc_info_Component_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Component_PatternBinary_2eproto);
  return &siri::dialogengine::PatternBinary::_Component_default_instance_;
}

void siri::dialogengine::PatternBinary::Component::CopyFrom(siri::dialogengine::PatternBinary::Component *this, const siri::dialogengine::PatternBinary::Component *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::PatternBinary::Component::Clear(this);
    siri::dialogengine::PatternBinary::Component::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::PatternBinary::Component::InternalSwap(siri::dialogengine::PatternBinary::Component *this, siri::dialogengine::PatternBinary::Component *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  __n128 result;
  std::string **v14;
  std::string *v15;
  uint64_t *v16;
  std::string **v17;
  std::string *v18;
  std::string::size_type v19;
  std::string::size_type v20;
  unint64_t v21;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v21;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_16;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_OWORD *)v8;
      v11 = *(_QWORD *)(v7 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v7;
      *(_QWORD *)(v8 + 16) = v11;
      *(_OWORD *)v7 = v10;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_16:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::PatternBinary::Component *)((char *)this + 24), (siri::dialogengine::PatternBinary::Component *)((char *)a2 + 24));
  v16 = (uint64_t *)*((_QWORD *)this + 6);
  v14 = (std::string **)((char *)this + 48);
  v15 = (std::string *)v16;
  v17 = (std::string **)((char *)a2 + 48);
  if (v16 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      return result;
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v14, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  v18 = *v17;
  if (*v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v17, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v18 = *v17;
  }
  v19 = v15->__r_.__value_.__r.__words[2];
  result = *(__n128 *)&v15->__r_.__value_.__l.__data_;
  v20 = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v15->__r_.__value_.__r.__words[2] = v20;
  *(__n128 *)&v18->__r_.__value_.__l.__data_ = result;
  v18->__r_.__value_.__r.__words[2] = v19;
  return result;
}

void siri::dialogengine::PatternBinary::Group::InitAsDefaultInstance(siri::dialogengine::PatternBinary::Group *this)
{
  qword_1EF583E78 = (uint64_t)&siri::dialogengine::PatternBinary::_Component_default_instance_;
  unk_1EF583E80 = &siri::dialogengine::PatternBinary::_Component_default_instance_;
}

uint64_t siri::dialogengine::PatternBinary::Group::_Internal::dialog(siri::dialogengine::PatternBinary::Group::_Internal *this, const siri::dialogengine::PatternBinary::Group *a2)
{
  return *((_QWORD *)this + 5);
}

uint64_t siri::dialogengine::PatternBinary::Group::_Internal::visual(siri::dialogengine::PatternBinary::Group::_Internal *this, const siri::dialogengine::PatternBinary::Group *a2)
{
  return *((_QWORD *)this + 6);
}

siri::dialogengine::PatternBinary::Group *siri::dialogengine::PatternBinary::Group::Group(siri::dialogengine::PatternBinary::Group *this, const siri::dialogengine::PatternBinary::Group *a2)
{
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t *v7;
  siri::dialogengine::PatternBinary::Component *v8;
  std::string *v9;
  siri::dialogengine::PatternBinary::Component *v10;
  std::string *v11;
  char v13;
  std::string v14[2];

  *(_QWORD *)this = &off_1E792A598;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v6);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    v7 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v7);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  if ((v5 & 4) != 0)
  {
    if (!*((_QWORD *)a2 + 5))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.h", 1929);
      v9 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: !value || dialog_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    }
    v10 = (siri::dialogengine::PatternBinary::Component *)operator new();
    siri::dialogengine::PatternBinary::Component::Component(v10, *((const siri::dialogengine::PatternBinary::Component **)a2 + 5));
    *((_QWORD *)this + 5) = v10;
    if ((*((_DWORD *)a2 + 4) & 8) == 0)
      goto LABEL_11;
  }
  else
  {
    *((_QWORD *)this + 5) = 0;
    if ((v5 & 8) == 0)
    {
LABEL_11:
      v8 = 0;
      goto LABEL_18;
    }
  }
  if (!*((_QWORD *)a2 + 6))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/patterns/PatternBinary.pb.h", 1989);
    v11 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: !value || visual_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v11->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  v8 = (siri::dialogengine::PatternBinary::Component *)operator new();
  siri::dialogengine::PatternBinary::Component::Component(v8, *((const siri::dialogengine::PatternBinary::Component **)a2 + 6));
LABEL_18:
  *((_QWORD *)this + 6) = v8;
  return this;
}

void sub_1BF85F4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t *v3;
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::PatternBinary::Group::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::PatternBinary::Group::default_instance(siri::dialogengine::PatternBinary::Group *this)
{
  if (atomic_load(scc_info_Group_PatternBinary_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Group_PatternBinary_2eproto);
  return &siri::dialogengine::PatternBinary::_Group_default_instance_;
}

void siri::dialogengine::PatternBinary::Group::CopyFrom(siri::dialogengine::PatternBinary::Group *this, const siri::dialogengine::PatternBinary::Group *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::PatternBinary::Group::Clear(this);
    siri::dialogengine::PatternBinary::Group::MergeFrom(this, a2);
  }
}

void siri::dialogengine::PatternBinary::Group::InternalSwap(siri::dialogengine::PatternBinary::Group *this, siri::dialogengine::PatternBinary::Group *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t **v20;
  uint64_t *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v27;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_22;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      v9 = *(_QWORD *)(v8 + 16);
      v10 = *(_OWORD *)v8;
      v11 = *(_QWORD *)(v7 + 16);
      *(_OWORD *)v8 = *(_OWORD *)v7;
      *(_QWORD *)(v8 + 16) = v11;
      *(_OWORD *)v7 = v10;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = (uint64_t *)*((_QWORD *)this + 3);
  v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_14;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v12 = (uint64_t *)*((_QWORD *)this + 3);
  }
  v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  v16 = v12[2];
  v17 = *(_OWORD *)v12;
  v18 = v15[2];
  *(_OWORD *)v12 = *(_OWORD *)v15;
  v12[2] = v18;
  *(_OWORD *)v15 = v17;
  v15[2] = v16;
LABEL_14:
  v19 = (uint64_t *)*((_QWORD *)this + 4);
  v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_20;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v19 = (uint64_t *)*((_QWORD *)this + 4);
  }
  v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v21 = *v20;
  }
  v22 = v19[2];
  v23 = *(_OWORD *)v19;
  v24 = v21[2];
  *(_OWORD *)v19 = *(_OWORD *)v21;
  v19[2] = v24;
  *(_OWORD *)v21 = v23;
  v21[2] = v22;
LABEL_20:
  v25 = *((_QWORD *)this + 5);
  *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
  *((_QWORD *)a2 + 5) = v25;
  v26 = *((_QWORD *)this + 6);
  *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
  *((_QWORD *)a2 + 6) = v26;
}

void InitDefaultsscc_info_Constraint_DialogMetadata_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/localize/DialogMetadata.pb.cc", a4);
  siri::dialogengine::DialogMetadata::Constraint::Constraint((siri::dialogengine::DialogMetadata::Constraint *)&siri::dialogengine::DialogMetadata::_Constraint_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::DialogMetadata::_Constraint_default_instance_, v4);
}

siri::dialogengine::DialogMetadata::Constraint *siri::dialogengine::DialogMetadata::Constraint::Constraint(siri::dialogengine::DialogMetadata::Constraint *this)
{
  *(_QWORD *)this = &off_1E792A6A0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  if (atomic_load(scc_info_Constraint_DialogMetadata_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Constraint_DialogMetadata_2eproto);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1BF85F820(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogMetadata::Constraint::~Constraint(siri::dialogengine::DialogMetadata::Constraint *this)
{
  siri::dialogengine::DialogMetadata::Constraint::~Constraint(this);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)this = &off_1E792A6A0;
  v2 = *((_QWORD *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *siri::dialogengine::DialogMetadata::Constraint::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.DialogMetadata.Constraint");
}

siri::dialogengine::DialogMetadata::Constraint *siri::dialogengine::DialogMetadata::Constraint::New(siri::dialogengine::DialogMetadata::Constraint *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::Constraint>(0);
}

siri::dialogengine::DialogMetadata::Constraint *siri::dialogengine::DialogMetadata::Constraint::New(siri::dialogengine::DialogMetadata::Constraint *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::Constraint>(a2);
}

void siri::dialogengine::DialogMetadata::Constraint::Clear(siri::dialogengine::DialogMetadata::Constraint *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  google::protobuf::internal::InternalMetadataWithArenaLite *v4;
  char v5;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
    goto LABEL_11;
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0)
      goto LABEL_6;
    goto LABEL_11;
  }
  v2 = *((_QWORD *)this + 3);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v2 = 0;
    *(_BYTE *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(_BYTE **)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    v3 = *((_QWORD *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(_BYTE **)v3 = 0;
      *(_QWORD *)(v3 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v3 = 0;
      *(_BYTE *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  v5 = *((_BYTE *)this + 8);
  v4 = (siri::dialogengine::DialogMetadata::Constraint *)((char *)this + 8);
  *((_DWORD *)v4 + 2) = 0;
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
}

uint64_t siri::dialogengine::DialogMetadata::Constraint::IsInitialized(siri::dialogengine::DialogMetadata::Constraint *this)
{
  return 1;
}

void siri::dialogengine::DialogMetadata::Constraint::CheckTypeAndMergeFrom(siri::dialogengine::DialogMetadata::Constraint *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::DialogMetadata::Constraint::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::DialogMetadata::Constraint::ByteSizeLong(siri::dialogengine::DialogMetadata::Constraint *this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;

  v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    v2 = 0;
    if ((v1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_9;
  }
  v3 = *((_QWORD *)this + 3);
  v4 = *(unsigned __int8 *)(v3 + 23);
  v5 = *(_QWORD *)(v3 + 8);
  if ((v4 & 0x80u) == 0)
    v5 = v4;
  v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    v6 = *((_QWORD *)this + 4);
    v7 = *(unsigned __int8 *)(v6 + 23);
    v8 = *(_QWORD *)(v6 + 8);
    if ((v7 & 0x80u) == 0)
      v8 = v7;
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  v9 = *((_QWORD *)this + 1);
  if ((v9 & 1) != 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
      v12 = *(_QWORD *)(v11 + 8);
    else
      v12 = *(unsigned __int8 *)(v11 + 23);
    v2 += v12;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t siri::dialogengine::DialogMetadata::Constraint::GetCachedSize(siri::dialogengine::DialogMetadata::Constraint *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::DialogMetadata::Constraint::_InternalParse(siri::dialogengine::DialogMetadata::Constraint *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  std::string **v5;
  std::string **v6;
  uint64_t *v7;
  google::protobuf::internal *TagFallback;
  const char *v9;
  google::protobuf::internal *v12;
  std::string *v13;
  google::protobuf::internal *v15;

  v15 = a2;
  v5 = (std::string **)((char *)this + 32);
  v6 = (std::string **)((char *)this + 24);
  v7 = (uint64_t *)((char *)this + 8);
  while (1)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v15, *((_DWORD *)a3 + 23)) & 1) != 0)
      return v15;
    TagFallback = (google::protobuf::internal *)((char *)v15 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v15;
    if ((*(char *)v15 & 0x80000000) == 0)
      goto LABEL_6;
    v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
      v15 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, v9);
    v15 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    if (v9 >> 3 == 2)
    {
      if (v9 == 18)
      {
        *((_DWORD *)this + 4) |= 2u;
        v13 = (std::string *)*((_QWORD *)this + 4);
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
          v13 = *v5;
          goto LABEL_22;
        }
LABEL_23:
        v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_24;
      }
    }
    else if (v9 >> 3 == 1 && v9 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      v13 = (std::string *)*((_QWORD *)this + 3);
      if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v13 = *v6;
LABEL_22:
        TagFallback = v15;
      }
      goto LABEL_23;
    }
    if (!(_DWORD)v9 || (v9 & 7) == 4)
      break;
    v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v7, TagFallback, a3);
LABEL_24:
    v15 = v12;
    if (!v12)
      return 0;
  }
  *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
  return TagFallback;
}

unsigned __int8 *siri::dialogengine::DialogMetadata::Constraint::InternalSerializeWithCachedSizesToArray(siri::dialogengine::DialogMetadata::Constraint *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned __int8 *v4;
  int v6;
  uint64_t v7;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v4 = (unsigned __int8 *)a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 3), a2);
  if ((v6 & 2) != 0)
    v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 4), (char *)v4);
  v7 = *((_QWORD *)this + 1);
  if ((v7 & 1) == 0)
    return v4;
  v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    v11 = *(void **)v9;
    v10 = *(_QWORD *)(v9 + 8);
  }
  else
  {
    LODWORD(v10) = *(unsigned __int8 *)(v9 + 23);
    v11 = (void *)v9;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v10)
  {
    v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

void siri::dialogengine::DialogMetadata::Constraint::MergeFrom(siri::dialogengine::DialogMetadata::Constraint *this, const siri::dialogengine::DialogMetadata::Constraint *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  std::string **v10;
  std::string *v11;
  const std::string *v12;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/localize/DialogMetadata.pb.cc", 293);
    v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v8);
          if ((v6 & 2) == 0)
            return;
          goto LABEL_11;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) == 0)
      return;
LABEL_11:
    v11 = (std::string *)*((_QWORD *)this + 4);
    v10 = (std::string **)((char *)this + 32);
    v9 = v11;
    *((_DWORD *)v10 - 4) |= 2u;
    v12 = (const std::string *)*((_QWORD *)a2 + 4);
    if (v11 != v12)
    {
      if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v10, (uint64_t)v12);
      else
        std::string::operator=(v9, v12);
    }
  }
}

void sub_1BF85FDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::DialogMetadata::Constraint *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::Constraint>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::DialogMetadata::Constraint *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::DialogMetadata::Constraint *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::DialogMetadata::Constraint>);
    siri::dialogengine::DialogMetadata::Constraint::Constraint(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::DialogMetadata::Constraint *)operator new();
    siri::dialogengine::DialogMetadata::Constraint::Constraint(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF85FE44(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40DFBAE579);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::DialogMetadata::Constraint>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void InitDefaultsscc_info_DisplayValue_DialogMetadata_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/localize/DialogMetadata.pb.cc", a4);
  siri::dialogengine::DialogMetadata::DisplayValue::DisplayValue((siri::dialogengine::DialogMetadata::DisplayValue *)&siri::dialogengine::DialogMetadata::_DisplayValue_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::DialogMetadata::_DisplayValue_default_instance_, v4);
}

siri::dialogengine::DialogMetadata::DisplayValue *siri::dialogengine::DialogMetadata::DisplayValue::DisplayValue(siri::dialogengine::DialogMetadata::DisplayValue *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E792A730;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  if (atomic_load(scc_info_DisplayValue_DialogMetadata_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_DisplayValue_DialogMetadata_2eproto);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1BF85FFEC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t *v2;

  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogMetadata::DisplayValue::~DisplayValue(siri::dialogengine::DialogMetadata::DisplayValue *this)
{
  siri::dialogengine::DialogMetadata::DisplayValue::~DisplayValue(this);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t v2;

  *(_QWORD *)this = &off_1E792A730;
  v2 = *((_QWORD *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::DialogMetadata::DisplayValue *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *siri::dialogengine::DialogMetadata::DisplayValue::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.DialogMetadata.DisplayValue");
}

siri::dialogengine::DialogMetadata::DisplayValue *siri::dialogengine::DialogMetadata::DisplayValue::New(siri::dialogengine::DialogMetadata::DisplayValue *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::DisplayValue>(0);
}

siri::dialogengine::DialogMetadata::DisplayValue *siri::dialogengine::DialogMetadata::DisplayValue::New(siri::dialogengine::DialogMetadata::DisplayValue *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::DisplayValue>(a2);
}

void siri::dialogengine::DialogMetadata::DisplayValue::Clear(siri::dialogengine::DialogMetadata::DisplayValue *this)
{
  uint64_t v2;
  siri::dialogengine::DialogMetadata::Constraint **v3;
  siri::dialogengine::DialogMetadata::Constraint *v4;
  std::string *v5;
  uint64_t v6;
  google::protobuf::internal::InternalMetadataWithArenaLite *v7;
  char v8;
  char v9;
  std::string v10[2];

  v2 = *((unsigned int *)this + 8);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v2)
  {
    v3 = (siri::dialogengine::DialogMetadata::Constraint **)(*((_QWORD *)this + 5) + 8);
    do
    {
      v4 = *v3++;
      siri::dialogengine::DialogMetadata::Constraint::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v6 = *((_QWORD *)this + 6);
    if (*(char *)(v6 + 23) < 0)
    {
      **(_BYTE **)v6 = 0;
      *(_QWORD *)(v6 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v6 = 0;
      *(_BYTE *)(v6 + 23) = 0;
    }
  }
  v8 = *((_BYTE *)this + 8);
  v7 = (siri::dialogengine::DialogMetadata::DisplayValue *)((char *)this + 8);
  *((_DWORD *)v7 + 2) = 0;
  if ((v8 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v7);
}

void sub_1BF860134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::DialogMetadata::DisplayValue::IsInitialized(siri::dialogengine::DialogMetadata::DisplayValue *this)
{
  return 1;
}

void siri::dialogengine::DialogMetadata::DisplayValue::CheckTypeAndMergeFrom(siri::dialogengine::DialogMetadata::DisplayValue *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::DialogMetadata::DisplayValue::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::DialogMetadata::DisplayValue::ByteSizeLong(siri::dialogengine::DialogMetadata::DisplayValue *this)
{
  uint64_t v2;
  uint64_t v3;
  siri::dialogengine::DialogMetadata::Constraint **v4;
  uint64_t v5;
  siri::dialogengine::DialogMetadata::Constraint *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  uint64_t v14;

  v2 = *((int *)this + 8);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = (siri::dialogengine::DialogMetadata::Constraint **)(v3 + 8);
  else
    v4 = 0;
  if ((_DWORD)v2)
  {
    v5 = 8 * v2;
    do
    {
      v6 = *v4++;
      v7 = siri::dialogengine::DialogMetadata::Constraint::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    v2 = 0;
  }
  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    v8 = *((_QWORD *)this + 6);
    v9 = *(unsigned __int8 *)(v8 + 23);
    v10 = *(_QWORD *)(v8 + 8);
    if ((v9 & 0x80u) == 0)
      v10 = v9;
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v11 = *((_QWORD *)this + 1);
  if ((v11 & 1) != 0)
  {
    v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
      v14 = *(_QWORD *)(v13 + 8);
    else
      v14 = *(unsigned __int8 *)(v13 + 23);
    v2 += v14;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t siri::dialogengine::DialogMetadata::DisplayValue::GetCachedSize(siri::dialogengine::DialogMetadata::DisplayValue *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::DialogMetadata::DisplayValue::_InternalParse(siri::dialogengine::DialogMetadata::DisplayValue *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int *v5;
  std::string **v6;
  uint64_t *v7;
  google::protobuf::internal *TagFallback;
  const char *v9;
  BOOL v11;
  google::protobuf::internal *v12;
  google::protobuf::internal *v13;
  google::protobuf::internal *v14;
  int *v15;
  uint64_t v16;
  int v17;
  siri::dialogengine::DialogMetadata::Constraint *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  char *v22;
  char *SizeFallback;
  unsigned int v24;
  int v25;
  int v26;
  BOOL v27;
  int v28;
  int v29;
  unint64_t v30;
  std::string *v31;
  google::protobuf::internal *v33;

  v33 = a2;
  v5 = (unsigned int *)((char *)this + 24);
  v6 = (std::string **)((char *)this + 48);
  v7 = (uint64_t *)((char *)this + 8);
  do
  {
LABEL_2:
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v33, *((_DWORD *)a3 + 23)) & 1) != 0)
      return v33;
    TagFallback = (google::protobuf::internal *)((char *)v33 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v33;
    if ((*(char *)v33 & 0x80000000) == 0)
      goto LABEL_6;
    v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v33 + 2);
LABEL_6:
      v33 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v33, v9);
    v33 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    if (v9 >> 3 == 2)
    {
      if (v9 != 18)
        goto LABEL_12;
      v13 = (google::protobuf::internal *)((char *)TagFallback - 1);
      while (1)
      {
        v14 = (google::protobuf::internal *)((char *)v13 + 1);
        v33 = v14;
        v15 = (int *)*((_QWORD *)this + 5);
        if (!v15)
          break;
        v16 = *((int *)this + 8);
        v17 = *v15;
        if ((int)v16 < *v15)
        {
          *((_DWORD *)this + 8) = v16 + 1;
          v18 = *(siri::dialogengine::DialogMetadata::Constraint **)&v15[2 * v16 + 2];
          goto LABEL_26;
        }
        if (v17 == *((_DWORD *)this + 9))
          goto LABEL_24;
LABEL_25:
        *v15 = v17 + 1;
        v18 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::Constraint>(*((google::protobuf::internal::ArenaImpl **)this + 3));
        v19 = *((_QWORD *)this + 5);
        v20 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v20 + 1;
        *(_QWORD *)(v19 + 8 * v20 + 8) = v18;
        v14 = v33;
LABEL_26:
        v21 = *(unsigned __int8 *)v14;
        if (*(char *)v14 < 0)
        {
          SizeFallback = google::protobuf::internal::ReadSizeFallback(v14, (const char *)*(unsigned __int8 *)v14);
          if (!SizeFallback)
            return 0;
          v22 = SizeFallback;
          v21 = v24;
        }
        else
        {
          v22 = (char *)v14 + 1;
        }
        v25 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v22, v21);
        v26 = *((_DWORD *)a3 + 22);
        v27 = __OFSUB__(v26--, 1);
        *((_DWORD *)a3 + 22) = v26;
        if (v26 < 0 != v27)
          return 0;
        v28 = v25;
        v13 = siri::dialogengine::DialogMetadata::Constraint::_InternalParse(v18, (google::protobuf::internal *)v22, a3);
        if (!v13)
          return 0;
        ++*((_DWORD *)a3 + 22);
        if (*((_DWORD *)a3 + 20))
          return 0;
        v29 = *((_DWORD *)a3 + 7) + v28;
        *((_DWORD *)a3 + 7) = v29;
        v30 = *((_QWORD *)a3 + 1) + (v29 & (v29 >> 31));
        *(_QWORD *)a3 = v30;
        v33 = v13;
        if (v30 <= (unint64_t)v13 || *(_BYTE *)v13 != 18)
          goto LABEL_2;
      }
      v17 = *((_DWORD *)this + 9);
LABEL_24:
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v17 + 1);
      v15 = (int *)*((_QWORD *)this + 5);
      v17 = *v15;
      goto LABEL_25;
    }
    if (v9 >> 3 == 1 && v9 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      v31 = (std::string *)*((_QWORD *)this + 6);
      if (v31 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v31 = *v6;
        TagFallback = v33;
      }
      v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v31, (std::string::value_type *)TagFallback, (uint64_t)a3);
      goto LABEL_39;
    }
LABEL_12:
    if ((_DWORD)v9)
      v11 = (v9 & 7) == 4;
    else
      v11 = 1;
    if (v11)
    {
      *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
      return TagFallback;
    }
    v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v7, TagFallback, a3);
LABEL_39:
    v33 = v12;
  }
  while (v12);
  return 0;
}

unsigned __int8 *siri::dialogengine::DialogMetadata::DisplayValue::InternalSerializeWithCachedSizesToArray(siri::dialogengine::DialogMetadata::DisplayValue *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  int i;
  siri::dialogengine::DialogMetadata::Constraint *v8;
  unsigned int v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  _BYTE *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  v4 = a2;
  if ((*((_BYTE *)this + 16) & 1) != 0)
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 6), a2);
  v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((unint64_t)v4 >= *(_QWORD *)a3)
        v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v8 = (siri::dialogengine::DialogMetadata::Constraint *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::Constraint>::TypeHandler>((uint64_t)this + 24, i);
      *v4 = 18;
      v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        v11 = v9 >> 7;
        if (v9 >> 14)
        {
          v12 = v4 + 2;
          do
          {
            v13 = v12;
            *v12++ = v11 | 0x80;
            v14 = v11 >> 7;
            v15 = v11 >> 14;
            v11 >>= 7;
          }
          while (v15);
          v10 = v13 + 2;
          *v12 = v14;
        }
        else
        {
          v4[2] = v11;
          v10 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v9;
        v10 = v4 + 2;
      }
      v4 = (char *)siri::dialogengine::DialogMetadata::Constraint::InternalSerializeWithCachedSizesToArray(v8, v10, a3);
    }
  }
  v16 = *((_QWORD *)this + 1);
  if ((v16 & 1) == 0)
    return (unsigned __int8 *)v4;
  v18 = v16 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v18 + 23) < 0)
  {
    v20 = *(void **)v18;
    v19 = *(_QWORD *)(v18 + 8);
  }
  else
  {
    LODWORD(v19) = *(unsigned __int8 *)(v18 + 23);
    v20 = (void *)v18;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v19)
  {
    v21 = (int)v19;
    memcpy(v4, v20, (int)v19);
    v4 += v21;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v20, v19, (unsigned __int8 *)v4);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::Constraint>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF860798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogMetadata::DisplayValue::MergeFrom(siri::dialogengine::DialogMetadata::DisplayValue *this, const siri::dialogengine::DialogMetadata::DisplayValue *a2)
{
  std::string *v4;
  uint64_t v5;
  std::string *v6;
  std::string **v7;
  std::string *v8;
  const std::string *v9;
  char v10;
  std::string v11[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/localize/DialogMetadata.pb.cc", 521);
    v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::Constraint>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  if ((*((_BYTE *)a2 + 16) & 1) != 0)
  {
    v8 = (std::string *)*((_QWORD *)this + 6);
    v7 = (std::string **)((char *)this + 48);
    v6 = v8;
    *((_DWORD *)v7 - 8) |= 1u;
    v9 = (const std::string *)*((_QWORD *)a2 + 6);
    if (v8 != v9)
    {
      if (v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)v9);
      else
        std::string::operator=(v6, v9);
    }
  }
}

void sub_1BF860888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::Constraint>::TypeHandler>(int **this, uint64_t a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  siri::dialogengine::DialogMetadata::Constraint **v13;
  siri::dialogengine::DialogMetadata::Constraint **v14;
  siri::dialogengine::DialogMetadata::Constraint *v15;
  siri::dialogengine::DialogMetadata::Constraint *v16;
  siri::dialogengine::DialogMetadata::Constraint *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  siri::dialogengine::DialogMetadata::Constraint **v21;
  siri::dialogengine::DialogMetadata::Constraint **v22;
  siri::dialogengine::DialogMetadata::Constraint *v23;
  siri::dialogengine::DialogMetadata::Constraint *v24;
  int v25;
  int *v26;
  char v27;
  std::string v28[2];

  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    v8 = v7;
    v9 = *this[2];
    v10 = *((int *)this + 2);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (siri::dialogengine::DialogMetadata::Constraint **)(v6 + 8);
      v14 = (siri::dialogengine::DialogMetadata::Constraint **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::DialogMetadata::Constraint>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = (google::protobuf::internal::ArenaImpl *)*this;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (siri::dialogengine::DialogMetadata::Constraint **)((char *)v8 + v20);
      v22 = (siri::dialogengine::DialogMetadata::Constraint **)(v20 + v6 + 8);
      do
      {
        v23 = *v22++;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::Constraint>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::DialogMetadata::Constraint>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    v26 = this[2];
    if (*v26 < v25)
      *v26 = v25;
  }
}

void sub_1BF8609F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::DialogMetadata::Constraint>::Merge(siri::dialogengine::DialogMetadata::Constraint *a1, siri::dialogengine::DialogMetadata::Constraint *this)
{
  siri::dialogengine::DialogMetadata::Constraint::MergeFrom(this, a1);
}

siri::dialogengine::DialogMetadata::DisplayValue *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::DisplayValue>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::DialogMetadata::DisplayValue *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::DialogMetadata::DisplayValue *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::DialogMetadata::DisplayValue>);
    siri::dialogengine::DialogMetadata::DisplayValue::DisplayValue(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::DialogMetadata::DisplayValue *)operator new();
    siri::dialogengine::DialogMetadata::DisplayValue::DisplayValue(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF860AA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C40D196C376);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::DialogMetadata::DisplayValue>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

void InitDefaultsscc_info_File_DialogMetadata_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/localize/DialogMetadata.pb.cc", a4);
  siri::dialogengine::DialogMetadata::File::File((siri::dialogengine::DialogMetadata::File *)&siri::dialogengine::DialogMetadata::_File_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::DialogMetadata::_File_default_instance_, v4);
}

void InitDefaultsscc_info_SemanticValue_DialogMetadata_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  const void *v4;

  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/localize/DialogMetadata.pb.cc", a4);
  siri::dialogengine::DialogMetadata::SemanticValue::SemanticValue((siri::dialogengine::DialogMetadata::SemanticValue *)&siri::dialogengine::DialogMetadata::_SemanticValue_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::DialogMetadata::_SemanticValue_default_instance_, v4);
}

siri::dialogengine::DialogMetadata::SemanticValue *siri::dialogengine::DialogMetadata::SemanticValue::SemanticValue(siri::dialogengine::DialogMetadata::SemanticValue *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E792A7C0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  if (atomic_load(scc_info_SemanticValue_DialogMetadata_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_SemanticValue_DialogMetadata_2eproto);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((_QWORD *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1BF860C60(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t *v2;

  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogMetadata::SemanticValue::~SemanticValue(siri::dialogengine::DialogMetadata::SemanticValue *this)
{
  siri::dialogengine::DialogMetadata::SemanticValue::~SemanticValue(this);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)this = &off_1E792A7C0;
  v2 = *((_QWORD *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    MEMORY[0x1C3B8D890](v2, 0x1012C40EC159624);
  }
  v4 = *((_QWORD *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0)
      operator delete(*(void **)v4);
    MEMORY[0x1C3B8D890](v4, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::DialogMetadata::SemanticValue *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

_QWORD *siri::dialogengine::DialogMetadata::SemanticValue::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.DialogMetadata.SemanticValue");
}

siri::dialogengine::DialogMetadata::SemanticValue *siri::dialogengine::DialogMetadata::SemanticValue::New(siri::dialogengine::DialogMetadata::SemanticValue *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::SemanticValue>(0);
}

siri::dialogengine::DialogMetadata::SemanticValue *siri::dialogengine::DialogMetadata::SemanticValue::New(siri::dialogengine::DialogMetadata::SemanticValue *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::SemanticValue>(a2);
}

void siri::dialogengine::DialogMetadata::SemanticValue::Clear(siri::dialogengine::DialogMetadata::SemanticValue *this)
{
  uint64_t v2;
  siri::dialogengine::DialogMetadata::DisplayValue **v3;
  siri::dialogengine::DialogMetadata::DisplayValue *v4;
  std::string *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  google::protobuf::internal::InternalMetadataWithArenaLite *v9;
  char v10;
  char v11;
  std::string v12[2];

  v2 = *((unsigned int *)this + 8);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v2)
  {
    v3 = (siri::dialogengine::DialogMetadata::DisplayValue **)(*((_QWORD *)this + 5) + 8);
    do
    {
      v4 = *v3++;
      siri::dialogengine::DialogMetadata::DisplayValue::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 3) == 0)
    goto LABEL_17;
  if ((v6 & 1) == 0)
    goto LABEL_11;
  v7 = *((_QWORD *)this + 6);
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(_BYTE *)v7 = 0;
    *(_BYTE *)(v7 + 23) = 0;
LABEL_11:
    if ((v6 & 2) != 0)
      goto LABEL_12;
    goto LABEL_17;
  }
  **(_BYTE **)v7 = 0;
  *(_QWORD *)(v7 + 8) = 0;
  if ((v6 & 2) != 0)
  {
LABEL_12:
    v8 = *((_QWORD *)this + 7);
    if (*(char *)(v8 + 23) < 0)
    {
      **(_BYTE **)v8 = 0;
      *(_QWORD *)(v8 + 8) = 0;
    }
    else
    {
      *(_BYTE *)v8 = 0;
      *(_BYTE *)(v8 + 23) = 0;
    }
  }
LABEL_17:
  v10 = *((_BYTE *)this + 8);
  v9 = (siri::dialogengine::DialogMetadata::SemanticValue *)((char *)this + 8);
  *((_DWORD *)v9 + 2) = 0;
  if ((v10 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v9);
}

void sub_1BF860DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::DialogMetadata::SemanticValue::IsInitialized(siri::dialogengine::DialogMetadata::SemanticValue *this)
{
  return 1;
}

void siri::dialogengine::DialogMetadata::SemanticValue::CheckTypeAndMergeFrom(siri::dialogengine::DialogMetadata::SemanticValue *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::DialogMetadata::SemanticValue::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::DialogMetadata::SemanticValue::ByteSizeLong(siri::dialogengine::DialogMetadata::SemanticValue *this)
{
  uint64_t v2;
  uint64_t v3;
  siri::dialogengine::DialogMetadata::DisplayValue **v4;
  uint64_t v5;
  siri::dialogengine::DialogMetadata::DisplayValue *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  uint64_t v18;

  v2 = *((int *)this + 8);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = (siri::dialogengine::DialogMetadata::DisplayValue **)(v3 + 8);
  else
    v4 = 0;
  if ((_DWORD)v2)
  {
    v5 = 8 * v2;
    do
    {
      v6 = *v4++;
      v7 = siri::dialogengine::DialogMetadata::DisplayValue::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    v2 = 0;
  }
  v8 = *((_DWORD *)this + 4);
  if ((v8 & 3) != 0)
  {
    if ((v8 & 1) != 0)
    {
      v9 = *((_QWORD *)this + 6);
      v10 = *(unsigned __int8 *)(v9 + 23);
      v11 = *(_QWORD *)(v9 + 8);
      if ((v10 & 0x80u) == 0)
        v11 = v10;
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      v12 = *((_QWORD *)this + 7);
      v13 = *(unsigned __int8 *)(v12 + 23);
      v14 = *(_QWORD *)(v12 + 8);
      if ((v13 & 0x80u) == 0)
        v14 = v13;
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  v15 = *((_QWORD *)this + 1);
  if ((v15 & 1) != 0)
  {
    v17 = v15 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v17 + 23) < 0)
      v18 = *(_QWORD *)(v17 + 8);
    else
      v18 = *(unsigned __int8 *)(v17 + 23);
    v2 += v18;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

uint64_t siri::dialogengine::DialogMetadata::SemanticValue::GetCachedSize(siri::dialogengine::DialogMetadata::SemanticValue *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::DialogMetadata::SemanticValue::_InternalParse(siri::dialogengine::DialogMetadata::SemanticValue *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int *v5;
  std::string **v6;
  std::string **v7;
  uint64_t *v8;
  google::protobuf::internal *TagFallback;
  const char *v10;
  unsigned int v11;
  BOOL v13;
  google::protobuf::internal *v14;
  google::protobuf::internal *v15;
  google::protobuf::internal *v16;
  int *v17;
  uint64_t v18;
  int v19;
  siri::dialogengine::DialogMetadata::DisplayValue *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  char *v24;
  char *SizeFallback;
  unsigned int v26;
  int v27;
  int v28;
  BOOL v29;
  int v30;
  int v31;
  unint64_t v32;
  std::string *v33;
  google::protobuf::internal *v35;

  v35 = a2;
  v5 = (unsigned int *)((char *)this + 24);
  v6 = (std::string **)((char *)this + 56);
  v7 = (std::string **)((char *)this + 48);
  v8 = (uint64_t *)((char *)this + 8);
  do
  {
LABEL_2:
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v35, *((_DWORD *)a3 + 23)) & 1) != 0)
      return v35;
    TagFallback = (google::protobuf::internal *)((char *)v35 + 1);
    LODWORD(v10) = *(unsigned __int8 *)v35;
    if ((*(char *)v35 & 0x80000000) == 0)
      goto LABEL_6;
    v10 = (const char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v35 + 2);
LABEL_6:
      v35 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v35, v10);
    v35 = TagFallback;
    if (!TagFallback)
      return TagFallback;
LABEL_7:
    v11 = v10 >> 3;
    if (v10 >> 3 == 3)
    {
      if (v10 != 26)
        goto LABEL_13;
      v15 = (google::protobuf::internal *)((char *)TagFallback - 1);
      while (1)
      {
        v16 = (google::protobuf::internal *)((char *)v15 + 1);
        v35 = v16;
        v17 = (int *)*((_QWORD *)this + 5);
        if (!v17)
          break;
        v18 = *((int *)this + 8);
        v19 = *v17;
        if ((int)v18 < *v17)
        {
          *((_DWORD *)this + 8) = v18 + 1;
          v20 = *(siri::dialogengine::DialogMetadata::DisplayValue **)&v17[2 * v18 + 2];
          goto LABEL_27;
        }
        if (v19 == *((_DWORD *)this + 9))
          goto LABEL_25;
LABEL_26:
        *v17 = v19 + 1;
        v20 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::DisplayValue>(*((google::protobuf::internal::ArenaImpl **)this + 3));
        v21 = *((_QWORD *)this + 5);
        v22 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v22 + 1;
        *(_QWORD *)(v21 + 8 * v22 + 8) = v20;
        v16 = v35;
LABEL_27:
        v23 = *(unsigned __int8 *)v16;
        if (*(char *)v16 < 0)
        {
          SizeFallback = google::protobuf::internal::ReadSizeFallback(v16, (const char *)*(unsigned __int8 *)v16);
          if (!SizeFallback)
            return 0;
          v24 = SizeFallback;
          v23 = v26;
        }
        else
        {
          v24 = (char *)v16 + 1;
        }
        v27 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v24, v23);
        v28 = *((_DWORD *)a3 + 22);
        v29 = __OFSUB__(v28--, 1);
        *((_DWORD *)a3 + 22) = v28;
        if (v28 < 0 != v29)
          return 0;
        v30 = v27;
        v15 = siri::dialogengine::DialogMetadata::DisplayValue::_InternalParse(v20, (google::protobuf::internal *)v24, a3);
        if (!v15)
          return 0;
        ++*((_DWORD *)a3 + 22);
        if (*((_DWORD *)a3 + 20))
          return 0;
        v31 = *((_DWORD *)a3 + 7) + v30;
        *((_DWORD *)a3 + 7) = v31;
        v32 = *((_QWORD *)a3 + 1) + (v31 & (v31 >> 31));
        *(_QWORD *)a3 = v32;
        v35 = v15;
        if (v32 <= (unint64_t)v15 || *(_BYTE *)v15 != 26)
          goto LABEL_2;
      }
      v19 = *((_DWORD *)this + 9);
LABEL_25:
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
      v17 = (int *)*((_QWORD *)this + 5);
      v19 = *v17;
      goto LABEL_26;
    }
    if (v11 != 2)
    {
      if (v11 != 1 || v10 != 10)
        goto LABEL_13;
      *((_DWORD *)this + 4) |= 1u;
      v33 = (std::string *)*((_QWORD *)this + 6);
      if (v33 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v33 = *v7;
        goto LABEL_42;
      }
      goto LABEL_43;
    }
    if (v10 == 18)
    {
      *((_DWORD *)this + 4) |= 2u;
      v33 = (std::string *)*((_QWORD *)this + 7);
      if (v33 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        v33 = *v6;
LABEL_42:
        TagFallback = v35;
      }
LABEL_43:
      v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v33, (std::string::value_type *)TagFallback, (uint64_t)a3);
      goto LABEL_44;
    }
LABEL_13:
    if ((_DWORD)v10)
      v13 = (v10 & 7) == 4;
    else
      v13 = 1;
    if (v13)
    {
      *((_DWORD *)a3 + 20) = (_DWORD)v10 - 1;
      return TagFallback;
    }
    v14 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v10, v8, TagFallback, a3);
LABEL_44:
    v35 = v14;
  }
  while (v14);
  return 0;
}

unsigned __int8 *siri::dialogengine::DialogMetadata::SemanticValue::InternalSerializeWithCachedSizesToArray(siri::dialogengine::DialogMetadata::SemanticValue *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char *v4;
  int v6;
  int v7;
  int i;
  siri::dialogengine::DialogMetadata::DisplayValue *v9;
  unsigned int v10;
  char *v11;
  unsigned int v12;
  _BYTE *v13;
  _BYTE *v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v4 = a2;
  v6 = *((_DWORD *)this + 4);
  if ((v6 & 1) != 0)
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((_QWORD *)this + 6), a2);
  if ((v6 & 2) != 0)
    v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((_QWORD *)this + 7), v4);
  v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(_QWORD *)a3)
        v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      v9 = (siri::dialogengine::DialogMetadata::DisplayValue *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::DisplayValue>::TypeHandler>((uint64_t)this + 24, i);
      *v4 = 26;
      v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        v12 = v10 >> 7;
        if (v10 >> 14)
        {
          v13 = v4 + 2;
          do
          {
            v14 = v13;
            *v13++ = v12 | 0x80;
            v15 = v12 >> 7;
            v16 = v12 >> 14;
            v12 >>= 7;
          }
          while (v16);
          v11 = v14 + 2;
          *v13 = v15;
        }
        else
        {
          v4[2] = v12;
          v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        v11 = v4 + 2;
      }
      v4 = (char *)siri::dialogengine::DialogMetadata::DisplayValue::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  v17 = *((_QWORD *)this + 1);
  if ((v17 & 1) == 0)
    return (unsigned __int8 *)v4;
  v19 = v17 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    v21 = *(void **)v19;
    v20 = *(_QWORD *)(v19 + 8);
  }
  else
  {
    LODWORD(v20) = *(unsigned __int8 *)(v19 + 23);
    v21 = (void *)v19;
  }
  if (*(_QWORD *)a3 - (_QWORD)v4 >= (int)v20)
  {
    v22 = (int)v20;
    memcpy(v4, v21, (int)v20);
    v4 += v22;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v21, v20, (unsigned __int8 *)v4);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::DisplayValue>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF8614E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogMetadata::SemanticValue::MergeFrom(siri::dialogengine::DialogMetadata::SemanticValue *this, const siri::dialogengine::DialogMetadata::SemanticValue *a2)
{
  std::string *v4;
  uint64_t v5;
  int v6;
  std::string *v7;
  const std::string *v8;
  std::string *v9;
  std::string **v10;
  std::string *v11;
  const std::string *v12;
  char v13;
  std::string v14[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/localize/DialogMetadata.pb.cc", 778);
    v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::DisplayValue>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) != 0)
    {
      v7 = (std::string *)*((_QWORD *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      v8 = (const std::string *)*((_QWORD *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, (uint64_t)v8);
          if ((v6 & 2) == 0)
            return;
          goto LABEL_11;
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) == 0)
      return;
LABEL_11:
    v11 = (std::string *)*((_QWORD *)this + 7);
    v10 = (std::string **)((char *)this + 56);
    v9 = v11;
    *((_DWORD *)v10 - 10) |= 2u;
    v12 = (const std::string *)*((_QWORD *)a2 + 7);
    if (v11 != v12)
    {
      if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v10, (uint64_t)v12);
      else
        std::string::operator=(v9, v12);
    }
  }
}

void sub_1BF861630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::DisplayValue>::TypeHandler>(int **this, uint64_t a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  siri::dialogengine::DialogMetadata::DisplayValue **v13;
  siri::dialogengine::DialogMetadata::DisplayValue **v14;
  siri::dialogengine::DialogMetadata::DisplayValue *v15;
  siri::dialogengine::DialogMetadata::DisplayValue *v16;
  siri::dialogengine::DialogMetadata::DisplayValue *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  siri::dialogengine::DialogMetadata::DisplayValue **v21;
  siri::dialogengine::DialogMetadata::DisplayValue **v22;
  siri::dialogengine::DialogMetadata::DisplayValue *v23;
  siri::dialogengine::DialogMetadata::DisplayValue *v24;
  int v25;
  int *v26;
  char v27;
  std::string v28[2];

  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    v8 = v7;
    v9 = *this[2];
    v10 = *((int *)this + 2);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (siri::dialogengine::DialogMetadata::DisplayValue **)(v6 + 8);
      v14 = (siri::dialogengine::DialogMetadata::DisplayValue **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::DialogMetadata::DisplayValue>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = (google::protobuf::internal::ArenaImpl *)*this;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (siri::dialogengine::DialogMetadata::DisplayValue **)((char *)v8 + v20);
      v22 = (siri::dialogengine::DialogMetadata::DisplayValue **)(v20 + v6 + 8);
      do
      {
        v23 = *v22++;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::DisplayValue>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::DialogMetadata::DisplayValue>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    v26 = this[2];
    if (*v26 < v25)
      *v26 = v25;
  }
}

void sub_1BF86179C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::DialogMetadata::DisplayValue>::Merge(siri::dialogengine::DialogMetadata::DisplayValue *a1, siri::dialogengine::DialogMetadata::DisplayValue *this)
{
  siri::dialogengine::DialogMetadata::DisplayValue::MergeFrom(this, a1);
}

siri::dialogengine::DialogMetadata::SemanticValue *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::SemanticValue>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::DialogMetadata::SemanticValue *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::DialogMetadata::SemanticValue *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x40uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::DialogMetadata::SemanticValue>);
    siri::dialogengine::DialogMetadata::SemanticValue::SemanticValue(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::DialogMetadata::SemanticValue *)operator new();
    siri::dialogengine::DialogMetadata::SemanticValue::SemanticValue(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF861848(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C4071667EE6);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::DialogMetadata::SemanticValue>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

siri::dialogengine::DialogMetadata::File *siri::dialogengine::DialogMetadata::File::File(siri::dialogengine::DialogMetadata::File *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)this = &off_1E792A850;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  if (atomic_load(scc_info_File_DialogMetadata_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_File_DialogMetadata_2eproto);
  *((_BYTE *)this + 48) = 0;
  return this;
}

void sub_1BF8619A0(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t *v2;

  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogMetadata::File::~File(siri::dialogengine::DialogMetadata::File *this)
{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E792A850;
  v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::DialogMetadata::File *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E792A850;
  v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::DialogMetadata::File *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  JUMPOUT(0x1C3B8D890);
}

{
  uint64_t *v1;

  *(_QWORD *)this = &off_1E792A850;
  v1 = (uint64_t *)((char *)this + 8);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::DialogMetadata::File *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
}

_QWORD *siri::dialogengine::DialogMetadata::File::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.DialogMetadata.File");
}

siri::dialogengine::DialogMetadata::File *siri::dialogengine::DialogMetadata::File::New(siri::dialogengine::DialogMetadata::File *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::File>(0);
}

siri::dialogengine::DialogMetadata::File *siri::dialogengine::DialogMetadata::File::New(siri::dialogengine::DialogMetadata::File *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::File>(a2);
}

void siri::dialogengine::DialogMetadata::File::Clear(siri::dialogengine::DialogMetadata::File *this)
{
  uint64_t v2;
  siri::dialogengine::DialogMetadata::SemanticValue **v3;
  siri::dialogengine::DialogMetadata::SemanticValue *v4;
  std::string *v5;
  char *v6;
  char v7;
  char v8;
  std::string v9[2];

  v2 = *((unsigned int *)this + 8);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  else if ((_DWORD)v2)
  {
    v3 = (siri::dialogengine::DialogMetadata::SemanticValue **)(*((_QWORD *)this + 5) + 8);
    do
    {
      v4 = *v3++;
      siri::dialogengine::DialogMetadata::SemanticValue::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  v7 = *((_BYTE *)this + 8);
  v6 = (char *)this + 8;
  v6[40] = 0;
  *((_DWORD *)v6 + 2) = 0;
  if ((v7 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear((google::protobuf::internal::InternalMetadataWithArenaLite *)v6);
}

void sub_1BF861B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::DialogMetadata::File::IsInitialized(siri::dialogengine::DialogMetadata::File *this)
{
  return 1;
}

void siri::dialogengine::DialogMetadata::File::CheckTypeAndMergeFrom(siri::dialogengine::DialogMetadata::File *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::DialogMetadata::File::MergeFrom(this, lpsrc);
}

uint64_t siri::dialogengine::DialogMetadata::File::ByteSizeLong(siri::dialogengine::DialogMetadata::File *this)
{
  uint64_t v2;
  uint64_t v3;
  siri::dialogengine::DialogMetadata::SemanticValue **v4;
  uint64_t v5;
  siri::dialogengine::DialogMetadata::SemanticValue *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v2 = *((int *)this + 8);
  v3 = *((_QWORD *)this + 5);
  if (v3)
    v4 = (siri::dialogengine::DialogMetadata::SemanticValue **)(v3 + 8);
  else
    v4 = 0;
  if ((_DWORD)v2)
  {
    v5 = 8 * v2;
    do
    {
      v6 = *v4++;
      v7 = siri::dialogengine::DialogMetadata::SemanticValue::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    v2 = 0;
  }
  if ((*((_BYTE *)this + 16) & 1) != 0)
    result = v2 + 2;
  else
    result = v2;
  v9 = *((_QWORD *)this + 1);
  if ((v9 & 1) != 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
      v11 = *(_QWORD *)(v10 + 8);
    else
      v11 = *(unsigned __int8 *)(v10 + 23);
    result += v11;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

uint64_t siri::dialogengine::DialogMetadata::File::GetCachedSize(siri::dialogengine::DialogMetadata::File *this)
{
  return *((unsigned int *)this + 5);
}

google::protobuf::internal *siri::dialogengine::DialogMetadata::File::_InternalParse(siri::dialogengine::DialogMetadata::File *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  int v5;
  unsigned int *v6;
  uint64_t *v7;
  google::protobuf::internal *TagFallback;
  const char *v9;
  BOOL v11;
  google::protobuf::internal *v12;
  unint64_t v13;
  int v14;
  google::protobuf::internal *v15;
  google::protobuf::internal *v16;
  int *v17;
  uint64_t v18;
  int v19;
  siri::dialogengine::DialogMetadata::SemanticValue *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  char *v24;
  char *SizeFallback;
  unsigned int v26;
  int v27;
  int v28;
  BOOL v29;
  int v30;
  int v31;
  unint64_t v32;
  google::protobuf::internal *v33;
  uint64_t v34;
  google::protobuf::internal *v36;

  v5 = 0;
  v36 = a2;
  v6 = (unsigned int *)((char *)this + 24);
  v7 = (uint64_t *)((char *)this + 8);
LABEL_2:
  while ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v36, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    TagFallback = (google::protobuf::internal *)((char *)v36 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v36;
    if (*(char *)v36 < 0)
    {
      v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if (*(char *)TagFallback < 0)
      {
        TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v36, v9);
        v36 = TagFallback;
        if (!TagFallback)
          goto LABEL_45;
        goto LABEL_7;
      }
      TagFallback = (google::protobuf::internal *)((char *)v36 + 2);
    }
    v36 = TagFallback;
LABEL_7:
    if (v9 >> 3 == 2)
    {
      if (v9 != 16)
        goto LABEL_12;
      v12 = (google::protobuf::internal *)((char *)TagFallback + 1);
      v13 = *(unsigned __int8 *)TagFallback;
      if (*(char *)TagFallback < 0)
      {
        v14 = *(char *)v12;
        v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          v12 = (google::protobuf::internal *)((char *)TagFallback + 2);
          goto LABEL_22;
        }
        v33 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v13);
        v36 = v33;
        *((_BYTE *)this + 48) = v34 != 0;
        v5 = 1;
        if (!v33)
        {
LABEL_44:
          TagFallback = 0;
          goto LABEL_45;
        }
      }
      else
      {
LABEL_22:
        v36 = v12;
        *((_BYTE *)this + 48) = v13 != 0;
        v5 = 1;
      }
    }
    else
    {
      if (v9 >> 3 == 1 && v9 == 10)
      {
        v15 = (google::protobuf::internal *)((char *)TagFallback - 1);
        while (1)
        {
          v16 = (google::protobuf::internal *)((char *)v15 + 1);
          v36 = v16;
          v17 = (int *)*((_QWORD *)this + 5);
          if (!v17)
            break;
          v18 = *((int *)this + 8);
          v19 = *v17;
          if ((int)v18 < *v17)
          {
            *((_DWORD *)this + 8) = v18 + 1;
            v20 = *(siri::dialogengine::DialogMetadata::SemanticValue **)&v17[2 * v18 + 2];
            goto LABEL_31;
          }
          if (v19 == *((_DWORD *)this + 9))
            goto LABEL_29;
LABEL_30:
          *v17 = v19 + 1;
          v20 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::SemanticValue>(*((google::protobuf::internal::ArenaImpl **)this + 3));
          v21 = *((_QWORD *)this + 5);
          v22 = *((int *)this + 8);
          *((_DWORD *)this + 8) = v22 + 1;
          *(_QWORD *)(v21 + 8 * v22 + 8) = v20;
          v16 = v36;
LABEL_31:
          v23 = *(unsigned __int8 *)v16;
          if (*(char *)v16 < 0)
          {
            SizeFallback = google::protobuf::internal::ReadSizeFallback(v16, (const char *)*(unsigned __int8 *)v16);
            if (!SizeFallback)
              goto LABEL_44;
            v24 = SizeFallback;
            v23 = v26;
          }
          else
          {
            v24 = (char *)v16 + 1;
          }
          v27 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v24, v23);
          v28 = *((_DWORD *)a3 + 22);
          v29 = __OFSUB__(v28--, 1);
          *((_DWORD *)a3 + 22) = v28;
          if (v28 < 0 != v29)
            goto LABEL_44;
          v30 = v27;
          v15 = siri::dialogengine::DialogMetadata::SemanticValue::_InternalParse(v20, (google::protobuf::internal *)v24, a3);
          if (!v15)
            goto LABEL_44;
          ++*((_DWORD *)a3 + 22);
          if (*((_DWORD *)a3 + 20))
            goto LABEL_44;
          v31 = *((_DWORD *)a3 + 7) + v30;
          *((_DWORD *)a3 + 7) = v31;
          v32 = *((_QWORD *)a3 + 1) + (v31 & (v31 >> 31));
          *(_QWORD *)a3 = v32;
          v36 = v15;
          if (v32 <= (unint64_t)v15 || *(_BYTE *)v15 != 10)
            goto LABEL_2;
        }
        v19 = *((_DWORD *)this + 9);
LABEL_29:
        google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v19 + 1);
        v17 = (int *)*((_QWORD *)this + 5);
        v19 = *v17;
        goto LABEL_30;
      }
LABEL_12:
      if ((_DWORD)v9)
        v11 = (v9 & 7) == 4;
      else
        v11 = 1;
      if (v11)
      {
        *((_DWORD *)a3 + 20) = (_DWORD)v9 - 1;
        goto LABEL_45;
      }
      v36 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v7, TagFallback, a3);
      if (!v36)
        goto LABEL_44;
    }
  }
  TagFallback = v36;
LABEL_45:
  *((_DWORD *)this + 4) |= v5;
  return TagFallback;
}

unsigned __int8 *siri::dialogengine::DialogMetadata::File::InternalSerializeWithCachedSizesToArray(siri::dialogengine::DialogMetadata::File *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6;
  int i;
  siri::dialogengine::DialogMetadata::SemanticValue *v8;
  unsigned int v9;
  unsigned __int8 *v10;
  unsigned int v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  unsigned int v14;
  unsigned int v15;
  unsigned __int8 v16;
  uint64_t v17;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((unint64_t)a2 >= *(_QWORD *)a3)
        a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      v8 = (siri::dialogengine::DialogMetadata::SemanticValue *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::SemanticValue>::TypeHandler>((uint64_t)this + 24, i);
      *a2 = 10;
      v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        v11 = v9 >> 7;
        if (v9 >> 14)
        {
          v12 = (unsigned __int8 *)(a2 + 2);
          do
          {
            v13 = v12;
            *v12++ = v11 | 0x80;
            v14 = v11 >> 7;
            v15 = v11 >> 14;
            v11 >>= 7;
          }
          while (v15);
          v10 = v13 + 2;
          *v12 = v14;
        }
        else
        {
          a2[2] = v11;
          v10 = (unsigned __int8 *)(a2 + 3);
        }
      }
      else
      {
        a2[1] = v9;
        v10 = (unsigned __int8 *)(a2 + 2);
      }
      a2 = (char *)siri::dialogengine::DialogMetadata::SemanticValue::InternalSerializeWithCachedSizesToArray(v8, (char *)v10, a3);
    }
  }
  if ((*((_BYTE *)this + 16) & 1) != 0)
  {
    if ((unint64_t)a2 >= *(_QWORD *)a3)
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    v16 = *((_BYTE *)this + 48);
    *a2 = 16;
    a2[1] = v16;
    a2 += 2;
  }
  v17 = *((_QWORD *)this + 1);
  if ((v17 & 1) == 0)
    return (unsigned __int8 *)a2;
  v19 = v17 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    v21 = *(void **)v19;
    v20 = *(_QWORD *)(v19 + 8);
  }
  else
  {
    LODWORD(v20) = *(unsigned __int8 *)(v19 + 23);
    v21 = (void *)v19;
  }
  if (*(_QWORD *)a3 - (_QWORD)a2 >= (int)v20)
  {
    v22 = (int)v20;
    memcpy(a2, v21, (int)v20);
    a2 += v22;
    return (unsigned __int8 *)a2;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v21, v20, (unsigned __int8 *)a2);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::SemanticValue>::TypeHandler>(uint64_t a1, int a2)
{
  std::string *v4;
  std::string *v5;
  char v7;
  std::string v8[2];

  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1BF862190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogMetadata::File::MergeFrom(siri::dialogengine::DialogMetadata::File *this, const siri::dialogengine::DialogMetadata::File *a2)
{
  std::string *v4;
  uint64_t v5;
  char v6;
  char v7;
  std::string v8[2];

  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/localize/DialogMetadata.pb.cc", 1000);
    v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::SemanticValue>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  if ((*((_BYTE *)a2 + 16) & 1) != 0)
  {
    v6 = *((_BYTE *)a2 + 48);
    *((_DWORD *)this + 4) |= 1u;
    *((_BYTE *)this + 48) = v6;
  }
}

void sub_1BF862258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::SemanticValue>::TypeHandler>(int **this, uint64_t a2)
{
  std::string *v4;
  int v5;
  uint64_t v6;
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  siri::dialogengine::DialogMetadata::SemanticValue **v13;
  siri::dialogengine::DialogMetadata::SemanticValue **v14;
  siri::dialogengine::DialogMetadata::SemanticValue *v15;
  siri::dialogengine::DialogMetadata::SemanticValue *v16;
  siri::dialogengine::DialogMetadata::SemanticValue *v17;
  google::protobuf::internal::ArenaImpl *v18;
  int v19;
  uint64_t v20;
  siri::dialogengine::DialogMetadata::SemanticValue **v21;
  siri::dialogengine::DialogMetadata::SemanticValue **v22;
  siri::dialogengine::DialogMetadata::SemanticValue *v23;
  siri::dialogengine::DialogMetadata::SemanticValue *v24;
  int v25;
  int *v26;
  char v27;
  std::string v28[2];

  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    v8 = v7;
    v9 = *this[2];
    v10 = *((int *)this + 2);
    v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5)
      v12 = v5;
    else
      v12 = v11;
    if ((int)v12 >= 1)
    {
      v13 = (siri::dialogengine::DialogMetadata::SemanticValue **)(v6 + 8);
      v14 = (siri::dialogengine::DialogMetadata::SemanticValue **)v7;
      do
      {
        v16 = *v13++;
        v15 = v16;
        v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::DialogMetadata::SemanticValue>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      v18 = (google::protobuf::internal::ArenaImpl *)*this;
      v19 = v10 + v5 - v9;
      v20 = 8 * v9 - 8 * v10;
      v21 = (siri::dialogengine::DialogMetadata::SemanticValue **)((char *)v8 + v20);
      v22 = (siri::dialogengine::DialogMetadata::SemanticValue **)(v20 + v6 + 8);
      do
      {
        v23 = *v22++;
        v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::SemanticValue>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::DialogMetadata::SemanticValue>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    v26 = this[2];
    if (*v26 < v25)
      *v26 = v25;
  }
}

void sub_1BF8623C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::DialogMetadata::SemanticValue>::Merge(siri::dialogengine::DialogMetadata::SemanticValue *a1, siri::dialogengine::DialogMetadata::SemanticValue *this)
{
  siri::dialogengine::DialogMetadata::SemanticValue::MergeFrom(this, a1);
}

siri::dialogengine::DialogMetadata::File *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::DialogMetadata::File>(google::protobuf::internal::ArenaImpl *this)
{
  siri::dialogengine::DialogMetadata::File *AlignedAndAddCleanup;

  if (this)
  {
    if (*((_QWORD *)this + 14))
    AlignedAndAddCleanup = (siri::dialogengine::DialogMetadata::File *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::DialogMetadata::File>);
    siri::dialogengine::DialogMetadata::File::File(AlignedAndAddCleanup);
  }
  else
  {
    AlignedAndAddCleanup = (siri::dialogengine::DialogMetadata::File *)operator new();
    siri::dialogengine::DialogMetadata::File::File(AlignedAndAddCleanup);
  }
  return AlignedAndAddCleanup;
}

void sub_1BF862470(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x1C3B8D890](v1, 0x10A1C401A12C281);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::DialogMetadata::File>(uint64_t (***a1)(_QWORD))
{
  return (**a1)(a1);
}

siri::dialogengine::DialogMetadata::Constraint *siri::dialogengine::DialogMetadata::Constraint::Constraint(siri::dialogengine::DialogMetadata::Constraint *this, const siri::dialogengine::DialogMetadata::Constraint *a2)
{
  uint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t *v7;

  *(_QWORD *)this = &off_1E792A6A0;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  v4 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((uint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string)
    {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 3, (uint64_t)v6);
      v5 = *((_DWORD *)a2 + 4);
    }
  }
  *((_QWORD *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    v7 = (uint64_t *)*((_QWORD *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 4, (uint64_t)v7);
  }
  return this;
}

void sub_1BF86254C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::DialogMetadata::Constraint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void *siri::dialogengine::DialogMetadata::Constraint::default_instance(siri::dialogengine::DialogMetadata::Constraint *this)
{
  if (atomic_load(scc_info_Constraint_DialogMetadata_2eproto))
    google::protobuf::internal::InitSCCImpl(scc_info_Constraint_DialogMetadata_2eproto);
  return &siri::dialogengine::DialogMetadata::_Constraint_default_instance_;
}

void siri::dialogengine::DialogMetadata::Constraint::CopyFrom(siri::dialogengine::DialogMetadata::Constraint *this, const siri::dialogengine::DialogMetadata::Constraint *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::DialogMetadata::Constraint::Clear(this);
    siri::dialogengine::DialogMetadata::Constraint::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::DialogMetadata::Constraint::InternalSwap(siri::dialogengine::DialogMetadata::Constraint *this, siri::dialogengine::DialogMetadata::Constraint *a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  __n128 *v8;
  unint64_t v9;
  __n128 result;
  unint64_t v11;
  uint64_t *v12;
  int v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  std::string **v18;
  std::string *v19;
  uint64_t *v20;
  std::string **v21;
  std::string *v22;
  std::string::size_type v23;
  std::string::size_type v24;
  unint64_t v25;

  v5 = (uint64_t *)((char *)this + 8);
  v4 = *((_QWORD *)this + 1);
  v6 = *((_QWORD *)a2 + 1);
  if ((v4 & 1) != 0)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((uint64_t *)a2 + 1);
      v7 = v25;
      v4 = *v5;
      if ((*v5 & 1) != 0)
        goto LABEL_6;
      goto LABEL_22;
    }
LABEL_5:
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      v9 = v8[1].n128_u64[0];
      result = *v8;
      v11 = *(_QWORD *)(v7 + 16);
      *v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)v7 = result;
      *(_QWORD *)(v7 + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if ((v6 & 1) != 0)
    goto LABEL_5;
LABEL_8:
  v12 = (uint64_t *)*((_QWORD *)this + 3);
  v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
      goto LABEL_14;
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v12 = (uint64_t *)*((_QWORD *)this + 3);
  }
  v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  v16 = v12[2];
  result = *(__n128 *)v12;
  v17 = v15[2];
  *(_OWORD *)v12 = *(_OWORD *)v15;
  v12[2] = v17;
  *(__n128 *)v15 = result;
  v15[2] = v16;
LABEL_14:
  v20 = (uint64_t *)*((_QWORD *)this + 4);
  v18 = (std::string **)((char *)this + 32);
  v19 = (std::string *)v20;
  v21 = (std::string **)((char *)a2 + 32);
  if (v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
      return result;
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v18, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v19 = *v18;
  }
  v22 = *v21;
  if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, 0, (__int128 *)&google::protobuf::internal::fixed_address_empty_string);
    v22 = *v21;
  }
  v23 = v19->__r_.__value_.__r.__words[2];
  result = *(__n128 *)&v19->__r_.__value_.__l.__data_;
  v24 = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v19->__r_.__value_.__r.__words[2] = v24;
  *(__n128 *)&v22->__r_.__value_.__l.__data_ = result;
  v22->__r_.__value_.__r.__words[2] = v23;
  return result;
}

siri::dialogengine::DialogMetadata::DisplayValue *siri::dialogengine::DialogMetadata::DisplayValue::DisplayValue(siri::dialogengine::DialogMetadata::DisplayValue *this, const siri::dialogengine::DialogMetadata::DisplayValue *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;

  *(_QWORD *)this = &off_1E792A730;
  *((_QWORD *)this + 1) = 0;
  v4 = (uint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(_QWORD *)((char *)this + 28) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  *(_QWORD *)((char *)this + 20) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::DialogMetadata::Constraint>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  v5 = *((_QWORD *)a2 + 1);
  if ((v5 & 1) != 0)
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  *((_QWORD *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if ((*((_BYTE *)a2 + 16) & 1) != 0)
  {
    v6 = (uint64_t *)*((_QWORD *)a2 + 6);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string)
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((std::string **)this + 6, (uint64_t)v6);
  }
  return this;
}

void sub_1BF862834(_Unwind_Exception *a1)
{
  uint64_t *v1;
  google::protobuf::internal::RepeatedPtrFieldBase *v2;

  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

