void sub_20FF25AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char *a22)
{
  char *v22;
  char *v24;
  uint64_t v25;

  v24 = a22;
  if (a22 == v22)
  {
    v25 = 4;
    v24 = &a19;
  }
  else
  {
    if (!a22)
    {
      sub_20FF27D58(&a9);
      _Unwind_Resume(a1);
    }
    v25 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v24 + 8 * v25))();
  sub_20FF27D58(&a9);
  _Unwind_Resume(a1);
}

void sub_20FF25B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  va_list va;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v14 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v12 = *(_QWORD **)(v10 - 64);
  if (v12 == v9)
  {
    v13 = 4;
    v12 = (_QWORD *)(v10 - 88);
  }
  else
  {
    if (!v12)
      goto LABEL_6;
    v13 = 5;
  }
  (*(void (**)(void))(*v12 + 8 * v13))();
LABEL_6:
  sub_20EA02254((uint64_t)va1);
  sub_20E86665C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF25B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  std::__shared_weak_count *v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  sub_20EA0228C((std::mutex ***)va1);
  std::__shared_weak_count::__release_weak(v9);
  sub_20E86665C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF25BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  std::__shared_weak_count *v9;
  uint64_t v10;
  va_list va;

  va_start(va, a9);
  MEMORY[0x212BC6398](v10, 0x20C4093837F09);
  std::__shared_weak_count::__release_weak(v9);
  sub_20E86665C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF25BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  std::__shared_weak_count *v17;

  std::__shared_weak_count::__release_weak(v17);
  sub_20E86665C((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF25BF4(uint64_t result)
{
  atomic_store(1u, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_20FF25C04(uint64_t result)
{
  atomic_store(0, (unsigned __int8 *)(result + 8));
  return result;
}

uint64_t sub_20FF25C10(uint64_t a1)
{
  unsigned __int8 v1;

  v1 = atomic_load((unsigned __int8 *)(a1 + 8));
  return v1 & 1;
}

void sub_20FF25C20(_QWORD *a1, std::__shared_weak_count_vtbl **a2, std::__shared_weak_count_vtbl **a3)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count_vtbl *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t *p_shared_weak_owners;
  unint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  std::__shared_weak_count **v26;
  unint64_t v27;
  uint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  std::mutex **v37;
  std::__shared_weak_count *v38;
  std::__shared_weak_count *v39;
  std::__shared_weak_count *v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t **v46;
  std::__shared_weak_count *v47;
  std::__shared_weak_count *v48;
  std::__shared_weak_count *v49;
  uint64_t v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t *v53;
  unint64_t v54;
  char *v55;
  std::string *v56;
  uint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count_vtbl *v62;
  std::__shared_weak_count_vtbl *v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count_vtbl *v66;
  std::__shared_weak_count_vtbl *v67;
  unint64_t *v68;
  unint64_t v69;
  _QWORD *v70;
  char *v71;
  __int128 *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  __int128 *v77;
  std::string *v78;
  std::runtime_error *exception;
  std::runtime_error *v80;
  uint64_t **v81;
  std::__shared_weak_count *v82[2];
  _QWORD *v83;
  std::__shared_weak_count *v84;
  std::__shared_weak_count *v85;
  std::runtime_error v86;
  std::__shared_weak_count *v87;
  std::__shared_weak_count *v88;
  __int128 v89;
  _QWORD *v90;
  __int128 *v91;
  _QWORD v92[2];
  std::string v93;
  std::string *v94;
  uint64_t v95;

  v95 = *MEMORY[0x24BDAC8D0];
  if (((*(uint64_t (**)(_QWORD *))(*a1 + 48))(a1) & 1) == 0)
  {
    *(_QWORD *)&v89 = "Invalid operation. Interface is disabled for ";
    *((_QWORD *)&v89 + 1) = 45;
    v76 = (_QWORD *)a1[6];
    v75 = a1 + 6;
    v74 = v76;
    v77 = (__int128 *)*((unsigned __int8 *)v75 + 23);
    if ((char)v77 < 0)
      v77 = (__int128 *)v75[1];
    else
      v74 = v75;
    v90 = v74;
    v91 = v77;
    sub_20E8778D4((uint64_t)&v89, (uint64_t)v92, 0, 0, &v93);
    if ((v93.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v78 = &v93;
    else
      v78 = (std::string *)v93.__r_.__value_.__r.__words[0];
    std::runtime_error::runtime_error(&v86, (const char *)v78);
    v86.__vftable = (std::runtime_error_vtbl *)&off_24CA1E2B8;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v80 = std::runtime_error::runtime_error(exception, &v86);
    v80->__vftable = (std::runtime_error_vtbl *)&off_24CA1E2B8;
    __cxa_throw(v80, (struct type_info *)&unk_24CA1E2D0, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!a1[9]
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 294, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  if (a1[18])
  {
    v6 = (std::__shared_weak_count *)operator new(0x20uLL);
    v6->__shared_weak_owners_ = 0;
    v6->__vftable = (std::__shared_weak_count_vtbl *)&unk_24C9CDF68;
    v6[1].__vftable = *a3;
    v85 = v6;
    v83 = &v6[1].__vftable;
    v84 = v6;
    v6->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    *a3 = 0;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    if (!a1[18]
      && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 414, (uint64_t)"limiting_buffer_", 16, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v9 = (std::__shared_weak_count *)operator new(0x40uLL);
    v10 = v9;
    v9->__shared_owners_ = 0;
    v11 = (unint64_t *)&v9->__shared_owners_;
    v9->__shared_weak_owners_ = 0;
    v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0C780;
    v12 = (uint64_t)a2[1];
    v9[1].__vftable = *a2;
    v13 = v9 + 1;
    v9[1].__shared_owners_ = v12;
    if (v12)
    {
      v14 = (unint64_t *)(v12 + 8);
      do
        v15 = __ldxr(v14);
      while (__stxr(v15 + 1, v14));
    }
    v17 = a2[3];
    v16 = (uint64_t)a2[4];
    v9[1].__shared_weak_owners_ = (uint64_t)&off_24CA0C0E8;
    v9[2].__vftable = v17;
    v9[2].__shared_owners_ = v16;
    if (v16)
    {
      v18 = (unint64_t *)(v16 + 8);
      do
        v19 = __ldxr(v18);
      while (__stxr(v19 + 1, v18));
    }
    v87 = v9 + 1;
    v88 = v9;
    p_shared_weak_owners = (unint64_t *)&v9->__shared_weak_owners_;
    do
      v21 = __ldxr(p_shared_weak_owners);
    while (__stxr(v21 + 1, p_shared_weak_owners));
    v22 = (uint64_t *)a1[18];
    v23 = (_QWORD *)operator new();
    *v23 = v22 + 7;
    std::mutex::lock((std::mutex *)(v22 + 7));
    *(_QWORD *)&v89 = v23;
    *((_QWORD *)&v89 + 1) = v22;
    if (!*((_BYTE *)v22 + 48))
      sub_20E866B34();
    v24 = v22[4];
    v25 = *v22;
    v26 = (std::__shared_weak_count **)(*v22 + 16 * v24);
    do
      v27 = __ldxr(v11);
    while (__stxr(v27 + 1, v11));
    *v26 = v13;
    v28 = v25 + 16 * v24;
    v29 = *(std::__shared_weak_count **)(v28 + 8);
    *(_QWORD *)(v28 + 8) = v10;
    if (v29)
    {
      v30 = (unint64_t *)&v29->__shared_owners_;
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    v32 = (v22[1] - *v22) >> 4;
    v33 = v22[5];
    v34 = v22[4] + 1;
    if (v34 >= v32)
      v35 = (v22[1] - *v22) >> 4;
    else
      v35 = 0;
    v22[4] = v34 - v35;
    if (v33 == v32)
    {
      v36 = v22[3] + 1;
      if (v36 < v32)
        v32 = 0;
      v22[3] = v36 - v32;
      v37 = (std::mutex **)v89;
      if (!(_QWORD)v89)
      {
LABEL_43:
        v46 = (uint64_t **)a1[9];
        v89 = 0uLL;
        v47 = (std::__shared_weak_count *)a1[5];
        if (v47)
        {
          v48 = std::__shared_weak_count::lock(v47);
          if (v48)
          {
            v49 = v48;
            v50 = a1[4];
            v51 = (unint64_t *)&v48->__shared_weak_owners_;
            do
              v52 = __ldxr(v51);
            while (__stxr(v52 + 1, v51));
            *(_QWORD *)&v89 = v50;
            *((_QWORD *)&v89 + 1) = v48;
            v53 = (unint64_t *)&v48->__shared_owners_;
            do
              v54 = __ldaxr(v53);
            while (__stlxr(v54 - 1, v53));
            if (!v54)
            {
              ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
              std::__shared_weak_count::__release_weak(v49);
            }
          }
          else
          {
            v89 = 0uLL;
          }
        }
        v55 = (char *)operator new(0x38uLL);
        *(_QWORD *)v55 = &off_24CA0C8D0;
        *(_OWORD *)(v55 + 8) = v89;
        v89 = 0uLL;
        *((_QWORD *)v55 + 3) = v13;
        *((_QWORD *)v55 + 4) = v10;
        v90 = 0;
        v91 = 0;
        *((_QWORD *)v55 + 5) = v83;
        *((_QWORD *)v55 + 6) = v84;
        v92[0] = 0;
        v92[1] = 0;
        v94 = (std::string *)v55;
        sub_210216F3C(*v46, (uint64_t)&v93);
        v56 = v94;
        if (v94 == &v93)
        {
          v57 = 4;
          v56 = &v93;
        }
        else
        {
          if (!v94)
            goto LABEL_57;
          v57 = 5;
        }
        (*(void (**)(void))(v56->__r_.__value_.__r.__words[0] + 8 * v57))();
LABEL_57:
        if (v88)
        {
          v58 = &v88->__shared_owners_;
          do
            v59 = __ldaxr((unint64_t *)v58);
          while (__stlxr(v59 - 1, (unint64_t *)v58));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
            std::__shared_weak_count::__release_weak(v88);
          }
        }
        if (v85)
        {
          v60 = (unint64_t *)&v85->__shared_owners_;
          do
            v61 = __ldaxr(v60);
          while (__stlxr(v61 - 1, v60));
          if (!v61)
          {
            ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
            std::__shared_weak_count::__release_weak(v85);
          }
        }
        return;
      }
    }
    else
    {
      v22[5] = v33 + 1;
      v37 = (std::mutex **)v89;
      if (!(_QWORD)v89)
        goto LABEL_43;
    }
    std::mutex::unlock(*v37);
    MEMORY[0x212BC6398](v37, 0x20C4093837F09);
    goto LABEL_43;
  }
  v81 = (uint64_t **)a1[9];
  *(_OWORD *)v82 = 0uLL;
  v38 = (std::__shared_weak_count *)a1[5];
  if (v38)
  {
    v39 = std::__shared_weak_count::lock(v38);
    if (v39)
    {
      v40 = v39;
      v41 = (std::__shared_weak_count *)a1[4];
      v42 = (unint64_t *)&v39->__shared_weak_owners_;
      do
        v43 = __ldxr(v42);
      while (__stxr(v43 + 1, v42));
      v82[0] = v41;
      v82[1] = v39;
      v44 = (unint64_t *)&v39->__shared_owners_;
      do
        v45 = __ldaxr(v44);
      while (__stlxr(v45 - 1, v44));
      if (!v45)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v40);
      }
    }
    else
    {
      *(_OWORD *)v82 = 0uLL;
    }
  }
  v62 = *a2;
  v63 = a2[1];
  if (v63)
  {
    v64 = (unint64_t *)&v63->~__shared_weak_count_0;
    do
      v65 = __ldxr(v64);
    while (__stxr(v65 + 1, v64));
  }
  v67 = a2[3];
  v66 = a2[4];
  if (v66)
  {
    v68 = (unint64_t *)&v66->~__shared_weak_count_0;
    do
      v69 = __ldxr(v68);
    while (__stxr(v69 + 1, v68));
  }
  v70 = operator new(0x20uLL);
  v70[1] = 0;
  v70[2] = 0;
  *v70 = &unk_24C9CDF68;
  v70[3] = *a3;
  *a3 = 0;
  v71 = (char *)operator new(0x50uLL);
  *(_QWORD *)v71 = &off_24CA0C950;
  *(_OWORD *)(v71 + 8) = *(_OWORD *)v82;
  *((_QWORD *)v71 + 3) = v62;
  *((_QWORD *)v71 + 4) = v63;
  *((_QWORD *)v71 + 5) = &off_24CA0C0E8;
  *((_QWORD *)v71 + 6) = v67;
  *((_QWORD *)v71 + 7) = v66;
  *((_QWORD *)v71 + 8) = v70 + 3;
  *((_QWORD *)v71 + 9) = v70;
  v91 = (__int128 *)v71;
  sub_210216F3C(*v81, (uint64_t)&v89);
  v72 = v91;
  if (v91 == &v89)
  {
    v73 = 4;
    v72 = &v89;
  }
  else
  {
    if (!v91)
      return;
    v73 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v72 + 8 * v73))();
}

void sub_20FF263AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,std::runtime_error a24,std::exception_ptr a25,uint64_t a26,uint64_t a27,std::exception_ptr a28)
{
  std::__assoc_sub_state **v28;
  uint64_t v29;
  std::__assoc_sub_state *v30;
  std::exception_ptr v31;

  if (a2)
  {
    __cxa_begin_catch(exception_object);
    std::current_exception();
    __cxa_end_catch();
    v30 = *v28;
    if (*v28)
    {
      std::exception_ptr::exception_ptr(&a28, &a25);
      v31.__ptr_ = &a28;
      std::__assoc_sub_state::set_exception(v30, v31);
      std::exception_ptr::~exception_ptr(&a28);
      std::exception_ptr::~exception_ptr(&a25);
      std::runtime_error::~runtime_error(&a24);
      if (*(char *)(v29 - 105) < 0)
        operator delete(*(void **)(v29 - 128));
      JUMPOUT(0x20FF262BCLL);
    }
    sub_20E96CE78(3u);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF26420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,std::runtime_error a24,std::exception_ptr a25,uint64_t a26,uint64_t a27,std::exception_ptr a28)
{
  uint64_t v28;

  std::exception_ptr::~exception_ptr(&a25);
  std::runtime_error::~runtime_error(&a24);
  if (*(char *)(v28 - 105) < 0)
  {
    operator delete(*(void **)(v28 - 128));
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20FF26474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,char *a32)
{
  char *v32;
  char *v34;
  uint64_t v35;

  v34 = a32;
  if (a32 == v32)
  {
    v35 = 4;
    v34 = &a29;
  }
  else
  {
    if (!a32)
    {
      sub_20FF28C80(&a11);
      _Unwind_Resume(a1);
    }
    v35 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v34 + 8 * v35))();
  sub_20FF28C80(&a11);
  _Unwind_Resume(a1);
}

void sub_20FF264C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  uint64_t v12;

  sub_20EB094E8(v12);
  if (a12)
  {
    std::__shared_weak_count::__release_weak(a12);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20FF264F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29)
{
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v32;
  uint64_t v33;

  v32 = *(_QWORD **)(v30 - 104);
  if (v32 == v29)
  {
    v33 = 4;
    v32 = (_QWORD *)(v30 - 128);
  }
  else
  {
    if (!v32)
      goto LABEL_6;
    v33 = 5;
  }
  (*(void (**)(void))(*v32 + 8 * v33))();
LABEL_6:
  sub_20EA031A8(&a29);
  sub_20E86665C((uint64_t)&a27);
  sub_20E86665C((uint64_t)&a20);
  sub_20E86665C((uint64_t)&a22);
  _Unwind_Resume(a1);
}

void sub_20FF26594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v13;
  va_list va;
  uint64_t v15;
  va_list va1;

  va_start(va1, a12);
  va_start(va, a12);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  sub_20E86665C((uint64_t)va);
  sub_20E86665C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20FF265B0(uint64_t a1)
{
  uint64_t *v1;

  v1 = *(uint64_t **)(a1 + 72);
  if (v1)
  {
    sub_210217048(*v1);
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 167, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    sub_210217048(**(_QWORD **)(a1 + 72));
  }
}

_QWORD *sub_20FF26624(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *result;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE *v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v4 = (uint64_t **)a1[9];
  if (!v4)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 181, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = (uint64_t **)a1[9];
  }
  v6 = a1[4];
  v5 = a1[5];
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  v10 = operator new(0x28uLL);
  *v10 = &off_24CA0C9D0;
  v10[1] = v6;
  v10[2] = v5;
  v10[3] = &off_24C9B2630;
  v10[4] = v9;
  v14 = v10;
  sub_210216F3C(*v4, (uint64_t)v13);
  result = v14;
  if (v14 == v13)
  {
    v12 = 4;
    result = v13;
  }
  else
  {
    if (!v14)
      return result;
    v12 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v12))();
}

void sub_20FF26754(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20FF267C8(_QWORD *a1)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *result;
  uint64_t v9;
  _BYTE v10[24];
  _BYTE *v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t **)a1[9];
  if (!v2)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 202, (uint64_t)"scheduler_", 10, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v2 = (uint64_t **)a1[9];
  }
  v4 = a1[4];
  v3 = a1[5];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = operator new(0x20uLL);
  *v7 = &off_24CA0CA50;
  v7[1] = v4;
  v7[2] = v3;
  v11 = v7;
  sub_210216F3C(*v2, (uint64_t)v10);
  result = v11;
  if (v11 == v10)
  {
    v9 = 4;
    result = v10;
  }
  else
  {
    if (!v11)
      return result;
    v9 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v9))();
}

void sub_20FF268D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;

  if (a13 == v13)
  {
    (*(void (**)(void))(a10 + 32))();
    _Unwind_Resume(exception_object);
  }
  if (a13)
  {
    (*(void (**)(void))(*(_QWORD *)a13 + 40))();
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20FF2693C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24C9B80A0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_20E96CE78(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24CA0CAD0;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_210216F3C(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_20EA04D14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_20EA04DE8(&v22);
}

void sub_20FF26B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_20EA04DE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_20EA04DE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF26C1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;
  unint64_t v7;
  uint64_t **v8;
  std::__shared_weak_count *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  _BYTE v23[24];
  _BYTE *v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  v5 = (unint64_t *)(v4 + 8);
  *(_QWORD *)(v4 + 24) = 850045863;
  *(_QWORD *)(v4 + 16) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 1018212795;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_QWORD *)v4 = &off_24C9B80A0;
  v22 = v4;
  std::mutex::lock((std::mutex *)(v4 + 24));
  v6 = *(_DWORD *)(v4 + 136);
  if ((v6 & 2) != 0)
    sub_20E96CE78(1u);
  do
    v7 = __ldxr(v5);
  while (__stxr(v7 + 1, v5));
  *(_DWORD *)(v4 + 136) = v6 | 2;
  std::mutex::unlock((std::mutex *)(v4 + 24));
  v8 = (uint64_t **)a1[9];
  v9 = (std::__shared_weak_count *)a1[5];
  if (v9)
  {
    v10 = std::__shared_weak_count::lock(v9);
    v11 = v10;
    if (v10)
    {
      v12 = a1[4];
      p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
      do
        v14 = __ldxr(p_shared_weak_owners);
      while (__stxr(v14 + 1, p_shared_weak_owners));
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v16 = __ldaxr(p_shared_owners);
      while (__stlxr(v16 - 1, p_shared_owners));
      if (!v16)
      {
        ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  v17 = operator new(0x20uLL);
  *v17 = &off_24CA0CB50;
  v17[1] = v12;
  v17[2] = v11;
  v17[3] = &v22;
  v24 = v17;
  sub_210216F3C(*v8, (uint64_t)v23);
  v18 = v24;
  if (v24 == v23)
  {
    v19 = 4;
    v18 = v23;
    goto LABEL_17;
  }
  if (v24)
  {
    v19 = 5;
LABEL_17:
    (*(void (**)(_QWORD *))(*v18 + 8 * v19))(v18);
  }
  std::__assoc_sub_state::wait((std::__assoc_sub_state *)v4);
  sub_20EA04D14(v4, a2);
  do
    v20 = __ldaxr(v5);
  while (__stlxr(v20 - 1, v5));
  if (!v20)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 16))(v4);
  return sub_20EA04DE8(&v22);
}

void sub_20FF26E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unint64_t *v10;
  unint64_t v12;

  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (!v12)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
    sub_20EA04DE8(&a9);
    _Unwind_Resume(a1);
  }
  sub_20EA04DE8(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF26EFC(uint64_t a1)
{
  return sub_20FF27B58(a1 - 16);
}

void sub_20FF26F04(uint64_t a1)
{
  sub_20FF27B58(a1 - 16);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF26F2C(uint64_t a1, uint64_t a2)
{
  return sub_20FF26624((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_20FF26F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20FF2693C((_QWORD *)(a1 - 16), a2);
}

uint64_t *sub_20FF26F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20FF26C1C((_QWORD *)(a1 - 16), a2);
}

uint64_t sub_20FF26F44(uint64_t a1)
{
  return a1 - 16;
}

uint64_t sub_20FF26F4C(uint64_t a1)
{
  return sub_20FF27B58(a1 - 24);
}

void sub_20FF26F54(uint64_t a1)
{
  sub_20FF27B58(a1 - 24);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF26F7C(uint64_t a1)
{
  return sub_20FF267C8((_QWORD *)(a1 - 24));
}

uint64_t sub_20FF26F84(uint64_t a1)
{
  return a1 - 24;
}

void sub_20FF26F90()
{
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF26FA4(uint64_t a1, __int128 **a2)
{
  uint64_t v3;
  _WORD *v4;
  __int128 *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  __int128 *v10;
  unint64_t *v11;
  unint64_t v12;
  __int128 v13;
  uint64_t *v14;
  __int128 v15;
  int v16;
  int v17;
  char *v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  int64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v35;
  std::__shared_weak_count *v36;
  _QWORD v37[2];
  std::__shared_weak_count *v38;
  char v39;
  _QWORD v40[3];
  void *v41;
  void *__dst;
  char *v43;
  void *__p;
  char *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  char v52[4];
  __int128 v53;
  uint64_t v54;
  _BYTE v55[24];
  uint64_t v56;
  int v57;
  char v58[16];
  int v59;
  __int128 v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  char v65;
  __int128 __src;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  __int128 v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a1 + 8);
  v40[0] = &off_24CA16588;
  v40[1] = 1;
  v40[2] = &unk_24CA166D8;
  v4 = operator new(0xAuLL);
  *(_QWORD *)v4 = 0;
  v4[4] = 0;
  v41 = v4;
  __dst = v4 + 5;
  v43 = (char *)(v4 + 5);
  __p = 0;
  v45 = 0;
  v46 = 0;
  v5 = *a2;
  v6 = (std::__shared_weak_count *)a2[1];
  v35 = *a2;
  v36 = v6;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v10 = a2[3];
  v9 = (std::__shared_weak_count *)a2[4];
  v37[0] = &off_24CA0C0E8;
  v37[1] = v10;
  v38 = v9;
  if (v9)
  {
    v11 = (unint64_t *)&v9->__shared_owners_;
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v39 = 1;
  v48 = 0x500000001;
  v49 = 0;
  v50 = 1;
  v51 = 0;
  if (*((char *)v5 + 23) < 0)
  {
    sub_20E860C04(&__src, *(void **)v5, *((_QWORD *)v5 + 1));
  }
  else
  {
    v13 = *v5;
    v67 = *((_QWORD *)v5 + 2);
    __src = v13;
  }
  v14 = sub_20FDD7854(0);
  sub_20FDD72D4((uint64_t)&v68, (uint64_t)v37, (uint64_t)v14);
  LOBYTE(v76) = 0;
  v78 = 0;
  if (*((_BYTE *)v35 + 48))
  {
    if (*((char *)v35 + 47) < 0)
    {
      sub_20E860C04(&v76, *((void **)v35 + 3), *((_QWORD *)v35 + 4));
    }
    else
    {
      v15 = *(__int128 *)((char *)v35 + 24);
      v77 = *((_QWORD *)v35 + 5);
      v76 = v15;
    }
    v16 = 1;
    v78 = 1;
  }
  else
  {
    v16 = 0;
  }
  v53 = __src;
  v54 = v67;
  __src = 0uLL;
  *(_OWORD *)&v55[8] = v69;
  v56 = v70;
  v67 = 0;
  v69 = 0uLL;
  v70 = 0;
  v17 = v73;
  v57 = v71;
  v59 = -1;
  v58[0] = 0;
  if (v73 != -1)
  {
    ((void (*)(char *, char *, uint64_t *))off_24CA0C760[v73])(&v47, v58, &v72);
    v59 = v17;
    v16 = v78;
  }
  v60 = v74;
  v61 = v75;
  v75 = 0;
  v74 = 0uLL;
  v18 = (char *)&v62;
  LOBYTE(v62) = 0;
  v64 = 0;
  if (v16)
  {
    v62 = v76;
    v63 = v77;
    v77 = 0;
    v76 = 0uLL;
    v64 = 1;
  }
  v65 = 1;
  sub_20FF27818((uint64_t)&__src);
  if (v39)
  {
    v19 = v38;
    if (v38)
    {
      v20 = (unint64_t *)&v38->__shared_owners_;
      do
        v21 = __ldaxr(v20);
      while (__stlxr(v21 - 1, v20));
      if (!v21)
      {
        ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
        std::__shared_weak_count::__release_weak(v19);
      }
    }
    if (v36)
    {
      v22 = (unint64_t *)&v36->__shared_owners_;
      do
        v23 = __ldaxr(v22);
      while (__stlxr(v23 - 1, v22));
      if (!v23)
      {
        ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
        std::__shared_weak_count::__release_weak(v36);
      }
    }
  }
  LODWORD(__src) = 1;
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 4, 4);
  sub_2100B6A04(v40);
  LODWORD(__src) = 1;
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 4, 4);
  sub_2100B6A04(v40);
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&v48, (char *)&v48 + 4, 4);
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&v48 + 4, (char *)&v49, 4);
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&v49, (char *)&v50, 4);
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&v50, (char *)&v50 + 4, 4);
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&v50 + 4, (char *)&v51, 4);
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&v51, v52, 4);
  *(_QWORD *)((char *)v41 + *((_QWORD *)v45 - 1) + 10) = (_BYTE *)__dst - ((_BYTE *)v41 + *((_QWORD *)v45 - 1)) - 18;
  v45 -= 8;
  if (!v65)
  {
    LOBYTE(__src) = 0;
    sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 1, 1);
    v28 = v45;
    goto LABEL_54;
  }
  LOBYTE(__src) = 1;
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 1, 1);
  LODWORD(__src) = 2;
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 4, 4);
  v24 = __src;
  sub_2100B6A04(v40);
  v25 = HIBYTE(v54);
  if (v54 < 0)
    v25 = *((_QWORD *)&v53 + 1);
  *(_QWORD *)&__src = v25;
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 8, 8);
  if (SHIBYTE(v54) < 0)
  {
    v26 = *((_QWORD *)&v53 + 1);
    v27 = (char *)v53;
    if (!(_QWORD)v53 && *((_QWORD *)&v53 + 1))
    {
      if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2102CFEAE, 0, (void (*)(void **))sub_21023DDB0))
      {
        goto LABEL_67;
      }
      v27 = 0;
    }
  }
  else
  {
    v26 = HIBYTE(v54);
    v27 = (char *)&v53;
  }
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, v27, &v27[v26], v26);
  LODWORD(__src) = 2;
  sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 4, 4);
  sub_2100B6A04(v40);
  sub_20FF27940((uint64_t)v40, (uint64_t)v55);
  *(_QWORD *)((char *)v41 + *((_QWORD *)v45 - 1) + 10) = (_BYTE *)__dst - ((_BYTE *)v41 + *((_QWORD *)v45 - 1)) - 18;
  v45 -= 8;
  if (v24 >= 2)
  {
    if (v64)
    {
      LOBYTE(__src) = 1;
      sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 1, 1);
      v29 = HIBYTE(v63);
      if (v63 < 0)
        v29 = *((_QWORD *)&v62 + 1);
      *(_QWORD *)&__src = v29;
      sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 8, 8);
      if ((SHIBYTE(v63) & 0x80000000) == 0)
      {
        v30 = HIBYTE(v63);
LABEL_52:
        sub_2100B8FD4((uint64_t)&v41, (char *)__dst, v18, &v18[v30], v30);
        goto LABEL_53;
      }
      v30 = *((_QWORD *)&v62 + 1);
      v18 = (char *)v62;
      if ((_QWORD)v62 || !*((_QWORD *)&v62 + 1))
        goto LABEL_52;
      if (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2102CFEAE, 0, (void (*)(void **))sub_21023DDB0))
      {
        v18 = 0;
        goto LABEL_52;
      }
LABEL_67:
      abort();
    }
    LOBYTE(__src) = 0;
    sub_2100B8FD4((uint64_t)&v41, (char *)__dst, (char *)&__src, (char *)&__src + 1, 1);
  }
LABEL_53:
  *(_QWORD *)((char *)v41 + *((_QWORD *)v45 - 1) + 10) = (_BYTE *)__dst - ((_BYTE *)v41 + *((_QWORD *)v45 - 1)) - 18;
  v28 = v45 - 8;
  v45 -= 8;
LABEL_54:
  *(_QWORD *)((char *)v41 + *((_QWORD *)v28 - 1) + 10) = (_BYTE *)__dst - ((_BYTE *)v41 + *((_QWORD *)v28 - 1)) - 18;
  v45 -= 8;
  v31 = *(_QWORD *)(v3 + 112);
  if (!v31)
    goto LABEL_60;
  if (((*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v31 + 32))(v31, v40) & 1) == 0)
  {
    v33 = *(_QWORD *)(v3 + 112);
    *(_QWORD *)(v3 + 112) = 0;
    if (v33)
      (*(void (**)(uint64_t))(*(_QWORD *)v33 + 8))(v33);
LABEL_60:
    v32 = 0;
    if (!v65)
      goto LABEL_62;
    goto LABEL_61;
  }
  v32 = 1;
  if (v65)
LABEL_61:
    sub_20FF27818((uint64_t)&v53);
LABEL_62:
  if (__p)
  {
    v45 = (char *)__p;
    operator delete(__p);
  }
  if (v41)
  {
    __dst = v41;
    operator delete(v41);
  }
  return v32;
}

void sub_20FF27734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::__shared_weak_count *a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, ...)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v13;
  va_list va;

  va_start(va, a8);
  if (*(_BYTE *)(v10 - 104) && *(char *)(v10 - 105) < 0)
    operator delete(*(void **)(v10 - 128));
  sub_20FF07710(v9);
  if (*(char *)(v10 - 217) < 0)
    operator delete(*(void **)(v10 - 240));
  if (a8)
  {
    sub_20FF1C8E4(v8);
    if (a4)
    {
      p_shared_owners = (unint64_t *)&a4->__shared_owners_;
      do
        v13 = __ldaxr(p_shared_owners);
      while (__stlxr(v13 - 1, p_shared_owners));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))a4->__on_zero_shared)(a4);
        std::__shared_weak_count::__release_weak(a4);
      }
    }
  }
  sub_2100B68E8(va);
  _Unwind_Resume(a1);
}

__n128 sub_20FF277F8(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result;

  result = *a3;
  *a2 = *a3;
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  return result;
}

__n128 sub_20FF27808(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result;

  result = *a3;
  *a2 = *a3;
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  return result;
}

uint64_t sub_20FF27818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v10;

  if (*(_BYTE *)(a1 + 136) && *(char *)(a1 + 135) < 0)
    operator delete(*(void **)(a1 + 112));
  v2 = *(_QWORD *)(a1 + 88);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 96);
    v4 = *(void **)(a1 + 88);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 88);
    }
    *(_QWORD *)(a1 + 96) = v2;
    operator delete(v4);
  }
  v8 = *(unsigned int *)(a1 + 80);
  if ((_DWORD)v8 != -1)
    ((void (*)(char *, uint64_t))off_24CA0C750[v8])(&v10, a1 + 64);
  *(_DWORD *)(a1 + 80) = -1;
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
      return a1;
  }
  else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_20FF27940(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  _BOOL4 v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t __src;
  uint64_t v19;

  LODWORD(__src) = 2;
  v4 = a1 + 24;
  sub_2100B8FD4(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 4, 4);
  sub_2100B6A04((_QWORD *)a1);
  v5 = *(unsigned __int8 *)(a2 + 31);
  if ((v5 & 0x80u) != 0)
    v5 = *(_QWORD *)(a2 + 16);
  __src = v5;
  sub_2100B8FD4(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&v19, 8);
  if (*(char *)(a2 + 31) < 0)
  {
    v6 = *(char **)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    if (!v6)
    {
      if (v7)
      {
        v8 = sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_2102CFEAE, 0, (void (*)(void **))sub_21023DDB0);
        v6 = 0;
        if (v8)
          abort();
      }
    }
  }
  else
  {
    v6 = (char *)(a2 + 8);
    v7 = *(unsigned __int8 *)(a2 + 31);
  }
  sub_2100B8FD4(v4, *(char **)(a1 + 32), v6, &v6[v7], v7);
  sub_2100B8FD4(v4, *(char **)(a1 + 32), (char *)(a2 + 32), (char *)(a2 + 36), 4);
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a1 + 32) - v9 - 18;
  *(_QWORD *)(a1 + 56) -= 8;
  if (*(_DWORD *)(a2 + 56) > 1u)
    sub_20E877AB8();
  v11 = *(_QWORD *)(a2 + 40);
  v10 = *(std::__shared_weak_count **)(a2 + 48);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  LODWORD(__src) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
  sub_2100B8FD4(v4, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 4, 4);
  v15 = __src;
  sub_2100B6A04((_QWORD *)a1);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v11 + 32))(v11, a1, v15);
  v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v17 + 10) = *(_QWORD *)(a1 + 32) - v17 - 18;
  *(_QWORD *)(a1 + 56) -= 8;
  return result;
}

uint64_t sub_20FF27B58(uint64_t a1)
{
  char **v2;
  char *v3;
  char *v4;
  char *v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  std::__shared_weak_count *v21;

  *(_QWORD *)a1 = &off_24CA0C570;
  *(_QWORD *)(a1 + 16) = &unk_24CA0C5E8;
  *(_QWORD *)(a1 + 24) = &unk_24CA0C628;
  v2 = *(char ***)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)(v2 + 7));
    if (*((_BYTE *)v2 + 48))
    {
      v3 = *v2;
      if (*v2)
      {
        v4 = v2[1];
        v5 = *v2;
        if (v4 != v3)
        {
          do
          {
            v6 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
            if (v6)
            {
              p_shared_owners = (unint64_t *)&v6->__shared_owners_;
              do
                v8 = __ldaxr(p_shared_owners);
              while (__stlxr(v8 - 1, p_shared_owners));
              if (!v8)
              {
                ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
                std::__shared_weak_count::__release_weak(v6);
              }
            }
            v4 -= 16;
          }
          while (v4 != v3);
          v5 = *v2;
        }
        v2[1] = v3;
        operator delete(v5);
      }
    }
    MEMORY[0x212BC6398](v2, 0x1022C400958DFA3);
  }
  if (*(_QWORD *)(a1 + 136))
  {
    v10 = *(_QWORD *)(a1 + 120);
    v9 = *(uint64_t **)(a1 + 128);
    v11 = *v9;
    *(_QWORD *)(v11 + 8) = *(_QWORD *)(v10 + 8);
    **(_QWORD **)(v10 + 8) = v11;
    *(_QWORD *)(a1 + 136) = 0;
    if (v9 != (uint64_t *)(a1 + 120))
    {
      do
      {
        v12 = (uint64_t *)v9[1];
        operator delete(v9);
        v9 = v12;
      }
      while (v12 != (uint64_t *)(a1 + 120));
    }
  }
  if (*(_QWORD *)(a1 + 112))
  {
    v13 = *(_QWORD *)(a1 + 96);
    v14 = *(uint64_t **)(a1 + 104);
    v15 = *v14;
    *(_QWORD *)(v15 + 8) = *(_QWORD *)(v13 + 8);
    **(_QWORD **)(v13 + 8) = v15;
    *(_QWORD *)(a1 + 112) = 0;
    if (v14 != (uint64_t *)(a1 + 96))
    {
      do
      {
        v16 = (uint64_t *)v14[1];
        (*(void (**)(uint64_t *))v14[2])(v14 + 2);
        operator delete(v14);
        v14 = v16;
      }
      while (v16 != (uint64_t *)(a1 + 96));
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  v18 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v18)
    goto LABEL_27;
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldaxr(v19);
  while (__stlxr(v20 - 1, v19));
  if (v20)
  {
LABEL_27:
    if ((*(char *)(a1 + 71) & 0x80000000) == 0)
      goto LABEL_29;
    goto LABEL_28;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (*(char *)(a1 + 71) < 0)
LABEL_28:
    operator delete(*(void **)(a1 + 48));
LABEL_29:
  v21 = *(std::__shared_weak_count **)(a1 + 40);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  return a1;
}

_QWORD *sub_20FF27D58(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[3];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[3];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[1];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_20FF27E00(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0C780;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF27E10(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0C780;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF27E40(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = *(std::__shared_weak_count **)(a1 + 32);
    if (!v5)
      return;
  }
  else
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 32);
    if (!v5)
      return;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

_QWORD *sub_20FF27EE0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24CA0C7D0;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_20FF27F24(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24CA0C7D0;
  v2 = (std::__shared_weak_count *)a1[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF27F78(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;

  result = operator new(0x30uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24CA0C7D0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  return result;
}

_QWORD *sub_20FF27FE8(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24CA0C7D0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

void sub_20FF28038(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_20FF28074(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;

  v2 = (std::__shared_weak_count *)__p[4];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_20FF280AC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (v6)
  {
    v8 = a1[1];
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = 0;
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (v8)
  {
    if (v5)
    {
      LOBYTE(v20) = 0;
      v21 = 0;
      sub_20FF283D0((uint64_t *)(v8 + 88), v5, &v20);
      if (v21)
        sub_20EBF0C90(&v20);
    }
  }
  if (v3)
  {
    v13 = (unint64_t *)&v3->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v15 = (unint64_t *)&v7->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v18 = (unint64_t *)&v3->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_20FF28274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  unint64_t v19;

  if (a10)
    sub_20EBF0C90(&a9);
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (v11)
  {
    v15 = (unint64_t *)&v11->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    do
      v17 = __ldaxr(v15);
    while (__stlxr(v17 - 1, v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v10)
  {
    v18 = (unint64_t *)&v10->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF28358(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatc"
                     "hIZNKS6_4SendERKS5_EUlT_T0_E_EEvS9_SA_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessag"
                                "eAndDispatchIZNKS6_4SendERKS5_EUlT_T0_E_EEvS9_SA_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatchIZNKS6_4SendERKS5_EUlT_T0_E_EEvS9_SA_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatchIZNKS6_4SendERKS5_EUlT_T0_E_EEvS9_SA_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF283C4()
{
  return &unk_24CA0C830;
}

void sub_20FF283D0(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  BOOL v8;
  uint64_t v9;
  uint64_t i;
  unsigned __int8 v11;
  _QWORD *v12;
  _QWORD *j;
  uint64_t v14;
  uint64_t v15;
  std::exception_ptr v16;
  char v17;

  v6 = *a1;
  if (!v6)
  {
    sub_21023D70C("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 228, (uint64_t)"callable_", 9, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0);
    v7 = atomic_load((unsigned __int8 *)&qword_254A6DE78);
    if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_254A6DE78))
    {
      __cxa_atexit((void (*)(void *))sub_21023DF30, &qword_254A6DE40, &dword_20E81F000);
      __cxa_guard_release(&qword_254A6DE78);
    }
    if (byte_254A6DE68)
      v8 = byte_254A6DE70 == 0;
    else
      v8 = 0;
    if (!v8)
    {
      v9 = qword_254A6DE40;
      for (i = qword_254A6DE48; v9 != i; v9 += 16)
        (*(void (**)(_QWORD, const char *, uint64_t, const char *, _QWORD))v9)(*(_QWORD *)(v9 + 8), "callable_", 9, "", 0);
    }
    v11 = atomic_load((unsigned __int8 *)&qword_254A6DE78);
    if ((v11 & 1) == 0 && __cxa_guard_acquire(&qword_254A6DE78))
    {
      __cxa_atexit((void (*)(void *))sub_21023DF30, &qword_254A6DE40, &dword_20E81F000);
      __cxa_guard_release(&qword_254A6DE78);
    }
    if (!byte_254A6DE68)
      abort();
    qword_254A6DE58(unk_254A6DE60, "callable_", 9, "", 0);
    v6 = *a1;
  }
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 16))(v6, a2);
  v12 = a1 + 1;
  for (j = (_QWORD *)a1[2]; j != v12; j = (_QWORD *)j[1])
    (*(void (**)(_QWORD *, char *))(j[2] + 16))(j + 2, &v17);
  if (*((_BYTE *)a3 + 8))
  {
    v14 = *a3;
    if (!v14)
      sub_20E96CE78(3u);
    std::mutex::lock((std::mutex *)(v14 + 24));
    if ((*(_BYTE *)(v14 + 136) & 1) != 0
      || (v16.__ptr_ = 0, v15 = *(_QWORD *)(v14 + 16), std::exception_ptr::~exception_ptr(&v16), v15))
    {
      sub_20E96CE78(2u);
    }
    *(_BYTE *)(v14 + 140) = v17;
    *(_DWORD *)(v14 + 136) |= 5u;
    std::condition_variable::notify_all((std::condition_variable *)(v14 + 88));
    std::mutex::unlock((std::mutex *)(v14 + 24));
  }
}

void sub_20FF2863C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12, int a13, __int16 a14, char a15, unsigned __int8 a16)
{
  std::mutex *v16;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  std::mutex::unlock(v16);
  if (a2 == 1)
  {
    v19 = (uint64_t *)__cxa_begin_catch(a1);
    v20 = *v19;
    a10 = *(_QWORD *)(*(_QWORD *)(*v19 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL;
    a9 = (*(uint64_t (**)(void))(v20 + 16))();
    sub_20E9B0CC4("Caught unexpected exception of type: ", (const char *)&a10, "\n", "message: ", (const char *)&a9, "\n");
    if ((a16 & 0x80u) == 0)
      v21 = (uint64_t *)&a11;
    else
      v21 = a11;
    if ((a16 & 0x80u) == 0)
      v22 = a16;
    else
      v22 = a12;
    sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ProcessorInputMessageHandlingStrategy.h", 140, (uint64_t)"", 0, (uint64_t)v21, v22, (void (*)(void **))sub_21023DDB0);
    abort();
  }
  _Unwind_Resume(a1);
}

void sub_20FF28704(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
    operator delete(__p);
  __cxa_end_catch();
  JUMPOUT(0x20FF28724);
}

_QWORD *sub_20FF28730(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24CA0C850;
  v2 = (std::__shared_weak_count *)a1[7];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_20FF287E4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  *a1 = &off_24CA0C850;
  v2 = (std::__shared_weak_count *)a1[7];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF288A8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  result = operator new(0x40uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24CA0C850;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v11 = a1[6];
  v10 = a1[7];
  result[5] = &off_24CA0C0E8;
  result[6] = v11;
  result[7] = v10;
  if (v10)
  {
    v12 = (unint64_t *)(v10 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  return result;
}

_QWORD *sub_20FF28944(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24CA0C850;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v10 = result[6];
  v9 = result[7];
  a2[5] = &off_24CA0C0E8;
  a2[6] = v10;
  a2[7] = v9;
  if (v9)
  {
    v11 = (unint64_t *)(v9 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

void sub_20FF289C0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)a1[7];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
}

void sub_20FF28A6C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  v2 = (std::__shared_weak_count *)__p[7];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)__p[2];
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  operator delete(__p);
}

void sub_20FF28B14(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        LOBYTE(v8) = 0;
        v9 = 0;
        sub_20FF283D0((uint64_t *)(v5 + 88), a1 + 24, &v8);
        if (v9)
          sub_20EBF0C90(&v8);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_20FF28BBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v13;

  if (a10)
    sub_20EBF0C90(&a9);
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF28C08(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE4SendERKS5_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE4SendERKS5_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE4SendERKS5_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE4SendERKS5_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF28C74()
{
  return &unk_24CA0C8B0;
}

_QWORD *sub_20FF28C80(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;

  v2 = (std::__shared_weak_count *)a1[8];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[6];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[6];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[3];
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      v11 = (std::__shared_weak_count *)a1[1];
      if (!v11)
        return a1;
      goto LABEL_16;
    }
  }
  v11 = (std::__shared_weak_count *)a1[1];
  if (v11)
LABEL_16:
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

_QWORD *sub_20FF28D6C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24CA0C8D0;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_20FF28DF4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  *a1 = &off_24CA0C8D0;
  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
    {
LABEL_7:
      v6 = (std::__shared_weak_count *)a1[2];
      if (v6)
        std::__shared_weak_count::__release_weak(v6);
      JUMPOUT(0x212BC6398);
    }
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
  }
  std::__shared_weak_count::__release_weak(v5);
  goto LABEL_7;
}

_QWORD *sub_20FF28E8C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;

  result = operator new(0x38uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24CA0C8D0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = a1[6];
  result[5] = a1[5];
  result[6] = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  return result;
}

_QWORD *sub_20FF28F1C(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24CA0C8D0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v9 = result[6];
  a2[5] = result[5];
  a2[6] = v9;
  if (v9)
  {
    v10 = (unint64_t *)(v9 + 8);
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  return result;
}

void sub_20FF28F8C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)a1[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)a1[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)a1[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

void sub_20FF2900C(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = (std::__shared_weak_count *)__p[6];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[4];
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = (std::__shared_weak_count *)__p[4];
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = (std::__shared_weak_count *)__p[2];
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  operator delete(__p);
}

void sub_20FF29088(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  std::runtime_error_vtbl **v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  std::runtime_error *exception;
  std::runtime_error *v23;
  std::runtime_error *v24;
  std::runtime_error *v25;
  std::runtime_error v26;
  std::runtime_error v27;

  v2 = (std::__shared_weak_count *)a1[4];
  if (!v2)
  {
    v3 = 0;
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
LABEL_11:
    v7 = 0;
    v8 = 0;
    goto LABEL_12;
  }
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
  {
    v5 = 0;
    v4 = (std::__shared_weak_count *)a1[2];
    if (v4)
      goto LABEL_6;
    goto LABEL_11;
  }
  v4 = (std::__shared_weak_count *)a1[2];
  v5 = a1[3];
  if (!v4)
    goto LABEL_11;
LABEL_6:
  v6 = std::__shared_weak_count::lock(v4);
  v7 = v6;
  if (!v6)
  {
    v8 = 0;
    if (!v3)
      goto LABEL_15;
    goto LABEL_13;
  }
  v8 = a1[1];
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_12:
  if (!v3)
    goto LABEL_15;
LABEL_13:
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldxr(v11);
  while (__stxr(v12 + 1, v11));
LABEL_15:
  if (!v8)
  {
    std::runtime_error::runtime_error(&v27, "Processor is no longer available.");
    v27.__vftable = (std::runtime_error_vtbl *)&off_24CA1E2B8;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v23 = std::runtime_error::runtime_error(exception, &v27);
    v23->__vftable = (std::runtime_error_vtbl *)&off_24CA1E2B8;
    __cxa_throw(v23, (struct type_info *)&unk_24CA1E2D0, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  if (!v5)
  {
    std::runtime_error::runtime_error(&v26, "Message was dropped.");
    v26.__vftable = (std::runtime_error_vtbl *)&off_24CA1E2B8;
    v24 = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v25 = std::runtime_error::runtime_error(v24, &v26);
    v25->__vftable = (std::runtime_error_vtbl *)&off_24CA1E2B8;
    __cxa_throw(v25, (struct type_info *)&unk_24CA1E2D0, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v13 = (uint64_t *)(v8 + 88);
  v14 = (std::runtime_error_vtbl **)a1[5];
  v26.__vftable = *v14;
  *v14 = 0;
  LOBYTE(v26.__imp_.__imp_) = 1;
  sub_20FF283D0(v13, v5, (uint64_t *)&v26);
  if (LOBYTE(v26.__imp_.__imp_))
    sub_20EBF0C90((uint64_t *)&v26);
  if (v3)
  {
    v15 = (unint64_t *)&v3->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (v7)
  {
    v17 = (unint64_t *)&v7->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  if (v3)
  {
    v20 = (unint64_t *)&v3->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_20FF29364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, std::runtime_error a13, std::exception_ptr a14)
{
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;

  std::exception_ptr::~exception_ptr(&a14);
  std::runtime_error::~runtime_error(&a13);
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (v15)
  {
    v19 = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v14)
  {
    v22 = (unint64_t *)&v14->__shared_owners_;
    do
      v23 = __ldaxr(v22);
    while (__stlxr(v23 - 1, v22));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20FF29390(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  uint64_t v15;
  std::__assoc_sub_state **v16;
  std::__assoc_sub_state *v17;
  std::exception_ptr v18;

  __cxa_begin_catch(a1);
  std::current_exception();
  __cxa_end_catch();
  v17 = *v16;
  if (v17)
  {
    std::exception_ptr::exception_ptr(&a15, &a11);
    v18.__ptr_ = &a15;
    std::__assoc_sub_state::set_exception(v17, v18);
    std::exception_ptr::~exception_ptr(&a15);
    std::exception_ptr::~exception_ptr(&a11);
    std::runtime_error::~runtime_error(&a10);
    if (!v15)
      JUMPOUT(0x20FF2919CLL);
    JUMPOUT(0x20FF2916CLL);
  }
  sub_20E96CE78(3u);
}

void sub_20FF293EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
  std::__shared_weak_count *v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;

  std::exception_ptr::~exception_ptr(&a11);
  std::runtime_error::~runtime_error(&a10);
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (v16)
  {
    v20 = (unint64_t *)&v16->__shared_owners_;
    do
      v21 = __ldaxr(v20);
    while (__stlxr(v21 - 1, v20));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    do
      v22 = __ldaxr(v20);
    while (__stlxr(v22 - 1, v20));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (v15)
  {
    v23 = (unint64_t *)&v15->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  _Unwind_Resume(a1);
}

void sub_20FF29418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  if (a11)
    sub_20EBF0C90(&a10);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  if (v12)
  {
    v16 = (unint64_t *)&v12->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    do
      v18 = __ldaxr(v16);
    while (__stlxr(v18 - 1, v16));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (v11)
  {
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20FF29504(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatc"
                     "hIZNKS6_7ProcessERKS5_NSt3__17promiseIbEEEUlT_T0_E_EEvS9_SD_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessag"
                                "eAndDispatchIZNKS6_7ProcessERKS5_NSt3__17promiseIbEEEUlT_T0_E_EEvS9_SD_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatchIZNKS6_7ProcessERKS5_NSt3__17promiseIbEEEUlT_T0_E_EEvS9_SD_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE25EnqueueMessageAndDispatchIZNKS6_7ProcessERKS5_NSt3__17promiseIbEEEUlT_T0_E_EEvS9_SD_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF29570()
{
  return &unk_24CA0C930;
}

_QWORD *sub_20FF2957C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24CA0C950;
  v2 = (std::__shared_weak_count *)a1[9];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[7];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[7];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[4];
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      v11 = (std::__shared_weak_count *)a1[2];
      if (!v11)
        return a1;
      goto LABEL_16;
    }
  }
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
LABEL_16:
    std::__shared_weak_count::__release_weak(v11);
  return a1;
}

void sub_20FF29674(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;

  *a1 = &off_24CA0C950;
  v2 = (std::__shared_weak_count *)a1[9];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[7];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[7];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[4];
  if (!v8)
    goto LABEL_15;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    v11 = (std::__shared_weak_count *)a1[2];
    if (!v11)
      goto LABEL_19;
  }
  else
  {
LABEL_15:
    v11 = (std::__shared_weak_count *)a1[2];
    if (!v11)
      goto LABEL_19;
  }
  std::__shared_weak_count::__release_weak(v11);
LABEL_19:
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF2977C(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;

  result = operator new(0x50uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24CA0C950;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = a1[4];
  result[3] = a1[3];
  result[4] = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 8);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v11 = a1[6];
  v10 = a1[7];
  result[5] = &off_24CA0C0E8;
  result[6] = v11;
  result[7] = v10;
  if (v10)
  {
    v12 = (unint64_t *)(v10 + 8);
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
  }
  v14 = a1[9];
  result[8] = a1[8];
  result[9] = v14;
  if (v14)
  {
    v15 = (unint64_t *)(v14 + 8);
    do
      v16 = __ldxr(v15);
    while (__stxr(v16 + 1, v15));
  }
  return result;
}

_QWORD *sub_20FF29838(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24CA0C950;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  v6 = result[4];
  a2[3] = result[3];
  a2[4] = v6;
  if (v6)
  {
    v7 = (unint64_t *)(v6 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v10 = result[6];
  v9 = result[7];
  a2[5] = &off_24CA0C0E8;
  a2[6] = v10;
  a2[7] = v9;
  if (v9)
  {
    v11 = (unint64_t *)(v9 + 8);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = result[9];
  a2[8] = result[8];
  a2[9] = v13;
  if (v13)
  {
    v14 = (unint64_t *)(v13 + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  return result;
}

void sub_20FF298D4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;

  v2 = (std::__shared_weak_count *)a1[9];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)a1[7];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)a1[7];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)a1[4];
  if (!v8)
    goto LABEL_15;
  v9 = (unint64_t *)&v8->__shared_owners_;
  do
    v10 = __ldaxr(v9);
  while (__stlxr(v10 - 1, v9));
  if (v10)
  {
LABEL_15:
    v11 = (std::__shared_weak_count *)a1[2];
    if (!v11)
      return;
    goto LABEL_16;
  }
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  v11 = (std::__shared_weak_count *)a1[2];
  if (v11)
LABEL_16:
    std::__shared_weak_count::__release_weak(v11);
}

void sub_20FF299C0(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;

  v2 = (std::__shared_weak_count *)__p[9];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    v5 = (std::__shared_weak_count *)__p[7];
    if (!v5)
      goto LABEL_11;
  }
  else
  {
LABEL_5:
    v5 = (std::__shared_weak_count *)__p[7];
    if (!v5)
      goto LABEL_11;
  }
  v6 = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(v6);
  while (__stlxr(v7 - 1, v6));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_11:
  v8 = (std::__shared_weak_count *)__p[4];
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      v11 = (std::__shared_weak_count *)__p[2];
      if (!v11)
        goto LABEL_17;
      goto LABEL_16;
    }
  }
  v11 = (std::__shared_weak_count *)__p[2];
  if (v11)
LABEL_16:
    std::__shared_weak_count::__release_weak(v11);
LABEL_17:
  operator delete(__p);
}

void sub_20FF29AAC(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  uint64_t v4;
  std::runtime_error_vtbl **v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::runtime_error *exception;
  std::runtime_error *v9;
  std::runtime_error v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2 || (v3 = std::__shared_weak_count::lock(v2)) == 0 || (v4 = a1[1]) == 0)
  {
    std::runtime_error::runtime_error(&v10, "Invalid operation. Processor is released.");
    v10.__vftable = (std::runtime_error_vtbl *)&off_24CA1E2B8;
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    v9 = std::runtime_error::runtime_error(exception, &v10);
    v9->__vftable = (std::runtime_error_vtbl *)&off_24CA1E2B8;
    __cxa_throw(v9, (struct type_info *)&unk_24CA1E2D0, (void (*)(void *))std::runtime_error::~runtime_error);
  }
  v5 = (std::runtime_error_vtbl **)a1[8];
  v10.__vftable = *v5;
  *v5 = 0;
  LOBYTE(v10.__imp_.__imp_) = 1;
  sub_20FF283D0((uint64_t *)(v4 + 88), (uint64_t)(a1 + 3), (uint64_t *)&v10);
  if (LOBYTE(v10.__imp_.__imp_))
    sub_20EBF0C90((uint64_t *)&v10);
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_20FF29BBC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  __break(1u);
}

void sub_20FF29C34(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, std::exception_ptr a11)
{
  uint64_t v11;

  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  std::runtime_error::~runtime_error(&a10);
  if (v11)
    JUMPOUT(0x20FF29C68);
  JUMPOUT(0x20FF29C98);
}

uint64_t sub_20FF29CA0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE7ProcessERKS5_NSt3__17promiseIbEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE7ProcessERKS5_N"
                                "St3__17promiseIbEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE7ProcessERKS5_NSt3__17promiseIbEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE7ProcessERKS5_NSt3__17promiseIbEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF29D0C()
{
  return &unk_24CA0C9B0;
}

_QWORD *sub_20FF29D18(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24CA0C9D0;
  v2 = a1[4];
  a1[3] = &off_24C9B2630;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_20FF29D70(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  *a1 = &off_24CA0C9D0;
  v2 = a1[4];
  a1[3] = &off_24C9B2630;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF29DD8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = operator new(0x28uLL);
  v3 = v2;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  *v2 = &off_24CA0C9D0;
  v2[1] = v5;
  v2[2] = v4;
  if (v4)
  {
    v6 = (unint64_t *)(v4 + 16);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v2[3] = &off_24C9B2630;
  (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
  return v3;
}

void sub_20FF29E50(_Unwind_Exception *a1)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;

  v3 = (std::__shared_weak_count *)v1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF29E70(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  *a2 = &off_24CA0C9D0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = &off_24C9B2630;
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32));
}

void sub_20FF29ED8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  std::__shared_weak_count *v3;

  v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  _Unwind_Resume(exception_object);
}

void sub_20FF29EF0(_QWORD *a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1[4];
  a1[3] = &off_24C9B2630;
  a1[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)a1[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void sub_20FF29F40(_QWORD *__p)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = __p[4];
  __p[3] = &off_24C9B2630;
  __p[4] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  v3 = (std::__shared_weak_count *)__p[2];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  operator delete(__p);
}

void sub_20FF29F8C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (v5)
      {
        v6 = operator new(0x20uLL);
        v7 = a1[4];
        a1[4] = 0;
        v6[2] = &off_24C9B2630;
        v6[3] = v7;
        v9 = *(_QWORD *)(v5 + 96);
        v8 = (_QWORD *)(v5 + 96);
        *v6 = v9;
        v6[1] = v8;
        *(_QWORD *)(v9 + 8) = v6;
        *v8 = v6;
        ++v8[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v11 = __ldaxr(p_shared_owners);
      while (__stlxr(v11 - 1, p_shared_owners));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_20FF2A040(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF2A07C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE9SubscribeENS1_12ChannelInputIbEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE9SubscribeENS1_1"
                                "2ChannelInputIbEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE9SubscribeENS1_12ChannelInputIbEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE9SubscribeENS1_12ChannelInputIbEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF2A0E8()
{
  return &unk_24CA0CA30;
}

_QWORD *sub_20FF2A0F4(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24CA0CA50;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20FF2A12C(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24CA0CA50;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF2A174(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *result = &off_24CA0CA50;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  return result;
}

uint64_t sub_20FF2A1C4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = *(_QWORD *)(result + 8);
  v2 = *(_QWORD *)(result + 16);
  *a2 = &off_24CA0CA50;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  return result;
}

void sub_20FF2A1F4(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_20FF2A204(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_20FF2A230(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
      {
        v6 = operator new(0x18uLL);
        v8 = *(_QWORD *)(v5 + 120);
        v7 = (_QWORD *)(v5 + 120);
        *v6 = v8;
        v6[1] = v7;
        *(_QWORD *)(v8 + 8) = v6;
        *v7 = v6;
        ++v7[2];
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_20FF2A2C4(_Unwind_Exception *exception_object)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v4;

  p_shared_owners = (unint64_t *)&v1->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF2A300(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15AddErrorHandlerENS1_12Cha"
                     "nnelInputIvEEEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15AddErrorHandle"
                                "rENS1_12ChannelInputIvEEEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15AddErrorHandlerENS1_12ChannelInputIvEEEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF2A36C()
{
  return &unk_24CA0CAB0;
}

_QWORD *sub_20FF2A378(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24CA0CAD0;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20FF2A3B0(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24CA0CAD0;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF2A3F8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24CA0CAD0;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_20FF2A450(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24CA0CAD0;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_20FF2A488(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_20FF2A498(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_20FF2A4C4(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p[2];
  char *v16;
  __int128 v17;
  char *v18;
  uint64_t v19;
  __int128 *v20;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = a1[1];
      if (!v5)
      {
LABEL_11:
        p_shared_owners = (unint64_t *)&v4->__shared_owners_;
        do
          v14 = __ldaxr(p_shared_owners);
        while (__stlxr(v14 - 1, p_shared_owners));
        if (!v14)
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
        return;
      }
      v6 = (uint64_t *)a1[3];
      v7 = *(_QWORD *)(v5 + 112);
      v18 = 0;
      v17 = 0uLL;
      if (v7)
      {
        if (v7 >> 61)
          sub_20E92CED8();
        v8 = (char *)operator new(8 * v7);
        v9 = &v8[8 * v7];
        *(_QWORD *)&v17 = v8;
        *((_QWORD *)&v17 + 1) = v8;
        v18 = v9;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
        {
          do
          {
LABEL_7:
            v19 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v11 + 24) + 48))(*(_QWORD *)(v11 + 24));
            sub_20E9B2D04((uint64_t *)&v20, &v19);
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11 != v10);
          *(_OWORD *)__p = v17;
          v16 = v18;
          v12 = *v6;
          if (*v6)
            goto LABEL_9;
          goto LABEL_18;
        }
      }
      else
      {
        v9 = 0;
        v8 = 0;
        v10 = v5 + 96;
        v11 = *(_QWORD *)(v5 + 104);
        v20 = &v17;
        if (v11 != v10)
          goto LABEL_7;
      }
      *(int64x2_t *)__p = vdupq_n_s64((unint64_t)v8);
      v16 = v9;
      v12 = *v6;
      if (*v6)
      {
LABEL_9:
        sub_20EA04C5C(v12, (uint64_t)__p);
        if (__p[0])
        {
          __p[1] = __p[0];
          operator delete(__p[0]);
        }
        goto LABEL_11;
      }
LABEL_18:
      sub_20E96CE78(3u);
    }
  }
}

void sub_20FF2A640(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v17;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v14->__shared_owners_;
  do
    v17 = __ldaxr(p_shared_owners);
  while (__stlxr(v17 - 1, p_shared_owners));
  if (!v17)
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF2A6B0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE16OutputHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE16OutputHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE16OutputHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE16OutputHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF2A71C()
{
  return &unk_24CA0CB30;
}

_QWORD *sub_20FF2A728(_QWORD *a1)
{
  std::__shared_weak_count *v2;

  *a1 = &off_24CA0CB50;
  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20FF2A760(_QWORD *a1)
{
  std::__shared_weak_count *v1;

  *a1 = &off_24CA0CB50;
  v1 = (std::__shared_weak_count *)a1[2];
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF2A7A8(_QWORD *a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;

  result = operator new(0x20uLL);
  v4 = a1[1];
  v3 = a1[2];
  *result = &off_24CA0CB50;
  result[1] = v4;
  result[2] = v3;
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 16);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  result[3] = a1[3];
  return result;
}

_QWORD *sub_20FF2A800(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;

  v3 = result[1];
  v2 = result[2];
  *a2 = &off_24CA0CB50;
  a2[1] = v3;
  a2[2] = v2;
  if (v2)
  {
    v4 = (unint64_t *)(v2 + 16);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  a2[3] = result[3];
  return result;
}

void sub_20FF2A838(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void sub_20FF2A848(_QWORD *__p)
{
  std::__shared_weak_count *v2;

  v2 = (std::__shared_weak_count *)__p[2];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  operator delete(__p);
}

void sub_20FF2A874(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *__p;
  void *v9;
  uint64_t v10;

  v2 = (std::__shared_weak_count *)a1[2];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[1])
      {
        v5 = (uint64_t *)a1[3];
        __p = 0;
        v9 = 0;
        v10 = 0;
        if (!*v5)
          sub_20E96CE78(3u);
        sub_20EA04C5C(*v5, (uint64_t)&__p);
        if (__p)
        {
          v9 = __p;
          operator delete(__p);
        }
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_20FF2A92C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (__p)
    operator delete(__p);
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v14 = __ldaxr(p_shared_owners);
  while (__stlxr(v14 - 1, p_shared_owners));
  if (!v14)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF2A978(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15ErrorHandlerIDsEvEUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15ErrorHandlerIDsEvEUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK4cv3d3kit11concurrency6detail9ProcessorINS0_3viz11ContextDataEbvbLb0EE15ErrorHandlerIDsEvEUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF2A9E4()
{
  return &unk_24CA0CBB0;
}

void sub_20FF2A9F4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF2AA18(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_20FF2AA30(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS2_3viz11ContextDataEbvbLb0EEEE27__sh"
                     "ared_ptr_default_deleteIS8_S8_EE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS2_3viz11ContextDataEbvbLb"
                                "0EEEE27__shared_ptr_default_deleteIS8_S8_EE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS2_3viz11ContextDataEbvbLb0EEEE27__shared_ptr_default_deleteIS8_S8_EE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__110shared_ptrIN4cv3d3kit11concurrency6detail9ProcessorINS2_3viz11ContextDataEbvbLb0EEEE27__shared_ptr_default_deleteIS8_S8_EE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF2AAA0(uint64_t a1)
{
  std::__shared_weak_count *v2;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_20FF2AACC(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF2AB08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  result = (_QWORD *)operator new();
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  *result = &off_24CA0CC20;
  result[1] = v6;
  result[2] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 16);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  *a2 = result;
  return result;
}

void sub_20FF2AB70(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_20FF2AC00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF2AC14(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      v5 = *(_QWORD *)(a1 + 8);
      if (v5)
        (*(void (**)(uint64_t))(*(_QWORD *)v5 + 40))(v5);
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v7 = __ldaxr(p_shared_owners);
      while (__stlxr(v7 - 1, p_shared_owners));
      if (!v7)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_20FF2ACA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF2ACB8(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 48))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_20FF2AD7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF2AD90(uint64_t a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return 0;
  v3 = std::__shared_weak_count::lock(v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 8);
  if (v5)
    v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 24))(v5);
  else
    v6 = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (v9)
    return v6;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return v6;
}

void sub_20FF2AE54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF2AE68(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  uint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)(a1 + 8);
      if (v7)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 16))(v7, a2);
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_20FF2AF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF2AF20(uint64_t a1)
{
  _QWORD *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_weak_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  std::__shared_weak_count *v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;

  *(_QWORD *)a1 = &off_24CA0C508;
  v2 = (_QWORD *)(a1 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    v3 = *(std::__shared_weak_count **)(a1 + 80);
    if (v3)
    {
      p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
      do
        v5 = __ldxr(p_shared_weak_owners);
      while (__stxr(v5 + 1, p_shared_weak_owners));
      v6 = *(std::__shared_weak_count **)(a1 + 80);
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
      if (v6)
      {
        p_shared_owners = (unint64_t *)&v6->__shared_owners_;
        do
          v8 = __ldaxr(p_shared_owners);
        while (__stlxr(v8 - 1, p_shared_owners));
        if (!v8)
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
      }
      while (v3->__shared_owners_ != -1)
        sched_yield();
    }
    else
    {
      *v2 = 0;
      *(_QWORD *)(a1 + 80) = 0;
    }
    v9 = *(uint64_t **)(a1 + 56);
    if (v9)
      sub_210217048(*v9);
    if (v3)
      std::__shared_weak_count::__release_weak(v3);
  }
  *(_QWORD *)(a1 + 144) = &off_24C9B2310;
  v10 = *(std::__shared_weak_count **)(a1 + 160);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  *(_QWORD *)(a1 + 120) = &off_24C9CC9A0;
  v11 = *(std::__shared_weak_count **)(a1 + 136);
  if (v11)
    std::__shared_weak_count::__release_weak(v11);
  v12 = *(std::__shared_weak_count **)(a1 + 112);
  if (v12)
    std::__shared_weak_count::__release_weak(v12);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24CA0C538;
  *(_QWORD *)(a1 + 96) = 0;
  if (v13)
    (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  v14 = *(std::__shared_weak_count **)(a1 + 80);
  if (v14)
  {
    v15 = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  v17 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v17)
    goto LABEL_34;
  v18 = (unint64_t *)&v17->__shared_owners_;
  do
    v19 = __ldaxr(v18);
  while (__stlxr(v19 - 1, v18));
  if (v19)
  {
LABEL_34:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_35;
LABEL_38:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_39;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_38;
LABEL_35:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_39:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_20FF2B104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;

  *(_QWORD *)a1 = &off_24CA0C4D8;
  v2 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = 0;
  if (v2)
  {
    v3 = sub_20FF2AF20(v2);
    MEMORY[0x212BC6398](v3, 0x10B2C4085F70915);
  }
  v4 = *(std::__shared_weak_count **)(a1 + 64);
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      v7 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 72) = 0;
      if (!v7)
        goto LABEL_9;
      goto LABEL_8;
    }
  }
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = 0;
  if (v7)
  {
LABEL_8:
    v8 = sub_20FF2AF20(v7);
    MEMORY[0x212BC6398](v8, 0x10B2C4085F70915);
  }
LABEL_9:
  v9 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v9)
    goto LABEL_13;
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldaxr(v10);
  while (__stlxr(v11 - 1, v10));
  if (v11)
  {
LABEL_13:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0)
      goto LABEL_14;
LABEL_19:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0)
      return a1;
    goto LABEL_20;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (*(char *)(a1 + 55) < 0)
    goto LABEL_19;
LABEL_14:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_20:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

_QWORD *sub_20FF2B23C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v3 = *a2;
  v4 = a2[1];
  v5 = v4 - *a2;
  if (v4 != *a2)
  {
    v6 = 0xAAAAAAAAAAAAAAABLL * (v5 >> 3);
    if (v6 >= 0xAAAAAAAAAAAAAABLL)
      sub_20E867F44();
    v7 = operator new(v5);
    *a1 = v7;
    a1[1] = v7;
    a1[2] = &v7[3 * v6];
    do
    {
      v9 = *(_QWORD *)(v3 + 8);
      v8 = *(_QWORD *)(v3 + 16);
      *v7 = &off_24CA0C0E8;
      v7[1] = v9;
      v7[2] = v8;
      if (v8)
      {
        v10 = (unint64_t *)(v8 + 8);
        do
          v11 = __ldxr(v10);
        while (__stxr(v11 + 1, v10));
      }
      v3 += 24;
      v7 += 3;
    }
    while (v3 != v4);
    a1[1] = v7;
  }
  return a1;
}

void sub_20FF2B304(_Unwind_Exception *exception_object)
{
  void **v1;
  void *v3;
  uint64_t v4;
  void *v5;

  v3 = *v1;
  if (*v1)
  {
    v4 = (uint64_t)v1[1];
    v5 = *v1;
    if ((void *)v4 != v3)
    {
      do
        v4 = sub_20FF1C8E4(v4 - 24);
      while ((void *)v4 != v3);
      v5 = *v1;
    }
    v1[1] = v3;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

double sub_20FF2B348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  std::__shared_weak_count *v28;
  unint64_t *p_shared_owners;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  uint64_t *v38;
  __int128 v39;
  double result;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char v45;
  _BYTE v46[32];
  __int128 v47;
  unsigned int v48;
  void *__p[2];
  uint64_t v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a2 + 24))
  {
    v2 = *(_QWORD *)a2;
    v3 = *(_QWORD *)(a2 + 8);
    if (v3 != *(_QWORD *)a2)
    {
      if (0xAAAAAAAAAAAAAAABLL * ((v3 - *(_QWORD *)a2) >> 3) > 0x2E8BA2E8BA2E8BALL)
        sub_20E867F44();
      v4 = 0xAAAAAAAAAAAAAAC8 * ((v3 - *(_QWORD *)a2) >> 3);
      v5 = (char *)operator new(v4);
      v6 = &v5[v4];
      v7 = v5;
      v42 = v3;
      while (1)
      {
        v8 = sub_20FDD7854(0);
        sub_20FDD72D4((uint64_t)v46, v2, (uint64_t)v8);
        if (v7 < v6)
        {
          v9 = *(_OWORD *)&v46[8];
          v10 = *(_QWORD *)&v46[24];
          v7[40] = 0;
          *((_QWORD *)v7 + 3) = v10;
          *(_OWORD *)(v7 + 8) = v9;
          memset(&v46[8], 0, 24);
          *((_DWORD *)v7 + 8) = v47;
          *((_DWORD *)v7 + 14) = -1;
          v11 = v48;
          if (v48 != -1)
          {
            ((void (*)(char *))off_24CA0C760[v48])(&v45);
            *((_DWORD *)v7 + 14) = v11;
          }
          *((_QWORD *)v7 + 8) = 0;
          *((_QWORD *)v7 + 9) = 0;
          *((_QWORD *)v7 + 10) = 0;
          *((_OWORD *)v7 + 4) = *(_OWORD *)__p;
          *((_QWORD *)v7 + 10) = v50;
          __p[0] = 0;
          __p[1] = 0;
          v50 = 0;
          v7 += 88;
          v12 = v48;
          if (v48 == -1)
            goto LABEL_63;
          goto LABEL_62;
        }
        v13 = 0x2E8BA2E8BA2E8BA3 * ((v7 - v5) >> 3) + 1;
        if (v13 > 0x2E8BA2E8BA2E8BALL)
          sub_20E867F44();
        if (0x5D1745D1745D1746 * ((v6 - v5) >> 3) > v13)
          v13 = 0x5D1745D1745D1746 * ((v6 - v5) >> 3);
        if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * ((v6 - v5) >> 3)) >= 0x1745D1745D1745DLL)
          v14 = 0x2E8BA2E8BA2E8BALL;
        else
          v14 = v13;
        v44 = v14;
        if (v14)
        {
          if (v14 > 0x2E8BA2E8BA2E8BALL)
            sub_20E877A38();
          v15 = (char *)operator new(88 * v14);
        }
        else
        {
          v15 = 0;
        }
        v16 = &v15[8 * ((v7 - v5) >> 3)];
        *(_OWORD *)(v16 + 8) = *(_OWORD *)&v46[8];
        *((_QWORD *)v16 + 3) = *(_QWORD *)&v46[24];
        memset(&v46[8], 0, 24);
        v17 = v48;
        *((_DWORD *)v16 + 8) = v47;
        v16[40] = 0;
        *((_DWORD *)v16 + 14) = -1;
        if ((_DWORD)v17 != -1)
        {
          ((void (*)(char *, char *, char *))off_24CA0C760[v17])(&v45, v16 + 40, (char *)&v47 + 8);
          *((_DWORD *)v16 + 14) = v17;
        }
        v18 = &v15[8 * ((v7 - v5) >> 3)];
        *((_OWORD *)v18 + 4) = *(_OWORD *)__p;
        *((_QWORD *)v18 + 10) = v50;
        __p[1] = 0;
        v50 = 0;
        __p[0] = 0;
        if (v7 == v5)
        {
          v43 = &v15[8 * ((v7 - v5) >> 3)];
          if (v5)
            goto LABEL_46;
        }
        else
        {
          v19 = 0;
          do
          {
            v20 = &v16[v19];
            v21 = &v7[v19];
            v22 = *(_OWORD *)&v7[v19 - 80];
            *((_QWORD *)v20 - 8) = *(_QWORD *)&v7[v19 - 64];
            *((_OWORD *)v20 - 5) = v22;
            *((_QWORD *)v21 - 9) = 0;
            *((_QWORD *)v21 - 8) = 0;
            *((_QWORD *)v21 - 10) = 0;
            *((_DWORD *)v20 - 14) = *(_DWORD *)&v7[v19 - 56];
            v16[v19 - 48] = 0;
            v23 = (uint64_t)&v16[v19 - 48];
            *((_DWORD *)v20 - 8) = -1;
            v24 = *(unsigned int *)&v7[v19 - 32];
            if ((_DWORD)v24 != -1)
            {
              ((void (*)(char *, uint64_t, char *))off_24CA0C760[v24])(&v45, v23, v21 - 48);
              *((_DWORD *)v20 - 8) = v24;
            }
            *((_QWORD *)v20 - 3) = 0;
            *((_QWORD *)v20 - 2) = 0;
            *((_QWORD *)v20 - 1) = 0;
            *(_OWORD *)(v20 - 24) = *(_OWORD *)(v21 - 24);
            *((_QWORD *)v20 - 1) = *((_QWORD *)v21 - 1);
            *((_QWORD *)v21 - 3) = 0;
            *((_QWORD *)v21 - 2) = 0;
            *((_QWORD *)v21 - 1) = 0;
            v19 -= 88;
          }
          while (&v7[v19] != v5);
          v43 = &v16[v19];
          do
          {
            v25 = *((_QWORD *)v7 - 3);
            if (v25)
            {
              v26 = *((_QWORD *)v7 - 2);
              v27 = (void *)*((_QWORD *)v7 - 3);
              if (v26 != v25)
              {
                do
                {
                  v28 = *(std::__shared_weak_count **)(v26 - 8);
                  if (v28)
                  {
                    p_shared_owners = (unint64_t *)&v28->__shared_owners_;
                    do
                      v30 = __ldaxr(p_shared_owners);
                    while (__stlxr(v30 - 1, p_shared_owners));
                    if (!v30)
                    {
                      ((void (*)(std::__shared_weak_count *, uint64_t))v28->__on_zero_shared)(v28, v23);
                      std::__shared_weak_count::__release_weak(v28);
                    }
                  }
                  v26 -= 16;
                }
                while (v26 != v25);
                v27 = (void *)*((_QWORD *)v7 - 3);
              }
              *((_QWORD *)v7 - 2) = v25;
              operator delete(v27);
            }
            v31 = *((unsigned int *)v7 - 8);
            if ((_DWORD)v31 != -1)
              ((void (*)(char *, char *))off_24CA0C750[v31])(&v45, v7 - 48);
            *((_DWORD *)v7 - 8) = -1;
            if (*(v7 - 57) < 0)
              operator delete(*((void **)v7 - 10));
            v7 -= 88;
          }
          while (v7 != v5);
          if (v5)
LABEL_46:
            operator delete(v5);
        }
        v6 = &v15[88 * v44];
        v7 = v16 + 88;
        v32 = (char *)__p[0];
        if (__p[0])
        {
          v33 = (char *)__p[1];
          v34 = __p[0];
          if (__p[1] != __p[0])
          {
            do
            {
              v35 = (std::__shared_weak_count *)*((_QWORD *)v33 - 1);
              if (v35)
              {
                v36 = (unint64_t *)&v35->__shared_owners_;
                do
                  v37 = __ldaxr(v36);
                while (__stlxr(v37 - 1, v36));
                if (!v37)
                {
                  ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                  std::__shared_weak_count::__release_weak(v35);
                }
              }
              v33 -= 16;
            }
            while (v33 != v32);
            v34 = __p[0];
          }
          __p[1] = v32;
          operator delete(v34);
          v3 = v42;
          v5 = v43;
          v12 = v48;
          if (v48 == -1)
            goto LABEL_63;
LABEL_62:
          ((void (*)(char *, char *))off_24CA0C750[v12])(&v45, (char *)&v47 + 8);
          goto LABEL_63;
        }
        v3 = v42;
        v5 = v43;
        v12 = v48;
        if (v48 != -1)
          goto LABEL_62;
LABEL_63:
        v48 = -1;
        if ((v46[31] & 0x80000000) != 0)
          operator delete(*(void **)&v46[8]);
        v2 += 24;
        if (v2 == v3)
          goto LABEL_67;
      }
    }
    v5 = 0;
    v7 = 0;
    v6 = 0;
LABEL_67:
    *(_QWORD *)v46 = v5;
    *(_QWORD *)&v46[8] = v7;
    *(_QWORD *)&v46[16] = v6;
    v38 = sub_20FDD7854(0);
    sub_20FDD8FB0(&v46[24], (uint64_t)v38);
    v39 = *(_OWORD *)&v46[16];
    *(_OWORD *)a1 = *(_OWORD *)v46;
    *(_OWORD *)(a1 + 16) = v39;
    result = *(double *)&v47;
    *(_OWORD *)(a1 + 32) = v47;
    *(_BYTE *)(a1 + 48) = 1;
  }
  else
  {
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 48) = 0;
  }
  return result;
}

void sub_20FF2B930(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  sub_20E860DA4(a1);
}

uint64_t sub_20FF2B994(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 88;
    sub_20FF2B9E4(i - 88);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void sub_20FF2B9E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 64);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 72);
    v4 = *(void **)(a1 + 64);
    if (v3 != v2)
    {
      do
      {
        v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5)
        {
          p_shared_owners = (unint64_t *)&v5->__shared_owners_;
          do
            v7 = __ldaxr(p_shared_owners);
          while (__stlxr(v7 - 1, p_shared_owners));
          if (!v7)
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
        }
        v3 -= 16;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 64);
    }
    *(_QWORD *)(a1 + 72) = v2;
    operator delete(v4);
  }
  v8 = *(unsigned int *)(a1 + 56);
  if ((_DWORD)v8 != -1)
    ((void (*)(char *, uint64_t))off_24CA0C750[v8])(&v9, a1 + 40);
  *(_DWORD *)(a1 + 56) = -1;
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
}

uint64_t sub_20FF2BAD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  if (*(_BYTE *)(a1 + 48))
  {
    v2 = *(_QWORD *)(a1 + 24);
    if (v2)
    {
      v3 = *(_QWORD *)(a1 + 32);
      v4 = *(void **)(a1 + 24);
      if (v3 != v2)
      {
        do
        {
          v5 = *(std::__shared_weak_count **)(v3 - 8);
          if (v5)
          {
            p_shared_owners = (unint64_t *)&v5->__shared_owners_;
            do
              v7 = __ldaxr(p_shared_owners);
            while (__stlxr(v7 - 1, p_shared_owners));
            if (!v7)
            {
              ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
              std::__shared_weak_count::__release_weak(v5);
            }
          }
          v3 -= 16;
        }
        while (v3 != v2);
        v4 = *(void **)(a1 + 24);
      }
      *(_QWORD *)(a1 + 32) = v2;
      operator delete(v4);
    }
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      v9 = *(_QWORD *)(a1 + 8);
      v10 = *(void **)a1;
      if ((void *)v9 != v8)
      {
        do
        {
          v9 -= 88;
          sub_20FF2B9E4(v9);
        }
        while ((void *)v9 != v8);
        v10 = *(void **)a1;
      }
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v10);
    }
  }
  return a1;
}

void sub_20FF2BBAC(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  std::__shared_weak_count *v25;
  unint64_t *p_shared_owners;
  unint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  std::logic_error *exception;
  std::logic_error *v35;
  char v36;
  char v37[8];
  void *v38;
  char v39;
  uint64_t v40;
  int v41;
  void *__p;
  char *v43;
  char v44[8];
  void *v45[2];
  __int128 v46;
  __int128 v47;
  int v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 3)
    goto LABEL_47;
  v8 = *(_DWORD *)(a1[3] + v2);
  a1[6] = v2 + 4;
  if (v8 > 1)
  {
    sub_2100B6EE0(a1);
    sub_20FF2C0C0(a1, a2 + 8);
    sub_20FDD7534(a2);
    if (*(_DWORD *)(a2 + 56))
      sub_20E877AB8();
    v9 = a1[6];
    v10 = a1[7];
    v4 = v10 >= v9;
    v11 = v10 - v9;
    if (!v4)
      v11 = 0;
    if (v11 > 3)
    {
      v12 = *(_QWORD *)(a2 + 40);
      v13 = *(unsigned int *)(a1[3] + v9);
      a1[6] = v9 + 4;
      sub_2100B6EE0(a1);
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)v12 + 40))(v12, a1, v13);
      v14 = a1[12];
      v15 = a1[9];
      v16 = *(_QWORD *)(v15 - 16);
      a1[6] = *(_QWORD *)(v14 - 8) + *(_QWORD *)(v15 - 8) + 8;
      a1[6] = *(_QWORD *)(v14 - 16) + v16 + 8;
      a1[9] = v15 - 16;
      a1[12] = v14 - 16;
      return;
    }
LABEL_47:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20E89FD70(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C9AAA00, MEMORY[0x24BEDAB00]);
  }
  v48 = 0;
  v47 = 0u;
  v46 = 0u;
  *(_OWORD *)v45 = 0u;
  sub_20FDD8FB0(&v49, a2 + 64);
  sub_20FF2C0C0(a1, (uint64_t)v45);
  sub_20FDD6FB4((uint64_t)&v44);
  if (v48)
    sub_20E877AB8();
  v17 = a1[6];
  v18 = a1[7];
  v4 = v18 >= v17;
  v19 = v18 - v17;
  if (!v4)
    v19 = 0;
  if (v19 <= 3)
  {
    v35 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(v35, "Not enough data to read");
    v35->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(v35, (struct type_info *)off_24C9AAA00, MEMORY[0x24BEDAB00]);
  }
  v20 = v47;
  v21 = *(unsigned int *)(a1[3] + v17);
  a1[6] = v17 + 4;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)v20 + 40))(v20, a1, v21);
  sub_20FDD922C((uint64_t)&v37, (uint64_t)&v44);
  sub_20FDD9394(a2, (uint64_t)&v37);
  v22 = (char *)__p;
  if (__p)
  {
    v23 = v43;
    v24 = __p;
    if (v43 != __p)
    {
      do
      {
        v25 = (std::__shared_weak_count *)*((_QWORD *)v23 - 1);
        if (v25)
        {
          p_shared_owners = (unint64_t *)&v25->__shared_owners_;
          do
            v27 = __ldaxr(p_shared_owners);
          while (__stlxr(v27 - 1, p_shared_owners));
          if (!v27)
          {
            ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
            std::__shared_weak_count::__release_weak(v25);
          }
        }
        v23 -= 16;
      }
      while (v23 != v22);
      v24 = __p;
    }
    v43 = v22;
    operator delete(v24);
  }
  if (v41 != -1)
    ((void (*)(char *, uint64_t *))off_24CA0C750[v41])(&v36, &v40);
  v41 = -1;
  if (v39 < 0)
    operator delete(v38);
  v28 = v49;
  if (v49)
  {
    v29 = v50;
    v30 = v49;
    if (v50 != v49)
    {
      do
      {
        v31 = (std::__shared_weak_count *)*((_QWORD *)v29 - 1);
        if (v31)
        {
          v32 = (unint64_t *)&v31->__shared_owners_;
          do
            v33 = __ldaxr(v32);
          while (__stlxr(v33 - 1, v32));
          if (!v33)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
        v29 -= 16;
      }
      while (v29 != v28);
      v30 = v49;
    }
    v50 = v28;
    operator delete(v30);
  }
  if (v48 != -1)
    ((void (*)(char *, __int128 *))off_24CA0C750[v48])(&v37, &v47);
  v48 = -1;
  if (SBYTE7(v46) < 0)
    operator delete(v45[0]);
}

void sub_20FF2BF70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29)
{
  void *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  std::__shared_weak_count *v35;
  unint64_t *p_shared_owners;
  unint64_t v37;
  uint64_t v38;

  __cxa_free_exception(v29);
  v32 = *(_QWORD *)(v30 + 64);
  if (v32)
  {
    v33 = *(_QWORD *)(v30 + 72);
    v34 = *(void **)(v30 + 64);
    if (v33 != v32)
    {
      do
      {
        v35 = *(std::__shared_weak_count **)(v33 - 8);
        if (v35)
        {
          p_shared_owners = (unint64_t *)&v35->__shared_owners_;
          do
            v37 = __ldaxr(p_shared_owners);
          while (__stlxr(v37 - 1, p_shared_owners));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }
        v33 -= 16;
      }
      while (v33 != v32);
      v34 = *(void **)(v30 + 64);
    }
    *(_QWORD *)(v30 + 72) = v32;
    operator delete(v34);
  }
  v38 = *(unsigned int *)(v30 + 56);
  if ((_DWORD)v38 != -1)
    ((void (*)(char *, uint64_t *))off_24CA0C750[v38])(&a10, &a29);
  *(_DWORD *)(v30 + 56) = -1;
  if (a27 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_20FF2C0C0(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  int v19;
  std::logic_error *exception;
  std::logic_error *v21;
  __int128 v22;
  uint64_t v23;
  int v24;
  void *__p[2];
  uint64_t v26;
  int v27;

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 3)
    goto LABEL_21;
  v8 = *(_DWORD *)(a1[3] + v2);
  a1[6] = v2 + 4;
  if (v8 > 1)
  {
    sub_2100B6EE0(a1);
    sub_2100B7230(a1, a2);
    v9 = a1[6];
    v10 = a1[7];
    v4 = v10 >= v9;
    v11 = v10 - v9;
    if (!v4)
      v11 = 0;
    if (v11 > 3)
    {
      *(_DWORD *)(a2 + 24) = *(_DWORD *)(a1[3] + v9);
      a1[6] += 4;
      v12 = a1[12];
      v13 = a1[9];
      a1[6] = *(_QWORD *)(v12 - 8) + *(_QWORD *)(v13 - 8) + 8;
      a1[9] = v13 - 8;
      a1[12] = v12 - 8;
      return;
    }
LABEL_21:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20E89FD70(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C9AAA00, MEMORY[0x24BEDAB00]);
  }
  HIBYTE(v26) = 0;
  LOBYTE(__p[0]) = 0;
  v27 = 0;
  sub_2100B7230(a1, (uint64_t)__p);
  v14 = a1[6];
  v15 = a1[7];
  v4 = v15 >= v14;
  v16 = v15 - v14;
  if (!v4)
    v16 = 0;
  if (v16 <= 3)
  {
    v21 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(v21, "Not enough data to read");
    v21->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(v21, (struct type_info *)off_24C9AAA00, MEMORY[0x24BEDAB00]);
  }
  v17 = *(_DWORD *)(a1[3] + v14);
  a1[6] = v14 + 4;
  v18 = SHIBYTE(v26);
  if (SHIBYTE(v26) < 0)
  {
    sub_20E860C04(&v22, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    v22 = *(_OWORD *)__p;
    v23 = v26;
  }
  v24 = v17;
  if (*(char *)(a2 + 23) < 0)
  {
    operator delete(*(void **)a2);
    v19 = v24;
    *(_OWORD *)a2 = v22;
    *(_QWORD *)(a2 + 16) = v23;
    *(_DWORD *)(a2 + 24) = v19;
    if (v18 < 0)
LABEL_20:
      operator delete(__p[0]);
  }
  else
  {
    *(_OWORD *)a2 = v22;
    *(_QWORD *)(a2 + 16) = v23;
    *(_DWORD *)(a2 + 24) = v17;
    if (v18 < 0)
      goto LABEL_20;
  }
}

void sub_20FF2C2DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF2C334(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0CC98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF2C344(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0CC98;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF2C37C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v2 = (std::__shared_weak_count *)operator new(0x20uLL);
  v2->__shared_owners_ = 0;
  v2->__shared_weak_owners_ = 0;
  v2->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0CC98;
  v7 = v2;
  v2[1].__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0CF68;
  v6 = &v2[1].__vftable;
  sub_20FDD7B1C(a1, &v6, 1uLL);
  v3 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_20FF2C47C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  sub_20E86665C((uint64_t)va1);
  sub_20E86665C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF2C498(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0CCE8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF2C4A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0CCE8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF2C4D8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 320) && (sub_20FCF4D74(a1 + 144), *(_BYTE *)(a1 + 136)) && *(char *)(a1 + 135) < 0)
  {
    operator delete(*(void **)(a1 + 112));
    std::mutex::~mutex((std::mutex *)(a1 + 24));
  }
  else
  {
    std::mutex::~mutex((std::mutex *)(a1 + 24));
  }
}

uint64_t sub_20FF2C534(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *(_QWORD *)a1 = &off_24CA0CD38;
  if (*(_BYTE *)(a1 + 56))
  {
    v2 = *(_QWORD **)(a1 + 48);
    if (v2 == (_QWORD *)(a1 + 24))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 24);
      goto LABEL_6;
    }
    if (v2)
    {
      v3 = 5;
LABEL_6:
      (*(void (**)(void))(*v2 + 8 * v3))();
    }
  }
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v4)
    return a1;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (v6)
    return a1;
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_20FF2C5E0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  *(_QWORD *)a1 = &off_24CA0CD38;
  if (*(_BYTE *)(a1 + 56))
  {
    v2 = *(_QWORD **)(a1 + 48);
    if (v2 == (_QWORD *)(a1 + 24))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 24);
    }
    else
    {
      if (!v2)
        goto LABEL_7;
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
LABEL_7:
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF2C68C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = a1 + 8;
  v2 = operator new(0x40uLL);
  *v2 = &off_24CA0CD38;
  sub_20FF2DAD8((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_20FF2C6CC(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF2C6E0(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24CA0CD38;
  return sub_20FF2DAD8((uint64_t)(a2 + 1), a1 + 8);
}

void sub_20FF2C6FC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  if (*(_BYTE *)(a1 + 56))
  {
    v2 = *(_QWORD **)(a1 + 48);
    if (v2 == (_QWORD *)(a1 + 24))
    {
      v3 = 4;
      v2 = (_QWORD *)(a1 + 24);
    }
    else
    {
      if (!v2)
        goto LABEL_7;
      v3 = 5;
    }
    (*(void (**)(void))(*v2 + 8 * v3))();
  }
LABEL_7:
  v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_20FF2C790(_QWORD *__p)
{
  _QWORD *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  if (*((_BYTE *)__p + 56))
  {
    v2 = (_QWORD *)__p[6];
    if (v2 == __p + 3)
    {
      v3 = 4;
      v2 = __p + 3;
      goto LABEL_6;
    }
    if (v2)
    {
      v3 = 5;
LABEL_6:
      (*(void (**)(void))(*v2 + 8 * v3))();
    }
  }
  v4 = (std::__shared_weak_count *)__p[2];
  if (!v4)
    goto LABEL_11;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v6 = __ldaxr(p_shared_owners);
  while (__stlxr(v6 - 1, p_shared_owners));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    operator delete(__p);
  }
  else
  {
LABEL_11:
    operator delete(__p);
  }
}

void sub_20FF2C830(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  char *v5;
  char *v6;
  void *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  char *v28;
  char *v29;
  void *v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void **v38;
  __int128 v39;
  _BYTE *v40;
  size_t v41;
  char *v42;
  uint64_t v43;
  _DWORD *v44;
  unsigned int v45;
  char *v46;
  char *v47;
  void *v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char *v60;
  char *v61;
  void *v62;
  char *v63;
  char *v64;
  __int128 v65;
  int64_t v66;
  unint64_t v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  void *v73;
  char *v74;
  void *v75;
  char *v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  std::__shared_weak_count *v85;
  unint64_t *v86;
  unint64_t v87;
  std::__shared_weak_count *v88;
  unint64_t *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _BOOL4 v100;
  char v101;
  void *v102;
  void **v103;
  unsigned __int8 *v104;
  uint64_t v105;
  void *v106;
  const void *v107;
  std::__shared_weak_count *v108;
  unint64_t *v109;
  unint64_t v110;
  _BOOL4 v111;
  unint64_t *v112;
  unint64_t v113;
  uint64_t v114;
  std::__shared_weak_count *v115;
  unint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  std::mutex *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  void *v125;
  std::__shared_weak_count *v126;
  unint64_t *v127;
  unint64_t v128;
  char *v129;
  char *v130;
  void *v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  char *v135;
  char *v136;
  void *v137;
  std::logic_error *exception;
  uint64_t v139;
  unint64_t v140;
  void *v141;
  __int128 v142;
  char v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  int v147;
  void *v148[2];
  void *v149[2];
  __int128 v150;
  unsigned __int8 v151;
  void *__p[3];
  int v153;
  _BYTE __s2[56];
  int v155;
  void *v156;
  char *v157;
  uint64_t v158;

  v158 = *MEMORY[0x24BDAC8D0];
  sub_20FF2C37C(__p);
  v144 = 0x500000001;
  v145 = 0;
  v146 = 1;
  v147 = 0;
  memset(__s2, 0, 24);
  sub_20FDD8FB0(&__s2[24], (uint64_t)__p);
  *(_OWORD *)v148 = *(_OWORD *)__s2;
  *(_OWORD *)v149 = *(_OWORD *)&__s2[16];
  v150 = *(_OWORD *)&__s2[32];
  v151 = 1;
  v5 = (char *)__p[0];
  if (__p[0])
  {
    v6 = (char *)__p[1];
    v7 = __p[0];
    if (__p[1] != __p[0])
    {
      do
      {
        v8 = (std::__shared_weak_count *)*((_QWORD *)v6 - 1);
        if (v8)
        {
          p_shared_owners = (unint64_t *)&v8->__shared_owners_;
          do
            v10 = __ldaxr(p_shared_owners);
          while (__stlxr(v10 - 1, p_shared_owners));
          if (!v10)
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
        }
        v6 -= 16;
      }
      while (v6 != v5);
      v7 = __p[0];
    }
    __p[1] = v5;
    operator delete(v7);
  }
  v139 = a1;
  v11 = a3[6];
  v12 = a3[7];
  v13 = v12 >= v11;
  v14 = v12 - v11;
  if (!v13)
    v14 = 0;
  if (v14 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read");
    goto LABEL_229;
  }
  a3[6] = v11 + 4;
  sub_2100B6EE0(a3);
  sub_20FEE7A20((uint64_t)__s2, a3, &v144);
  v17 = a3[6];
  v16 = a3[7];
  if (v16 <= v17)
  {
LABEL_228:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read");
LABEL_229:
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA00, MEMORY[0x24BEDAB00]);
  }
  v18 = *(unsigned __int8 *)(a3[3] + v17);
  v19 = v17 + 1;
  a3[6] = v19;
  if (v18)
  {
    if (!v151)
    {
      *(_OWORD *)v149 = 0u;
      v150 = 0u;
      *(_OWORD *)v148 = 0u;
      v20 = sub_20FDD7854(0);
      sub_20FDD8FB0(&v149[1], (uint64_t)v20);
      v151 = 1;
      v19 = a3[6];
      v16 = a3[7];
    }
    v13 = v16 >= v19;
    v21 = v16 - v19;
    if (!v13)
      v21 = 0;
    if (v21 > 3)
    {
      a3[6] = v19 + 4;
      sub_2100B6EE0(a3);
      v22 = a3[6];
      v23 = a3[7];
      v13 = v23 >= v22;
      v24 = v23 - v22;
      if (!v13)
        v24 = 0;
      if (v24 > 7)
      {
        v25 = *(_QWORD *)(a3[3] + v22);
        a3[6] = v22 + 8;
        v26 = (char *)v148[1];
        v27 = 0x2E8BA2E8BA2E8BA3 * (((char *)v148[1] - (char *)v148[0]) >> 3);
        v140 = v25;
        v15 = v25 - v27;
        if (v25 > v27)
        {
          sub_20FF2DBF8(v148, v15);
LABEL_42:
          v35 = 0;
          while (1)
          {
            v155 = 0;
            memset(&__s2[8], 0, 48);
            sub_20FDD8FB0(&v156, (uint64_t)&v149[1]);
            sub_20FF2BBAC(a3, (uint64_t)__s2);
            v36 = (char *)v148[0];
            v37 = (char *)v148[0] + 88 * v35;
            if (v37 != __s2)
            {
              v38 = (void **)(v37 + 8);
              if (v37[31] < 0)
              {
                if (__s2[31] >= 0)
                  v40 = &__s2[8];
                else
                  v40 = *(_BYTE **)&__s2[8];
                if (__s2[31] >= 0)
                  v41 = __s2[31];
                else
                  v41 = *(_QWORD *)&__s2[16];
                sub_20E867CBC(v38, v40, v41);
              }
              else if ((__s2[31] & 0x80) != 0)
              {
                sub_20E867BF8(v38, *(void **)&__s2[8], *(size_t *)&__s2[16]);
              }
              else
              {
                v39 = *(_OWORD *)&__s2[8];
                *((_QWORD *)v37 + 3) = *(_QWORD *)&__s2[24];
                *(_OWORD *)v38 = v39;
              }
            }
            v42 = &v36[88 * v35];
            v45 = *((_DWORD *)v42 + 14);
            v44 = v42 + 56;
            v43 = v45;
            *(v44 - 6) = *(_DWORD *)&__s2[32];
            v15 = (unint64_t)(v44 - 4);
            if (v45 == -1)
            {
              if (v155 != -1)
              {
LABEL_60:
                __p[0] = v44 - 4;
                ((void (*)(void **))off_24CA0CD98[v155])(__p);
              }
            }
            else
            {
              if (v155 != -1)
                goto LABEL_60;
              ((void (*)(void **, unint64_t))off_24CA0C750[v43])(__p, v15);
              *v44 = -1;
            }
            if (v37 != __s2)
              sub_20EE60014((uint64_t)&v36[88 * v35 + 64], v156, v157, (v157 - (_BYTE *)v156) >> 4);
            v46 = (char *)v156;
            if (v156)
            {
              v47 = v157;
              v48 = v156;
              if (v157 != v156)
              {
                do
                {
                  v49 = (std::__shared_weak_count *)*((_QWORD *)v47 - 1);
                  if (v49)
                  {
                    v50 = (unint64_t *)&v49->__shared_owners_;
                    do
                      v51 = __ldaxr(v50);
                    while (__stlxr(v51 - 1, v50));
                    if (!v51)
                    {
                      ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
                      std::__shared_weak_count::__release_weak(v49);
                    }
                  }
                  v47 -= 16;
                }
                while (v47 != v46);
                v48 = v156;
              }
              v157 = v46;
              operator delete(v48);
            }
            if (v155 != -1)
              ((void (*)(void **, _BYTE *))off_24CA0C750[v155])(__p, &__s2[40]);
            v155 = -1;
            if ((__s2[31] & 0x80000000) != 0)
              operator delete(*(void **)&__s2[8]);
            if (++v35 == v140)
              goto LABEL_78;
          }
        }
        if (v25 < v27)
        {
          v34 = (char *)v148[0] + 88 * v25;
          if (v148[1] != v34)
          {
            do
            {
              v26 -= 88;
              sub_20FF2B9E4((uint64_t)v26);
            }
            while (v26 != v34);
          }
          v148[1] = v34;
        }
        if (v140)
          goto LABEL_42;
LABEL_78:
        v52 = a3[12];
        v55 = *(_QWORD *)(v52 - 8);
        v53 = v52 - 8;
        v54 = v55;
        v56 = a3[9];
        v58 = *(_QWORD *)(v56 - 8);
        v57 = v56 - 8;
        a3[6] = v54 + v58 + 8;
        a3[9] = v57;
        a3[12] = v53;
        v59 = v151;
        goto LABEL_88;
      }
    }
    goto LABEL_228;
  }
  if (v151)
  {
    v28 = (char *)v149[1];
    if (v149[1])
    {
      v29 = (char *)v150;
      v30 = v149[1];
      if ((void *)v150 != v149[1])
      {
        do
        {
          v31 = (std::__shared_weak_count *)*((_QWORD *)v29 - 1);
          if (v31)
          {
            v32 = (unint64_t *)&v31->__shared_owners_;
            do
              v33 = __ldaxr(v32);
            while (__stlxr(v33 - 1, v32));
            if (!v33)
            {
              ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
              std::__shared_weak_count::__release_weak(v31);
            }
          }
          v29 -= 16;
        }
        while (v29 != v28);
        v30 = v149[1];
      }
      *(_QWORD *)&v150 = v28;
      operator delete(v30);
    }
    v60 = (char *)v148[0];
    if (v148[0])
    {
      v61 = (char *)v148[1];
      v62 = v148[0];
      if (v148[1] != v148[0])
      {
        do
        {
          v61 -= 88;
          sub_20FF2B9E4((uint64_t)v61);
        }
        while (v61 != v60);
        v62 = v148[0];
      }
      v148[1] = v60;
      operator delete(v62);
    }
    v151 = 0;
  }
  v59 = 0;
  v53 = a3[12];
  v57 = a3[9];
LABEL_88:
  a3[6] = *(_QWORD *)(v53 - 8) + *(_QWORD *)(v57 - 8) + 8;
  a3[9] = v57 - 8;
  a3[12] = v53 - 8;
  if (!v59)
    goto LABEL_205;
  v64 = (char *)v148[0];
  v63 = (char *)v148[1];
  memset(__p, 0, sizeof(__p));
  v65 = 0uLL;
  v66 = (char *)v148[1] - (char *)v148[0];
  if (v148[1] == v148[0])
    goto LABEL_131;
  v67 = 0x2E8BA2E8BA2E8BA3 * (v66 >> 3);
  if (v67 > 0xAAAAAAAAAAAAAAALL)
    sub_20E867F44();
  __p[0] = operator new(0x5D1745D1745D1748 * (v66 >> 3));
  __p[1] = __p[0];
  __p[2] = (char *)__p[0] + 24 * v67;
  do
  {
    if (*((_DWORD *)v64 + 14) > 1u)
LABEL_223:
      sub_20E877AB8();
    v68 = *((_QWORD *)v64 + 5);
    v69 = (std::__shared_weak_count *)*((_QWORD *)v64 + 6);
    if (!v69)
      goto LABEL_99;
    v70 = (unint64_t *)&v69->__shared_owners_;
    do
      v71 = __ldxr(v70);
    while (__stxr(v71 + 1, v70));
    do
      v72 = __ldaxr(v70);
    while (__stlxr(v72 - 1, v70));
    if (!v72)
    {
      ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
      std::__shared_weak_count::__release_weak(v69);
      if (!v68)
      {
LABEL_104:
        *(_QWORD *)__s2 = &off_24CA0C0E8;
        *(_QWORD *)&__s2[8] = 0;
        *(_QWORD *)&__s2[16] = 0;
        v74 = (char *)__p[1];
        v73 = __p[2];
        if (__p[1] < __p[2])
          goto LABEL_102;
        goto LABEL_105;
      }
    }
    else
    {
LABEL_99:
      if (!v68)
        goto LABEL_104;
    }
    if (*((_DWORD *)v64 + 14))
      goto LABEL_223;
    (*(void (**)(_BYTE *__return_ptr))(**((_QWORD **)v64 + 5) + 48))(__s2);
    v74 = (char *)__p[1];
    v73 = __p[2];
    if (__p[1] < __p[2])
    {
LABEL_102:
      *(_QWORD *)v74 = &off_24CA0C0E8;
      *(_OWORD *)(v74 + 8) = *(_OWORD *)&__s2[8];
      *(_QWORD *)&__s2[8] = 0;
      *(_QWORD *)&__s2[16] = 0;
      v75 = v74 + 24;
      goto LABEL_125;
    }
LABEL_105:
    v76 = (char *)__p[0];
    v77 = 0xAAAAAAAAAAAAAAABLL * ((v74 - (char *)__p[0]) >> 3);
    v78 = v77 + 1;
    if (v77 + 1 > 0xAAAAAAAAAAAAAAALL)
      sub_20E867F44();
    v79 = 0xAAAAAAAAAAAAAAABLL * ((int64_t)((uint64_t)v73 - (unint64_t)__p[0]) >> 3);
    if (2 * v79 > v78)
      v78 = 2 * v79;
    if (v79 >= 0x555555555555555)
      v80 = 0xAAAAAAAAAAAAAAALL;
    else
      v80 = v78;
    if (v80 > 0xAAAAAAAAAAAAAAALL)
      sub_20E877A38();
    v81 = (char *)operator new(24 * v80);
    v82 = &v81[24 * v77];
    *(_QWORD *)v82 = &off_24CA0C0E8;
    *(_OWORD *)(v82 + 8) = *(_OWORD *)&__s2[8];
    v83 = &v81[24 * v80];
    *(_QWORD *)&__s2[8] = 0;
    *(_QWORD *)&__s2[16] = 0;
    v75 = v82 + 24;
    if (v74 == v76)
    {
      __p[0] = v82;
      __p[1] = v82 + 24;
      __p[2] = &v81[24 * v80];
    }
    else
    {
      do
      {
        *((_QWORD *)v82 - 3) = &off_24CA0C0E8;
        v82 -= 24;
        *(_OWORD *)(v82 + 8) = *((_OWORD *)v74 - 1);
        *((_QWORD *)v74 - 2) = 0;
        *((_QWORD *)v74 - 1) = 0;
        v74 -= 24;
      }
      while (v74 != v76);
      v74 = (char *)__p[0];
      v84 = (char *)__p[1];
      __p[0] = v82;
      __p[1] = v75;
      __p[2] = v83;
      while (v84 != v74)
      {
        v85 = (std::__shared_weak_count *)*((_QWORD *)v84 - 1);
        if (v85)
        {
          v86 = (unint64_t *)&v85->__shared_owners_;
          do
            v87 = __ldaxr(v86);
          while (__stlxr(v87 - 1, v86));
          if (!v87)
          {
            ((void (*)(std::__shared_weak_count *))v85->__on_zero_shared)(v85);
            std::__shared_weak_count::__release_weak(v85);
          }
        }
        v84 -= 24;
      }
    }
    if (v74)
      operator delete(v74);
LABEL_125:
    __p[1] = v75;
    v88 = *(std::__shared_weak_count **)&__s2[16];
    if (*(_QWORD *)&__s2[16])
    {
      v89 = (unint64_t *)(*(_QWORD *)&__s2[16] + 8);
      do
        v90 = __ldaxr(v89);
      while (__stlxr(v90 - 1, v89));
      if (!v90)
      {
        ((void (*)(std::__shared_weak_count *))v88->__on_zero_shared)(v88);
        std::__shared_weak_count::__release_weak(v88);
      }
    }
    v64 += 88;
  }
  while (v64 != v63);
  v65 = *(_OWORD *)__p;
  v66 = (int64_t)__p[2];
LABEL_131:
  *(_OWORD *)__s2 = v65;
  *(_QWORD *)&__s2[16] = v66;
  sub_20FF2B23C(__p, (uint64_t *)__s2);
  v91 = *(_QWORD *)__s2;
  if (*(_QWORD *)__s2)
  {
    v92 = *(_QWORD *)&__s2[8];
    v93 = *(void **)__s2;
    if (*(_QWORD *)&__s2[8] != *(_QWORD *)__s2)
    {
      do
      {
        v94 = *(std::__shared_weak_count **)(v92 - 8);
        if (v94)
        {
          v95 = (unint64_t *)&v94->__shared_owners_;
          do
            v96 = __ldaxr(v95);
          while (__stlxr(v96 - 1, v95));
          if (!v96)
          {
            ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
            std::__shared_weak_count::__release_weak(v94);
          }
        }
        v92 -= 24;
      }
      while (v92 != v91);
      v93 = *(void **)__s2;
    }
    *(_QWORD *)&__s2[8] = v91;
    operator delete(v93);
  }
  v97 = (char *)__p[0];
  v141 = __p[0];
  v142 = *(_OWORD *)&__p[1];
  v143 = 1;
  v98 = (char *)__p[1];
  if (__p[0] != __p[1])
  {
    while (2)
    {
      v99 = *((_QWORD *)v97 + 1);
      if (!v99)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          abort();
        }
        v99 = *((_QWORD *)v97 + 1);
      }
      (*(void (**)(void **__return_ptr))(*(_QWORD *)v99 + 48))(__p);
      v100 = 0;
      strcpy(__s2, "cv3d.net");
      __s2[23] = 8;
      *(_DWORD *)&__s2[24] = 1;
      __s2[32] = 1;
      v101 = HIBYTE(__p[2]);
      if (SHIBYTE(__p[2]) >= 0)
        v102 = (void *)HIBYTE(__p[2]);
      else
        v102 = __p[1];
      if (v102 == (void *)8)
      {
        if ((HIBYTE(__p[2]) & 0x80) != 0)
        {
          v106 = __p[0];
          if (memcmp(__p[0], __s2, (size_t)__p[1]))
          {
            operator delete(v106);
            goto LABEL_145;
          }
        }
        else if (HIBYTE(__p[2]))
        {
          v103 = __p;
          v104 = __s2;
          v105 = HIBYTE(__p[2]);
          while (*(unsigned __int8 *)v103 == *v104)
          {
            v103 = (void **)((char *)v103 + 1);
            ++v104;
            if (!--v105)
              goto LABEL_161;
          }
          v100 = 0;
          if ((HIBYTE(__p[2]) & 0x80) != 0)
          {
LABEL_166:
            operator delete(__p[0]);
            if (v100)
              goto LABEL_167;
LABEL_145:
            v97 += 24;
            if (v97 == v98)
              goto LABEL_190;
            continue;
          }
LABEL_163:
          if (!v100)
            goto LABEL_145;
LABEL_167:
          v107 = (const void *)*((_QWORD *)v97 + 1);
          v108 = (std::__shared_weak_count *)*((_QWORD *)v97 + 2);
          if (v108)
          {
            v109 = (unint64_t *)&v108->__shared_owners_;
            do
              v110 = __ldxr(v109);
            while (__stxr(v110 + 1, v109));
          }
          if (v107)
          {
            v111 = __dynamic_cast(v107, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA087F8, 0) != 0;
            if (!v108)
              goto LABEL_177;
          }
          else
          {
            v111 = 0;
            if (!v108)
              goto LABEL_177;
          }
          v112 = (unint64_t *)&v108->__shared_owners_;
          do
            v113 = __ldaxr(v112);
          while (__stlxr(v113 - 1, v112));
          if (v113)
          {
LABEL_177:
            if (v111)
            {
LABEL_178:
              v114 = *((_QWORD *)v97 + 1);
              v115 = (std::__shared_weak_count *)*((_QWORD *)v97 + 2);
              if (v115)
              {
                v116 = (unint64_t *)&v115->__shared_owners_;
                do
                  v117 = __ldxr(v116);
                while (__stxr(v117 + 1, v116));
                v118 = v114 + 8;
                do
                  v119 = __ldaxr(v116);
                while (__stlxr(v119 - 1, v116));
                if (!v119)
                {
                  ((void (*)(std::__shared_weak_count *))v115->__on_zero_shared)(v115);
                  std::__shared_weak_count::__release_weak(v115);
                }
              }
              else
              {
                v118 = v114 + 8;
              }
              goto LABEL_188;
            }
          }
          else
          {
            ((void (*)(std::__shared_weak_count *))v108->__on_zero_shared)(v108);
            std::__shared_weak_count::__release_weak(v108);
            if (v111)
              goto LABEL_178;
          }
          v118 = 8;
LABEL_188:
          v120 = *(std::mutex **)(v139 + 8);
          std::mutex::lock(v120);
          v121 = *(_QWORD *)(v139 + 8);
          if (!*(_BYTE *)(v121 + 296))
          {
            sub_20FDD0914(v121 + 64, v118);
            *(_BYTE *)(v121 + 296) = 1;
          }
          std::mutex::unlock(v120);
          goto LABEL_145;
        }
LABEL_161:
        v100 = v153 == 1;
      }
      break;
    }
    if (v101 < 0)
      goto LABEL_166;
    goto LABEL_163;
  }
LABEL_190:
  if (*(_BYTE *)(v139 + 56))
  {
    v122 = *(_QWORD *)(v139 + 48);
    if (!v122)
      sub_20E86D37C();
    (*(void (**)(uint64_t, void **))(*(_QWORD *)v122 + 48))(v122, &v141);
  }
  if (v143)
  {
    v123 = (char *)v141;
    if (v141)
    {
      v124 = (char *)v142;
      v125 = v141;
      if ((void *)v142 != v141)
      {
        do
        {
          v126 = (std::__shared_weak_count *)*((_QWORD *)v124 - 1);
          if (v126)
          {
            v127 = (unint64_t *)&v126->__shared_owners_;
            do
              v128 = __ldaxr(v127);
            while (__stlxr(v128 - 1, v127));
            if (!v128)
            {
              ((void (*)(std::__shared_weak_count *))v126->__on_zero_shared)(v126);
              std::__shared_weak_count::__release_weak(v126);
            }
          }
          v124 -= 24;
        }
        while (v124 != v123);
        v125 = v141;
      }
      *(_QWORD *)&v142 = v123;
      operator delete(v125);
    }
  }
LABEL_205:
  if (v151)
  {
    v129 = (char *)v149[1];
    if (v149[1])
    {
      v130 = (char *)v150;
      v131 = v149[1];
      if ((void *)v150 != v149[1])
      {
        do
        {
          v132 = (std::__shared_weak_count *)*((_QWORD *)v130 - 1);
          if (v132)
          {
            v133 = (unint64_t *)&v132->__shared_owners_;
            do
              v134 = __ldaxr(v133);
            while (__stlxr(v134 - 1, v133));
            if (!v134)
            {
              ((void (*)(std::__shared_weak_count *, unint64_t))v132->__on_zero_shared)(v132, v15);
              std::__shared_weak_count::__release_weak(v132);
            }
          }
          v130 -= 16;
        }
        while (v130 != v129);
        v131 = v149[1];
      }
      *(_QWORD *)&v150 = v129;
      operator delete(v131);
    }
    v135 = (char *)v148[0];
    if (v148[0])
    {
      v136 = (char *)v148[1];
      v137 = v148[0];
      if (v148[1] != v148[0])
      {
        do
        {
          v136 -= 88;
          sub_20FF2B9E4((uint64_t)v136);
        }
        while (v136 != v135);
        v137 = v148[0];
      }
      v148[1] = v135;
      operator delete(v137);
    }
  }
}

void sub_20FF2D568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char *a20,char *a21,uint64_t a22,char *__p,char *a24,uint64_t a25,char a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,void *a42,uint64_t a43)
{
  void *v43;
  char *v45;
  char *v46;
  std::__shared_weak_count *v47;
  unint64_t *p_shared_owners;
  unint64_t v49;
  char *v50;
  char *v51;

  __cxa_free_exception(v43);
  if (a26)
  {
    if (__p)
    {
      v45 = a24;
      v46 = __p;
      if (a24 != __p)
      {
        do
        {
          v47 = (std::__shared_weak_count *)*((_QWORD *)v45 - 1);
          if (v47)
          {
            p_shared_owners = (unint64_t *)&v47->__shared_owners_;
            do
              v49 = __ldaxr(p_shared_owners);
            while (__stlxr(v49 - 1, p_shared_owners));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          v45 -= 16;
        }
        while (v45 != __p);
        v46 = __p;
      }
      operator delete(v46);
    }
    if (a20)
    {
      v50 = a21;
      v51 = a20;
      if (a21 != a20)
      {
        do
        {
          v50 -= 88;
          sub_20FF2B9E4((uint64_t)v50);
        }
        while (v50 != a20);
        v51 = a20;
      }
      operator delete(v51);
      _Unwind_Resume(a1);
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20FF2DA60(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "N4cv3d3kit3viz13NetworkClient4Impl28ProcessReceivedServerMessageE")
    return a1 + 8;
  if (((v3 & (unint64_t)"N4cv3d3kit3viz13NetworkClient4Impl28ProcessReceivedServerMessageE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N4cv3d3kit3viz13NetworkClient4Impl28ProcessReceivedServerMessageE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N4cv3d3kit3viz13NetworkClient4Impl28ProcessReceivedServerMessageE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF2DACC()
{
  return &unk_24CA0CDA8;
}

uint64_t sub_20FF2DAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  if (v3)
  {
    v4 = (unint64_t *)(v3 + 8);
    do
      v5 = __ldxr(v4);
    while (__stxr(v5 + 1, v4));
  }
  *(_BYTE *)(a1 + 16) = 0;
  v6 = a1 + 16;
  *(_BYTE *)(a1 + 48) = 0;
  if (*(_BYTE *)(a2 + 48))
  {
    v7 = *(_QWORD *)(a2 + 40);
    if (v7)
    {
      if (v7 == a2 + 16)
      {
        *(_QWORD *)(a1 + 40) = v6;
        (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 40) + 24))(*(_QWORD *)(a2 + 40), a1 + 16);
        goto LABEL_10;
      }
      v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 16))(v7);
    }
    *(_QWORD *)(a1 + 40) = v7;
LABEL_10:
    *(_BYTE *)(a1 + 48) = 1;
  }
  return a1;
}

void sub_20FF2DB7C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;

  if (*(_BYTE *)(v1 + 48))
  {
    v4 = *(_QWORD **)(v1 + 40);
    if (v4 == v2)
    {
      v5 = 4;
    }
    else
    {
      if (!v4)
        goto LABEL_7;
      v5 = 5;
      v2 = *(_QWORD **)(v1 + 40);
    }
    (*(void (**)(_QWORD *))(*v2 + 8 * v5))(v2);
  }
LABEL_7:
  v6 = *(std::__shared_weak_count **)(v1 + 8);
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF2DBF8(void **a1, unint64_t a2)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char v34;

  v4 = a1[2];
  v5 = a1[1];
  if (0x2E8BA2E8BA2E8BA3 * ((v4 - v5) >> 3) >= a2)
  {
    if (a2)
    {
      v11 = 0;
      v12 = &v5[88 * a2];
      v13 = 88 * a2;
      do
      {
        v14 = sub_20FDD7854(0);
        v15 = &v5[v11];
        *((_DWORD *)v15 + 14) = 0;
        *(_OWORD *)(v15 + 40) = 0u;
        *(_OWORD *)(v15 + 24) = 0u;
        *(_OWORD *)(v15 + 8) = 0u;
        sub_20FDD8FB0(&v5[v11 + 64], (uint64_t)v14);
        v11 += 88;
      }
      while (v13 != v11);
    }
    else
    {
      v12 = (char *)a1[1];
    }
    a1[1] = v12;
  }
  else
  {
    v6 = 0x2E8BA2E8BA2E8BA3 * ((v5 - (_BYTE *)*a1) >> 3);
    v7 = v6 + a2;
    if (v6 + a2 > 0x2E8BA2E8BA2E8BALL)
      sub_20E867F44();
    v8 = 0x2E8BA2E8BA2E8BA3 * ((v4 - (_BYTE *)*a1) >> 3);
    if (2 * v8 > v7)
      v7 = 2 * v8;
    if (v8 >= 0x1745D1745D1745DLL)
      v9 = 0x2E8BA2E8BA2E8BALL;
    else
      v9 = v7;
    if (v9)
    {
      if (v9 > 0x2E8BA2E8BA2E8BALL)
        sub_20E877A38();
      v10 = (char *)operator new(88 * v9);
    }
    else
    {
      v10 = 0;
    }
    v16 = 0;
    v17 = &v10[88 * v6];
    v31 = v17;
    v33 = &v10[88 * v9];
    v18 = 88 * a2;
    v19 = &v17[v18];
    do
    {
      v20 = sub_20FDD7854(0);
      v21 = &v17[v16];
      *((_DWORD *)v21 + 14) = 0;
      *(_OWORD *)(v21 + 40) = 0u;
      *(_OWORD *)(v21 + 24) = 0u;
      *(_OWORD *)(v21 + 8) = 0u;
      sub_20FDD8FB0(&v17[v16 + 64], (uint64_t)v20);
      v16 += 88;
    }
    while (v18 != v16);
    v32 = &v17[v18];
    v23 = (char *)*a1;
    v22 = (char *)a1[1];
    v24 = v17;
    if (v22 == *a1)
    {
      v30 = (char *)a1[1];
    }
    else
    {
      v25 = 0;
      do
      {
        v26 = &v31[v25];
        v27 = &v22[v25];
        v28 = *(_OWORD *)&v22[v25 - 80];
        *((_QWORD *)v26 - 8) = *(_QWORD *)&v22[v25 - 64];
        *((_OWORD *)v26 - 5) = v28;
        *((_QWORD *)v27 - 9) = 0;
        *((_QWORD *)v27 - 8) = 0;
        *((_QWORD *)v27 - 10) = 0;
        *((_DWORD *)v26 - 14) = *(_DWORD *)&v22[v25 - 56];
        v31[v25 - 48] = 0;
        *((_DWORD *)v26 - 8) = -1;
        v29 = *(unsigned int *)&v22[v25 - 32];
        if ((_DWORD)v29 != -1)
        {
          ((void (*)(char *, char *, char *))off_24CA0C760[v29])(&v34, &v31[v25 - 48], v27 - 48);
          *((_DWORD *)v26 - 8) = v29;
        }
        *((_QWORD *)v26 - 3) = 0;
        *((_QWORD *)v26 - 2) = 0;
        *((_QWORD *)v26 - 1) = 0;
        *(_OWORD *)(v26 - 24) = *(_OWORD *)(v27 - 24);
        *((_QWORD *)v26 - 1) = *((_QWORD *)v27 - 1);
        *((_QWORD *)v27 - 3) = 0;
        *((_QWORD *)v27 - 2) = 0;
        *((_QWORD *)v27 - 1) = 0;
        v25 -= 88;
      }
      while (&v22[v25] != v23);
      v30 = (char *)*a1;
      v22 = (char *)a1[1];
      v24 = &v31[v25];
      v19 = v32;
    }
    *a1 = v24;
    a1[1] = v19;
    a1[2] = v33;
    if (v22 != v30)
    {
      do
      {
        sub_20FF2B9E4((uint64_t)(v22 - 88));
        v22 -= 88;
      }
      while (v22 != v30);
      v22 = v30;
    }
    if (v22)
      operator delete(v22);
  }
}

void sub_20FF2DED0(_Unwind_Exception *exception_object, ...)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  va_list va;

  va_start(va, exception_object);
  v6 = *(unsigned int *)(v4 + 56);
  if ((_DWORD)v6 != -1)
    ((void (*)(uint64_t *, uint64_t))off_24CA07CB8[v6])((uint64_t *)va, v2 + v3 + 40);
  *(_DWORD *)(v4 + 56) = -1;
  if (*(char *)(v4 + 31) < 0)
  {
    operator delete(*(void **)(v4 + 8));
    *(_QWORD *)(v1 + 8) = v2 + v3;
    _Unwind_Resume(exception_object);
  }
  *(_QWORD *)(v1 + 8) = v2 + v3;
  _Unwind_Resume(exception_object);
}

void sub_20FF2DF3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v21 = *(unsigned int *)(v19 + 56);
  if ((_DWORD)v21 != -1)
    ((void (*)(char *, uint64_t))off_24CA07CB8[v21])(&a17, v18 + v17 + 40);
  *(_DWORD *)(v19 + 56) = -1;
  if (*(char *)(v19 + 31) < 0)
  {
    operator delete(*(void **)(v19 + 8));
    a11 = v18 + v17;
    sub_20FF2B994((uint64_t)&a9);
    _Unwind_Resume(a1);
  }
  a11 = v18 + v17;
  sub_20FF2B994((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF2DFB8(uint64_t *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 16);
  if ((_DWORD)v5 != -1)
  {
    if (!(_DWORD)v5)
    {
      v7 = *a3;
      v6 = a3[1];
      if (v6)
      {
        v8 = (unint64_t *)(v6 + 8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 1, v8));
      }
      v10 = (std::__shared_weak_count *)a2[1];
      *a2 = v7;
      a2[1] = v6;
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      return;
    }
    ((void (*)(char *, uint64_t))off_24CA0C750[v5])(&v16, v4);
  }
  *(_DWORD *)(v4 + 16) = -1;
  v13 = a3[1];
  *(_QWORD *)v4 = *a3;
  *(_QWORD *)(v4 + 8) = v13;
  if (v13)
  {
    v14 = (unint64_t *)(v13 + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  *(_DWORD *)(v4 + 16) = 0;
}

void sub_20FF2E0AC(uint64_t *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 16);
  if ((_DWORD)v5 != -1)
  {
    if ((_DWORD)v5 == 1)
    {
      v7 = *a3;
      v6 = a3[1];
      if (v6)
      {
        v8 = (unint64_t *)(v6 + 8);
        do
          v9 = __ldxr(v8);
        while (__stxr(v9 + 1, v8));
      }
      v10 = (std::__shared_weak_count *)a2[1];
      *a2 = v7;
      a2[1] = v6;
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      return;
    }
    ((void (*)(char *, uint64_t))off_24CA0C750[v5])(&v16, v4);
  }
  *(_DWORD *)(v4 + 16) = -1;
  v13 = a3[1];
  *(_QWORD *)v4 = *a3;
  *(_QWORD *)(v4 + 8) = v13;
  if (v13)
  {
    v14 = (unint64_t *)(v13 + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  *(_DWORD *)(v4 + 16) = 1;
}

uint64_t sub_20FF2E1A8(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = (_QWORD *)(a1 + 8);
  v3 = *(_QWORD **)(a1 + 32);
  if (v3 == v2)
  {
    v4 = 4;
    v3 = v2;
    goto LABEL_5;
  }
  if (v3)
  {
    v4 = 5;
LABEL_5:
    (*(void (**)(void))(*v3 + 8 * v4))();
  }
  return a1;
}

void sub_20FF2E1F8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 8);
  v2 = *(_QWORD **)(a1 + 32);
  if (v2 == v1)
  {
    v3 = 4;
    v2 = v1;
  }
  else
  {
    if (!v2)
      goto LABEL_6;
    v3 = 5;
  }
  (*(void (**)(void))(*v2 + 8 * v3))();
LABEL_6:
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF2E258@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t result;

  v4 = (_QWORD *)operator new();
  *v4 = &off_24CA0CDC8;
  v5 = v4 + 1;
  result = *(_QWORD *)(a1 + 32);
  if (!result)
    goto LABEL_4;
  if (result != a1 + 8)
  {
    result = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)result + 16))(result, v5);
LABEL_4:
    v4[4] = result;
    *a2 = v4;
    return result;
  }
  v4[4] = v5;
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 24))(result);
  *a2 = v4;
  return result;
}

void sub_20FF2E2F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BC6398](v1, 0x10A1C400AA0B987);
  _Unwind_Resume(a1);
}

void sub_20FF2E31C()
{
  sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ChannelInputModel.h", 274, (uint64_t)"", 0, (uint64_t)"Not implemented", 15, (void (*)(void **))sub_21023DDB0);
  abort();
}

void sub_20FF2E358()
{
  sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ChannelInputModel.h", 280, (uint64_t)"", 0, (uint64_t)"Not implemented", 15, (void (*)(void **))sub_21023DDB0);
  abort();
}

uint64_t sub_20FF2E394()
{
  return 1;
}

uint64_t sub_20FF2E3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 32);
  if (!v4)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/ChannelInputModel.h", 301, (uint64_t)"processor_", 10, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = *(_QWORD *)(a1 + 32);
    if (!v4)
      sub_20E86D37C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 48))(v4, a2);
}

void sub_20FF2E41C()
{
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF2E430(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24CA0CE30;
  result[1] = v3;
  return result;
}

uint64_t sub_20FF2E464(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24CA0CE30;
  a2[1] = v2;
  return result;
}

void sub_20FF2E480(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  unsigned int v3;

  v1 = *(_QWORD *)(a1 + 8);
  std::mutex::lock((std::mutex *)(v1 + 184));
  v2 = (unsigned int *)(v1 + 128);
  do
    v3 = __ldaxr(v2);
  while (__stlxr(v3 - 1, v2));
  std::condition_variable::notify_one((std::condition_variable *)(v1 + 136));
  std::mutex::unlock((std::mutex *)(v1 + 184));
}

uint64_t sub_20FF2E4C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit3viz13NetworkClient4Impl22BuildNetworkOutputNodeEvE3$_1")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN4cv3d3kit3viz13NetworkClient4Impl22BuildNetworkOutputNodeEvE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit3viz13NetworkClient4Impl22BuildNetworkOutputNodeEvE3$_1"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit3viz13NetworkClient4Impl22BuildNetworkOutputNodeEvE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8;
  return 0;
}

void *sub_20FF2E534()
{
  return &unk_24CA0CEA0;
}

void sub_20FF2E540(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0CEC0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF2E550(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0CEC0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF2E580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 144) + 72) + 72);
  (*(void (**)(uint64_t))(*(_QWORD *)v2 + 64))(v2);
  std::mutex::~mutex((std::mutex *)(a1 + 208));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 160));
  v3 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 144) = 0;
  if (v3)
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  v4 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = 0;
  if (v4)
    (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  if (*(_BYTE *)(a1 + 104))
  {
    v5 = *(_QWORD **)(a1 + 96);
    if (v5 == (_QWORD *)(a1 + 72))
    {
      v6 = 4;
      v5 = (_QWORD *)(a1 + 72);
      goto LABEL_10;
    }
    if (v5)
    {
      v6 = 5;
LABEL_10:
      (*(void (**)(void))(*v5 + 8 * v6))();
    }
  }
  v7 = *(std::__shared_weak_count **)(a1 + 64);
  if (!v7)
    goto LABEL_15;
  p_shared_owners = (unint64_t *)&v7->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    v10 = *(std::__shared_weak_count **)(a1 + 32);
    if (!v10)
      return;
  }
  else
  {
LABEL_15:
    v10 = *(std::__shared_weak_count **)(a1 + 32);
    if (!v10)
      return;
  }
  v11 = (unint64_t *)&v10->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (!v12)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
}

uint64_t sub_20FF2E6B8(uint64_t a1, int *a2, uint64_t a3, uint64_t *a4, __int128 *a5, __int128 *a6, uint64_t a7)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char *v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  uint64_t (***v32)();
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t (***v44)();
  uint64_t v45;
  void **v46;
  uint64_t v47;
  uint64_t v48;
  __int128 *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t **v55;
  std::__shared_weak_count *v56;
  unint64_t *p_shared_owners;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  std::__shared_weak_count *v68;
  unint64_t v69;
  unint64_t *p_shared_weak_owners;
  unint64_t v71;
  unint64_t v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t *v76;
  unint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  unint64_t *v81;
  unint64_t v82;
  void *v83;
  void *v84;
  unint64_t *v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t *v93;
  unint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t **v107;
  uint64_t *v108;
  uint64_t v109;
  std::__shared_weak_count *v110;
  unint64_t *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  __int128 *v118;
  std::__shared_weak_count *v119;
  unint64_t v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  std::__shared_weak_count *v125;
  unint64_t *v126;
  unint64_t v127;
  std::__shared_weak_count *v128;
  unint64_t *v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t *v137;
  __int128 v138;
  __int128 v139;
  uint64_t v140;
  uint64_t **v141;
  uint64_t v142;
  uint64_t **v143;
  _QWORD v144[3];
  _QWORD *v145;
  char v146;
  __int128 v147;
  std::__shared_weak_count *v148;
  void *__p[5];
  char v150;
  char v151;
  __int128 v152;
  uint64_t (**v153)();
  __int128 *v154;
  std::__shared_weak_count *v155;
  uint64_t (**v156)();
  _OWORD v157[3];
  __int128 v158;
  __int128 v159;
  uint64_t (**v160)();
  void *v161[2];
  uint64_t v162;
  uint64_t (**v163)();
  void *v164[2];
  uint64_t (**v165)();
  __int128 v166;
  char v167;
  void *v168;
  char v169;
  char v170;
  _BYTE v171[20];
  int v172;
  __int128 v173;
  _QWORD v174[3];
  _QWORD *v175;
  char v176;
  _QWORD v177[2];
  _QWORD v178[5];

  v178[2] = *MEMORY[0x24BDAC8D0];
  v9 = *a2;
  v11 = *a4;
  v10 = a4[1];
  v140 = *((_QWORD *)a5 + 2);
  v138 = *a6;
  v139 = *a5;
  LOBYTE(v144[0]) = 0;
  v146 = 0;
  v12 = *(unsigned __int8 *)(a7 + 32);
  if (*(_BYTE *)(a7 + 32))
  {
    v13 = *(_QWORD *)(a7 + 24);
    if (v13)
    {
      if (v13 == a7)
      {
        v145 = v144;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a7 + 24))(a7, v144);
        goto LABEL_8;
      }
      v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 16))(v13);
    }
    v145 = (_QWORD *)v13;
LABEL_8:
    v146 = 1;
  }
  v14 = (char *)operator new(0x148uLL);
  *((_QWORD *)v14 + 1) = 0;
  v15 = (unint64_t *)(v14 + 8);
  *(_QWORD *)v14 = &off_24CA0CCE8;
  *(_OWORD *)(v14 + 88) = 0u;
  *(_OWORD *)(v14 + 104) = 0u;
  *(_OWORD *)(v14 + 120) = 0u;
  *(_OWORD *)(v14 + 136) = 0u;
  *(_OWORD *)(v14 + 152) = 0u;
  *(_OWORD *)(v14 + 168) = 0u;
  *(_OWORD *)(v14 + 184) = 0u;
  *(_OWORD *)(v14 + 200) = 0u;
  *(_OWORD *)(v14 + 216) = 0u;
  *(_OWORD *)(v14 + 232) = 0u;
  *(_OWORD *)(v14 + 248) = 0u;
  *(_OWORD *)(v14 + 264) = 0u;
  *(_OWORD *)(v14 + 280) = 0u;
  *(_OWORD *)(v14 + 296) = 0u;
  *(_OWORD *)(v14 + 312) = 0u;
  *((_QWORD *)v14 + 2) = 0;
  *((_QWORD *)v14 + 3) = 850045863;
  *(_OWORD *)(v14 + 73) = 0u;
  *((_OWORD *)v14 + 3) = 0u;
  *((_OWORD *)v14 + 4) = 0u;
  *((_OWORD *)v14 + 2) = 0u;
  *(_QWORD *)a1 = v14 + 24;
  *(_QWORD *)(a1 + 8) = v14;
  *(_OWORD *)(a1 + 16) = v138;
  *(_QWORD *)(a1 + 32) = v14 + 24;
  *(_QWORD *)(a1 + 40) = v14;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  *(_BYTE *)(a1 + 48) = 0;
  v17 = a1 + 48;
  *(_BYTE *)(a1 + 80) = 0;
  if (v12)
  {
    if (v145)
    {
      if (v145 == v144)
      {
        *(_QWORD *)(a1 + 72) = v17;
        (*(void (**)(_QWORD *, uint64_t))(v144[0] + 24))(v144, a1 + 48);
      }
      else
      {
        *(_QWORD *)(a1 + 72) = v145;
        v145 = 0;
      }
    }
    else
    {
      *(_QWORD *)(a1 + 72) = 0;
    }
    v18 = 1;
    *(_BYTE *)(a1 + 80) = 1;
  }
  else
  {
    v18 = 0;
  }
  *(_QWORD *)(a1 + 184) = 850045863;
  *(_OWORD *)(a1 + 88) = v139;
  *(_QWORD *)(a1 + 104) = v140;
  *(_QWORD *)(a1 + 112) = 0;
  v137 = (uint64_t *)(a1 + 112);
  *(_QWORD *)(a1 + 136) = 1018212795;
  *(_QWORD *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_QWORD *)(a1 + 176) = 0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_QWORD *)(a1 + 240) = 0;
  if (v9)
  {
    v19 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)&v173 = *(_QWORD *)(a1 + 32);
    *((_QWORD *)&v173 + 1) = v19;
    if (v19)
    {
      v20 = (unint64_t *)(v19 + 8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
      v18 = *(unsigned __int8 *)(a1 + 80);
    }
    v22 = v174;
    LOBYTE(v174[0]) = 0;
    v176 = 0;
    if (!v18)
    {
LABEL_40:
      v154 = 0;
      v29 = (char *)operator new(0x40uLL);
      v30 = v29;
      *(_QWORD *)v29 = &off_24CA0CD38;
      *(_OWORD *)(v29 + 8) = v173;
      v173 = 0uLL;
      v29[24] = 0;
      v29[56] = 0;
      if (v18)
      {
        if (v175)
        {
          if (v175 == v174)
          {
            *((_QWORD *)v29 + 6) = v29 + 24;
            (*(void (**)(_QWORD *))(v174[0] + 24))(v174);
          }
          else
          {
            *((_QWORD *)v29 + 6) = v175;
            v175 = 0;
          }
        }
        else
        {
          *((_QWORD *)v29 + 6) = 0;
        }
        v30[56] = 1;
      }
      v154 = (__int128 *)v30;
      v31 = (_QWORD *)operator new();
      if (v154)
      {
        if (v154 == &v152)
        {
          *(_QWORD *)&v157[1] = &v156;
          (*(void (**)(__int128 *, uint64_t (***)()))(v152 + 24))(&v152, &v156);
        }
        else
        {
          *(_QWORD *)&v157[1] = v154;
          v154 = 0;
        }
      }
      else
      {
        *(_QWORD *)&v157[1] = 0;
      }
      LOBYTE(__p[0]) = 0;
      LOBYTE(__p[3]) = 0;
      *(_QWORD *)v171 = v11;
      *(_QWORD *)&v171[8] = v10;
      *v31 = off_24CA15FF0;
      sub_21009FFFC(a3, &v156, (uint64_t)__p, v31 + 1);
      if (LOBYTE(__p[3]) && SHIBYTE(__p[2]) < 0)
        operator delete(__p[0]);
      v32 = *(uint64_t (****)())&v157[1];
      if (*(uint64_t (****)())&v157[1] == &v156)
      {
        v33 = 4;
        v32 = &v156;
      }
      else
      {
        if (!*(_QWORD *)&v157[1])
          goto LABEL_60;
        v33 = 5;
      }
      (*v32)[v33]();
LABEL_60:
      v34 = *v137;
      *v137 = (uint64_t)v31;
      if (v34)
        (*(void (**)(uint64_t))(*(_QWORD *)v34 + 8))(v34);
      v35 = v154;
      if (v154 == &v152)
      {
        v36 = 4;
        v35 = &v152;
      }
      else
      {
        if (!v154)
          goto LABEL_67;
        v36 = 5;
      }
      (*(void (**)(void))(*(_QWORD *)v35 + 8 * v36))();
LABEL_67:
      if (v176)
      {
        if (v175 == v174)
        {
          v37 = 4;
          goto LABEL_72;
        }
        if (v175)
        {
          v37 = 5;
          v22 = v175;
LABEL_72:
          (*(void (**)(_QWORD *))(*v22 + 8 * v37))(v22);
        }
      }
      v38 = (std::__shared_weak_count *)*((_QWORD *)&v173 + 1);
      if (!*((_QWORD *)&v173 + 1))
        goto LABEL_124;
      v39 = (unint64_t *)(*((_QWORD *)&v173 + 1) + 8);
      do
        v40 = __ldaxr(v39);
      while (__stlxr(v40 - 1, v39));
      goto LABEL_122;
    }
    v23 = *(_QWORD *)(a1 + 72);
    if (v23)
    {
      if (v23 == v17)
      {
        v175 = v174;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v17 + 24))(a1 + 48, v174);
        goto LABEL_39;
      }
      v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v23 + 16))(v23);
    }
    v175 = (_QWORD *)v23;
LABEL_39:
    v176 = 1;
    goto LABEL_40;
  }
  v24 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)&v173 = *(_QWORD *)(a1 + 32);
  *((_QWORD *)&v173 + 1) = v24;
  if (v24)
  {
    v25 = (unint64_t *)(v24 + 8);
    do
      v26 = __ldxr(v25);
    while (__stxr(v26 + 1, v25));
    v18 = *(unsigned __int8 *)(a1 + 80);
  }
  v27 = v174;
  LOBYTE(v174[0]) = 0;
  v176 = 0;
  if (v18)
  {
    v28 = *(_QWORD *)(a1 + 72);
    if (v28)
    {
      if (v28 == v17)
      {
        v175 = v174;
        (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v17 + 24))(a1 + 48, v174);
        goto LABEL_78;
      }
      v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v28 + 16))(v28);
    }
    v175 = (_QWORD *)v28;
LABEL_78:
    v176 = 1;
  }
  v154 = 0;
  v41 = (char *)operator new(0x40uLL);
  v42 = v41;
  *(_QWORD *)v41 = &off_24CA0CD38;
  *(_OWORD *)(v41 + 8) = v173;
  v173 = 0uLL;
  v41[24] = 0;
  v41[56] = 0;
  if (v18)
  {
    if (v175)
    {
      if (v175 == v174)
      {
        *((_QWORD *)v41 + 6) = v41 + 24;
        (*(void (**)(_QWORD *))(v174[0] + 24))(v174);
      }
      else
      {
        *((_QWORD *)v41 + 6) = v175;
        v175 = 0;
      }
    }
    else
    {
      *((_QWORD *)v41 + 6) = 0;
    }
    v42[56] = 1;
  }
  v154 = (__int128 *)v42;
  v43 = operator new();
  if (v154)
  {
    if (v154 == &v152)
    {
      __p[3] = __p;
      (*(void (**)(__int128 *, void **))(v152 + 24))(&v152, __p);
    }
    else
    {
      __p[3] = v154;
      v154 = 0;
    }
  }
  else
  {
    __p[3] = 0;
  }
  *(_QWORD *)v43 = &off_24CA15FB0;
  if (__p[3])
  {
    if (__p[3] == __p)
    {
      *(_QWORD *)&v157[1] = &v156;
      (*((void (**)(void **, uint64_t (***)()))__p[0] + 3))(__p, &v156);
    }
    else
    {
      *(void **)&v157[1] = __p[3];
      __p[3] = 0;
    }
  }
  else
  {
    *(_QWORD *)&v157[1] = 0;
  }
  sub_21009C6E0(a3, v11, v10, &v156, (uint64_t **)(v43 + 8));
  v44 = *(uint64_t (****)())&v157[1];
  if (*(uint64_t (****)())&v157[1] == &v156)
  {
    v45 = 4;
    v44 = &v156;
  }
  else
  {
    if (!*(_QWORD *)&v157[1])
      goto LABEL_101;
    v45 = 5;
  }
  (*v44)[v45]();
LABEL_101:
  v46 = (void **)__p[3];
  if (__p[3] == __p)
  {
    v47 = 4;
    v46 = __p;
  }
  else
  {
    if (!__p[3])
      goto LABEL_106;
    v47 = 5;
  }
  (*((void (**)(void))*v46 + v47))();
LABEL_106:
  v48 = *v137;
  *v137 = v43;
  if (v48)
    (*(void (**)(uint64_t))(*(_QWORD *)v48 + 8))(v48);
  v49 = v154;
  if (v154 == &v152)
  {
    v50 = 4;
    v49 = &v152;
  }
  else
  {
    if (!v154)
      goto LABEL_113;
    v50 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v49 + 8 * v50))();
LABEL_113:
  if (v176)
  {
    if (v175 == v174)
    {
      v51 = 4;
      goto LABEL_118;
    }
    if (v175)
    {
      v51 = 5;
      v27 = v175;
LABEL_118:
      (*(void (**)(_QWORD *))(*v27 + 8 * v51))(v27);
    }
  }
  v38 = (std::__shared_weak_count *)*((_QWORD *)&v173 + 1);
  if (!*((_QWORD *)&v173 + 1))
    goto LABEL_124;
  v52 = (unint64_t *)(*((_QWORD *)&v173 + 1) + 8);
  do
    v40 = __ldaxr(v52);
  while (__stlxr(v40 - 1, v52));
LABEL_122:
  if (!v40)
  {
    ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
    std::__shared_weak_count::__release_weak(v38);
  }
LABEL_124:
  v53 = operator new();
  v156 = 0;
  v157[0] = 0uLL;
  *(_QWORD *)(v53 + 16) = 0;
  *(_QWORD *)(v53 + 8) = v53 + 16;
  *(_DWORD *)v53 = 1;
  *(_QWORD *)(v53 + 24) = 0;
  *(_QWORD *)(v53 + 32) = 0;
  *(_QWORD *)(v53 + 40) = 0;
  sub_21021781C(v53, (uint64_t *)&v156);
  v142 = v53;
  sub_210217C20(v53, "NetworkOutputNode_WorkQueue", 3, &v141);
  v54 = operator new();
  v55 = v141;
  v141 = 0;
  v143 = v55;
  __p[0] = v55;
  if (v55)
  {
    v56 = (std::__shared_weak_count *)operator new();
    v56->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9B7AA0;
    v56->__shared_owners_ = 0;
    v56->__shared_weak_owners_ = 0;
    v56[1].__vftable = (std::__shared_weak_count_vtbl *)v55;
  }
  else
  {
    v56 = 0;
  }
  v143 = 0;
  *(_QWORD *)v54 = &off_24CA0C4D8;
  strcpy((char *)(v54 + 8), "NetworkOutputNodeAsync");
  *(_BYTE *)(v54 + 31) = 22;
  *(_QWORD *)(v54 + 32) = 0;
  *(_QWORD *)(v54 + 40) = 0;
  *(_QWORD *)(v54 + 48) = 0;
  *(_QWORD *)(v54 + 56) = v55;
  *(_QWORD *)(v54 + 64) = v56;
  __p[0] = 0;
  __p[1] = 0;
  if (v56)
  {
    p_shared_owners = (unint64_t *)&v56->__shared_owners_;
    do
      v58 = __ldxr(p_shared_owners);
    while (__stxr(v58 + 1, p_shared_owners));
    do
      v59 = __ldxr(p_shared_owners);
    while (__stxr(v59 + 1, p_shared_owners));
  }
  *(_QWORD *)&v147 = v177[0];
  v60 = v177[0];
  *(_QWORD *)((char *)&v147 + 7) = *(_QWORD *)((char *)v177 + 7);
  *(_QWORD *)((char *)v178 + 7) = *(_QWORD *)((char *)v177 + 7);
  HIBYTE(v178[0]) = HIBYTE(v177[0]);
  v177[0] = 0;
  *(_QWORD *)((char *)v177 + 7) = 0;
  *(_QWORD *)v171 = v60;
  *(_QWORD *)&v171[7] = *(_QWORD *)((char *)v178 + 7);
  *(_QWORD *)((char *)v178 + 7) = 0;
  v178[0] = 0;
  if (v56)
  {
    v61 = (unint64_t *)&v56->__shared_owners_;
    do
      v62 = __ldxr(v61);
    while (__stxr(v62 + 1, v61));
  }
  v63 = operator new();
  *(_QWORD *)&v152 = *(_QWORD *)v171;
  *(_QWORD *)((char *)&v152 + 7) = *(_QWORD *)&v171[7];
  *(_QWORD *)v171 = 0;
  *(_QWORD *)&v171[7] = 0;
  *(_BYTE *)(v63 + 8) = 1;
  *(_QWORD *)(v63 + 32) = 0;
  *(_QWORD *)(v63 + 40) = 0;
  *(_QWORD *)v63 = &off_24CA0C570;
  *(_QWORD *)(v63 + 16) = &unk_24CA0C5E8;
  *(_QWORD *)(v63 + 24) = &unk_24CA0C628;
  *(_QWORD *)(v63 + 63) = *(_QWORD *)((char *)&v152 + 7);
  v64 = v152;
  *(_QWORD *)(v63 + 48) = 0x6C656E6E616863;
  *(_QWORD *)(v63 + 56) = v64;
  *(_BYTE *)(v63 + 71) = 7;
  *(_QWORD *)&v152 = 0;
  *(_QWORD *)((char *)&v152 + 7) = 0;
  *(_QWORD *)(v63 + 72) = v55;
  *(_QWORD *)(v63 + 80) = v56;
  v65 = (_QWORD *)operator new();
  *v65 = &off_24CA0C710;
  v65[1] = a1;
  *(_QWORD *)(v63 + 136) = 0;
  *(_QWORD *)(v63 + 88) = v65;
  *(_QWORD *)(v63 + 96) = v63 + 96;
  *(_QWORD *)(v63 + 104) = v63 + 96;
  *(_QWORD *)(v63 + 112) = 0;
  *(_QWORD *)(v63 + 120) = v63 + 120;
  *(_QWORD *)(v63 + 128) = v63 + 120;
  *(_QWORD *)(v63 + 144) = 0;
  if (!*(_QWORD *)(v63 + 72)
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/detail/Processor.h", 109, (uint64_t)"scheduler_", 10, (uint64_t)"scheduler must be valid", 23, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  v66 = (std::__shared_weak_count *)operator new();
  v66->__shared_owners_ = 0;
  v67 = (unint64_t *)&v66->__shared_owners_;
  v66->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0CBD0;
  v66->__shared_weak_owners_ = 0;
  v66[1].__vftable = (std::__shared_weak_count_vtbl *)v63;
  v68 = *(std::__shared_weak_count **)(v63 + 40);
  if (v68)
  {
    if (v68->__shared_owners_ != -1)
      goto LABEL_149;
    do
      v69 = __ldxr(v67);
    while (__stxr(v69 + 1, v67));
    p_shared_weak_owners = (unint64_t *)&v66->__shared_weak_owners_;
    do
      v71 = __ldxr(p_shared_weak_owners);
    while (__stxr(v71 + 1, p_shared_weak_owners));
    *(_QWORD *)(v63 + 32) = v63;
    *(_QWORD *)(v63 + 40) = v66;
    std::__shared_weak_count::__release_weak(v68);
  }
  else
  {
    do
      v72 = __ldxr(v67);
    while (__stxr(v72 + 1, v67));
    v73 = (unint64_t *)&v66->__shared_weak_owners_;
    do
      v74 = __ldxr(v73);
    while (__stxr(v74 + 1, v73));
    *(_QWORD *)(v63 + 32) = v63;
    *(_QWORD *)(v63 + 40) = v66;
  }
  do
    v75 = __ldaxr(v67);
  while (__stlxr(v75 - 1, v67));
  if (!v75)
  {
    ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
    std::__shared_weak_count::__release_weak(v66);
  }
LABEL_149:
  v156 = &off_24CA0C508;
  strcpy((char *)v157, "channel");
  *((_QWORD *)&v157[0] + 1) = v147;
  *(_QWORD *)((char *)v157 + 15) = *(_QWORD *)((char *)&v147 + 7);
  BYTE7(v157[1]) = 7;
  *(_QWORD *)&v147 = 0;
  *(_QWORD *)((char *)&v147 + 7) = 0;
  *((_QWORD *)&v157[1] + 1) = 0x7974706D45;
  *(_QWORD *)&v157[2] = v152;
  *(_QWORD *)((char *)&v157[2] + 7) = *(_QWORD *)((char *)&v152 + 7);
  HIBYTE(v157[2]) = 5;
  *(_QWORD *)&v152 = 0;
  *(_QWORD *)((char *)&v152 + 7) = 0;
  *(_QWORD *)&v158 = v55;
  *((_QWORD *)&v158 + 1) = v56;
  v76 = (unint64_t *)&v66->__shared_weak_owners_;
  *(_QWORD *)&v159 = v63;
  *((_QWORD *)&v159 + 1) = v66;
  do
    v77 = __ldxr(v76);
  while (__stxr(v77 + 1, v76));
  v160 = &off_24CA0C538;
  v78 = (_QWORD *)operator new();
  *v78 = &off_24CA0CC20;
  v78[1] = v63;
  v78[2] = v66;
  v161[0] = v78;
  v80 = *((_QWORD *)&v159 + 1);
  v79 = (char *)v159;
  if (!*((_QWORD *)&v159 + 1))
  {
    v161[1] = (void *)v159;
    v162 = 0;
    if ((_QWORD)v159)
      v84 = (void *)(v159 + 16);
    else
      v84 = 0;
    goto LABEL_168;
  }
  v81 = (unint64_t *)(*((_QWORD *)&v159 + 1) + 16);
  do
    v82 = __ldxr(v81);
  while (__stxr(v82 + 1, v81));
  v83 = (void *)*((_QWORD *)&v159 + 1);
  v161[1] = v79;
  v162 = v80;
  if ((_QWORD)v159)
    v84 = (void *)(v159 + 16);
  else
    v84 = 0;
  if (!*((_QWORD *)&v159 + 1))
  {
    v79 = (char *)v159;
LABEL_168:
    v87 = 0;
    v163 = &off_24C9CC9A0;
    v164[0] = v84;
    v164[1] = 0;
    goto LABEL_169;
  }
  v85 = (unint64_t *)(*((_QWORD *)&v159 + 1) + 16);
  do
    v86 = __ldxr(v85);
  while (__stxr(v86 + 1, v85));
  v87 = *((_QWORD *)&v159 + 1);
  v79 = (char *)v159;
  v163 = &off_24C9CC9A0;
  v164[0] = v84;
  v164[1] = v83;
  if (*((_QWORD *)&v159 + 1))
  {
    v88 = (unint64_t *)(*((_QWORD *)&v159 + 1) + 16);
    do
      v89 = __ldxr(v88);
    while (__stxr(v89 + 1, v88));
  }
LABEL_169:
  if (v79)
    v90 = v79 + 24;
  else
    v90 = 0;
  v165 = &off_24C9B2310;
  *(_QWORD *)&v166 = v90;
  *((_QWORD *)&v166 + 1) = v87;
  v91 = operator new();
  *(_QWORD *)v91 = &off_24CA0C508;
  *(_OWORD *)(v91 + 8) = v157[0];
  *(_QWORD *)(v91 + 24) = *(_QWORD *)&v157[1];
  memset(v157, 0, 24);
  *(_OWORD *)(v91 + 32) = *(_OWORD *)((char *)&v157[1] + 8);
  *(_QWORD *)(v91 + 48) = *((_QWORD *)&v157[2] + 1);
  memset((char *)&v157[1] + 8, 0, 24);
  *(_OWORD *)(v91 + 56) = v158;
  v158 = 0uLL;
  *(_OWORD *)(v91 + 72) = v159;
  v159 = 0uLL;
  *(_QWORD *)(v91 + 88) = &off_24CA0C538;
  *(_OWORD *)(v91 + 96) = *(_OWORD *)v161;
  v92 = v162;
  v161[1] = 0;
  v162 = 0;
  *(_QWORD *)(v91 + 112) = v92;
  *(_QWORD *)(v91 + 120) = &off_24C9CC9A0;
  *(_OWORD *)(v91 + 128) = *(_OWORD *)v164;
  v164[0] = 0;
  v164[1] = 0;
  v161[0] = 0;
  *(_QWORD *)(v91 + 144) = &off_24C9B2310;
  *(_OWORD *)(v91 + 152) = v166;
  v166 = 0uLL;
  *(_QWORD *)(v54 + 72) = v91;
  sub_20FF2AF20((uint64_t)&v156);
  if (!v56)
    goto LABEL_271;
  v93 = (unint64_t *)&v56->__shared_owners_;
  do
    v94 = __ldaxr(v93);
  while (__stlxr(v94 - 1, v93));
  if (!v94)
  {
    ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
    std::__shared_weak_count::__release_weak(v56);
    if (*(_QWORD *)(v54 + 56))
      goto LABEL_180;
  }
  else
  {
LABEL_271:
    if (*(_QWORD *)(v54 + 56))
      goto LABEL_180;
  }
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Concurrency/include/Kit/Concurrency/Channel/Node.h", 374, (uint64_t)"scheduler_ != nullptr", 21, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
LABEL_180:
  v95 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    v96 = (unint64_t *)((char *)__p[1] + 8);
    do
      v97 = __ldaxr(v96);
    while (__stlxr(v97 - 1, v96));
    if (!v97)
    {
      ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
      std::__shared_weak_count::__release_weak(v95);
    }
  }
  v98 = (uint64_t)v143;
  if (v143)
  {
    v99 = *v143;
    *v143 = 0;
    if (v99)
      sub_2102175D4(v98, v99);
    MEMORY[0x212BC6398](v98, 0x20C4093837F09);
  }
  v100 = *(_QWORD *)(v54 + 72);
  v101 = (_QWORD *)operator new();
  v101[1] = &off_24CA0CE30;
  v102 = v101 + 1;
  *v101 = &off_24CA0CDC8;
  v101[2] = a1;
  v101[4] = v101 + 1;
  v156 = &off_24C9B2630;
  v103 = (_QWORD *)operator new();
  *v103 = &off_24CA0CDC8;
  v104 = v103 + 1;
  v105 = v101[4];
  if (!v105)
    goto LABEL_192;
  if ((_QWORD *)v105 != v102)
  {
    v105 = (*(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)v105 + 16))(v105, v104);
LABEL_192:
    v103[4] = v105;
    goto LABEL_194;
  }
  v103[4] = v104;
  (*(void (**)(_QWORD *))(*v102 + 24))(v102);
LABEL_194:
  *(_QWORD *)&v157[0] = v103;
  (*(void (**)(uint64_t, uint64_t (***)()))(*(_QWORD *)(v100 + 120) + 16))(v100 + 120, &v156);
  v106 = *(_QWORD *)&v157[0];
  v156 = &off_24C9B2630;
  *(_QWORD *)&v157[0] = 0;
  if (v106)
    (*(void (**)(uint64_t))(*(_QWORD *)v106 + 8))(v106);
  (*(void (**)(_QWORD *))(*v101 + 8))(v101);
  v107 = v141;
  if (v141)
  {
    v108 = *v141;
    *v141 = 0;
    if (v108)
      sub_2102175D4((uint64_t)v107, v108);
    MEMORY[0x212BC6398](v107, 0x20C4093837F09);
  }
  v109 = v142;
  v142 = 0;
  if (v109)
  {
    v110 = *(std::__shared_weak_count **)(v109 + 40);
    if (v110)
    {
      v111 = (unint64_t *)&v110->__shared_owners_;
      do
        v112 = __ldaxr(v111);
      while (__stlxr(v112 - 1, v111));
      if (!v112)
      {
        ((void (*)(std::__shared_weak_count *))v110->__on_zero_shared)(v110);
        std::__shared_weak_count::__release_weak(v110);
      }
    }
    sub_20E8D1F68(v109 + 8, *(_QWORD *)(v109 + 16));
    MEMORY[0x212BC6398](v109, 0x1020C401722722ELL);
  }
  v113 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v54;
  if (v113)
    (*(void (**)(uint64_t))(*(_QWORD *)v113 + 8))(v113);
  *(_QWORD *)v171 = 0x500000001;
  v156 = (uint64_t (**)())1;
  LODWORD(v157[0]) = 0;
  __p[0] = (void *)0x200000001;
  *(_DWORD *)&v171[8] = 0;
  v172 = 0;
  *(_QWORD *)&v171[12] = 0x200000001;
  if (*(_BYTE *)(a1 + 24))
  {
    v114 = *(_QWORD *)(a1 + 16);
    v115 = 1;
  }
  else
  {
    v114 = 0;
    v115 = 0;
  }
  sub_20FF195E4(v114, v115, (__n128 *)v171, (uint64_t)&v156);
  __p[0] = 0;
  __p[1] = (void *)v178[0];
  *(void **)((char *)&__p[1] + 7) = *(void **)((char *)v178 + 7);
  v178[0] = 0;
  *(_QWORD *)((char *)v178 + 7) = 0;
  *(_WORD *)((char *)&__p[2] + 7) = 0;
  v151 = 0;
  sub_20FF24634(&v147, (uint64_t)&v156);
  v116 = (std::__shared_weak_count *)operator new(0x50uLL);
  v116->__shared_owners_ = 0;
  v117 = (unint64_t *)&v116->__shared_owners_;
  v116->__shared_weak_owners_ = 0;
  v116->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA078E8;
  v116[1].std::__shared_count = *(std::__shared_count *)__p;
  v116[1].__shared_weak_owners_ = (uint64_t)__p[2];
  memset(__p, 0, 24);
  LOBYTE(v116[2].__vftable) = 0;
  LOBYTE(v116[3].__vftable) = 0;
  v118 = (__int128 *)*((_QWORD *)&v147 + 1);
  v119 = v148;
  *((_QWORD *)&v147 + 1) = 0;
  v148 = 0;
  *(_QWORD *)&v152 = v116 + 1;
  *((_QWORD *)&v152 + 1) = v116;
  do
    v120 = __ldxr(v117);
  while (__stxr(v120 + 1, v117));
  v153 = &off_24CA0C0E8;
  v154 = v118;
  v155 = v119;
  if (v119)
  {
    v121 = (unint64_t *)&v119->__shared_owners_;
    do
      v122 = __ldxr(v121);
    while (__stxr(v122 + 1, v121));
    do
      v123 = __ldaxr(v121);
    while (__stlxr(v123 - 1, v121));
    if (!v123)
    {
      ((void (*)(std::__shared_weak_count *))v119->__on_zero_shared)(v119);
      std::__shared_weak_count::__release_weak(v119);
    }
  }
  do
    v124 = __ldaxr(v117);
  while (__stlxr(v124 - 1, v117));
  if (!v124)
  {
    ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
    std::__shared_weak_count::__release_weak(v116);
  }
  sub_20FF2328C(a1, (uint64_t)&v152);
  v125 = v155;
  if (v155)
  {
    v126 = (unint64_t *)&v155->__shared_owners_;
    do
      v127 = __ldaxr(v126);
    while (__stlxr(v127 - 1, v126));
    if (!v127)
    {
      ((void (*)(std::__shared_weak_count *))v125->__on_zero_shared)(v125);
      std::__shared_weak_count::__release_weak(v125);
    }
  }
  v128 = (std::__shared_weak_count *)*((_QWORD *)&v152 + 1);
  if (*((_QWORD *)&v152 + 1))
  {
    v129 = (unint64_t *)(*((_QWORD *)&v152 + 1) + 8);
    do
      v130 = __ldaxr(v129);
    while (__stlxr(v130 - 1, v129));
    if (!v130)
    {
      ((void (*)(std::__shared_weak_count *))v128->__on_zero_shared)(v128);
      std::__shared_weak_count::__release_weak(v128);
    }
  }
  v131 = v148;
  if (v148)
  {
    v132 = (unint64_t *)&v148->__shared_owners_;
    do
      v133 = __ldaxr(v132);
    while (__stlxr(v133 - 1, v132));
    if (!v133)
    {
      ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
      std::__shared_weak_count::__release_weak(v131);
    }
  }
  if (v151 && v150 < 0)
    operator delete(__p[3]);
  if (SHIBYTE(__p[2]) < 0)
  {
    operator delete(__p[0]);
    if (!v170)
      goto LABEL_251;
LABEL_245:
    if (v169 < 0)
    {
      operator delete(v168);
      if ((v167 & 0x80000000) == 0)
      {
LABEL_247:
        if ((SHIBYTE(v165) & 0x80000000) == 0)
          goto LABEL_248;
        goto LABEL_260;
      }
    }
    else if ((v167 & 0x80000000) == 0)
    {
      goto LABEL_247;
    }
    operator delete((void *)v166);
    if ((SHIBYTE(v165) & 0x80000000) == 0)
    {
LABEL_248:
      if ((SHIBYTE(v163) & 0x80000000) == 0)
        goto LABEL_249;
      goto LABEL_261;
    }
LABEL_260:
    operator delete(v164[0]);
    if ((SHIBYTE(v163) & 0x80000000) == 0)
    {
LABEL_249:
      if ((SHIBYTE(v161[0]) & 0x80000000) == 0)
        goto LABEL_250;
      goto LABEL_262;
    }
LABEL_261:
    operator delete(v161[1]);
    if ((SHIBYTE(v161[0]) & 0x80000000) == 0)
    {
LABEL_250:
      if ((SBYTE7(v159) & 0x80000000) == 0)
        goto LABEL_251;
      goto LABEL_263;
    }
LABEL_262:
    operator delete(*((void **)&v159 + 1));
    if ((SBYTE7(v159) & 0x80000000) == 0)
      goto LABEL_251;
LABEL_263:
    operator delete((void *)v158);
    if (!BYTE8(v157[2]))
      goto LABEL_254;
    goto LABEL_252;
  }
  if (v170)
    goto LABEL_245;
LABEL_251:
  if (!BYTE8(v157[2]))
    goto LABEL_254;
LABEL_252:
  if (SBYTE7(v157[2]) < 0)
    operator delete(*(void **)&v157[1]);
LABEL_254:
  if (v146)
  {
    v134 = v145;
    if (v145 == v144)
    {
      v135 = 4;
      v134 = v144;
      goto LABEL_266;
    }
    if (v145)
    {
      v135 = 5;
LABEL_266:
      (*(void (**)(void))(*v134 + 8 * v135))();
    }
  }
  return a1;
}

void sub_20FF2FA38(_Unwind_Exception *a1, int a2)
{
  if (a2)
    sub_20E860DA4(a1);
  _Unwind_Resume(a1);
}

void sub_20FF30194()
{
  JUMPOUT(0x20FF300E8);
}

void sub_20FF3019C()
{
  JUMPOUT(0x20FF300F0);
}

void sub_20FF301A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43)
{
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  sub_20E86665C(v45);
  sub_20E8D1F68(v44, *(_QWORD *)(v43 + 16));
  sub_20E92DA24(&a43);
  MEMORY[0x212BC6398](v43, 0x1020C401722722ELL);
  JUMPOUT(0x20FF300F8);
}

void sub_20FF301E0()
{
  JUMPOUT(0x20FF300F8);
}

void sub_20FF301E8()
{
  int v0;

  if (v0)
    JUMPOUT(0x20FF301F0);
  JUMPOUT(0x20FF30158);
}

void sub_20FF3021C(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18[4];
  int __src;
  uint64_t v20;

  v4 = (char *)(a2 + 4);
  LODWORD(v17) = 1;
  v5 = a1 + 24;
  sub_2100B8FD4(a1 + 24, *(char **)(a1 + 32), (char *)&v17, (char *)&v17 + 4, 4);
  sub_2100B6A04((_QWORD *)a1);
  sub_2100B8FD4(v5, *(char **)(a1 + 32), v4, (char *)(a2 + 8), 4);
  sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)(a2 + 8), (char *)(a2 + 12), 4);
  sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)(a2 + 12), (char *)(a2 + 16), 4);
  sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)(a2 + 16), (char *)(a2 + 20), 4);
  sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)(a2 + 20), (char *)(a2 + 24), 4);
  sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)(a2 + 24), (char *)(a2 + 28), 4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v6 + 10) = *(_QWORD *)(a1 + 32) - v6 - 18;
  *(_QWORD *)(a1 + 56) -= 8;
  if (*(_BYTE *)(a2 + 80))
  {
    LOBYTE(v17) = 1;
    sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)&v17, (char *)&v17 + 1, 1);
    LODWORD(v17) = 1;
    sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)&v17, (char *)&v17 + 4, 4);
    sub_2100B6A04((_QWORD *)a1);
    v17 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(_QWORD *)(a2 + 40) - *(_QWORD *)(a2 + 32)) >> 3);
    sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)&v17, v18, 8);
    v7 = *(_QWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    v9 = 0x2E8BA2E8BA2E8BA3 * ((v8 - v7) >> 3);
    if (v17 <= v9)
    {
      if (v17 < v9)
      {
        v10 = v7 + 88 * v17;
        while (v8 != v10)
        {
          v8 -= 88;
          sub_20FF2B9E4(v8);
        }
        *(_QWORD *)(a2 + 40) = v10;
      }
    }
    else
    {
      sub_20FF2DBF8((void **)(a2 + 32), v17 - v9);
    }
    v11 = v17;
    if (v17)
    {
      v12 = 0;
      do
      {
        v13 = *(_QWORD *)(a2 + 32) + v12;
        __src = 2;
        sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&v20, 4);
        sub_2100B6A04((_QWORD *)a1);
        sub_20FF27940(a1, v13);
        v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
        *(_QWORD *)(v14 + 10) = *(_QWORD *)(a1 + 32) - v14 - 18;
        v15 = *(_QWORD *)(a1 + 56) - 8;
        *(_QWORD *)(a1 + 56) = v15;
        v12 += 88;
        --v11;
      }
      while (v11);
    }
    else
    {
      v15 = *(_QWORD *)(a1 + 56);
    }
    v16 = *(_QWORD *)(v15 - 8) + *(_QWORD *)(a1 + 24);
    *(_QWORD *)(v16 + 10) = *(_QWORD *)(a1 + 32) - v16 - 18;
    *(_QWORD *)(a1 + 56) -= 8;
  }
  else
  {
    LOBYTE(v17) = 0;
    sub_2100B8FD4(v5, *(char **)(a1 + 32), (char *)&v17, (char *)&v17 + 1, 1);
  }
}

void sub_20FF30518()
{
  JUMPOUT(0x212BC6398);
}

const char *sub_20FF3052C()
{
  return "cv3d.net";
}

void sub_20FF3053C(int a1@<W1>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  char *v4;
  uint64_t (**v5)();
  char *v6;
  char *v7;
  void *v8;
  void *v9;
  char *v10;
  uint64_t v11;
  void *__p;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char **v20;
  char *v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  void *v36;
  char v37;
  char v38;
  char v39;
  void *v40;
  char v41;
  char v42;
  void *v43;
  char v44;
  char v45;
  void *v46;
  char v47;
  char v48;
  void *v49;
  char v50;
  void *v51;
  char v52;
  char v53;
  void *v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  switch(a1)
  {
    case 1:
      LOBYTE(__p) = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v18 = 0;
      v19 = 0;
      v17 = 0;
      v9 = 0;
      v10 = 0;
      LODWORD(v11) = 0;
      v3 = operator new(0x1B8uLL);
      v3[1] = 0;
      v3[2] = 0;
      *v3 = &off_24CA0D188;
      LOBYTE(v36) = 0;
      v39 = 0;
      LOBYTE(v40) = 0;
      v56 = 0;
      v33 = 0;
      v34 = 0;
      v35 = 0;
      v57 = 0;
      v59 = 0;
      v58 = 0;
      v3[3] = off_24CA086A8;
      v24 = 0;
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      v30 = 0;
      v31 = 0;
      v32 = 0;
      v20 = 0;
      v21 = 0;
      v3[4] = &unk_24CA08708;
      LOBYTE(v22) = 0;
      sub_20FF32248((uint64_t)&v20, (uint64_t)(v3 + 5));
      sub_20FDDBB58((uint64_t)(v3 + 28), &v33);
      v3[3] = off_24CA08600;
      v3[4] = &unk_24CA08660;
      sub_20EB0580C((uint64_t)&v20);
      if (!v56)
        goto LABEL_9;
      if (v55 < 0)
      {
        operator delete(v54);
        if ((v53 & 0x80000000) == 0)
        {
LABEL_5:
          if ((v50 & 0x80000000) == 0)
            goto LABEL_6;
          goto LABEL_34;
        }
      }
      else if ((v53 & 0x80000000) == 0)
      {
        goto LABEL_5;
      }
      operator delete(v51);
      if ((v50 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v48 & 0x80000000) == 0)
          goto LABEL_7;
        goto LABEL_35;
      }
LABEL_34:
      operator delete(v49);
      if ((v48 & 0x80000000) == 0)
      {
LABEL_7:
        if ((v45 & 0x80000000) == 0)
          goto LABEL_8;
        goto LABEL_36;
      }
LABEL_35:
      operator delete(v46);
      if ((v45 & 0x80000000) == 0)
      {
LABEL_8:
        if ((v42 & 0x80000000) == 0)
          goto LABEL_9;
        goto LABEL_37;
      }
LABEL_36:
      operator delete(v43);
      if ((v42 & 0x80000000) == 0)
      {
LABEL_9:
        if (v39)
          goto LABEL_10;
        goto LABEL_12;
      }
LABEL_37:
      operator delete(v40);
      if (v39)
      {
LABEL_10:
        if (v38 < 0)
          operator delete(v36);
      }
LABEL_12:
      *a2 = v3 + 3;
      goto LABEL_30;
    case 2:
      v3 = operator new(0x120uLL);
      v3[1] = 0;
      v3[2] = 0;
      *v3 = &off_24CA0D0F0;
      v3[3] = off_24CA08508;
      v4 = (char *)(v3 + 3);
      v37 = 0;
      v39 = 0;
      v41 = 0;
      LOBYTE(v43) = 0;
      v44 = 0;
      v47 = 0;
      v52 = 0;
      LOBYTE(v54) = 0;
      v56 = 0;
      v33 = 0;
      v34 = 0;
      LOBYTE(v35) = 0;
      v3[4] = &unk_24CA08568;
      sub_20FF32248((uint64_t)&v33, (uint64_t)(v3 + 5));
      *((_BYTE *)v3 + 224) = 0;
      *((_BYTE *)v3 + 232) = 0;
      *((_BYTE *)v3 + 280) = 0;
      v5 = off_24CA08460;
      goto LABEL_25;
    case 3:
      v21 = 0;
      v22 = 0;
      v20 = &v21;
      v3 = operator new(0xF8uLL);
      v3[1] = 0;
      v3[2] = 0;
      *v3 = &off_24CA0D1D8;
      v4 = (char *)(v3 + 3);
      v10 = 0;
      v11 = 0;
      v9 = &v10;
      v37 = 0;
      v39 = 0;
      v41 = 0;
      LOBYTE(v43) = 0;
      v44 = 0;
      v47 = 0;
      v52 = 0;
      LOBYTE(v54) = 0;
      v56 = 0;
      v33 = 0;
      v34 = 0;
      LOBYTE(v35) = 0;
      sub_20FF32C30((uint64_t)(v3 + 3), (const void ***)&v9, (uint64_t)&v33);
      v3[3] = off_24CA08870;
      v3[4] = &unk_24CA088D0;
      sub_20EB0580C((uint64_t)&v33);
      sub_20E866BE0((uint64_t)&v9, v10);
      sub_20E866BE0((uint64_t)&v20, v21);
      goto LABEL_29;
    case 4:
      v25 = 0;
      v23 = 0;
      v3 = operator new(0x118uLL);
      v3[1] = 0;
      v3[2] = 0;
      *v3 = &off_24CA0D228;
      v4 = (char *)(v3 + 3);
      v9 = 0;
      v10 = 0;
      v11 = 0;
      v21 = 0;
      v22 = 0;
      v20 = 0;
      LOBYTE(__p) = 0;
      v14 = 0;
      v37 = 0;
      v39 = 0;
      v41 = 0;
      LOBYTE(v43) = 0;
      v44 = 0;
      v47 = 0;
      v52 = 0;
      LOBYTE(v54) = 0;
      v56 = 0;
      v33 = 0;
      v34 = 0;
      LOBYTE(v35) = 0;
      sub_20FF32E04((uint64_t)(v3 + 3), (uint64_t)&v9, (uint64_t)&v33);
      v3[3] = &off_24CA08A10;
      v3[4] = &unk_24CA08A70;
      sub_20EB0580C((uint64_t)&v33);
      if (v14 && v13 < 0)
        operator delete(__p);
      v6 = (char *)v9;
      if (v9)
      {
        v7 = v10;
        v8 = v9;
        if (v10 != v9)
        {
          do
          {
            if (*(v7 - 9) < 0)
              operator delete(*((void **)v7 - 4));
            v7 -= 32;
          }
          while (v7 != v6);
          v8 = v9;
        }
        v10 = v6;
        operator delete(v8);
      }
      goto LABEL_29;
    case 5:
      v3 = operator new(0x118uLL);
      v3[1] = 0;
      v3[2] = 0;
      *v3 = &off_24CA0D278;
      v3[3] = off_24CA08CF8;
      v4 = (char *)(v3 + 3);
      v37 = 0;
      v39 = 0;
      v41 = 0;
      LOBYTE(v43) = 0;
      v44 = 0;
      v47 = 0;
      v52 = 0;
      LOBYTE(v54) = 0;
      v56 = 0;
      v33 = 0;
      v34 = 0;
      LOBYTE(v35) = 0;
      v3[4] = &unk_24CA08D58;
      sub_20FF32248((uint64_t)&v33, (uint64_t)(v3 + 5));
      *((_BYTE *)v3 + 232) = 0;
      *((_BYTE *)v3 + 272) = 0;
      v5 = off_24CA08C50;
LABEL_25:
      v3[3] = v5;
      v3[4] = v5 + 12;
      sub_20EB0580C((uint64_t)&v33);
LABEL_29:
      *a2 = v4;
LABEL_30:
      a2[1] = v3;
      return;
    default:
      *a2 = 0;
      a2[1] = 0;
      return;
  }
}

void sub_20FF30A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, __int16 a10, char a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a68;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  void *v72;

  v71 = *(unsigned int *)(v68 + 216);
  if ((_DWORD)v71 != -1)
    ((void (*)(char *, uint64_t))off_24CA0D130[v71])(&a12, v69);
  *(_DWORD *)(v68 + 216) = -1;
  sub_20EB0580C((uint64_t)&a42);
  sub_20FD0F35C((uint64_t)&a68);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v68);
  operator delete(v72);
  sub_20FD0F35C((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_20FF30B48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20FD0F35C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF30B5C(void *lpsrc@<X2>, int a2@<W1>, uint64_t a3@<X8>)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  int v11;
  char v12;
  __int128 v13;
  __int128 v14;

  switch(a2)
  {
    case 1:
      sub_20FF30F0C(lpsrc, &v14);
      goto LABEL_7;
    case 2:
      sub_20FF30D40(lpsrc, &v14);
      goto LABEL_7;
    case 3:
      sub_20FF30FEC(lpsrc, &v14);
      goto LABEL_7;
    case 4:
      sub_20FF310CC(lpsrc, &v14);
LABEL_7:
      *(_OWORD *)a3 = v14;
      break;
    case 5:
      v4 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA07B10, 0);
      if (v4)
      {
        v5 = (uint64_t)v4 + 8;
        v6 = (uint64_t)v4 + 64;
      }
      else
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)&unk_2102CCD69, 0, (void (*)(void **))sub_21023DDB0))
        {
          abort();
        }
        v5 = 8;
        v6 = 64;
      }
      v7 = operator new(0x118uLL);
      v7[1] = 0;
      v7[2] = 0;
      *v7 = &off_24CA0D278;
      v8 = *(_QWORD *)v5;
      v9 = *(_OWORD *)(v5 + 8);
      v10 = *(_OWORD *)(v5 + 24);
      v11 = *(unsigned __int8 *)(v5 + 40);
      v7[3] = off_24CA08CF8;
      v13 = v10;
      v14 = v9;
      v7[4] = &unk_24CA08D58;
      sub_20FF32248(v6, (uint64_t)(v7 + 5));
      if (v11)
      {
        v7[29] = v8;
        *((_OWORD *)v7 + 15) = v14;
        *((_OWORD *)v7 + 16) = v13;
        v12 = 1;
      }
      else
      {
        v12 = 0;
        *((_BYTE *)v7 + 232) = 0;
      }
      *((_BYTE *)v7 + 272) = v12;
      v7[3] = off_24CA08C50;
      v7[4] = &unk_24CA08CB0;
      *(_QWORD *)a3 = v7 + 3;
      *(_QWORD *)(a3 + 8) = v7;
      break;
    default:
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      break;
  }
}

void sub_20FF30D28(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_20FF30D40(const void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;

  v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA07990, 0);
  v14 = a2;
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 64;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)&unk_2102CCD69, 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 64;
  }
  v6 = operator new(0x120uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D0F0;
  v8 = *(_QWORD *)v4;
  v7 = *(_QWORD *)(v4 + 8);
  v10 = *(_QWORD *)(v4 + 16);
  v9 = *(_QWORD *)(v4 + 24);
  v13 = *(_QWORD *)(v4 + 32);
  v11 = *(_DWORD *)(v4 + 40);
  v12 = *(unsigned __int8 *)(v4 + 48);
  v6[3] = off_24CA08508;
  v6[4] = &unk_24CA08568;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  if (v12)
  {
    if (v11)
    {
      *((_BYTE *)v6 + 224) = 2;
      *((_BYTE *)v6 + 232) = 0;
      *((_BYTE *)v6 + 280) = 0;
      if (v11 != 1)
        sub_20E877AB8();
      *((_BYTE *)v6 + 232) = v8;
      v6[30] = v7;
      v6[31] = v10;
      v6[32] = v9;
      *((_DWORD *)v6 + 68) = 1;
    }
    else
    {
      *((_BYTE *)v6 + 224) = 1;
      v6[29] = v8;
      v6[30] = v7;
      v6[31] = v10;
      v6[32] = v9;
      v6[33] = v13;
      *((_DWORD *)v6 + 68) = 0;
    }
    *((_BYTE *)v6 + 280) = 1;
  }
  else
  {
    *((_BYTE *)v6 + 224) = 0;
    *((_BYTE *)v6 + 232) = 0;
    *((_BYTE *)v6 + 280) = 0;
  }
  v6[3] = off_24CA08460;
  v6[4] = &unk_24CA084C0;
  *v14 = v6 + 3;
  v14[1] = v6;
}

void sub_20FF30ED4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  uint64_t v2;
  void *v4;

  sub_20FF325E4(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_20FF30EF4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF30F0C@<X0>(const void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *result;

  v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA087F8, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 240;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)&unk_2102CCD69, 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 240;
  }
  v6 = operator new(0x1B8uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D188;
  result = sub_20FF33138(v6 + 3, (__int128 *)v4, v5);
  *a2 = v6 + 3;
  a2[1] = v6;
  return result;
}

void sub_20FF30FD4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF30FEC@<X0>(const void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *result;

  v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA07A60, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)&unk_2102CCD69, 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0xF8uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D1D8;
  result = sub_20FF333C4(v6 + 3, (const void ***)v4, v5);
  *a2 = v6 + 3;
  a2[1] = v6;
  return result;
}

void sub_20FF310B4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF310CC@<X0>(const void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *result;

  v3 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA07AE0, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 64;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)&unk_2102CCD69, 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 64;
  }
  v6 = operator new(0x118uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D228;
  result = sub_20FF334CC(v6 + 3, v4, v5);
  *a2 = v6 + 3;
  a2[1] = v6;
  return result;
}

void sub_20FF31194(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

BOOL sub_20FF311AC(uint64_t a1, int a2)
{
  return (a2 - 1) < 5;
}

uint64_t sub_20FF311BC(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  size_t v5;
  void **v6;
  unint64_t v7;
  unint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _BYTE v16[24];
  int v17;
  void *__dst[2];
  unint64_t v19;
  _QWORD v20[5];
  _QWORD *v21;

  v17 = 0;
  v3 = operator new();
  *(_QWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_20E863438(v3);
  if (a2 >= 6
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NetworkData.cpp", 103, (uint64_t)"idx < static_cast<uint32_t>(NetworkDataType::End)", 49, (uint64_t)&unk_2102CCD69, 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  sub_20E86A980((_QWORD *)(v3 + 16), (uint64_t)(&off_24CA0CFA0)[2 * a2], (uint64_t)(&off_24CA0CFA0)[2 * a2 + 1]);
  v4 = *(_DWORD *)(v3 + 120);
  if ((v4 & 0x10) != 0)
  {
    v7 = *(_QWORD *)(v3 + 112);
    v8 = *(_QWORD *)(v3 + 72);
    if (v7 < v8)
    {
      *(_QWORD *)(v3 + 112) = v8;
      v7 = v8;
    }
    v9 = *(const void **)(v3 + 64);
    v5 = v7 - (_QWORD)v9;
    if (v7 - (unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_26;
  }
  else
  {
    if ((v4 & 8) == 0)
    {
      v5 = 0;
      HIBYTE(v19) = 0;
      v6 = __dst;
      goto LABEL_16;
    }
    v9 = *(const void **)(v3 + 40);
    v5 = *(_QWORD *)(v3 + 56) - (_QWORD)v9;
    if (v5 >= 0x7FFFFFFFFFFFFFF8)
LABEL_26:
      sub_20E860B7C();
  }
  if (v5 >= 0x17)
  {
    v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v10 = v5 | 7;
    v11 = v10 + 1;
    v6 = (void **)operator new(v10 + 1);
    __dst[1] = (void *)v5;
    v19 = v11 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_15;
  }
  HIBYTE(v19) = v5;
  v6 = __dst;
  if (v5)
LABEL_15:
    memmove(v6, v9, v5);
LABEL_16:
  *((_BYTE *)v6 + v5) = 0;
  v12 = MEMORY[0x24BEDB7F0];
  v13 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v3 = *MEMORY[0x24BEDB7F0];
  v14 = *(_QWORD *)(v12 + 72);
  *(_QWORD *)(v3 + *(_QWORD *)(v13 - 24)) = *(_QWORD *)(v12 + 64);
  *(_QWORD *)(v3 + 24) = MEMORY[0x24BEDB848] + 16;
  *(_QWORD *)(v3 + 16) = v14;
  if (*(char *)(v3 + 111) < 0)
    operator delete(*(void **)(v3 + 88));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x212BC6290](v3 + 128);
  MEMORY[0x212BC6398](v3, 0x10B2C40EED050F3);
  v20[0] = v16;
  v20[1] = __dst;
  v20[2] = v16;
  v20[3] = __dst;
  v20[4] = __dst;
  if (v17 == -1)
    sub_20E877AB8();
  v21 = v20;
  ((void (*)(_QWORD **, _BYTE *))off_24CA0D098[v17])(&v21, v16);
  if (SHIBYTE(v19) < 0)
    operator delete(__dst[0]);
  if (v17 == -1)
    sub_20E877AB8();
  v20[0] = __dst;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0D0C8[v17])(v20, v16);
  if (v17 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0D0B0[v17])(v20, v16);
  return result;
}

void sub_20FF314A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  uint64_t v18;
  uint64_t v19;

  MEMORY[0x212BC6398](v18, 0x10B2C40EED050F3);
  if (a12 != -1)
    ((void (*)(uint64_t, uint64_t *))off_24CA0D0B0[a12])(v19 - 49, &a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF31578(uint64_t *a1, _DWORD *a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  uint64_t v8;
  int v9;
  void *v10;
  __int128 *v11;
  size_t v12;
  uint64_t *v13;
  int v14;
  const void *v15;
  size_t v16;
  size_t v17;
  int v18;
  int v19;
  const void *v20;
  size_t v21;
  size_t v22;
  int v23;
  std::logic_error *exception;
  const std::string::value_type *v26;
  std::string::size_type v27;
  std::string *v28;
  __int128 v29;
  _QWORD v30[2];
  unsigned __int8 v31;
  std::string v32;
  std::string v33;
  std::string v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v4 = atomic_load((unsigned __int8 *)&qword_254A6C900);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A6C900))
  {
    v35 = xmmword_2103F04A4;
    v36 = unk_2103F04B4;
    sub_20FF319E8(&v35, 8uLL);
    __cxa_atexit((void (*)(void *))sub_20FF31A7C, &qword_254A6C920, &dword_20E81F000);
    __cxa_guard_release(&qword_254A6C900);
  }
  v5 = atomic_load((unsigned __int8 *)&qword_254A6C908);
  if ((v5 & 1) == 0 && __cxa_guard_acquire(&qword_254A6C908))
  {
    *(_QWORD *)&xmmword_254A6C950 = qword_254A6C920;
    qword_254A6C960 = qword_254A6C928;
    __cxa_guard_release(&qword_254A6C908);
  }
  v6 = atomic_load((unsigned __int8 *)&qword_254A6C910);
  if ((v6 & 1) == 0 && __cxa_guard_acquire(&qword_254A6C910))
  {
    *(_OWORD *)&qword_254A6C970 = xmmword_254A6C950;
    qword_254A6C980 = qword_254A6C920;
    unk_254A6C988 = *(_OWORD *)&qword_254A6C960;
    qword_254A6C998 = qword_254A6C928;
    __cxa_guard_release(&qword_254A6C910);
  }
  v7 = atomic_load((unsigned __int8 *)&qword_254A6C918);
  if ((v7 & 1) == 0 && __cxa_guard_acquire(&qword_254A6C918))
  {
    sub_20FF31AAC();
    __cxa_atexit((void (*)(void *))sub_20FF31DEC, &qword_254A6C938, &dword_20E81F000);
    __cxa_guard_release(&qword_254A6C918);
  }
  v35 = 0uLL;
  *(_QWORD *)&v36 = 0;
  sub_20EA94AF4(a1, (uint64_t)&v35);
  v8 = qword_254A6C940;
  if (!qword_254A6C940)
    goto LABEL_44;
  v9 = SBYTE7(v36);
  v10 = (void *)v35;
  if ((SBYTE7(v36) & 0x80u) == 0)
    v11 = &v35;
  else
    v11 = (__int128 *)v35;
  if ((SBYTE7(v36) & 0x80u) == 0)
    v12 = BYTE7(v36);
  else
    v12 = *((_QWORD *)&v35 + 1);
  v13 = &qword_254A6C940;
  do
  {
    while (1)
    {
      v14 = *(char *)(v8 + 55);
      v15 = v14 >= 0 ? (const void *)(v8 + 32) : *(const void **)(v8 + 32);
      v16 = v14 >= 0 ? *(unsigned __int8 *)(v8 + 55) : *(_QWORD *)(v8 + 40);
      v17 = v12 >= v16 ? v16 : v12;
      v18 = memcmp(v15, v11, v17);
      if (v18)
        break;
      if (v16 >= v12)
        goto LABEL_27;
LABEL_13:
      v8 = *(_QWORD *)(v8 + 8);
      if (!v8)
        goto LABEL_28;
    }
    if (v18 < 0)
      goto LABEL_13;
LABEL_27:
    v13 = (uint64_t *)v8;
    v8 = *(_QWORD *)v8;
  }
  while (v8);
LABEL_28:
  if (v13 == &qword_254A6C940)
    goto LABEL_44;
  v19 = *((char *)v13 + 55);
  if (v19 >= 0)
    v20 = v13 + 4;
  else
    v20 = (const void *)v13[4];
  if (v19 >= 0)
    v21 = *((unsigned __int8 *)v13 + 55);
  else
    v21 = v13[5];
  if (v21 >= v12)
    v22 = v12;
  else
    v22 = v21;
  v23 = memcmp(v11, v20, v22);
  if (v23)
  {
    if ((v23 & 0x80000000) == 0)
      goto LABEL_40;
LABEL_44:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    sub_20E8B07EC(", expected ", &v32, &v33);
    sub_20FF31E14();
    if ((v31 & 0x80u) == 0)
      v26 = (const std::string::value_type *)v30;
    else
      v26 = (const std::string::value_type *)v30[0];
    if ((v31 & 0x80u) == 0)
      v27 = v31;
    else
      v27 = v30[1];
    v28 = std::string::append(&v33, v26, v27);
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    std::logic_error::logic_error(exception, &v34);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  if (v12 < v21)
    goto LABEL_44;
LABEL_40:
  *a2 = *((_DWORD *)v13 + 14);
  if (v9 < 0)
    operator delete(v10);
  return a1;
}

void sub_20FF318E0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A6C918);
  _Unwind_Resume(a1);
}

void sub_20FF318F8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A6C900);
  _Unwind_Resume(a1);
}

void sub_20FF31910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  void *v40;
  int v41;

  if (a33 < 0)
  {
    operator delete(__p);
    if (a15 < 0)
    {
LABEL_5:
      operator delete(a10);
      if (a27 < 0)
      {
LABEL_8:
        operator delete(a22);
        if ((a21 & 0x80000000) == 0)
          goto LABEL_9;
        goto LABEL_12;
      }
LABEL_11:
      if ((a21 & 0x80000000) == 0)
      {
LABEL_9:
        if (!v41)
        {
LABEL_14:
          if (a40 < 0)
            operator delete(a35);
          _Unwind_Resume(a1);
        }
LABEL_13:
        __cxa_free_exception(v40);
        goto LABEL_14;
      }
LABEL_12:
      operator delete(a16);
      if ((v41 & 1) == 0)
        goto LABEL_14;
      goto LABEL_13;
    }
  }
  else if (a15 < 0)
  {
    goto LABEL_5;
  }
  if (a27 < 0)
    goto LABEL_8;
  goto LABEL_11;
}

void *sub_20FF319E8(void *result, unint64_t a2)
{
  const void *v2;
  size_t v3;
  uint64_t v4;

  qword_254A6C920 = 0;
  qword_254A6C928 = 0;
  qword_254A6C930 = 0;
  if (a2)
  {
    if (a2 >> 62)
      sub_20E867F44();
    v2 = result;
    v3 = 4 * a2;
    qword_254A6C920 = (uint64_t)operator new(4 * a2);
    qword_254A6C928 = qword_254A6C920;
    v4 = qword_254A6C920 + v3;
    qword_254A6C930 = qword_254A6C920 + v3;
    result = memmove((void *)qword_254A6C920, v2, v3);
    qword_254A6C928 = v4;
  }
  return result;
}

void sub_20FF31A58(_Unwind_Exception *exception_object)
{
  if (qword_254A6C920)
  {
    qword_254A6C928 = qword_254A6C920;
    operator delete((void *)qword_254A6C920);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF31A7C(uint64_t a1)
{
  void *v2;

  v2 = *(void **)a1;
  if (v2)
  {
    *(_QWORD *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_20FF31AAC()
{
  int *v0;
  _DWORD *v1;
  BOOL v2;
  void *v3;
  void *v4;
  size_t v5;
  int v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  int v13;
  const void *v14;
  size_t v15;
  const void *v16;
  size_t v17;
  size_t v18;
  int v19;
  uint64_t *v20;
  size_t v21;
  size_t v22;
  const void *v23;
  size_t v24;
  size_t v25;
  int v26;
  int v27;
  uint64_t v28;
  int *v29;
  _DWORD *v30;
  void *v31;
  _BYTE v32[15];
  unsigned __int8 v33;
  _QWORD v34[3];

  v34[2] = *MEMORY[0x24BDAC8D0];
  v0 = (int *)qword_254A6C970;
  v1 = (_DWORD *)qword_254A6C980;
  qword_254A6C948 = 0;
  qword_254A6C940 = 0;
  qword_254A6C938 = (uint64_t)&qword_254A6C940;
  v29 = (int *)unk_254A6C988;
  v28 = qword_254A6C998;
  v2 = qword_254A6C970 == unk_254A6C988 && qword_254A6C980 == qword_254A6C998;
  if (!v2)
  {
    v3 = &unk_254A6C000;
    while (1)
    {
      sub_20FF320D0((uint64_t)&v31, v0);
      v4 = v31;
      v34[0] = *(_QWORD *)v32;
      *(_QWORD *)((char *)v34 + 7) = *(_QWORD *)&v32[7];
      v5 = v33;
      v6 = (char)v33;
      v7 = operator new(0x40uLL);
      v7[4] = v4;
      v7[5] = v34[0];
      *(_QWORD *)((char *)v7 + 47) = *(_QWORD *)((char *)v34 + 7);
      *((_BYTE *)v7 + 55) = v6;
      v34[0] = 0;
      *(_QWORD *)((char *)v34 + 7) = 0;
      *((_DWORD *)v7 + 14) = *v1;
      v8 = (uint64_t *)*((_QWORD *)v3 + 295);
      v10 = &qword_254A6C940;
      v9 = qword_254A6C940;
      v30 = v1;
      if (v8 != &qword_254A6C940)
      {
        v11 = qword_254A6C940;
        if (qword_254A6C940)
        {
          do
          {
            v10 = (uint64_t *)v11;
            v11 = *(_QWORD *)(v11 + 8);
          }
          while (v11);
        }
        else
        {
          v12 = &qword_254A6C940;
          do
          {
            v10 = (uint64_t *)v12[2];
            v2 = *v10 == (_QWORD)v12;
            v12 = v10;
          }
          while (v2);
        }
        v13 = *((char *)v10 + 55);
        if (v13 >= 0)
          v14 = v10 + 4;
        else
          v14 = (const void *)v10[4];
        if (v13 >= 0)
          v15 = *((unsigned __int8 *)v10 + 55);
        else
          v15 = v10[5];
        if (v6 >= 0)
          v16 = v7 + 4;
        else
          v16 = v4;
        if (v6 >= 0)
          v17 = v5;
        else
          v17 = v7[5];
        if (v17 >= v15)
          v18 = v15;
        else
          v18 = v17;
        v19 = memcmp(v14, v16, v18);
        if (v19)
        {
          if ((v19 & 0x80000000) == 0)
            goto LABEL_29;
        }
        else if (v15 >= v17)
        {
LABEL_29:
          if (!v9)
          {
LABEL_58:
            v10 = &qword_254A6C940;
            v20 = &qword_254A6C940;
            goto LABEL_59;
          }
          while (1)
          {
            v10 = (uint64_t *)v9;
            v21 = *(unsigned __int8 *)(v9 + 55);
            v22 = *(_QWORD *)(v9 + 40);
            if ((v21 & 0x80u) == 0)
              v23 = (const void *)(v9 + 32);
            else
              v23 = *(const void **)(v9 + 32);
            if ((v21 & 0x80u) == 0)
              v24 = v21;
            else
              v24 = v22;
            if (v24 >= v17)
              v25 = v17;
            else
              v25 = v24;
            v26 = memcmp(v16, v23, v25);
            if (v26)
            {
              if (v26 < 0)
                goto LABEL_31;
            }
            else if (v17 < v24)
            {
LABEL_31:
              v9 = *v10;
              v20 = v10;
              if (!*v10)
                goto LABEL_59;
              continue;
            }
            v27 = memcmp(v23, v16, v25);
            if (v27)
            {
              if ((v27 & 0x80000000) == 0)
                goto LABEL_54;
            }
            else if (v24 >= v17)
            {
              goto LABEL_54;
            }
            v9 = v10[1];
            if (!v9)
            {
              v20 = v10 + 1;
              goto LABEL_59;
            }
          }
        }
      }
      if (!v9)
        goto LABEL_58;
      v20 = v10 + 1;
      if (v10[1])
      {
LABEL_54:
        if (v6 < 0)
          operator delete(v4);
        operator delete(v7);
        v3 = &unk_254A6C000;
        ++v0;
        v1 = v30 + 1;
        if (v0 == v29)
          goto LABEL_62;
      }
      else
      {
LABEL_59:
        *v7 = 0;
        v7[1] = 0;
        v7[2] = v10;
        *v20 = (uint64_t)v7;
        v3 = &unk_254A6C000;
        if (*(_QWORD *)qword_254A6C938)
        {
          qword_254A6C938 = *(_QWORD *)qword_254A6C938;
          v7 = (_QWORD *)*v20;
        }
        sub_20E868578((uint64_t *)qword_254A6C940, v7);
        ++qword_254A6C948;
        ++v0;
        v1 = v30 + 1;
        if (v0 == v29)
        {
LABEL_62:
          if (v1 == (_DWORD *)v28)
            return;
        }
      }
    }
  }
}

void sub_20FF31DB0(_Unwind_Exception *a1)
{
  void *v1;
  int v2;

  if (v2 < 0)
  {
    operator delete(v1);
    sub_20FD04F28((char *)qword_254A6C940);
    _Unwind_Resume(a1);
  }
  sub_20FD04F28((char *)qword_254A6C940);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF31DEC(uint64_t a1)
{
  sub_20FD04F28(*(char **)(a1 + 8));
  return a1;
}

uint64_t sub_20FF31E14()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t result;
  _DWORD v4[6];
  int v5;
  void *__p[2];
  char v7;
  void **v8;
  const char *v9;
  _DWORD *v10;
  const char *v11;
  const char *v12;
  void ***v13;

  v5 = 0;
  if ((uint64_t)xmmword_254A6C950 - qword_254A6C960 >= 0)
  {
    sub_20EA5D220(v4, "{}");
    goto LABEL_16;
  }
  sub_20E89FDB0(v4, "{");
  v0 = xmmword_254A6C950;
  sub_20FF320D0((uint64_t)__p, (int *)xmmword_254A6C950);
  v8 = (void **)v4;
  v9 = (const char *)__p;
  v10 = v4;
  v11 = (const char *)__p;
  v12 = (const char *)__p;
  if (v5 == -1)
    sub_20E877AB8();
  v13 = &v8;
  ((void (*)(void ****, _DWORD *))off_24CA0D148[v5])(&v13, v4);
  if (v7 < 0)
  {
    operator delete(__p[0]);
    v1 = (int *)(v0 + 4);
    v2 = qword_254A6C960;
    if (v1 != (int *)qword_254A6C960)
    {
LABEL_10:
      while (1)
      {
        v8 = (void **)v4;
        v9 = ",";
        v10 = v4;
        v11 = ",";
        v12 = ",";
        if (v5 == -1)
          break;
        __p[0] = &v8;
        ((void (*)(void **, _DWORD *))off_24CA0D160[v5])(__p, v4);
        sub_20FF320D0((uint64_t)__p, v1);
        v8 = (void **)v4;
        v9 = (const char *)__p;
        v10 = v4;
        v11 = (const char *)__p;
        v12 = (const char *)__p;
        if (v5 == -1)
          sub_20E877AB8();
        v13 = &v8;
        ((void (*)(void ****, _DWORD *))off_24CA0D148[v5])(&v13, v4);
        if (v7 < 0)
          operator delete(__p[0]);
        if (++v1 == (int *)v2)
          goto LABEL_14;
      }
LABEL_20:
      sub_20E877AB8();
    }
  }
  else
  {
    v1 = (int *)(v0 + 4);
    v2 = qword_254A6C960;
    if (v1 != (int *)qword_254A6C960)
      goto LABEL_10;
  }
LABEL_14:
  v8 = (void **)v4;
  v9 = "}";
  v10 = v4;
  v11 = "}";
  v12 = "}";
  if (v5 == -1)
    goto LABEL_20;
  __p[0] = &v8;
  ((void (*)(void **, _DWORD *))off_24CA0D160[v5])(__p, v4);
LABEL_16:
  if (v5 == -1)
    sub_20E877AB8();
  v8 = __p;
  result = ((uint64_t (*)(void ***, _DWORD *))off_24CA0D0C8[v5])(&v8, v4);
  if (v5 != -1)
    return ((uint64_t (*)(void ***, _DWORD *))off_24CA0D0B0[v5])(&v8, v4);
  return result;
}

void sub_20FF32088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_20E877A60((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_20E877A60((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF320D0(uint64_t a1, int *a2)
{
  uint64_t result;
  _BYTE v3[24];
  int v4;
  char v5;
  _QWORD v6[2];

  v4 = 0;
  sub_20FEF00CC((uint64_t)v6, (uint64_t)v3, a2);
  if (v4 == -1)
    sub_20E877AB8();
  v6[0] = &v5;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0D0C8[v4])(v6, v3);
  if (v4 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0D0B0[v4])(v6, v3);
  return result;
}

void sub_20FF32168(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24CA0D0B0[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_20FF321A0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D0F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF321B0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D0F0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF321E0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = result;
  *(_QWORD *)(result + 24) = off_24CA08508;
  *(_QWORD *)(result + 32) = &unk_24CA08568;
  v2 = *(unsigned int *)(result + 216);
  if ((_DWORD)v2 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_24CA08120[v2])(&v3, result + 40);
  *(_DWORD *)(v1 + 216) = -1;
  return result;
}

void sub_20FF32248(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  int v4;
  int v5;
  __int128 v6;
  int v7;
  __int128 v8;
  int v9;
  _BYTE v10[8];
  __int128 v11;
  void *v12[2];
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  void *v17[2];
  uint64_t v18;
  unsigned __int8 v19;
  void *__p[2];
  uint64_t v21;
  unsigned __int8 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (*(unsigned __int8 *)(a1 + 200) | *(unsigned __int8 *)(a1 + 160))
  {
    sub_20FDE470C((uint64_t)v10, (uint64_t *)a1);
    v3 = v11;
    *(_BYTE *)(a2 + 24) = 0;
    *(_OWORD *)(a2 + 8) = v3;
    *(_BYTE *)(a2 + 48) = 0;
    if (v14)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)v12;
      *(_QWORD *)(a2 + 40) = v13;
      v12[1] = 0;
      v13 = 0;
      v12[0] = 0;
      *(_BYTE *)(a2 + 48) = 1;
    }
    *(_BYTE *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 56) = v15;
    *(_QWORD *)(a2 + 72) = v16;
    *(_BYTE *)(a2 + 104) = 0;
    v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v17;
      *(_QWORD *)(a2 + 96) = v18;
      v17[1] = 0;
      v18 = 0;
      v17[0] = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
    v5 = v22;
    if (v22)
    {
      *(_OWORD *)(a2 + 112) = *(_OWORD *)__p;
      *(_QWORD *)(a2 + 128) = v21;
      __p[1] = 0;
      v21 = 0;
      __p[0] = 0;
      *(_BYTE *)(a2 + 136) = 1;
    }
    *(_BYTE *)(a2 + 144) = 0;
    *(_BYTE *)(a2 + 168) = 0;
    if (v25)
    {
      *(_OWORD *)(a2 + 144) = v23;
      *(_QWORD *)(a2 + 160) = v24;
      v24 = 0;
      v23 = 0uLL;
      *(_BYTE *)(a2 + 168) = 1;
    }
    *(_DWORD *)(a2 + 176) = 0;
    if (!v5)
      goto LABEL_34;
LABEL_32:
    if (SHIBYTE(v21) < 0)
    {
      operator delete(__p[0]);
      v4 = v19;
    }
    goto LABEL_34;
  }
  if (*(_BYTE *)(a1 + 72))
  {
    sub_20FF3263C((uint64_t)v10, (uint64_t *)a1);
    v6 = v11;
    *(_BYTE *)(a2 + 24) = 0;
    *(_OWORD *)(a2 + 8) = v6;
    *(_BYTE *)(a2 + 48) = 0;
    if (v14)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)v12;
      *(_QWORD *)(a2 + 40) = v13;
      v12[1] = 0;
      v13 = 0;
      v12[0] = 0;
      *(_BYTE *)(a2 + 48) = 1;
    }
    *(_BYTE *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 56) = v15;
    *(_QWORD *)(a2 + 72) = v16;
    *(_BYTE *)(a2 + 104) = 0;
    v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v17;
      *(_QWORD *)(a2 + 96) = v18;
      v17[1] = 0;
      v18 = 0;
      v17[0] = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
    v7 = v22;
    if (v22)
    {
      *(_OWORD *)(a2 + 112) = *(_OWORD *)__p;
      *(_QWORD *)(a2 + 128) = v21;
      __p[1] = 0;
      v21 = 0;
      __p[0] = 0;
      *(_BYTE *)(a2 + 136) = 1;
    }
    *(_BYTE *)(a2 + 144) = 0;
    *(_BYTE *)(a2 + 168) = 0;
    if (v25)
    {
      *(_OWORD *)(a2 + 144) = v23;
      *(_QWORD *)(a2 + 160) = v24;
      v24 = 0;
      v23 = 0uLL;
      *(_BYTE *)(a2 + 168) = 1;
    }
    *(_DWORD *)(a2 + 176) = 1;
    if (v7)
      goto LABEL_32;
  }
  else
  {
    sub_20FDD69C4((uint64_t)v10, (uint64_t *)a1);
    v8 = v11;
    *(_BYTE *)(a2 + 24) = 0;
    *(_OWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 48) = 0;
    if (v14)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)v12;
      *(_QWORD *)(a2 + 40) = v13;
      v12[1] = 0;
      v13 = 0;
      v12[0] = 0;
      *(_BYTE *)(a2 + 48) = 1;
    }
    *(_BYTE *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 56) = v15;
    *(_QWORD *)(a2 + 72) = v16;
    *(_BYTE *)(a2 + 104) = 0;
    v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v17;
      *(_QWORD *)(a2 + 96) = v18;
      v17[1] = 0;
      v18 = 0;
      v17[0] = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
    v9 = v22;
    if (v22)
    {
      *(_OWORD *)(a2 + 112) = *(_OWORD *)__p;
      *(_QWORD *)(a2 + 128) = v21;
      __p[1] = 0;
      v21 = 0;
      __p[0] = 0;
      *(_BYTE *)(a2 + 136) = 1;
    }
    *(_BYTE *)(a2 + 144) = 0;
    *(_BYTE *)(a2 + 168) = 0;
    if (v25)
    {
      *(_OWORD *)(a2 + 144) = v23;
      *(_QWORD *)(a2 + 160) = v24;
      v24 = 0;
      v23 = 0uLL;
      *(_BYTE *)(a2 + 168) = 1;
    }
    *(_DWORD *)(a2 + 176) = 2;
    if (v9)
      goto LABEL_32;
  }
LABEL_34:
  if (v4 && SHIBYTE(v18) < 0)
    operator delete(v17[0]);
  if (v14)
  {
    if (SHIBYTE(v13) < 0)
      operator delete(v12[0]);
  }
}

uint64_t sub_20FF325E4(uint64_t a1)
{
  uint64_t v2;
  char v4;

  v2 = *(unsigned int *)(a1 + 176);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA0D130[v2])(&v4, a1);
  *(_DWORD *)(a1 + 176) = -1;
  return a1;
}

uint64_t sub_20FF3263C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  __int128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  __int128 v13;
  uint64_t v14;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 48) = 0;
  if (*((_BYTE *)a2 + 40))
  {
    if (*((char *)a2 + 39) < 0)
    {
      sub_20E860C04((_BYTE *)(a1 + 24), (void *)a2[2], a2[3]);
    }
    else
    {
      v6 = *((_OWORD *)a2 + 1);
      *(_QWORD *)(a1 + 40) = a2[4];
      *(_OWORD *)(a1 + 24) = v6;
    }
    *(_BYTE *)(a1 + 48) = 1;
  }
  if (*((_BYTE *)a2 + 96))
  {
    v7 = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 56) = a2[10];
    *(_BYTE *)(a1 + 64) = v7;
    *(_BYTE *)(a1 + 80) = 0;
    v8 = a1 + 80;
    *(_BYTE *)(a1 + 72) = 1;
    *(_BYTE *)(a1 + 104) = 0;
    if (!*((_BYTE *)a2 + 72))
      goto LABEL_8;
  }
  else
  {
    *(_BYTE *)(a1 + 56) = 0;
    *(_BYTE *)(a1 + 80) = 0;
    v8 = a1 + 80;
    *(_BYTE *)(a1 + 72) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (!*((_BYTE *)a2 + 72))
    {
LABEL_8:
      v9 = a1 + 112;
      if (*((_BYTE *)a2 + 160))
        goto LABEL_9;
      goto LABEL_16;
    }
  }
  if (*((char *)a2 + 71) < 0)
  {
    sub_20E860C04((_BYTE *)v8, (void *)a2[6], a2[7]);
  }
  else
  {
    v10 = *((_OWORD *)a2 + 3);
    *(_QWORD *)(v8 + 16) = a2[8];
    *(_OWORD *)v8 = v10;
  }
  *(_BYTE *)(a1 + 104) = 1;
  v9 = a1 + 112;
  if (*((_BYTE *)a2 + 160))
  {
LABEL_9:
    if (*((char *)a2 + 135) < 0)
    {
      sub_20E860C04(&v13, (void *)a2[14], a2[15]);
    }
    else
    {
      v13 = *((_OWORD *)a2 + 7);
      v14 = a2[16];
    }
    *(_OWORD *)v9 = v13;
    *(_QWORD *)(v9 + 16) = v14;
    *(_BYTE *)(a1 + 136) = 1;
    v11 = *((_BYTE *)a2 + 200);
    if (v11)
      goto LABEL_20;
    goto LABEL_17;
  }
LABEL_16:
  *(_BYTE *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 136) = 0;
  v11 = *((_BYTE *)a2 + 200);
  if (v11)
  {
LABEL_20:
    sub_20FF32864(a2 + 22, (uint64_t)&v13);
    *(_OWORD *)(a1 + 144) = v13;
    *(_QWORD *)(a1 + 160) = v14;
    v11 = 1;
    goto LABEL_21;
  }
LABEL_17:
  *(_BYTE *)(a1 + 144) = 0;
LABEL_21:
  *(_BYTE *)(a1 + 168) = v11;
  return a1;
}

void sub_20FF327F8(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;

  if (v1[104] && v1[103] < 0)
    operator delete(*v3);
  if (v1[48])
  {
    if (v1[47] < 0)
      operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

double sub_20FF32864@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  v4 = (a1[1] - *a1) >> 5;
  v7 = 0;
  v6 = 0uLL;
  sub_20E9099B8((uint64_t)&v6, 0xAAAAAAAAAAAAAAABLL * v4);
  sub_20FF3296C(*a1, a1[1], (uint64_t)&v6);
  result = *(double *)&v6;
  *(_OWORD *)a2 = v6;
  *(_QWORD *)(a2 + 16) = v7;
  return result;
}

void sub_20FF328D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10)
{
  void **v11;
  void **v12;

  if (__p)
  {
    v11 = a10;
    v12 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != __p);
      v12 = __p;
    }
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF3296C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v12;
  _BYTE v13[24];
  int v14;
  char v15;
  _QWORD v16[2];

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      v14 = 0;
      sub_20FDD7E30((uint64_t)v16, (uint64_t)v13, v5);
      if (v14 == -1)
        sub_20E877AB8();
      v16[0] = &v15;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24CA0D0C8[v14])(__p, v16, v13);
      if (v14 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24CA0D0B0[v14])(v16, v13);
      v7 = *(_QWORD *)(a3 + 8);
      if (v7 < *(_QWORD *)(a3 + 16))
      {
        v6 = *(_OWORD *)__p;
        *(_QWORD *)(v7 + 16) = v12;
        *(_OWORD *)v7 = v6;
        *(_QWORD *)(a3 + 8) = v7 + 24;
      }
      else
      {
        v8 = sub_20E8780F0((void **)a3, (uint64_t)__p);
        v9 = SHIBYTE(v12);
        *(_QWORD *)(a3 + 8) = v8;
        if (v9 < 0)
          operator delete(__p[0]);
      }
      v5 += 96;
    }
    while (v5 != a2);
  }
  return a3;
}

void sub_20FF32A78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF32ACC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D188;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF32ADC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D188;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF32B0C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 24) = off_24CA086A8;
  *(_QWORD *)(a1 + 32) = &unk_24CA08708;
  result = sub_20FD22A0C(a1 + 224);
  v3 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v3 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_24CA08120[v3])(&v4, a1 + 40);
  *(_DWORD *)(a1 + 216) = -1;
  return result;
}

void sub_20FF32B7C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D1D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF32B8C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D1D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF32BBC(uint64_t a1)
{
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 24) = off_24CA08918;
  *(_QWORD *)(a1 + 32) = &unk_24CA08978;
  sub_20E866BE0(a1 + 224, *(char **)(a1 + 232));
  v2 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v2 != -1)
    ((void (*)(char *, uint64_t))off_24CA08120[v2])(&v3, a1 + 40);
  *(_DWORD *)(a1 + 216) = -1;
}

uint64_t sub_20FF32C30(uint64_t a1, const void ***a2, uint64_t a3)
{
  const void ***v5;
  const void **v6;
  const void **v7;
  const void **v8;
  const void ***v9;
  BOOL v10;
  uint64_t *v11;
  char *v13;
  char **v14;
  char **v15;
  char *v16[2];

  *(_QWORD *)a1 = off_24CA08918;
  *(_QWORD *)(a1 + 8) = &unk_24CA08978;
  sub_20FF32248(a3, a1 + 16);
  v16[0] = 0;
  v16[1] = 0;
  v15 = v16;
  v7 = *a2;
  v5 = a2 + 1;
  v6 = v7;
  if (v7 == (const void **)v5)
  {
    *(_QWORD *)(a1 + 208) = 0;
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 200) = a1 + 208;
  }
  else
  {
    do
    {
      sub_20FEE8CFC((uint64_t **)&v15, (uint64_t *)v16, v6 + 4, (uint64_t)(v6 + 4));
      v8 = (const void **)v6[1];
      if (v8)
      {
        do
        {
          v9 = (const void ***)v8;
          v8 = (const void **)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = (const void ***)v6[2];
          v10 = *v9 == v6;
          v6 = (const void **)v9;
        }
        while (!v10);
      }
      v6 = (const void **)v9;
    }
    while (v9 != v5);
    *(_QWORD *)(a1 + 208) = 0;
    v11 = (uint64_t *)v15;
    *(_QWORD *)(a1 + 200) = a1 + 208;
    *(_QWORD *)(a1 + 216) = 0;
    if (v11 != (uint64_t *)v16)
    {
      do
      {
        sub_20FEE8CFC((uint64_t **)(a1 + 200), (uint64_t *)(a1 + 208), (const void **)v11 + 4, (uint64_t)(v11 + 4));
        v13 = (char *)v11[1];
        if (v13)
        {
          do
          {
            v14 = (char **)v13;
            v13 = *(char **)v13;
          }
          while (v13);
        }
        else
        {
          do
          {
            v14 = (char **)v11[2];
            v10 = *v14 == (char *)v11;
            v11 = (uint64_t *)v14;
          }
          while (!v10);
        }
        v11 = (uint64_t *)v14;
      }
      while (v14 != v16);
    }
  }
  sub_20E866BE0((uint64_t)&v15, v16[0]);
  return a1;
}

void sub_20FF32D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  uint64_t v11;
  char **v12;
  uint64_t v13;

  sub_20E866BE0(v13, *v12);
  sub_20E866BE0((uint64_t)&a10, a11);
  sub_20FF325E4(v11);
  _Unwind_Resume(a1);
}

void sub_20FF32DB8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D228;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF32DC8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D228;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF32DF8(uint64_t a1)
{
  return sub_20FDDEA14(a1 + 24);
}

uint64_t sub_20FF32E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int v6;
  void **v7;
  void **v8;
  void *v9;
  void *v11;
  void **v12;
  __int128 __p;
  uint64_t v14;
  unsigned __int8 v15;

  *(_QWORD *)a1 = &off_24CA08AB8;
  *(_QWORD *)(a1 + 8) = &unk_24CA08B18;
  sub_20FF32248(a3, a1 + 16);
  sub_20FF32F94((uint64_t)&v11, a2);
  *(_QWORD *)(a1 + 200) = 0;
  *(_QWORD *)(a1 + 208) = 0;
  *(_QWORD *)(a1 + 216) = 0;
  sub_20FEF1170((char *)(a1 + 200), (uint64_t)v11, (uint64_t)v12, ((char *)v12 - (_BYTE *)v11) >> 5);
  *(_BYTE *)(a1 + 224) = 0;
  *(_BYTE *)(a1 + 248) = 0;
  if (v15)
  {
    if (SHIBYTE(v14) < 0)
    {
      sub_20E860C04((_BYTE *)(a1 + 224), (void *)__p, *((unint64_t *)&__p + 1));
      v5 = v15;
      v6 = SHIBYTE(v14);
      *(_BYTE *)(a1 + 248) = 1;
      if (v5 && v6 < 0)
        operator delete((void *)__p);
    }
    else
    {
      *(_OWORD *)(a1 + 224) = __p;
      *(_QWORD *)(a1 + 240) = v14;
      *(_BYTE *)(a1 + 248) = 1;
    }
  }
  v7 = (void **)v11;
  if (v11)
  {
    v8 = v12;
    v9 = v11;
    if (v12 != v11)
    {
      do
      {
        if (*((char *)v8 - 9) < 0)
          operator delete(*(v8 - 4));
        v8 -= 4;
      }
      while (v8 != v7);
      v9 = v11;
    }
    v12 = v7;
    operator delete(v9);
  }
  return a1;
}

void sub_20FF32F3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t v3;
  void **v4;
  void **v5;
  va_list va;

  va_start(va, a2);
  if (*(_BYTE *)(v2 + 248))
  {
    if (*(char *)(v2 + 247) < 0)
      operator delete(*v5);
  }
  sub_20EB9B93C(v4);
  sub_20FDE4450((uint64_t)va);
  sub_20FF325E4(v3);
  _Unwind_Resume(a1);
}

void sub_20FF32F80(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20FF325E4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF32F94(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  sub_20FEF1170((char *)a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8), (uint64_t)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 5);
  *(_BYTE *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 48) = 0;
  if (*(_BYTE *)(a2 + 48))
  {
    if (*(char *)(a2 + 47) < 0)
    {
      sub_20E860C04((_BYTE *)(a1 + 24), *(void **)(a2 + 24), *(_QWORD *)(a2 + 32));
    }
    else
    {
      v4 = *(_OWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 24) = v4;
    }
    *(_BYTE *)(a1 + 48) = 1;
  }
  return a1;
}

void sub_20FF33024(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v4;
  void **v5;
  void **v6;

  if (*(_BYTE *)(v1 + 48) && *(char *)(v1 + 47) < 0)
    operator delete(*v2);
  v4 = *(void ***)v1;
  if (*(_QWORD *)v1)
  {
    v5 = *(void ***)(v1 + 8);
    v6 = *(void ***)v1;
    if (v5 != v4)
    {
      do
      {
        if (*((char *)v5 - 9) < 0)
          operator delete(*(v5 - 4));
        v5 -= 4;
      }
      while (v5 != v4);
      v6 = *(void ***)v1;
    }
    *(_QWORD *)(v1 + 8) = v4;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF33090(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D278;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF330A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D278;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF330D0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = result;
  *(_QWORD *)(result + 24) = off_24CA08CF8;
  *(_QWORD *)(result + 32) = &unk_24CA08D58;
  v2 = *(unsigned int *)(result + 216);
  if ((_DWORD)v2 != -1)
    result = ((uint64_t (*)(char *, uint64_t))off_24CA08120[v2])(&v3, result + 40);
  *(_DWORD *)(v1 + 216) = -1;
  return result;
}

_QWORD *sub_20FF33138(_QWORD *a1, __int128 *a2, uint64_t a3)
{
  __int128 v7;
  int v8;
  __int128 __p;
  uint64_t v10;
  char v11;
  void *v12;
  char v13;
  void *v14;
  char v15;
  void *v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  void *v22;
  char v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v7 = *a2;
  v8 = *((_DWORD *)a2 + 4);
  LOBYTE(__p) = 0;
  v11 = 0;
  if (*((_BYTE *)a2 + 48))
  {
    if (*((char *)a2 + 47) < 0)
    {
      sub_20E860C04(&__p, *((void **)a2 + 3), *((_QWORD *)a2 + 4));
    }
    else
    {
      __p = *(__int128 *)((char *)a2 + 24);
      v10 = *((_QWORD *)a2 + 5);
    }
    v11 = 1;
  }
  LOBYTE(v12) = 0;
  v24 = 0;
  if (*((_BYTE *)a2 + 200))
  {
    sub_20FCF4B4C((char *)&v12, (__int128 *)((char *)a2 + 56));
    v24 = 1;
  }
  v25 = a2[13];
  v26 = *((_QWORD *)a2 + 28);
  *a1 = off_24CA086A8;
  a1[1] = &unk_24CA08708;
  sub_20FF32248(a3, (uint64_t)(a1 + 2));
  sub_20FDDBB58((uint64_t)(a1 + 25), &v7);
  *a1 = off_24CA08600;
  a1[1] = &unk_24CA08660;
  if (!v24)
    goto LABEL_15;
  if (v23 < 0)
  {
    operator delete(v22);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_11:
      if ((v19 & 0x80000000) == 0)
        goto LABEL_12;
      goto LABEL_21;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_11;
  }
  operator delete(v20);
  if ((v19 & 0x80000000) == 0)
  {
LABEL_12:
    if ((v17 & 0x80000000) == 0)
      goto LABEL_13;
    goto LABEL_22;
  }
LABEL_21:
  operator delete(v18);
  if ((v17 & 0x80000000) == 0)
  {
LABEL_13:
    if ((v15 & 0x80000000) == 0)
      goto LABEL_14;
    goto LABEL_23;
  }
LABEL_22:
  operator delete(v16);
  if (v15 < 0)
  {
LABEL_23:
    operator delete(v14);
    if (v13 < 0)
      goto LABEL_24;
LABEL_15:
    if (!v11)
      return a1;
    goto LABEL_16;
  }
LABEL_14:
  if ((v13 & 0x80000000) == 0)
    goto LABEL_15;
LABEL_24:
  operator delete(v12);
  if (!v11)
    return a1;
LABEL_16:
  if (SHIBYTE(v10) < 0)
    operator delete((void *)__p);
  return a1;
}

void sub_20FF33324(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a23)
  {
    if (a22 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF333B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20FD0F35C((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF333C4(_QWORD *a1, const void ***a2, uint64_t a3)
{
  const void ***v5;
  const void **v6;
  const void **v8;
  const void ***v9;
  BOOL v10;
  char **v11;
  char *v12[2];

  v12[0] = 0;
  v12[1] = 0;
  v11 = v12;
  v5 = a2 + 1;
  v6 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    do
    {
      sub_20FEE8CFC((uint64_t **)&v11, (uint64_t *)v12, v6 + 4, (uint64_t)(v6 + 4));
      v8 = (const void **)v6[1];
      if (v8)
      {
        do
        {
          v9 = (const void ***)v8;
          v8 = (const void **)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          v9 = (const void ***)v6[2];
          v10 = *v9 == v6;
          v6 = (const void **)v9;
        }
        while (!v10);
      }
      v6 = (const void **)v9;
    }
    while (v9 != v5);
  }
  sub_20FF32C30((uint64_t)a1, (const void ***)&v11, a3);
  *a1 = off_24CA08870;
  a1[1] = &unk_24CA088D0;
  sub_20E866BE0((uint64_t)&v11, v12[0]);
  return a1;
}

void sub_20FF3349C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_20E866BE0((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

void sub_20FF334B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char *a11)
{
  sub_20E866BE0((uint64_t)&a10, a11);
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF334CC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void **v5;
  void **v6;
  void *v7;
  void *v9;
  void **v10;
  void *__p;
  char v12;
  char v13;

  sub_20FF32F94((uint64_t)&v9, a2);
  sub_20FF32E04((uint64_t)a1, (uint64_t)&v9, a3);
  *a1 = &off_24CA08A10;
  a1[1] = &unk_24CA08A70;
  if (v13 && v12 < 0)
    operator delete(__p);
  v5 = (void **)v9;
  if (v9)
  {
    v6 = v10;
    v7 = v9;
    if (v10 != v9)
    {
      do
      {
        if (*((char *)v6 - 9) < 0)
          operator delete(*(v6 - 4));
        v6 -= 4;
      }
      while (v6 != v5);
      v7 = v9;
    }
    v10 = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_20FF33588(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20FDE4450((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF335A0()
{
  JUMPOUT(0x212BC6398);
}

const char *sub_20FF335B4()
{
  return "cv3d.viz";
}

void sub_20FF335C4(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  int v7;
  int v8;
  void *v9;
  char *v11;
  int v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  int32x4_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  void *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  _DWORD *v51;
  _QWORD *v52;
  _DWORD *v53;
  std::__shared_weak_count *v54;
  void *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t *v72;
  unint64_t *v73;
  unint64_t *v74;
  unint64_t *v75;
  unint64_t *v76;
  unint64_t *v77;
  void *v78[7];
  uint64_t v79;
  __int128 v80;
  _QWORD v81[3];
  uint64_t v82;
  _BYTE v83[32];
  _BYTE __p[24];
  uint64_t v85;
  void *v86[2];
  uint64_t v87;
  void *v88[2];
  uint64_t v89;
  void *v90;
  std::__shared_weak_count *v91;
  __int128 v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  uint64_t v102;

  v102 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 1:
      v11 = (char *)operator new(0x140uLL);
      *(_QWORD *)v11 = &off_24CA0D328;
      *((_QWORD *)v11 + 1) = 0;
      v12 = *(_DWORD *)(a1 + 8);
      *((_QWORD *)v11 + 4) = &unk_24CA07E80;
      *((_QWORD *)v11 + 2) = 0;
      *((_QWORD *)v11 + 3) = off_24CA07E08;
      *(_OWORD *)(v11 + 40) = 0u;
      *(_OWORD *)(v11 + 56) = 0u;
      *(_OWORD *)(v11 + 72) = 0u;
      *(_OWORD *)(v11 + 88) = 0u;
      *(_OWORD *)(v11 + 104) = 0u;
      *(_OWORD *)(v11 + 120) = 0u;
      *(_OWORD *)(v11 + 136) = 0u;
      *(_OWORD *)(v11 + 152) = 0u;
      *(_OWORD *)(v11 + 168) = 0u;
      *(_OWORD *)(v11 + 184) = 0u;
      v90 = &off_24C9FC408;
      *(_OWORD *)(v11 + 200) = 0u;
      sub_20FDEF818((uint64_t)&v91);
      sub_20FF56A64((uint64_t)(v11 + 216), (uint64_t)&v90, 0);
      v13 = (std::__shared_weak_count *)v92;
      if ((_QWORD)v92)
      {
        v14 = (unint64_t *)(v92 + 8);
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      *((_DWORD *)v11 + 60) = v12;
      *a3 = v11 + 32;
      a3[1] = v11;
      return;
    case 2:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_2100C22D8(v83, 7, (uint64_t)&v90);
      v17 = *(_QWORD *)v83;
      v16 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = &off_24CA0D428;
      *(_QWORD *)v83 = v17;
      *(_QWORD *)&v83[8] = v16;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = off_24CA09380;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24CA093E0;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v17;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v17 + 56);
      *((_QWORD *)v18 + 30) = v17;
      *((_QWORD *)v18 + 31) = v16;
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v21 = __ldxr(p_shared_owners);
        while (__stxr(v21 + 1, p_shared_owners));
        *((_QWORD *)v18 + 3) = off_24CA092D8;
        *((_QWORD *)v18 + 4) = &unk_24CA09338;
        sub_20EB0580C((uint64_t)&v90);
        do
          v22 = __ldaxr(p_shared_owners);
        while (__stlxr(v22 - 1, p_shared_owners));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = off_24CA092D8;
        *((_QWORD *)v18 + 4) = &unk_24CA09338;
        sub_20EB0580C((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v70 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v70);
      while (__stlxr(v71 - 1, v70));
      goto LABEL_152;
    case 3:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_2100C42C4((uint64_t)&v90, v83);
      v24 = *(_QWORD *)v83;
      v23 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = &off_24CA0D478;
      *(_QWORD *)v83 = v24;
      *(_QWORD *)&v83[8] = v23;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = off_24CA09628;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24CA09688;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v24;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v24 + 56) >> 1;
      *((_QWORD *)v18 + 30) = v24;
      *((_QWORD *)v18 + 31) = v23;
      if (v23)
      {
        v25 = (unint64_t *)&v23->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        *((_QWORD *)v18 + 3) = off_24CA09580;
        *((_QWORD *)v18 + 4) = &unk_24CA095E0;
        sub_20EB0580C((uint64_t)&v90);
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = off_24CA09580;
        *((_QWORD *)v18 + 4) = &unk_24CA095E0;
        sub_20EB0580C((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v72 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v72);
      while (__stlxr(v71 - 1, v72));
      goto LABEL_152;
    case 4:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_2100C47AC((uint64_t)&v90, v83);
      v29 = *(_QWORD *)v83;
      v28 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = &off_24CA0D4C8;
      *(_QWORD *)v83 = v29;
      *(_QWORD *)&v83[8] = v28;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = off_24CA09800;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24CA09860;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v29;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v29 + 56) / 3uLL;
      *((_QWORD *)v18 + 30) = v29;
      *((_QWORD *)v18 + 31) = v28;
      if (v28)
      {
        v30 = (unint64_t *)&v28->__shared_owners_;
        do
          v31 = __ldxr(v30);
        while (__stxr(v31 + 1, v30));
        *((_QWORD *)v18 + 3) = off_24CA09758;
        *((_QWORD *)v18 + 4) = &unk_24CA097B8;
        sub_20EB0580C((uint64_t)&v90);
        do
          v32 = __ldaxr(v30);
        while (__stlxr(v32 - 1, v30));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = off_24CA09758;
        *((_QWORD *)v18 + 4) = &unk_24CA097B8;
        sub_20EB0580C((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v73 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v73);
      while (__stlxr(v71 - 1, v73));
      goto LABEL_152;
    case 5:
      v33 = (char *)operator new(0x78uLL);
      v34 = (std::__shared_weak_count *)v33;
      *((_QWORD *)v33 + 1) = 0;
      v35 = (unint64_t *)(v33 + 8);
      *((_QWORD *)v33 + 2) = 0;
      *(_QWORD *)v33 = &off_24CA171F0;
      *((_QWORD *)v33 + 5) = 0;
      *((_QWORD *)v33 + 6) = 0;
      v36 = vdupq_n_s32(0x7FC00000u);
      *((_QWORD *)v33 + 4) = &off_24C9AD020;
      *(int32x4_t *)(v33 + 56) = v36;
      *(int32x4_t *)(v33 + 72) = v36;
      *(int32x4_t *)(v33 + 88) = v36;
      *((_DWORD *)v33 + 26) = 2143289344;
      *((_QWORD *)v33 + 3) = &off_24C9F0A28;
      *((_QWORD *)v33 + 14) = 0;
      v78[0] = &off_24CA17CC8;
      v78[1] = v33 + 24;
      v78[2] = v33;
      do
        v37 = __ldxr(v35);
      while (__stxr(v37 + 1, v35));
      do
        v38 = __ldaxr(v35);
      while (__stlxr(v38 - 1, v35));
      if (!v38)
      {
        (*(void (**)(char *))(*(_QWORD *)v33 + 16))(v33);
        std::__shared_weak_count::__release_weak(v34);
      }
      v39 = operator new(0x108uLL);
      v39[1] = 0;
      v39[2] = 0;
      *v39 = &off_24CA0D518;
      *(_QWORD *)v83 = &off_24CA17CC8;
      *(_OWORD *)&v83[8] = *(_OWORD *)&v78[1];
      v78[1] = 0;
      v78[2] = 0;
      v39[3] = off_24CA09AA8;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      v39[4] = &unk_24CA09B08;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v39 + 5));
      sub_2100C9280((uint64_t)(v39 + 28), (uint64_t)v83);
      v39[3] = off_24CA09A00;
      v39[4] = &unk_24CA09A60;
      sub_20EB0580C((uint64_t)&v90);
      *(_QWORD *)v83 = &off_24CA17CC8;
      v40 = *(std::__shared_weak_count **)&v83[16];
      if (*(_QWORD *)&v83[16])
      {
        v41 = (unint64_t *)(*(_QWORD *)&v83[16] + 8);
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
        }
      }
      v78[0] = &off_24CA17CC8;
      if (v78[2])
      {
        v43 = (unint64_t *)((char *)v78[2] + 8);
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          (*(void (**)(void *))(*(_QWORD *)v78[2] + 16))(v78[2]);
          std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v78[2]);
        }
      }
      *a3 = v39 + 3;
      a3[1] = v39;
      return;
    case 6:
      sub_21009B324((uint64_t *)v78);
      v18 = (char *)operator new(0xF0uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = &off_24CA0D568;
      v46 = v78[0];
      v45 = (std::__shared_weak_count *)v78[1];
      *(void **)v83 = v78[0];
      *(void **)&v83[8] = v78[1];
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = off_24CA09FD0;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24CA0A030;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v18 + 40));
      *((_QWORD *)v18 + 28) = v46;
      *((_QWORD *)v18 + 29) = v45;
      if (v45)
      {
        v47 = (unint64_t *)&v45->__shared_owners_;
        do
          v48 = __ldxr(v47);
        while (__stxr(v48 + 1, v47));
        *((_QWORD *)v18 + 3) = off_24CA09F28;
        *((_QWORD *)v18 + 4) = &unk_24CA09F88;
        sub_20EB0580C((uint64_t)&v90);
        do
          v49 = __ldaxr(v47);
        while (__stlxr(v49 - 1, v47));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = off_24CA09F28;
        *((_QWORD *)v18 + 4) = &unk_24CA09F88;
        sub_20EB0580C((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v74 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v74);
      while (__stlxr(v71 - 1, v74));
      goto LABEL_152;
    case 7:
      v50 = (char *)operator new(0x270uLL);
      *((_QWORD *)v50 + 1) = 0;
      *((_QWORD *)v50 + 2) = 0;
      *(_QWORD *)v50 = &off_24CA0D5B8;
      bzero(v50 + 40, 0x210uLL);
      *((_QWORD *)v50 + 3) = off_24CA0A100;
      *((_QWORD *)v50 + 4) = &unk_24CA0A178;
      v50[56] = 0;
      v50[88] = 0;
      v50[112] = 0;
      v50[144] = 0;
      v50[176] = 0;
      v50[208] = 0;
      *((_QWORD *)v50 + 28) = 0;
      *((_QWORD *)v50 + 29) = 0;
      *((_QWORD *)v50 + 27) = 0;
      *((_DWORD *)v50 + 71) = 0;
      *((_QWORD *)v50 + 33) = 0;
      *((_QWORD *)v50 + 34) = 0;
      *((_QWORD *)v50 + 32) = 0;
      *((_DWORD *)v50 + 81) = 0;
      *((_QWORD *)v50 + 38) = 0;
      *((_QWORD *)v50 + 39) = 0;
      *((_QWORD *)v50 + 37) = 0;
      *((_DWORD *)v50 + 91) = 0;
      *((_QWORD *)v50 + 43) = 0;
      *((_QWORD *)v50 + 44) = 0;
      *((_QWORD *)v50 + 42) = 0;
      *((_QWORD *)v50 + 48) = 0;
      *((_QWORD *)v50 + 49) = 0;
      *((_QWORD *)v50 + 47) = 0;
      v50[536] = 0;
      *(_QWORD *)(v50 + 420) = 0;
      *((_DWORD *)v50 + 107) = 0;
      *(_QWORD *)(v50 + 404) = 0;
      *(_QWORD *)(v50 + 412) = 0;
      *(_QWORD *)(v50 + 452) = 0;
      *((_DWORD *)v50 + 115) = 0;
      *(_QWORD *)(v50 + 436) = 0;
      *(_QWORD *)(v50 + 444) = 0;
      *(_QWORD *)(v50 + 476) = 0;
      *(_QWORD *)(v50 + 468) = 0;
      *((_DWORD *)v50 + 123) = 0;
      *(_QWORD *)(v50 + 484) = 0;
      *(_QWORD *)(v50 + 508) = 0;
      *(_QWORD *)(v50 + 500) = 0;
      *((_DWORD *)v50 + 131) = 0;
      *(_QWORD *)(v50 + 516) = 0;
      *((_OWORD *)v50 + 38) = 0u;
      *(_OWORD *)(v50 + 580) = 0u;
      *(_OWORD *)(v50 + 596) = 0u;
      *(_OWORD *)(v50 + 564) = 0u;
      *a3 = v50 + 32;
      a3[1] = v50;
      return;
    case 8:
      v51 = operator new(4uLL);
      *v51 = 0;
      v52 = operator new(0x108uLL);
      v52[1] = 0;
      v52[2] = 0;
      *v52 = &off_24CA0D378;
      v52[3] = off_24CA08F38;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      v52[4] = &unk_24CA08F98;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v52 + 5));
      *((_BYTE *)v52 + 224) = 7;
      *((_BYTE *)v52 + 232) = 7;
      v52[31] = 0;
      v52[32] = 0;
      v52[30] = 0;
      v53 = operator new(4uLL);
      v52[30] = v53;
      *v53++ = *v51;
      v52[31] = v53;
      v52[32] = v53;
      v52[3] = off_24CA08E90;
      v52[4] = &unk_24CA08EF0;
      sub_20EB0580C((uint64_t)&v90);
      operator delete(v51);
      *a3 = v52 + 3;
      a3[1] = v52;
      return;
    case 9:
      memset(v83, 0, 24);
      sub_2100B95CC((uint64_t)&v90, (uint64_t)v83);
      v55 = v90;
      v54 = v91;
      v78[0] = v90;
      v78[1] = v91;
      *(_OWORD *)&v78[2] = v92;
      if (*(_QWORD *)v83)
      {
        *(_QWORD *)&v83[8] = *(_QWORD *)v83;
        operator delete(*(void **)v83);
      }
      v18 = (char *)operator new(0x108uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = &off_24CA0D608;
      *(_QWORD *)v83 = v55;
      *(_QWORD *)&v83[8] = v54;
      v78[0] = 0;
      v78[1] = 0;
      *(_OWORD *)&v83[16] = *(_OWORD *)&v78[2];
      *((_QWORD *)v18 + 3) = off_24CA0A330;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24CA0A390;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v18 + 40));
      *((_QWORD *)v18 + 28) = *(_QWORD *)&v83[16];
      *((_QWORD *)v18 + 29) = v55;
      *((_QWORD *)v18 + 30) = v54;
      if (v54)
      {
        v56 = (unint64_t *)&v54->__shared_owners_;
        do
          v57 = __ldxr(v56);
        while (__stxr(v57 + 1, v56));
        *(_OWORD *)(v18 + 248) = *(_OWORD *)&v83[16];
        *((_QWORD *)v18 + 3) = off_24CA0A288;
        *((_QWORD *)v18 + 4) = &unk_24CA0A2E8;
        sub_20EB0580C((uint64_t)&v90);
        do
          v58 = __ldaxr(v56);
        while (__stlxr(v58 - 1, v56));
        if (!v58)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
        }
      }
      else
      {
        *(_OWORD *)(v18 + 248) = *(_OWORD *)&v83[16];
        *((_QWORD *)v18 + 3) = off_24CA0A288;
        *((_QWORD *)v18 + 4) = &unk_24CA0A2E8;
        sub_20EB0580C((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v75 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v75);
      while (__stlxr(v71 - 1, v75));
      goto LABEL_152;
    case 10:
      HIBYTE(v78[2]) = 0;
      LOBYTE(v78[0]) = 0;
      LODWORD(v78[3]) = 6;
      HIBYTE(v78[6]) = 0;
      LOBYTE(v78[4]) = 0;
      LODWORD(v79) = 0;
      HIBYTE(v81[0]) = 0;
      LOBYTE(v80) = 0;
      HIBYTE(v82) = 0;
      v18 = (char *)operator new(0x150uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = &off_24CA0D658;
      *(_OWORD *)v83 = *(_OWORD *)v78;
      *(void **)&v83[16] = v78[2];
      memset(v78, 0, 24);
      *(_DWORD *)&v83[24] = 6;
      *(_OWORD *)__p = *(_OWORD *)&v78[4];
      *(void **)&__p[16] = v78[6];
      memset(&v78[4], 0, 24);
      LODWORD(v85) = 0;
      *(_OWORD *)v86 = v80;
      v87 = v81[0];
      v80 = 0uLL;
      memset(v81, 0, sizeof(v81));
      v89 = v82;
      *(_OWORD *)v88 = *(_OWORD *)&v81[1];
      v82 = 0;
      *((_QWORD *)v18 + 3) = &off_24CA0A5D8;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      LOBYTE(v92) = 0;
      *((_QWORD *)v18 + 4) = &unk_24CA0A638;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v18 + 40));
      sub_20FF36D68(v18 + 224, (__int128 *)v83);
      *((_QWORD *)v18 + 3) = &off_24CA0A530;
      *((_QWORD *)v18 + 4) = &unk_24CA0A590;
      sub_20EB0580C((uint64_t)&v90);
      if (SHIBYTE(v89) < 0)
      {
        operator delete(v88[0]);
        if ((SHIBYTE(v87) & 0x80000000) == 0)
        {
LABEL_93:
          if ((__p[23] & 0x80000000) == 0)
            goto LABEL_94;
          goto LABEL_141;
        }
      }
      else if ((SHIBYTE(v87) & 0x80000000) == 0)
      {
        goto LABEL_93;
      }
      operator delete(v86[0]);
      if ((__p[23] & 0x80000000) == 0)
      {
LABEL_94:
        if ((v83[23] & 0x80000000) == 0)
          goto LABEL_154;
        goto LABEL_142;
      }
LABEL_141:
      operator delete(*(void **)__p);
      if ((v83[23] & 0x80000000) == 0)
        goto LABEL_154;
LABEL_142:
      operator delete(*(void **)v83);
LABEL_154:
      *a3 = v19;
      a3[1] = v18;
      return;
    case 11:
      sub_20FF3C198((uint64_t)v78);
      v4 = operator new(0x198uLL);
      v5 = v4;
      v4[1] = 0;
      v4[2] = 0;
      *v4 = &off_24CA0D6A8;
      v6 = v78[0];
      v78[0] = 0;
      *(_QWORD *)v83 = v6;
      v83[8] = 0;
      __p[0] = 0;
      v7 = LOBYTE(v78[4]);
      if (LOBYTE(v78[4]))
      {
        *(_OWORD *)&v83[8] = *(_OWORD *)&v78[1];
        *(void **)&v83[24] = v78[3];
        memset(&v78[1], 0, 24);
        __p[0] = 1;
      }
      __p[8] = 0;
      LOBYTE(v86[0]) = 0;
      v8 = v80;
      if ((_BYTE)v80)
      {
        *(_OWORD *)&__p[8] = *(_OWORD *)&v78[5];
        v85 = v79;
        v78[6] = 0;
        v79 = 0;
        v78[5] = 0;
        LOBYTE(v86[0]) = 1;
      }
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      v4[3] = off_24CA0A898;
      v4[4] = &unk_24CA0A8F8;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v4 + 5));
      sub_20FF36FD4((uint64_t)(v5 + 28), (uint64_t *)v83);
      v5[3] = off_24CA0A7F0;
      v5[4] = &unk_24CA0A850;
      sub_20EB0580C((uint64_t)&v90);
      if (v8 && SHIBYTE(v85) < 0)
        operator delete(*(void **)&__p[8]);
      if (v7 && (v83[31] & 0x80000000) != 0)
        operator delete(*(void **)&v83[8]);
      if (v6)
        MEMORY[0x212BC6398](v6, 0x1000C4072FAA15ELL);
      if ((_BYTE)v80 && SHIBYTE(v79) < 0)
        operator delete(v78[5]);
      if (LOBYTE(v78[4]) && SHIBYTE(v78[3]) < 0)
        operator delete(v78[1]);
      v9 = v78[0];
      v78[0] = 0;
      if (v9)
        MEMORY[0x212BC6398](v9, 0x1000C4072FAA15ELL);
      *a3 = v5 + 3;
      a3[1] = v5;
      return;
    case 12:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_2100BBC08((uint64_t)&v90, v83);
      v60 = *(_QWORD *)v83;
      v59 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = &off_24CA0D6F8;
      *(_QWORD *)v83 = v60;
      *(_QWORD *)&v83[8] = v59;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = off_24CA0AB08;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24CA0AB68;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v60;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v60 + 56) >> 2;
      *((_QWORD *)v18 + 30) = v60;
      *((_QWORD *)v18 + 31) = v59;
      if (v59)
      {
        v61 = (unint64_t *)&v59->__shared_owners_;
        do
          v62 = __ldxr(v61);
        while (__stxr(v62 + 1, v61));
        *((_QWORD *)v18 + 3) = off_24CA0AA60;
        *((_QWORD *)v18 + 4) = &unk_24CA0AAC0;
        sub_20EB0580C((uint64_t)&v90);
        do
          v63 = __ldaxr(v61);
        while (__stlxr(v63 - 1, v61));
        if (!v63)
        {
          ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
          std::__shared_weak_count::__release_weak(v59);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = off_24CA0AA60;
        *((_QWORD *)v18 + 4) = &unk_24CA0AAC0;
        sub_20EB0580C((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v76 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v76);
      while (__stlxr(v71 - 1, v76));
      goto LABEL_152;
    case 13:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_2100BC0F4((uint64_t)&v90, v83);
      v65 = *(_QWORD *)v83;
      v64 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = &off_24CA0D748;
      *(_QWORD *)v83 = v65;
      *(_QWORD *)&v83[8] = v64;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = off_24CA0AD78;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24CA0ADD8;
      LOBYTE(v92) = 0;
      sub_20FF32248((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v65;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v65 + 56) / 6uLL;
      *((_QWORD *)v18 + 30) = v65;
      *((_QWORD *)v18 + 31) = v64;
      if (v64)
      {
        v66 = (unint64_t *)&v64->__shared_owners_;
        do
          v67 = __ldxr(v66);
        while (__stxr(v67 + 1, v66));
        *((_QWORD *)v18 + 3) = off_24CA0ACD0;
        *((_QWORD *)v18 + 4) = &unk_24CA0AD30;
        sub_20EB0580C((uint64_t)&v90);
        do
          v68 = __ldaxr(v66);
        while (__stlxr(v68 - 1, v66));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
          std::__shared_weak_count::__release_weak(v64);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = off_24CA0ACD0;
        *((_QWORD *)v18 + 4) = &unk_24CA0AD30;
        sub_20EB0580C((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v77 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v77);
      while (__stlxr(v71 - 1, v77));
LABEL_152:
      if (!v71)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
      }
      goto LABEL_154;
    default:
      *a3 = 0;
      a3[1] = 0;
      return;
  }
}

void sub_20FF3476C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,void *__p,uint64_t a43)
{
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  void *v47;

  v46 = *(unsigned int *)(v43 + 216);
  if ((_DWORD)v46 != -1)
    ((void (*)(char *, uint64_t))off_24CA0D400[v46])(&a41, v44);
  *(_DWORD *)(v43 + 216) = -1;
  sub_20EB0580C((uint64_t)&__p);
  sub_20FECA8B4((uint64_t *)&a23);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v43);
  operator delete(v47);
  sub_20FECA8B4(&a9);
  _Unwind_Resume(a1);
}

void sub_20FF34BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20FECA8B4(&a9);
  _Unwind_Resume(a1);
}

void sub_20FF34BC0(uint64_t (***lpsrc)()@<X2>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t (***v4)();
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;

  v4 = lpsrc;
  switch(a2)
  {
    case 1:
      if (*lpsrc != &off_24CA0C258)
      {
        v4 = 0;
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/IData.h", 693, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_37;
        }
      }
      v5 = operator new(0x140uLL);
      v5[1] = 0;
      v5[2] = 0;
      *v5 = &off_24CA0D798;
      sub_20FDDA394(v5 + 3, (uint64_t)v4);
      goto LABEL_16;
    case 2:
      sub_20FF351C4(&v18, lpsrc);
      goto LABEL_23;
    case 3:
      sub_20FF35364(&v18, lpsrc);
      goto LABEL_23;
    case 4:
      sub_20FF35508(&v18, lpsrc);
      goto LABEL_23;
    case 5:
      sub_20FF356B8(&v18, lpsrc);
      goto LABEL_23;
    case 6:
      if (*lpsrc == &off_24CA07BC8)
      {
        v6 = (uint64_t)(lpsrc + 1);
        v7 = (uint64_t)(lpsrc + 4);
      }
      else
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_37:
          abort();
        }
        v6 = 8;
        v7 = 32;
      }
      v9 = operator new(0xF0uLL);
      v10 = v9;
      v9[1] = 0;
      v9[2] = 0;
      *v9 = &off_24CA0D568;
      v12 = *(_QWORD *)v6;
      v11 = *(std::__shared_weak_count **)(v6 + 8);
      *(_QWORD *)&v18 = *(_QWORD *)v6;
      *((_QWORD *)&v18 + 1) = v11;
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
      }
      v9[3] = off_24CA09FD0;
      v9[4] = &unk_24CA0A030;
      sub_20FF32248(v7, (uint64_t)(v9 + 5));
      v10[28] = v12;
      v10[29] = v11;
      if (v11)
      {
        v15 = (unint64_t *)&v11->__shared_owners_;
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
        v10[3] = off_24CA09F28;
        v10[4] = &unk_24CA09F88;
        do
          v17 = __ldaxr(v15);
        while (__stlxr(v17 - 1, v15));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      else
      {
        v10[3] = off_24CA09F28;
        v10[4] = &unk_24CA09F88;
      }
      *a3 = v10 + 3;
      a3[1] = v10;
      return;
    case 7:
      v8 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA0AF48, 0);
      if (!v8
        && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/IData.h", 693, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
        goto LABEL_37;
      }
      v5 = operator new(0x270uLL);
      v5[1] = 0;
      v5[2] = 0;
      *v5 = &off_24CA0D7E8;
      sub_20FDDB074(v5 + 3, (uint64_t)v8);
LABEL_16:
      *a3 = v5 + 4;
      a3[1] = v5;
      break;
    case 8:
      sub_20FF34F80(&v18, lpsrc);
      goto LABEL_23;
    case 9:
      sub_20FF3587C(&v18, lpsrc);
      goto LABEL_23;
    case 10:
      sub_20FF35A34(&v18, lpsrc);
      goto LABEL_23;
    case 11:
      sub_20FF35D68(&v18, lpsrc);
      goto LABEL_23;
    case 12:
      sub_20FF360A0(&v18, lpsrc);
      goto LABEL_23;
    case 13:
      sub_20FF36244(&v18, lpsrc);
LABEL_23:
      *(_OWORD *)a3 = v18;
      break;
    default:
      *a3 = 0;
      a3[1] = 0;
      break;
  }
}

void sub_20FF34F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_20E86665C((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_20FF34F50(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_20FF34F68(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_20FF34F80(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  _BYTE *v8;
  _BYTE *v9;
  size_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24C9FAC80, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 48;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 48;
  }
  v6 = operator new(0x108uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D378;
  v7 = *(_BYTE *)v4;
  v9 = *(_BYTE **)(v4 + 8);
  v8 = *(_BYTE **)(v4 + 16);
  v10 = v8 - v9;
  if (v8 == v9)
  {
    v12 = 0;
    v11 = 0;
  }
  else
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_20FDFA718();
    v11 = (char *)operator new(v8 - v9);
    v12 = &v11[v10];
    memcpy(v11, v9, v10);
  }
  v6[3] = off_24CA08F38;
  v6[4] = &unk_24CA08F98;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  v6[30] = 0;
  *((_BYTE *)v6 + 224) = v7;
  *((_BYTE *)v6 + 232) = v7;
  v6[31] = 0;
  v6[32] = 0;
  v13 = v12 - v11;
  if (v12 != v11)
  {
    if (v13 < 0)
      sub_20FDFA718();
    v14 = (char *)operator new(v12 - v11);
    v6[30] = v14;
    v15 = &v14[v13];
    v6[32] = &v14[v13];
    memcpy(v14, v11, v12 - v11);
    v6[31] = v15;
  }
  v6[3] = off_24CA08E90;
  v6[4] = &unk_24CA08EF0;
  if (v11)
    operator delete(v11);
  *a1 = v6 + 3;
  a1[1] = v6;
}

void sub_20FF35140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  std::__shared_weak_count *v17;
  void *v18;
  void *v20;

  if (v18)
    operator delete(v18);
  std::__shared_weak_count::~__shared_weak_count(v17);
  operator delete(v20);
  _Unwind_Resume(a1);
}

void sub_20FF351C4(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA09508, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D428;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = off_24CA09380;
  v6[4] = &unk_24CA093E0;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56);
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = off_24CA092D8;
    v7[4] = &unk_24CA09338;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = off_24CA092D8;
    v7[4] = &unk_24CA09338;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_20FF35344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_20E86665C((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_20FF35364(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24C9C4A18, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D478;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = off_24CA09628;
  v6[4] = &unk_24CA09688;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56) >> 1;
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = off_24CA09580;
    v7[4] = &unk_24CA095E0;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = off_24CA09580;
    v7[4] = &unk_24CA095E0;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_20FF354E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_20E86665C((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_20FF35508(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA09988, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D4C8;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = off_24CA09800;
  v6[4] = &unk_24CA09860;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56) / 3uLL;
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = off_24CA09758;
    v7[4] = &unk_24CA097B8;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = off_24CA09758;
    v7[4] = &unk_24CA097B8;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_20FF35698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_20E86665C((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_20FF356B8(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  _QWORD v15[2];
  std::__shared_weak_count *v16;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA09C30, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x108uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D518;
  v9 = *(_QWORD *)(v4 + 8);
  v8 = *(std::__shared_weak_count **)(v4 + 16);
  v15[0] = &off_24CA17CC8;
  v15[1] = v9;
  v16 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = off_24CA09AA8;
  v6[4] = &unk_24CA09B08;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  sub_2100C9280((uint64_t)(v7 + 28), (uint64_t)v15);
  v7[3] = off_24CA09A00;
  v7[4] = &unk_24CA09A60;
  v15[0] = &off_24CA17CC8;
  v12 = v16;
  if (v16)
  {
    v13 = (unint64_t *)&v16->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_20FF35824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void *v19;

  v18 = *(unsigned int *)(v15 + 216);
  if ((_DWORD)v18 != -1)
    ((void (*)(char *, uint64_t))off_24CA0D400[v18])(&a15, v16);
  *(_DWORD *)(v15 + 216) = -1;
  sub_2100D08E0(&a9);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v15);
  operator delete(v19);
  _Unwind_Resume(a1);
}

void sub_20FF3587C(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA0A4B8, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 48;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 48;
  }
  v6 = operator new(0x108uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D608;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v15 = *(_OWORD *)(v4 + 16);
  v6[3] = off_24CA0A330;
  v6[4] = &unk_24CA0A390;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  v7[28] = v15;
  v7[29] = v9;
  v7[30] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    *(_OWORD *)(v7 + 31) = v15;
    v7[3] = off_24CA0A288;
    v7[4] = &unk_24CA0A2E8;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    *(_OWORD *)(v7 + 31) = v15;
    v7[3] = off_24CA0A288;
    v7[4] = &unk_24CA0A2E8;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_20FF35A14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_20E86665C((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_20FF35A34(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char *v11;
  void *v12[2];
  uint64_t v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  int v17;
  __int128 v18;
  uint64_t v19;
  __int128 __p;
  uint64_t v21;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA0A778, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 128;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 128;
  }
  v6 = operator new(0x150uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D658;
  if (*(char *)(v4 + 23) < 0)
  {
    sub_20E860C04(v12, *(void **)v4, *(_QWORD *)(v4 + 8));
  }
  else
  {
    v7 = *(_OWORD *)v4;
    v13 = *(_QWORD *)(v4 + 16);
    *(_OWORD *)v12 = v7;
  }
  v14 = *(_DWORD *)(v4 + 24);
  if (*(char *)(v4 + 55) < 0)
  {
    sub_20E860C04(&v15, *(void **)(v4 + 32), *(_QWORD *)(v4 + 40));
  }
  else
  {
    v8 = *(_OWORD *)(v4 + 32);
    v16 = *(_QWORD *)(v4 + 48);
    v15 = v8;
  }
  v17 = *(_DWORD *)(v4 + 56);
  if (*(char *)(v4 + 87) < 0)
  {
    sub_20E860C04(&v18, *(void **)(v4 + 64), *(_QWORD *)(v4 + 72));
  }
  else
  {
    v9 = *(_OWORD *)(v4 + 64);
    v19 = *(_QWORD *)(v4 + 80);
    v18 = v9;
  }
  if (*(char *)(v4 + 111) < 0)
  {
    sub_20E860C04(&__p, *(void **)(v4 + 88), *(_QWORD *)(v4 + 96));
  }
  else
  {
    v10 = *(_OWORD *)(v4 + 88);
    v21 = *(_QWORD *)(v4 + 104);
    __p = v10;
  }
  v6[3] = &off_24CA0A5D8;
  v6[4] = &unk_24CA0A638;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  sub_20FF36D68((_BYTE *)v6 + 224, (__int128 *)v12);
  v6[3] = &off_24CA0A530;
  v6[4] = &unk_24CA0A590;
  if (SHIBYTE(v21) < 0)
  {
    operator delete((void *)__p);
    if ((SHIBYTE(v19) & 0x80000000) == 0)
    {
LABEL_19:
      v11 = (char *)(v6 + 3);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
        goto LABEL_20;
LABEL_24:
      operator delete((void *)v15);
      if ((SHIBYTE(v13) & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_25;
    }
  }
  else if ((SHIBYTE(v19) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete((void *)v18);
  v11 = (char *)(v6 + 3);
  if (SHIBYTE(v16) < 0)
    goto LABEL_24;
LABEL_20:
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
LABEL_21:
    *a1 = v11;
    a1[1] = v6;
    return;
  }
LABEL_25:
  operator delete(v12[0]);
  *a1 = v11;
  a1[1] = v6;
}

void sub_20FF35C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  std::__shared_weak_count *v28;
  void *v30;
  void *v31;

  if (a28 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a14 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  if ((a14 & 0x80000000) == 0)
  {
LABEL_4:
    std::__shared_weak_count::~__shared_weak_count(v28);
    operator delete(v30);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a9);
  std::__shared_weak_count::~__shared_weak_count(v28);
  operator delete(v31);
  _Unwind_Resume(a1);
}

void sub_20FF35CF8(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_20FF35D10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;

  v13 = *(unsigned int *)(v9 + 216);
  if ((_DWORD)v13 != -1)
    ((void (*)(uint64_t, uint64_t))off_24CA0D400[v13])(v11 - 33, v10);
  *(_DWORD *)(v9 + 216) = -1;
  sub_20FDE3B08((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v9);
  operator delete(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF35D68(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t result;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 __p;
  uint64_t v18;
  char v19;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA0A9E8, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 80;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 80;
  }
  v6 = operator new(0x198uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D6A8;
  v7 = *(_QWORD *)v4;
  v8 = operator new();
  *(_BYTE *)v8 = 0;
  *(_DWORD *)(v8 + 128) = -1;
  v9 = *(unsigned int *)(v7 + 128);
  if ((_DWORD)v9 != -1)
  {
    ((void (*)(uint64_t *, uint64_t, uint64_t))off_24CA0DA40[v9])(&v13, v8, v7);
    *(_DWORD *)(v8 + 128) = v9;
  }
  *(_BYTE *)(v8 + 136) = *(_BYTE *)(v7 + 136);
  v13 = v8;
  LOBYTE(v14) = 0;
  v16 = 0;
  if (*(_BYTE *)(v4 + 32))
  {
    if (*(char *)(v4 + 31) < 0)
    {
      sub_20E860C04(&v14, *(void **)(v4 + 8), *(_QWORD *)(v4 + 16));
    }
    else
    {
      v10 = *(_OWORD *)(v4 + 8);
      v15 = *(_QWORD *)(v4 + 24);
      v14 = v10;
    }
    v16 = 1;
  }
  LOBYTE(__p) = 0;
  v19 = 0;
  if (*(_BYTE *)(v4 + 64))
  {
    if (*(char *)(v4 + 63) < 0)
    {
      sub_20E860C04(&__p, *(void **)(v4 + 40), *(_QWORD *)(v4 + 48));
    }
    else
    {
      v11 = *(_OWORD *)(v4 + 40);
      v18 = *(_QWORD *)(v4 + 56);
      __p = v11;
    }
    v19 = 1;
  }
  v6[3] = off_24CA0A898;
  v6[4] = &unk_24CA0A8F8;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  sub_20FF36FD4((uint64_t)(v6 + 28), &v13);
  v6[3] = off_24CA0A7F0;
  v6[4] = &unk_24CA0A850;
  if (v19 && SHIBYTE(v18) < 0)
    operator delete((void *)__p);
  if (v16 && SHIBYTE(v15) < 0)
    operator delete((void *)v14);
  result = v13;
  v13 = 0;
  if (result)
    result = MEMORY[0x212BC6398](result, 0x1000C4072FAA15ELL);
  *a1 = v6 + 3;
  a1[1] = v6;
  return result;
}

void sub_20FF35FB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  std::__shared_weak_count *v23;
  void *v25;
  void *v26;

  if (a23 && a22 < 0)
    operator delete(__p);
  if (a16 && a15 < 0)
    operator delete(a10);
  if (a9)
  {
    MEMORY[0x212BC6398](a9, 0x1000C4072FAA15ELL);
    std::__shared_weak_count::~__shared_weak_count(v23);
    operator delete(v25);
    _Unwind_Resume(a1);
  }
  std::__shared_weak_count::~__shared_weak_count(v23);
  operator delete(v26);
  _Unwind_Resume(a1);
}

void sub_20FF360A0(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA0AC58, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D6F8;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = off_24CA0AB08;
  v6[4] = &unk_24CA0AB68;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56) >> 2;
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = off_24CA0AA60;
    v7[4] = &unk_24CA0AAC0;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = off_24CA0AA60;
    v7[4] = &unk_24CA0AAC0;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_20FF36224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_20E86665C((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_20FF36244(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24CA0C128, (const struct __class_type_info *)&unk_24CA0AEC8, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1045, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_24CA0D748;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = off_24CA0AD78;
  v6[4] = &unk_24CA0ADD8;
  sub_20FF32248(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56) / 6uLL;
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = off_24CA0ACD0;
    v7[4] = &unk_24CA0AD30;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = off_24CA0ACD0;
    v7[4] = &unk_24CA0AD30;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_20FF363D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_20E86665C((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

BOOL sub_20FF363F4(uint64_t a1, int a2)
{
  return (a2 - 1) < 0xD;
}

uint64_t sub_20FF36404(uint64_t a1, unsigned int a2)
{
  uint64_t result;
  unsigned int v3;
  unsigned int v4;
  _BYTE v5[24];
  int v6;
  char v7;
  _QWORD v8[2];

  v4 = a2;
  if (a2 - 1 >= 0xD)
    return sub_20FF3650C("unknown type id ", &v4);
  v3 = a2;
  v6 = 0;
  sub_20FF3742C((uint64_t)v8, (uint64_t)v5, &v3);
  if (v6 == -1)
    sub_20E877AB8();
  v8[0] = &v7;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0D3E8[v6])(v8, v5);
  if (v6 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0D3D0[v6])(v8, v5);
  return result;
}

void sub_20FF364D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24CA0D3D0[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF3650C(char *__s, unsigned int *a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  std::string v6;
  _QWORD v7[5];
  _QWORD *v8;

  v5 = 0;
  sub_20FF0B6DC(v4, __s);
  std::to_string(&v6, *a2);
  v7[0] = v4;
  v7[1] = &v6;
  v7[2] = v4;
  v7[3] = &v6;
  v7[4] = &v6;
  if (v5 == -1)
    sub_20E877AB8();
  v8 = v7;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0D3B8[v5])(&v8, v4);
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v6.__r_.__value_.__l.__data_);
  if (v5 == -1)
    sub_20E877AB8();
  v7[0] = &v6;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24CA0D3E8[v5])(v7, v4);
  if (v5 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24CA0D3D0[v5])(v7, v4);
  return result;
}

void sub_20FF36608(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF36624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_20E877A60((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20FF36614);
}

void sub_20FF36648(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D328;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36658(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D328;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF36688(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20FF36698(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D378;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF366A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D378;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF366D8(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 24) = off_24CA08F38;
  *(_QWORD *)(a1 + 32) = &unk_24CA08F98;
  v2 = *(void **)(a1 + 240);
  if (v2)
  {
    *(_QWORD *)(a1 + 248) = v2;
    operator delete(v2);
  }
  v3 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v3 != -1)
    ((void (*)(char *, uint64_t))off_24CA08120[v3])(&v4, a1 + 40);
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_20FF36750(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D428;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36760(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D428;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF36790(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = off_24CA09380;
  *(_QWORD *)(a1 + 32) = &unk_24CA093E0;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24CA08120[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_20FF36840(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D478;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36850(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D478;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF36880(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = off_24CA09628;
  *(_QWORD *)(a1 + 32) = &unk_24CA09688;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24CA08120[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_20FF36930(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D4C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36940(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D4C8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF36970(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = off_24CA09800;
  *(_QWORD *)(a1 + 32) = &unk_24CA09860;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24CA08120[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_20FF36A20(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D518;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36A30(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D518;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

_QWORD *sub_20FF36A60(_QWORD *result)
{
  _QWORD *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  char v4;

  v1 = result;
  v2 = (uint64_t (*)(_QWORD))result[29];
  result[3] = off_24CA09AA8;
  result[4] = &unk_24CA09B08;
  if (v2)
    result = (_QWORD *)v2(0);
  v3 = *((unsigned int *)v1 + 54);
  if ((_DWORD)v3 != -1)
    result = (_QWORD *)((uint64_t (*)(char *, _QWORD *))off_24CA08120[v3])(&v4, v1 + 5);
  *((_DWORD *)v1 + 54) = -1;
  return result;
}

void sub_20FF36AEC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D568;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36AFC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D568;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF36B2C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = off_24CA09FD0;
  *(_QWORD *)(a1 + 32) = &unk_24CA0A030;
  v2 = *(std::__shared_weak_count **)(a1 + 232);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24CA08120[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_20FF36BDC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D5B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36BEC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D5B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF36C1C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20FF36C2C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D608;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36C3C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D608;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF36C6C(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = off_24CA0A330;
  *(_QWORD *)(a1 + 32) = &unk_24CA0A390;
  v2 = *(std::__shared_weak_count **)(a1 + 240);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24CA08120[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_20FF36D1C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D658;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36D2C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D658;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF36D5C(uint64_t a1)
{
  return sub_20FDDE084(a1 + 24);
}

_BYTE *sub_20FF36D68(_BYTE *__dst, __int128 *a2)
{
  __int128 v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;

  if (*((char *)a2 + 23) < 0)
  {
    sub_20E860C04(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    __dst[24] = *((_DWORD *)a2 + 6);
    v5 = __dst + 32;
    if ((*((char *)a2 + 55) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v4 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
    __dst[24] = *((_DWORD *)a2 + 6);
    v5 = __dst + 32;
    if ((*((char *)a2 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = a2[2];
      *((_QWORD *)v5 + 2) = *((_QWORD *)a2 + 6);
      *(_OWORD *)v5 = v6;
      goto LABEL_6;
    }
  }
  sub_20E860C04(v5, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
LABEL_6:
  *((_DWORD *)__dst + 14) = *((_DWORD *)a2 + 14);
  if (*((char *)a2 + 87) < 0)
  {
    sub_20E860C04(__dst + 64, *((void **)a2 + 8), *((_QWORD *)a2 + 9));
  }
  else
  {
    v7 = a2[4];
    *((_QWORD *)__dst + 10) = *((_QWORD *)a2 + 10);
    *((_OWORD *)__dst + 4) = v7;
  }
  v8 = __dst + 88;
  if (*((char *)a2 + 111) < 0)
  {
    sub_20E860C04(v8, *((void **)a2 + 11), *((_QWORD *)a2 + 12));
  }
  else
  {
    v9 = *(__int128 *)((char *)a2 + 88);
    *((_QWORD *)__dst + 13) = *((_QWORD *)a2 + 13);
    *(_OWORD *)v8 = v9;
  }
  return __dst;
}

void sub_20FF36E78(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(char *)(v1 + 87) < 0)
  {
    operator delete(*v3);
    if ((*(char *)(v1 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 23) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((*(char *)(v1 + 55) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v2);
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_20FF36EEC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D6A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF36EFC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D6A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF36F2C(uint64_t a1)
{
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 24) = off_24CA0A898;
  *(_QWORD *)(a1 + 32) = &unk_24CA0A8F8;
  if (*(_BYTE *)(a1 + 400) && *(char *)(a1 + 399) < 0)
    operator delete(*(void **)(a1 + 376));
  if (*(_BYTE *)(a1 + 368) && *(char *)(a1 + 367) < 0)
  {
    operator delete(*(void **)(a1 + 344));
    v2 = *(unsigned int *)(a1 + 216);
    if ((_DWORD)v2 == -1)
      goto LABEL_8;
    goto LABEL_7;
  }
  v2 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v2 != -1)
LABEL_7:
    ((void (*)(char *, uint64_t))off_24CA0D400[v2])(&v3, a1 + 40);
LABEL_8:
  *(_DWORD *)(a1 + 216) = -1;
}

uint64_t sub_20FF36FD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v12;
  char v13;

  v4 = *a2;
  v5 = operator new();
  *(_BYTE *)v5 = 0;
  *(_DWORD *)(v5 + 128) = -1;
  v6 = *(unsigned int *)(v4 + 128);
  if ((_DWORD)v6 != -1)
  {
    ((void (*)(char *, uint64_t, uint64_t))off_24CA0DA40[v6])(&v13, v5, v4);
    *(_DWORD *)(v5 + 128) = v6;
  }
  *(_BYTE *)(v5 + 136) = *(_BYTE *)(v4 + 136);
  v12 = v5;
  v7 = sub_20FF3C8DC(a1 + 8, &v12);
  v8 = v12;
  v12 = 0;
  if (v8)
    MEMORY[0x212BC6398](v8, 0x1000C4072FAA15ELL, v7);
  *(_BYTE *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  if (*((_BYTE *)a2 + 32))
  {
    if (*((char *)a2 + 31) < 0)
    {
      sub_20E860C04((_BYTE *)(a1 + 120), (void *)a2[1], a2[2]);
    }
    else
    {
      v9 = *(_OWORD *)(a2 + 1);
      *(_QWORD *)(a1 + 136) = a2[3];
      *(_OWORD *)(a1 + 120) = v9;
    }
    *(_BYTE *)(a1 + 144) = 1;
  }
  *(_BYTE *)(a1 + 152) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  if (*((_BYTE *)a2 + 64))
  {
    if (*((char *)a2 + 63) < 0)
    {
      sub_20E860C04((_BYTE *)(a1 + 152), (void *)a2[5], a2[6]);
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 5);
      *(_QWORD *)(a1 + 168) = a2[7];
      *(_OWORD *)(a1 + 152) = v10;
    }
    *(_BYTE *)(a1 + 176) = 1;
  }
  return a1;
}

void sub_20FF37130(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  char *v9;
  void **v10;
  void **v11;

  if (v9[176] && v9[175] < 0)
    operator delete(*v11);
  if (v9[144])
  {
    if (v9[143] < 0)
    {
      operator delete(*v10);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF371AC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D6F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF371BC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D6F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF371EC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = off_24CA0AB08;
  *(_QWORD *)(a1 + 32) = &unk_24CA0AB68;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24CA08120[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_20FF3729C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D748;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF372AC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D748;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF372DC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = off_24CA0AD78;
  *(_QWORD *)(a1 + 32) = &unk_24CA0ADD8;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24CA08120[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_20FF3738C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D798;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF3739C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D798;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF373CC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20FF373DC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D7E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF373EC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D7E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF3741C(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_20FF3742C(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  void **v9;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *__dst[2];
  unint64_t v21;
  _QWORD v22[5];
  _QWORD *v23;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20E863438(v5);
  v22[0] = v5;
  v6 = *a3;
  if (v6 >= 0xE
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/DataType.cpp", 43, (uint64_t)"idx < static_cast<uint32_t>(DataType::End)", 42, (uint64_t)&unk_2102CBE2D, 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  sub_20E86A980((_QWORD *)(v5 + 16), (uint64_t)(&off_24CA0AF88)[2 * v6], (uint64_t)(&off_24CA0AF88)[2 * v6 + 1]);
  v7 = *(_DWORD *)(v5 + 120);
  if ((v7 & 0x10) != 0)
  {
    v10 = *(_QWORD *)(v5 + 112);
    v11 = *(_QWORD *)(v5 + 72);
    if (v10 < v11)
    {
      *(_QWORD *)(v5 + 112) = v11;
      v10 = v11;
    }
    v12 = *(const void **)(v5 + 64);
    v8 = v10 - (_QWORD)v12;
    if (v10 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_24;
  }
  else
  {
    if ((v7 & 8) == 0)
    {
      v8 = 0;
      HIBYTE(v21) = 0;
      v9 = __dst;
      goto LABEL_16;
    }
    v12 = *(const void **)(v5 + 40);
    v8 = *(_QWORD *)(v5 + 56) - (_QWORD)v12;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_24:
      sub_20E860B7C();
  }
  if (v8 >= 0x17)
  {
    v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v13 = v8 | 7;
    v14 = v13 + 1;
    v9 = (void **)operator new(v13 + 1);
    __dst[1] = (void *)v8;
    v21 = v14 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_15;
  }
  HIBYTE(v21) = v8;
  v9 = __dst;
  if (v8)
LABEL_15:
    memmove(v9, v12, v8);
LABEL_16:
  *((_BYTE *)v9 + v8) = 0;
  v15 = v22[0];
  if (v22[0])
  {
    v16 = MEMORY[0x24BEDB7F0];
    v17 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v22[0] = *MEMORY[0x24BEDB7F0];
    v18 = *(_QWORD *)(v16 + 72);
    *(_QWORD *)(v15 + *(_QWORD *)(v17 - 24)) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v15 + 16) = v18;
    if (*(char *)(v15 + 111) < 0)
      operator delete(*(void **)(v15 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x212BC6290](v15 + 128);
    MEMORY[0x212BC6398](v15, 0x10B2C40EED050F3);
  }
  v22[0] = a2;
  v22[1] = __dst;
  v22[2] = a2;
  v22[3] = __dst;
  v22[4] = __dst;
  v19 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v19 == -1)
    sub_20E877AB8();
  v23 = v22;
  ((void (*)(_QWORD **, uint64_t))off_24CA0D3B8[v19])(&v23, a2);
  if (SHIBYTE(v21) < 0)
    operator delete(__dst[0]);
}

void sub_20FF376D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BC6398](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20FF376F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF37710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20FD0DE48((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20FF37724(std::string::size_type a1@<X0>, void ***a2@<X1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v13[2];
  uint64_t v14;
  void *__dst[2];
  uint64_t v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 __p;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  const char *v35;

  v35 = "data";
  v5 = *(std::__shared_weak_count **)(a1 + 248);
  if (v5)
  {
    v7 = std::__shared_weak_count::lock(v5);
    if (v7)
    {
      v8 = *(_QWORD *)(a1 + 240);
      if (v8)
      {
        sub_20FF389C0(a3, v8, a1, a2);
LABEL_29:
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        return;
      }
    }
  }
  else
  {
    v7 = 0;
  }
  sub_20FF3B644((uint64_t)v13, (const char *)&v35);
  if (SHIBYTE(v14) < 0)
  {
    sub_20E860C04(__dst, v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v13;
    v16 = v14;
  }
  v17 = 1;
  LOBYTE(v18) = 0;
  v22 = 0;
  v23 = 1;
  sub_20FDCABE4(0xAu, (__int128 *)__dst, (uint64_t)&v24);
  *(_OWORD *)a3 = v24;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (!v34)
  {
    *(_BYTE *)(a3 + 120) = 0;
    if (!v23)
      goto LABEL_26;
LABEL_20:
    if (!v22)
      goto LABEL_23;
    if (v21 < 0)
    {
      operator delete(v20);
      if ((v19 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v17)
          goto LABEL_26;
LABEL_24:
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        goto LABEL_26;
      }
    }
    else if ((v19 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v18);
    if (!v17)
      goto LABEL_26;
    goto LABEL_24;
  }
  *(_BYTE *)(a3 + 40) = 0;
  v9 = v27;
  if (v27)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(_QWORD *)(a3 + 32) = v26;
    v26 = 0;
    __p = 0uLL;
    *(_BYTE *)(a3 + 40) = 1;
  }
  *(_BYTE *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 104) = 0;
  if (v33)
  {
    v10 = v30;
    *(_QWORD *)(a3 + 64) = v29;
    *(_OWORD *)(a3 + 48) = v28;
    v28 = 0uLL;
    *(_QWORD *)(a3 + 72) = v10;
    *(_OWORD *)(a3 + 80) = v31;
    *(_QWORD *)(a3 + 96) = v32;
    v29 = 0;
    v31 = 0uLL;
    v32 = 0;
    *(_BYTE *)(a3 + 104) = 1;
  }
  *(_BYTE *)(a3 + 112) = 1;
  *(_BYTE *)(a3 + 120) = 0;
  if (v9 && SHIBYTE(v26) < 0)
    operator delete((void *)__p);
  if (v23)
    goto LABEL_20;
LABEL_26:
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
  if (v7)
    goto LABEL_29;
}

void sub_20FF37984(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,char a39,char a40)
{
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v43;

  p_shared_owners = (unint64_t *)&v40->__shared_owners_;
  do
    v43 = __ldaxr(p_shared_owners);
  while (__stlxr(v43 - 1, p_shared_owners));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF37A34(std::string::size_type a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v13[2];
  uint64_t v14;
  void *__dst[2];
  uint64_t v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 __p;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  const char *v35;

  v35 = "sync update";
  v5 = *(std::__shared_weak_count **)(a1 + 248);
  if (v5)
  {
    v7 = std::__shared_weak_count::lock(v5);
    if (v7)
    {
      v8 = *(_QWORD *)(a1 + 240);
      if (v8)
      {
        sub_20FF38DFC(a3, v8, a1, a2);
LABEL_29:
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        return;
      }
    }
  }
  else
  {
    v7 = 0;
  }
  sub_20FF3B644((uint64_t)v13, (const char *)&v35);
  if (SHIBYTE(v14) < 0)
  {
    sub_20E860C04(__dst, v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v13;
    v16 = v14;
  }
  v17 = 1;
  LOBYTE(v18) = 0;
  v22 = 0;
  v23 = 1;
  sub_20FDCABE4(0xAu, (__int128 *)__dst, (uint64_t)&v24);
  *(_OWORD *)a3 = v24;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (!v34)
  {
    *(_BYTE *)(a3 + 120) = 0;
    if (!v23)
      goto LABEL_26;
LABEL_20:
    if (!v22)
      goto LABEL_23;
    if (v21 < 0)
    {
      operator delete(v20);
      if ((v19 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v17)
          goto LABEL_26;
LABEL_24:
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        goto LABEL_26;
      }
    }
    else if ((v19 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v18);
    if (!v17)
      goto LABEL_26;
    goto LABEL_24;
  }
  *(_BYTE *)(a3 + 40) = 0;
  v9 = v27;
  if (v27)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(_QWORD *)(a3 + 32) = v26;
    v26 = 0;
    __p = 0uLL;
    *(_BYTE *)(a3 + 40) = 1;
  }
  *(_BYTE *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 104) = 0;
  if (v33)
  {
    v10 = v30;
    *(_QWORD *)(a3 + 64) = v29;
    *(_OWORD *)(a3 + 48) = v28;
    v28 = 0uLL;
    *(_QWORD *)(a3 + 72) = v10;
    *(_OWORD *)(a3 + 80) = v31;
    *(_QWORD *)(a3 + 96) = v32;
    v29 = 0;
    v31 = 0uLL;
    v32 = 0;
    *(_BYTE *)(a3 + 104) = 1;
  }
  *(_BYTE *)(a3 + 112) = 1;
  *(_BYTE *)(a3 + 120) = 0;
  if (v9 && SHIBYTE(v26) < 0)
    operator delete((void *)__p);
  if (v23)
    goto LABEL_20;
LABEL_26:
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
  if (v7)
    goto LABEL_29;
}

void sub_20FF37C94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,char a39,char a40)
{
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v43;

  p_shared_owners = (unint64_t *)&v40->__shared_owners_;
  do
    v43 = __ldaxr(p_shared_owners);
  while (__stlxr(v43 - 1, p_shared_owners));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF37D44(std::string::size_type a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v13[2];
  uint64_t v14;
  void *__dst[2];
  uint64_t v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 __p;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  const char *v35;

  v35 = "connection status update";
  v5 = *(std::__shared_weak_count **)(a1 + 248);
  if (v5)
  {
    v7 = std::__shared_weak_count::lock(v5);
    if (v7)
    {
      v8 = *(_QWORD *)(a1 + 240);
      if (v8)
      {
        sub_20FF39D84(a3, v8, a1, a2);
LABEL_29:
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        return;
      }
    }
  }
  else
  {
    v7 = 0;
  }
  sub_20FF3B644((uint64_t)v13, (const char *)&v35);
  if (SHIBYTE(v14) < 0)
  {
    sub_20E860C04(__dst, v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v13;
    v16 = v14;
  }
  v17 = 1;
  LOBYTE(v18) = 0;
  v22 = 0;
  v23 = 1;
  sub_20FDCABE4(0xAu, (__int128 *)__dst, (uint64_t)&v24);
  *(_OWORD *)a3 = v24;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (!v34)
  {
    *(_BYTE *)(a3 + 120) = 0;
    if (!v23)
      goto LABEL_26;
LABEL_20:
    if (!v22)
      goto LABEL_23;
    if (v21 < 0)
    {
      operator delete(v20);
      if ((v19 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v17)
          goto LABEL_26;
LABEL_24:
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        goto LABEL_26;
      }
    }
    else if ((v19 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v18);
    if (!v17)
      goto LABEL_26;
    goto LABEL_24;
  }
  *(_BYTE *)(a3 + 40) = 0;
  v9 = v27;
  if (v27)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(_QWORD *)(a3 + 32) = v26;
    v26 = 0;
    __p = 0uLL;
    *(_BYTE *)(a3 + 40) = 1;
  }
  *(_BYTE *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 104) = 0;
  if (v33)
  {
    v10 = v30;
    *(_QWORD *)(a3 + 64) = v29;
    *(_OWORD *)(a3 + 48) = v28;
    v28 = 0uLL;
    *(_QWORD *)(a3 + 72) = v10;
    *(_OWORD *)(a3 + 80) = v31;
    *(_QWORD *)(a3 + 96) = v32;
    v29 = 0;
    v31 = 0uLL;
    v32 = 0;
    *(_BYTE *)(a3 + 104) = 1;
  }
  *(_BYTE *)(a3 + 112) = 1;
  *(_BYTE *)(a3 + 120) = 0;
  if (v9 && SHIBYTE(v26) < 0)
    operator delete((void *)__p);
  if (v23)
    goto LABEL_20;
LABEL_26:
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
  if (v7)
    goto LABEL_29;
}

void sub_20FF37FA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,char a39,char a40)
{
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v43;

  p_shared_owners = (unint64_t *)&v40->__shared_owners_;
  do
    v43 = __ldaxr(p_shared_owners);
  while (__stlxr(v43 - 1, p_shared_owners));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF38054(std::string::size_type a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *v13[2];
  uint64_t v14;
  void *__dst[2];
  uint64_t v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 __p;
  uint64_t v26;
  unsigned __int8 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  char v34;
  const char *v35;

  v35 = "contexts status update";
  v5 = *(std::__shared_weak_count **)(a1 + 248);
  if (v5)
  {
    v7 = std::__shared_weak_count::lock(v5);
    if (v7)
    {
      v8 = *(_QWORD *)(a1 + 240);
      if (v8)
      {
        sub_20FF3AF44(a3, v8, a1, a2);
LABEL_29:
        p_shared_owners = (unint64_t *)&v7->__shared_owners_;
        do
          v12 = __ldaxr(p_shared_owners);
        while (__stlxr(v12 - 1, p_shared_owners));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        return;
      }
    }
  }
  else
  {
    v7 = 0;
  }
  sub_20FF3B644((uint64_t)v13, (const char *)&v35);
  if (SHIBYTE(v14) < 0)
  {
    sub_20E860C04(__dst, v13[0], (unint64_t)v13[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v13;
    v16 = v14;
  }
  v17 = 1;
  LOBYTE(v18) = 0;
  v22 = 0;
  v23 = 1;
  sub_20FDCABE4(0xAu, (__int128 *)__dst, (uint64_t)&v24);
  *(_OWORD *)a3 = v24;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (!v34)
  {
    *(_BYTE *)(a3 + 120) = 0;
    if (!v23)
      goto LABEL_26;
LABEL_20:
    if (!v22)
      goto LABEL_23;
    if (v21 < 0)
    {
      operator delete(v20);
      if ((v19 & 0x80000000) == 0)
      {
LABEL_23:
        if (!v17)
          goto LABEL_26;
LABEL_24:
        if (SHIBYTE(v16) < 0)
          operator delete(__dst[0]);
        goto LABEL_26;
      }
    }
    else if ((v19 & 0x80000000) == 0)
    {
      goto LABEL_23;
    }
    operator delete(v18);
    if (!v17)
      goto LABEL_26;
    goto LABEL_24;
  }
  *(_BYTE *)(a3 + 40) = 0;
  v9 = v27;
  if (v27)
  {
    *(_OWORD *)(a3 + 16) = __p;
    *(_QWORD *)(a3 + 32) = v26;
    v26 = 0;
    __p = 0uLL;
    *(_BYTE *)(a3 + 40) = 1;
  }
  *(_BYTE *)(a3 + 48) = 0;
  *(_BYTE *)(a3 + 104) = 0;
  if (v33)
  {
    v10 = v30;
    *(_QWORD *)(a3 + 64) = v29;
    *(_OWORD *)(a3 + 48) = v28;
    v28 = 0uLL;
    *(_QWORD *)(a3 + 72) = v10;
    *(_OWORD *)(a3 + 80) = v31;
    *(_QWORD *)(a3 + 96) = v32;
    v29 = 0;
    v31 = 0uLL;
    v32 = 0;
    *(_BYTE *)(a3 + 104) = 1;
  }
  *(_BYTE *)(a3 + 112) = 1;
  *(_BYTE *)(a3 + 120) = 0;
  if (v9 && SHIBYTE(v26) < 0)
    operator delete((void *)__p);
  if (v23)
    goto LABEL_20;
LABEL_26:
  if (SHIBYTE(v14) < 0)
    operator delete(v13[0]);
  if (v7)
    goto LABEL_29;
}

void sub_20FF382B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,int a37,__int16 a38,char a39,char a40)
{
  std::__shared_weak_count *v40;
  unint64_t *p_shared_owners;
  unint64_t v43;

  p_shared_owners = (unint64_t *)&v40->__shared_owners_;
  do
    v43 = __ldaxr(p_shared_owners);
  while (__stlxr(v43 - 1, p_shared_owners));
  if (!v43)
  {
    ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
    std::__shared_weak_count::__release_weak(v40);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF38364(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  char *v13;
  std::mutex *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  char *v45;
  _QWORD *v46;
  char v47;
  __int128 v48;
  int v49;
  __int128 __p;
  uint64_t v51;
  char v52;
  __int128 v53;
  char v54;
  void *v55;
  char v56;
  void *v57;
  char v58;
  void *v59;
  char v60;
  void *v61;
  char v62;
  void *v63;
  char v64;
  char v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;

  v68 = *MEMORY[0x24BDAC8D0];
  v47 = 1;
  v43 = 0x500000001;
  LODWORD(v44) = 0;
  HIDWORD(v44) = 0;
  *(_QWORD *)((char *)&v44 + 4) = 0x200000001;
  sub_20FF195E4(a2, 1, (__n128 *)&v43, (uint64_t)&v48);
  *(_BYTE *)a3 = v47;
  *(_OWORD *)(a3 + 8) = v48;
  *(_DWORD *)(a3 + 24) = v49;
  *(_BYTE *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 56) = 0;
  if (v52)
  {
    if (SHIBYTE(v51) < 0)
    {
      sub_20E860C04((_BYTE *)(a3 + 32), (void *)__p, *((unint64_t *)&__p + 1));
    }
    else
    {
      *(_OWORD *)(a3 + 32) = __p;
      *(_QWORD *)(a3 + 48) = v51;
    }
    *(_BYTE *)(a3 + 56) = 1;
  }
  *(_BYTE *)(a3 + 64) = 0;
  *(_BYTE *)(a3 + 208) = 0;
  if (v65)
  {
    sub_20FCF4B4C((char *)(a3 + 64), &v53);
    *(_BYTE *)(a3 + 208) = 1;
  }
  *(_OWORD *)(a3 + 216) = v66;
  v6 = a1[65];
  *(_QWORD *)(a3 + 232) = v67;
  *(_QWORD *)(a3 + 240) = v6;
  v7 = a1[66];
  *(_QWORD *)(a3 + 248) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a3 + 256) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a3 + 264) = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 16);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = (char *)operator new(0x90uLL);
  *((_QWORD *)v13 + 1) = 0;
  *((_QWORD *)v13 + 2) = 0;
  *(_QWORD *)v13 = &off_24CA0D8B0;
  *(_OWORD *)(v13 + 24) = xmmword_2103E9640;
  *(_OWORD *)(v13 + 40) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_OWORD *)(v13 + 72) = 0u;
  *((_QWORD *)v13 + 11) = 0;
  *((_QWORD *)v13 + 12) = 1018212795;
  *(_OWORD *)(v13 + 104) = 0u;
  *(_OWORD *)(v13 + 120) = 0u;
  *((_QWORD *)v13 + 17) = 0;
  *(_QWORD *)(a3 + 272) = v13 + 24;
  *(_QWORD *)(a3 + 280) = v13;
  v14 = (std::mutex *)a1[70];
  std::mutex::lock(v14);
  v15 = a1[72];
  v16 = a1[73];
  if (v15 < v16)
  {
    sub_20FF3B49C(a1[72], a3);
    v17 = v15 + 288;
    a1[72] = v17;
    goto LABEL_37;
  }
  v18 = a1[71];
  v19 = 0x8E38E38E38E38E39 * ((uint64_t)(v15 - v18) >> 5);
  if (v19 + 1 > 0xE38E38E38E38E3)
    sub_20E867F44();
  v20 = 0x8E38E38E38E38E39 * ((uint64_t)(v16 - v18) >> 5);
  v21 = 2 * v20;
  if (2 * v20 <= v19 + 1)
    v21 = v19 + 1;
  if (v20 >= 0x71C71C71C71C71)
    v22 = 0xE38E38E38E38E3;
  else
    v22 = v21;
  v46 = a1 + 73;
  if (v22)
  {
    if (v22 > 0xE38E38E38E38E3)
      sub_20E877A38();
    v23 = (char *)operator new(288 * v22);
  }
  else
  {
    v23 = 0;
  }
  v43 = (uint64_t)v23;
  *(_QWORD *)&v44 = &v23[288 * v19];
  *((_QWORD *)&v44 + 1) = v44;
  v45 = &v23[288 * v22];
  sub_20FF3B49C(v44, a3);
  v24 = v44;
  v17 = *((_QWORD *)&v44 + 1) + 288;
  v25 = (char *)a1[72];
  v26 = (char *)a1[71];
  if (v25 == v26)
  {
    a1[71] = v44;
    a1[72] = v17;
    a1[73] = v45;
    if (v25)
LABEL_36:
      operator delete(v25);
  }
  else
  {
    v27 = 0;
    do
    {
      v31 = v24 + v27;
      v32 = &v25[v27];
      *(_BYTE *)(v24 + v27 - 288) = v25[v27 - 288];
      *(_OWORD *)(v24 + v27 - 280) = *(_OWORD *)&v25[v27 - 280];
      *(_DWORD *)(v24 + v27 - 264) = *(_DWORD *)&v25[v27 - 264];
      *(_BYTE *)(v24 + v27 - 256) = 0;
      *(_BYTE *)(v24 + v27 - 232) = 0;
      if (v25[v27 - 232])
      {
        v33 = *((_OWORD *)v32 - 16);
        *(_QWORD *)(v24 + v27 - 240) = *((_QWORD *)v32 - 30);
        *(_OWORD *)(v24 + v27 - 256) = v33;
        *((_QWORD *)v32 - 31) = 0;
        *((_QWORD *)v32 - 30) = 0;
        *((_QWORD *)v32 - 32) = 0;
        *(_BYTE *)(v31 - 232) = 1;
      }
      *(_BYTE *)(v31 - 224) = 0;
      *(_BYTE *)(v31 - 80) = 0;
      if (*(v32 - 80))
      {
        v34 = &v25[v27];
        v35 = *(_OWORD *)&v25[v27 - 224];
        *(_QWORD *)(v31 - 208) = *(_QWORD *)&v25[v27 - 208];
        *(_OWORD *)(v31 - 224) = v35;
        *((_QWORD *)v34 - 27) = 0;
        *((_QWORD *)v34 - 26) = 0;
        *((_QWORD *)v34 - 28) = 0;
        v36 = v24 + v27;
        v37 = *(_OWORD *)&v25[v27 - 200];
        *(_QWORD *)(v36 - 184) = *(_QWORD *)&v25[v27 - 184];
        *(_OWORD *)(v36 - 200) = v37;
        *((_QWORD *)v34 - 24) = 0;
        *((_QWORD *)v34 - 23) = 0;
        *((_QWORD *)v34 - 25) = 0;
        v38 = *(_OWORD *)&v25[v27 - 176];
        *(_QWORD *)(v36 - 160) = *(_QWORD *)&v25[v27 - 160];
        *(_OWORD *)(v36 - 176) = v38;
        *((_QWORD *)v34 - 21) = 0;
        *((_QWORD *)v34 - 20) = 0;
        *((_QWORD *)v34 - 22) = 0;
        v39 = *(_OWORD *)&v25[v27 - 152];
        *(_QWORD *)(v36 - 136) = *(_QWORD *)&v25[v27 - 136];
        *(_OWORD *)(v36 - 152) = v39;
        *((_QWORD *)v34 - 19) = 0;
        *((_QWORD *)v34 - 18) = 0;
        *((_QWORD *)v34 - 17) = 0;
        v40 = *(_OWORD *)&v25[v27 - 128];
        *(_QWORD *)(v36 - 112) = *(_QWORD *)&v25[v27 - 112];
        *(_OWORD *)(v36 - 128) = v40;
        *((_QWORD *)v34 - 16) = 0;
        *((_QWORD *)v34 - 15) = 0;
        *((_QWORD *)v34 - 14) = 0;
        v41 = *(_OWORD *)&v25[v27 - 104];
        *(_QWORD *)(v36 - 88) = *(_QWORD *)&v25[v27 - 88];
        *(_OWORD *)(v36 - 104) = v41;
        *((_QWORD *)v34 - 13) = 0;
        *((_QWORD *)v34 - 12) = 0;
        *((_QWORD *)v34 - 11) = 0;
        *(_BYTE *)(v31 - 80) = 1;
      }
      v28 = v24 + v27;
      v29 = &v25[v27];
      v30 = *(_OWORD *)&v25[v27 - 72];
      *(_QWORD *)(v28 - 56) = *(_QWORD *)&v25[v27 - 56];
      *(_OWORD *)(v28 - 72) = v30;
      *(_OWORD *)(v28 - 48) = *(_OWORD *)&v25[v27 - 48];
      *((_QWORD *)v29 - 6) = 0;
      *((_QWORD *)v29 - 5) = 0;
      *(_OWORD *)(v28 - 32) = *(_OWORD *)&v25[v27 - 32];
      *((_QWORD *)v29 - 4) = 0;
      *((_QWORD *)v29 - 3) = 0;
      *(_OWORD *)(v28 - 16) = *(_OWORD *)&v25[v27 - 16];
      *((_QWORD *)v29 - 2) = 0;
      *((_QWORD *)v29 - 1) = 0;
      v27 -= 288;
    }
    while (&v25[v27] != v26);
    v25 = (char *)a1[71];
    v42 = a1[72];
    a1[71] = v24 + v27;
    a1[72] = v17;
    a1[73] = v45;
    while ((char *)v42 != v25)
    {
      v42 -= 288;
      sub_20FF3B3FC(v42);
    }
    if (v25)
      goto LABEL_36;
  }
LABEL_37:
  a1[72] = v17;
  std::mutex::unlock(v14);
  if (!v65)
    goto LABEL_44;
  if (v64 < 0)
  {
    operator delete(v63);
    if ((v62 & 0x80000000) == 0)
    {
LABEL_40:
      if ((v60 & 0x80000000) == 0)
        goto LABEL_41;
      goto LABEL_50;
    }
  }
  else if ((v62 & 0x80000000) == 0)
  {
    goto LABEL_40;
  }
  operator delete(v61);
  if ((v60 & 0x80000000) == 0)
  {
LABEL_41:
    if ((v58 & 0x80000000) == 0)
      goto LABEL_42;
    goto LABEL_51;
  }
LABEL_50:
  operator delete(v59);
  if ((v58 & 0x80000000) == 0)
  {
LABEL_42:
    if ((v56 & 0x80000000) == 0)
      goto LABEL_43;
    goto LABEL_52;
  }
LABEL_51:
  operator delete(v57);
  if ((v56 & 0x80000000) == 0)
  {
LABEL_43:
    if ((v54 & 0x80000000) == 0)
      goto LABEL_44;
LABEL_53:
    operator delete((void *)v53);
    if (!v52)
      return;
    goto LABEL_45;
  }
LABEL_52:
  operator delete(v55);
  if (v54 < 0)
    goto LABEL_53;
LABEL_44:
  if (!v52)
    return;
LABEL_45:
  if (SHIBYTE(v51) < 0)
    operator delete((void *)__p);
}

void sub_20FF38900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  void **v11;
  va_list va;

  va_start(va, a10);
  if (*(_BYTE *)(v10 + 56))
  {
    if (*(char *)(v10 + 55) < 0)
    {
      operator delete(*v11);
      sub_20FF24E10((uint64_t)va);
      _Unwind_Resume(a1);
    }
  }
  sub_20FF24E10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF389C0(uint64_t a1, uint64_t a2, std::string::size_type a3, void ***a4)
{
  std::mutex *v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  uint64_t v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  uint64_t v19;
  std::string v20;
  char v21;
  unsigned __int8 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  char v29;
  std::string __dst;
  char v31;
  void *v32;
  char v33;
  void *__p;
  char v35;
  char v36;
  char v37;
  __int128 v38;
  __int128 v39;
  char v40;
  char v41;
  void *v42;
  char v43;
  void *v44;
  char v45;
  char v46;
  char v47;
  _OWORD *v48[4];
  char v49;
  char v50;
  void *v51;
  char v52;
  void *v53;
  char v54;
  char v55;
  char v56;
  char v57;

  v8 = *(std::mutex **)(a2 + 616);
  std::mutex::lock(v8);
  v48[0] = (_OWORD *)(a3 + 8);
  v9 = sub_20FF3B87C((uint64_t **)(a2 + 624), (unsigned __int8 *)(a3 + 8), v48);
  v11 = v9[6];
  v10 = (std::__shared_weak_count *)v9[7];
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }
  std::mutex::unlock(v8);
  if (v11)
  {
    std::mutex::lock((std::mutex *)v11);
    sub_20E8B19F0((uint64_t **)(v11 + 80), *a4, (uint64_t)*a4);
    std::mutex::unlock((std::mutex *)v11);
  }
  if (!*(_BYTE *)(a2 + 304))
    goto LABEL_9;
  v20.__r_.__value_.__r.__words[0] = a2 + 272;
  v20.__r_.__value_.__l.__size_ = a3;
  *(_QWORD *)&v38 = &off_24CA0D900;
  *((_QWORD *)&v38 + 1) = &v20;
  *(_QWORD *)&v39 = a4;
  sub_210235BBC((uint64_t)&v38, (uint64_t)v48);
  if (v57)
  {
    *(_BYTE *)a1 = 0;
LABEL_9:
    *(_BYTE *)(a1 + 120) = 1;
    goto LABEL_10;
  }
  sub_2102341F0((uint64_t)v48, &v20);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    sub_20E860C04(&__dst, v20.__r_.__value_.__l.__data_, v20.__r_.__value_.__l.__size_);
  else
    __dst = v20;
  v31 = 1;
  LOBYTE(v32) = 0;
  v36 = 0;
  v37 = 1;
  sub_20FDD0A04((uint64_t)&v38, 2u, (__int128 *)&__dst);
  if (v37)
  {
    if (v36)
    {
      if (v35 < 0)
        operator delete(__p);
      if (v33 < 0)
        operator delete(v32);
    }
    if (v31 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if ((SHIBYTE(v20.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(a2 + 464))
      goto LABEL_34;
LABEL_32:
    v16 = *(_QWORD *)(a2 + 456);
    if (!v16)
      sub_20E86D37C();
    (*(void (**)(uint64_t, std::string::size_type, __int128 *))(*(_QWORD *)v16 + 48))(v16, a3, &v38);
    goto LABEL_34;
  }
  operator delete(v20.__r_.__value_.__l.__data_);
  if (*(_BYTE *)(a2 + 464))
    goto LABEL_32;
LABEL_34:
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v38;
  v17 = sub_20E89EFE4(&v20.__r_.__value_.__s.__data_[16], &v39);
  *(_OWORD *)a1 = *(_OWORD *)&v20.__r_.__value_.__l.__data_;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v29)
  {
    *(_BYTE *)(a1 + 40) = 0;
    v18 = v22;
    if (v22)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v17;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)v17 + 2);
      *((_QWORD *)v17 + 1) = 0;
      *((_QWORD *)v17 + 2) = 0;
      *(_QWORD *)v17 = 0;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v28)
    {
      v19 = v25;
      *(_QWORD *)(a1 + 64) = v24;
      *(_OWORD *)(a1 + 48) = v23;
      v23 = 0uLL;
      *(_QWORD *)(a1 + 72) = v19;
      *(_OWORD *)(a1 + 80) = v26;
      *(_QWORD *)(a1 + 96) = v27;
      v24 = 0;
      v26 = 0uLL;
      v27 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (v18 && v21 < 0)
      operator delete((void *)v20.__r_.__value_.__r.__words[2]);
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
  }
  if (v47)
  {
    if (v46)
    {
      if (v45 < 0)
        operator delete(v44);
      if (v43 < 0)
        operator delete(v42);
    }
    if (v41 && v40 < 0)
      operator delete((void *)v39);
  }
  if (!v57 && v56)
  {
    if (v55)
    {
      if (v54 < 0)
        operator delete(v53);
      if (v52 < 0)
        operator delete(v51);
    }
    if (v50 && v49 < 0)
      operator delete(v48[2]);
  }
LABEL_10:
  if (v10)
  {
    v14 = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_20FF38D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v43;

  if (a16 < 0)
    operator delete(__p);
  sub_20E89ED1C(v43 - 192);
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF38DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF38DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::mutex *v9;

  std::mutex::unlock(v9);
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF38DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF38DE8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20FF38DFC(uint64_t a1, uint64_t a2, std::string::size_type a3, uint64_t a4)
{
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  int v15;
  uint64_t v16;
  std::string v17;
  char v18;
  void *v19;
  char v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  std::string __dst;
  char v26;
  void *v27;
  char v28;
  void *__p;
  char v30;
  char v31;
  char v32;
  std::string v33;
  char v34;
  unsigned __int8 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  char v42;
  std::string v43;
  char v44;
  void *v45;
  char v46;
  void *v47;
  char v48;
  char v49;
  char v50;
  _BYTE v51[24];
  uint64_t v52;
  char v53;
  unsigned __int8 v54;
  void *v55[2];
  uint64_t v56;
  uint64_t v57;
  void *v58[2];
  uint64_t v59;
  char v60;
  char v61;
  __int128 v62;
  __int128 v63;
  char v64;
  char v65;
  void *v66;
  char v67;
  void *v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;

  if (!*(_BYTE *)(a4 + 48))
  {
    LODWORD(v52) = -1;
    *(_QWORD *)v51 = operator new(0x68uLL);
    *(_OWORD *)&v51[8] = xmmword_2103B8450;
    strcpy(*(char **)v51, "Received outdated Sync from client. Update the client to protocol 1.3.0 to sync with the server.");
    LODWORD(v52) = 1;
    sub_20EE1E7C4((uint64_t)&v43, (uint64_t)v51, (unsigned __int8 *)(a3 + 8));
    if ((_DWORD)v52 == -1)
      sub_20E877AB8();
    v43.__r_.__value_.__r.__words[0] = (std::string::size_type)&v73;
    ((void (*)(std::string *__return_ptr, std::string *, _BYTE *))off_24CA0D858[v52])(&v33, &v43, v51);
    if ((_DWORD)v52 != -1)
      ((void (*)(std::string *, _BYTE *))off_24CA0D828[v52])(&v43, v51);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      sub_20E860C04(&__dst, v33.__r_.__value_.__l.__data_, v33.__r_.__value_.__l.__size_);
    else
      __dst = v33;
    v26 = 1;
    LOBYTE(v27) = 0;
    v31 = 0;
    v32 = 1;
    sub_20FDD0A04((uint64_t)&v62, 0xEu, (__int128 *)&__dst);
    if (v32)
    {
      if (v31)
      {
        if (v30 < 0)
          operator delete(__p);
        if (v28 < 0)
          operator delete(v27);
      }
      if (v26 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v33.__r_.__value_.__l.__data_);
      if (!*(_BYTE *)(a2 + 464))
      {
LABEL_37:
        *(_OWORD *)v51 = v62;
        v9 = sub_20E89EFE4(&v51[16], &v63);
        goto LABEL_55;
      }
    }
    else if (!*(_BYTE *)(a2 + 464))
    {
      goto LABEL_37;
    }
    v8 = *(_QWORD *)(a2 + 456);
    if (!v8)
      sub_20E86D37C();
    (*(void (**)(uint64_t, std::string::size_type, __int128 *))(*(_QWORD *)v8 + 48))(v8, a3, &v62);
    goto LABEL_37;
  }
  if (*(_DWORD *)(a4 + 40) != 1)
  {
    LODWORD(v52) = 0;
    sub_20E8A3934(v51, "Received invalid Sync update from client ");
    sub_20EE1E7C4((uint64_t)&v43, (uint64_t)v51, (unsigned __int8 *)(a3 + 8));
    if ((_DWORD)v52 == -1)
      sub_20E877AB8();
    v43.__r_.__value_.__r.__words[0] = (std::string::size_type)&v73;
    ((void (*)(std::string *__return_ptr, std::string *, _BYTE *))off_24CA0D858[v52])(&v33, &v43, v51);
    if ((_DWORD)v52 != -1)
      ((void (*)(std::string *, _BYTE *))off_24CA0D828[v52])(&v43, v51);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
      sub_20E860C04(&v17, v33.__r_.__value_.__l.__data_, v33.__r_.__value_.__l.__size_);
    else
      v17 = v33;
    v18 = 1;
    LOBYTE(v19) = 0;
    v23 = 0;
    v24 = 1;
    sub_20FDD0A04((uint64_t)&v62, 2u, (__int128 *)&v17);
    if (v24)
    {
      if (v23)
      {
        if (v22 < 0)
          operator delete(v21);
        if (v20 < 0)
          operator delete(v19);
      }
      if (v18 && SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v17.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v33.__r_.__value_.__l.__data_);
      if (!*(_BYTE *)(a2 + 464))
      {
LABEL_54:
        *(_OWORD *)v51 = v62;
        v9 = sub_20E89EFE4(&v51[16], &v63);
LABEL_55:
        *(_OWORD *)a1 = *(_OWORD *)v51;
        *(_BYTE *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 112) = 0;
        if (v61)
        {
          *(_BYTE *)(a1 + 40) = 0;
          v11 = v54;
          if (v54)
          {
            *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
            *(_QWORD *)(a1 + 32) = *((_QWORD *)v9 + 2);
            *((_QWORD *)v9 + 1) = 0;
            *((_QWORD *)v9 + 2) = 0;
            *(_QWORD *)v9 = 0;
            *(_BYTE *)(a1 + 40) = 1;
          }
          *(_BYTE *)(a1 + 48) = 0;
          *(_BYTE *)(a1 + 104) = 0;
          if (v60)
          {
            v12 = v57;
            *(_QWORD *)(a1 + 64) = v56;
            *(_OWORD *)(a1 + 48) = *(_OWORD *)v55;
            v55[0] = 0;
            v55[1] = 0;
            *(_QWORD *)(a1 + 72) = v12;
            *(_OWORD *)(a1 + 80) = *(_OWORD *)v58;
            *(_QWORD *)(a1 + 96) = v59;
            v56 = 0;
            v58[0] = 0;
            v58[1] = 0;
            v59 = 0;
            *(_BYTE *)(a1 + 104) = 1;
          }
          *(_BYTE *)(a1 + 112) = 1;
          *(_BYTE *)(a1 + 120) = 0;
          if (v11 && v53 < 0)
            operator delete(*(void **)&v51[16]);
        }
        else
        {
          *(_BYTE *)(a1 + 120) = 0;
        }
        goto LABEL_64;
      }
    }
    else if (!*(_BYTE *)(a2 + 464))
    {
      goto LABEL_54;
    }
    v10 = *(_QWORD *)(a2 + 456);
    if (!v10)
      sub_20E86D37C();
    (*(void (**)(uint64_t, std::string::size_type, __int128 *))(*(_QWORD *)v10 + 48))(v10, a3, &v62);
    goto LABEL_54;
  }
  if (*(_BYTE *)(a2 + 608))
    (*(void (**)(_QWORD, std::string::size_type, uint64_t))(**(_QWORD **)(a2 + 600) + 40))(*(_QWORD *)(a2 + 600), a3 + 8, a4);
  if (!*(_BYTE *)(a2 + 344))
    goto LABEL_10;
  if (*(_DWORD *)(a4 + 40) != 1)
    sub_20E877AB8();
  if (!*(_BYTE *)a4)
    goto LABEL_10;
  v33.__r_.__value_.__r.__words[0] = a2 + 312;
  v33.__r_.__value_.__l.__size_ = a3;
  *(_QWORD *)v51 = &off_24CA0D940;
  *(_QWORD *)&v51[8] = &v33;
  *(_QWORD *)&v51[16] = a2;
  v52 = a4;
  sub_210235BBC((uint64_t)v51, (uint64_t)&v62);
  if (v72)
  {
    *(_BYTE *)a1 = 0;
LABEL_10:
    *(_BYTE *)(a1 + 120) = 1;
    return;
  }
  sub_2102341F0((uint64_t)&v62, &v33);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    sub_20E860C04(&v43, v33.__r_.__value_.__l.__data_, v33.__r_.__value_.__l.__size_);
  else
    v43 = v33;
  v44 = 1;
  LOBYTE(v45) = 0;
  v49 = 0;
  v50 = 1;
  sub_20FDD0A04((uint64_t)v51, 2u, (__int128 *)&v43);
  if (v50)
  {
    if (v49)
    {
      if (v48 < 0)
        operator delete(v47);
      if (v46 < 0)
        operator delete(v45);
    }
    if (v44 && SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v43.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v33.__r_.__value_.__l.__data_);
  if (*(_BYTE *)(a2 + 464))
  {
    v13 = *(_QWORD *)(a2 + 456);
    if (!v13)
      sub_20E86D37C();
    (*(void (**)(uint64_t, std::string::size_type, _BYTE *))(*(_QWORD *)v13 + 48))(v13, a3, v51);
  }
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = *(_OWORD *)v51;
  v14 = sub_20E89EFE4(&v33.__r_.__value_.__s.__data_[16], (__int128 *)&v51[16]);
  *(_OWORD *)a1 = *(_OWORD *)&v33.__r_.__value_.__l.__data_;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v42)
  {
    *(_BYTE *)(a1 + 40) = 0;
    v15 = v35;
    if (v35)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v14;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)v14 + 2);
      *((_QWORD *)v14 + 1) = 0;
      *((_QWORD *)v14 + 2) = 0;
      *(_QWORD *)v14 = 0;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v41)
    {
      v16 = v38;
      *(_QWORD *)(a1 + 64) = v37;
      *(_OWORD *)(a1 + 48) = v36;
      v36 = 0uLL;
      *(_QWORD *)(a1 + 72) = v16;
      *(_OWORD *)(a1 + 80) = v39;
      *(_QWORD *)(a1 + 96) = v40;
      v37 = 0;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (v15 && v34 < 0)
      operator delete((void *)v33.__r_.__value_.__r.__words[2]);
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
  }
  if (v61)
  {
    if (v60)
    {
      if (SHIBYTE(v59) < 0)
        operator delete(v58[0]);
      if (SHIBYTE(v56) < 0)
        operator delete(v55[0]);
    }
    if (v54 && v53 < 0)
      operator delete(*(void **)&v51[16]);
  }
  if (!v72)
  {
LABEL_64:
    if (!v71)
      return;
    if (v70)
    {
      if ((v69 & 0x80000000) == 0)
      {
        if ((v67 & 0x80000000) == 0)
          goto LABEL_68;
LABEL_72:
        operator delete(v66);
        if (!v65)
          return;
        goto LABEL_69;
      }
      operator delete(v68);
      if (v67 < 0)
        goto LABEL_72;
    }
LABEL_68:
    if (!v65)
      return;
LABEL_69:
    if (v64 < 0)
      operator delete((void *)v63);
  }
}

void sub_20FF3955C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (a42 < 0)
    operator delete(__p);
  sub_20E89ED1C(v42 - 184);
  _Unwind_Resume(a1);
}

void sub_20FF395AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (a42 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_20FF39644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;

  sub_20E877A60((uint64_t)&a67);
  _Unwind_Resume(a1);
}

void sub_20FF39658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;

  sub_20E877A60((uint64_t)&a67);
  _Unwind_Resume(a1);
}

void sub_20FF3966C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E89EF58(v1 - 184);
  _Unwind_Resume(a1);
}

void sub_20FF39680(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E89EF58(v1 - 184);
  _Unwind_Resume(a1);
}

void sub_20FF39694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;

  sub_20E877A60((uint64_t)&a67);
  _Unwind_Resume(a1);
}

void sub_20FF396A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a67;

  sub_20E877A60((uint64_t)&a67);
  _Unwind_Resume(a1);
}

void sub_20FF396BC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  std::mutex *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  std::__shared_weak_count *v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t *p_shared_owners;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  _BYTE *v23;
  int v24;
  unsigned __int8 v25;
  _BYTE *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *exception;
  _QWORD *v31;
  __int128 v32;
  void *v33;
  char v34;
  unsigned __int8 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  char v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  void *v47[2];
  uint64_t v48;
  uint64_t v49;
  void *__p[2];
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  int v55;
  __int128 v56;
  __int128 v57;
  char v58;
  char v59;
  void *v60;
  char v61;
  void *v62;
  char v63;
  char v64;
  char v65;
  char v66;

  v55 = 3;
  LOBYTE(v56) = 0;
  v66 = 0;
  v8 = *(std::mutex **)(a2 + 560);
  std::mutex::lock(v8);
  v9 = *(_QWORD *)(a2 + 568);
  v10 = *(_QWORD *)(a2 + 576);
  if (v9 == v10)
  {
    v11 = 0;
LABEL_33:
    std::mutex::unlock(v8);
    if (*(_BYTE *)(a2 + 552))
      goto LABEL_34;
LABEL_36:
    if (v66)
    {
      v43 = v56;
      v23 = sub_20E89EFE4(&v44, &v57);
      *(_OWORD *)a1 = v43;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v53)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v24 = v46;
        if (!v46)
          goto LABEL_58;
        *(_OWORD *)(a1 + 16) = *(_OWORD *)v23;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)v23 + 2);
        *((_QWORD *)v23 + 1) = 0;
        *((_QWORD *)v23 + 2) = 0;
        *(_QWORD *)v23 = 0;
        goto LABEL_57;
      }
    }
    else
    {
      if ((*(_BYTE *)(a2 + 552) != 0) | v11 & 1)
      {
        *(_BYTE *)(a1 + 120) = 1;
        goto LABEL_64;
      }
      sub_20FF01EB8((unsigned __int8 *)a4, 0xDu, (uint64_t)"client not found", (uint64_t)&v43);
      *(_OWORD *)a1 = v43;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v53)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v24 = v46;
        if (!v46)
          goto LABEL_58;
        *(_OWORD *)(a1 + 16) = v44;
        *(_QWORD *)(a1 + 32) = v45;
        v45 = 0;
        v44 = 0uLL;
LABEL_57:
        *(_BYTE *)(a1 + 40) = 1;
LABEL_58:
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v52)
        {
          v29 = v49;
          *(_QWORD *)(a1 + 64) = v48;
          *(_OWORD *)(a1 + 48) = *(_OWORD *)v47;
          v47[0] = 0;
          v47[1] = 0;
          *(_QWORD *)(a1 + 72) = v29;
          *(_OWORD *)(a1 + 80) = *(_OWORD *)__p;
          *(_QWORD *)(a1 + 96) = v51;
          v48 = 0;
          __p[0] = 0;
          __p[1] = 0;
          v51 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (!v24)
          goto LABEL_64;
LABEL_61:
        if (SHIBYTE(v45) < 0)
          operator delete((void *)v44);
        goto LABEL_64;
      }
    }
    *(_BYTE *)(a1 + 120) = 0;
    goto LABEL_64;
  }
  v11 = 0;
  while (1)
  {
    v13 = *(std::__shared_weak_count **)(v9 + 264);
    if (!v13)
      goto LABEL_5;
    v14 = std::__shared_weak_count::lock(v13);
    if (!v14)
      goto LABEL_5;
    v15 = v14;
    v16 = *(_QWORD *)(v9 + 256);
    if (v16)
    {
      v17 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 24))(v16);
      if (*v17 == *(_QWORD *)a4 && v17[1] == *(_QWORD *)(a4 + 8))
        break;
    }
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      v12 = 1;
LABEL_4:
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
      if ((v12 & 1) == 0)
        goto LABEL_33;
    }
LABEL_5:
    v9 += 288;
    if (v9 == v10)
      goto LABEL_33;
  }
  sub_20FDCCA40(v16, a3, (uint64_t)&v43);
  if (!v54)
  {
    sub_20FDCBB4C((uint64_t)&v55, (uint64_t)&v43);
    if (!v54)
    {
      if (v53)
      {
        if (v52)
        {
          if (SHIBYTE(v51) < 0)
            operator delete(__p[0]);
          if (SHIBYTE(v48) < 0)
            operator delete(v47[0]);
        }
        if (v46 && SHIBYTE(v45) < 0)
          operator delete((void *)v44);
      }
    }
  }
  v21 = (unint64_t *)&v15->__shared_owners_;
  do
    v22 = __ldaxr(v21);
  while (__stlxr(v22 - 1, v21));
  if (!v22)
  {
    v12 = 0;
    v11 = 1;
    goto LABEL_4;
  }
  v11 = 1;
  std::mutex::unlock(v8);
  if (!*(_BYTE *)(a2 + 552))
    goto LABEL_36;
LABEL_34:
  if ((v11 & 1) != 0)
    goto LABEL_36;
  sub_20FF24E60(*(_QWORD *)(a2 + 544), a3, a4, (uint64_t)&v43);
  if (v54)
    goto LABEL_36;
  v25 = atomic_load((unsigned __int8 *)&qword_254A6DC30);
  if ((v25 & 1) == 0 && __cxa_guard_acquire(&qword_254A6DC30))
  {
    __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_254A57688, &dword_20E81F000);
    __cxa_guard_release(&qword_254A6DC30);
  }
  if (*((_UNKNOWN ***)&v43 + 1) != &off_254A57688 || (_DWORD)v43 != 13)
  {
    if (v54)
    {
      exception = __cxa_allocate_exception(8uLL);
      *exception = &off_24C9B4620;
      __cxa_throw(exception, (struct type_info *)&unk_24C9AD070, (void (*)(void *))std::exception::~exception);
    }
    sub_20FDCBB4C((uint64_t)&v55, (uint64_t)&v43);
    if (!v54 && v53)
    {
      if (v52)
      {
        if (SHIBYTE(v51) < 0)
          operator delete(__p[0]);
        if (SHIBYTE(v48) < 0)
          operator delete(v47[0]);
      }
      if (v46 && SHIBYTE(v45) < 0)
        operator delete((void *)v44);
    }
    goto LABEL_36;
  }
  if (v54)
  {
    v31 = __cxa_allocate_exception(8uLL);
    *v31 = &off_24C9B4620;
    __cxa_throw(v31, (struct type_info *)&unk_24C9AD070, (void (*)(void *))std::exception::~exception);
  }
  v32 = v43;
  v26 = sub_20E89EFE4(&v33, &v44);
  *(_OWORD *)a1 = v32;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v42)
  {
    *(_BYTE *)(a1 + 40) = 0;
    v27 = v35;
    if (v35)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v26;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)v26 + 2);
      *((_QWORD *)v26 + 1) = 0;
      *((_QWORD *)v26 + 2) = 0;
      *(_QWORD *)v26 = 0;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v41)
    {
      v28 = v38;
      *(_QWORD *)(a1 + 64) = v37;
      *(_OWORD *)(a1 + 48) = v36;
      v36 = 0uLL;
      *(_QWORD *)(a1 + 72) = v28;
      *(_OWORD *)(a1 + 80) = v39;
      *(_QWORD *)(a1 + 96) = v40;
      v37 = 0;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (v27 && v34 < 0)
      operator delete(v33);
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
  }
  if (!v54 && v53)
  {
    if (v52)
    {
      if (SHIBYTE(v51) < 0)
        operator delete(__p[0]);
      if (SHIBYTE(v48) < 0)
        operator delete(v47[0]);
    }
    if (v46)
      goto LABEL_61;
  }
LABEL_64:
  if (!v66 || !v65)
    return;
  if (!v64)
    goto LABEL_69;
  if ((v63 & 0x80000000) == 0)
  {
    if ((v61 & 0x80000000) == 0)
      goto LABEL_69;
LABEL_85:
    operator delete(v60);
    if (!v59)
      return;
LABEL_70:
    if (v58 < 0)
      operator delete((void *)v57);
    return;
  }
  operator delete(v62);
  if (v61 < 0)
    goto LABEL_85;
LABEL_69:
  if (v59)
    goto LABEL_70;
}

void sub_20FF39CDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20FDCBFF8(v1 - 224);
  _Unwind_Resume(a1);
}

void sub_20FF39CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  sub_20E89ED1C((uint64_t)va);
  sub_20FDCBFF8(v17 - 224);
  _Unwind_Resume(a1);
}

void sub_20FF39D10(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20FDCBFF8(v1 - 224);
  _Unwind_Resume(a1);
}

void sub_20FF39D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  std::mutex *v25;
  uint64_t v26;

  sub_20E89ED1C((uint64_t)&a25);
  sub_20E86665C((uint64_t)&a9);
  std::mutex::unlock(v25);
  sub_20FDCBFF8(v26 - 224);
  _Unwind_Resume(a1);
}

void sub_20FF39D84(uint64_t a1, uint64_t a2, std::string::size_type a3, int a4)
{
  std::mutex *v7;
  char *v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *size;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  std::mutex *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  __int128 v22;
  std::__shared_weak_count *v23;
  __int128 v24;
  std::__shared_weak_count *v25;
  __int128 v26;
  std::__shared_weak_count *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  std::mutex *v30;
  uint64_t *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  _QWORD *v38;
  _QWORD *v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  std::string::size_type v43;
  __int128 v44;
  _QWORD *v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  int v49;
  std::string *v50;
  unint64_t v51;
  void *v52;
  int v53;
  char *v54;
  char *v55;
  void *v56;
  std::__shared_weak_count *v57;
  unint64_t *v58;
  unint64_t v59;
  std::mutex *v60;
  uint64_t *v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  int v70;
  uint64_t v71;
  _QWORD *v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  int v78;
  uint64_t v79;
  void *v80;
  unint64_t v81;
  unint64_t v82;
  void *v83[2];
  void *v84[2];
  char v85;
  char v86;
  void *v87;
  char v88;
  void *v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  std::string v95;
  _DWORD v96[2];
  std::string __dst;
  char v98;
  void *v99;
  char v100;
  void *v101;
  char v102;
  char v103;
  char v104;
  void *v105;
  char *v106;
  __int128 v107;
  _BYTE v108[32];
  std::string v109;
  char v110;
  unsigned __int8 v111;
  void *v112[2];
  uint64_t v113;
  uint64_t v114;
  void *v115[2];
  uint64_t v116;
  char v117;
  char v118;
  void *__p[2];
  void *v120;
  char v121;
  char v122;
  unsigned __int8 v123;
  void *v124[2];
  uint64_t v125;
  uint64_t v126;
  void *v127[2];
  uint64_t v128;
  char v129;
  char v130;
  unsigned __int8 v131;
  char v132;
  char v133;
  char v134;
  uint64_t v135;

  v135 = *MEMORY[0x24BDAC8D0];
  v94 = a4;
  if (a4 != 1)
  {
    if (*(_BYTE *)(a2 + 608))
      (*(void (**)(_QWORD, std::string::size_type))(**(_QWORD **)(a2 + 600) + 64))(*(_QWORD *)(a2 + 600), a3 + 8);
    v17 = *(std::mutex **)(a2 + 560);
    std::mutex::lock(v17);
    *(_OWORD *)__p = *(_OWORD *)(a3 + 8);
    v18 = *(_QWORD *)(a2 + 568);
    v19 = *(_QWORD *)(a2 + 576);
    if (v18 != v19)
    {
      while (1)
      {
        v20 = *(void **)(v18 + 8) == __p[0] && *(void **)(v18 + 16) == __p[1];
        if (v20)
          break;
        v18 += 288;
        if (v18 == v19)
          goto LABEL_47;
      }
    }
    if (v18 != v19)
    {
      v21 = v18 + 288;
      if (v18 + 288 != v19)
      {
        do
        {
          *(_BYTE *)v18 = *(_BYTE *)v21;
          sub_20FDD055C(v18 + 8, v21 + 8);
          v22 = *(_OWORD *)(v21 + 240);
          *(_QWORD *)(v21 + 240) = 0;
          *(_QWORD *)(v21 + 248) = 0;
          v23 = *(std::__shared_weak_count **)(v18 + 248);
          *(_OWORD *)(v18 + 240) = v22;
          if (v23)
            std::__shared_weak_count::__release_weak(v23);
          v24 = *(_OWORD *)(v21 + 256);
          *(_QWORD *)(v21 + 256) = 0;
          *(_QWORD *)(v21 + 264) = 0;
          v25 = *(std::__shared_weak_count **)(v18 + 264);
          *(_OWORD *)(v18 + 256) = v24;
          if (v25)
            std::__shared_weak_count::__release_weak(v25);
          v26 = *(_OWORD *)(v21 + 272);
          *(_QWORD *)(v21 + 272) = 0;
          *(_QWORD *)(v21 + 280) = 0;
          v27 = *(std::__shared_weak_count **)(v18 + 280);
          *(_OWORD *)(v18 + 272) = v26;
          if (v27)
          {
            p_shared_owners = (unint64_t *)&v27->__shared_owners_;
            do
              v29 = __ldaxr(p_shared_owners);
            while (__stlxr(v29 - 1, p_shared_owners));
            if (!v29)
            {
              ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
              std::__shared_weak_count::__release_weak(v27);
            }
          }
          v21 += 288;
          v18 += 288;
        }
        while (v21 != v19);
        v19 = *(_QWORD *)(a2 + 576);
      }
      while (v19 != v18)
      {
        v19 -= 288;
        sub_20FF3B3FC(v19);
      }
      *(_QWORD *)(a2 + 576) = v18;
    }
LABEL_47:
    v30 = *(std::mutex **)(a2 + 616);
    std::mutex::lock(v30);
    v31 = *(uint64_t **)(a2 + 632);
    if (v31)
    {
      v32 = LOBYTE(__p[0]);
      v33 = a2 + 632;
      v34 = *(_QWORD *)(a2 + 632);
      do
      {
        v35 = *(unsigned __int8 *)(v34 + 32);
        v36 = LOBYTE(__p[0]);
        if (v35 != LOBYTE(__p[0]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 33);
        v36 = BYTE1(__p[0]);
        if (v35 != BYTE1(__p[0]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 34);
        v36 = BYTE2(__p[0]);
        if (v35 != BYTE2(__p[0]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 35);
        v36 = BYTE3(__p[0]);
        if (v35 != BYTE3(__p[0]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 36);
        v36 = BYTE4(__p[0]);
        if (v35 != BYTE4(__p[0]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 37);
        v36 = BYTE5(__p[0]);
        if (v35 != BYTE5(__p[0]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 38);
        v36 = BYTE6(__p[0]);
        if (v35 != BYTE6(__p[0]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 39);
        v36 = HIBYTE(__p[0]);
        if (v35 != HIBYTE(__p[0]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 40);
        v36 = LOBYTE(__p[1]);
        if (v35 != LOBYTE(__p[1]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 41);
        v36 = BYTE1(__p[1]);
        if (v35 != BYTE1(__p[1]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 42);
        v36 = BYTE2(__p[1]);
        if (v35 != BYTE2(__p[1]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 43);
        v36 = BYTE3(__p[1]);
        if (v35 != BYTE3(__p[1]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 44);
        v36 = BYTE4(__p[1]);
        if (v35 != BYTE4(__p[1]))
          goto LABEL_66;
        v35 = *(unsigned __int8 *)(v34 + 45);
        v36 = BYTE5(__p[1]);
        if (v35 == BYTE5(__p[1])
          && (v35 = *(unsigned __int8 *)(v34 + 46), v36 = BYTE6(__p[1]), v35 == BYTE6(__p[1]))
          && (v35 = *(unsigned __int8 *)(v34 + 47), v36 = HIBYTE(__p[1]), v35 == HIBYTE(__p[1])))
        {
          v33 = v34;
        }
        else
        {
LABEL_66:
          if (v35 < v36)
            v34 += 8;
          else
            v33 = v34;
        }
        v34 = *(_QWORD *)v34;
      }
      while (v34);
      if (v33 != a2 + 632)
      {
        v37 = *(unsigned __int8 *)(v33 + 32);
        if (LOBYTE(__p[0]) == v37)
        {
          v37 = *(unsigned __int8 *)(v33 + 33);
          v32 = BYTE1(__p[0]);
          if (BYTE1(__p[0]) == v37)
          {
            v37 = *(unsigned __int8 *)(v33 + 34);
            v32 = BYTE2(__p[0]);
            if (BYTE2(__p[0]) == v37)
            {
              v37 = *(unsigned __int8 *)(v33 + 35);
              v32 = BYTE3(__p[0]);
              if (BYTE3(__p[0]) == v37)
              {
                v37 = *(unsigned __int8 *)(v33 + 36);
                v32 = BYTE4(__p[0]);
                if (BYTE4(__p[0]) == v37)
                {
                  v37 = *(unsigned __int8 *)(v33 + 37);
                  v32 = BYTE5(__p[0]);
                  if (BYTE5(__p[0]) == v37)
                  {
                    v37 = *(unsigned __int8 *)(v33 + 38);
                    v32 = BYTE6(__p[0]);
                    if (BYTE6(__p[0]) == v37)
                    {
                      v37 = *(unsigned __int8 *)(v33 + 39);
                      v32 = HIBYTE(__p[0]);
                      if (HIBYTE(__p[0]) == v37)
                      {
                        v37 = *(unsigned __int8 *)(v33 + 40);
                        v32 = LOBYTE(__p[1]);
                        if (LOBYTE(__p[1]) == v37)
                        {
                          v37 = *(unsigned __int8 *)(v33 + 41);
                          v32 = BYTE1(__p[1]);
                          if (BYTE1(__p[1]) == v37)
                          {
                            v37 = *(unsigned __int8 *)(v33 + 42);
                            v32 = BYTE2(__p[1]);
                            if (BYTE2(__p[1]) == v37)
                            {
                              v37 = *(unsigned __int8 *)(v33 + 43);
                              v32 = BYTE3(__p[1]);
                              if (BYTE3(__p[1]) == v37)
                              {
                                v37 = *(unsigned __int8 *)(v33 + 44);
                                v32 = BYTE4(__p[1]);
                                if (BYTE4(__p[1]) == v37)
                                {
                                  v37 = *(unsigned __int8 *)(v33 + 45);
                                  v32 = BYTE5(__p[1]);
                                  if (BYTE5(__p[1]) == v37)
                                  {
                                    v37 = *(unsigned __int8 *)(v33 + 46);
                                    v32 = BYTE6(__p[1]);
                                    if (BYTE6(__p[1]) == v37)
                                    {
                                      v37 = *(unsigned __int8 *)(v33 + 47);
                                      v32 = HIBYTE(__p[1]);
                                      if (HIBYTE(__p[1]) == v37)
                                        goto LABEL_88;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        if (v32 >= v37)
        {
LABEL_88:
          v38 = *(_QWORD **)(v33 + 8);
          if (v38)
          {
            do
            {
              v39 = v38;
              v38 = (_QWORD *)*v38;
            }
            while (v38);
          }
          else
          {
            v72 = (_QWORD *)v33;
            do
            {
              v39 = (_QWORD *)v72[2];
              v20 = *v39 == (_QWORD)v72;
              v72 = v39;
            }
            while (!v20);
          }
          if (*(_QWORD *)(a2 + 624) == v33)
            *(_QWORD *)(a2 + 624) = v39;
          --*(_QWORD *)(a2 + 640);
          sub_20E8D2134(v31, (uint64_t *)v33);
          v73 = *(std::__shared_weak_count **)(v33 + 56);
          if (v73)
          {
            v74 = (unint64_t *)&v73->__shared_owners_;
            do
              v75 = __ldaxr(v74);
            while (__stlxr(v75 - 1, v74));
            if (!v75)
            {
              ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
              std::__shared_weak_count::__release_weak(v73);
            }
          }
          operator delete((void *)v33);
        }
      }
    }
    std::mutex::unlock(v30);
    std::mutex::unlock(v17);
LABEL_183:
    if (!*(_BYTE *)(a2 + 384))
    {
LABEL_186:
      *(_BYTE *)(a1 + 120) = 1;
      return;
    }
    v109.__r_.__value_.__r.__words[0] = a2 + 352;
    v109.__r_.__value_.__l.__size_ = a3;
    v83[0] = &off_24CA0D9D0;
    v83[1] = &v109;
    v84[0] = &v94;
    sub_210235BBC((uint64_t)v83, (uint64_t)__p);
    if (v131)
    {
      *(_BYTE *)a1 = 0;
      goto LABEL_186;
    }
    sub_2102341F0((uint64_t)__p, &v109);
    if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
      sub_20E860C04(&__dst, v109.__r_.__value_.__l.__data_, v109.__r_.__value_.__l.__size_);
    else
      __dst = v109;
    v98 = 1;
    LOBYTE(v99) = 0;
    v103 = 0;
    v104 = 1;
    sub_20FDD0A04((uint64_t)v83, 2u, (__int128 *)&__dst);
    if (v104)
    {
      if (v103)
      {
        if (v102 < 0)
          operator delete(v101);
        if (v100 < 0)
          operator delete(v99);
      }
      if (v98 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v109.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v109.__r_.__value_.__l.__data_);
      if (!*(_BYTE *)(a2 + 464))
        goto LABEL_206;
    }
    else if (!*(_BYTE *)(a2 + 464))
    {
      goto LABEL_206;
    }
    v76 = *(_QWORD *)(a2 + 456);
    if (!v76)
      sub_20E86D37C();
    (*(void (**)(uint64_t, std::string::size_type, void **))(*(_QWORD *)v76 + 48))(v76, a3, v83);
LABEL_206:
    *(_OWORD *)&v109.__r_.__value_.__l.__data_ = *(_OWORD *)v83;
    v77 = sub_20E89EFE4(&v109.__r_.__value_.__s.__data_[16], (__int128 *)v84);
    *(_OWORD *)a1 = *(_OWORD *)&v109.__r_.__value_.__l.__data_;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v118)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v78 = v111;
      if (v111)
      {
        *(_OWORD *)(a1 + 16) = *(_OWORD *)v77;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)v77 + 2);
        *((_QWORD *)v77 + 1) = 0;
        *((_QWORD *)v77 + 2) = 0;
        *(_QWORD *)v77 = 0;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v117)
      {
        v79 = v114;
        *(_QWORD *)(a1 + 64) = v113;
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v112;
        v112[0] = 0;
        v112[1] = 0;
        *(_QWORD *)(a1 + 72) = v79;
        *(_OWORD *)(a1 + 80) = *(_OWORD *)v115;
        *(_QWORD *)(a1 + 96) = v116;
        v113 = 0;
        v115[0] = 0;
        v115[1] = 0;
        v116 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v78 && v110 < 0)
        operator delete((void *)v109.__r_.__value_.__r.__words[2]);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    if (v92)
    {
      if (v91)
      {
        if (v90 < 0)
          operator delete(v89);
        if (v88 < 0)
          operator delete(v87);
      }
      if (v86 && v85 < 0)
        operator delete(v84[0]);
    }
    if (!v131 && v130)
    {
      if (v129)
      {
        if (SHIBYTE(v128) < 0)
          operator delete(v127[0]);
        if (SHIBYTE(v125) < 0)
          operator delete(v124[0]);
      }
      if (v123 && v122 < 0)
      {
        v80 = v120;
LABEL_245:
        operator delete(v80);
        return;
      }
    }
    return;
  }
  if (*(_BYTE *)(a2 + 608))
    (*(void (**)(_QWORD, std::string::size_type))(**(_QWORD **)(a2 + 600) + 56))(*(_QWORD *)(a2 + 600), a3 + 8);
  v7 = *(std::mutex **)(a2 + 616);
  std::mutex::lock(v7);
  v8 = (char *)operator new(0x80uLL);
  *((_QWORD *)v8 + 1) = 0;
  *((_QWORD *)v8 + 2) = 0;
  *(_QWORD *)v8 = &off_24CA0D980;
  *(_OWORD *)(v8 + 104) = 0u;
  *((_QWORD *)v8 + 15) = 0;
  *(_OWORD *)(v8 + 88) = 0u;
  *((_QWORD *)v8 + 3) = 850045863;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_QWORD *)v8 + 10) = 0;
  v83[1] = 0;
  v84[0] = 0;
  v83[0] = 0;
  LOBYTE(__p[0]) = 0;
  v121 = 0;
  sub_20FF20DA0((_QWORD *)v8 + 11, 1, (uint64_t)v83, (uint64_t *)__p);
  if (v121 && SHIBYTE(v120) < 0)
    operator delete(__p[0]);
  if (v83[0])
  {
    v83[1] = v83[0];
    operator delete(v83[0]);
  }
  *((_QWORD *)v8 + 15) = 0;
  *((_QWORD *)v8 + 14) = 0;
  *((_QWORD *)v8 + 13) = v8 + 112;
  v109.__r_.__value_.__r.__words[0] = (std::string::size_type)(v8 + 24);
  v109.__r_.__value_.__l.__size_ = (std::string::size_type)v8;
  __p[0] = (void *)(a3 + 8);
  v9 = sub_20FF3B87C((uint64_t **)(a2 + 624), (unsigned __int8 *)(a3 + 8), (_OWORD **)__p);
  *(_OWORD *)&v109.__r_.__value_.__l.__data_ = 0uLL;
  v10 = (std::__shared_weak_count *)v9[7];
  v9[6] = (uint64_t)(v8 + 24);
  v9[7] = (uint64_t)v8;
  if (v10)
  {
    v11 = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  size = (std::__shared_weak_count *)v109.__r_.__value_.__l.__size_;
  if (!v109.__r_.__value_.__l.__size_)
    goto LABEL_18;
  v14 = (unint64_t *)(v109.__r_.__value_.__l.__size_ + 8);
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
  {
LABEL_18:
    std::mutex::unlock(v7);
    v16 = *(_QWORD *)(a3 + 216);
    if ((_DWORD)v16 == 1)
      goto LABEL_19;
LABEL_92:
    if (!(_DWORD)v16)
      goto LABEL_183;
    goto LABEL_93;
  }
  ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
  std::__shared_weak_count::__release_weak(size);
  std::mutex::unlock(v7);
  v16 = *(_QWORD *)(a3 + 216);
  if ((_DWORD)v16 != 1)
    goto LABEL_92;
LABEL_19:
  if (HIDWORD(v16) <= 2)
    goto LABEL_183;
LABEL_93:
  v40 = *(_OWORD *)(a2 + 488);
  v107 = *(_OWORD *)(a2 + 472);
  *(_OWORD *)v108 = v40;
  *(_OWORD *)&v108[9] = *(_OWORD *)(a2 + 497);
  v41 = mach_continuous_time();
  v42 = atomic_load((unsigned __int8 *)&qword_254A6D7C8);
  if ((v42 & 1) == 0 && __cxa_guard_acquire(&qword_254A6D7C8))
  {
    mach_timebase_info((mach_timebase_info_t)&v95);
    LODWORD(v82) = HIDWORD(v95.__r_.__value_.__r.__words[0]);
    LODWORD(v81) = v95.__r_.__value_.__l.__data_;
    *(double *)&qword_254A6D7C0 = (double)v81 / (double)v82;
    __cxa_guard_release(&qword_254A6D7C8);
  }
  __p[0] = (void *)llround(*(double *)&qword_254A6D7C0 * (double)v41);
  __p[1] = (void *)2;
  LOBYTE(v120) = 0;
  v123 = 0;
  LOBYTE(v124[0]) = 0;
  LOBYTE(v126) = 0;
  LOBYTE(v127[0]) = 0;
  LOBYTE(v128) = 0;
  v130 = 0;
  v132 = 0;
  v133 = 0;
  v134 = 0;
  v43 = operator new();
  *(_QWORD *)v43 = &off_24CA08E40;
  v44 = *(_OWORD *)v108;
  *(_OWORD *)(v43 + 8) = v107;
  *(_OWORD *)(v43 + 24) = v44;
  *(_OWORD *)(v43 + 40) = *(_OWORD *)&v108[16];
  sub_20EB09F3C(v43 + 64, (uint64_t)__p);
  *(_QWORD *)v43 = &off_24CA08DF0;
  v109.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24CA0C0E8;
  v109.__r_.__value_.__l.__size_ = v43;
  v45 = (_QWORD *)operator new();
  *v45 = &off_24CA0C1E0;
  v45[1] = 0;
  v45[2] = 0;
  v45[3] = v43;
  v109.__r_.__value_.__r.__words[2] = (std::string::size_type)v45;
  sub_20EB0580C((uint64_t)__p);
  sub_20FF24C74(&v105, (uint64_t)&v109, 1uLL);
  v46 = (std::__shared_weak_count *)v109.__r_.__value_.__r.__words[2];
  if (v109.__r_.__value_.__r.__words[2])
  {
    v47 = (unint64_t *)(v109.__r_.__value_.__r.__words[2] + 8);
    do
      v48 = __ldaxr(v47);
    while (__stlxr(v48 - 1, v47));
    if (!v48)
    {
      ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
      std::__shared_weak_count::__release_weak(v46);
    }
  }
  sub_20FF396BC((uint64_t)__p, a2, (uint64_t *)&v105, a3 + 8);
  v49 = v131;
  if (!v131)
  {
    sub_2102341F0((uint64_t)__p, &v95);
    v50 = std::string::insert(&v95, 0, "While connecting a new client, failed to send configuration to client: ", 0x47uLL);
    v52 = (void *)v50->__r_.__value_.__r.__words[0];
    v51 = v50->__r_.__value_.__l.__size_;
    v96[0] = v50->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v96 + 3) = *(_DWORD *)((char *)&v50->__r_.__value_.__r.__words[2] + 3);
    v53 = SHIBYTE(v50->__r_.__value_.__r.__words[2]);
    v50->__r_.__value_.__l.__size_ = 0;
    v50->__r_.__value_.__r.__words[2] = 0;
    v50->__r_.__value_.__r.__words[0] = 0;
    if (v53 < 0)
    {
      sub_20E860C04(&__dst, v52, v51);
    }
    else
    {
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v52;
      __dst.__r_.__value_.__l.__size_ = v51;
      LODWORD(__dst.__r_.__value_.__r.__words[2]) = v96[0];
      *(_DWORD *)((char *)&__dst.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)v96 + 3);
      *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v53;
    }
    v98 = 1;
    LOBYTE(v99) = 0;
    v103 = 0;
    v104 = 1;
    sub_20FDD0A04((uint64_t)&v109, 2u, (__int128 *)&__dst);
    if (v104)
    {
      if (v103)
      {
        if (v102 < 0)
          operator delete(v101);
        if (v100 < 0)
          operator delete(v99);
      }
      if (v98 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
    }
    if (v53 < 0)
      operator delete(v52);
    if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v95.__r_.__value_.__l.__data_);
    *(_OWORD *)v83 = *(_OWORD *)&v109.__r_.__value_.__l.__data_;
    sub_20E89EFE4(v84, (__int128 *)&v109.__r_.__value_.__r.__words[2]);
    v93 = 1;
    if (v118)
    {
      if (v117)
      {
        if (SHIBYTE(v116) < 0)
          operator delete(v115[0]);
        if (SHIBYTE(v113) < 0)
          operator delete(v112[0]);
      }
      if (v111 && v110 < 0)
        operator delete((void *)v109.__r_.__value_.__r.__words[2]);
    }
    if (!v131 && v130)
    {
      if (v129)
      {
        if (SHIBYTE(v128) < 0)
          operator delete(v127[0]);
        if (SHIBYTE(v125) < 0)
          operator delete(v124[0]);
      }
      if (v123 && v122 < 0)
        operator delete(v120);
    }
  }
  v54 = (char *)v105;
  if (v105)
  {
    v55 = v106;
    v56 = v105;
    if (v106 != v105)
    {
      do
      {
        v57 = (std::__shared_weak_count *)*((_QWORD *)v55 - 1);
        if (v57)
        {
          v58 = (unint64_t *)&v57->__shared_owners_;
          do
            v59 = __ldaxr(v58);
          while (__stlxr(v59 - 1, v58));
          if (!v59)
          {
            ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
            std::__shared_weak_count::__release_weak(v57);
          }
        }
        v55 -= 24;
      }
      while (v55 != v54);
      v56 = v105;
    }
    v106 = v54;
    operator delete(v56);
  }
  if (v49 || !v93)
    goto LABEL_183;
  v60 = *(std::mutex **)(a2 + 616);
  std::mutex::lock(v60);
  __p[0] = 0;
  __p[1] = 0;
  v109.__r_.__value_.__r.__words[0] = a3 + 8;
  v61 = sub_20FF3B87C((uint64_t **)(a2 + 624), (unsigned __int8 *)(a3 + 8), &v109);
  __p[0] = 0;
  __p[1] = 0;
  v62 = (std::__shared_weak_count *)v61[7];
  v61[6] = 0;
  v61[7] = 0;
  if (v62)
  {
    v63 = (unint64_t *)&v62->__shared_owners_;
    do
      v64 = __ldaxr(v63);
    while (__stlxr(v64 - 1, v63));
    if (!v64)
    {
      ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
      std::__shared_weak_count::__release_weak(v62);
    }
  }
  v65 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
    v66 = (unint64_t *)((char *)__p[1] + 8);
    do
      v67 = __ldaxr(v66);
    while (__stlxr(v67 - 1, v66));
    if (!v67)
    {
      ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
      std::__shared_weak_count::__release_weak(v65);
    }
  }
  std::mutex::unlock(v60);
  if (*(_BYTE *)(a2 + 464))
  {
    v68 = *(_QWORD *)(a2 + 456);
    if (!v68)
      sub_20E86D37C();
    (*(void (**)(uint64_t, std::string::size_type, void **))(*(_QWORD *)v68 + 48))(v68, a3, v83);
  }
  if (*(_BYTE *)(a2 + 608))
    (*(void (**)(_QWORD, std::string::size_type))(**(_QWORD **)(a2 + 600) + 64))(*(_QWORD *)(a2 + 600), a3 + 8);
  *(_OWORD *)__p = *(_OWORD *)v83;
  v69 = sub_20E89EFE4(&v120, (__int128 *)v84);
  *(_OWORD *)a1 = *(_OWORD *)__p;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v130)
  {
    *(_BYTE *)(a1 + 40) = 0;
    v70 = v123;
    if (v123)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v69;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)v69 + 2);
      *((_QWORD *)v69 + 1) = 0;
      *((_QWORD *)v69 + 2) = 0;
      *(_QWORD *)v69 = 0;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v129)
    {
      v71 = v126;
      *(_QWORD *)(a1 + 64) = v125;
      *(_OWORD *)(a1 + 48) = *(_OWORD *)v124;
      v124[0] = 0;
      v124[1] = 0;
      *(_QWORD *)(a1 + 72) = v71;
      *(_OWORD *)(a1 + 80) = *(_OWORD *)v127;
      *(_QWORD *)(a1 + 96) = v128;
      v125 = 0;
      v127[0] = 0;
      v127[1] = 0;
      v128 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (v70 && v122 < 0)
      operator delete(v120);
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
  }
  if (v93 && v92)
  {
    if (v91)
    {
      if (v90 < 0)
        operator delete(v89);
      if (v88 < 0)
        operator delete(v87);
    }
    if (v86 && v85 < 0)
    {
      v80 = v84[0];
      goto LABEL_245;
    }
  }
}

void sub_20FF3ACD4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A6D7C8);
  _Unwind_Resume(a1);
}

void sub_20FF3ACEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a72;
  void *v72;

  operator delete(v72);
  if (a32 < 0)
    operator delete(__p);
  sub_20E89ED1C((uint64_t)&a72);
  sub_20EF76610(&a47);
  _Unwind_Resume(a1);
}

void sub_20FF3ADA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20FD02EC8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF3ADC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  sub_20E89F09C((uint64_t)&a31);
  JUMPOUT(0x20FF3ADCCLL);
}

void sub_20FF3ADEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  sub_20E89ED1C((uint64_t)&a69);
  _Unwind_Resume(a1);
}

void sub_20FF3AE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E89EF58((uint64_t)&a9);
  JUMPOUT(0x20FF3AE0CLL);
}

void sub_20FF3AE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44)
{
  sub_20EF76610(&a44);
  _Unwind_Resume(a1);
}

void sub_20FF3AE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  sub_20FF1C8E4((uint64_t)&a53);
  _Unwind_Resume(a1);
}

void sub_20FF3AE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;
  uint64_t v69;

  (*(void (**)(uint64_t))(*(_QWORD *)v69 + 8))(v69);
  sub_20EB0580C((uint64_t)&a69);
  _Unwind_Resume(a1);
}

void sub_20FF3AE68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;
  uint64_t v69;

  MEMORY[0x212BC6398](v69, 0x10B3C406D9A893FLL);
  sub_20EB0580C((uint64_t)&a69);
  _Unwind_Resume(a1);
}

void sub_20FF3AE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  sub_20EB0580C((uint64_t)&a69);
  _Unwind_Resume(a1);
}

void sub_20FF3AEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  std::mutex *v53;

  sub_20E86665C((uint64_t)&a53);
  std::mutex::unlock(v53);
  _Unwind_Resume(a1);
}

void sub_20FF3AEC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a72;
  char a73;
  std::mutex *v73;
  std::__shared_weak_count *v74;
  std::mutex *v75;
  void *v77;

  if (a73 && a72 < 0)
    operator delete(__p);
  if (a9)
    operator delete(a9);
  std::mutex::~mutex(v75);
  std::__shared_weak_count::~__shared_weak_count(v74);
  operator delete(v77);
  std::mutex::unlock(v73);
  _Unwind_Resume(a1);
}

void sub_20FF3AF18(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20FF3AF2C(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20FF3AF44(uint64_t a1, uint64_t a2, std::string::size_type a3, _QWORD *a4)
{
  std::mutex *v8;
  uint64_t *v9;
  std::__shared_weak_count *v10;
  std::mutex *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  _QWORD *v14;
  std::mutex *v15;
  char *v16;
  size_t v17;
  _QWORD *v18;
  _QWORD *v19;
  BOOL v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  int v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  std::string v28;
  char v29;
  unsigned __int8 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  char v37;
  std::string __dst;
  char v39;
  void *v40;
  char v41;
  void *__p;
  char v43;
  char v44;
  char v45;
  __int128 v46;
  __int128 v47;
  char v48;
  char v49;
  void *v50;
  char v51;
  void *v52;
  char v53;
  char v54;
  char v55;
  _OWORD *v56[4];
  char v57;
  char v58;
  void *v59;
  char v60;
  void *v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v8 = *(std::mutex **)(a2 + 616);
  std::mutex::lock(v8);
  v56[0] = (_OWORD *)(a3 + 8);
  v9 = sub_20FF3B87C((uint64_t **)(a2 + 624), (unsigned __int8 *)(a3 + 8), v56);
  v11 = (std::mutex *)v9[6];
  v10 = (std::__shared_weak_count *)v9[7];
  v27 = v10;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
  }
  std::mutex::unlock(v8);
  if (v11)
  {
    std::mutex::lock(v11);
    v14 = (_QWORD *)*a4;
    if ((_QWORD *)*a4 != a4 + 1)
    {
      v15 = v11;
      do
      {
        v16 = (char *)(v14 + 4);
        sub_20E8B19F0((uint64_t **)&v15[1].__m_.__opaque[8], (void **)v14 + 4, (uint64_t)(v14 + 4));
        if (*((char *)v14 + 55) < 0)
        {
          v16 = (char *)v14[4];
          v17 = v14[5];
        }
        else
        {
          v17 = *((unsigned __int8 *)v14 + 55);
        }
        v15 = v11;
        sub_20FF21918((uint64_t)&v11[1], v16, v17, *((unsigned __int8 *)v14 + 56));
        v18 = (_QWORD *)v14[1];
        if (v18)
        {
          do
          {
            v19 = v18;
            v18 = (_QWORD *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            v19 = (_QWORD *)v14[2];
            v20 = *v19 == (_QWORD)v14;
            v14 = v19;
          }
          while (!v20);
        }
        v14 = v19;
      }
      while (v19 != a4 + 1);
    }
    std::mutex::unlock(v11);
  }
  if (!*(_BYTE *)(a2 + 424))
    goto LABEL_21;
  v28.__r_.__value_.__r.__words[0] = a2 + 392;
  v28.__r_.__value_.__l.__size_ = a3;
  *(_QWORD *)&v46 = &off_24CA0DA10;
  *((_QWORD *)&v46 + 1) = &v28;
  *(_QWORD *)&v47 = a4;
  sub_210235BBC((uint64_t)&v46, (uint64_t)v56);
  if (v65)
  {
    *(_BYTE *)a1 = 0;
LABEL_21:
    *(_BYTE *)(a1 + 120) = 1;
    goto LABEL_22;
  }
  sub_2102341F0((uint64_t)v56, &v28);
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
    sub_20E860C04(&__dst, v28.__r_.__value_.__l.__data_, v28.__r_.__value_.__l.__size_);
  else
    __dst = v28;
  v39 = 1;
  LOBYTE(v40) = 0;
  v44 = 0;
  v45 = 1;
  sub_20FDD0A04((uint64_t)&v46, 2u, (__int128 *)&__dst);
  if (v45)
  {
    if (v44)
    {
      if (v43 < 0)
        operator delete(__p);
      if (v41 < 0)
        operator delete(v40);
    }
    if (v39 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (!*(_BYTE *)(a2 + 464))
      goto LABEL_46;
LABEL_44:
    v23 = *(_QWORD *)(a2 + 456);
    if (!v23)
      sub_20E86D37C();
    (*(void (**)(uint64_t, std::string::size_type, __int128 *))(*(_QWORD *)v23 + 48))(v23, a3, &v46);
    goto LABEL_46;
  }
  operator delete(v28.__r_.__value_.__l.__data_);
  if (*(_BYTE *)(a2 + 464))
    goto LABEL_44;
LABEL_46:
  *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v46;
  v24 = sub_20E89EFE4(&v28.__r_.__value_.__s.__data_[16], &v47);
  *(_OWORD *)a1 = *(_OWORD *)&v28.__r_.__value_.__l.__data_;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v37)
  {
    *(_BYTE *)(a1 + 40) = 0;
    v25 = v30;
    if (v30)
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)v24;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)v24 + 2);
      *((_QWORD *)v24 + 1) = 0;
      *((_QWORD *)v24 + 2) = 0;
      *(_QWORD *)v24 = 0;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v36)
    {
      v26 = v33;
      *(_QWORD *)(a1 + 64) = v32;
      *(_OWORD *)(a1 + 48) = v31;
      v31 = 0uLL;
      *(_QWORD *)(a1 + 72) = v26;
      *(_OWORD *)(a1 + 80) = v34;
      *(_QWORD *)(a1 + 96) = v35;
      v32 = 0;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (v25 && v29 < 0)
      operator delete((void *)v28.__r_.__value_.__r.__words[2]);
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
  }
  if (v55)
  {
    if (v54)
    {
      if (v53 < 0)
        operator delete(v52);
      if (v51 < 0)
        operator delete(v50);
    }
    if (v49 && v48 < 0)
      operator delete((void *)v47);
  }
  if (!v65 && v64)
  {
    if (v63)
    {
      if (v62 < 0)
        operator delete(v61);
      if (v60 < 0)
        operator delete(v59);
    }
    if (v58 && v57 < 0)
      operator delete(v56[2]);
  }
LABEL_22:
  if (v27)
  {
    v21 = (unint64_t *)&v27->__shared_owners_;
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
}

void sub_20FF3B35C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v43;

  if (a16 < 0)
    operator delete(__p);
  sub_20E89ED1C(v43 - 208);
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF3B3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF3B3CC(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20FF3B3E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::mutex *v9;

  std::mutex::unlock(v9);
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF3B3FC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;

  v2 = *(std::__shared_weak_count **)(a1 + 280);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
  {
LABEL_5:
    v5 = *(std::__shared_weak_count **)(a1 + 264);
    if (!v5)
      goto LABEL_7;
    goto LABEL_6;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  v5 = *(std::__shared_weak_count **)(a1 + 264);
  if (v5)
LABEL_6:
    std::__shared_weak_count::__release_weak(v5);
LABEL_7:
  v6 = *(std::__shared_weak_count **)(a1 + 248);
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
  sub_20FCF4D74(a1 + 64);
  if (*(_BYTE *)(a1 + 56))
  {
    if (*(char *)(a1 + 55) < 0)
      operator delete(*(void **)(a1 + 32));
  }
}

uint64_t sub_20FF3B49C(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 56) = 0;
  if (*(_BYTE *)(a2 + 56))
  {
    if (*(char *)(a2 + 55) < 0)
    {
      sub_20E860C04((_BYTE *)(a1 + 32), *(void **)(a2 + 32), *(_QWORD *)(a2 + 40));
    }
    else
    {
      v5 = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = v5;
    }
    *(_BYTE *)(a1 + 56) = 1;
  }
  *(_BYTE *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 208) = 0;
  if (*(_BYTE *)(a2 + 208))
  {
    sub_20FCF4B4C((char *)(a1 + 64), (__int128 *)(a2 + 64));
    *(_BYTE *)(a1 + 208) = 1;
  }
  v6 = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v6;
  v7 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v7;
  if (v7)
  {
    v8 = (unint64_t *)(v7 + 16);
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  v10 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = v10;
  if (v10)
  {
    v11 = (unint64_t *)(v10 + 16);
    do
      v12 = __ldxr(v11);
    while (__stxr(v12 + 1, v11));
  }
  v13 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v13;
  if (v13)
  {
    v14 = (unint64_t *)(v13 + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
  }
  return a1;
}

void sub_20FF3B5C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;

  if (*(_BYTE *)(v1 + 56))
  {
    if (*(char *)(v1 + 55) < 0)
      operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF3B5F4(uint64_t a1)
{
  uint64_t i;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = *(_QWORD *)(a1 + 16); i != v3; i = *(_QWORD *)(a1 + 16))
  {
    *(_QWORD *)(a1 + 16) = i - 288;
    sub_20FF3B3FC(i - 288);
  }
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_20FF3B644(uint64_t a1, const char *a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  _QWORD **v6;
  const char *v7;
  _DWORD *v8;
  const char *v9;
  const char *v10;
  _QWORD *v11;

  v5 = 0;
  sub_20E9E6784(v4, "server cannot receive ");
  if (*(_QWORD *)a2)
  {
    v6 = (_QWORD **)v4;
    v7 = a2;
    v8 = v4;
    v9 = a2;
    v10 = a2;
    if (v5 != -1)
    {
      v11 = &v6;
      ((void (*)(_QWORD **, _DWORD *))off_24CA0D870[v5])(&v11, v4);
      goto LABEL_6;
    }
LABEL_11:
    sub_20E877AB8();
  }
  v6 = (_QWORD **)v4;
  v7 = "nullptr";
  v8 = v4;
  v9 = "nullptr";
  v10 = "nullptr";
  if (v5 == -1)
    goto LABEL_11;
  v11 = &v6;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0D840[v5])(&v11, v4);
LABEL_6:
  v6 = (_QWORD **)v4;
  v7 = ", server object has been destroyed";
  v8 = v4;
  v9 = ", server object has been destroyed";
  v10 = ", server object has been destroyed";
  if (v5 == -1)
    sub_20E877AB8();
  v11 = &v6;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0D888[v5])(&v11, v4);
  if (v5 == -1)
    sub_20E877AB8();
  v6 = &v11;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0D858[v5])(&v6, v4);
  if (v5 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0D828[v5])(&v6, v4);
  return result;
}

void sub_20FF3B7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF3B7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF3B7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF3B7FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF3B810(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D8B0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF3B820(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D8B0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF3B850(uint64_t a1)
{
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 96));
  std::mutex::~mutex((std::mutex *)(a1 + 32));
}

uint64_t *sub_20FF3B87C(uint64_t **a1, unsigned __int8 *a2, _OWORD **a3)
{
  uint64_t *v5;
  uint64_t **v6;
  uint64_t **v8;
  unsigned __int8 *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;

  v6 = a1 + 1;
  v5 = a1[1];
  if (!v5)
  {
    v8 = a1 + 1;
LABEL_9:
    v10 = (uint64_t *)operator new(0x40uLL);
    *((_OWORD *)v10 + 2) = **a3;
    v10[6] = 0;
    v10[7] = 0;
    *v10 = 0;
    v10[1] = 0;
    v10[2] = (uint64_t)v8;
    *v6 = v10;
    v11 = (uint64_t *)**a1;
    v12 = v10;
    if (v11)
    {
      *a1 = v11;
      v12 = *v6;
    }
    sub_20E868578(a1[1], v12);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    return v10;
  }
  while (1)
  {
    while (1)
    {
      v8 = (uint64_t **)v5;
      v9 = (unsigned __int8 *)(v5 + 4);
      if ((sub_20E96C45C(a2, (unsigned __int8 *)v5 + 32) & 0x80) == 0)
        break;
      v5 = *v8;
      v6 = v8;
      if (!*v8)
        goto LABEL_9;
    }
    if ((sub_20E96C45C(v9, a2) & 0x80) == 0)
      break;
    v6 = v8 + 1;
    v5 = v8[1];
    if (!v5)
      goto LABEL_9;
  }
  v10 = *v6;
  if (!*v6)
    goto LABEL_9;
  return v10;
}

void sub_20FF3B970()
{
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF3B984(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(a1 + 8);
  v2 = *(_QWORD *)(*v1 + 24);
  if (!v2)
    sub_20E86D37C();
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)v2 + 48))(v2, v1[1], *(_QWORD *)(a1 + 16));
}

void sub_20FF3B9C0()
{
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF3B9D4(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)a1[1];
  v2 = *(_QWORD *)(*v1 + 24);
  if (!v2)
    sub_20E86D37C();
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v2 + 48))(v2, v1[1], a1[2], a1[3]);
}

void sub_20FF3BA0C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D980;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF3BA1C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0D980;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF3BA4C(uint64_t a1)
{
  uint64_t v2;

  sub_20E866BE0(a1 + 104, *(char **)(a1 + 112));
  v2 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = &off_24CA0C358;
  *(_QWORD *)(a1 + 96) = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  std::mutex::~mutex((std::mutex *)(a1 + 24));
}

void sub_20FF3BAA0()
{
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF3BAB4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v1 = *(uint64_t **)(a1 + 8);
  v3 = *v1;
  v2 = v1[1];
  LOBYTE(v1) = **(_BYTE **)(a1 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  v6 = (char)v1;
  if (!v4)
    sub_20E86D37C();
  return (*(uint64_t (**)(uint64_t, uint64_t, char *))(*(_QWORD *)v4 + 48))(v4, v2, &v6);
}

void sub_20FF3BAFC()
{
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF3BB10(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)(a1 + 8);
  v2 = *(_QWORD *)(*v1 + 24);
  if (!v2)
    sub_20E86D37C();
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)v2 + 48))(v2, v1[1], *(_QWORD *)(a1 + 16));
}

uint64_t *sub_20FF3BB48(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
    MEMORY[0x212BC6398](v2, 0x1000C4072FAA15ELL);
  return a1;
}

_QWORD *sub_20FF3BB88(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  void **p_dst;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 *v22;
  __int128 v23;
  void **v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  void *__p[2];
  unsigned __int8 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 *v49;
  int v50;
  void **__dst;
  size_t v52;
  int64_t v53;
  __int128 *v54;

  v4 = sub_20E86A980(a1, (uint64_t)"{", 1);
  v5 = *(char *)(*a2 + 136);
  v50 = 0;
  v6 = operator new();
  *(_QWORD *)(v6 + 272) = 0;
  *(_OWORD *)(v6 + 240) = 0u;
  *(_OWORD *)(v6 + 256) = 0u;
  *(_OWORD *)(v6 + 208) = 0u;
  *(_OWORD *)(v6 + 224) = 0u;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)v6 = 0u;
  sub_20E863438(v6);
  *(_QWORD *)&v40 = v6;
  sub_20E86A980((_QWORD *)(v6 + 16), (uint64_t)off_24CA0DAA8[v5 - 1], qword_2103F1280[(char)(v5 - 1)]);
  v7 = *(_DWORD *)(v6 + 120);
  if ((v7 & 0x10) != 0)
  {
    v10 = *(_QWORD *)(v6 + 112);
    v11 = *(_QWORD *)(v6 + 72);
    if (v10 < v11)
    {
      *(_QWORD *)(v6 + 112) = v11;
      v10 = v11;
    }
    v12 = *(const void **)(v6 + 64);
    v8 = v10 - (_QWORD)v12;
    if (v10 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_41;
  }
  else
  {
    if ((v7 & 8) == 0)
    {
      v8 = 0;
      HIBYTE(v53) = 0;
      p_dst = (void **)&__dst;
      goto LABEL_14;
    }
    v12 = *(const void **)(v6 + 40);
    v8 = *(_QWORD *)(v6 + 56) - (_QWORD)v12;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_41:
      sub_20E860B7C();
  }
  if (v8 >= 0x17)
  {
    v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v13 = v8 | 7;
    v14 = v13 + 1;
    p_dst = (void **)operator new(v13 + 1);
    v52 = v8;
    v53 = v14 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_13;
  }
  HIBYTE(v53) = v8;
  p_dst = (void **)&__dst;
  if (v8)
LABEL_13:
    memmove(p_dst, v12, v8);
LABEL_14:
  *((_BYTE *)p_dst + v8) = 0;
  v15 = v40;
  if ((_QWORD)v40)
  {
    v16 = MEMORY[0x24BEDB7F0];
    v17 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v40 = *MEMORY[0x24BEDB7F0];
    v18 = *(_QWORD *)(v16 + 72);
    *(_QWORD *)(v15 + *(_QWORD *)(v17 - 24)) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v15 + 16) = v18;
    if (*(char *)(v15 + 111) < 0)
      operator delete(*(void **)(v15 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x212BC6290](v15 + 128);
    MEMORY[0x212BC6398](v15, 0x10B2C40EED050F3);
  }
  *(_QWORD *)&v40 = &v48;
  *((_QWORD *)&v40 + 1) = &__dst;
  *(_QWORD *)&v41 = &v48;
  *((_QWORD *)&v41 + 1) = &__dst;
  *(_QWORD *)&v42 = &__dst;
  if (v50 == -1)
    sub_20E877AB8();
  v54 = &v40;
  ((void (*)(__int128 **, __int128 *))off_24CA0DA78[v50])(&v54, &v48);
  if (SHIBYTE(v53) < 0)
    operator delete(__dst);
  if (v50 == -1)
    sub_20E877AB8();
  *(_QWORD *)&v40 = &__dst;
  ((void (*)(void **__return_ptr, __int128 *, __int128 *))off_24CA0DA90[v50])(__p, &v40, &v48);
  if (v50 != -1)
    ((void (*)(__int128 *, __int128 *))off_24CA0DA60[v50])(&v40, &v48);
  if ((v39 & 0x80u) == 0)
    v19 = __p;
  else
    v19 = (void **)__p[0];
  if ((v39 & 0x80u) == 0)
    v20 = v39;
  else
    v20 = (uint64_t)__p[1];
  v21 = sub_20E86A980(v4, (uint64_t)v19, v20);
  sub_20E86A980(v21, (uint64_t)",\n", 2);
  if ((char)v39 < 0)
    operator delete(__p[0]);
  v22 = (__int128 *)*a2;
  switch(*(_BYTE *)(*a2 + 136))
  {
    case 1:
      if (*((_DWORD *)v22 + 32) != 2)
        goto LABEL_68;
      v23 = *v22;
      v49 = (__int128 *)*((_QWORD *)v22 + 2);
      v48 = v23;
      *(_QWORD *)&v40 = 0x100000006;
      DWORD2(v40) = 6;
      *(_QWORD *)&v41 = &v48;
      DWORD2(v41) = 0;
      sub_20E9F70CC((unsigned int *)&v40, &__dst);
      if (v53 >= 0)
        v24 = (void **)&__dst;
      else
        v24 = __dst;
      if (v53 >= 0)
        v25 = HIBYTE(v53);
      else
        v25 = v52;
      goto LABEL_63;
    case 2:
      if (*((_DWORD *)v22 + 32) != 3)
        goto LABEL_68;
      v29 = *v22;
      v30 = v22[2];
      v41 = v22[1];
      v42 = v30;
      v40 = v29;
      *(_QWORD *)&v48 = 0x100000006;
      DWORD2(v48) = 6;
      v49 = &v40;
      v50 = 0;
      sub_20E9F7718((unsigned int *)&v48, &__dst);
      if (v53 >= 0)
        v24 = (void **)&__dst;
      else
        v24 = __dst;
      if (v53 >= 0)
        v25 = HIBYTE(v53);
      else
        v25 = v52;
      goto LABEL_63;
    case 4:
      if (*((_DWORD *)v22 + 32))
        goto LABEL_68;
      v26 = *v22;
      v27 = v22[1];
      v28 = v22[3];
      v42 = v22[2];
      v43 = v28;
      v40 = v26;
      v41 = v27;
      *(_QWORD *)&v48 = 0x400000004;
      DWORD2(v48) = 4;
      v49 = &v40;
      v50 = 0;
      sub_20E9F70CC((unsigned int *)&v48, &__dst);
      if (v53 >= 0)
        v24 = (void **)&__dst;
      else
        v24 = __dst;
      if (v53 >= 0)
        v25 = HIBYTE(v53);
      else
        v25 = v52;
      goto LABEL_63;
    case 5:
      if (*((_DWORD *)v22 + 32) != 1)
LABEL_68:
        sub_20E877AB8();
      v31 = *v22;
      v32 = v22[1];
      v33 = v22[3];
      v42 = v22[2];
      v43 = v33;
      v40 = v31;
      v41 = v32;
      v34 = v22[4];
      v35 = v22[5];
      v36 = v22[6];
      v47 = v22[7];
      v45 = v35;
      v46 = v36;
      v44 = v34;
      *(_QWORD *)&v48 = 0x400000004;
      DWORD2(v48) = 4;
      v49 = &v40;
      v50 = 0;
      sub_20E9F7718((unsigned int *)&v48, &__dst);
      if (v53 >= 0)
        v24 = (void **)&__dst;
      else
        v24 = __dst;
      if (v53 >= 0)
        v25 = HIBYTE(v53);
      else
        v25 = v52;
LABEL_63:
      sub_20E86A980(a1, (uint64_t)v24, v25);
      if (SHIBYTE(v53) < 0)
        operator delete(__dst);
      break;
    default:
      return sub_20E86A980(a1, (uint64_t)"}", 1);
  }
  return sub_20E86A980(a1, (uint64_t)"}", 1);
}

void sub_20FF3C0C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (*(char *)(v15 - 73) < 0)
    operator delete(*(void **)(v15 - 96));
  _Unwind_Resume(exception_object);
}

void sub_20FF3C144(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_20FF3C158(_Unwind_Exception *a1)
{
  uint64_t v1;

  if (*(char *)(v1 - 73) < 0)
  {
    operator delete(*(void **)(v1 - 96));
    sub_20E877A60(v1 - 128);
    _Unwind_Resume(a1);
  }
  sub_20E877A60(v1 - 128);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF3C198(uint64_t a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v2 = atomic_load((unsigned __int8 *)&qword_254A6C9A8);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_254A6C9A8))
  {
    v7 = operator new();
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)v7 = 0u;
    *(_DWORD *)(v7 + 128) = 3;
    *(_BYTE *)(v7 + 136) = 2;
    qword_254A6C9A0 = v7;
    __cxa_atexit((void (*)(void *))sub_20FF3BB48, &qword_254A6C9A0, &dword_20E81F000);
    __cxa_guard_release(&qword_254A6C9A8);
  }
  v3 = qword_254A6C9A0;
  v4 = operator new();
  *(_BYTE *)v4 = 0;
  *(_DWORD *)(v4 + 128) = -1;
  v5 = *(unsigned int *)(v3 + 128);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(char *, uint64_t, uint64_t))off_24CA0DA40[v5])(&v8, v4, v3);
    *(_DWORD *)(v4 + 128) = v5;
  }
  *(_BYTE *)(v4 + 136) = *(_BYTE *)(v3 + 136);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 64) = 0;
  return a1;
}

void sub_20FF3C2C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A6C9A8);
  _Unwind_Resume(a1);
}

void sub_20FF3C2DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BC6398](v1, 0x1000C4072FAA15ELL);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF3C300(const void **a1, uint64_t *a2)
{
  float *v2;
  uint64_t v3;
  int v4;
  int v6;
  int v7;
  int v9;
  uint64_t result;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  int v16;
  const void **v17;
  unsigned __int8 *v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  int v22;
  const void **v23;
  unsigned __int8 *v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  BOOL v31;
  float *v32;
  uint64_t v33;

  v2 = (float *)*a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)*a1 + 136);
  v6 = v4 != 5 && v4 != 2;
  v7 = *(unsigned __int8 *)(v3 + 136);
  v9 = v7 == 5 || v7 == 2;
  if (v6 == v9)
    return 0;
  if (((v4 & 0xFE) != 4) != ((v7 & 0xFE) == 4))
  {
    result = 0;
    switch(v4)
    {
      case 1:
        if (*((_DWORD *)v2 + 32) != 2 || *(_DWORD *)(v3 + 128) != 2)
          goto LABEL_84;
        if (*v2 != *(float *)v3
          || v2[1] != *(float *)(v3 + 4)
          || v2[2] != *(float *)(v3 + 8)
          || v2[3] != *(float *)(v3 + 12)
          || v2[4] != *(float *)(v3 + 16)
          || v2[5] != *(float *)(v3 + 20))
        {
          return 0;
        }
        goto LABEL_43;
      case 2:
        if (*((_DWORD *)v2 + 32) != 3 || *(_DWORD *)(v3 + 128) != 3)
          goto LABEL_84;
        if (*(double *)v2 != *(double *)v3
          || *((double *)v2 + 1) != *(double *)(v3 + 8)
          || *((double *)v2 + 2) != *(double *)(v3 + 16)
          || *((double *)v2 + 3) != *(double *)(v3 + 24)
          || *((double *)v2 + 4) != *(double *)(v3 + 32)
          || *((double *)v2 + 5) != *(double *)(v3 + 40))
        {
          return 0;
        }
        goto LABEL_43;
      case 4:
        if (*((_DWORD *)v2 + 32) || *(_DWORD *)(v3 + 128))
          goto LABEL_84;
        v32 = v2;
        v33 = v3;
        result = sub_20EEF0B20(&v32);
        if ((_DWORD)result)
          goto LABEL_43;
        return result;
      case 5:
        if (*((_DWORD *)v2 + 32) != 1 || *(_DWORD *)(v3 + 128) != 1)
LABEL_84:
          sub_20E877AB8();
        v32 = v2;
        v33 = v3;
        if (!sub_20F3E92B8((double **)&v32))
          return 0;
LABEL_43:
        if (*((_BYTE *)a1 + 32) && *((_BYTE *)a2 + 32))
        {
          v13 = *((unsigned __int8 *)a1 + 31);
          if ((v13 & 0x80u) == 0)
            v14 = (const void *)*((unsigned __int8 *)a1 + 31);
          else
            v14 = a1[2];
          v15 = *((unsigned __int8 *)a2 + 31);
          v16 = (char)v15;
          if ((v15 & 0x80u) != 0)
            v15 = a2[2];
          if (v14 != (const void *)v15)
            return 0;
          v17 = a1 + 1;
          if (v16 >= 0)
            v18 = (unsigned __int8 *)(a2 + 1);
          else
            v18 = (unsigned __int8 *)a2[1];
          if ((v13 & 0x80) != 0)
          {
            if (memcmp(*v17, v18, (size_t)a1[2]))
              return 0;
          }
          else if (*((_BYTE *)a1 + 31))
          {
            do
            {
              if (*(unsigned __int8 *)v17 != *v18)
                return 0;
              v17 = (const void **)((char *)v17 + 1);
              ++v18;
              --v13;
            }
            while (v13);
          }
        }
        else if ((*((_BYTE *)a1 + 32) != 0) != (*((_BYTE *)a2 + 32) != 0))
        {
          return 0;
        }
        result = (*((_BYTE *)a1 + 64) != 0) == (*((_BYTE *)a2 + 64) != 0);
        if (!*((_BYTE *)a1 + 64) || !*((_BYTE *)a2 + 64))
          return result;
        v19 = *((unsigned __int8 *)a1 + 63);
        if ((v19 & 0x80u) == 0)
          v20 = (const void *)*((unsigned __int8 *)a1 + 63);
        else
          v20 = a1[6];
        v21 = *((unsigned __int8 *)a2 + 63);
        v22 = (char)v21;
        if ((v21 & 0x80u) != 0)
          v21 = a2[6];
        if (v20 == (const void *)v21)
        {
          v23 = a1 + 5;
          if (v22 >= 0)
            v24 = (unsigned __int8 *)(a2 + 5);
          else
            v24 = (unsigned __int8 *)a2[5];
          if ((v19 & 0x80) != 0)
            return memcmp(*v23, v24, (size_t)a1[6]) == 0;
          if (!*((_BYTE *)a1 + 63))
            return 1;
          v25 = v19 - 1;
          do
          {
            v27 = *(unsigned __int8 *)v23;
            v23 = (const void **)((char *)v23 + 1);
            v26 = v27;
            v29 = *v24++;
            v28 = v29;
            v31 = v25-- != 0;
            result = v26 == v28;
          }
          while (v26 == v28 && v31);
          return result;
        }
        break;
      default:
        return result;
    }
  }
  return 0;
}

_QWORD *sub_20FF3C674(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  sub_20E86A980(a1, (uint64_t)"Transform3{src: ", 16);
  if (*((_BYTE *)a2 + 32))
  {
    v24 = 34;
    v4 = sub_20E86A980(a1, (uint64_t)&v24, 1);
    v5 = *((char *)a2 + 31);
    if (v5 >= 0)
      v6 = (uint64_t)(a2 + 1);
    else
      v6 = a2[1];
    if (v5 >= 0)
      v7 = *((unsigned __int8 *)a2 + 31);
    else
      v7 = a2[2];
    v8 = sub_20E86A980(v4, v6, v7);
    v25 = 34;
    v9 = &v25;
    v10 = 1;
  }
  else
  {
    v9 = "world";
    v8 = a1;
    v10 = 5;
  }
  sub_20E86A980(v8, (uint64_t)v9, v10);
  sub_20E86A980(a1, (uint64_t)", dst: ", 7);
  if (*((_BYTE *)a2 + 64))
  {
    v26 = 34;
    v11 = sub_20E86A980(a1, (uint64_t)&v26, 1);
    v12 = *((char *)a2 + 63);
    if (v12 >= 0)
      v13 = (uint64_t)(a2 + 5);
    else
      v13 = a2[5];
    if (v12 >= 0)
      v14 = *((unsigned __int8 *)a2 + 63);
    else
      v14 = a2[6];
    v15 = sub_20E86A980(v11, v13, v14);
    v27 = 34;
    v16 = &v27;
    v17 = 1;
  }
  else
  {
    v16 = "world";
    v15 = a1;
    v17 = 5;
  }
  sub_20E86A980(v15, (uint64_t)v16, v17);
  v18 = sub_20E86A980(a1, (uint64_t)", transform:", 12);
  v19 = *a2;
  v20 = operator new();
  *(_BYTE *)v20 = 0;
  *(_DWORD *)(v20 + 128) = -1;
  v21 = *(unsigned int *)(v19 + 128);
  if ((_DWORD)v21 != -1)
  {
    ((void (*)(char *, uint64_t, uint64_t))off_24CA0DA40[v21])(&v28, v20, v19);
    *(_DWORD *)(v20 + 128) = v21;
  }
  *(_BYTE *)(v20 + 136) = *(_BYTE *)(v19 + 136);
  v23 = v20;
  sub_20FF3BB88(v18, &v23);
  MEMORY[0x212BC6398](v20, 0x1000C4072FAA15ELL);
  return sub_20E86A980(a1, (uint64_t)"}", 1);
}

void sub_20FF3C854(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BC6398](v1, 0x1000C4072FAA15ELL);
  _Unwind_Resume(a1);
}

__n128 sub_20FF3C87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  __int128 v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  v5 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v4;
  return result;
}

__n128 sub_20FF3C890(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v3 = *a3;
  v4 = a3[1];
  v5 = a3[3];
  *(_OWORD *)(a2 + 32) = a3[2];
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)a2 = v3;
  *(_OWORD *)(a2 + 16) = v4;
  result = (__n128)a3[4];
  v7 = a3[5];
  v8 = a3[7];
  *(_OWORD *)(a2 + 96) = a3[6];
  *(_OWORD *)(a2 + 112) = v8;
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v7;
  return result;
}

__n128 sub_20FF3C8B4(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result;

  result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_20FF3C8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a2 + 32) = v4;
  *(__n128 *)a2 = result;
  return result;
}

double sub_20FF3C8DC(uint64_t a1, uint64_t *a2)
{
  __int128 v2;
  __int128 *v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_BYTE *)a1 = *(_BYTE *)(*a2 + 136);
  *(_QWORD *)&v2 = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 104) = 0;
  v3 = (__int128 *)*a2;
  switch(*(_BYTE *)(*a2 + 136))
  {
    case 1:
      if (*((_DWORD *)v3 + 32) != 2)
        goto LABEL_10;
      *(_DWORD *)(a1 + 104) = 2;
      v2 = *v3;
      v4 = *((_QWORD *)v3 + 2);
      *(_OWORD *)(a1 + 8) = *v3;
      *(_QWORD *)(a1 + 24) = v4;
      break;
    case 2:
      if (*((_DWORD *)v3 + 32) != 3)
        goto LABEL_10;
      *(_DWORD *)(a1 + 104) = 3;
      v2 = *v3;
      v16 = v3[1];
      v17 = v3[2];
      *(_OWORD *)(a1 + 8) = *v3;
      *(_OWORD *)(a1 + 24) = v16;
      *(_OWORD *)(a1 + 40) = v17;
      break;
    case 4:
      if (*((_DWORD *)v3 + 32))
        goto LABEL_10;
      LODWORD(v2) = *(_DWORD *)v3;
      v5 = *((_DWORD *)v3 + 1);
      v6 = *((_DWORD *)v3 + 4);
      v7 = *((_DWORD *)v3 + 5);
      v8 = *((_DWORD *)v3 + 8);
      v9 = *((_DWORD *)v3 + 9);
      v10 = *((_DWORD *)v3 + 12);
      v11 = *((_DWORD *)v3 + 13);
      v12 = *((_DWORD *)v3 + 2);
      v13 = *((_DWORD *)v3 + 6);
      v14 = *((_DWORD *)v3 + 10);
      v15 = *((_DWORD *)v3 + 14);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v3;
      *(_DWORD *)(a1 + 12) = v6;
      *(_DWORD *)(a1 + 16) = v8;
      *(_DWORD *)(a1 + 20) = v10;
      *(_DWORD *)(a1 + 24) = v5;
      *(_DWORD *)(a1 + 28) = v7;
      *(_DWORD *)(a1 + 32) = v9;
      *(_DWORD *)(a1 + 36) = v11;
      *(_DWORD *)(a1 + 40) = v12;
      *(_DWORD *)(a1 + 44) = v13;
      *(_DWORD *)(a1 + 48) = v14;
      *(_DWORD *)(a1 + 52) = v15;
      break;
    case 5:
      if (*((_DWORD *)v3 + 32) != 1)
LABEL_10:
        sub_20E877AB8();
      *(_QWORD *)&v2 = *(_QWORD *)v3;
      v18 = *((_QWORD *)v3 + 1);
      v19 = *((_QWORD *)v3 + 4);
      v20 = *((_QWORD *)v3 + 5);
      v21 = *((_QWORD *)v3 + 8);
      v22 = *((_QWORD *)v3 + 9);
      v23 = *((_QWORD *)v3 + 12);
      v24 = *((_QWORD *)v3 + 13);
      v25 = *((_QWORD *)v3 + 2);
      v26 = *((_QWORD *)v3 + 6);
      v27 = *((_QWORD *)v3 + 10);
      v28 = *((_QWORD *)v3 + 14);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)v3;
      *(_QWORD *)(a1 + 16) = v19;
      *(_DWORD *)(a1 + 104) = 1;
      *(_QWORD *)(a1 + 24) = v21;
      *(_QWORD *)(a1 + 32) = v23;
      *(_QWORD *)(a1 + 40) = v18;
      *(_QWORD *)(a1 + 48) = v20;
      *(_QWORD *)(a1 + 56) = v22;
      *(_QWORD *)(a1 + 64) = v24;
      *(_QWORD *)(a1 + 72) = v25;
      *(_QWORD *)(a1 + 80) = v26;
      *(_QWORD *)(a1 + 88) = v27;
      *(_QWORD *)(a1 + 96) = v28;
      break;
    default:
      return *(double *)&v2;
  }
  return *(double *)&v2;
}

uint64_t *sub_20FF3CA24(uint64_t *a1, _BYTE *a2)
{
  unsigned __int8 v4;
  uint64_t v5;
  int v6;
  void *v7;
  void **v8;
  size_t v9;
  uint64_t *v10;
  int v11;
  const void *v12;
  size_t v13;
  size_t v14;
  int v15;
  int v16;
  const void *v17;
  size_t v18;
  size_t v19;
  int v20;
  std::logic_error *exception;
  std::string v23;
  std::string v24;
  void *v25;
  size_t v26;
  uint64_t v27;

  v4 = atomic_load((unsigned __int8 *)&qword_254A6C9B0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A6C9B0))
  {
    sub_20FF3CCC4();
    __cxa_atexit((void (*)(void *))sub_20FF3D36C, &qword_254A6C9B8, &dword_20E81F000);
    __cxa_guard_release(&qword_254A6C9B0);
  }
  v25 = 0;
  v26 = 0;
  v27 = 0;
  sub_20EA94AF4(a1, (uint64_t)&v25);
  v5 = qword_254A6C9C0;
  if (!qword_254A6C9C0)
    goto LABEL_41;
  v6 = SHIBYTE(v27);
  v7 = v25;
  if (v27 >= 0)
    v8 = &v25;
  else
    v8 = (void **)v25;
  if (v27 >= 0)
    v9 = HIBYTE(v27);
  else
    v9 = v26;
  v10 = &qword_254A6C9C0;
  do
  {
    while (1)
    {
      v11 = *(char *)(v5 + 55);
      v12 = v11 >= 0 ? (const void *)(v5 + 32) : *(const void **)(v5 + 32);
      v13 = v11 >= 0 ? *(unsigned __int8 *)(v5 + 55) : *(_QWORD *)(v5 + 40);
      v14 = v9 >= v13 ? v13 : v9;
      v15 = memcmp(v12, v8, v14);
      if (v15)
        break;
      if (v13 >= v9)
        goto LABEL_24;
LABEL_10:
      v5 = *(_QWORD *)(v5 + 8);
      if (!v5)
        goto LABEL_25;
    }
    if (v15 < 0)
      goto LABEL_10;
LABEL_24:
    v10 = (uint64_t *)v5;
    v5 = *(_QWORD *)v5;
  }
  while (v5);
LABEL_25:
  if (v10 == &qword_254A6C9C0)
    goto LABEL_41;
  v16 = *((char *)v10 + 55);
  if (v16 >= 0)
    v17 = v10 + 4;
  else
    v17 = (const void *)v10[4];
  if (v16 >= 0)
    v18 = *((unsigned __int8 *)v10 + 55);
  else
    v18 = v10[5];
  if (v18 >= v9)
    v19 = v9;
  else
    v19 = v18;
  v20 = memcmp(v8, v17, v19);
  if (v20)
  {
    if ((v20 & 0x80000000) == 0)
      goto LABEL_37;
LABEL_41:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    sub_20E8B07EC(", expected [Algebra|Affine][F|D]", &v23, &v24);
    std::logic_error::logic_error(exception, &v24);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  if (v9 < v18)
    goto LABEL_41;
LABEL_37:
  *a2 = *((_BYTE *)v10 + 56);
  if (v6 < 0)
    operator delete(v7);
  return a1;
}

void sub_20FF3CC34(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A6C9B0);
  _Unwind_Resume(a1);
}

void sub_20FF3CC4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  void *v27;
  int v28;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v28 & 1) == 0)
    {
LABEL_8:
      if (a27 < 0)
        operator delete(a22);
      _Unwind_Resume(a1);
    }
  }
  else if (!v28)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v27);
  goto LABEL_8;
}

void sub_20FF3CCC4()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t v2;
  int v3;
  size_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  size_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  BOOL v19;
  int v20;
  const void *v21;
  size_t v22;
  const void *v23;
  size_t v24;
  size_t v25;
  int v26;
  uint64_t *v27;
  size_t v28;
  size_t v29;
  const void *v30;
  size_t v31;
  size_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  void *v40;
  _BYTE v41[15];
  unsigned __int8 v42;
  _BYTE v43[24];
  int v44;
  void *__dst[2];
  unint64_t v46;
  _QWORD v47[5];
  _QWORD *v48;
  _QWORD v49[4];

  v0 = 0;
  v49[2] = *MEMORY[0x24BDAC8D0];
  v39 = 84148737;
  qword_254A6C9C8 = 0;
  qword_254A6C9C0 = 0;
  qword_254A6C9B8 = (uint64_t)&qword_254A6C9C0;
  v38 = *MEMORY[0x24BEDB7F0];
  v35 = MEMORY[0x24BEDB848] + 16;
  v36 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v37 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  v1 = (uint64_t **)&unk_254A6C000;
  do
  {
    while (1)
    {
      v44 = 0;
      v2 = operator new();
      *(_QWORD *)(v2 + 272) = 0;
      *(_OWORD *)(v2 + 240) = 0u;
      *(_OWORD *)(v2 + 256) = 0u;
      *(_OWORD *)(v2 + 208) = 0u;
      *(_OWORD *)(v2 + 224) = 0u;
      *(_OWORD *)(v2 + 176) = 0u;
      *(_OWORD *)(v2 + 192) = 0u;
      *(_OWORD *)(v2 + 144) = 0u;
      *(_OWORD *)(v2 + 160) = 0u;
      *(_OWORD *)(v2 + 112) = 0u;
      *(_OWORD *)(v2 + 128) = 0u;
      *(_OWORD *)(v2 + 80) = 0u;
      *(_OWORD *)(v2 + 96) = 0u;
      *(_OWORD *)(v2 + 48) = 0u;
      *(_OWORD *)(v2 + 64) = 0u;
      *(_OWORD *)(v2 + 16) = 0u;
      *(_OWORD *)(v2 + 32) = 0u;
      *(_OWORD *)v2 = 0u;
      sub_20E863438(v2);
      sub_20E86A980((_QWORD *)(v2 + 16), (uint64_t)off_24CA0DB38[*((char *)&v39 + v0) - 1], qword_2103F12C0[(char)(*((_BYTE *)&v39 + v0) - 1)]);
      v3 = *(_DWORD *)(v2 + 120);
      if ((v3 & 0x10) != 0)
      {
        v6 = *(_QWORD *)(v2 + 112);
        v7 = *(_QWORD *)(v2 + 72);
        if (v6 < v7)
        {
          *(_QWORD *)(v2 + 112) = v7;
          v6 = v7;
        }
        v8 = *(const void **)(v2 + 64);
        v4 = v6 - (_QWORD)v8;
        if (v6 - (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_84:
          sub_20E860B7C();
      }
      else
      {
        if ((v3 & 8) == 0)
        {
          v4 = 0;
          HIBYTE(v46) = 0;
          v5 = __dst;
          goto LABEL_18;
        }
        v8 = *(const void **)(v2 + 40);
        v4 = *(_QWORD *)(v2 + 56) - (_QWORD)v8;
        if (v4 >= 0x7FFFFFFFFFFFFFF8)
          goto LABEL_84;
      }
      if (v4 >= 0x17)
      {
        v9 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v4 | 7) != 0x17)
          v9 = v4 | 7;
        v10 = v9 + 1;
        v5 = (void **)operator new(v9 + 1);
        __dst[1] = (void *)v4;
        v46 = v10 | 0x8000000000000000;
        __dst[0] = v5;
LABEL_17:
        memmove(v5, v8, v4);
        goto LABEL_18;
      }
      HIBYTE(v46) = v4;
      v5 = __dst;
      if (v4)
        goto LABEL_17;
LABEL_18:
      *((_BYTE *)v5 + v4) = 0;
      *(_QWORD *)v2 = v38;
      *(_QWORD *)(v2 + *(_QWORD *)(v38 - 24)) = v36;
      *(_QWORD *)(v2 + 24) = v35;
      *(_QWORD *)(v2 + 16) = v37;
      if (*(char *)(v2 + 111) < 0)
        operator delete(*(void **)(v2 + 88));
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x212BC6290](v2 + 128);
      MEMORY[0x212BC6398](v2, 0x10B2C40EED050F3);
      v47[0] = v43;
      v47[1] = __dst;
      v47[2] = v43;
      v47[3] = __dst;
      v47[4] = __dst;
      if (v44 == -1)
        sub_20E877AB8();
      v48 = v47;
      ((void (*)(_QWORD **, _BYTE *))off_24CA0DAF0[v44])(&v48, v43);
      if (SHIBYTE(v46) < 0)
        operator delete(__dst[0]);
      if (v44 == -1)
        sub_20E877AB8();
      v47[0] = __dst;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24CA0DB20[v44])(&v40, v47, v43);
      if (v44 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24CA0DB08[v44])(v47, v43);
      v11 = v40;
      v49[0] = *(_QWORD *)v41;
      *(_QWORD *)((char *)v49 + 7) = *(_QWORD *)&v41[7];
      v12 = v42;
      v13 = (char)v42;
      v14 = operator new(0x40uLL);
      v14[4] = v11;
      v14[5] = v49[0];
      *(_QWORD *)((char *)v14 + 47) = *(_QWORD *)((char *)v49 + 7);
      *((_BYTE *)v14 + 55) = v13;
      v49[0] = 0;
      *(_QWORD *)((char *)v49 + 7) = 0;
      *((_BYTE *)v14 + 56) = *((_BYTE *)&v39 + v0);
      v16 = &qword_254A6C9C0;
      v15 = qword_254A6C9C0;
      if (v1[311] == &qword_254A6C9C0)
        goto LABEL_72;
      v17 = qword_254A6C9C0;
      if (qword_254A6C9C0)
      {
        do
        {
          v16 = (uint64_t *)v17;
          v17 = *(_QWORD *)(v17 + 8);
        }
        while (v17);
      }
      else
      {
        v18 = &qword_254A6C9C0;
        do
        {
          v16 = (uint64_t *)v18[2];
          v19 = *v16 == (_QWORD)v18;
          v18 = v16;
        }
        while (v19);
      }
      v20 = *((char *)v16 + 55);
      if (v20 >= 0)
        v21 = v16 + 4;
      else
        v21 = (const void *)v16[4];
      if (v20 >= 0)
        v22 = *((unsigned __int8 *)v16 + 55);
      else
        v22 = v16[5];
      if (v13 >= 0)
        v23 = v14 + 4;
      else
        v23 = v11;
      if (v13 >= 0)
        v24 = v12;
      else
        v24 = v14[5];
      if (v24 >= v22)
        v25 = v22;
      else
        v25 = v24;
      v26 = memcmp(v21, v23, v25);
      if (!v26)
      {
        if (v22 < v24)
          goto LABEL_72;
LABEL_49:
        if (!v15)
        {
LABEL_78:
          v16 = &qword_254A6C9C0;
          v27 = &qword_254A6C9C0;
          goto LABEL_79;
        }
        while (1)
        {
          v16 = (uint64_t *)v15;
          v28 = *(unsigned __int8 *)(v15 + 55);
          v29 = *(_QWORD *)(v15 + 40);
          if ((v28 & 0x80u) == 0)
            v30 = (const void *)(v15 + 32);
          else
            v30 = *(const void **)(v15 + 32);
          if ((v28 & 0x80u) == 0)
            v31 = v28;
          else
            v31 = v29;
          if (v31 >= v24)
            v32 = v24;
          else
            v32 = v31;
          v33 = memcmp(v23, v30, v32);
          if (v33)
          {
            if (v33 < 0)
              goto LABEL_51;
          }
          else if (v24 < v31)
          {
LABEL_51:
            v15 = *v16;
            v27 = v16;
            if (!*v16)
              goto LABEL_79;
            continue;
          }
          v34 = memcmp(v30, v23, v32);
          if (v34)
          {
            if ((v34 & 0x80000000) == 0)
              goto LABEL_74;
          }
          else if (v31 >= v24)
          {
            goto LABEL_74;
          }
          v15 = v16[1];
          if (!v15)
          {
            v27 = v16 + 1;
            goto LABEL_79;
          }
        }
      }
      if ((v26 & 0x80000000) == 0)
        goto LABEL_49;
LABEL_72:
      if (!v15)
        goto LABEL_78;
      v27 = v16 + 1;
      if (v16[1])
        break;
LABEL_79:
      *v14 = 0;
      v14[1] = 0;
      v14[2] = v16;
      *v27 = (uint64_t)v14;
      v1 = (uint64_t **)&unk_254A6C000;
      if (*(_QWORD *)qword_254A6C9B8)
      {
        qword_254A6C9B8 = *(_QWORD *)qword_254A6C9B8;
        v14 = (_QWORD *)*v27;
      }
      sub_20E868578((uint64_t *)qword_254A6C9C0, v14);
      ++qword_254A6C9C8;
      if (++v0 == 4)
        return;
    }
LABEL_74:
    if (v13 < 0)
      operator delete(v11);
    operator delete(v14);
    v1 = (uint64_t **)&unk_254A6C000;
    ++v0;
  }
  while (v0 != 4);
}

void sub_20FF3D254(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,int a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF3D36C(uint64_t a1)
{
  sub_20FD04F28(*(char **)(a1 + 8));
  return a1;
}

void sub_20FF3D394(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_20FF3D860(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result;
  unsigned __int8 *v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  BOOL v16;
  unsigned __int8 *v17[2];
  unsigned __int8 *v18;
  unsigned __int8 *v19[2];
  unsigned __int8 *v20;
  char v21;

  v19[0] = a1 + 8;
  v19[1] = a1 + 120;
  v20 = a1 + 152;
  v17[0] = a2 + 8;
  v17[1] = a2 + 120;
  v18 = a2 + 152;
  result = sub_20FF3DC60((uint64_t)&v21, v19, v17);
  if ((_DWORD)result)
  {
    v3 = v20;
    if (v20[24])
      v4 = v18[24] == 0;
    else
      v4 = 1;
    if (v4)
    {
      return (v20[24] != 0) == (v18[24] != 0);
    }
    else
    {
      v5 = v20[23];
      if ((v5 & 0x80u) == 0)
        v6 = v20[23];
      else
        v6 = *((_QWORD *)v20 + 1);
      v7 = v18[23];
      v8 = (char)v7;
      if ((v7 & 0x80u) != 0)
        v7 = *((_QWORD *)v18 + 1);
      if (v6 == v7)
      {
        if (v8 >= 0)
          v9 = v18;
        else
          v9 = *(unsigned __int8 **)v18;
        if ((v5 & 0x80) != 0)
        {
          return memcmp(*(const void **)v20, v9, *((_QWORD *)v20 + 1)) == 0;
        }
        else if (v20[23])
        {
          v10 = v5 - 1;
          do
          {
            v12 = *v3++;
            v11 = v12;
            v14 = *v9++;
            v13 = v14;
            v16 = v10-- != 0;
            result = v11 == v13;
          }
          while (v11 == v13 && v16);
        }
        else
        {
          return 1;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_20FF3D990(uint64_t a1, float *a2, float *a3)
{
  _BOOL8 result;
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;

  result = *a2 == *a3;
  if (*a2 == *a3)
  {
    v4 = a2[1];
    v5 = a3[1];
    result = v4 == v5;
    if (v4 == v5)
    {
      v6 = a2[2];
      v7 = a3[2];
      result = v6 == v7;
      if (v6 == v7)
        result = a2[3] == a3[3];
    }
  }
  if (result)
  {
    v8 = a2[4];
    v9 = a3[4];
    result = v8 == v9;
    if (v8 == v9)
    {
      v10 = a2[5];
      v11 = a3[5];
      result = v10 == v11;
      if (v10 == v11)
      {
        v12 = a2[6];
        v13 = a3[6];
        result = v12 == v13;
        if (v12 == v13)
          result = a2[7] == a3[7];
      }
    }
    if (result)
    {
      v14 = a2[8];
      v15 = a3[8];
      result = v14 == v15;
      if (v14 == v15)
      {
        v16 = a2[9];
        v17 = a3[9];
        result = v16 == v17;
        if (v16 == v17)
        {
          v18 = a2[10];
          v19 = a3[10];
          result = v18 == v19;
          if (v18 == v19)
            return a2[11] == a3[11];
        }
      }
    }
  }
  return result;
}

BOOL sub_20FF3DA80(uint64_t a1, double *a2, double *a3)
{
  _BOOL8 result;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  result = *a2 == *a3;
  if (*a2 == *a3)
  {
    v4 = a2[1];
    v5 = a3[1];
    result = v4 == v5;
    if (v4 == v5)
    {
      v6 = a2[2];
      v7 = a3[2];
      result = v6 == v7;
      if (v6 == v7)
        result = a2[3] == a3[3];
    }
  }
  if (result)
  {
    v8 = a2[4];
    v9 = a3[4];
    result = v8 == v9;
    if (v8 == v9)
    {
      v10 = a2[5];
      v11 = a3[5];
      result = v10 == v11;
      if (v10 == v11)
      {
        v12 = a2[6];
        v13 = a3[6];
        result = v12 == v13;
        if (v12 == v13)
          result = a2[7] == a3[7];
      }
    }
    if (result)
    {
      v14 = a2[8];
      v15 = a3[8];
      result = v14 == v15;
      if (v14 == v15)
      {
        v16 = a2[9];
        v17 = a3[9];
        result = v16 == v17;
        if (v16 == v17)
        {
          v18 = a2[10];
          v19 = a3[10];
          result = v18 == v19;
          if (v18 == v19)
            return a2[11] == a3[11];
        }
      }
    }
  }
  return result;
}

BOOL sub_20FF3DB70(uint64_t a1, float *a2, float *a3)
{
  _BOOL8 result;
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;

  result = *a2 == *a3;
  if (*a2 == *a3)
  {
    v4 = a2[1];
    v5 = a3[1];
    result = v4 == v5;
    if (v4 == v5)
      result = a2[2] == a3[2];
  }
  if (result)
  {
    v6 = a2[3];
    v7 = a3[3];
    result = v6 == v7;
    if (v6 == v7)
    {
      v8 = a2[4];
      v9 = a3[4];
      result = v8 == v9;
      if (v8 == v9)
        return a2[5] == a3[5];
    }
  }
  return result;
}

BOOL sub_20FF3DBE8(uint64_t a1, double *a2, double *a3)
{
  _BOOL8 result;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  result = *a2 == *a3;
  if (*a2 == *a3)
  {
    v4 = a2[1];
    v5 = a3[1];
    result = v4 == v5;
    if (v4 == v5)
      result = a2[2] == a3[2];
  }
  if (result)
  {
    v6 = a2[3];
    v7 = a3[3];
    result = v6 == v7;
    if (v6 == v7)
    {
      v8 = a2[4];
      v9 = a3[4];
      result = v8 == v9;
      if (v8 == v9)
        return a2[5] == a3[5];
    }
  }
  return result;
}

uint64_t sub_20FF3DC60(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  int v8;
  _BOOL4 v10;
  _BOOL4 v12;
  uint64_t result;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned __int8 *v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  BOOL v28;
  char v29;
  char *v30;

  v3 = (uint64_t)*a2;
  v4 = (uint64_t)*a3;
  if (**a2 != **a3)
    return 0;
  v7 = *(unsigned int *)(v3 + 104);
  v8 = *(_DWORD *)(v4 + 104);
  v10 = v8 == (_DWORD)v7 && v8 != -1;
  if ((_DWORD)v7 != -1 && v10)
  {
    v30 = &v29;
    if ((((uint64_t (*)(char **, uint64_t, uint64_t))off_24CA0DAD0[v7])(&v30, v3 + 8, v4 + 8) & 1) != 0)
      goto LABEL_19;
    return 0;
  }
  v12 = v8 == -1;
  if ((_DWORD)v7 != -1)
    v12 = v10;
  if (!v12)
    return 0;
LABEL_19:
  v14 = a2[1];
  v15 = a3[1];
  if (v14[24])
    v16 = v15[24] == 0;
  else
    v16 = 1;
  if (v16)
    return (v14[24] != 0) == (v15[24] != 0);
  v17 = v14[23];
  if ((v17 & 0x80u) == 0)
    v18 = v14[23];
  else
    v18 = *((_QWORD *)v14 + 1);
  v19 = v15[23];
  v20 = (char)v19;
  if ((v19 & 0x80u) != 0)
    v19 = *((_QWORD *)v15 + 1);
  if (v18 != v19)
    return 0;
  if (v20 >= 0)
    v21 = a3[1];
  else
    v21 = *(unsigned __int8 **)v15;
  if ((v17 & 0x80) != 0)
    return memcmp(*(const void **)v14, v21, *((_QWORD *)v14 + 1)) == 0;
  if (!v14[23])
    return 1;
  v22 = v17 - 1;
  do
  {
    v24 = *v14++;
    v23 = v24;
    v26 = *v21++;
    v25 = v26;
    v28 = v22-- != 0;
    result = v23 == v25;
  }
  while (v23 == v25 && v28);
  return result;
}

_QWORD *sub_20FF3DDFC(_QWORD *a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;

  sub_20FF3DED8(a2, a3, &v8);
  v4 = v8;
  *a1 = v8;
  if (v4)
  {
    v5 = (_QWORD *)operator new();
    v6 = v8;
    *v5 = &off_24CA0DC30;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = v6;
    a1[1] = v5;
  }
  else
  {
    a1[1] = 0;
  }
  return a1;
}

void sub_20FF3DE8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v11;

  if (a10)
  {
    if (*(_BYTE *)(a10 + 408))
    {
      if (*(char *)(a10 + 407) < 0)
        operator delete(*(void **)(a10 + 384));
    }
    v11 = sub_20F340728((uint64_t *)a10);
    MEMORY[0x212BC6398](v11, 0x10B2C40FBB7FC15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF3DED8@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  char v10;

  v6 = operator new();
  LOBYTE(v8) = 0;
  v10 = 0;
  if (*((_BYTE *)a2 + 24))
  {
    if (*((char *)a2 + 23) < 0)
    {
      sub_20E860C04(&v8, *(void **)a2, *((_QWORD *)a2 + 1));
    }
    else
    {
      v8 = *a2;
      v9 = *((_QWORD *)a2 + 2);
    }
    v10 = 1;
  }
  result = sub_20FF3EA68(v6, a1);
  *(_BYTE *)(v6 + 384) = 0;
  *(_BYTE *)(v6 + 408) = 0;
  if (v10)
  {
    *(_OWORD *)(v6 + 384) = v8;
    *(_QWORD *)(v6 + 400) = v9;
    *(_BYTE *)(v6 + 408) = 1;
  }
  *a3 = v6;
  return result;
}

void sub_20FF3DFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  uint64_t v15;

  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  MEMORY[0x212BC6398](v15, 0x10B2C40FBB7FC15);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF3DFE4(float ***a1, float ***a2)
{
  float **v2;
  float **v3;
  float *v4;
  float *v5;
  float *v6;
  float *v7;
  float *v8;
  float *v9;
  float *v10;
  float *v11;
  float *v12;
  float *v13;
  float *v14;
  char *v15;
  float *v16;
  float *v17;
  char *v18;
  float *v20;
  float *v21;
  float *v22;
  float *v23;
  float *v24;
  float **v25;
  float *v26;
  float **v27;
  float *v28;
  size_t v29;
  float *v30;
  float *v31;
  size_t v32;
  float *v33;
  float *v34;
  float *v35;
  float *v36;
  uint64_t result;
  uint64_t v38;
  float *v39;
  char v40;
  float *v41;
  const void **v42;
  float *v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  BOOL v50;
  float **v51;
  float **v52;

  v2 = *a1;
  v3 = *a2;
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = **a2;
  if ((char *)v4 - (char *)v5 != (char *)(*a2)[1] - (char *)v6)
    return 0;
  if (v5 != v4)
  {
    while (*v5 == *v6 && v5[1] == v6[1] && v5[2] == v6[2])
    {
      v5 += 3;
      v6 += 3;
      if (v5 == v4)
        goto LABEL_7;
    }
    return 0;
  }
LABEL_7:
  v8 = v2[4];
  v7 = v2[5];
  v9 = v3[4];
  if ((char *)v7 - (char *)v8 != (char *)v3[5] - (char *)v9)
    return 0;
  if (v8 != v7)
  {
    while (*v8 == *v9 && v8[1] == v9[1] && v8[2] == v9[2])
    {
      v8 += 3;
      v9 += 3;
      if (v8 == v7)
        goto LABEL_13;
    }
    return 0;
  }
LABEL_13:
  if (*((_DWORD *)v2 + 16) != *((_DWORD *)v3 + 16))
    return 0;
  v11 = v2[9];
  v10 = v2[10];
  v12 = v3[9];
  if ((char *)v10 - (char *)v11 != (char *)v3[10] - (char *)v12)
    return 0;
  if (v11 != v10)
  {
    while (*v11 == *v12 && v11[1] == v12[1] && v11[2] == v12[2])
    {
      v11 += 3;
      v12 += 3;
      if (v11 == v10)
        goto LABEL_20;
    }
    return 0;
  }
LABEL_20:
  if (*((_DWORD *)v2 + 26) != *((_DWORD *)v3 + 26))
    return 0;
  v14 = v2[14];
  v13 = v2[15];
  v15 = (char *)v3[14];
  if ((char *)v13 - (char *)v14 != (char *)v3[15] - v15)
    return 0;
  if (v14 != v13)
  {
    while (*(_DWORD *)v14 == *(_DWORD *)v15
         && *((_DWORD *)v14 + 1) == *((_DWORD *)v15 + 1)
         && *((_DWORD *)v14 + 2) == *((_DWORD *)v15 + 2))
    {
      v14 += 3;
      v15 += 12;
      if (v14 == v13)
        goto LABEL_27;
    }
    return 0;
  }
LABEL_27:
  v17 = v2[18];
  v16 = v2[19];
  v18 = (char *)v3[18];
  if ((char *)v16 - (char *)v17 != (char *)v3[19] - v18)
    return 0;
  if (v17 != v16)
  {
    while (*(_DWORD *)v17 == *(_DWORD *)v18 && *((_DWORD *)v17 + 1) == *((_DWORD *)v18 + 1))
    {
      v17 += 2;
      v18 += 8;
      if (v17 == v16)
        goto LABEL_35;
    }
    return 0;
  }
LABEL_35:
  v21 = v2[22];
  v20 = v2[23];
  v22 = v3[22];
  if ((char *)v20 - (char *)v21 != (char *)v3[23] - (char *)v22)
    return 0;
  if (v21 != v20)
  {
    while (*v21 == *v22 && v21[1] == v22[1])
    {
      v21 += 2;
      v22 += 2;
      if (v21 == v20)
        goto LABEL_40;
    }
    return 0;
  }
LABEL_40:
  v51 = *a2;
  v52 = *a1;
  v25 = v2 + 26;
  v23 = v2[26];
  v24 = v25[1];
  v27 = v3 + 26;
  v26 = v3[26];
  if ((char *)v24 - (char *)v23 != (char *)v27[1] - (char *)v26)
    return 0;
  if (v23 != v24)
  {
    while (*(_DWORD *)v23 == *(_DWORD *)v26
         && *((_DWORD *)v23 + 1) == *((_DWORD *)v26 + 1)
         && *((_DWORD *)v23 + 2) == *((_DWORD *)v26 + 2))
    {
      v23 += 3;
      v26 += 3;
      if (v23 == v24)
        goto LABEL_46;
    }
    return 0;
  }
LABEL_46:
  v28 = v52[30];
  v29 = (char *)v52[31] - (char *)v28;
  v30 = v51[30];
  if (v29 != (char *)v51[31] - (char *)v30)
    return 0;
  if (memcmp(v28, v30, v29))
    return 0;
  if (*((_DWORD *)v52 + 68) != *((_DWORD *)v51 + 68))
    return 0;
  v31 = v52[35];
  v32 = (char *)v52[36] - (char *)v31;
  v33 = v51[35];
  if (v32 != (char *)v51[36] - (char *)v33)
    return 0;
  if (memcmp(v31, v33, v32))
    return 0;
  if (*((_DWORD *)v52 + 78) != *((_DWORD *)v51 + 78))
    return 0;
  v35 = v52[40];
  v34 = v52[41];
  v36 = v51[40];
  if ((char *)v34 - (char *)v35 != (char *)v51[41] - (char *)v36)
    return 0;
  if (v35 != v34)
  {
    while (*v35 == *v36)
    {
      ++v35;
      ++v36;
      if (v35 == v34)
        goto LABEL_56;
    }
    return 0;
  }
LABEL_56:
  if (*((_DWORD *)v52 + 88) != *((_DWORD *)v51 + 88))
    return 0;
  if (*((_BYTE *)v52 + 380) && *((_BYTE *)v51 + 380))
  {
    if (*((float *)v52 + 89) != *((float *)v51 + 89)
      || *((float *)v52 + 90) != *((float *)v51 + 90)
      || *((float *)v52 + 91) != *((float *)v51 + 91)
      || *((float *)v52 + 92) != *((float *)v51 + 92)
      || *((float *)v52 + 93) != *((float *)v51 + 93)
      || *((float *)v52 + 94) != *((float *)v51 + 94))
    {
      return 0;
    }
    goto LABEL_69;
  }
  if ((*((_BYTE *)v52 + 380) != 0) != (*((_BYTE *)v51 + 380) != 0))
    return 0;
LABEL_69:
  result = (*((_BYTE *)v52 + 408) != 0) == (*((_BYTE *)v51 + 408) != 0);
  if (*((_BYTE *)v52 + 408) && *((_BYTE *)v51 + 408))
  {
    v38 = *((unsigned __int8 *)v52 + 407);
    if ((v38 & 0x80u) == 0)
      v39 = (float *)*((unsigned __int8 *)v52 + 407);
    else
      v39 = v52[49];
    v40 = *((_BYTE *)v51 + 407);
    v41 = v51[49];
    if (v40 >= 0)
      v41 = (float *)*((unsigned __int8 *)v51 + 407);
    if (v39 != v41)
      return 0;
    v42 = (const void **)(v52 + 48);
    if (v40 >= 0)
      v43 = (float *)(v51 + 48);
    else
      v43 = v51[48];
    if ((v38 & 0x80) != 0)
    {
      return memcmp(*v42, v43, (size_t)v52[49]) == 0;
    }
    else if (*((_BYTE *)v52 + 407))
    {
      v44 = v38 - 1;
      do
      {
        v46 = *(unsigned __int8 *)v42;
        v42 = (const void **)((char *)v42 + 1);
        v45 = v46;
        v48 = *(unsigned __int8 *)v43;
        v43 = (float *)((char *)v43 + 1);
        v47 = v48;
        v50 = v44-- != 0;
        result = v45 == v47;
      }
      while (v45 == v47 && v50);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

_QWORD *sub_20FF3E524(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  void **v9;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  const char *v26;
  uint64_t v27;
  _QWORD *v28;
  void *__p[2];
  unsigned __int8 v31;
  _BYTE v32[24];
  int v33;
  void *__dst[2];
  unint64_t v35;
  _QWORD v36[5];
  _QWORD *v37;

  v4 = sub_20E86A980(a1, (uint64_t)"{", 1);
  v5 = *a2;
  v33 = 0;
  v6 = operator new();
  *(_QWORD *)(v6 + 272) = 0;
  *(_OWORD *)(v6 + 240) = 0u;
  *(_OWORD *)(v6 + 256) = 0u;
  *(_OWORD *)(v6 + 208) = 0u;
  *(_OWORD *)(v6 + 224) = 0u;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)v6 = 0u;
  sub_20E863438(v6);
  v36[0] = v6;
  sub_20FF41DB8((_QWORD *)(v6 + 16), v5);
  v7 = *(_DWORD *)(v6 + 120);
  if ((v7 & 0x10) != 0)
  {
    v10 = *(_QWORD *)(v6 + 112);
    v11 = *(_QWORD *)(v6 + 72);
    if (v10 < v11)
    {
      *(_QWORD *)(v6 + 112) = v11;
      v10 = v11;
    }
    v12 = *(const void **)(v6 + 64);
    v8 = v10 - (_QWORD)v12;
    if (v10 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_42;
  }
  else
  {
    if ((v7 & 8) == 0)
    {
      v8 = 0;
      HIBYTE(v35) = 0;
      v9 = __dst;
      goto LABEL_14;
    }
    v12 = *(const void **)(v6 + 40);
    v8 = *(_QWORD *)(v6 + 56) - (_QWORD)v12;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_42:
      sub_20E860B7C();
  }
  if (v8 >= 0x17)
  {
    v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v13 = v8 | 7;
    v14 = v13 + 1;
    v9 = (void **)operator new(v13 + 1);
    __dst[1] = (void *)v8;
    v35 = v14 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_13;
  }
  HIBYTE(v35) = v8;
  v9 = __dst;
  if (v8)
LABEL_13:
    memmove(v9, v12, v8);
LABEL_14:
  *((_BYTE *)v9 + v8) = 0;
  v15 = v36[0];
  if (v36[0])
  {
    v16 = MEMORY[0x24BEDB7F0];
    v17 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v36[0] = *MEMORY[0x24BEDB7F0];
    v18 = *(_QWORD *)(v16 + 72);
    *(_QWORD *)(v15 + *(_QWORD *)(v17 - 24)) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v15 + 16) = v18;
    if (*(char *)(v15 + 111) < 0)
      operator delete(*(void **)(v15 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x212BC6290](v15 + 128);
    MEMORY[0x212BC6398](v15, 0x10B2C40EED050F3);
  }
  v36[0] = v32;
  v36[1] = __dst;
  v36[2] = v32;
  v36[3] = __dst;
  v36[4] = __dst;
  if (v33 == -1)
    sub_20E877AB8();
  v37 = v36;
  ((void (*)(_QWORD **, _BYTE *))off_24CA0DC70[v33])(&v37, v32);
  if (SHIBYTE(v35) < 0)
    operator delete(__dst[0]);
  if (v33 == -1)
    sub_20E877AB8();
  v36[0] = __dst;
  ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24CA0DCA0[v33])(__p, v36, v32);
  if (v33 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_24CA0DC88[v33])(v36, v32);
  if ((v31 & 0x80u) == 0)
    v19 = __p;
  else
    v19 = (void **)__p[0];
  if ((v31 & 0x80u) == 0)
    v20 = v31;
  else
    v20 = (uint64_t)__p[1];
  sub_20E86A980(v4, (uint64_t)v19, v20);
  if ((char)v31 < 0)
    operator delete(__p[0]);
  if (*(_BYTE *)(*a2 + 408))
  {
    sub_20E86A980(a1, (uint64_t)",\n", 2);
    sub_20E86A980(a1, (uint64_t)"tex0='", 6);
    v21 = *a2;
    if (*(_BYTE *)(*a2 + 408))
    {
      v22 = (const char *)(v21 + 384);
      v23 = *(unsigned __int8 *)(v21 + 407);
      v25 = *(const char **)(v21 + 384);
      v24 = *(_QWORD *)(v21 + 392);
      if ((v23 & 0x80u) == 0)
        v26 = v22;
      else
        v26 = v25;
      if ((v23 & 0x80u) == 0)
        v27 = v23;
      else
        v27 = v24;
      v28 = a1;
    }
    else
    {
      v26 = "nullopt";
      v28 = a1;
      v27 = 7;
    }
    sub_20E86A980(v28, (uint64_t)v26, v27);
    sub_20E86A980(a1, (uint64_t)"'", 1);
  }
  return sub_20E86A980(a1, (uint64_t)"}", 1);
}

void sub_20FF3E8B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF3E8D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v4;
  va_list va;

  va_start(va, a4);
  MEMORY[0x212BC6398](v4, 0x10B2C40EED050F3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF3E900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF3E914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF3E928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a21 < 0)
  {
    operator delete(__p);
    sub_20E877A60((uint64_t)&a12);
    _Unwind_Resume(a1);
  }
  sub_20E877A60((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF3E968(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t *v8;

  v2 = *a1;
  if (*a1)
  {
    a1[1] = v2;
    v3 = (unint64_t)(a1[2] - v2) >> 3;
    v6 = v2;
    v7 = v3;
    v4 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v4 == -1)
      sub_20E877AB8();
    v8 = &v6;
    ((void (*)(uint64_t **, uint64_t *))off_24CA0DB70[v4])(&v8, a1 + 3);
  }
  return a1;
}

uint64_t *sub_20FF3E9E8(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t *v8;

  v2 = *a1;
  if (*a1)
  {
    a1[1] = v2;
    v3 = (unint64_t)(a1[2] - v2) >> 3;
    v6 = v2;
    v7 = v3;
    v4 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v4 == -1)
      sub_20E877AB8();
    v8 = &v6;
    ((void (*)(uint64_t **, uint64_t *))off_24CA0DB80[v4])(&v8, a1 + 3);
  }
  return a1;
}

uint64_t sub_20FF3EA68(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  _OWORD *v16;
  __int128 *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  _OWORD *v32;
  __int128 *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v40;
  int *v41;
  _QWORD v42[2];
  char v43;

  v4 = sub_20FF3EF5C((uint64_t *)a1, (uint64_t **)a2) + 4;
  sub_20FF3EF5C(v4, (uint64_t **)(a2 + 32));
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  sub_20FF3EF5C((uint64_t *)(a1 + 72), (uint64_t **)(a2 + 72));
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  sub_20FF3F10C((uint64_t *)(a1 + 112), (uint64_t **)(a2 + 112));
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  v5 = *(unsigned int *)(a2 + 172);
  if ((_DWORD)v5 == -1)
    sub_20E877AB8();
  v42[0] = &v43;
  v6 = ((uint64_t (*)(_QWORD *, uint64_t))off_24CA0DBE0[v5])(v42, a2 + 168);
  *(_QWORD *)(a1 + 168) = v6;
  *(_QWORD *)(a1 + 160) = 0;
  v8 = *(char **)(a2 + 144);
  v7 = *(char **)(a2 + 152);
  v9 = v7 - v8;
  if (v7 != v8)
  {
    if ((v9 & 0x8000000000000000) != 0)
      sub_20E867F44();
    v40 = v9 >> 3;
    if (HIDWORD(v6) == 0xFFFFFFFF)
      sub_20E877AB8();
    v41 = &v40;
    v10 = ((uint64_t (*)(int **, uint64_t))off_24CA0DBF0[HIDWORD(v6)])(&v41, a1 + 168);
    *(_QWORD *)(a1 + 144) = v10;
    *(_QWORD *)(a1 + 152) = v10;
    *(_QWORD *)(a1 + 160) = v10 + 8 * v11;
    if (v9 - 8 < 0x18)
      goto LABEL_10;
    if ((unint64_t)(v10 - (_QWORD)v8) < 0x20)
      goto LABEL_10;
    v12 = ((v9 - 8) >> 3) + 1;
    v13 = 8 * (v12 & 0x3FFFFFFFFFFFFFFCLL);
    v14 = &v8[v13];
    v15 = (_QWORD *)(v10 + v13);
    v16 = (_OWORD *)(v10 + 16);
    v17 = (__int128 *)(v8 + 16);
    v18 = v12 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v19 = *v17;
      *(v16 - 1) = *(v17 - 1);
      *v16 = v19;
      v16 += 2;
      v17 += 2;
      v18 -= 4;
    }
    while (v18);
    v8 = v14;
    v10 = (uint64_t)v15;
    if (v12 != (v12 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_10:
      v15 = (_QWORD *)v10;
      do
      {
        v20 = *(_QWORD *)v8;
        v8 += 8;
        *v15++ = v20;
      }
      while (v8 != v7);
    }
    *(_QWORD *)(a1 + 152) = v15;
  }
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  v21 = *(unsigned int *)(a2 + 204);
  if ((_DWORD)v21 == -1)
    sub_20E877AB8();
  v42[0] = &v43;
  v22 = ((uint64_t (*)(_QWORD *, uint64_t))off_24CA0DC00[v21])(v42, a2 + 200);
  *(_QWORD *)(a1 + 200) = v22;
  *(_QWORD *)(a1 + 192) = 0;
  v24 = *(char **)(a2 + 176);
  v23 = *(char **)(a2 + 184);
  v25 = v23 - v24;
  if (v23 != v24)
  {
    if ((v25 & 0x8000000000000000) != 0)
      sub_20E867F44();
    v40 = v25 >> 3;
    if (HIDWORD(v22) == 0xFFFFFFFF)
      sub_20E877AB8();
    v41 = &v40;
    v26 = ((uint64_t (*)(int **, uint64_t))off_24CA0DC10[HIDWORD(v22)])(&v41, a1 + 200);
    *(_QWORD *)(a1 + 176) = v26;
    *(_QWORD *)(a1 + 184) = v26;
    *(_QWORD *)(a1 + 192) = v26 + 8 * v27;
    if (v25 - 8 < 0x18)
      goto LABEL_22;
    if ((unint64_t)(v26 - (_QWORD)v24) < 0x20)
      goto LABEL_22;
    v28 = ((v25 - 8) >> 3) + 1;
    v29 = 8 * (v28 & 0x3FFFFFFFFFFFFFFCLL);
    v30 = &v24[v29];
    v31 = (_QWORD *)(v26 + v29);
    v32 = (_OWORD *)(v26 + 16);
    v33 = (__int128 *)(v24 + 16);
    v34 = v28 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v35 = *v33;
      *(v32 - 1) = *(v33 - 1);
      *v32 = v35;
      v32 += 2;
      v33 += 2;
      v34 -= 4;
    }
    while (v34);
    v24 = v30;
    v26 = (uint64_t)v31;
    if (v28 != (v28 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_22:
      v31 = (_QWORD *)v26;
      do
      {
        v36 = *(_QWORD *)v24;
        v24 += 8;
        *v31++ = v36;
      }
      while (v24 != v23);
    }
    *(_QWORD *)(a1 + 184) = v31;
  }
  sub_20FF3F10C((uint64_t *)(a1 + 208), (uint64_t **)(a2 + 208));
  sub_20FDFA7F4((_QWORD *)(a1 + 240), a2 + 240);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  sub_20FDFA7F4((_QWORD *)(a1 + 280), a2 + 280);
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  sub_20FDFB0B0((_QWORD *)(a1 + 320), a2 + 320);
  *(_DWORD *)(a1 + 352) = *(_DWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 356) = 0;
  *(_BYTE *)(a1 + 380) = 0;
  if (*(_BYTE *)(a2 + 380))
  {
    v37 = *(_QWORD *)(a2 + 356);
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
    *(_QWORD *)(a1 + 356) = v37;
    v38 = *(_QWORD *)(a2 + 368);
    *(_DWORD *)(a1 + 376) = *(_DWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 368) = v38;
    *(_BYTE *)(a1 + 380) = 1;
  }
  return a1;
}

void sub_20FF3EDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;

  sub_20FDE1E38(v16);
  sub_20FDE1E38(v15);
  sub_20E96B500(v14);
  sub_20FF3E968(v13);
  sub_20FF3E9E8(v12);
  sub_20E96B500(v11);
  sub_20E96B58C(v10);
  sub_20E96B58C(a9);
  sub_20E96B58C(v9);
  _Unwind_Resume(a1);
}

void sub_20FF3EE28()
{
  JUMPOUT(0x20FF3EF3CLL);
}

void sub_20FF3EE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t *v9;

  sub_20E96B58C(a9);
  sub_20E96B58C(v9);
  _Unwind_Resume(a1);
}

void sub_20FF3EE4C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_20E96B58C(v1);
  _Unwind_Resume(a1);
}

void sub_20FF3EE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v18 = *v16;
  if (*v16)
  {
    *(_QWORD *)(v14 + 184) = v18;
    v19 = (unint64_t)(*(_QWORD *)(v14 + 192) - v18) >> 3;
    a12 = v18;
    a13 = v19;
    v20 = *(unsigned int *)(v14 + 204);
    if ((_DWORD)v20 == -1)
      sub_20E877AB8();
    a14 = &a12;
    ((void (*)(uint64_t **, uint64_t))off_24CA0DB70[v20])(&a14, v17);
  }
  sub_20FF3E9E8(v15);
  JUMPOUT(0x20FF3EF34);
}

void sub_20FF3EEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v20 = *v17;
  if (*v17)
  {
    *(_QWORD *)(v14 + 152) = v20;
    v21 = (unint64_t)(*(_QWORD *)(v14 + 160) - v20) >> 3;
    a12 = v20;
    a13 = v21;
    v22 = *(unsigned int *)(v14 + 172);
    if ((_DWORD)v22 == -1)
      sub_20E877AB8();
    a14 = &a12;
    ((void (*)(uint64_t **, uint64_t))off_24CA0DB80[v22])(&a14, v18);
  }
  sub_20E96B500(v16);
  sub_20E96B58C(v15);
  sub_20E96B58C(a9);
  sub_20E96B58C((uint64_t *)v14);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF3EF5C(uint64_t *a1, uint64_t **a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  int *v15;
  char *v16;
  char v17;

  *a1 = 0;
  a1[1] = 0;
  v2 = *((unsigned int *)a2 + 7);
  if ((_DWORD)v2 == -1)
    sub_20E877AB8();
  v16 = &v17;
  v5 = ((uint64_t (*)(char **, uint64_t **))off_24CA0DBA0[v2])(&v16, a2 + 3);
  a1[3] = v5;
  a1[2] = 0;
  v7 = *a2;
  v6 = a2[1];
  if (v6 != v7)
  {
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v6 - (char *)v7) >> 2) >= 0x1555555555555556)
      sub_20E969238();
    v14 = -1431655765 * (((char *)v6 - (char *)v7) >> 2);
    if (HIDWORD(v5) == 0xFFFFFFFF)
      sub_20E877AB8();
    v15 = &v14;
    v8 = ((uint64_t (*)(int **, uint64_t *))off_24CA0DBB0[HIDWORD(v5)])(&v15, a1 + 3);
    v9 = 0;
    *a1 = v8;
    a1[1] = v8;
    a1[2] = v8 + 12 * v10;
    v11 = v8;
    do
    {
      v12 = *v7;
      *(_DWORD *)(v11 + 8) = *((_DWORD *)v7 + 2);
      *(_QWORD *)v11 = v12;
      v11 += 12;
      v7 = (uint64_t *)((char *)v7 + 12);
      v9 += 12;
    }
    while (v7 != v6);
    a1[1] = v8 + v9;
  }
  return a1;
}

void sub_20FF3F088(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v17 = *(_QWORD *)v14;
  if (*(_QWORD *)v14)
  {
    *(_QWORD *)(v14 + 8) = v17;
    v18 = -1431655765 * ((unint64_t)(*(_QWORD *)(v14 + 16) - v17) >> 2);
    a12 = v17;
    a13 = v18;
    v19 = *(unsigned int *)(v14 + 28);
    if ((_DWORD)v19 == -1)
      sub_20E877AB8();
    a14 = &a12;
    ((void (*)(uint64_t **, uint64_t))off_24CA0DB90[v19])(&a14, v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF3F0FC()
{
  return 0;
}

uint64_t sub_20FF3F104()
{
  return 0x100000000;
}

uint64_t *sub_20FF3F10C(uint64_t *a1, uint64_t **a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  int *v15;
  char *v16;
  char v17;

  *a1 = 0;
  a1[1] = 0;
  v2 = *((unsigned int *)a2 + 7);
  if ((_DWORD)v2 == -1)
    sub_20E877AB8();
  v16 = &v17;
  v5 = ((uint64_t (*)(char **, uint64_t **))off_24CA0DBC0[v2])(&v16, a2 + 3);
  a1[3] = v5;
  a1[2] = 0;
  v7 = *a2;
  v6 = a2[1];
  if (v6 != v7)
  {
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v6 - (char *)v7) >> 2) >= 0x1555555555555556)
      sub_20E969238();
    v14 = -1431655765 * (((char *)v6 - (char *)v7) >> 2);
    if (HIDWORD(v5) == 0xFFFFFFFF)
      sub_20E877AB8();
    v15 = &v14;
    v8 = ((uint64_t (*)(int **, uint64_t *))off_24CA0DBD0[HIDWORD(v5)])(&v15, a1 + 3);
    v9 = 0;
    *a1 = v8;
    a1[1] = v8;
    a1[2] = v8 + 12 * v10;
    v11 = v8;
    do
    {
      v12 = *v7;
      *(_DWORD *)(v11 + 8) = *((_DWORD *)v7 + 2);
      *(_QWORD *)v11 = v12;
      v11 += 12;
      v7 = (uint64_t *)((char *)v7 + 12);
      v9 += 12;
    }
    while (v7 != v6);
    a1[1] = v8 + v9;
  }
  return a1;
}

void sub_20FF3F238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v17 = *(_QWORD *)v14;
  if (*(_QWORD *)v14)
  {
    *(_QWORD *)(v14 + 8) = v17;
    v18 = -1431655765 * ((unint64_t)(*(_QWORD *)(v14 + 16) - v17) >> 2);
    a12 = v17;
    a13 = v18;
    v19 = *(unsigned int *)(v14 + 28);
    if ((_DWORD)v19 == -1)
      sub_20E877AB8();
    a14 = &a12;
    ((void (*)(uint64_t **, uint64_t))off_24CA0DB60[v19])(&a14, v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF3F2AC()
{
  return 0;
}

uint64_t sub_20FF3F2B4()
{
  return 0x100000000;
}

void *sub_20FF3F2BC(unsigned int **a1)
{
  return operator new(12 * **a1);
}

vm_address_t sub_20FF3F2EC(unsigned int **a1)
{
  uint64_t v1;
  std::bad_alloc *exception;
  std::bad_alloc *v4;
  vm_address_t address;

  v1 = (((12 * **a1 + 4095) & 0x1FFFFFF000) * (unsigned __int128)0x1555555555555556uLL) >> 64;
  address = 0;
  if (vm_allocate(*MEMORY[0x24BDAEC58], &address, 12 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x24BEDB758], MEMORY[0x24BEDB670]);
  }
  return address;
}

uint64_t sub_20FF3F384()
{
  return 0;
}

uint64_t sub_20FF3F38C()
{
  return 0x100000000;
}

void *sub_20FF3F394(unsigned int **a1)
{
  return operator new(8 * **a1);
}

vm_address_t sub_20FF3F3C0(unsigned int **a1)
{
  uint64_t v1;
  std::bad_alloc *exception;
  std::bad_alloc *v4;
  vm_address_t address;

  v1 = (**a1 + 511) & 0x1FFFFFE00;
  address = 0;
  if (vm_allocate(*MEMORY[0x24BDAEC58], &address, 8 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x24BEDB758], MEMORY[0x24BEDB670]);
  }
  return address;
}

uint64_t sub_20FF3F43C()
{
  return 0;
}

uint64_t sub_20FF3F444()
{
  return 0x100000000;
}

void *sub_20FF3F44C(unsigned int **a1)
{
  return operator new(8 * **a1);
}

vm_address_t sub_20FF3F478(unsigned int **a1)
{
  uint64_t v1;
  std::bad_alloc *exception;
  std::bad_alloc *v4;
  vm_address_t address;

  v1 = (**a1 + 511) & 0x1FFFFFE00;
  address = 0;
  if (vm_allocate(*MEMORY[0x24BDAEC58], &address, 8 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x24BEDB758], MEMORY[0x24BEDB670]);
  }
  return address;
}

void sub_20FF3F4F8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF3F51C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    if (*(_BYTE *)(v1 + 408) && *(char *)(v1 + 407) < 0)
      operator delete(*(void **)(v1 + 384));
    sub_20F340728((uint64_t *)v1);
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF3F578(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3viz7TriMesh7PrivateEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3viz7TriMesh7PrivateEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3viz7TriMesh7PrivateEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3viz7TriMesh7PrivateEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_20FF3F5E8()
{
  unsigned __int8 v0;
  void *__p;
  char v3;
  char v4;

  v0 = atomic_load((unsigned __int8 *)&qword_254A6DC58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A6DC58))
    return &qword_254A6DC38;
  LOBYTE(__p) = 0;
  v4 = 0;
  sub_20FF3FDD0(&qword_254A6DC38, (uint64_t)&__p);
  if (v4)
  {
    if (v3 < 0)
      operator delete(__p);
  }
  __cxa_atexit((void (*)(void *))sub_20FF403B8, &qword_254A6DC38, &dword_20E81F000);
  __cxa_guard_release(&qword_254A6DC58);
  return &qword_254A6DC38;
}

void sub_20FF3F6A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  __cxa_guard_abort(&qword_254A6DC58);
  _Unwind_Resume(a1);
}

BOOL sub_20FF3F6D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BOOL8 v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v2 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    v6 = *(_QWORD *)(a1 + 64);
    v14 = v2;
    v15 = v3;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 64);
    v14 = *a2;
    v15 = 0;
  }
  v8 = sub_20FEFF840(v6, &v14);
  if (v3)
  {
    v9 = (unint64_t *)&v3->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v3)
    return v8;
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
    return v8;
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return v8;
}

void sub_20FF3F7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_20E86665C((uint64_t)&a11);
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF3F7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 64);
  std::mutex::lock((std::mutex *)(v3 + 32));
  v4 = sub_20FEFF410(v3, a2);
  std::mutex::unlock((std::mutex *)(v3 + 32));
  return v4;
}

void sub_20FF3F830(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF3F844(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_20FF3F84C(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_20FF3F854@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(result + 40);
  *a2 = *(_QWORD *)(result + 32);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

uint64_t sub_20FF3F878@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(result + 40);
  *a2 = *(_QWORD *)(result + 32);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

std::__shared_weak_count *sub_20FF3F89C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *result;

  result = *(std::__shared_weak_count **)(a1 + 24);
  if (result && (result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(_QWORD *)(a1 + 16);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

std::__shared_weak_count *sub_20FF3F8E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *result;

  result = *(std::__shared_weak_count **)(a1 + 24);
  if (result && (result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(_QWORD *)(a1 + 16);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_20FF3F934(uint64_t a1)
{
  return a1 + 80;
}

uint64_t sub_20FF3F93C(uint64_t a1)
{
  return a1 + 72;
}

void sub_20FF3F944(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
  {
    sub_20FF20A40(v4, a2);
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    sub_20FF20A40(*(_QWORD *)(v3 + 8), a2);
  }
}

void sub_20FF3F9BC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
  {
    sub_20FF20A40(v4, a2);
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    sub_20FF20A40(*(_QWORD *)(v3 + 8), a2);
  }
}

uint64_t sub_20FF3FA34(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
    return sub_20FF205CC(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return sub_20FF205CC(*(_QWORD *)(v3 + 8), a2);
}

uint64_t sub_20FF3FAAC(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
    return sub_20FF205CC(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return sub_20FF205CC(*(_QWORD *)(v3 + 8), a2);
}

uint64_t sub_20FF3FB24(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD **)(v3 + 8);
  if (v4)
    return sub_20FF2091C(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return sub_20FF2091C(*(_QWORD **)(v3 + 8), a2);
}

uint64_t sub_20FF3FB9C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD **)(v3 + 8);
  if (v4)
    return sub_20FF2091C(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return sub_20FF2091C(*(_QWORD **)(v3 + 8), a2);
}

uint64_t **sub_20FF3FC14(uint64_t a1, char *a2, size_t a3)
{
  return sub_20FF217CC(*(_QWORD *)(a1 + 32), a2, a3);
}

uint64_t **sub_20FF3FC1C(uint64_t a1, char *a2, size_t a3)
{
  return sub_20FF217CC(*(_QWORD *)(a1 + 24), a2, a3);
}

unint64_t sub_20FF3FC24(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(v5 + 8);
  if (v6)
    return sub_20FF1FB28(v6, a2, a3);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return sub_20FF1FB28(*(_QWORD *)(v5 + 8), a2, a3);
}

unint64_t sub_20FF3FCB4(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(v5 + 8);
  if (v6)
    return sub_20FF1FB28(v6, a2, a3);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return sub_20FF1FB28(*(_QWORD *)(v5 + 8), a2, a3);
}

uint64_t sub_20FF3FD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::mutex *v5;
  _QWORD *v6;
  _QWORD *i;

  v4 = *(_QWORD *)(a1 + 64);
  v5 = (std::mutex *)(v4 + 32);
  std::mutex::lock((std::mutex *)(v4 + 32));
  v6 = *(_QWORD **)(v4 + 96);
  for (i = *(_QWORD **)(v4 + 104); v6 != i; v6 += 2)
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v6 + 16))(*v6, a2);
  std::mutex::unlock(v5);
  return a1;
}

void sub_20FF3FDBC(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF3FDD0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  char v4;
  char *v5;
  char *v6;
  void *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *v12;
  char *v13;
  uint64_t v14;
  void *__p;
  _BYTE v16[15];
  char v17;
  char v18;
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v12 = 0;
  v13 = 0;
  v14 = 0;
  if (*(_BYTE *)(a2 + 24))
  {
    *(_QWORD *)((char *)v19 + 7) = *(_QWORD *)(a2 + 15);
    v3 = *(void **)a2;
    v19[0] = *(_QWORD *)(a2 + 8);
    v4 = *(_BYTE *)(a2 + 23);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    *a1 = &off_24CA0DCC8;
    a1[1] = &unk_24CA0DD78;
    __p = v3;
    *(_QWORD *)v16 = v19[0];
    *(_QWORD *)&v16[7] = *(_QWORD *)((char *)v19 + 7);
    v17 = v4;
    memset(v19, 0, 15);
    v18 = 1;
  }
  else
  {
    *a1 = &off_24CA0DCC8;
    a1[1] = &unk_24CA0DD78;
    LOBYTE(__p) = 0;
    v18 = 0;
  }
  sub_20FF3FF6C((uint64_t)&v12, (uint64_t)&__p, a1 + 2);
  if (v18 && v17 < 0)
    operator delete(__p);
  v5 = (char *)v12;
  if (v12)
  {
    v6 = v13;
    v7 = v12;
    if (v13 != v12)
    {
      do
      {
        v8 = (std::__shared_weak_count *)*((_QWORD *)v6 - 1);
        if (v8)
        {
          p_shared_owners = (unint64_t *)&v8->__shared_owners_;
          do
            v10 = __ldaxr(p_shared_owners);
          while (__stlxr(v10 - 1, p_shared_owners));
          if (!v10)
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
        }
        v6 -= 16;
      }
      while (v6 != v5);
      v7 = v12;
    }
    v13 = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_20FF3FF40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (a18)
  {
    if (a17 < 0)
      operator delete(__p);
  }
  sub_20E8C3144((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF3FF6C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v6;
  unsigned __int8 v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_weak_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  void *__p[2];
  uint64_t v33;
  std::__shared_weak_count *v34;
  void *v35;
  std::__shared_weak_count *v36;
  uint64_t v37;

  v6 = (char *)operator new(0x88uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = &off_24CA0DF38;
  *((_QWORD *)v6 + 3) = &off_24CA0DE08;
  __p[0] = 0;
  __p[1] = 0;
  v33 = 0;
  *((_QWORD *)v6 + 4) = &unk_24CA0DEB0;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *((_QWORD *)v6 + 9) = &off_24CA0B188;
  *((_QWORD *)v6 + 10) = &unk_24CA0B1C8;
  v35 = 0;
  v36 = 0;
  sub_20FEFF5B4((uint64_t **)__p, (uint64_t *)&v35, (_QWORD *)v6 + 11);
  if (v36)
    std::__shared_weak_count::__release_weak(v36);
  v6[104] = 0;
  v6[128] = 0;
  *a3 = v6 + 24;
  a3[1] = v6;
  if (*(_QWORD *)a1 == *(_QWORD *)(a1 + 8))
    v7 = 2;
  else
    v7 = 1;
  v8 = operator new(0x28uLL);
  v9 = v8;
  v8[1] = 0;
  v8[2] = 0;
  *v8 = &off_24CA07738;
  v10 = v8 + 3;
  v36 = 0;
  v37 = 0;
  v35 = 0;
  LOBYTE(__p[0]) = 0;
  LOBYTE(v34) = 0;
  if (*(_BYTE *)(a2 + 24))
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v33 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    LOBYTE(v34) = 1;
  }
  sub_20FF20DA0(v8 + 3, v7, (uint64_t)&v35, (uint64_t *)__p);
  if ((_BYTE)v34 && SHIBYTE(v33) < 0)
    operator delete(__p[0]);
  if (v35)
  {
    v36 = (std::__shared_weak_count *)v35;
    operator delete(v35);
  }
  v11 = (std::__shared_weak_count *)*((_QWORD *)v6 + 8);
  *((_QWORD *)v6 + 7) = v10;
  *((_QWORD *)v6 + 8) = v9;
  if (!v11)
    goto LABEL_17;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v14 = (_QWORD *)*a3;
    v15 = *(_QWORD *)(*a3 + 32);
    v16 = *(_QWORD *)(v15 + 8);
    if (v16)
      goto LABEL_21;
  }
  else
  {
LABEL_17:
    v14 = (_QWORD *)*a3;
    v15 = *(_QWORD *)(*a3 + 32);
    v16 = *(_QWORD *)(v15 + 8);
    if (v16)
      goto LABEL_21;
  }
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  v16 = *(_QWORD *)(v15 + 8);
LABEL_21:
  sub_20E869118((uint64_t)(v14 + 10), (_QWORD *)(v16 + 240));
  v17 = (std::__shared_weak_count *)a3[1];
  if (v17)
  {
    p_shared_weak_owners = (unint64_t *)&v17->__shared_weak_owners_;
    do
      v19 = __ldxr(p_shared_weak_owners);
    while (__stxr(v19 + 1, p_shared_weak_owners));
  }
  v20 = (std::__shared_weak_count *)v14[3];
  v14[2] = v14;
  v14[3] = v17;
  if (v20)
    std::__shared_weak_count::__release_weak(v20);
  if (v17)
  {
    v21 = (unint64_t *)&v17->__shared_weak_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    __p[0] = &off_24CA0B188;
    __p[1] = &unk_24CA0B1C8;
    v35 = v14;
    v36 = v17;
    do
      v23 = __ldxr(v21);
    while (__stxr(v23 + 1, v21));
  }
  else
  {
    __p[0] = &off_24CA0B188;
    __p[1] = &unk_24CA0B1C8;
    v35 = v14;
    v36 = 0;
  }
  sub_20FEFF5B4((uint64_t **)a1, (uint64_t *)&v35, &v33);
  if (v36)
    std::__shared_weak_count::__release_weak(v36);
  v24 = v33;
  v25 = v34;
  v33 = 0;
  v34 = 0;
  v26 = (std::__shared_weak_count *)v14[9];
  v14[8] = v24;
  v14[9] = v25;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v29 = v34;
  if (v34)
  {
    v30 = (unint64_t *)&v34->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  if (v17)
    std::__shared_weak_count::__release_weak(v17);
}

void sub_20FF402AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  uint64_t v15;
  std::__shared_weak_count *v16;

  if (a15)
  {
    std::__shared_weak_count::__release_weak(a15);
    if (!v16)
    {
LABEL_3:
      sub_20E86665C(v15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_3;
  }
  std::__shared_weak_count::__release_weak(v16);
  sub_20E86665C(v15);
  _Unwind_Resume(a1);
}

void sub_20FF402EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18)
{
  uint64_t v18;
  std::__shared_weak_count *v19;
  void *v21;

  if (a15 && a14 < 0)
    operator delete(__p);
  if (a17)
    operator delete(a17);
  std::__shared_weak_count::~__shared_weak_count(v19);
  operator delete(v21);
  sub_20E86665C(v18);
  _Unwind_Resume(a1);
}

void sub_20FF40334(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

void sub_20FF40348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v18;
  void *v19;
  void *v20;

  if (a15)
  {
    std::__shared_weak_count::__release_weak(a15);
    sub_20E86665C(v16);
    v18 = (std::__shared_weak_count *)v15[2].__vftable;
    if (!v18)
    {
LABEL_3:
      std::__shared_weak_count::~__shared_weak_count(v15);
      operator delete(v19);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    sub_20E86665C(v16);
    v18 = (std::__shared_weak_count *)v15[2].__vftable;
    if (!v18)
      goto LABEL_3;
  }
  std::__shared_weak_count::__release_weak(v18);
  std::__shared_weak_count::~__shared_weak_count(v15);
  operator delete(v20);
  _Unwind_Resume(a1);
}

void sub_20FF403A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF403B8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF40420(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_20FF4047C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 24);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

void sub_20FF404E4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF4054C(uint64_t a1, uint64_t **a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    sub_20FEFF990(*(_QWORD *)(v4 + 64), a2);
    v5 = *(_QWORD *)(a1 + 16);
    if (v5)
    {
LABEL_3:
      sub_20FF21AD4(*(_QWORD *)(v5 + 32), 2, 0);
      v6 = *(_QWORD *)(a1 + 16);
      if (v6)
        goto LABEL_11;
      goto LABEL_9;
    }
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      goto LABEL_15;
    }
    sub_20FEFF990(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 64), a2);
    v5 = *(_QWORD *)(a1 + 16);
    if (v5)
      goto LABEL_3;
  }
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    goto LABEL_15;
  }
  sub_20FF21AD4(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 32), 2, 0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
    goto LABEL_11;
LABEL_9:
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
LABEL_15:
    abort();
  }
  v6 = *(_QWORD *)(a1 + 16);
LABEL_11:
  v8 = *a2;
  v7 = a2[1];
  v9 = (*(uint64_t (**)(uint64_t, const char *, _QWORD))(*(_QWORD *)(v6 + 8) + 48))(v6 + 8, "", 0);
  if (v8 == v7)
    v10 = 2;
  else
    v10 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v9 + 40))(v9, v10);
}

uint64_t sub_20FF406AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 104))(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 104))(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_20FF40734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 104))(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 104))(*(_QWORD *)(a1 + 8), a2);
}

BOOL sub_20FF407BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BOOL8 v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *a2;
    v5 = (std::__shared_weak_count *)a2[1];
    v20 = v5;
    if (v5)
      goto LABEL_3;
LABEL_12:
    v21 = 0;
    v9 = *(_QWORD *)(v3 + 64);
    v22 = v4;
    v23 = 0;
    goto LABEL_13;
  }
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  v20 = v5;
  if (!v5)
    goto LABEL_12;
LABEL_3:
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  v21 = v5;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = *(_QWORD *)(v3 + 64);
  v22 = v4;
  v23 = v5;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_13:
  v12 = sub_20FEFF840(v9, &v22);
  if (v5)
  {
    v13 = (unint64_t *)&v5->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v21)
  {
    v15 = (unint64_t *)&v21->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  if (!v20)
    return v12;
  v17 = (unint64_t *)&v20->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
    return v12;
  ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
  std::__shared_weak_count::__release_weak(v20);
  return v12;
}

void sub_20FF4095C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  sub_20E86665C((uint64_t)&a13);
  sub_20E86665C((uint64_t)&a11);
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF40980(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v3 = *(_QWORD *)(a1 + 16);
  }
  v5 = *(_QWORD *)(v3 + 64);
  std::mutex::lock((std::mutex *)(v5 + 32));
  v6 = sub_20FEFF410(v5, a2);
  std::mutex::unlock((std::mutex *)(v5 + 32));
  return v6;
}

void sub_20FF40A18(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF40A2C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return v1 + 48;
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return *(_QWORD *)(a1 + 16) + 48;
}

uint64_t sub_20FF40AA0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return v1 + 48;
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return *(_QWORD *)(a1 + 16) + 48;
}

uint64_t sub_20FF40B14@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
  {
    v4 = result;
    result = sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0);
    if ((result & 1) != 0)
      abort();
    v3 = *(_QWORD *)(v4 + 16);
  }
  v6 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  *a2 = v6;
  a2[1] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

uint64_t sub_20FF40B98@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
  {
    v4 = result;
    result = sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0);
    if ((result & 1) != 0)
      abort();
    v3 = *(_QWORD *)(v4 + 16);
  }
  v6 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  *a2 = v6;
  a2[1] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

std::__shared_weak_count *sub_20FF40C1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    result = *(std::__shared_weak_count **)(v3 + 24);
    if (!result)
      goto LABEL_8;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v3 = *(_QWORD *)(a1 + 16);
    result = *(std::__shared_weak_count **)(v3 + 24);
    if (!result)
      goto LABEL_8;
  }
  result = std::__shared_weak_count::lock(result);
  if (result)
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = result;
    return result;
  }
LABEL_8:
  *a2 = 0;
  a2[1] = result;
  return result;
}

std::__shared_weak_count *sub_20FF40CC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    result = *(std::__shared_weak_count **)(v3 + 24);
    if (!result)
      goto LABEL_8;
  }
  else
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v3 = *(_QWORD *)(a1 + 16);
    result = *(std::__shared_weak_count **)(v3 + 24);
    if (!result)
      goto LABEL_8;
  }
  result = std::__shared_weak_count::lock(result);
  if (result)
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = result;
    return result;
  }
LABEL_8:
  *a2 = 0;
  a2[1] = result;
  return result;
}

uint64_t sub_20FF40D6C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 112))(v2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 112))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_20FF40DE8(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 112))(v2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 112))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_20FF40E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 120))(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 120))(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_20FF40EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 120))(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 120))(*(_QWORD *)(a1 + 8), a2);
}

uint64_t sub_20FF40F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 128))(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 128))(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_20FF40FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 128))(v4, a2);
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 128))(*(_QWORD *)(a1 + 8), a2);
}

uint64_t **sub_20FF41084(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 16);
  }
  return sub_20FF217CC(*(_QWORD *)(v5 + 32), a2, a3);
}

uint64_t **sub_20FF41100(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  return sub_20FF217CC(*(_QWORD *)(v5 + 32), a2, a3);
}

unint64_t sub_20FF4117C(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      goto LABEL_9;
    }
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 32);
    v7 = *(_QWORD *)(v6 + 8);
    if (v7)
      return sub_20FF1FB28(v7, a2, a3);
LABEL_7:
    if (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))return sub_20FF1FB28(*(_QWORD *)(v6 + 8), a2, a3);
LABEL_9:
    abort();
  }
  v6 = *(_QWORD *)(v5 + 32);
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7)
    goto LABEL_7;
  return sub_20FF1FB28(v7, a2, a3);
}

unint64_t sub_20FF4125C(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      goto LABEL_9;
    }
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 32);
    v7 = *(_QWORD *)(v6 + 8);
    if (v7)
      return sub_20FF1FB28(v7, a2, a3);
LABEL_7:
    if (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)&unk_2102CCBA3, 0, (void (*)(void **))sub_21023DDB0))return sub_20FF1FB28(*(_QWORD *)(v6 + 8), a2, a3);
LABEL_9:
    abort();
  }
  v6 = *(_QWORD *)(v5 + 32);
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7)
    goto LABEL_7;
  return sub_20FF1FB28(v7, a2, a3);
}

uint64_t sub_20FF4133C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 16);
  }
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(v5 + 32) + 64))(*(_QWORD *)(v5 + 32), a2, a3);
}

uint64_t sub_20FF413C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(v5 + 32) + 64))(*(_QWORD *)(v5 + 32), a2, a3);
}

uint64_t sub_20FF41444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  std::mutex *v6;
  _QWORD *v7;
  _QWORD *i;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    v4 = *(_QWORD *)(a1 + 16);
  }
  v5 = *(_QWORD *)(v4 + 64);
  v6 = (std::mutex *)(v5 + 32);
  std::mutex::lock((std::mutex *)(v5 + 32));
  v7 = *(_QWORD **)(v5 + 96);
  for (i = *(_QWORD **)(v5 + 104); v7 != i; v7 += 2)
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v7 + 16))(*v7, a2);
  std::mutex::unlock(v6);
  return a1;
}

void sub_20FF41500(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_20FF41518(uint64_t a1)
{
  sub_20FF415BC(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF4153C(uint64_t a1)
{
  return sub_20FF415BC(a1 - 8);
}

void sub_20FF41544(uint64_t a1)
{
  sub_20FF415BC(a1 - 8);
  JUMPOUT(0x212BC6398);
}

void sub_20FF4156C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0DF38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_20FF4157C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0DF38;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF415AC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_20FF415BC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  *(_QWORD *)a1 = &off_24CA0DE08;
  *(_QWORD *)(a1 + 8) = &unk_24CA0DEB0;
  if (*(_BYTE *)(a1 + 104) && *(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    v2 = *(std::__shared_weak_count **)(a1 + 72);
    if (!v2)
      goto LABEL_9;
  }
  else
  {
    v2 = *(std::__shared_weak_count **)(a1 + 72);
    if (!v2)
      goto LABEL_9;
  }
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
LABEL_9:
  v5 = *(std::__shared_weak_count **)(a1 + 40);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v8 = *(std::__shared_weak_count **)(a1 + 24);
      if (!v8)
        return a1;
      goto LABEL_14;
    }
  }
  v8 = *(std::__shared_weak_count **)(a1 + 24);
  if (v8)
LABEL_14:
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

uint64_t *sub_20FF41698(uint64_t *a1, _DWORD *a2)
{
  _OWORD *v3;
  __int128 v4;
  _OWORD *v5;
  __int128 v6;
  _OWORD *v7;
  __int128 v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  void **v14;
  __int128 v15;
  uint64_t *v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t **v19;
  BOOL v20;
  int v21;
  uint64_t **v22;
  uint64_t *v23;
  int v24;
  void **v25;
  uint64_t *v26;
  size_t v27;
  int v28;
  uint64_t **v29;
  uint64_t **v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  size_t v35;
  int v36;
  int v37;
  uint64_t ***v38;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  char v42;
  __int128 *v43;
  size_t v44;
  uint64_t **v45;
  int v46;
  const void *v47;
  size_t v48;
  size_t v49;
  int v50;
  int v51;
  uint64_t *v52;
  size_t v53;
  size_t v54;
  int v55;
  _DWORD *v57;
  char *__p;
  char *v60;
  uint64_t v61;
  uint64_t **v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  __int128 v71;
  uint64_t v72;

  v68 = (char *)operator new(0x48uLL);
  v69 = v68;
  v70 = v68 + 72;
  sub_20FF43088((uint64_t)&v71, dword_2103F144C);
  v3 = v68;
  if (v68 >= v68 + 72)
  {
    v69 = sub_20E8780F0((void **)&v68, (uint64_t)&v71);
    if (SHIBYTE(v72) < 0)
      operator delete((void *)v71);
  }
  else
  {
    v4 = v71;
    *((_QWORD *)v69 + 2) = v72;
    *v3 = v4;
    v69 = (char *)v3 + 24;
  }
  sub_20FF43088((uint64_t)&v71, &dword_2103F1450);
  v5 = v69;
  if (v69 >= v70)
  {
    v69 = sub_20E8780F0((void **)&v68, (uint64_t)&v71);
    if (SHIBYTE(v72) < 0)
      operator delete((void *)v71);
  }
  else
  {
    v6 = v71;
    *((_QWORD *)v69 + 2) = v72;
    *v5 = v6;
    v69 = (char *)v5 + 24;
  }
  sub_20FF43088((uint64_t)&v71, &dword_2103F1454);
  v7 = v69;
  v57 = a2;
  if (v69 >= v70)
  {
    v9 = sub_20E8780F0((void **)&v68, (uint64_t)&v71);
    v69 = v9;
    if (SHIBYTE(v72) < 0)
    {
      operator delete((void *)v71);
      v9 = v69;
    }
  }
  else
  {
    v8 = v71;
    *((_QWORD *)v69 + 2) = v72;
    *v7 = v8;
    v9 = (char *)v7 + 24;
    v69 = (char *)v7 + 24;
  }
  v10 = 0;
  v11 = v68;
  v65 = v68;
  v66 = v9;
  v67 = v70;
  v63 = 0;
  v64 = 0;
  v62 = &v63;
  __p = v68;
  v60 = v9;
  while (1)
  {
LABEL_15:
    v12 = (char *)operator new(0x40uLL);
    v13 = (uint64_t *)v12;
    *(_QWORD *)&v71 = v12;
    *((_QWORD *)&v71 + 1) = &v63;
    LOBYTE(v72) = 0;
    v14 = (void **)(v12 + 32);
    if (v11[23] < 0)
    {
      sub_20E860C04(v12 + 32, *(void **)v11, *((_QWORD *)v11 + 1));
    }
    else
    {
      v15 = *(_OWORD *)v11;
      *((_QWORD *)v12 + 6) = *((_QWORD *)v11 + 2);
      *(_OWORD *)v14 = v15;
    }
    v61 = v10;
    *((_DWORD *)v13 + 14) = dword_2103F144C[v10];
    v16 = v63;
    v17 = &v63;
    if (v62 == &v63)
    {
LABEL_63:
      v29 = v17 + 1;
      if (v16)
        v30 = v17;
      else
        v30 = &v63;
      v38 = &v62;
      if (v16)
        v38 = (uint64_t ***)v17;
      else
        v29 = &v63;
      if (!v38[1])
        goto LABEL_73;
      v39 = v60;
      v40 = v61;
      if ((*((_BYTE *)v13 + 55) & 0x80) != 0)
        goto LABEL_78;
      goto LABEL_71;
    }
    v18 = v63;
    v19 = &v63;
    if (v63)
    {
      do
      {
        v17 = (uint64_t **)v18;
        v18 = (uint64_t *)v18[1];
      }
      while (v18);
    }
    else
    {
      do
      {
        v17 = (uint64_t **)v19[2];
        v20 = *v17 == (uint64_t *)v19;
        v19 = v17;
      }
      while (v20);
    }
    v21 = *((char *)v17 + 55);
    v22 = v21 >= 0 ? v17 + 4 : (uint64_t **)v17[4];
    v23 = v21 >= 0 ? (uint64_t *)*((unsigned __int8 *)v17 + 55) : v17[5];
    v24 = *((char *)v13 + 55);
    v25 = v24 >= 0 ? v14 : (void **)v13[4];
    v26 = v24 >= 0 ? (uint64_t *)*((unsigned __int8 *)v13 + 55) : (uint64_t *)v13[5];
    v27 = (size_t)(v26 >= v23 ? v23 : v26);
    v28 = memcmp(v22, v25, v27);
    if (v28)
    {
      if (v28 < 0)
        goto LABEL_63;
    }
    else if (v23 < v26)
    {
      goto LABEL_63;
    }
    v29 = &v63;
    v30 = &v63;
    if (v16)
      break;
LABEL_73:
    *v13 = 0;
    v13[1] = 0;
    v13[2] = (uint64_t)v30;
    *v29 = v13;
    if (*v62)
    {
      v62 = (uint64_t **)*v62;
      v13 = *v29;
    }
    sub_20E868578(v63, v13);
    ++v64;
    v39 = v60;
    v11 += 24;
    v10 = v61 + 1;
    if (v11 == v60)
      goto LABEL_14;
  }
  while (1)
  {
    while (1)
    {
      v30 = (uint64_t **)v16;
      v31 = *((unsigned __int8 *)v16 + 55);
      v32 = v16[5];
      v33 = (v31 & 0x80u) == 0 ? v16 + 4 : (uint64_t *)v16[4];
      v34 = (uint64_t *)((v31 & 0x80u) == 0 ? v31 : v32);
      v35 = (size_t)(v34 >= v26 ? v26 : v34);
      v36 = memcmp(v25, v33, v35);
      if (v36)
        break;
      if (v26 >= v34)
        goto LABEL_56;
LABEL_42:
      v16 = *v30;
      v29 = v30;
      if (!*v30)
        goto LABEL_73;
    }
    if (v36 < 0)
      goto LABEL_42;
LABEL_56:
    v37 = memcmp(v33, v25, v35);
    if (!v37)
      break;
    if ((v37 & 0x80000000) == 0)
      goto LABEL_77;
LABEL_60:
    v16 = v30[1];
    if (!v16)
    {
      v29 = v30 + 1;
      goto LABEL_73;
    }
  }
  if (v34 < v26)
    goto LABEL_60;
LABEL_77:
  v39 = v60;
  v40 = v61;
  if ((v24 & 0x80) == 0)
  {
LABEL_71:
    operator delete(v13);
    v11 += 24;
    v10 = v40 + 1;
    if (v11 != v39)
      goto LABEL_15;
    goto LABEL_14;
  }
LABEL_78:
  operator delete(*v14);
  operator delete(v13);
  v11 += 24;
  v10 = v40 + 1;
  if (v11 != v39)
    goto LABEL_15;
LABEL_14:
  if (v10 != 3)
    goto LABEL_15;
  if (__p)
  {
    while (v39 != __p)
    {
      if (*(v39 - 1) < 0)
        operator delete(*((void **)v39 - 3));
      v39 -= 24;
    }
    operator delete(__p);
  }
  v71 = 0uLL;
  v72 = 0;
  sub_20EA94AF4(a1, (uint64_t)&v71);
  v41 = v63;
  if (!v63)
    goto LABEL_125;
  v42 = HIBYTE(v72);
  if (v72 >= 0)
    v43 = &v71;
  else
    v43 = (__int128 *)v71;
  if (v72 >= 0)
    v44 = HIBYTE(v72);
  else
    v44 = *((_QWORD *)&v71 + 1);
  v45 = &v63;
  while (2)
  {
    while (2)
    {
      v46 = *((char *)v41 + 55);
      if (v46 >= 0)
        v47 = v41 + 4;
      else
        v47 = (const void *)v41[4];
      if (v46 >= 0)
        v48 = *((unsigned __int8 *)v41 + 55);
      else
        v48 = v41[5];
      if (v44 >= v48)
        v49 = v48;
      else
        v49 = v44;
      v50 = memcmp(v47, v43, v49);
      if (v50)
      {
        if ((v50 & 0x80000000) == 0)
          break;
        goto LABEL_95;
      }
      if (v48 < v44)
      {
LABEL_95:
        v41 = (uint64_t *)v41[1];
        if (!v41)
          goto LABEL_110;
        continue;
      }
      break;
    }
    v45 = (uint64_t **)v41;
    v41 = (uint64_t *)*v41;
    if (v41)
      continue;
    break;
  }
LABEL_110:
  if (v45 == &v63)
    goto LABEL_125;
  v51 = *((char *)v45 + 55);
  if (v51 >= 0)
    v52 = (uint64_t *)(v45 + 4);
  else
    v52 = v45[4];
  if (v51 >= 0)
    v53 = *((unsigned __int8 *)v45 + 55);
  else
    v53 = (size_t)v45[5];
  if (v53 >= v44)
    v54 = v44;
  else
    v54 = v53;
  v55 = memcmp(v43, v52, v54);
  if (v55)
  {
    if ((v55 & 0x80000000) == 0)
      goto LABEL_122;
LABEL_125:
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 32) | 4);
    if (v72 < 0)
LABEL_126:
      operator delete((void *)v71);
  }
  else
  {
    if (v44 < v53)
      goto LABEL_125;
LABEL_122:
    *v57 = *((_DWORD *)v45 + 14);
    if (v42 < 0)
      goto LABEL_126;
  }
  sub_20FD04F28((char *)v63);
  return a1;
}

void sub_20FF41C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16)
{
  uint64_t v16;

  if (*(char *)(v16 - 81) < 0)
    operator delete(*(void **)(v16 - 104));
  sub_20FD04F28(a16);
  _Unwind_Resume(a1);
}

void sub_20FF41C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  sub_20E89FB98((void **)va);
  _Unwind_Resume(a1);
}

void sub_20FF41C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  sub_20FF4342C((uint64_t *)(v10 - 104));
  sub_20FD04F28(a9);
  sub_20E89FB98((void **)va);
  _Unwind_Resume(a1);
}

void sub_20FF41C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_20FD04F28(a9);
  sub_20E89FB98((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF41CA8(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (a2 == 1)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    v2 = 0x100000000;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0x100000000;
    *(_QWORD *)(result + 32) = 0;
    *(_QWORD *)(result + 40) = 0;
    *(_QWORD *)(result + 48) = 0;
    *(_QWORD *)(result + 56) = 0x100000000;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)(result + 72) = 0;
    *(_QWORD *)(result + 80) = 0;
    *(_QWORD *)(result + 88) = 0;
    *(_QWORD *)(result + 96) = 0x100000000;
    *(_DWORD *)(result + 104) = 0;
    *(_QWORD *)(result + 112) = 0;
    *(_QWORD *)(result + 120) = 0;
    *(_QWORD *)(result + 128) = 0;
    *(_QWORD *)(result + 136) = 0x100000000;
    *(_QWORD *)(result + 144) = 0;
    *(_QWORD *)(result + 152) = 0;
    *(_QWORD *)(result + 160) = 0;
    *(_QWORD *)(result + 168) = 0x100000000;
    *(_QWORD *)(result + 176) = 0;
    *(_QWORD *)(result + 184) = 0;
    *(_QWORD *)(result + 192) = 0;
    *(_QWORD *)(result + 200) = 0x100000000;
    *(_QWORD *)(result + 208) = 0;
    *(_QWORD *)(result + 216) = 0;
    *(_QWORD *)(result + 224) = 0;
    *(_QWORD *)(result + 232) = 0x100000000;
    *(_QWORD *)(result + 240) = 0;
    *(_QWORD *)(result + 248) = 0;
    *(_QWORD *)(result + 256) = 0;
    *(_QWORD *)(result + 264) = 0x100000000;
    *(_DWORD *)(result + 272) = 0;
    *(_QWORD *)(result + 280) = 0;
    *(_QWORD *)(result + 288) = 0;
    *(_QWORD *)(result + 296) = 0;
    *(_QWORD *)(result + 304) = 0x100000000;
  }
  else
  {
    if (a2 == 2)
    {
      sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Mesh/include/Kit/Mesh/TriMeshAllocator.h", 151, (uint64_t)&unk_2102CD20E, 0, (uint64_t)"Invalid mode", 12, (void (*)(void **))sub_21023DDB0);
      abort();
    }
    v2 = 0;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_DWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_DWORD *)(result + 272) = 0;
  }
  *(_DWORD *)(result + 312) = 0;
  *(_QWORD *)(result + 320) = 0;
  *(_QWORD *)(result + 328) = 0;
  *(_QWORD *)(result + 336) = 0;
  *(_QWORD *)(result + 344) = v2;
  *(_DWORD *)(result + 352) = 0;
  *(_BYTE *)(result + 356) = 0;
  *(_BYTE *)(result + 380) = 0;
  return result;
}

_QWORD *sub_20FF41DB8(_QWORD *a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  void *p_p;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  void ***v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void ***v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  void *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  void *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  void ***v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  void ***v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  float *v63;
  float *v64;
  float *v65;
  void *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  void ***v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  void *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v78;
  void *v79;
  uint64_t v80;
  unsigned __int8 v81;
  void *v82;
  uint64_t v83;
  unsigned __int8 v84;
  int v85;
  void *v86[2];
  char v87;
  void *__p;
  uint64_t v89;
  uint64_t *v90;
  int v91;
  uint64_t v92;
  void ***v93;
  void **v94;
  const char *v95;
  void **v96;
  const char *v97;
  const char *v98;

  v3 = a1;
  sub_20E86A980(a1, (uint64_t)"TriMeshData{\n", 13);
  v4 = sub_20E86A980(v3, (uint64_t)"vertices={", 10);
  LODWORD(v97) = 0;
  sub_20FF43478((uint64_t)&v94, (uint64_t **)a2);
  if ((_DWORD)v97 == -1)
    sub_20E877AB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24CA0DFA8[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24CA0DF90[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    p_p = &__p;
  else
    p_p = __p;
  if (SHIBYTE(v90) >= 0)
    v6 = HIBYTE(v90);
  else
    v6 = v89;
  v7 = sub_20E86A980(v4, (uint64_t)p_p, v6);
  sub_20E86A980(v7, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v8 = sub_20E86A980(v3, (uint64_t)"faces={", 7);
  LODWORD(v97) = 0;
  sub_20FF4372C((uint64_t)&v94, (uint64_t **)(a2 + 112));
  if ((_DWORD)v97 == -1)
    sub_20E877AB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24CA0DFA8[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24CA0DF90[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v9 = &__p;
  else
    v9 = __p;
  if (SHIBYTE(v90) >= 0)
    v10 = HIBYTE(v90);
  else
    v10 = v89;
  v11 = sub_20E86A980(v8, (uint64_t)v9, v10);
  sub_20E86A980(v11, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v12 = sub_20E86A980(v3, (uint64_t)"normals={", 9);
  LODWORD(v97) = 0;
  sub_20FF43478((uint64_t)&v94, (uint64_t **)(a2 + 72));
  if ((_DWORD)v97 == -1)
    sub_20E877AB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24CA0DFA8[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24CA0DF90[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v13 = &__p;
  else
    v13 = __p;
  if (SHIBYTE(v90) >= 0)
    v14 = HIBYTE(v90);
  else
    v14 = v89;
  v15 = sub_20E86A980(v12, (uint64_t)v13, v14);
  sub_20E86A980(v15, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v16 = sub_20E86A980(v3, (uint64_t)"normals_type=", 13);
  sub_20FF43088((uint64_t)&v94, (_DWORD *)(a2 + 104));
  if (SHIBYTE(v96) >= 0)
    v17 = &v94;
  else
    v17 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v18 = HIBYTE(v96);
  else
    v18 = (uint64_t)v95;
  v19 = sub_20E86A980(v16, (uint64_t)v17, v18);
  sub_20E86A980(v19, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v20 = sub_20E86A980(v3, (uint64_t)"colors={", 8);
  LODWORD(v97) = 0;
  sub_20FF43478((uint64_t)&v94, (uint64_t **)(a2 + 32));
  if ((_DWORD)v97 == -1)
    sub_20E877AB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24CA0DFA8[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24CA0DF90[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v21 = &__p;
  else
    v21 = __p;
  if (SHIBYTE(v90) >= 0)
    v22 = HIBYTE(v90);
  else
    v22 = v89;
  v23 = sub_20E86A980(v20, (uint64_t)v21, v22);
  sub_20E86A980(v23, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v24 = sub_20E86A980(v3, (uint64_t)"colors_type=", 12);
  sub_20FF43088((uint64_t)&v94, (_DWORD *)(a2 + 64));
  if (SHIBYTE(v96) >= 0)
    v25 = &v94;
  else
    v25 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v26 = HIBYTE(v96);
  else
    v26 = (uint64_t)v95;
  v27 = sub_20E86A980(v24, (uint64_t)v25, v26);
  sub_20E86A980(v27, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v28 = sub_20E86A980(v3, (uint64_t)"edges={", 7);
  v85 = 0;
  v78 = v3;
  if ((uint64_t)(*(_QWORD *)(a2 + 152) - *(_QWORD *)(a2 + 144)) <= 7)
  {
    sub_20EA5D220(&v82, "{}");
    goto LABEL_76;
  }
  sub_20E89FDB0(&v82, "{");
  v29 = *(uint64_t **)(a2 + 144);
  v92 = *v29;
  __p = (void *)0x100000002;
  LODWORD(v89) = 2;
  v90 = &v92;
  v91 = 0;
  sub_20E9F6DE4((unsigned int *)&__p, v86);
  v94 = &v82;
  v95 = (const char *)v86;
  v96 = &v82;
  v97 = (const char *)v86;
  v98 = (const char *)v86;
  if (v85 == -1)
    sub_20E877AB8();
  v93 = &v94;
  ((void (*)(void ****, void **))off_24CA0DF78[v85])(&v93, &v82);
  if (v87 < 0)
  {
    operator delete(v86[0]);
    v30 = *(uint64_t **)(a2 + 152);
    v31 = v29 + 1;
    if (v29 + 1 != v30)
    {
LABEL_70:
      while (1)
      {
        v94 = &v82;
        v95 = ",";
        v96 = &v82;
        v97 = ",";
        v98 = ",";
        if (v85 == -1)
          break;
        __p = &v94;
        ((void (*)(void **, void **))off_24CA0DFD8[v85])(&__p, &v82);
        v92 = *v31;
        __p = (void *)0x100000002;
        LODWORD(v89) = 2;
        v90 = &v92;
        v91 = 0;
        sub_20E9F6DE4((unsigned int *)&__p, v86);
        v94 = &v82;
        v95 = (const char *)v86;
        v96 = &v82;
        v97 = (const char *)v86;
        v98 = (const char *)v86;
        if (v85 == -1)
          sub_20E877AB8();
        v93 = &v94;
        ((void (*)(void ****, void **))off_24CA0DF78[v85])(&v93, &v82);
        if (v87 < 0)
          operator delete(v86[0]);
        if (++v31 == v30)
          goto LABEL_74;
      }
LABEL_204:
      sub_20E877AB8();
    }
  }
  else
  {
    v30 = *(uint64_t **)(a2 + 152);
    v31 = v29 + 1;
    if (v29 + 1 != v30)
      goto LABEL_70;
  }
LABEL_74:
  v94 = &v82;
  v95 = "}";
  v96 = &v82;
  v97 = "}";
  v98 = "}";
  if (v85 == -1)
    goto LABEL_204;
  __p = &v94;
  ((void (*)(void **, void **))off_24CA0DFD8[v85])(&__p, &v82);
  v3 = v78;
LABEL_76:
  if (v85 == -1)
    sub_20E877AB8();
  v94 = &__p;
  ((void (*)(void **__return_ptr, void ***, void **))off_24CA0DFA8[v85])(&v79, &v94, &v82);
  if (v85 != -1)
    ((void (*)(void ***, void **))off_24CA0DF90[v85])(&v94, &v82);
  if ((v81 & 0x80u) == 0)
    v32 = &v79;
  else
    v32 = v79;
  if ((v81 & 0x80u) == 0)
    v33 = v81;
  else
    v33 = v80;
  v34 = sub_20E86A980(v28, (uint64_t)v32, v33);
  sub_20E86A980(v34, (uint64_t)"}\n", 2);
  if ((char)v81 < 0)
    operator delete(v79);
  v35 = sub_20E86A980(v3, (uint64_t)"tex_coords={", 12);
  v85 = 0;
  if ((uint64_t)(*(_QWORD *)(a2 + 184) - *(_QWORD *)(a2 + 176)) <= 7)
  {
    sub_20EA5D220(&v82, "{}");
    goto LABEL_102;
  }
  sub_20E89FDB0(&v82, "{");
  v36 = *(uint64_t **)(a2 + 176);
  v92 = *v36;
  __p = (void *)0x100000002;
  LODWORD(v89) = 2;
  v90 = &v92;
  v91 = 0;
  sub_20E9F70CC((unsigned int *)&__p, v86);
  v94 = &v82;
  v95 = (const char *)v86;
  v96 = &v82;
  v97 = (const char *)v86;
  v98 = (const char *)v86;
  if (v85 == -1)
    sub_20E877AB8();
  v93 = &v94;
  ((void (*)(void ****, void **))off_24CA0DF78[v85])(&v93, &v82);
  if (v87 < 0)
  {
    operator delete(v86[0]);
    v37 = *(uint64_t **)(a2 + 184);
    v38 = v36 + 1;
    if (v36 + 1 != v37)
    {
LABEL_96:
      while (1)
      {
        v94 = &v82;
        v95 = ",";
        v96 = &v82;
        v97 = ",";
        v98 = ",";
        if (v85 == -1)
          break;
        __p = &v94;
        ((void (*)(void **, void **))off_24CA0DFD8[v85])(&__p, &v82);
        v92 = *v38;
        __p = (void *)0x100000002;
        LODWORD(v89) = 2;
        v90 = &v92;
        v91 = 0;
        sub_20E9F70CC((unsigned int *)&__p, v86);
        v94 = &v82;
        v95 = (const char *)v86;
        v96 = &v82;
        v97 = (const char *)v86;
        v98 = (const char *)v86;
        if (v85 == -1)
          sub_20E877AB8();
        v93 = &v94;
        ((void (*)(void ****, void **))off_24CA0DF78[v85])(&v93, &v82);
        if (v87 < 0)
          operator delete(v86[0]);
        if (++v38 == v37)
          goto LABEL_100;
      }
LABEL_205:
      sub_20E877AB8();
    }
  }
  else
  {
    v37 = *(uint64_t **)(a2 + 184);
    v38 = v36 + 1;
    if (v36 + 1 != v37)
      goto LABEL_96;
  }
LABEL_100:
  v94 = &v82;
  v95 = "}";
  v96 = &v82;
  v97 = "}";
  v98 = "}";
  if (v85 == -1)
    goto LABEL_205;
  __p = &v94;
  ((void (*)(void **, void **))off_24CA0DFD8[v85])(&__p, &v82);
  v3 = v78;
LABEL_102:
  if (v85 == -1)
    sub_20E877AB8();
  v94 = &__p;
  ((void (*)(void **__return_ptr, void ***, void **))off_24CA0DFA8[v85])(&v79, &v94, &v82);
  if (v85 != -1)
    ((void (*)(void ***, void **))off_24CA0DF90[v85])(&v94, &v82);
  if ((v81 & 0x80u) == 0)
    v39 = &v79;
  else
    v39 = v79;
  if ((v81 & 0x80u) == 0)
    v40 = v81;
  else
    v40 = v80;
  v41 = sub_20E86A980(v35, (uint64_t)v39, v40);
  sub_20E86A980(v41, (uint64_t)"}\n", 2);
  if ((char)v81 < 0)
    operator delete(v79);
  v42 = sub_20E86A980(v3, (uint64_t)"tex_faces={", 11);
  LODWORD(v97) = 0;
  sub_20FF4372C((uint64_t)&v94, (uint64_t **)(a2 + 208));
  if ((_DWORD)v97 == -1)
    sub_20E877AB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24CA0DFA8[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24CA0DF90[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v43 = &__p;
  else
    v43 = __p;
  if (SHIBYTE(v90) >= 0)
    v44 = HIBYTE(v90);
  else
    v44 = v89;
  v45 = sub_20E86A980(v42, (uint64_t)v43, v44);
  sub_20E86A980(v45, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v46 = sub_20E86A980(v3, (uint64_t)"semantics={", 11);
  LODWORD(v97) = 0;
  sub_20FF439E0((uint64_t)&v94, (unsigned __int8 **)(a2 + 240));
  if ((_DWORD)v97 == -1)
    sub_20E877AB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24CA0DFA8[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24CA0DF90[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v47 = &__p;
  else
    v47 = __p;
  if (SHIBYTE(v90) >= 0)
    v48 = HIBYTE(v90);
  else
    v48 = v89;
  v49 = sub_20E86A980(v46, (uint64_t)v47, v48);
  sub_20E86A980(v49, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v50 = sub_20E86A980(v3, (uint64_t)"semantics_type=", 15);
  sub_20FF43088((uint64_t)&v94, (_DWORD *)(a2 + 272));
  if (SHIBYTE(v96) >= 0)
    v51 = &v94;
  else
    v51 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v52 = HIBYTE(v96);
  else
    v52 = (uint64_t)v95;
  v53 = sub_20E86A980(v50, (uint64_t)v51, v52);
  sub_20E86A980(v53, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v54 = sub_20E86A980(v3, (uint64_t)"materials={", 11);
  LODWORD(v97) = 0;
  sub_20FF439E0((uint64_t)&v94, (unsigned __int8 **)(a2 + 280));
  if ((_DWORD)v97 == -1)
    sub_20E877AB8();
  v82 = v86;
  ((void (*)(void **__return_ptr, void **, void ***))off_24CA0DFA8[v97])(&__p, &v82, &v94);
  if ((_DWORD)v97 != -1)
    ((void (*)(void **, void ***))off_24CA0DF90[v97])(&v82, &v94);
  if (SHIBYTE(v90) >= 0)
    v55 = &__p;
  else
    v55 = __p;
  if (SHIBYTE(v90) >= 0)
    v56 = HIBYTE(v90);
  else
    v56 = v89;
  v57 = sub_20E86A980(v54, (uint64_t)v55, v56);
  sub_20E86A980(v57, (uint64_t)"}\n", 2);
  if (SHIBYTE(v90) < 0)
    operator delete(__p);
  v58 = sub_20E86A980(v3, (uint64_t)"materials_type=", 15);
  sub_20FF43088((uint64_t)&v94, (_DWORD *)(a2 + 312));
  if (SHIBYTE(v96) >= 0)
    v59 = &v94;
  else
    v59 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v60 = HIBYTE(v96);
  else
    v60 = (uint64_t)v95;
  v61 = sub_20E86A980(v58, (uint64_t)v59, v60);
  sub_20E86A980(v61, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v62 = sub_20E86A980(v3, (uint64_t)"confidences={", 13);
  v91 = 0;
  if ((uint64_t)(*(_QWORD *)(a2 + 328) - *(_QWORD *)(a2 + 320)) <= 3)
  {
    sub_20EA5D220(&__p, "{}");
    goto LABEL_169;
  }
  sub_20E89FDB0(&__p, "{");
  v63 = *(float **)(a2 + 320);
  sub_20E89F7C4((uint64_t)&v94, (uint64_t)&__p, v63);
  v64 = *(float **)(a2 + 328);
  v65 = v63 + 1;
  if (v65 != v64)
  {
    while (1)
    {
      v94 = &__p;
      v95 = ",";
      v96 = &__p;
      v97 = ",";
      v98 = ",";
      if (v91 == -1)
        break;
      v86[0] = &v94;
      ((void (*)(void **, void **))off_24CA0DFD8[v91])(v86, &__p);
      sub_20E89F7C4((uint64_t)&v94, (uint64_t)&__p, v65++);
      if (v65 == v64)
        goto LABEL_167;
    }
LABEL_206:
    sub_20E877AB8();
  }
LABEL_167:
  v94 = &__p;
  v95 = "}";
  v96 = &__p;
  v97 = "}";
  v98 = "}";
  if (v91 == -1)
    goto LABEL_206;
  v86[0] = &v94;
  ((void (*)(void **, void **))off_24CA0DFD8[v91])(v86, &__p);
LABEL_169:
  if (v91 == -1)
    sub_20E877AB8();
  v94 = v86;
  ((void (*)(void **__return_ptr, void ***, void **))off_24CA0DFA8[v91])(&v82, &v94, &__p);
  if (v91 != -1)
    ((void (*)(void ***, void **))off_24CA0DF90[v91])(&v94, &__p);
  if ((v84 & 0x80u) == 0)
    v66 = &v82;
  else
    v66 = v82;
  if ((v84 & 0x80u) == 0)
    v67 = v84;
  else
    v67 = v83;
  v68 = sub_20E86A980(v62, (uint64_t)v66, v67);
  sub_20E86A980(v68, (uint64_t)"}\n", 2);
  if ((char)v84 < 0)
    operator delete(v82);
  v69 = sub_20E86A980(v3, (uint64_t)"confidences_type=", 17);
  sub_20FF43088((uint64_t)&v94, (_DWORD *)(a2 + 352));
  if (SHIBYTE(v96) >= 0)
    v70 = &v94;
  else
    v70 = (void ***)v94;
  if (SHIBYTE(v96) >= 0)
    v71 = HIBYTE(v96);
  else
    v71 = (uint64_t)v95;
  v72 = sub_20E86A980(v69, (uint64_t)v70, v71);
  sub_20E86A980(v72, (uint64_t)"\n", 1);
  if (SHIBYTE(v96) < 0)
    operator delete(v94);
  v73 = sub_20E86A980(v3, (uint64_t)"bbox={", 6);
  v91 = 0;
  if (*(_BYTE *)(a2 + 380))
  {
    sub_20E89FDB0(&__p, "{");
    LOBYTE(v94) = 1;
    v95 = (const char *)&__p;
    v96 = &v79;
    sub_20FF43C2C((uint64_t)&v94, (uint64_t *)(a2 + 356));
    sub_20FF43C2C((uint64_t)&v94, (uint64_t *)(a2 + 368));
    v94 = &__p;
    v95 = "}";
    v96 = &__p;
    v97 = "}";
    v98 = "}";
    if (v91 == -1)
      sub_20E877AB8();
    v86[0] = &v94;
    ((void (*)(void **, void **))off_24CA0DFD8[v91])(v86, &__p);
  }
  else
  {
    sub_20E9737A0(&__p, "nullopt");
  }
  if (v91 == -1)
    sub_20E877AB8();
  v94 = v86;
  ((void (*)(void **__return_ptr, void ***, void **))off_24CA0DFA8[v91])(&v82, &v94, &__p);
  if (v91 != -1)
    ((void (*)(void ***, void **))off_24CA0DF90[v91])(&v94, &__p);
  if ((v84 & 0x80u) == 0)
    v74 = &v82;
  else
    v74 = v82;
  if ((v84 & 0x80u) == 0)
    v75 = v84;
  else
    v75 = v83;
  v76 = sub_20E86A980(v73, (uint64_t)v74, v75);
  sub_20E86A980(v76, (uint64_t)"}\n", 2);
  if ((char)v84 < 0)
    operator delete(v82);
  LOBYTE(v94) = 125;
  sub_20E86A980(v3, (uint64_t)&v94, 1);
  return v3;
}

void sub_20FF42E24(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 144);
  _Unwind_Resume(a1);
}

void sub_20FF42E38(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 144);
  _Unwind_Resume(a1);
}

void sub_20FF42E4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 144);
  _Unwind_Resume(a1);
}

void sub_20FF42E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a31 < 0)
  {
    operator delete(__p);
    sub_20E877A60((uint64_t)&a19);
    _Unwind_Resume(a1);
  }
  sub_20E877A60((uint64_t)&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF43088(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  const char *v4;
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _BYTE v19[24];
  int v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD v23[5];
  _QWORD *v24;

  v20 = 0;
  v3 = operator new();
  *(_QWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_20E863438(v3);
  v23[0] = v3;
  v4 = "unknown";
  v5 = 7;
  switch(*a2)
  {
    case 0:
      goto LABEL_4;
    case 1:
      v4 = "per-vertex";
      v5 = 10;
      goto LABEL_4;
    case 2:
      v4 = "per-face";
      v5 = 8;
LABEL_4:
      sub_20E86A980((_QWORD *)(v3 + 16), (uint64_t)v4, v5);
      break;
    case 3:
      sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Mesh/src/TriMesh.cpp", 46, (uint64_t)&unk_2102CD20E, 0, (uint64_t)"Unsupported type", 16, (void (*)(void **))sub_21023DDB0);
      abort();
    default:
      break;
  }
  v6 = *(_DWORD *)(v3 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v3 + 112);
    v10 = *(_QWORD *)(v3 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v3 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v3 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_30;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v22) = 0;
      v8 = __dst;
      goto LABEL_18;
    }
    v11 = *(const void **)(v3 + 40);
    v7 = *(_QWORD *)(v3 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_30:
      sub_20E860B7C();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v22 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_17;
  }
  HIBYTE(v22) = v7;
  v8 = __dst;
  if (v7)
LABEL_17:
    memmove(v8, v11, v7);
LABEL_18:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v23[0];
  if (v23[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v23[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x212BC6290](v14 + 128);
    MEMORY[0x212BC6398](v14, 0x10B2C40EED050F3);
  }
  v23[0] = v19;
  v23[1] = __dst;
  v23[2] = v19;
  v23[3] = __dst;
  v23[4] = __dst;
  if (v20 == -1)
    sub_20E877AB8();
  v24 = v23;
  ((void (*)(_QWORD **, _BYTE *, uint64_t))off_24CA0DF78[v20])(&v24, v19, v5);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
  if (v20 == -1)
    sub_20E877AB8();
  v23[0] = __dst;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0DFA8[v20])(v23, v19);
  if (v20 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0DF90[v20])(v23, v19);
  return result;
}

void sub_20FF433A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;

  va_start(va, a2);
  MEMORY[0x212BC6398](v2, 0x10B2C40EED050F3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF433D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF433EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20)
{
  if (a19 < 0)
  {
    operator delete(__p);
    sub_20E877A60((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_20E877A60((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF4342C(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16) && *(char *)(v2 + 55) < 0)
      operator delete(*(void **)(v2 + 32));
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_20FF43478(uint64_t a1, uint64_t **a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v17;
  uint64_t v18;
  int v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  uint64_t *v29;

  if ((char *)a2[1] - (char *)*a2 <= 11)
  {
    v24 = a1;
    v25 = "{}";
    v26 = a1;
    v27 = "{}";
    v28 = "{}";
    v3 = *(unsigned int *)(a1 + 24);
    if ((_DWORD)v3 != -1)
    {
      v18 = (uint64_t)&v24;
      return ((uint64_t (*)(uint64_t *, uint64_t))off_24CA0DFC0[v3])(&v18, a1);
    }
LABEL_18:
    sub_20E877AB8();
  }
  v24 = a1;
  v25 = "{";
  v26 = a1;
  v27 = "{";
  v28 = "{";
  v5 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_18;
  v18 = (uint64_t)&v24;
  ((void (*)(uint64_t *, uint64_t))off_24CA0DFD8[v5])(&v18, a1);
  v7 = *a2;
  v8 = **a2;
  v23 = *((_DWORD *)*a2 + 2);
  v22 = v8;
  v18 = 0x100000003;
  v19 = 3;
  v20 = &v22;
  v21 = 0;
  sub_20E9F70CC((unsigned int *)&v18, __p);
  v24 = a1;
  v25 = (const char *)__p;
  v26 = a1;
  v27 = (const char *)__p;
  v28 = (const char *)__p;
  v9 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v9 == -1)
    sub_20E877AB8();
  v29 = &v24;
  ((void (*)(uint64_t **, uint64_t))off_24CA0DF78[v9])(&v29, a1);
  if (v17 < 0)
  {
    operator delete(__p[0]);
    v10 = a2[1];
    v11 = (uint64_t *)((char *)v7 + 12);
    if (v11 != v10)
    {
LABEL_12:
      do
      {
        v24 = a1;
        v25 = ",";
        v26 = a1;
        v27 = ",";
        v28 = ",";
        v12 = *(unsigned int *)(a1 + 24);
        if ((_DWORD)v12 == -1)
          goto LABEL_18;
        v18 = (uint64_t)&v24;
        ((void (*)(uint64_t *, uint64_t))off_24CA0DFD8[v12])(&v18, a1);
        v13 = *v11;
        v23 = *((_DWORD *)v11 + 2);
        v22 = v13;
        v18 = 0x100000003;
        v19 = 3;
        v20 = &v22;
        v21 = 0;
        sub_20E9F70CC((unsigned int *)&v18, __p);
        v24 = a1;
        v25 = (const char *)__p;
        v26 = a1;
        v27 = (const char *)__p;
        v28 = (const char *)__p;
        v14 = *(unsigned int *)(a1 + 24);
        if ((_DWORD)v14 == -1)
          sub_20E877AB8();
        v29 = &v24;
        ((void (*)(uint64_t **, uint64_t))off_24CA0DF78[v14])(&v29, a1);
        if (v17 < 0)
          operator delete(__p[0]);
        v11 = (uint64_t *)((char *)v11 + 12);
      }
      while (v11 != v10);
    }
  }
  else
  {
    v10 = a2[1];
    v11 = (uint64_t *)((char *)v7 + 12);
    if (v11 != v10)
      goto LABEL_12;
  }
  v24 = a1;
  v25 = "}";
  v26 = a1;
  v27 = "}";
  v28 = "}";
  v15 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v15 == -1)
    goto LABEL_18;
  v18 = (uint64_t)&v24;
  return ((uint64_t (*)(uint64_t *, uint64_t))off_24CA0DFD8[v15])(&v18, a1);
}

void sub_20FF43708(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF4372C(uint64_t a1, uint64_t **a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *__p[2];
  char v17;
  uint64_t v18;
  int v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  const char *v25;
  uint64_t v26;
  const char *v27;
  const char *v28;
  uint64_t *v29;

  if ((char *)a2[1] - (char *)*a2 <= 11)
  {
    v24 = a1;
    v25 = "{}";
    v26 = a1;
    v27 = "{}";
    v28 = "{}";
    v3 = *(unsigned int *)(a1 + 24);
    if ((_DWORD)v3 != -1)
    {
      v18 = (uint64_t)&v24;
      return ((uint64_t (*)(uint64_t *, uint64_t))off_24CA0DFC0[v3])(&v18, a1);
    }
LABEL_18:
    sub_20E877AB8();
  }
  v24 = a1;
  v25 = "{";
  v26 = a1;
  v27 = "{";
  v28 = "{";
  v5 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v5 == -1)
    goto LABEL_18;
  v18 = (uint64_t)&v24;
  ((void (*)(uint64_t *, uint64_t))off_24CA0DFD8[v5])(&v18, a1);
  v7 = *a2;
  v8 = **a2;
  v23 = *((_DWORD *)*a2 + 2);
  v22 = v8;
  v18 = 0x100000003;
  v19 = 3;
  v20 = &v22;
  v21 = 0;
  sub_20E9F6DE4((unsigned int *)&v18, __p);
  v24 = a1;
  v25 = (const char *)__p;
  v26 = a1;
  v27 = (const char *)__p;
  v28 = (const char *)__p;
  v9 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v9 == -1)
    sub_20E877AB8();
  v29 = &v24;
  ((void (*)(uint64_t **, uint64_t))off_24CA0DF78[v9])(&v29, a1);
  if (v17 < 0)
  {
    operator delete(__p[0]);
    v10 = a2[1];
    v11 = (uint64_t *)((char *)v7 + 12);
    if (v11 != v10)
    {
LABEL_12:
      do
      {
        v24 = a1;
        v25 = ",";
        v26 = a1;
        v27 = ",";
        v28 = ",";
        v12 = *(unsigned int *)(a1 + 24);
        if ((_DWORD)v12 == -1)
          goto LABEL_18;
        v18 = (uint64_t)&v24;
        ((void (*)(uint64_t *, uint64_t))off_24CA0DFD8[v12])(&v18, a1);
        v13 = *v11;
        v23 = *((_DWORD *)v11 + 2);
        v22 = v13;
        v18 = 0x100000003;
        v19 = 3;
        v20 = &v22;
        v21 = 0;
        sub_20E9F6DE4((unsigned int *)&v18, __p);
        v24 = a1;
        v25 = (const char *)__p;
        v26 = a1;
        v27 = (const char *)__p;
        v28 = (const char *)__p;
        v14 = *(unsigned int *)(a1 + 24);
        if ((_DWORD)v14 == -1)
          sub_20E877AB8();
        v29 = &v24;
        ((void (*)(uint64_t **, uint64_t))off_24CA0DF78[v14])(&v29, a1);
        if (v17 < 0)
          operator delete(__p[0]);
        v11 = (uint64_t *)((char *)v11 + 12);
      }
      while (v11 != v10);
    }
  }
  else
  {
    v10 = a2[1];
    v11 = (uint64_t *)((char *)v7 + 12);
    if (v11 != v10)
      goto LABEL_12;
  }
  v24 = a1;
  v25 = "}";
  v26 = a1;
  v27 = "}";
  v28 = "}";
  v15 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v15 == -1)
    goto LABEL_18;
  v18 = (uint64_t)&v24;
  return ((uint64_t (*)(uint64_t *, uint64_t))off_24CA0DFD8[v15])(&v18, a1);
}

void sub_20FF439BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF439E0(uint64_t a1, unsigned __int8 **a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  std::string v14;
  uint64_t v15;
  std::string *v16;
  uint64_t v17;
  std::string *v18;
  std::string *v19;
  uint64_t *v20;

  if (a2[1] - *a2 <= 0)
  {
    v15 = a1;
    v16 = (std::string *)"{}";
    v17 = a1;
    v18 = (std::string *)"{}";
    v19 = (std::string *)"{}";
    v9 = *(unsigned int *)(a1 + 24);
    if ((_DWORD)v9 != -1)
    {
      v14.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
      return ((uint64_t (*)(std::string *, uint64_t))off_24CA0DFC0[v9])(&v14, a1);
    }
    goto LABEL_19;
  }
  v15 = a1;
  v16 = (std::string *)"{";
  v17 = a1;
  v18 = (std::string *)"{";
  v19 = (std::string *)"{";
  v3 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_19;
  v14.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
  ((void (*)(std::string *, uint64_t))off_24CA0DFD8[v3])(&v14, a1);
  v5 = (uint64_t)*a2;
  std::to_string(&v14, **a2);
  v15 = a1;
  v16 = &v14;
  v17 = a1;
  v18 = &v14;
  v19 = &v14;
  v6 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v6 == -1)
    sub_20E877AB8();
  v20 = &v15;
  ((void (*)(uint64_t **, uint64_t))off_24CA0DF78[v6])(&v20, a1);
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v14.__r_.__value_.__l.__data_);
    v7 = a2[1];
    v8 = (unsigned __int8 *)(v5 + 1);
    if (v8 == v7)
      goto LABEL_16;
LABEL_12:
    while (1)
    {
      v15 = a1;
      v16 = (std::string *)",";
      v17 = a1;
      v18 = (std::string *)",";
      v19 = (std::string *)",";
      v11 = *(unsigned int *)(a1 + 24);
      if ((_DWORD)v11 == -1)
        break;
      v14.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
      ((void (*)(std::string *, uint64_t))off_24CA0DFD8[v11])(&v14, a1);
      std::to_string(&v14, *v8);
      v15 = a1;
      v16 = &v14;
      v17 = a1;
      v18 = &v14;
      v19 = &v14;
      v12 = *(unsigned int *)(a1 + 24);
      if ((_DWORD)v12 == -1)
        sub_20E877AB8();
      v20 = &v15;
      ((void (*)(uint64_t **, uint64_t))off_24CA0DF78[v12])(&v20, a1);
      if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v14.__r_.__value_.__l.__data_);
      if (++v8 == v7)
        goto LABEL_16;
    }
LABEL_19:
    sub_20E877AB8();
  }
  v7 = a2[1];
  v8 = (unsigned __int8 *)(v5 + 1);
  if (v8 != v7)
    goto LABEL_12;
LABEL_16:
  v15 = a1;
  v16 = (std::string *)"}";
  v17 = a1;
  v18 = (std::string *)"}";
  v19 = (std::string *)"}";
  v13 = *(unsigned int *)(a1 + 24);
  if ((_DWORD)v13 == -1)
    goto LABEL_19;
  v14.__r_.__value_.__r.__words[0] = (std::string::size_type)&v15;
  return ((uint64_t (*)(std::string *, uint64_t))off_24CA0DFD8[v13])(&v14, a1);
}

void sub_20FF43C08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF43C2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *__p[2];
  char v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  void **v18;
  void **v19;
  uint64_t *v20;

  if (!*(_BYTE *)a1)
  {
    v15 = *(_QWORD *)(a1 + 8);
    v16 = (void **)",";
    v17 = v15;
    v18 = (void **)",";
    v19 = (void **)",";
    v4 = *(unsigned int *)(v15 + 24);
    if ((_DWORD)v4 == -1)
      sub_20E877AB8();
    v9 = (uint64_t)&v15;
    ((void (*)(uint64_t *))off_24CA0DFD8[v4])(&v9);
  }
  *(_BYTE *)a1 = 0;
  v5 = *(_QWORD *)(a1 + 8);
  v13 = *a2;
  v14 = *((_DWORD *)a2 + 2);
  v9 = 0x100000003;
  v10 = 3;
  v11 = &v13;
  v12 = 0;
  sub_20E9F70CC((unsigned int *)&v9, __p);
  v15 = v5;
  v16 = __p;
  v17 = v5;
  v18 = __p;
  v19 = __p;
  v6 = *(unsigned int *)(v5 + 24);
  if ((_DWORD)v6 == -1)
    sub_20E877AB8();
  v20 = &v15;
  ((void (*)(uint64_t **, uint64_t))off_24CA0DF78[v6])(&v20, v5);
  if (v8 < 0)
    operator delete(__p[0]);
}

void sub_20FF43D48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

const char *sub_20FF43D68()
{
  return "Mesh IO";
}

double sub_20FF43D74@<D0>(int a1@<W1>, uint64_t a2@<X8>)
{
  double result;
  char *v4;
  char *v5;

  switch(a1)
  {
    case 0:
      *(_BYTE *)(a2 + 23) = 8;
      strcpy((char *)a2, "no error");
      break;
    case 1:
      *(_BYTE *)(a2 + 23) = 21;
      result = *(double *)"failed to open stream";
      strcpy((char *)a2, "failed to open stream");
      break;
    case 2:
      *(_BYTE *)(a2 + 23) = 14;
      strcpy((char *)a2, "index overflow");
      break;
    case 3:
      *(_BYTE *)(a2 + 23) = 18;
      result = *(double *)"unsupported format";
      strcpy((char *)a2, "unsupported format");
      break;
    case 4:
      v4 = (char *)operator new(0x20uLL);
      *(_QWORD *)a2 = v4;
      *(_OWORD *)(a2 + 8) = xmmword_2102DB480;
      strcpy(v4, "failed to read from stream");
      result = *(double *)"read from stream";
      break;
    case 5:
      v5 = (char *)operator new(0x20uLL);
      *(_QWORD *)a2 = v5;
      *(_OWORD *)(a2 + 8) = xmmword_2102DBFE0;
      strcpy(v5, "failed to write to stream");
      result = *(double *)" write to stream";
      break;
    default:
      *(_BYTE *)(a2 + 23) = 18;
      result = *(double *)"unknown error code";
      strcpy((char *)a2, "unknown error code");
      break;
  }
  return result;
}

void sub_20FF43F14(uint64_t a1, unsigned int a2, __int128 *a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  unsigned __int8 v9;
  uint64_t v10;
  int v11;
  void *v12;
  int v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  char v20;
  char v21;
  void *v22;
  char v23;
  void *v24;
  char v25;
  char v26;
  char v27;
  void *__p;
  __int128 v29;
  unsigned __int8 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  unsigned __int8 v36;
  char v37;
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[4];

  v40[2] = *MEMORY[0x24BDAC8D0];
  sub_20E89EFE4(__dst, a3);
  v9 = atomic_load((unsigned __int8 *)&qword_254A6C9D0);
  if ((v9 & 1) == 0 && __cxa_guard_acquire(&qword_254A6C9D0))
  {
    __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_254A57690, &dword_20E81F000);
    __cxa_guard_release(&qword_254A6C9D0);
  }
  sub_20E89EFE4(&__p, (__int128 *)__dst);
  v10 = a2;
  if (!v37)
  {
    *(_QWORD *)a1 = a2;
    *(_QWORD *)(a1 + 8) = &off_254A57690;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    goto LABEL_19;
  }
  v11 = v30;
  if (v30)
  {
    v12 = __p;
    v40[0] = v29;
    *(_QWORD *)((char *)v40 + 7) = *(_QWORD *)((char *)&v29 + 7);
    LOBYTE(a2) = HIBYTE(v29);
    v29 = 0uLL;
    __p = 0;
    v13 = v36;
    if (v36)
      goto LABEL_5;
  }
  else
  {
    v12 = 0;
    v13 = v36;
    if (v36)
    {
LABEL_5:
      v14 = v31;
      v39[0] = v32;
      *(_QWORD *)((char *)v39 + 7) = *(_QWORD *)((char *)&v32 + 7);
      v6 = HIBYTE(v32);
      v31 = 0;
      v32 = 0uLL;
      v5 = v33;
      v3 = v34;
      v38[0] = v35;
      *(_QWORD *)((char *)v38 + 7) = *(_QWORD *)((char *)&v35 + 7);
      v4 = HIBYTE(v35);
      v34 = 0;
      v35 = 0uLL;
      if (!v30)
        goto LABEL_12;
      goto LABEL_10;
    }
  }
  v14 = 0;
  if (!v30)
    goto LABEL_12;
LABEL_10:
  if (SHIBYTE(v29) < 0)
  {
    v18 = v10;
    operator delete(__p);
    *(_QWORD *)a1 = v18;
    *(_QWORD *)(a1 + 8) = &off_254A57690;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    v15 = (_BYTE *)(a1 + 112);
    *(_BYTE *)(a1 + 40) = 0;
LABEL_13:
    v16 = v40[0];
    *(_QWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 24) = v16;
    *(_QWORD *)(a1 + 31) = *(_QWORD *)((char *)v40 + 7);
    *(_BYTE *)(a1 + 39) = a2;
    v40[0] = 0;
    *(_QWORD *)((char *)v40 + 7) = 0;
    *(_BYTE *)(a1 + 40) = 1;
    LOBYTE(a2) = 0;
    v12 = 0;
    goto LABEL_14;
  }
LABEL_12:
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = &off_254A57690;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  v15 = (_BYTE *)(a1 + 112);
  *(_BYTE *)(a1 + 40) = 0;
  if (v11)
    goto LABEL_13;
LABEL_14:
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (v13)
  {
    v17 = v39[0];
    *(_QWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 56) = v17;
    *(_QWORD *)(a1 + 63) = *(_QWORD *)((char *)v39 + 7);
    *(_BYTE *)(a1 + 71) = v6;
    v39[0] = 0;
    *(_QWORD *)((char *)v39 + 7) = 0;
    *(_QWORD *)(a1 + 72) = v5;
    *(_QWORD *)(a1 + 80) = v3;
    *(_QWORD *)(a1 + 88) = v38[0];
    *(_QWORD *)(a1 + 95) = *(_QWORD *)((char *)v38 + 7);
    *(_BYTE *)(a1 + 103) = v4;
    v38[0] = 0;
    *(_QWORD *)((char *)v38 + 7) = 0;
    *(_BYTE *)(a1 + 104) = 1;
  }
  *v15 = 1;
  if (v11 && (a2 & 0x80) != 0)
    operator delete(v12);
LABEL_19:
  if (!v27)
    return;
  if (v26)
  {
    if ((v25 & 0x80000000) == 0)
    {
      if ((v23 & 0x80000000) == 0)
        goto LABEL_23;
LABEL_28:
      operator delete(v22);
      if (!v21)
        return;
      goto LABEL_24;
    }
    operator delete(v24);
    if (v23 < 0)
      goto LABEL_28;
  }
LABEL_23:
  if (!v21)
    return;
LABEL_24:
  if (v20 < 0)
    operator delete(__dst[0]);
}

void sub_20FF441E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E89F09C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF441FC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  std::string *v6;
  _BOOL4 v8;
  std::string *v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  std::__shared_weak_count *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  std::string::size_type v33;
  std::string *p_p;
  unint64_t v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  std::string *v39;
  std::string::size_type size;
  uint64_t v41;
  uint64_t i;
  _QWORD *v43;
  _QWORD *v44;
  std::string::size_type v45;
  std::string *v46;
  unint64_t v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  std::string *v51;
  std::string::size_type v52;
  uint64_t v53;
  uint64_t j;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  std::string::size_type v58;
  std::string *v59;
  unint64_t v60;
  const void *v61;
  uint64_t v62;
  uint64_t v63;
  std::string *v64;
  std::string::size_type v65;
  uint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  std::string::size_type v76;
  std::string *v77;
  unint64_t v78;
  const void *v79;
  uint64_t v80;
  uint64_t v81;
  std::string *v82;
  std::string::size_type v83;
  int v84;
  uint64_t v85;
  unint64_t *p_shared_owners;
  unint64_t v87;
  int v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  __int128 v97;
  char v98;
  char v99;
  void *v100;
  char v101;
  void *v102;
  char v103;
  char v104;
  char v105;
  uint64_t (**v106)();
  __int128 v107;
  std::string __p;
  _BYTE v109[32];
  uint64_t v110;
  const void *v111;
  __int128 v112;
  const void *v113;
  unint64_t v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  int v119;
  uint64_t v120;

  v6 = (std::string *)a1;
  if (*(char *)(a1 + 23) < 0)
  {
    v6 = *(std::string **)a1;
    if (!*(_QWORD *)a1)
    {
      v8 = sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Mesh/src/TriMeshIO.cpp", 242, (uint64_t)"filepath", 8, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0);
      v6 = 0;
      if (v8)
        abort();
    }
  }
  v107 = 0uLL;
  v106 = &off_24CA1F288;
  memset(&__p, 0, sizeof(__p));
  v9 = (std::string *)((char *)v6 - 1);
  do
  {
    v10 = v9->__r_.__value_.__s.__data_[1];
    v9 = (std::string *)((char *)v9 + 1);
  }
  while (v10);
  sub_20E8A9678(&__p, v6, v9);
  sub_210224144((const std::__fs::filesystem::path *)&__p, 0x30u, a3, v109);
  v11 = *(_OWORD *)&v109[8];
  *(_QWORD *)&v109[8] = 0;
  *(_QWORD *)&v109[16] = 0;
  v107 = v11;
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    v12 = v11;
    if ((_QWORD)v11)
      goto LABEL_8;
LABEL_20:
    v14 = 1;
    v15 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
    if (!*((_QWORD *)&v107 + 1))
      goto LABEL_142;
    goto LABEL_138;
  }
  v96 = v11;
  operator delete(__p.__r_.__value_.__l.__data_);
  v12 = v96;
  if (!v96)
    goto LABEL_20;
LABEL_8:
  v94 = a4;
  v95 = (_QWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 16))(v12);
  if (*((_DWORD *)a2 + 26) >= 2u
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Mesh/src/TriMeshIO.cpp", 168, (uint64_t)"(mesh.normals_type == TriMeshMetadataType::PerVertex || mesh.normals_type == TriMeshMetadataType::Unknown)", 106, (uint64_t)"obj export requires per-vertex normals", 38, (void (*)(void **))sub_21023DDB0))
  {
    goto LABEL_173;
  }
  if (*((_DWORD *)a2 + 16) >= 2u
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Mesh/src/TriMeshIO.cpp", 171, (uint64_t)"(mesh.colors_type == TriMeshMetadataType::PerVertex || mesh.colors_type == TriMeshMetadataType::Unknown)", 104, (uint64_t)"obj export requires per-vertex colors", 37, (void (*)(void **))sub_21023DDB0))
  {
    goto LABEL_173;
  }
  v13 = a2[5] - a2[4];
  if (v13)
  {
    if (v13 != a2[1] - *a2
      && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Mesh/src/TriMeshIO.cpp", 173, (uint64_t)"(mesh.colors.size() == 0 || mesh.colors.size() == mesh.vertices.size())", 71, (uint64_t)"mesh's #colors must be either zero or equal to #vertices", 56, (void (*)(void **))sub_21023DDB0))
    {
      goto LABEL_173;
    }
  }
  if (a2[22] == a2[23])
  {
    if (a2[26] == a2[27]
      || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Mesh/src/TriMeshIO.cpp", 179, (uint64_t)"(mesh.tex_faces.empty())", 24, (uint64_t)"for meshes without texture coords, mesh's #tex_faces must be zero", 65, (void (*)(void **))sub_21023DDB0))
    {
      goto LABEL_24;
    }
LABEL_173:
    abort();
  }
  if (a2[27] - a2[26] != a2[15] - a2[14]
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Mesh/src/TriMeshIO.cpp", 176, (uint64_t)"(mesh.tex_faces.size() == mesh.faces.size())", 44, (uint64_t)"for meshes with texture coords, mesh's #tex_faces must be equal to #faces", 73, (void (*)(void **))sub_21023DDB0))
  {
    goto LABEL_173;
  }
LABEL_24:
  v92 = a2[26];
  v93 = a2[27];
  v90 = a2[14];
  v91 = a2[15];
  v17 = *a2;
  v16 = a2[1];
  v19 = a2[4];
  v18 = a2[5];
  sub_20E863438((uint64_t)v109);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)&v109[16] - 24) + 32] = 8;
  if (v16 - v17 == v18 - v19)
  {
    if (a2[1] != *a2)
    {
      v20 = 0;
      v21 = 0;
      do
      {
        sub_20E86A980(&v109[16], (uint64_t)"v ", 2);
        v22 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v22, (uint64_t)" ", 1);
        v23 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v23, (uint64_t)" ", 1);
        v24 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v24, (uint64_t)" ", 1);
        v25 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v25, (uint64_t)" ", 1);
        v26 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v26, (uint64_t)" ", 1);
        v27 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v27, (uint64_t)"\n", 1);
        ++v21;
        v20 += 12;
      }
      while (v21 < 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 2));
    }
  }
  else
  {
    v28 = *a2;
    v29 = a2[1];
    if (*a2 != v29)
    {
      do
      {
        sub_20E86A980(&v109[16], (uint64_t)"v ", 2);
        v30 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v30, (uint64_t)" ", 1);
        v31 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v31, (uint64_t)" ", 1);
        v32 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v32, (uint64_t)"\n", 1);
        v28 += 12;
      }
      while (v28 != v29);
    }
  }
  if ((v119 & 0x10) != 0)
  {
    v35 = v118;
    if (v118 < v114)
    {
      v118 = v114;
      v35 = v114;
    }
    v36 = v113;
    v33 = v35 - (_QWORD)v113;
    if (v35 - (unint64_t)v113 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_163;
  }
  else
  {
    if ((v119 & 8) == 0)
    {
      v33 = 0;
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
      p_p = &__p;
      goto LABEL_44;
    }
    v36 = v111;
    v33 = *((_QWORD *)&v112 + 1) - (_QWORD)v111;
    if (*((_QWORD *)&v112 + 1) - (_QWORD)v111 > 0x7FFFFFFFFFFFFFF7uLL)
LABEL_163:
      sub_20E860B7C();
  }
  if (v33 >= 0x17)
  {
    v37 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17)
      v37 = v33 | 7;
    v38 = v37 + 1;
    p_p = (std::string *)operator new(v37 + 1);
    __p.__r_.__value_.__l.__size_ = v33;
    __p.__r_.__value_.__r.__words[2] = v38 | 0x8000000000000000;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    goto LABEL_43;
  }
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = v33;
  p_p = &__p;
  if (v33)
LABEL_43:
    memmove(p_p, v36, v33);
LABEL_44:
  p_p->__r_.__value_.__s.__data_[v33] = 0;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v39 = &__p;
  else
    v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    size = __p.__r_.__value_.__l.__size_;
  sub_20E86A980(v95, (uint64_t)v39, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v117) & 0x80000000) == 0)
      goto LABEL_52;
  }
  else if ((SHIBYTE(v117) & 0x80000000) == 0)
  {
    goto LABEL_52;
  }
  operator delete(*((void **)&v115 + 1));
LABEL_52:
  *((_QWORD *)&v115 + 1) = 0;
  v116 = 0;
  v117 = 0;
  sub_20E8B469C((uint64_t)&v109[24]);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)&v109[16] - 24) + 32] = 8;
  v41 = a2[22];
  for (i = a2[23]; v41 != i; v41 += 8)
  {
    sub_20E86A980(&v109[16], (uint64_t)"vt ", 3);
    v43 = (_QWORD *)std::ostream::operator<<();
    sub_20E86A980(v43, (uint64_t)" ", 1);
    v44 = (_QWORD *)std::ostream::operator<<();
    sub_20E86A980(v44, (uint64_t)"\n", 1);
  }
  if ((v119 & 0x10) != 0)
  {
    v47 = v118;
    if (v118 < v114)
    {
      v118 = v114;
      v47 = v114;
    }
    v48 = v113;
    v45 = v47 - (_QWORD)v113;
    if (v47 - (unint64_t)v113 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_165;
  }
  else
  {
    if ((v119 & 8) == 0)
    {
      v45 = 0;
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
      v46 = &__p;
      goto LABEL_69;
    }
    v48 = v111;
    v45 = *((_QWORD *)&v112 + 1) - (_QWORD)v111;
    if (*((_QWORD *)&v112 + 1) - (_QWORD)v111 > 0x7FFFFFFFFFFFFFF7uLL)
LABEL_165:
      sub_20E860B7C();
  }
  if (v45 >= 0x17)
  {
    v49 = (v45 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v45 | 7) != 0x17)
      v49 = v45 | 7;
    v50 = v49 + 1;
    v46 = (std::string *)operator new(v49 + 1);
    __p.__r_.__value_.__l.__size_ = v45;
    __p.__r_.__value_.__r.__words[2] = v50 | 0x8000000000000000;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v46;
    goto LABEL_68;
  }
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = v45;
  v46 = &__p;
  if (v45)
LABEL_68:
    memmove(v46, v48, v45);
LABEL_69:
  v46->__r_.__value_.__s.__data_[v45] = 0;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v51 = &__p;
  else
    v51 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v52 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v52 = __p.__r_.__value_.__l.__size_;
  sub_20E86A980(v95, (uint64_t)v51, v52);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v117) & 0x80000000) == 0)
      goto LABEL_77;
  }
  else if ((SHIBYTE(v117) & 0x80000000) == 0)
  {
    goto LABEL_77;
  }
  operator delete(*((void **)&v115 + 1));
LABEL_77:
  *((_QWORD *)&v115 + 1) = 0;
  v116 = 0;
  v117 = 0;
  sub_20E8B469C((uint64_t)&v109[24]);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)&v109[16] - 24) + 32] = 8;
  v53 = a2[9];
  for (j = a2[10]; v53 != j; v53 += 12)
  {
    sub_20E86A980(&v109[16], (uint64_t)"vn ", 3);
    v55 = (_QWORD *)std::ostream::operator<<();
    sub_20E86A980(v55, (uint64_t)" ", 1);
    v56 = (_QWORD *)std::ostream::operator<<();
    sub_20E86A980(v56, (uint64_t)" ", 1);
    v57 = (_QWORD *)std::ostream::operator<<();
    sub_20E86A980(v57, (uint64_t)"\n", 1);
  }
  if ((v119 & 0x10) != 0)
  {
    v60 = v118;
    if (v118 < v114)
    {
      v118 = v114;
      v60 = v114;
    }
    v61 = v113;
    v58 = v60 - (_QWORD)v113;
    if (v60 - (unint64_t)v113 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_167;
  }
  else
  {
    if ((v119 & 8) == 0)
    {
      v58 = 0;
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
      v59 = &__p;
      goto LABEL_94;
    }
    v61 = v111;
    v58 = *((_QWORD *)&v112 + 1) - (_QWORD)v111;
    if (*((_QWORD *)&v112 + 1) - (_QWORD)v111 > 0x7FFFFFFFFFFFFFF7uLL)
LABEL_167:
      sub_20E860B7C();
  }
  if (v58 >= 0x17)
  {
    v62 = (v58 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v58 | 7) != 0x17)
      v62 = v58 | 7;
    v63 = v62 + 1;
    v59 = (std::string *)operator new(v62 + 1);
    __p.__r_.__value_.__l.__size_ = v58;
    __p.__r_.__value_.__r.__words[2] = v63 | 0x8000000000000000;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v59;
    goto LABEL_93;
  }
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = v58;
  v59 = &__p;
  if (v58)
LABEL_93:
    memmove(v59, v61, v58);
LABEL_94:
  v59->__r_.__value_.__s.__data_[v58] = 0;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v64 = &__p;
  else
    v64 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v65 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v65 = __p.__r_.__value_.__l.__size_;
  sub_20E86A980(v95, (uint64_t)v64, v65);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v117) & 0x80000000) == 0)
      goto LABEL_102;
  }
  else if ((SHIBYTE(v117) & 0x80000000) == 0)
  {
    goto LABEL_102;
  }
  operator delete(*((void **)&v115 + 1));
LABEL_102:
  *((_QWORD *)&v115 + 1) = 0;
  v116 = 0;
  v117 = 0;
  sub_20E8B469C((uint64_t)&v109[24]);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)&v109[16] - 24) + 32] = 8;
  if (a2[15] != a2[14])
  {
    if (v93 - v92 == v91 - v90)
    {
      v66 = 0;
      v67 = 0;
      do
      {
        sub_20E86A980(&v109[16], (uint64_t)"f", 1);
        sub_20E86A980(&v109[16], (uint64_t)" ", 1);
        v68 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v68, (uint64_t)"/", 1);
        v69 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v69, (uint64_t)"/", 1);
        std::ostream::operator<<();
        sub_20E86A980(&v109[16], (uint64_t)" ", 1);
        v70 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v70, (uint64_t)"/", 1);
        v71 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v71, (uint64_t)"/", 1);
        std::ostream::operator<<();
        sub_20E86A980(&v109[16], (uint64_t)" ", 1);
        v72 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v72, (uint64_t)"/", 1);
        v73 = (_QWORD *)std::ostream::operator<<();
        sub_20E86A980(v73, (uint64_t)"/", 1);
        std::ostream::operator<<();
        sub_20E86A980(&v109[16], (uint64_t)"\n", 1);
        ++v67;
        v66 += 12;
      }
      while (v67 < 0xAAAAAAAAAAAAAAABLL * ((a2[15] - a2[14]) >> 2));
    }
    else
    {
      v74 = 0;
      v75 = 0;
      do
      {
        sub_20E86A980(&v109[16], (uint64_t)"f", 1);
        sub_20E86A980(&v109[16], (uint64_t)" ", 1);
        std::ostream::operator<<();
        sub_20E86A980(&v109[16], (uint64_t)" ", 1);
        std::ostream::operator<<();
        sub_20E86A980(&v109[16], (uint64_t)" ", 1);
        std::ostream::operator<<();
        sub_20E86A980(&v109[16], (uint64_t)"\n", 1);
        ++v75;
        v74 += 12;
      }
      while (v75 < 0xAAAAAAAAAAAAAAABLL * ((a2[15] - a2[14]) >> 2));
    }
  }
  if ((v119 & 0x10) != 0)
  {
    v78 = v118;
    if (v118 < v114)
    {
      v118 = v114;
      v78 = v114;
    }
    v79 = v113;
    v76 = v78 - (_QWORD)v113;
    if (v78 - (unint64_t)v113 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_169;
  }
  else
  {
    if ((v119 & 8) == 0)
    {
      v76 = 0;
      *((_BYTE *)&__p.__r_.__value_.__s + 23) = 0;
      v77 = &__p;
      goto LABEL_124;
    }
    v79 = v111;
    v76 = *((_QWORD *)&v112 + 1) - (_QWORD)v111;
    if (*((_QWORD *)&v112 + 1) - (_QWORD)v111 > 0x7FFFFFFFFFFFFFF7uLL)
LABEL_169:
      sub_20E860B7C();
  }
  if (v76 >= 0x17)
  {
    v80 = (v76 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v76 | 7) != 0x17)
      v80 = v76 | 7;
    v81 = v80 + 1;
    v77 = (std::string *)operator new(v80 + 1);
    __p.__r_.__value_.__l.__size_ = v76;
    __p.__r_.__value_.__r.__words[2] = v81 | 0x8000000000000000;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v77;
    goto LABEL_123;
  }
  *((_BYTE *)&__p.__r_.__value_.__s + 23) = v76;
  v77 = &__p;
  if (v76)
LABEL_123:
    memmove(v77, v79, v76);
LABEL_124:
  v77->__r_.__value_.__s.__data_[v76] = 0;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v82 = &__p;
  else
    v82 = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v83 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  else
    v83 = __p.__r_.__value_.__l.__size_;
  sub_20E86A980(v95, (uint64_t)v82, v83);
  a4 = v94;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  v84 = *(_DWORD *)((char *)v95 + *(_QWORD *)(*v95 - 24) + 32);
  *(_QWORD *)v109 = *MEMORY[0x24BEDB7F0];
  v85 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  *(_QWORD *)&v109[*(_QWORD *)(*(_QWORD *)v109 - 24)] = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  *(_QWORD *)&v109[16] = v85;
  *(_QWORD *)&v109[24] = MEMORY[0x24BEDB848] + 16;
  if (SHIBYTE(v117) < 0)
    operator delete(*((void **)&v115 + 1));
  if ((v84 & 5) != 0)
    v14 = 5;
  else
    v14 = 0;
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x212BC6290](&v120);
  v15 = (std::__shared_weak_count *)*((_QWORD *)&v107 + 1);
  if (*((_QWORD *)&v107 + 1))
  {
LABEL_138:
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v87 = __ldaxr(p_shared_owners);
    while (__stlxr(v87 - 1, p_shared_owners));
    if (!v87)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
LABEL_142:
  if (!v14)
  {
    *(_BYTE *)(a4 + 120) = 1;
    return;
  }
  LOBYTE(v97) = 0;
  v105 = 0;
  sub_20FF43F14((uint64_t)v109, v14, &v97);
  *(_OWORD *)a4 = *(_OWORD *)v109;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (!(_BYTE)v118)
  {
    *(_BYTE *)(a4 + 120) = 0;
    if (!v105)
      return;
LABEL_155:
    if (!v104)
      goto LABEL_158;
    if (v103 < 0)
    {
      operator delete(v102);
      if ((v101 & 0x80000000) == 0)
      {
LABEL_158:
        if (!v99)
          return;
LABEL_159:
        if (v98 < 0)
          operator delete((void *)v97);
        return;
      }
    }
    else if ((v101 & 0x80000000) == 0)
    {
      goto LABEL_158;
    }
    operator delete(v100);
    if (!v99)
      return;
    goto LABEL_159;
  }
  *(_BYTE *)(a4 + 40) = 0;
  v88 = v111;
  if ((_BYTE)v111)
  {
    *(_OWORD *)(a4 + 16) = *(_OWORD *)&v109[16];
    *(_QWORD *)(a4 + 32) = v110;
    *(_QWORD *)&v109[24] = 0;
    v110 = 0;
    *(_QWORD *)&v109[16] = 0;
    *(_BYTE *)(a4 + 40) = 1;
  }
  *(_BYTE *)(a4 + 48) = 0;
  *(_BYTE *)(a4 + 104) = 0;
  if ((_BYTE)v117)
  {
    *(_OWORD *)(a4 + 48) = v112;
    v89 = v114;
    *(_QWORD *)(a4 + 64) = v113;
    *(_QWORD *)(a4 + 72) = v89;
    *(_OWORD *)(a4 + 80) = v115;
    *(_QWORD *)(a4 + 96) = v116;
    *(_BYTE *)(a4 + 104) = 1;
  }
  *(_BYTE *)(a4 + 112) = 1;
  *(_BYTE *)(a4 + 120) = 0;
  if (v88 && SHIBYTE(v110) < 0)
    operator delete(*(void **)&v109[16]);
  if (v105)
    goto LABEL_155;
}

void sub_20FF450CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  if (a39 < 0)
  {
    operator delete(__p);
    sub_20E863784((uint64_t)&a40);
    sub_21022EBB8((uint64_t)&a31);
    _Unwind_Resume(a1);
  }
  sub_20E863784((uint64_t)&a40);
  sub_21022EBB8((uint64_t)&a31);
  _Unwind_Resume(a1);
}

void sub_20FF451D0(std::error_category *a1)
{
  std::error_category::~error_category(a1);
  JUMPOUT(0x212BC6398);
}

_DWORD *sub_20FF451F4(_DWORD ***a1)
{
  return sub_20E9EB2F8(**a1, (char *)(*a1)[1]);
}

void sub_20FF45200(uint64_t a1, uint64_t a2)
{
  sub_20FF45210((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

void sub_20FF45210(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_20E860B7C();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24CA0E050[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_20E877C80((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_20FF453C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_20FF45408(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_20FF45500((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_20E860B7C();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_20FF454F8(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_20FF45500(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_20E867F44();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_20E877A38();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_20E860B7C();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_20FF456FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20E877E3C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF45710(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  int64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  __int128 *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  int v67;
  int v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  int64_t v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _OWORD *v85;
  __int128 *v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  char *v99;
  int v100;
  int v101;
  _QWORD *v103;
  int v104;
  _QWORD **v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;

  v4 = (a2[1] - *a2) >> 2;
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20FF46960((uint64_t)&v106, 0xAAAAAAAAAAAAAAABLL * v4);
  v5 = *a2;
  v6 = a2[1];
  if (*a2 == v6)
  {
    v7 = (unint64_t)v107;
  }
  else
  {
    v7 = (unint64_t)v107;
    do
    {
      v9 = *(_DWORD *)(v5 + 8);
      v103 = *(_QWORD **)v5;
      v104 = v9;
      if (v7 < (unint64_t)v108)
      {
        v8 = (uint64_t)v103;
        *(_DWORD *)(v7 + 8) = v104;
        *(_QWORD *)v7 = v8;
        v7 += 12;
      }
      else
      {
        v7 = sub_20FF46AC0((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v7;
      v5 += 12;
    }
    while (v5 != v6);
  }
  *(_QWORD *)a1 = v106;
  *(_QWORD *)(a1 + 8) = v7;
  v10 = v109;
  *(_QWORD *)(a1 + 16) = v108;
  *(_QWORD *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 16);
  v11 = 0xAAAAAAAAAAAAAAABLL * ((a2[5] - a2[4]) >> 2);
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20FF46960((uint64_t)&v106, v11);
  v12 = a2[4];
  v13 = a2[5];
  if (v12 == v13)
  {
    v14 = (unint64_t)v107;
  }
  else
  {
    v14 = (unint64_t)v107;
    do
    {
      v16 = *(_DWORD *)(v12 + 8);
      v103 = *(_QWORD **)v12;
      v104 = v16;
      if (v14 < (unint64_t)v108)
      {
        v15 = (uint64_t)v103;
        *(_DWORD *)(v14 + 8) = v104;
        *(_QWORD *)v14 = v15;
        v14 += 12;
      }
      else
      {
        v14 = sub_20FF46AC0((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v14;
      v12 += 12;
    }
    while (v12 != v13);
  }
  *(_QWORD *)(a1 + 40) = v106;
  *(_QWORD *)(a1 + 48) = v14;
  v17 = v109;
  *(_QWORD *)(a1 + 56) = v108;
  *(_QWORD *)(a1 + 64) = v17;
  *(_DWORD *)(a1 + 72) = *((_DWORD *)a2 + 26);
  v18 = 0xAAAAAAAAAAAAAAABLL * ((a2[10] - a2[9]) >> 2);
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20FF46960((uint64_t)&v106, v18);
  v19 = a2[9];
  v20 = a2[10];
  if (v19 == v20)
  {
    v21 = (unint64_t)v107;
  }
  else
  {
    v21 = (unint64_t)v107;
    do
    {
      v23 = *(_DWORD *)(v19 + 8);
      v103 = *(_QWORD **)v19;
      v104 = v23;
      if (v21 < (unint64_t)v108)
      {
        v22 = (uint64_t)v103;
        *(_DWORD *)(v21 + 8) = v104;
        *(_QWORD *)v21 = v22;
        v21 += 12;
      }
      else
      {
        v21 = sub_20FF46AC0((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v21;
      v19 += 12;
    }
    while (v19 != v20);
  }
  v25 = v108;
  v24 = v109;
  *(_QWORD *)(a1 + 80) = v106;
  *(_QWORD *)(a1 + 88) = v21;
  *(_QWORD *)(a1 + 96) = v25;
  *(_QWORD *)(a1 + 104) = v24;
  *(_DWORD *)(a1 + 112) = *((_DWORD *)a2 + 68);
  sub_20FDFA7F4((_QWORD *)(a1 + 120), (uint64_t)(a2 + 30));
  *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 78);
  sub_20FDFA7F4((_QWORD *)(a1 + 160), (uint64_t)(a2 + 35));
  v26 = 0xAAAAAAAAAAAAAAABLL * ((a2[15] - a2[14]) >> 2);
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20FF46C48((uint64_t)&v106, v26);
  v27 = a2[14];
  v28 = a2[15];
  if (v27 == v28)
  {
    v29 = (unint64_t)v107;
  }
  else
  {
    v29 = (unint64_t)v107;
    do
    {
      v31 = *(_DWORD *)(v27 + 8);
      v103 = *(_QWORD **)v27;
      v104 = v31;
      if (v29 < (unint64_t)v108)
      {
        v30 = (uint64_t)v103;
        *(_DWORD *)(v29 + 8) = v104;
        *(_QWORD *)v29 = v30;
        v29 += 12;
      }
      else
      {
        v29 = sub_20FF46DA8((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v29;
      v27 += 12;
    }
    while (v27 != v28);
  }
  v33 = v108;
  v32 = v109;
  *(_QWORD *)(a1 + 192) = v106;
  *(_QWORD *)(a1 + 200) = v29;
  *(_QWORD *)(a1 + 208) = v33;
  *(_QWORD *)(a1 + 216) = v32;
  v35 = (char *)a2[18];
  v34 = (char *)a2[19];
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  v36 = v34 - v35;
  if (v34 != v35)
  {
    if ((v36 & 0x8000000000000000) != 0)
      sub_20FDFA718();
    v37 = (v36 >> 3);
    v38 = (char *)operator new(8 * v37);
    v106 = v38;
    v107 = v38;
    v108 = &v38[8 * v37];
    while (1)
    {
      v39 = *(_QWORD *)v35;
      if (v38 < v108)
      {
        *(_QWORD *)v38 = v39;
        v38 += 8;
      }
      else
      {
        v40 = (char *)(v38 - v106);
        v41 = (v38 - v106) >> 3;
        if ((unint64_t)(v41 + 1) >> 61)
          sub_20FDFA718();
        v42 = (v108 - v106) >> 2;
        if (v42 <= v41 + 1)
          v42 = v41 + 1;
        if ((unint64_t)(v108 - v106) >= 0x7FFFFFFFFFFFFFF8)
          v43 = 0x1FFFFFFFFFFFFFFFLL;
        else
          v43 = v42;
        if (v43)
        {
          LODWORD(v105) = v43;
          if (HIDWORD(v109) == -1)
            sub_20E877AB8();
          v103 = &v105;
          v44 = ((uint64_t (*)(_QWORD **, uint64_t *))off_24CA0E0A8[HIDWORD(v109)])(&v103, &v109);
          v46 = (char *)(v44 + 8 * v41);
          *(_QWORD *)v46 = v39;
          v38 = v46 + 8;
          v47 = (unint64_t)v106;
          v48 = (uint64_t)v107;
          v49 = v107 - v106;
          if (v107 != v106)
          {
LABEL_47:
            v51 = v49 - 8;
            if (v51 < 0x58)
              goto LABEL_110;
            if ((unint64_t)(v48 - v44 - (_QWORD)v40) < 0x20)
              goto LABEL_110;
            v52 = (v51 >> 3) + 1;
            v53 = 8 * (v52 & 0x3FFFFFFFFFFFFFFCLL);
            v54 = v48 - v53;
            v46 -= v53;
            v55 = (_OWORD *)(v44 + 8 * v41 - 16);
            v56 = (__int128 *)(v48 - 16);
            v57 = v52 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              v58 = *v56;
              *(v55 - 1) = *(v56 - 1);
              *v55 = v58;
              v55 -= 2;
              v56 -= 2;
              v57 -= 4;
            }
            while (v57);
            v48 = v54;
            if (v52 != (v52 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_110:
              do
              {
                v59 = *(_QWORD *)(v48 - 8);
                v48 -= 8;
                *((_QWORD *)v46 - 1) = v59;
                v46 -= 8;
              }
              while (v48 != v47);
            }
            v48 = (uint64_t)v106;
            v106 = v46;
            v107 = v38;
            v50 = v108;
            v108 = (char *)(v44 + 8 * v45);
            if (!v48)
              goto LABEL_33;
LABEL_54:
            v103 = (_QWORD *)v48;
            v104 = (unint64_t)&v50[-v48] >> 3;
            if (HIDWORD(v109) == -1)
              sub_20E877AB8();
            v105 = &v103;
            ((void (*)(_QWORD ***, uint64_t *))off_24CA0E0B8[HIDWORD(v109)])(&v105, &v109);
            goto LABEL_33;
          }
        }
        else
        {
          v44 = 0;
          v45 = 0;
          v46 = (char *)(8 * v41);
          *(_QWORD *)(8 * v41) = v39;
          v38 = (char *)(8 * v41 + 8);
          v47 = (unint64_t)v106;
          v48 = (uint64_t)v107;
          v49 = v107 - v106;
          if (v107 != v106)
            goto LABEL_47;
        }
        v106 = v46;
        v107 = v38;
        v50 = v108;
        v108 = (char *)(v44 + 8 * v45);
        if (v48)
          goto LABEL_54;
      }
LABEL_33:
      v107 = v38;
      v35 += 8;
      if (v35 == v34)
      {
        v60 = (unint64_t)v106;
        v36 = (unint64_t)v108;
        goto LABEL_58;
      }
    }
  }
  v60 = 0;
  v38 = 0;
LABEL_58:
  v61 = v109;
  *(_QWORD *)(a1 + 224) = v60;
  *(_QWORD *)(a1 + 232) = v38;
  *(_QWORD *)(a1 + 240) = v36;
  *(_QWORD *)(a1 + 248) = v61;
  v63 = (char *)a2[22];
  v62 = (char *)a2[23];
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  v64 = v62 - v63;
  if (v62 != v63)
  {
    if ((v64 & 0x8000000000000000) != 0)
      sub_20FDFA718();
    v65 = (v64 >> 3);
    v66 = (char *)operator new(8 * v65);
    v106 = v66;
    v107 = v66;
    v108 = &v66[8 * v65];
    while (1)
    {
      v68 = *(_DWORD *)v63;
      v67 = *((_DWORD *)v63 + 1);
      if (v66 < v108)
      {
        *(_DWORD *)v66 = v68;
        *((_DWORD *)v66 + 1) = v67;
        v66 += 8;
        goto LABEL_62;
      }
      v69 = (char *)(v66 - v106);
      v70 = (v66 - v106) >> 3;
      if ((unint64_t)(v70 + 1) >> 61)
        sub_20FDFA718();
      v71 = (v108 - v106) >> 2;
      if (v71 <= v70 + 1)
        v71 = v70 + 1;
      v72 = (unint64_t)(v108 - v106) >= 0x7FFFFFFFFFFFFFF8 ? 0x1FFFFFFFFFFFFFFFLL : v71;
      if (v72)
      {
        LODWORD(v105) = v72;
        if (HIDWORD(v109) == -1)
          sub_20E877AB8();
        v103 = &v105;
        v73 = ((uint64_t (*)(_QWORD **, uint64_t *))off_24CA0E0C8[HIDWORD(v109)])(&v103, &v109);
        v75 = (char *)(v73 + 8 * v70);
        *(_DWORD *)v75 = v68;
        *((_DWORD *)v75 + 1) = v67;
        v76 = (unint64_t)v106;
        v77 = (uint64_t)v107;
        v78 = v107 - v106;
        if (v107 == v106)
        {
LABEL_76:
          v66 = v75 + 8;
          v106 = v75;
          v107 = v75 + 8;
          v81 = v108;
          v108 = (char *)(v73 + 8 * v74);
          if (v77)
            goto LABEL_84;
          goto LABEL_62;
        }
      }
      else
      {
        v73 = 0;
        v74 = 0;
        v75 = (char *)(8 * v70);
        *(_DWORD *)v75 = v68;
        *((_DWORD *)v75 + 1) = v67;
        v76 = (unint64_t)v106;
        v77 = (uint64_t)v107;
        v78 = v107 - v106;
        if (v107 == v106)
          goto LABEL_76;
      }
      v79 = v78 - 8;
      if ((unint64_t)(v78 - 8) < 0x58)
        break;
      v80 = (unint64_t)v75;
      if ((unint64_t)(v77 - v73 - (_QWORD)v69) < 0x20)
        goto LABEL_82;
      v82 = (v79 >> 3) + 1;
      v83 = 8 * (v82 & 0x3FFFFFFFFFFFFFFCLL);
      v84 = v77 - v83;
      v80 = (unint64_t)&v75[-v83];
      v85 = (_OWORD *)(v73 + 8 * v70 - 16);
      v86 = (__int128 *)(v77 - 16);
      v87 = v82 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v88 = *v86;
        *(v85 - 1) = *(v86 - 1);
        *v85 = v88;
        v85 -= 2;
        v86 -= 2;
        v87 -= 4;
      }
      while (v87);
      v77 = v84;
      if (v82 != (v82 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_82;
LABEL_83:
      v77 = (uint64_t)v106;
      v66 = v75 + 8;
      v106 = (char *)v80;
      v107 = v75 + 8;
      v81 = v108;
      v108 = (char *)(v73 + 8 * v74);
      if (v77)
      {
LABEL_84:
        v103 = (_QWORD *)v77;
        v104 = (unint64_t)&v81[-v77] >> 3;
        if (HIDWORD(v109) == -1)
          sub_20E877AB8();
        v105 = &v103;
        ((void (*)(_QWORD ***, uint64_t *))off_24CA0E0D8[HIDWORD(v109)])(&v105, &v109);
      }
LABEL_62:
      v107 = v66;
      v63 += 8;
      if (v63 == v62)
      {
        v90 = (unint64_t)v106;
        v64 = (unint64_t)v108;
        goto LABEL_88;
      }
    }
    v80 = (unint64_t)v75;
    do
    {
LABEL_82:
      v89 = *(_QWORD *)(v77 - 8);
      v77 -= 8;
      *(_QWORD *)(v80 - 8) = v89;
      v80 -= 8;
    }
    while (v77 != v76);
    goto LABEL_83;
  }
  v90 = 0;
  v66 = 0;
LABEL_88:
  v91 = v109;
  *(_QWORD *)(a1 + 256) = v90;
  *(_QWORD *)(a1 + 264) = v66;
  *(_QWORD *)(a1 + 272) = v64;
  *(_QWORD *)(a1 + 280) = v91;
  v92 = 0xAAAAAAAAAAAAAAABLL * ((a2[27] - a2[26]) >> 2);
  HIDWORD(v109) = 0;
  v107 = 0;
  v108 = 0;
  v106 = 0;
  sub_20FF46C48((uint64_t)&v106, v92);
  v93 = a2[26];
  v94 = a2[27];
  if (v93 == v94)
  {
    v95 = (unint64_t)v107;
  }
  else
  {
    v95 = (unint64_t)v107;
    do
    {
      v97 = *(_DWORD *)(v93 + 8);
      v103 = *(_QWORD **)v93;
      v104 = v97;
      if (v95 < (unint64_t)v108)
      {
        v96 = (uint64_t)v103;
        *(_DWORD *)(v95 + 8) = v104;
        *(_QWORD *)v95 = v96;
        v95 += 12;
      }
      else
      {
        v95 = sub_20FF46DA8((unint64_t *)&v106, (uint64_t *)&v103);
      }
      v107 = (char *)v95;
      v93 += 12;
    }
    while (v93 != v94);
  }
  v99 = v108;
  v98 = v109;
  *(_QWORD *)(a1 + 288) = v106;
  *(_QWORD *)(a1 + 296) = v95;
  *(_QWORD *)(a1 + 304) = v99;
  *(_QWORD *)(a1 + 312) = v98;
  *(_BYTE *)(a1 + 320) = 0;
  *(_BYTE *)(a1 + 344) = 0;
  *(_DWORD *)(a1 + 348) = *((_DWORD *)a2 + 88);
  sub_20FDFB0B0((_QWORD *)(a1 + 352), (uint64_t)(a2 + 40));
  if (*((_BYTE *)a2 + 380))
  {
    if (*(_BYTE *)(a1 + 344))
      *(_BYTE *)(a1 + 344) = 0;
    v100 = *((_DWORD *)a2 + 91);
    *(_QWORD *)(a1 + 320) = *(uint64_t *)((char *)a2 + 356);
    *(_DWORD *)(a1 + 328) = v100;
    v101 = *((_DWORD *)a2 + 94);
    *(_QWORD *)(a1 + 332) = a2[46];
    *(_DWORD *)(a1 + 340) = v101;
    *(_BYTE *)(a1 + 344) = 1;
  }
  return a1;
}

void sub_20FF45FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t *a11)
{
  uint64_t *v11;
  uint64_t *v12;

  sub_20FDE1CAC(v12);
  sub_20FDE1D38(v11 + 32);
  sub_20FDE1DB8(v11 + 28);
  sub_20FDE1CAC(v11 + 24);
  sub_20FDE1E38(a10);
  sub_20FDE1E38(a11);
  sub_20FDE1EB4(v11 + 10);
  sub_20FDE1EB4(v11 + 5);
  sub_20FDE1EB4(v11);
  _Unwind_Resume(a1);
}

void sub_20FF460B8(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  unint64_t v41;
  BOOL v42;
  size_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  _OWORD *v83;
  __int128 *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  _OWORD *v117;
  __int128 *v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  int v143;
  _BYTE *v144;
  _BYTE *v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  BOOL v149;
  unint64_t v150;
  char *v151;
  int v152;
  char **v153;

  sub_20FF41CA8(a3, a2);
  v6 = *a1;
  v5 = a1[1];
  v7 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 2);
  v9 = *(_QWORD *)a3;
  v8 = *(_QWORD *)(a3 + 8);
  v10 = 0xAAAAAAAAAAAAAAABLL * ((v8 - *(_QWORD *)a3) >> 2);
  if (v7 <= v10)
  {
    if (v7 < v10)
    {
      v8 = v9 + 4 * ((v5 - *a1) >> 2);
      *(_QWORD *)(a3 + 8) = v8;
    }
  }
  else
  {
    sub_20FF46F30(a3, v7 - v10);
    v6 = *a1;
    v5 = a1[1];
    v9 = *(_QWORD *)a3;
    v8 = *(_QWORD *)(a3 + 8);
  }
  if (v6 != v5 || v9 != v8)
  {
    v11 = v9 + 12;
    v12 = v6 + 12;
    do
    {
      do
      {
        v13 = v11;
        v14 = v12;
        v15 = *(_QWORD *)(v12 - 12);
        *(_DWORD *)(v11 - 4) = *(_DWORD *)(v14 - 4);
        *(_QWORD *)(v11 - 12) = v15;
        v11 += 12;
        v12 = v14 + 12;
      }
      while (v14 != v5);
    }
    while (v13 != v8);
  }
  v16 = *(_QWORD *)(a3 + 32);
  *(_DWORD *)(a3 + 64) = *((_DWORD *)a1 + 8);
  v18 = a1[5];
  v17 = a1[6];
  v19 = 0xAAAAAAAAAAAAAAABLL * ((v17 - v18) >> 2);
  v20 = *(_QWORD *)(a3 + 40);
  v21 = 0xAAAAAAAAAAAAAAABLL * ((v20 - v16) >> 2);
  if (v19 <= v21)
  {
    if (v19 < v21)
    {
      v20 = v16 + 4 * ((v17 - v18) >> 2);
      *(_QWORD *)(a3 + 40) = v20;
    }
  }
  else
  {
    sub_20FF46F30(a3 + 32, v19 - v21);
    v18 = a1[5];
    v17 = a1[6];
    v16 = *(_QWORD *)(a3 + 32);
    v20 = *(_QWORD *)(a3 + 40);
  }
  if (v18 != v17 || v16 != v20)
  {
    v22 = v16 + 12;
    v23 = v18 + 12;
    do
    {
      do
      {
        v24 = v22;
        v25 = v23;
        v26 = *(_QWORD *)(v23 - 12);
        *(_DWORD *)(v22 - 4) = *(_DWORD *)(v25 - 4);
        *(_QWORD *)(v22 - 12) = v26;
        v22 += 12;
        v23 = v25 + 12;
      }
      while (v25 != v17);
    }
    while (v24 != v20);
  }
  v27 = *(_QWORD *)(a3 + 72);
  *(_DWORD *)(a3 + 104) = *((_DWORD *)a1 + 18);
  v29 = a1[10];
  v28 = a1[11];
  v30 = 0xAAAAAAAAAAAAAAABLL * ((v28 - v29) >> 2);
  v31 = *(_QWORD *)(a3 + 80);
  v32 = 0xAAAAAAAAAAAAAAABLL * ((v31 - v27) >> 2);
  if (v30 <= v32)
  {
    if (v30 < v32)
    {
      v31 = v27 + 4 * ((v28 - v29) >> 2);
      *(_QWORD *)(a3 + 80) = v31;
    }
  }
  else
  {
    sub_20FF46F30(a3 + 72, v30 - v32);
    v29 = a1[10];
    v28 = a1[11];
    v27 = *(_QWORD *)(a3 + 72);
    v31 = *(_QWORD *)(a3 + 80);
  }
  if (v29 != v28 || v27 != v31)
  {
    v33 = v27 + 12;
    v34 = v29 + 12;
    do
    {
      do
      {
        v35 = v33;
        v36 = v34;
        v37 = *(_QWORD *)(v34 - 12);
        *(_DWORD *)(v33 - 4) = *(_DWORD *)(v36 - 4);
        *(_QWORD *)(v33 - 12) = v37;
        v33 += 12;
        v34 = v36 + 12;
      }
      while (v36 != v28);
    }
    while (v35 != v31);
  }
  v38 = *(_QWORD *)(a3 + 240);
  *(_DWORD *)(a3 + 272) = *((_DWORD *)a1 + 28);
  v39 = (_BYTE *)a1[15];
  v40 = (_BYTE *)a1[16];
  v41 = *(_QWORD *)(a3 + 248) - v38;
  v42 = v40 - v39 >= v41;
  v43 = v40 - v39 - v41;
  if (v43 != 0 && v42)
  {
    sub_20FE00E0C(a3 + 240, v43);
    v39 = (_BYTE *)a1[15];
    v40 = (_BYTE *)a1[16];
  }
  else if (!v42)
  {
    *(_QWORD *)(a3 + 248) = v38 + v40 - v39;
  }
  if (v40 != v39)
    memmove(*(void **)(a3 + 240), v39, v40 - v39);
  *(_DWORD *)(a3 + 312) = *((_DWORD *)a1 + 38);
  v44 = (_BYTE *)a1[20];
  v45 = (_BYTE *)a1[21];
  v46 = *(_QWORD *)(a3 + 280);
  v47 = *(_QWORD *)(a3 + 288) - v46;
  v48 = v45 - v44 >= v47;
  v49 = v45 - v44 - v47;
  if (v49 != 0 && v48)
  {
    sub_20FE00E0C(a3 + 280, v49);
    v44 = (_BYTE *)a1[20];
    v45 = (_BYTE *)a1[21];
  }
  else if (!v48)
  {
    *(_QWORD *)(a3 + 288) = v46 + v45 - v44;
  }
  if (v45 != v44)
    memmove(*(void **)(a3 + 280), v44, v45 - v44);
  v51 = a1[24];
  v50 = a1[25];
  v52 = 0xAAAAAAAAAAAAAAABLL * ((v50 - v51) >> 2);
  v54 = *(_QWORD *)(a3 + 112);
  v53 = *(_QWORD *)(a3 + 120);
  v55 = 0xAAAAAAAAAAAAAAABLL * ((v53 - v54) >> 2);
  if (v52 <= v55)
  {
    if (v52 < v55)
    {
      v53 = v54 + 4 * ((v50 - v51) >> 2);
      *(_QWORD *)(a3 + 120) = v53;
    }
  }
  else
  {
    sub_20FF4710C(a3 + 112, v52 - v55);
    v51 = a1[24];
    v50 = a1[25];
    v54 = *(_QWORD *)(a3 + 112);
    v53 = *(_QWORD *)(a3 + 120);
  }
  if (v51 != v50 || v54 != v53)
  {
    v56 = v54 + 12;
    v57 = v51 + 12;
    do
    {
      do
      {
        v58 = v56;
        v59 = v57;
        v60 = *(_QWORD *)(v57 - 12);
        *(_DWORD *)(v56 - 4) = *(_DWORD *)(v59 - 4);
        *(_QWORD *)(v56 - 12) = v60;
        v56 += 12;
        v57 = v59 + 12;
      }
      while (v59 != v50);
    }
    while (v58 != v53);
  }
  v62 = *(_QWORD *)(a3 + 144);
  v61 = *(_QWORD *)(a3 + 152);
  v64 = a1[28];
  v63 = a1[29];
  v65 = v63 - v64;
  v66 = (v63 - v64) >> 3;
  v67 = v61 - v62;
  v68 = (uint64_t)(v61 - v62) >> 3;
  v69 = v66 - v68;
  if (v66 <= v68)
  {
    if (v66 < v68)
    {
      v61 = v62 + 8 * v66;
      *(_QWORD *)(a3 + 152) = v61;
    }
  }
  else
  {
    v70 = *(_QWORD *)(a3 + 160);
    if (v69 <= (uint64_t)(v70 - v61) >> 3)
    {
      v61 += 8 * v69;
      *(_QWORD *)(a3 + 152) = v61;
    }
    else
    {
      if (v65 < 0)
        sub_20E867F44();
      v71 = v70 - v62;
      v72 = (uint64_t)(v70 - v62) >> 2;
      if (v72 <= v66)
        LODWORD(v72) = v66;
      if (v71 >= 0x7FFFFFFFFFFFFFF8)
        v73 = -1;
      else
        v73 = v72;
      LODWORD(v153) = v73;
      v74 = *(unsigned int *)(a3 + 172);
      if ((_DWORD)v74 == -1)
        goto LABEL_133;
      v151 = (char *)&v153;
      v75 = ((uint64_t (*)(char **, uint64_t))off_24CA0E128[v74])(&v151, a3 + 168);
      v77 = *(char **)(a3 + 144);
      v78 = *(char **)(a3 + 152);
      v62 = v75 + 8 * v68;
      v61 = v62 + 8 * v69;
      if (v78 != v77)
      {
        v79 = v78 - v77 - 8;
        if (v79 < 0x58)
          goto LABEL_140;
        if ((unint64_t)&v78[-v67 - v75] < 0x20)
          goto LABEL_140;
        v80 = (v79 >> 3) + 1;
        v81 = 8 * (v80 & 0x3FFFFFFFFFFFFFFCLL);
        v82 = &v78[-v81];
        v62 -= v81;
        v83 = (_OWORD *)(v75 + 8 * v68 - 16);
        v84 = (__int128 *)(v78 - 16);
        v85 = v80 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v86 = *v84;
          *(v83 - 1) = *(v84 - 1);
          *v83 = v86;
          v83 -= 2;
          v84 -= 2;
          v85 -= 4;
        }
        while (v85);
        v78 = v82;
        if (v80 != (v80 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_140:
          do
          {
            v87 = *((_QWORD *)v78 - 1);
            v78 -= 8;
            *(_QWORD *)(v62 - 8) = v87;
            v62 -= 8;
          }
          while (v78 != v77);
        }
        v77 = *(char **)(a3 + 144);
      }
      *(_QWORD *)(a3 + 144) = v62;
      *(_QWORD *)(a3 + 152) = v61;
      v88 = *(_QWORD *)(a3 + 160);
      *(_QWORD *)(a3 + 160) = v75 + 8 * v76;
      if (v77)
      {
        v151 = v77;
        v152 = (unint64_t)(v88 - (_QWORD)v77) >> 3;
        v89 = *(unsigned int *)(a3 + 172);
        if ((_DWORD)v89 == -1)
          sub_20E877AB8();
        v153 = &v151;
        ((void (*)(char ***, uint64_t))off_24CA0E138[v89])(&v153, a3 + 168);
        v62 = *(_QWORD *)(a3 + 144);
        v61 = *(_QWORD *)(a3 + 152);
      }
    }
    v64 = a1[28];
    v63 = a1[29];
  }
  if (v64 != v63 || v62 != v61)
  {
    v91 = v62 + 8;
    v92 = v64 + 8;
    do
    {
      do
      {
        v93 = v91;
        v94 = v92;
        *(_QWORD *)(v91 - 8) = *(_QWORD *)(v92 - 8);
        v91 += 8;
        v92 += 8;
      }
      while (v94 != v63);
    }
    while (v93 != v61);
  }
  v96 = *(_QWORD *)(a3 + 176);
  v95 = *(_QWORD *)(a3 + 184);
  v98 = a1[32];
  v97 = a1[33];
  v99 = v97 - v98;
  v100 = (v97 - v98) >> 3;
  v101 = v95 - v96;
  v102 = (uint64_t)(v95 - v96) >> 3;
  v103 = v100 - v102;
  if (v100 > v102)
  {
    v104 = *(_QWORD *)(a3 + 192);
    if (v103 <= (uint64_t)(v104 - v95) >> 3)
    {
      v95 += 8 * v103;
      *(_QWORD *)(a3 + 184) = v95;
LABEL_105:
      v98 = a1[32];
      v97 = a1[33];
      goto LABEL_106;
    }
    if (v99 < 0)
      sub_20E867F44();
    v105 = v104 - v96;
    v106 = (uint64_t)(v104 - v96) >> 2;
    if (v106 <= v100)
      LODWORD(v106) = v100;
    if (v105 >= 0x7FFFFFFFFFFFFFF8)
      v107 = -1;
    else
      v107 = v106;
    LODWORD(v153) = v107;
    v108 = *(unsigned int *)(a3 + 204);
    if ((_DWORD)v108 != -1)
    {
      v151 = (char *)&v153;
      v109 = ((uint64_t (*)(char **, uint64_t))off_24CA0E148[v108])(&v151, a3 + 200);
      v111 = *(char **)(a3 + 176);
      v112 = *(char **)(a3 + 184);
      v96 = v109 + 8 * v102;
      v95 = v96 + 8 * v103;
      if (v112 != v111)
      {
        v113 = v112 - v111 - 8;
        if (v113 < 0x58)
          goto LABEL_141;
        if ((unint64_t)&v112[-v101 - v109] < 0x20)
          goto LABEL_141;
        v114 = (v113 >> 3) + 1;
        v115 = 8 * (v114 & 0x3FFFFFFFFFFFFFFCLL);
        v116 = &v112[-v115];
        v96 -= v115;
        v117 = (_OWORD *)(v109 + 8 * v102 - 16);
        v118 = (__int128 *)(v112 - 16);
        v119 = v114 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v120 = *v118;
          *(v117 - 1) = *(v118 - 1);
          *v117 = v120;
          v117 -= 2;
          v118 -= 2;
          v119 -= 4;
        }
        while (v119);
        v112 = v116;
        if (v114 != (v114 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_141:
          do
          {
            v121 = *((_QWORD *)v112 - 1);
            v112 -= 8;
            *(_QWORD *)(v96 - 8) = v121;
            v96 -= 8;
          }
          while (v112 != v111);
        }
        v111 = *(char **)(a3 + 176);
      }
      *(_QWORD *)(a3 + 176) = v96;
      *(_QWORD *)(a3 + 184) = v95;
      v122 = *(_QWORD *)(a3 + 192);
      *(_QWORD *)(a3 + 192) = v109 + 8 * v110;
      if (v111)
      {
        v151 = v111;
        v152 = (unint64_t)(v122 - (_QWORD)v111) >> 3;
        v123 = *(unsigned int *)(a3 + 204);
        if ((_DWORD)v123 == -1)
          sub_20E877AB8();
        v153 = &v151;
        ((void (*)(char ***, uint64_t))off_24CA0E158[v123])(&v153, a3 + 200);
        v96 = *(_QWORD *)(a3 + 176);
        v95 = *(_QWORD *)(a3 + 184);
      }
      goto LABEL_105;
    }
LABEL_133:
    sub_20E877AB8();
  }
  if (v100 < v102)
  {
    v95 = v96 + 8 * v100;
    *(_QWORD *)(a3 + 184) = v95;
  }
LABEL_106:
  if (v98 != v97 || v96 != v95)
  {
    v125 = v96 + 8;
    v126 = v98 + 8;
    do
    {
      do
      {
        v127 = v125;
        v128 = v126;
        *(_QWORD *)(v125 - 8) = *(_QWORD *)(v126 - 8);
        v125 += 8;
        v126 += 8;
      }
      while (v128 != v97);
    }
    while (v127 != v95);
  }
  v130 = a1[36];
  v129 = a1[37];
  v131 = 0xAAAAAAAAAAAAAAABLL * ((v129 - v130) >> 2);
  v133 = *(_QWORD *)(a3 + 208);
  v132 = *(_QWORD *)(a3 + 216);
  v134 = 0xAAAAAAAAAAAAAAABLL * ((v132 - v133) >> 2);
  if (v131 <= v134)
  {
    if (v131 < v134)
    {
      v132 = v133 + 4 * ((v129 - v130) >> 2);
      *(_QWORD *)(a3 + 216) = v132;
    }
  }
  else
  {
    sub_20FF4710C(a3 + 208, v131 - v134);
    v130 = a1[36];
    v129 = a1[37];
    v133 = *(_QWORD *)(a3 + 208);
    v132 = *(_QWORD *)(a3 + 216);
  }
  if (v130 != v129 || v133 != v132)
  {
    v135 = v133 + 12;
    v136 = v130 + 12;
    do
    {
      do
      {
        v137 = v135;
        v138 = v136;
        v139 = *(_QWORD *)(v136 - 12);
        *(_DWORD *)(v135 - 4) = *(_DWORD *)(v138 - 4);
        *(_QWORD *)(v135 - 12) = v139;
        v135 += 12;
        v136 = v138 + 12;
      }
      while (v138 != v129);
    }
    while (v137 != v132);
  }
  if (*((_BYTE *)a1 + 344))
  {
    v140 = a1[40];
    v141 = *(uint64_t *)((char *)a1 + 332);
    v142 = *((_DWORD *)a1 + 85);
    v143 = *(unsigned __int8 *)(a3 + 380);
    *(_DWORD *)(a3 + 364) = *((_DWORD *)a1 + 82);
    *(_QWORD *)(a3 + 356) = v140;
    *(_DWORD *)(a3 + 376) = v142;
    *(_QWORD *)(a3 + 368) = v141;
    if (!v143)
      *(_BYTE *)(a3 + 380) = 1;
  }
  *(_DWORD *)(a3 + 352) = *((_DWORD *)a1 + 87);
  v144 = (_BYTE *)a1[44];
  v145 = (_BYTE *)a1[45];
  v146 = (v145 - v144) >> 2;
  v147 = *(_QWORD *)(a3 + 320);
  v148 = (*(_QWORD *)(a3 + 328) - v147) >> 2;
  v149 = v146 >= v148;
  v150 = v146 - v148;
  if (v150 != 0 && v149)
  {
    sub_20FE01D5C(a3 + 320, v150);
    v144 = (_BYTE *)a1[44];
    v145 = (_BYTE *)a1[45];
  }
  else if (!v149)
  {
    *(_QWORD *)(a3 + 328) = v147 + 4 * v146;
  }
  if (v145 != v144)
    memmove(*(void **)(a3 + 320), v144, v145 - v144);
}

void sub_20FF4694C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_20F340728(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF46960(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD **v16;
  int v17;
  _QWORD *v18;

  v2 = *(_QWORD *)result;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(result + 16) - *(_QWORD *)result) >> 2) < a2)
  {
    v3 = result;
    if (a2 >= 0x1555555555555556)
      sub_20FDFA718();
    v4 = *(_QWORD *)(result + 8);
    LODWORD(v18) = a2;
    v5 = *(unsigned int *)(result + 28);
    if ((_DWORD)v5 == -1)
      sub_20E877AB8();
    v6 = (unsigned __int128)((v4 - v2) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
    v7 = (v6 >> 1) + ((unint64_t)v6 >> 63);
    v16 = &v18;
    result = ((uint64_t (*)(_QWORD ***, uint64_t))off_24CA0E068[v5])(&v16, result + 24);
    v10 = *(_QWORD *)v3;
    v9 = *(_QWORD *)(v3 + 8);
    v11 = result + 12 * v7;
    if (v9 != *(_QWORD *)v3)
    {
      do
      {
        v12 = *(_QWORD *)(v9 - 12);
        v9 -= 12;
        v13 = *(_DWORD *)(v9 + 8);
        *(_QWORD *)(v11 - 12) = v12;
        v11 -= 12;
        *(_DWORD *)(v11 + 8) = v13;
      }
      while (v9 != v10);
      v9 = *(_QWORD *)v3;
    }
    *(_QWORD *)v3 = v11;
    *(_QWORD *)(v3 + 8) = result + 12 * v7;
    v14 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = result + 12 * v8;
    if (v9)
    {
      v16 = (_QWORD **)v9;
      v17 = -1431655765 * ((unint64_t)(v14 - v9) >> 2);
      v15 = *(unsigned int *)(v3 + 28);
      if ((_DWORD)v15 == -1)
        sub_20E877AB8();
      v18 = &v16;
      return ((uint64_t (*)(_QWORD **, uint64_t))off_24CA0E078[v15])(&v18, v3 + 24);
    }
  }
  return result;
}

unint64_t sub_20FF46AC0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD **v20;
  int v21;
  _QWORD *v22;

  v3 = 0x1555555555555555;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 2);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1555555555555555)
    sub_20FDFA718();
  if (0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 2) > v5)
    v5 = 0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 2);
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[2] - *a1) >> 2) < 0xAAAAAAAAAAAAAAALL)
    v3 = v5;
  if (v3)
  {
    LODWORD(v22) = v3;
    v7 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v7 == -1)
      sub_20E877AB8();
    v20 = &v22;
    v8 = ((uint64_t (*)(_QWORD ***, unint64_t *))off_24CA0E068[v7])(&v20, a1 + 3);
  }
  else
  {
    v8 = 0;
    v9 = 0;
  }
  v10 = v8 + 12 * v4;
  v11 = *a2;
  *(_DWORD *)(v10 + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)v10 = v11;
  v12 = v10 + 12;
  v14 = *a1;
  v13 = a1[1];
  if (v13 != *a1)
  {
    do
    {
      v15 = *(_QWORD *)(v13 - 12);
      v13 -= 12;
      v16 = *(_DWORD *)(v13 + 8);
      *(_QWORD *)(v10 - 12) = v15;
      v10 -= 12;
      *(_DWORD *)(v10 + 8) = v16;
    }
    while (v13 != v14);
    v13 = *a1;
  }
  *a1 = v10;
  a1[1] = v12;
  v17 = a1[2];
  a1[2] = v8 + 12 * v9;
  if (v13)
  {
    v20 = (_QWORD **)v13;
    v21 = -1431655765 * ((v17 - v13) >> 2);
    v18 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v18 == -1)
      sub_20E877AB8();
    v22 = &v20;
    ((void (*)(_QWORD **, unint64_t *))off_24CA0E078[v18])(&v22, a1 + 3);
  }
  return v12;
}

uint64_t sub_20FF46C48(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD **v16;
  int v17;
  _QWORD *v18;

  v2 = *(_QWORD *)result;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(result + 16) - *(_QWORD *)result) >> 2) < a2)
  {
    v3 = result;
    if (a2 >= 0x1555555555555556)
      sub_20FDFA718();
    v4 = *(_QWORD *)(result + 8);
    LODWORD(v18) = a2;
    v5 = *(unsigned int *)(result + 28);
    if ((_DWORD)v5 == -1)
      sub_20E877AB8();
    v6 = (unsigned __int128)((v4 - v2) * (__int128)0x2AAAAAAAAAAAAAABLL) >> 64;
    v7 = (v6 >> 1) + ((unint64_t)v6 >> 63);
    v16 = &v18;
    result = ((uint64_t (*)(_QWORD ***, uint64_t))off_24CA0E088[v5])(&v16, result + 24);
    v10 = *(_QWORD *)v3;
    v9 = *(_QWORD *)(v3 + 8);
    v11 = result + 12 * v7;
    if (v9 != *(_QWORD *)v3)
    {
      do
      {
        v12 = *(_QWORD *)(v9 - 12);
        v9 -= 12;
        v13 = *(_DWORD *)(v9 + 8);
        *(_QWORD *)(v11 - 12) = v12;
        v11 -= 12;
        *(_DWORD *)(v11 + 8) = v13;
      }
      while (v9 != v10);
      v9 = *(_QWORD *)v3;
    }
    *(_QWORD *)v3 = v11;
    *(_QWORD *)(v3 + 8) = result + 12 * v7;
    v14 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = result + 12 * v8;
    if (v9)
    {
      v16 = (_QWORD **)v9;
      v17 = -1431655765 * ((unint64_t)(v14 - v9) >> 2);
      v15 = *(unsigned int *)(v3 + 28);
      if ((_DWORD)v15 == -1)
        sub_20E877AB8();
      v18 = &v16;
      return ((uint64_t (*)(_QWORD **, uint64_t))off_24CA0E098[v15])(&v18, v3 + 24);
    }
  }
  return result;
}

unint64_t sub_20FF46DA8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD **v20;
  int v21;
  _QWORD *v22;

  v3 = 0x1555555555555555;
  v4 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 2);
  v5 = v4 + 1;
  if (v4 + 1 > 0x1555555555555555)
    sub_20FDFA718();
  if (0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 2) > v5)
    v5 = 0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 2);
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[2] - *a1) >> 2) < 0xAAAAAAAAAAAAAAALL)
    v3 = v5;
  if (v3)
  {
    LODWORD(v22) = v3;
    v7 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v7 == -1)
      sub_20E877AB8();
    v20 = &v22;
    v8 = ((uint64_t (*)(_QWORD ***, unint64_t *))off_24CA0E088[v7])(&v20, a1 + 3);
  }
  else
  {
    v8 = 0;
    v9 = 0;
  }
  v10 = v8 + 12 * v4;
  v11 = *a2;
  *(_DWORD *)(v10 + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)v10 = v11;
  v12 = v10 + 12;
  v14 = *a1;
  v13 = a1[1];
  if (v13 != *a1)
  {
    do
    {
      v15 = *(_QWORD *)(v13 - 12);
      v13 -= 12;
      v16 = *(_DWORD *)(v13 + 8);
      *(_QWORD *)(v10 - 12) = v15;
      v10 -= 12;
      *(_DWORD *)(v10 + 8) = v16;
    }
    while (v13 != v14);
    v13 = *a1;
  }
  *a1 = v10;
  a1[1] = v12;
  v17 = a1[2];
  a1[2] = v8 + 12 * v9;
  if (v13)
  {
    v20 = (_QWORD **)v13;
    v21 = -1431655765 * ((v17 - v13) >> 2);
    v18 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v18 == -1)
      sub_20E877AB8();
    v22 = &v20;
    ((void (*)(_QWORD **, unint64_t *))off_24CA0E098[v18])(&v22, a1 + 3);
  }
  return v12;
}

uint64_t sub_20FF46F30(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD **v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD **v19;
  int v20;
  _QWORD *v21;

  v3 = result;
  v4 = *(_QWORD *)(result + 8);
  v5 = *(_QWORD *)(result + 16);
  if (0xAAAAAAAAAAAAAAABLL * ((v5 - v4) >> 2) >= a2)
  {
    *(_QWORD *)(result + 8) = v4 + 12 * (12 * a2 / 0xC);
  }
  else
  {
    v6 = *(_QWORD ***)result;
    v7 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *(_QWORD *)result) >> 2);
    v8 = v7 + a2;
    if (v7 + a2 > 0x1555555555555555)
      sub_20E969238();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (uint64_t)v6) >> 2);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0xAAAAAAAAAAAAAAALL)
      v10 = 0x1555555555555555;
    else
      v10 = v8;
    if (v10)
    {
      LODWORD(v21) = v10;
      v11 = *(unsigned int *)(result + 28);
      if ((_DWORD)v11 == -1)
        sub_20E877AB8();
      v19 = &v21;
      result = ((uint64_t (*)(_QWORD ***, uint64_t))off_24CA0E0E8[v11])(&v19, result + 24);
      v6 = *(_QWORD ***)v3;
      v4 = *(_QWORD *)(v3 + 8);
    }
    else
    {
      result = 0;
      v12 = 0;
    }
    v13 = result + 12 * v7;
    v14 = v13 + 12 * (12 * a2 / 0xC);
    if ((_QWORD **)v4 != v6)
    {
      do
      {
        v15 = *(_QWORD *)(v4 - 12);
        v4 -= 12;
        v16 = *(_DWORD *)(v4 + 8);
        *(_QWORD *)(v13 - 12) = v15;
        v13 -= 12;
        *(_DWORD *)(v13 + 8) = v16;
      }
      while ((_QWORD **)v4 != v6);
      v6 = *(_QWORD ***)v3;
    }
    *(_QWORD *)v3 = v13;
    *(_QWORD *)(v3 + 8) = v14;
    v17 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = result + 12 * v12;
    if (v6)
    {
      v19 = v6;
      v20 = -1431655765 * ((unint64_t)(v17 - (_QWORD)v6) >> 2);
      v18 = *(unsigned int *)(v3 + 28);
      if ((_DWORD)v18 == -1)
        sub_20E877AB8();
      v21 = &v19;
      return ((uint64_t (*)(_QWORD **, uint64_t))off_24CA0E0F8[v18])(&v21, v3 + 24);
    }
  }
  return result;
}

uint64_t sub_20FF4710C(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD **v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD **v19;
  int v20;
  _QWORD *v21;

  v3 = result;
  v4 = *(_QWORD *)(result + 8);
  v5 = *(_QWORD *)(result + 16);
  if (0xAAAAAAAAAAAAAAABLL * ((v5 - v4) >> 2) >= a2)
  {
    *(_QWORD *)(result + 8) = v4 + 12 * (12 * a2 / 0xC);
  }
  else
  {
    v6 = *(_QWORD ***)result;
    v7 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *(_QWORD *)result) >> 2);
    v8 = v7 + a2;
    if (v7 + a2 > 0x1555555555555555)
      sub_20E969238();
    v9 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (uint64_t)v6) >> 2);
    if (2 * v9 > v8)
      v8 = 2 * v9;
    if (v9 >= 0xAAAAAAAAAAAAAAALL)
      v10 = 0x1555555555555555;
    else
      v10 = v8;
    if (v10)
    {
      LODWORD(v21) = v10;
      v11 = *(unsigned int *)(result + 28);
      if ((_DWORD)v11 == -1)
        sub_20E877AB8();
      v19 = &v21;
      result = ((uint64_t (*)(_QWORD ***, uint64_t))off_24CA0E108[v11])(&v19, result + 24);
      v6 = *(_QWORD ***)v3;
      v4 = *(_QWORD *)(v3 + 8);
    }
    else
    {
      result = 0;
      v12 = 0;
    }
    v13 = result + 12 * v7;
    v14 = v13 + 12 * (12 * a2 / 0xC);
    if ((_QWORD **)v4 != v6)
    {
      do
      {
        v15 = *(_QWORD *)(v4 - 12);
        v4 -= 12;
        v16 = *(_DWORD *)(v4 + 8);
        *(_QWORD *)(v13 - 12) = v15;
        v13 -= 12;
        *(_DWORD *)(v13 + 8) = v16;
      }
      while ((_QWORD **)v4 != v6);
      v6 = *(_QWORD ***)v3;
    }
    *(_QWORD *)v3 = v13;
    *(_QWORD *)(v3 + 8) = v14;
    v17 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = result + 12 * v12;
    if (v6)
    {
      v19 = v6;
      v20 = -1431655765 * ((unint64_t)(v17 - (_QWORD)v6) >> 2);
      v18 = *(unsigned int *)(v3 + 28);
      if ((_DWORD)v18 == -1)
        sub_20E877AB8();
      v21 = &v19;
      return ((uint64_t (*)(_QWORD **, uint64_t))off_24CA0E118[v18])(&v21, v3 + 24);
    }
  }
  return result;
}

_QWORD *sub_20FF472E8@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD *v9;
  unsigned __int8 v10;
  int v11;
  std::__shared_weak_count_vtbl *v12;
  CGImageSource *v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  CGImageRef ImageAtIndex;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  std::__shared_weak_count *v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  _BYTE *v42;
  int v43;
  uint64_t v44;
  int v45;
  CGImageSource *v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  int v51;
  __int16 v52;
  unint64_t v53;
  _BYTE *v54;
  int v55;
  uint64_t v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  _QWORD *result;
  uint64_t v72;
  CGImageSourceRef isrc[2];
  void *v74[2];
  int v75;
  char v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  char v83;
  char v84;
  __int128 v85;
  __int128 __p;
  void (__cdecl *v87)(void *);
  uint64_t v88;
  void *v89[2];
  uint64_t v90;
  uint64_t v91;
  void *v92[2];
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  CGDataProviderRef provider[2];
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  CGDataProviderSequentialCallbacks callbacks;
  unsigned __int8 v102;
  void *v103[2];
  uint64_t v104;
  uint64_t v105;
  void *v106[2];
  uint64_t v107;
  char v108;
  char v109;
  char v110;
  __int128 v111;
  uint64_t v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  CGDataProviderGetBytesCallback getBytes;
  std::__shared_weak_count_vtbl *v117;
  std::__shared_weak_count *v118;
  __int128 v119;
  __int128 v120;
  char v121;
  char v122;
  void *v123;
  char v124;
  void *v125;
  char v126;
  char v127;
  char v128;
  char v129;
  int v130;
  _BYTE v131[24];
  _BYTE *v132;
  uint64_t v133;

  v133 = *MEMORY[0x24BDAC8D0];
  v9 = (_QWORD *)a1[3];
  if (v9)
  {
    if (v9 == a1)
    {
      v132 = v131;
      (*(void (**)(_QWORD *, _BYTE *))(*a1 + 24))(a1, v131);
    }
    else
    {
      v132 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*v9 + 16))(a1[3]);
    }
  }
  else
  {
    v132 = 0;
  }
  v10 = std::istream::peek();
  sub_20FF4A664(a4, v10, (uint64_t)&v119);
  if (v129)
  {
    v11 = v119;
    *(_OWORD *)&callbacks.version = xmmword_24CA13760;
    *(_OWORD *)&callbacks.skipForward = *(_OWORD *)off_24CA13770;
    callbacks.releaseInfo = 0;
    v12 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateSequential(a2, &callbacks);
    sub_21006CE68(&v117, v12, 0);
    if ((v11 - 3) > 2)
    {
      sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Apple.cpp", 157, (uint64_t)"", 0, (uint64_t)"Unsupported Format", 18, (void (*)(void **))sub_21023DDB0);
      abort();
    }
    sub_20FF484C8(provider, (uint64_t)&v117);
    v13 = CGImageSourceCreateWithDataProvider(provider[0], 0);
    v14 = (std::__shared_weak_count *)operator new();
    v15 = v14;
    v14->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    v14->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0E178;
    v14->__shared_weak_owners_ = 0;
    v14[1].__vftable = (std::__shared_weak_count_vtbl *)v13;
    isrc[0] = v13;
    isrc[1] = (CGImageSourceRef)v14;
    do
      v17 = __ldxr(p_shared_owners);
    while (__stxr(v17 + 1, p_shared_owners));
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v15);
    }
    ImageAtIndex = CGImageSourceCreateImageAtIndex(isrc[0], 0, 0);
    *(_QWORD *)&v111 = ImageAtIndex;
    v20 = (std::__shared_weak_count *)operator new();
    v20->__shared_owners_ = 0;
    v21 = (unint64_t *)&v20->__shared_owners_;
    v20->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0E228;
    v20->__shared_weak_owners_ = 0;
    v20[1].__vftable = (std::__shared_weak_count_vtbl *)ImageAtIndex;
    *((_QWORD *)&v111 + 1) = v20;
    *(_QWORD *)&v85 = ImageAtIndex;
    *((_QWORD *)&v85 + 1) = v20;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    sub_20FF49738(&callbacks, ImageAtIndex);
    v115 = *(_QWORD *)&callbacks.version;
    getBytes = callbacks.getBytes;
    if (callbacks.getBytes)
    {
      v23 = (unint64_t *)((char *)callbacks.getBytes + 8);
      do
        v24 = __ldxr(v23);
      while (__stxr(v24 + 1, v23));
      v25 = (std::__shared_weak_count *)callbacks.getBytes;
      if (callbacks.getBytes)
      {
        v26 = (unint64_t *)((char *)callbacks.getBytes + 8);
        do
          v27 = __ldaxr(v26);
        while (__stlxr(v27 - 1, v26));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
      }
    }
    do
      v28 = __ldaxr(v21);
    while (__stlxr(v28 - 1, v21));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
    v29 = (std::__shared_weak_count *)*((_QWORD *)&v111 + 1);
    if (*((_QWORD *)&v111 + 1))
    {
      v30 = (unint64_t *)(*((_QWORD *)&v111 + 1) + 8);
      do
        v31 = __ldaxr(v30);
      while (__stlxr(v31 - 1, v30));
      if (!v31)
      {
        ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
        std::__shared_weak_count::__release_weak(v29);
      }
    }
    if (isrc[1])
    {
      v32 = (unint64_t *)((char *)isrc[1] + 8);
      do
        v33 = __ldaxr(v32);
      while (__stlxr(v33 - 1, v32));
      if (!v33)
      {
        (*(void (**)(CGImageSourceRef))(*(_QWORD *)isrc[1] + 16))(isrc[1]);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)isrc[1]);
      }
    }
    v34 = (std::__shared_weak_count *)provider[1];
    if (!provider[1])
      goto LABEL_40;
    v35 = (unint64_t *)((char *)provider[1] + 8);
    do
      v36 = __ldaxr(v35);
    while (__stlxr(v36 - 1, v35));
    if (!v36)
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
      v38 = v115;
      v37 = (std::__shared_weak_count *)getBytes;
      if (!getBytes)
        goto LABEL_45;
    }
    else
    {
LABEL_40:
      v38 = v115;
      v37 = (std::__shared_weak_count *)getBytes;
      if (!getBytes)
        goto LABEL_45;
    }
    v39 = (unint64_t *)&v37->__shared_owners_;
    do
      v40 = __ldxr(v39);
    while (__stxr(v40 + 1, v39));
    do
      v41 = __ldaxr(v39);
    while (__stlxr(v41 - 1, v39));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
      if (v38)
        goto LABEL_60;
      goto LABEL_46;
    }
LABEL_45:
    if (v38)
      goto LABEL_60;
LABEL_46:
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Apple.cpp", 160, (uint64_t)"cg_image.IsValid()", 18, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
LABEL_60:
    sub_21006D314((uint64_t)&v115, (uint64_t)&v111);
    *(_OWORD *)provider = v111;
    v98 = v112;
    if (SHIBYTE(v114) < 0)
    {
      sub_20E860C04(&v99, (void *)v113, *((unint64_t *)&v113 + 1));
    }
    else
    {
      v99 = v113;
      v100 = v114;
    }
    if (a3)
    {
      switch(v11)
      {
        case 3:
          if (a3 >= 3 && (a3 & 0xFFFFFFF7) - 21 >= 2)
            goto LABEL_77;
          break;
        case 5:
          if (a3 > 0x20 || ((1 << a3) & 0x1E1E0001ELL) == 0)
            goto LABEL_77;
          break;
        case 4:
          if (a3 != 1 && a3 != 21)
          {
LABEL_77:
            sub_20FF4A34C(a3, v11, (uint64_t)&v85);
            *(_OWORD *)&callbacks.version = v85;
            LOBYTE(callbacks.skipForward) = 0;
            v109 = 0;
            if (v95)
            {
              v102 = 0;
              v45 = v88;
              if (!(_BYTE)v88)
                goto LABEL_86;
LABEL_85:
              *(_OWORD *)&callbacks.skipForward = __p;
              callbacks.releaseInfo = v87;
              v87 = 0;
              __p = 0uLL;
              v102 = 1;
LABEL_86:
              LOBYTE(v103[0]) = 0;
              v108 = 0;
              if (v94)
              {
                v104 = v90;
                *(_OWORD *)v103 = *(_OWORD *)v89;
                v89[0] = 0;
                v89[1] = 0;
                v105 = v91;
                *(_OWORD *)v106 = *(_OWORD *)v92;
                v107 = v93;
                v90 = 0;
                v92[0] = 0;
                v92[1] = 0;
                v93 = 0;
                v108 = 1;
              }
              v109 = 1;
              v110 = 0;
              if (v45 && SHIBYTE(v87) < 0)
                operator delete((void *)__p);
              if ((SHIBYTE(v100) & 0x80000000) == 0)
              {
LABEL_92:
                if (v110)
                {
LABEL_93:
                  if (!BYTE4(v111)
                    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Apple.cpp", 172, (uint64_t)"compat.format.has_value()", 25, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
                  {
                    abort();
                  }
                  isrc[0] = (CGImageSourceRef)sub_21006D13C((uint64_t)&v115);
                  v130 = v111;
                  if (!v132)
                    sub_20E86D37C();
                  (*(void (**)(__int128 *__return_ptr, _BYTE *, CGImageSourceRef *, int *))(*(_QWORD *)v132 + 48))(&v85, v132, isrc, &v130);
                  if (v96)
                  {
                    isrc[0] = (CGImageSourceRef)&off_24C9C02C8;
                    v46 = (CGImageSource *)*((_QWORD *)&v85 + 1);
                    v47 = (std::__shared_weak_count *)__p;
                    if ((_QWORD)__p)
                    {
                      v48 = (unint64_t *)(__p + 8);
                      do
                        v49 = __ldxr(v48);
                      while (__stxr(v49 + 1, v48));
                      v50 = v88;
                      v51 = (int)v89[0];
                      v52 = WORD2(v89[0]);
                      do
                        v53 = __ldxr(v48);
                      while (__stxr(v53 + 1, v48));
                    }
                    else
                    {
                      v50 = v88;
                      v51 = (int)v89[0];
                      v52 = WORD2(v89[0]);
                    }
                    isrc[1] = v46;
                    v74[0] = v47;
                    v74[1] = *((void **)&__p + 1);
                    v75 = (int)v87;
                    v77 = v50;
                    LODWORD(v78) = v51;
                    WORD2(v78) = v52;
                    if (v47)
                    {
                      v57 = (unint64_t *)&v47->__shared_owners_;
                      do
                        v58 = __ldaxr(v57);
                      while (__stlxr(v58 - 1, v57));
                      if (!v58)
                      {
                        ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
                        std::__shared_weak_count::__release_weak(v47);
                      }
                    }
                    sub_21006F2B4(&v115, isrc);
                    v59 = (std::__shared_weak_count *)v74[0];
                    if (v74[0])
                    {
                      v60 = (unint64_t *)((char *)v74[0] + 8);
                      do
                        v61 = __ldaxr(v60);
                      while (__stlxr(v61 - 1, v60));
                      if (!v61)
                      {
                        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
                        std::__shared_weak_count::__release_weak(v59);
                      }
                    }
                    *(_BYTE *)(a5 + 120) = 1;
                  }
                  else
                  {
                    *(_OWORD *)isrc = v85;
                    v54 = sub_20E89EFE4(v74, &__p);
                    *(_OWORD *)a5 = *(_OWORD *)isrc;
                    *(_BYTE *)(a5 + 16) = 0;
                    *(_BYTE *)(a5 + 112) = 0;
                    if (!v84)
                    {
                      *(_BYTE *)(a5 + 120) = 0;
                      if (v96)
                        goto LABEL_128;
                      goto LABEL_134;
                    }
                    *(_BYTE *)(a5 + 40) = 0;
                    v55 = v77;
                    if ((_BYTE)v77)
                    {
                      *(_OWORD *)(a5 + 16) = *(_OWORD *)v54;
                      *(_QWORD *)(a5 + 32) = *((_QWORD *)v54 + 2);
                      *((_QWORD *)v54 + 1) = 0;
                      *((_QWORD *)v54 + 2) = 0;
                      *(_QWORD *)v54 = 0;
                      *(_BYTE *)(a5 + 40) = 1;
                    }
                    *(_BYTE *)(a5 + 48) = 0;
                    *(_BYTE *)(a5 + 104) = 0;
                    if (v83)
                    {
                      v56 = v80;
                      *(_QWORD *)(a5 + 64) = v79;
                      *(_OWORD *)(a5 + 48) = v78;
                      v78 = 0uLL;
                      *(_QWORD *)(a5 + 72) = v56;
                      *(_OWORD *)(a5 + 80) = v81;
                      *(_QWORD *)(a5 + 96) = v82;
                      v79 = 0;
                      v81 = 0uLL;
                      v82 = 0;
                      *(_BYTE *)(a5 + 104) = 1;
                    }
                    *(_BYTE *)(a5 + 112) = 1;
                    *(_BYTE *)(a5 + 120) = 0;
                    if (v55 && v76 < 0)
                    {
                      operator delete(v74[0]);
                      if (v96)
                      {
LABEL_128:
                        v62 = (std::__shared_weak_count *)__p;
                        if ((_QWORD)__p)
                        {
                          v63 = (unint64_t *)(__p + 8);
                          do
                            v64 = __ldaxr(v63);
                          while (__stlxr(v64 - 1, v63));
                          if (!v64)
                          {
                            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
                            std::__shared_weak_count::__release_weak(v62);
                          }
                        }
                        goto LABEL_143;
                      }
LABEL_134:
                      if (v95)
                      {
                        if (v94)
                        {
                          if (SHIBYTE(v93) < 0)
                            operator delete(v92[0]);
                          if (SHIBYTE(v90) < 0)
                            operator delete(v89[0]);
                        }
                        if ((_BYTE)v88 && SHIBYTE(v87) < 0)
                          operator delete((void *)__p);
                      }
LABEL_143:
                      if (!v110 && v109)
                      {
                        if (v108)
                        {
                          if (SHIBYTE(v107) < 0)
                            operator delete(v106[0]);
                          if (SHIBYTE(v104) < 0)
                            operator delete(v103[0]);
                        }
                        if (v102 && SHIBYTE(callbacks.releaseInfo) < 0)
                          operator delete(callbacks.skipForward);
                      }
                      if (SHIBYTE(v114) < 0)
                        operator delete((void *)v113);
                      v65 = (std::__shared_weak_count *)getBytes;
                      if (!getBytes)
                        goto LABEL_150;
                      v66 = (unint64_t *)((char *)getBytes + 8);
                      do
                        v67 = __ldaxr(v66);
                      while (__stlxr(v67 - 1, v66));
                      if (!v67)
                      {
                        ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
                        std::__shared_weak_count::__release_weak(v65);
                        v68 = v118;
                        if (v118)
                          goto LABEL_151;
                      }
                      else
                      {
LABEL_150:
                        v68 = v118;
                        if (v118)
                        {
LABEL_151:
                          v69 = (unint64_t *)&v68->__shared_owners_;
                          do
                            v70 = __ldaxr(v69);
                          while (__stlxr(v70 - 1, v69));
                          if (!v70)
                          {
                            ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
                            std::__shared_weak_count::__release_weak(v68);
                            if (v129)
                              goto LABEL_155;
                            goto LABEL_173;
                          }
                        }
                      }
LABEL_154:
                      if (v129)
                        goto LABEL_155;
                      goto LABEL_173;
                    }
                  }
                  if (v96)
                    goto LABEL_128;
                  goto LABEL_134;
                }
LABEL_114:
                *(_BYTE *)(a5 + 120) = 0;
                *(_OWORD *)a5 = *(_OWORD *)&callbacks.version;
                sub_20E89EFE4((_BYTE *)(a5 + 16), (__int128 *)&callbacks.skipForward);
                goto LABEL_143;
              }
LABEL_113:
              operator delete((void *)v99);
              if (v110)
                goto LABEL_93;
              goto LABEL_114;
            }
            goto LABEL_112;
          }
          break;
        default:
          sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Apple.cpp", 118, (uint64_t)"", 0, (uint64_t)"should not be reached", 21, (void (*)(void **))sub_21023DDB0);
          abort();
      }
      if (LODWORD(provider[0]) != a3)
      {
        sub_20FF4A034(a3, provider[0], (uint64_t)&v85);
        *(_OWORD *)&callbacks.version = v85;
        LOBYTE(callbacks.skipForward) = 0;
        v109 = 0;
        if (v95)
        {
          v102 = 0;
          v45 = v88;
          if (!(_BYTE)v88)
            goto LABEL_86;
          goto LABEL_85;
        }
LABEL_112:
        v110 = 0;
        if ((SHIBYTE(v100) & 0x80000000) == 0)
          goto LABEL_92;
        goto LABEL_113;
      }
    }
    v110 = 1;
    if ((SHIBYTE(v100) & 0x80000000) == 0)
      goto LABEL_92;
    goto LABEL_113;
  }
  *(_OWORD *)&callbacks.version = v119;
  v42 = sub_20E89EFE4(&callbacks.skipForward, &v120);
  *(_OWORD *)a5 = *(_OWORD *)&callbacks.version;
  *(_BYTE *)(a5 + 16) = 0;
  *(_BYTE *)(a5 + 112) = 0;
  if (v109)
  {
    *(_BYTE *)(a5 + 40) = 0;
    v43 = v102;
    if (v102)
    {
      *(_OWORD *)(a5 + 16) = *(_OWORD *)v42;
      *(_QWORD *)(a5 + 32) = *((_QWORD *)v42 + 2);
      *((_QWORD *)v42 + 1) = 0;
      *((_QWORD *)v42 + 2) = 0;
      *(_QWORD *)v42 = 0;
      *(_BYTE *)(a5 + 40) = 1;
    }
    *(_BYTE *)(a5 + 48) = 0;
    *(_BYTE *)(a5 + 104) = 0;
    if (v108)
    {
      v44 = v105;
      *(_QWORD *)(a5 + 64) = v104;
      *(_OWORD *)(a5 + 48) = *(_OWORD *)v103;
      v103[0] = 0;
      v103[1] = 0;
      *(_QWORD *)(a5 + 72) = v44;
      *(_OWORD *)(a5 + 80) = *(_OWORD *)v106;
      *(_QWORD *)(a5 + 96) = v107;
      v104 = 0;
      v106[0] = 0;
      v106[1] = 0;
      v107 = 0;
      *(_BYTE *)(a5 + 104) = 1;
    }
    *(_BYTE *)(a5 + 112) = 1;
    *(_BYTE *)(a5 + 120) = 0;
    if (!v43 || (SHIBYTE(callbacks.releaseInfo) & 0x80000000) == 0)
      goto LABEL_154;
    operator delete(callbacks.skipForward);
    if (v129)
      goto LABEL_155;
  }
  else
  {
    *(_BYTE *)(a5 + 120) = 0;
    if (v129)
      goto LABEL_155;
  }
LABEL_173:
  if (v128)
  {
    if (v127)
    {
      if (v126 < 0)
        operator delete(v125);
      if (v124 < 0)
        operator delete(v123);
    }
    if (v122)
    {
      if (v121 < 0)
        operator delete((void *)v120);
    }
  }
LABEL_155:
  result = v132;
  if (v132 == v131)
  {
    v72 = 4;
    result = v131;
  }
  else
  {
    if (!v132)
      return result;
    v72 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v72))();
}

void sub_20FF47ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a71;
  char a72;
  uint64_t v72;
  uint64_t v74;

  sub_20FDEFFB8((uint64_t)&a25);
  sub_20E89ED1C((uint64_t)&a47);
  if (a71 < 0)
    operator delete(__p);
  sub_20E86665C((uint64_t)&a72);
  sub_20E86665C(v72 - 256);
  sub_20E89ED1C(v72 - 240);
  v74 = *(_QWORD *)(v72 - 80);
  if (v74 == v72 - 104)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v72 - 104) + 32))(v72 - 104);
    _Unwind_Resume(a1);
  }
  if (!v74)
    _Unwind_Resume(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v74 + 40))(v74);
  _Unwind_Resume(a1);
}

void sub_20FF47F08(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a49 < 0)
    operator delete(__p);
  JUMPOUT(0x20FF47FECLL);
}

void sub_20FF47F20()
{
  JUMPOUT(0x20FF47FFCLL);
}

void sub_20FF47F2C()
{
  JUMPOUT(0x20FF47FFCLL);
}

void sub_20FF47F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;

  sub_20E86665C((uint64_t)&a25);
  sub_20E86665C((uint64_t)&a63);
  sub_20E86665C((uint64_t)&a9);
  sub_20E86665C((uint64_t)&a41);
  sub_20E86665C(v63 - 256);
  sub_20E89ED1C(v63 - 240);
  if (*(_QWORD *)(v63 - 80) == v63 - 104)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v63 - 104) + 32))(v63 - 104);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20FF4807CLL);
}

void sub_20FF47F90(void *a1, int a2)
{
  const void *v2;

  if (a2)
  {
    __cxa_begin_catch(a1);
    if (v2)
      CFRelease(v2);
    __cxa_rethrow();
  }
  JUMPOUT(0x20FF48080);
}

void sub_20FF47FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  __cxa_end_catch();
  sub_20E86665C((uint64_t)&a41);
  JUMPOUT(0x20FF4800CLL);
}

void sub_20FF48048(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_20E89ED1C(v1 - 240);
  v3 = *(_QWORD *)(v1 - 80);
  if (v3 != v1 - 104)
  {
    if (!v3)
      _Unwind_Resume(a1);
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x20FF4802CLL);
}

void sub_20FF48068()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 - 80) != v0 - 104)
    JUMPOUT(0x20FF4807CLL);
  JUMPOUT(0x20FF4802CLL);
}

void sub_20FF480A0(char *info@<X1>, uint64_t a2@<X0>, int a3@<W2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _BYTE *v9;
  int v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  void *__p;
  char v17;
  unsigned __int8 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  char v25;
  __int128 v26;
  __int128 v27;
  char v28;
  char v29;
  void *v30;
  char v31;
  void *v32;
  char v33;
  char v34;
  char v35;
  char v36;

  sub_20FF4AC48(info, a3, (uint64_t)&v26);
  if (!v36)
  {
    v15 = v26;
    v9 = sub_20E89EFE4(&__p, &v27);
    *(_OWORD *)a4 = v15;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (!v25)
    {
      *(_BYTE *)(a4 + 120) = 0;
      if (!v36)
        goto LABEL_24;
      goto LABEL_17;
    }
    *(_BYTE *)(a4 + 40) = 0;
    v10 = v18;
    if (v18)
    {
      *(_OWORD *)(a4 + 16) = *(_OWORD *)v9;
      *(_QWORD *)(a4 + 32) = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 1) = 0;
      *((_QWORD *)v9 + 2) = 0;
      *(_QWORD *)v9 = 0;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v24)
    {
      v11 = v21;
      *(_QWORD *)(a4 + 64) = v20;
      *(_OWORD *)(a4 + 48) = v19;
      v19 = 0uLL;
      *(_QWORD *)(a4 + 72) = v11;
      *(_OWORD *)(a4 + 80) = v22;
      *(_QWORD *)(a4 + 96) = v23;
      v20 = 0;
      v22 = 0uLL;
      v23 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 120) = 0;
    if (v10 && v17 < 0)
      operator delete(__p);
LABEL_16:
    if (!v36)
      goto LABEL_24;
    goto LABEL_17;
  }
  sub_20FF497C4(&v15, (const void *)v26, *((std::__shared_weak_count **)&v26 + 1));
  sub_20FF48CF4(a4, a2, (uint64_t)&v15);
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_16;
  v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (v8)
    goto LABEL_16;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  if (!v36)
  {
LABEL_24:
    if (v35)
    {
      if (v34)
      {
        if (v33 < 0)
          operator delete(v32);
        if (v31 < 0)
          operator delete(v30);
      }
      if (v29)
      {
        if (v28 < 0)
          operator delete((void *)v27);
      }
    }
    return;
  }
LABEL_17:
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v26 + 1);
  if (*((_QWORD *)&v26 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v26 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_20FF482D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46,char a47,int a48,__int16 a49,char a50,char a51,int a52,__int16 a53,char a54,char a55)
{
  if (!(_BYTE)a53)
  {
    if ((_BYTE)a49)
    {
      if (a47)
      {
        if (a46 < 0)
          operator delete(__p);
        if (a39 < 0)
          operator delete(a34);
      }
      if (a33)
      {
        if (a32 < 0)
          operator delete(a27);
      }
    }
    _Unwind_Resume(exception_object);
  }
  sub_20E86665C((uint64_t)&a25);
  _Unwind_Resume(exception_object);
}

void sub_20FF4835C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF48380(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20FF483A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20FF48414(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF48438(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20FF48458(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_20FF484C8(_QWORD *a1, uint64_t a2)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v4 = *(const void **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v17 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_20FF485D8(&v18, v4);
  v8 = v19;
  *a1 = v18;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v11 = v19;
    if (v19)
    {
      v12 = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!v17)
    return a1;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return a1;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return a1;
}

void sub_20FF485C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF485D8(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24CA0E278;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20FF48638(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20FF48650(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20FF48668(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF4868C(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20FF486AC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20FF4871C(unsigned int a1@<W0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v6;
  void *v7[2];
  char v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 __p;
  uint64_t v18;
  unsigned __int8 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;

  sub_20E89EFE4(v7, a2);
  sub_20FF48894((uint64_t)&v16, a1, (__int128 *)v7);
  *(_OWORD *)a3 = v16;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v26)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v5 = v19;
    if (v19)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(_QWORD *)(a3 + 32) = v18;
      v18 = 0;
      __p = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v25)
    {
      v6 = v22;
      *(_QWORD *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 48) = v20;
      v20 = 0uLL;
      *(_QWORD *)(a3 + 72) = v6;
      *(_OWORD *)(a3 + 80) = v23;
      *(_QWORD *)(a3 + 96) = v24;
      v21 = 0;
      v23 = 0uLL;
      v24 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    if (v5 && SHIBYTE(v18) < 0)
      operator delete((void *)__p);
  }
  if (v15)
  {
    if (!v14)
      goto LABEL_13;
    if (v13 < 0)
    {
      operator delete(v12);
      if ((v11 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v9)
          return;
        goto LABEL_14;
      }
    }
    else if ((v11 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v10);
    if (!v9)
      return;
LABEL_14:
    if (v8 < 0)
      operator delete(v7[0]);
  }
}

void sub_20FF48880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E89F09C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF48894(uint64_t a1, unsigned int a2, __int128 *a3)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  unsigned int v9;
  __int128 *v10;
  void *__dst[2];
  uint64_t v12;
  char v13;
  void *v14[2];
  uint64_t v15;
  uint64_t v16;
  void *__p[2];
  uint64_t v18;
  char v19;
  char v20;

  v4 = atomic_load((unsigned __int8 *)&qword_254A6DC60);
  if ((v4 & 1) == 0)
  {
    v10 = a3;
    v9 = a2;
    v8 = __cxa_guard_acquire(&qword_254A6DC60);
    a2 = v9;
    a3 = v10;
    if (v8)
    {
      __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_254A57698, &dword_20E81F000);
      __cxa_guard_release(&qword_254A6DC60);
      a2 = v9;
      a3 = v10;
    }
  }
  v5 = a2;
  sub_20E89EFE4(__dst, a3);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = &off_254A57698;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v20)
    return a1;
  *(_BYTE *)(a1 + 40) = 0;
  if (v13)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)__dst;
    *(_QWORD *)(a1 + 32) = v12;
    __dst[1] = 0;
    v12 = 0;
    __dst[0] = 0;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (!v19)
  {
    *(_BYTE *)(a1 + 112) = 1;
    if (!v13)
      return a1;
    goto LABEL_14;
  }
  v6 = v16;
  *(_QWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v14;
  v14[0] = 0;
  v14[1] = 0;
  *(_QWORD *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)__p;
  *(_QWORD *)(a1 + 96) = v18;
  __p[1] = 0;
  v18 = 0;
  v15 = 0;
  __p[0] = 0;
  *(_BYTE *)(a1 + 104) = 1;
  *(_BYTE *)(a1 + 112) = 1;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v15) & 0x80000000) == 0)
      goto LABEL_8;
LABEL_13:
    operator delete(v14[0]);
    if (!v13)
      return a1;
    goto LABEL_14;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v15) < 0)
    goto LABEL_13;
LABEL_8:
  if (!v13)
    return a1;
LABEL_14:
  if ((SHIBYTE(v12) & 0x80000000) == 0)
    return a1;
  operator delete(__dst[0]);
  return a1;
}

void sub_20FF48A40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_OWORD *)(v5 + 192) = 0u;
  *(_OWORD *)(v5 + 208) = 0u;
  *(_OWORD *)(v5 + 224) = 0u;
  *(_OWORD *)(v5 + 240) = 0u;
  *(_OWORD *)(v5 + 256) = 0u;
  *(_QWORD *)(v5 + 272) = 0;
  sub_20E863438(v5);
  v21[0] = v5;
  sub_20E86A980((_QWORD *)(v5 + 16), (uint64_t)(&off_24CA0E468)[2 * *a3], (uint64_t)(&off_24CA0E468)[2 * *a3 + 1]);
  v6 = *(_DWORD *)(v5 + 120);
  if ((v6 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v5 + 112);
    v10 = *(_QWORD *)(v5 + 72);
    if (v9 < v10)
    {
      *(_QWORD *)(v5 + 112) = v10;
      v9 = v10;
    }
    v11 = *(const void **)(v5 + 64);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = *(const void **)(v5 + 40);
    v7 = *(_QWORD *)(v5 + 56) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_20E860B7C();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x212BC6290](v14 + 128);
    MEMORY[0x212BC6398](v14, 0x10B2C40EED050F3);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_20E877AB8();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24CA0E1D0[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_20FF48CA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BC6398](v1, 0x10B2C40EED050F3);
  _Unwind_Resume(a1);
}

void sub_20FF48CC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF48CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20FD0DE48((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20FF48CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageDestinationRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  int v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  BOOL v37;
  BOOL v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  void *v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  void *v51[2];
  char v52;
  char v53;
  void *v54;
  char v55;
  void *v56;
  char v57;
  char v58;
  char v59;
  CGImageRef image;
  std::__shared_weak_count *v61;
  void *v62[2];
  uint64_t v63;
  void *__dst[2];
  uint64_t v65;
  char v66;
  void *v67;
  char v68;
  void *v69;
  char v70;
  char v71;
  char v72;
  unsigned int v73;
  _QWORD v74[2];
  char v75;
  char v76;
  void *v77;
  char v78;
  void *__p;
  char v80;
  char v81;
  char v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  char v92;
  char v93;
  char v94;
  _QWORD v95[3];
  int v96;
  _QWORD **v97;
  const char *v98;
  _QWORD *v99;
  const char *v100;
  const char *v101;
  _QWORD *v102;

  v7 = *(CGImageDestinationRef *)a3;
  v6 = *(std::__shared_weak_count **)(a3 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v7)
      goto LABEL_7;
  }
  else
  {
LABEL_6:
    if (v7)
    {
LABEL_7:
      v73 = *(_DWORD *)(a2 + 48);
      v11 = (char *)&v89;
      v12 = v73 - 1;
      if (v73 - 1 <= 0x27 && ((0xF1F1F0000FuLL >> v12) & 1) != 0)
        v11 = (char *)&v83 + 4 * qword_2103F16F8[v12];
      if (v11 - (char *)&v83 == 72)
      {
        v96 = 0;
        sub_20E9EC940(v95, "Invalid image format. Format ");
        sub_20E8A2C70((uint64_t)&v94, (uint64_t)v95, &v73);
        v97 = (_QWORD **)v95;
        v98 = " can't be saved with CoreGraphics.";
        v99 = v95;
        v100 = " can't be saved with CoreGraphics.";
        v101 = " can't be saved with CoreGraphics.";
        if (v96 == -1)
          sub_20E877AB8();
        v102 = &v97;
        ((void (*)(_QWORD **, _QWORD *))off_24CA0E200[v96])(&v102, v95);
        if (v96 == -1)
          sub_20E877AB8();
        v97 = &v102;
        ((void (*)(void **__return_ptr, _QWORD ***, _QWORD *))off_24CA0E1E8[v96])(v62, &v97, v95);
        if (v96 != -1)
          ((void (*)(_QWORD ***, _QWORD *))off_24CA0E1B8[v96])(&v97, v95);
        if (SHIBYTE(v63) < 0)
        {
          sub_20E860C04(__dst, v62[0], (unint64_t)v62[1]);
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v62;
          v65 = v63;
        }
        v66 = 1;
        LOBYTE(v67) = 0;
        v71 = 0;
        v72 = 1;
        sub_21022F9AC((uint64_t)__dst, (uint64_t)&v83);
        *(_OWORD *)a1 = v83;
        *(_BYTE *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 112) = 0;
        if (v93)
        {
          *(_BYTE *)(a1 + 40) = 0;
          v43 = v86;
          if ((_BYTE)v86)
          {
            *(_OWORD *)(a1 + 16) = v84;
            *(_QWORD *)(a1 + 32) = v85;
            v85 = 0;
            v84 = 0uLL;
            *(_BYTE *)(a1 + 40) = 1;
          }
          *(_BYTE *)(a1 + 48) = 0;
          *(_BYTE *)(a1 + 104) = 0;
          if (v92)
          {
            v44 = v89;
            *(_QWORD *)(a1 + 64) = v88;
            *(_OWORD *)(a1 + 48) = v87;
            v87 = 0uLL;
            *(_QWORD *)(a1 + 72) = v44;
            *(_OWORD *)(a1 + 80) = v90;
            *(_QWORD *)(a1 + 96) = v91;
            v88 = 0;
            v90 = 0uLL;
            v91 = 0;
            *(_BYTE *)(a1 + 104) = 1;
          }
          *(_BYTE *)(a1 + 112) = 1;
          *(_BYTE *)(a1 + 120) = 0;
          if (v43 && SHIBYTE(v85) < 0)
            operator delete((void *)v84);
          if (!v72)
          {
LABEL_94:
            if (SHIBYTE(v63) < 0)
            {
              v42 = v62[0];
              goto LABEL_96;
            }
            return;
          }
        }
        else
        {
          *(_BYTE *)(a1 + 120) = 0;
          if (!v72)
            goto LABEL_94;
        }
        if (v71)
        {
          if (v70 < 0)
            operator delete(v69);
          if (v68 < 0)
            operator delete(v67);
        }
        if (v66)
        {
          if (SHIBYTE(v65) < 0)
            operator delete(__dst[0]);
        }
        goto LABEL_94;
      }
      v13 = *(_QWORD *)(a2 + 8);
      if (!v13)
        goto LABEL_44;
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        v15 = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
        do
          v17 = __ldaxr(v15);
        while (__stlxr(v17 - 1, v15));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
        v13 = *(_QWORD *)(a2 + 8);
        v18 = *(std::__shared_weak_count **)(a2 + 16);
        if (v18)
        {
          v19 = (unint64_t *)&v18->__shared_owners_;
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
          do
            v21 = __ldaxr(v19);
          while (__stlxr(v21 - 1, v19));
          if (!v21)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
      }
      if (*(_BYTE *)(a2 + 53))
      {
        (*(void (**)(_QWORD *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(v95, v13, 0);
        *(_QWORD *)&v83 = &off_24C9C0338;
        v22 = *(_QWORD *)(a2 + 8);
        v23 = *(std::__shared_weak_count **)(a2 + 16);
        if (!v23)
        {
LABEL_32:
          v24 = *(_QWORD *)(a2 + 40);
          v25 = *(_DWORD *)(a2 + 48);
          v26 = *(_WORD *)(a2 + 52);
          goto LABEL_49;
        }
      }
      else
      {
LABEL_44:
        v95[0] = 0;
        *(_QWORD *)&v83 = &off_24C9C0338;
        v22 = *(_QWORD *)(a2 + 8);
        v23 = *(std::__shared_weak_count **)(a2 + 16);
        if (!v23)
          goto LABEL_32;
      }
      v29 = (unint64_t *)&v23->__shared_owners_;
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
      v24 = *(_QWORD *)(a2 + 40);
      v25 = *(_DWORD *)(a2 + 48);
      v26 = *(_WORD *)(a2 + 52);
      do
        v31 = __ldxr(v29);
      while (__stxr(v31 + 1, v29));
LABEL_49:
      *((_QWORD *)&v83 + 1) = v22;
      *(_QWORD *)&v84 = v23;
      *((_QWORD *)&v84 + 1) = *(_QWORD *)(a2 + 24);
      LODWORD(v85) = *(_DWORD *)(a2 + 32);
      v86 = v24;
      LODWORD(v87) = v25;
      WORD2(v87) = v26;
      if (v23)
      {
        v32 = (unint64_t *)&v23->__shared_owners_;
        do
          v33 = __ldaxr(v32);
        while (__stlxr(v33 - 1, v32));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      sub_21006E4E8((uint64_t)&v83);
      v34 = (std::__shared_weak_count *)v84;
      if ((_QWORD)v84)
      {
        v35 = (unint64_t *)(v84 + 8);
        do
          v36 = __ldaxr(v35);
        while (__stlxr(v36 - 1, v35));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      sub_20FF49628(&image, (uint64_t)&v97);
      CGImageDestinationAddImage(*(CGImageDestinationRef *)a3, image, 0);
      v37 = CGImageDestinationFinalize(*(CGImageDestinationRef *)a3);
      v38 = v37;
      v39 = v61;
      if (!v61)
        goto LABEL_63;
      v40 = (unint64_t *)&v61->__shared_owners_;
      do
        v41 = __ldaxr(v40);
      while (__stlxr(v41 - 1, v40));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
        if (v38)
          goto LABEL_64;
      }
      else
      {
LABEL_63:
        if (v37)
        {
LABEL_64:
          *(_BYTE *)(a1 + 120) = 1;
LABEL_116:
          v47 = (std::__shared_weak_count *)v98;
          if (v98)
          {
            v48 = (unint64_t *)(v98 + 8);
            do
              v49 = __ldaxr(v48);
            while (__stlxr(v49 - 1, v48));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          v50 = v95[0];
          v95[0] = 0;
          if (v50)
            (*(void (**)(uint64_t))(*(_QWORD *)v50 + 8))(v50);
          return;
        }
      }
      sub_20E89F6D4(v51, "Failed to save image to destination.");
      v59 = 1;
      sub_20E89F2F8(5u, (__int128 *)v51, (uint64_t)&v83);
      *(_OWORD *)a1 = v83;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v93)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v45 = v86;
        if ((_BYTE)v86)
        {
          *(_OWORD *)(a1 + 16) = v84;
          *(_QWORD *)(a1 + 32) = v85;
          v85 = 0;
          v84 = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v92)
        {
          v46 = v89;
          *(_QWORD *)(a1 + 64) = v88;
          *(_OWORD *)(a1 + 48) = v87;
          v87 = 0uLL;
          *(_QWORD *)(a1 + 72) = v46;
          *(_OWORD *)(a1 + 80) = v90;
          *(_QWORD *)(a1 + 96) = v91;
          v88 = 0;
          v90 = 0uLL;
          v91 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v45 && SHIBYTE(v85) < 0)
          operator delete((void *)v84);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v59)
      {
        if (v58)
        {
          if (v57 < 0)
            operator delete(v56);
          if (v55 < 0)
            operator delete(v54);
        }
        if (v53 && v52 < 0)
          operator delete(v51[0]);
      }
      goto LABEL_116;
    }
  }
  sub_20E89F6D4(v74, "Unsupported format");
  v82 = 1;
  sub_21022F9AC((uint64_t)v74, (uint64_t)&v83);
  *(_OWORD *)a1 = v83;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v93)
  {
    *(_BYTE *)(a1 + 40) = 0;
    v27 = v86;
    if ((_BYTE)v86)
    {
      *(_OWORD *)(a1 + 16) = v84;
      *(_QWORD *)(a1 + 32) = v85;
      v85 = 0;
      v84 = 0uLL;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v92)
    {
      v28 = v89;
      *(_QWORD *)(a1 + 64) = v88;
      *(_OWORD *)(a1 + 48) = v87;
      v87 = 0uLL;
      *(_QWORD *)(a1 + 72) = v28;
      *(_OWORD *)(a1 + 80) = v90;
      *(_QWORD *)(a1 + 96) = v91;
      v88 = 0;
      v90 = 0uLL;
      v91 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (v27 && SHIBYTE(v85) < 0)
      operator delete((void *)v84);
    if (!v82)
      return;
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
    if (!v82)
      return;
  }
  if (v81)
  {
    if (v80 < 0)
      operator delete(__p);
    if (v78 < 0)
      operator delete(v77);
  }
  if (v76 && v75 < 0)
  {
    v42 = (void *)v74[0];
LABEL_96:
    operator delete(v42);
  }
}

void sub_20FF4952C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  if (a29 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20FF49628(_QWORD *a1, uint64_t a2)
{
  const void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;

  v4 = *(const void **)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 8);
  v17 = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  sub_20FF49738(&v18, v4);
  v8 = v19;
  *a1 = v18;
  a1[1] = v8;
  if (v8)
  {
    v9 = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
    v11 = v19;
    if (v19)
    {
      v12 = (unint64_t *)&v19->__shared_owners_;
      do
        v13 = __ldaxr(v12);
      while (__stlxr(v13 - 1, v12));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  if (!v17)
    return a1;
  v14 = (unint64_t *)&v17->__shared_owners_;
  do
    v15 = __ldaxr(v14);
  while (__stlxr(v15 - 1, v14));
  if (v15)
    return a1;
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  return a1;
}

void sub_20FF49724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF49738(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24CA0E228;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20FF49798(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20FF497B0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF497C4(_QWORD *a1, const void *a2, std::__shared_weak_count *a3)
{
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v16;
  std::__shared_weak_count *v17;

  if (a3)
  {
    p_shared_owners = (unint64_t *)&a3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  sub_20FF498C8(&v16, a2);
  v6 = v17;
  *a1 = v16;
  a1[1] = v6;
  if (v6)
  {
    v7 = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
    v9 = v17;
    if (v17)
    {
      v10 = (unint64_t *)&v17->__shared_owners_;
      do
        v11 = __ldaxr(v10);
      while (__stlxr(v11 - 1, v10));
      if (!v11)
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
    }
  }
  if (!a3)
    return a1;
  v12 = (unint64_t *)&a3->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))a3->__on_zero_shared)(a3);
  std::__shared_weak_count::__release_weak(a3);
  return a1;
}

void sub_20FF498B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E86665C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_QWORD *sub_20FF498C8(_QWORD *a1, CFTypeRef cf)
{
  _QWORD *v4;

  if (cf)
    CFRetain(cf);
  *a1 = cf;
  v4 = (_QWORD *)operator new();
  *v4 = &off_24CA0E2C8;
  v4[1] = 0;
  v4[2] = 0;
  v4[3] = cf;
  a1[1] = v4;
  return a1;
}

void sub_20FF49928(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_20FF49940(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_20FF49958(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF4997C(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_20FF4999C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

const char *sub_20FF49A10()
{
  return "ImageIO";
}

uint64_t sub_20FF49A1C(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  int v7;
  size_t v8;
  void **v9;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _BYTE v20[24];
  int v21;
  void *__dst[2];
  unint64_t v23;
  _QWORD v24[5];
  _QWORD *v25;

  v21 = 0;
  v3 = operator new();
  *(_QWORD *)(v3 + 272) = 0;
  *(_OWORD *)(v3 + 240) = 0u;
  *(_OWORD *)(v3 + 256) = 0u;
  *(_OWORD *)(v3 + 208) = 0u;
  *(_OWORD *)(v3 + 224) = 0u;
  *(_OWORD *)(v3 + 176) = 0u;
  *(_OWORD *)(v3 + 192) = 0u;
  *(_OWORD *)(v3 + 144) = 0u;
  *(_OWORD *)(v3 + 160) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 80) = 0u;
  *(_OWORD *)(v3 + 96) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)(v3 + 64) = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_20E863438(v3);
  v24[0] = v3;
  if (a2 > 7)
  {
    v5 = "unknown error code";
    v6 = 18;
  }
  else
  {
    v4 = (int)a2;
    v5 = off_24CA0E428[v4];
    v6 = *(_QWORD *)((char *)&unk_2103F1860 + v4 * 8);
  }
  sub_20E86A980((_QWORD *)(v3 + 16), (uint64_t)v5, v6);
  v7 = *(_DWORD *)(v3 + 120);
  if ((v7 & 0x10) != 0)
  {
    v10 = *(_QWORD *)(v3 + 112);
    v11 = *(_QWORD *)(v3 + 72);
    if (v10 < v11)
    {
      *(_QWORD *)(v3 + 112) = v11;
      v10 = v11;
    }
    v12 = *(const void **)(v3 + 64);
    v8 = v10 - (_QWORD)v12;
    if (v10 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v7 & 8) == 0)
    {
      v8 = 0;
      HIBYTE(v23) = 0;
      v9 = __dst;
      goto LABEL_17;
    }
    v12 = *(const void **)(v3 + 40);
    v8 = *(_QWORD *)(v3 + 56) - (_QWORD)v12;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_20E860B7C();
  }
  if (v8 >= 0x17)
  {
    v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v13 = v8 | 7;
    v14 = v13 + 1;
    v9 = (void **)operator new(v13 + 1);
    __dst[1] = (void *)v8;
    v23 = v14 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_16;
  }
  HIBYTE(v23) = v8;
  v9 = __dst;
  if (v8)
LABEL_16:
    memmove(v9, v12, v8);
LABEL_17:
  *((_BYTE *)v9 + v8) = 0;
  v15 = v24[0];
  if (v24[0])
  {
    v16 = MEMORY[0x24BEDB7F0];
    v17 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v24[0] = *MEMORY[0x24BEDB7F0];
    v18 = *(_QWORD *)(v16 + 72);
    *(_QWORD *)(v15 + *(_QWORD *)(v17 - 24)) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v15 + 16) = v18;
    if (*(char *)(v15 + 111) < 0)
      operator delete(*(void **)(v15 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x212BC6290](v15 + 128);
    MEMORY[0x212BC6398](v15, 0x10B2C40EED050F3);
  }
  v24[0] = v20;
  v24[1] = __dst;
  v24[2] = v20;
  v24[3] = __dst;
  v24[4] = __dst;
  if (v21 == -1)
    sub_20E877AB8();
  v25 = v24;
  ((void (*)(_QWORD **, _BYTE *))off_24CA0E368[v21])(&v25, v20);
  if (SHIBYTE(v23) < 0)
    operator delete(__dst[0]);
  if (v21 == -1)
    sub_20E877AB8();
  v24[0] = __dst;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0E398[v21])(v24, v20);
  if (v21 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24CA0E380[v21])(v24, v20);
  return result;
}

void sub_20FF49CEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  uint64_t v24;

  MEMORY[0x212BC6398](v24, 0x10B2C40EED050F3);
  if (a12 != -1)
    ((void (*)(char *, uint64_t *))off_24CA0E380[a12])(&a17, &a9);
  _Unwind_Resume(a1);
}

void sub_20FF49D6C(uint64_t a1, int a2, int a3)
{
  void *v4[2];
  uint64_t v5;
  void *__p[2];
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  char v14;
  int v15;
  int v16;
  char v17;
  char v18;
  _DWORD v19[6];
  int v20;
  _QWORD **v21;
  const char *v22;
  _DWORD *v23;
  const char *v24;
  const char *v25;
  _QWORD *v26;

  v15 = a3;
  v16 = a2;
  v20 = 0;
  sub_20E8ECA30(v19, "Requested to load ");
  sub_20FF48A40((uint64_t)&v18, (uint64_t)v19, &v16);
  v21 = (_QWORD **)v19;
  v22 = " format, but file contains ";
  v23 = v19;
  v24 = " format, but file contains ";
  v25 = " format, but file contains ";
  if (v20 == -1)
    sub_20E877AB8();
  v26 = &v21;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0E3B0[v20])(&v26, v19);
  sub_20FF48A40((uint64_t)&v17, (uint64_t)v19, &v15);
  v21 = (_QWORD **)v19;
  v22 = " data.";
  v23 = v19;
  v24 = " data.";
  v25 = " data.";
  if (v20 == -1)
    sub_20E877AB8();
  v26 = &v21;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0E3C8[v20])(&v26, v19);
  if (v20 == -1)
    sub_20E877AB8();
  v21 = &v26;
  ((void (*)(void **__return_ptr, _QWORD ***, _DWORD *))off_24CA0E398[v20])(v4, &v21, v19);
  if (v20 != -1)
    ((void (*)(_QWORD ***, _DWORD *))off_24CA0E380[v20])(&v21, v19);
  if (SHIBYTE(v5) < 0)
  {
    sub_20E860C04(__p, v4[0], (unint64_t)v4[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v4;
    v7 = v5;
  }
  v8 = 1;
  LOBYTE(v9) = 0;
  v13 = 0;
  v14 = 1;
  sub_20FF4871C(1u, (__int128 *)__p, a1);
  if (v14)
  {
    if (!v13)
      goto LABEL_13;
    if (v12 < 0)
    {
      operator delete(v11);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v8)
          goto LABEL_16;
LABEL_14:
        if (SHIBYTE(v7) < 0)
          operator delete(__p[0]);
        goto LABEL_16;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v9);
    if (!v8)
      goto LABEL_16;
    goto LABEL_14;
  }
LABEL_16:
  if (SHIBYTE(v5) < 0)
    operator delete(v4[0]);
}

void sub_20FF49F8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF49FBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF49FD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF49FE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF49FF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF4A00C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF4A020(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF4A034(unsigned int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  void *v4[2];
  uint64_t v5;
  void *__p[2];
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  char v14;
  unsigned int v15;
  unsigned int v16;

  v15 = a2;
  v16 = a1;
  sub_20FF4A178("Desired image format is ", &v16, (uint64_t)" but file contains ", &v15, (uint64_t)".");
  if (SHIBYTE(v5) < 0)
  {
    sub_20E860C04(__p, v4[0], (unint64_t)v4[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v4;
    v7 = v5;
  }
  v8 = 1;
  LOBYTE(v9) = 0;
  v13 = 0;
  v14 = 1;
  sub_20FF4871C(2u, (__int128 *)__p, a3);
  if (!v14)
    goto LABEL_11;
  if (v13)
  {
    if ((v12 & 0x80000000) == 0)
    {
      if ((v10 & 0x80000000) == 0)
        goto LABEL_8;
LABEL_14:
      operator delete(v9);
      if (!v8)
        goto LABEL_11;
      goto LABEL_9;
    }
    operator delete(v11);
    if (v10 < 0)
      goto LABEL_14;
  }
LABEL_8:
  if (!v8)
    goto LABEL_11;
LABEL_9:
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
LABEL_11:
  if (SHIBYTE(v5) < 0)
    operator delete(v4[0]);
}

void sub_20FF4A14C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF4A178(char *__s, unsigned int *a2, uint64_t a3, unsigned int *a4, uint64_t a5)
{
  uint64_t result;
  char v10;
  char v11;
  _DWORD v12[6];
  int v13;
  _QWORD **v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v13 = 0;
  sub_20E8A2D64(v12, __s);
  sub_20E8A2C70((uint64_t)&v11, (uint64_t)v12, a2);
  v14 = (_QWORD **)v12;
  v15 = a3;
  v16 = v12;
  v17 = a3;
  v18 = a3;
  if (v13 == -1)
    sub_20E877AB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0E3E0[v13])(&v19, v12);
  sub_20E8A2C70((uint64_t)&v10, (uint64_t)v12, a4);
  v14 = (_QWORD **)v12;
  v15 = a5;
  v16 = v12;
  v17 = a5;
  v18 = a5;
  if (v13 == -1)
    sub_20E877AB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0E3F8[v13])(&v19, v12);
  if (v13 == -1)
    sub_20E877AB8();
  v14 = &v19;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0E398[v13])(&v14, v12);
  if (v13 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0E380[v13])(&v14, v12);
  return result;
}

void sub_20FF4A2D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A2FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A34C(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  void *v4[2];
  uint64_t v5;
  void *__p[2];
  uint64_t v7;
  char v8;
  void *v9;
  char v10;
  void *v11;
  char v12;
  char v13;
  char v14;
  int v15;
  unsigned int v16;

  v15 = a2;
  v16 = a1;
  sub_20FF4A490("Requested to load format ", &v16, (uint64_t)", but is not supported by ", &v15, (uint64_t)".");
  if (SHIBYTE(v5) < 0)
  {
    sub_20E860C04(__p, v4[0], (unint64_t)v4[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v4;
    v7 = v5;
  }
  v8 = 1;
  LOBYTE(v9) = 0;
  v13 = 0;
  v14 = 1;
  sub_20FF4871C(3u, (__int128 *)__p, a3);
  if (!v14)
    goto LABEL_11;
  if (v13)
  {
    if ((v12 & 0x80000000) == 0)
    {
      if ((v10 & 0x80000000) == 0)
        goto LABEL_8;
LABEL_14:
      operator delete(v9);
      if (!v8)
        goto LABEL_11;
      goto LABEL_9;
    }
    operator delete(v11);
    if (v10 < 0)
      goto LABEL_14;
  }
LABEL_8:
  if (!v8)
    goto LABEL_11;
LABEL_9:
  if (SHIBYTE(v7) < 0)
    operator delete(__p[0]);
LABEL_11:
  if (SHIBYTE(v5) < 0)
    operator delete(v4[0]);
}

void sub_20FF4A464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF4A490(char *__s, unsigned int *a2, uint64_t a3, int *a4, uint64_t a5)
{
  uint64_t result;
  char v10;
  char v11;
  _DWORD v12[6];
  int v13;
  _QWORD **v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v13 = 0;
  sub_20EAA1FB8(v12, __s);
  sub_20E8A2C70((uint64_t)&v11, (uint64_t)v12, a2);
  v14 = (_QWORD **)v12;
  v15 = a3;
  v16 = v12;
  v17 = a3;
  v18 = a3;
  if (v13 == -1)
    sub_20E877AB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0E410[v13])(&v19, v12);
  sub_20FF48A40((uint64_t)&v10, (uint64_t)v12, a4);
  v14 = (_QWORD **)v12;
  v15 = a5;
  v16 = v12;
  v17 = a5;
  v18 = a5;
  if (v13 == -1)
    sub_20E877AB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0E3F8[v13])(&v19, v12);
  if (v13 == -1)
    sub_20E877AB8();
  v14 = &v19;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0E398[v13])(&v14, v12);
  if (v13 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0E380[v13])(&v14, v12);
  return result;
}

void sub_20FF4A5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A63C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4A664(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v4;
  size_t v5;
  void *v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  void *v18;
  void *v19;
  int64_t v20;
  std::string v21;
  std::string __dst;
  char v23;
  void *v24;
  char v25;
  void *v26;
  char v27;
  char v28;
  char v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  unsigned __int8 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  char v40;
  __int128 v41;
  void *v42[2];
  const char *v43;
  uint64_t v44;
  __int128 v45;
  const void *v46;
  unint64_t v47;
  void *__p[2];
  uint64_t v49;
  char v50;
  char v51;
  unint64_t v52;
  int v53;
  _QWORD v54[20];

  v54[19] = *MEMORY[0x24BDAC8D0];
  if (a2 != 255)
  {
    if (a2 == 137)
    {
      if (a1 == 3 || !a1)
      {
        v4 = 3;
LABEL_16:
        *(_DWORD *)a3 = v4;
        *(_BYTE *)(a3 + 120) = 1;
        return;
      }
      sub_20FF49D6C((uint64_t)&v41, a1, 3);
      goto LABEL_59;
    }
    if ((a2 & 0xFFFFFFFB) == 0x49)
    {
      if (a1 == 5 || !a1)
      {
        v4 = 5;
        goto LABEL_16;
      }
      sub_20FF49D6C((uint64_t)&v41, a1, 5);
      goto LABEL_59;
    }
    sub_20E863438((uint64_t)&v41);
    *(_DWORD *)((char *)&v42[1] + *((_QWORD *)v42[0] - 3)) = *(_DWORD *)((_BYTE *)&v42[1] + *((_QWORD *)v42[0] - 3)) & 0xFFFFFFB5 | 8;
    std::ostream::operator<<();
    if ((v53 & 0x10) != 0)
    {
      v7 = v52;
      if (v52 < v47)
      {
        v52 = v47;
        v7 = v47;
      }
      v8 = v46;
      v5 = v7 - (_QWORD)v46;
      if (v7 - (unint64_t)v46 >= 0x7FFFFFFFFFFFFFF8)
        goto LABEL_70;
    }
    else
    {
      if ((v53 & 8) == 0)
      {
        v5 = 0;
        HIBYTE(v20) = 0;
        v6 = &v18;
        goto LABEL_28;
      }
      v8 = (const void *)v44;
      v5 = *((_QWORD *)&v45 + 1) - v44;
      if ((unint64_t)(*((_QWORD *)&v45 + 1) - v44) >= 0x7FFFFFFFFFFFFFF8)
LABEL_70:
        sub_20E860B7C();
    }
    if (v5 >= 0x17)
    {
      v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v9 = v5 | 7;
      v10 = v9 + 1;
      v6 = operator new(v9 + 1);
      v19 = (void *)v5;
      v20 = v10 | 0x8000000000000000;
      v18 = v6;
    }
    else
    {
      HIBYTE(v20) = v5;
      v6 = &v18;
      if (!v5)
      {
LABEL_28:
        *((_BYTE *)v6 + v5) = 0;
        *(_QWORD *)&v41 = *MEMORY[0x24BEDB7F0];
        v11 = *(void **)(MEMORY[0x24BEDB7F0] + 72);
        *(void **)((char *)&v42[-2] + *(_QWORD *)(v41 - 24)) = *(void **)(MEMORY[0x24BEDB7F0] + 64);
        v42[0] = v11;
        v42[1] = (void *)(MEMORY[0x24BEDB848] + 16);
        if (v51 < 0)
          operator delete(__p[1]);
        std::streambuf::~streambuf();
        std::iostream::~basic_iostream();
        MEMORY[0x212BC6290](v54);
        *(_QWORD *)&v41 = "Found file format of unsupported format signature byte '0x";
        *((_QWORD *)&v41 + 1) = 58;
        v12 = (void *)HIBYTE(v20);
        v13 = &v18;
        if (v20 < 0)
        {
          v13 = v18;
          v12 = v19;
        }
        v42[0] = v13;
        v42[1] = v12;
        v43 = "'.";
        v44 = 2;
        sub_20E8778D4((uint64_t)&v41, (uint64_t)&v45, 0, 0, &v21);
        if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
          sub_20E860C04(&__dst, v21.__r_.__value_.__l.__data_, v21.__r_.__value_.__l.__size_);
        else
          __dst = v21;
        v23 = 1;
        LOBYTE(v24) = 0;
        v28 = 0;
        v29 = 1;
        sub_20FF4871C(1u, (__int128 *)&__dst, (uint64_t)&v30);
        *(_OWORD *)a3 = v30;
        *(_BYTE *)(a3 + 16) = 0;
        *(_BYTE *)(a3 + 112) = 0;
        if (v40)
        {
          *(_BYTE *)(a3 + 40) = 0;
          v14 = v33;
          if (v33)
          {
            *(_OWORD *)(a3 + 16) = v31;
            *(_QWORD *)(a3 + 32) = v32;
            v32 = 0;
            v31 = 0uLL;
            *(_BYTE *)(a3 + 40) = 1;
          }
          *(_BYTE *)(a3 + 48) = 0;
          *(_BYTE *)(a3 + 104) = 0;
          if (v39)
          {
            v15 = v36;
            *(_QWORD *)(a3 + 64) = v35;
            *(_OWORD *)(a3 + 48) = v34;
            v34 = 0uLL;
            *(_QWORD *)(a3 + 72) = v15;
            *(_OWORD *)(a3 + 80) = v37;
            *(_QWORD *)(a3 + 96) = v38;
            v35 = 0;
            v37 = 0uLL;
            v38 = 0;
            *(_BYTE *)(a3 + 104) = 1;
          }
          *(_BYTE *)(a3 + 112) = 1;
          *(_BYTE *)(a3 + 120) = 0;
          if (v14 && SHIBYTE(v32) < 0)
            operator delete((void *)v31);
        }
        else
        {
          *(_BYTE *)(a3 + 120) = 0;
        }
        if (v29)
        {
          if (v28)
          {
            if (v27 < 0)
              operator delete(v26);
            if (v25 < 0)
              operator delete(v24);
          }
          if (v23 && SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__dst.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v21.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v20) & 0x80000000) == 0)
            return;
        }
        else if ((SHIBYTE(v20) & 0x80000000) == 0)
        {
          return;
        }
        operator delete(v18);
        return;
      }
    }
    memmove(v6, v8, v5);
    goto LABEL_28;
  }
  if ((a1 & 0xFFFFFFFB) == 0)
  {
    v4 = 4;
    goto LABEL_16;
  }
  sub_20FF49D6C((uint64_t)&v41, a1, 4);
LABEL_59:
  *(_OWORD *)a3 = v41;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if ((_BYTE)v52)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v16 = v44;
    if ((_BYTE)v44)
    {
      *(_OWORD *)(a3 + 16) = *(_OWORD *)v42;
      *(_QWORD *)(a3 + 32) = v43;
      v42[1] = 0;
      v43 = 0;
      v42[0] = 0;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v50)
    {
      v17 = v47;
      *(_QWORD *)(a3 + 64) = v46;
      *(_OWORD *)(a3 + 48) = v45;
      v45 = 0uLL;
      *(_QWORD *)(a3 + 72) = v17;
      *(_OWORD *)(a3 + 80) = *(_OWORD *)__p;
      *(_QWORD *)(a3 + 96) = v49;
      v46 = 0;
      __p[0] = 0;
      __p[1] = 0;
      v49 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (v16)
    {
      if (SHIBYTE(v43) < 0)
        operator delete(v42[0]);
    }
  }
  else
  {
    *(_BYTE *)(a3 + 120) = 0;
  }
}

void sub_20FF4ABC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  if (a20 < 0)
    operator delete(__p);
  if (a14 < 0)
  {
    operator delete(a9);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF4AC24(std::error_category *a1)
{
  std::error_category::~error_category(a1);
  JUMPOUT(0x212BC6398);
}

void sub_20FF4AC48(char *info@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  std::__shared_weak_count_vtbl *v5;
  CGImageDestinationRef v6;
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  void *v20[2];
  uint64_t v21;
  void *__dst[2];
  uint64_t v23;
  char v24;
  void *v25;
  char v26;
  void *v27;
  char v28;
  char v29;
  char v30;
  CGDataConsumerCallbacks cbks;
  __int128 __p;
  uint64_t v33;
  unsigned __int8 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  char v41;
  CFStringRef v42;
  std::__shared_weak_count *v43;
  char v44;
  std::__shared_weak_count_vtbl *v45;
  std::__shared_weak_count *v46;
  int v47;
  _DWORD v48[6];
  int v49;
  char v50;
  char *v51;

  v47 = a2;
  if (*(_DWORD *)&info[*(_QWORD *)(*(_QWORD *)info - 24) + 32]
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/ImageDestinationRef.cpp", 71, (uint64_t)"file.good()", 11, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  cbks = (CGDataConsumerCallbacks)xmmword_24CA13700;
  v5 = (std::__shared_weak_count_vtbl *)CGDataConsumerCreate(info, &cbks);
  sub_21006CBF8(&v45, v5, 0);
  sub_20FF4B0B4((uint64_t)&v42, v47);
  if (v44)
  {
    v6 = CGImageDestinationCreateWithDataConsumer((CGDataConsumerRef)v45, v42, 1uLL, 0);
    v7 = (std::__shared_weak_count *)operator new();
    v8 = v7;
    v7->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0E2C8;
    v7->__shared_weak_owners_ = 0;
    v7[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v8);
    }
    *(_QWORD *)a3 = v6;
    *(_QWORD *)(a3 + 8) = v8;
    *(_BYTE *)(a3 + 120) = 1;
    v12 = v43;
    if (v43)
    {
      v13 = (unint64_t *)&v43->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    goto LABEL_41;
  }
  v49 = 0;
  sub_20EAA4FA4(v48, "ImageDestinationRef does not (yet) support format ");
  sub_20FF48A40((uint64_t)&v51, (uint64_t)v48, &v47);
  if (v49 == -1)
    sub_20E877AB8();
  v51 = &v50;
  ((void (*)(void **__return_ptr, char **, _DWORD *))off_24CA0E4E0[v49])(v20, &v51, v48);
  if (v49 != -1)
    ((void (*)(char **, _DWORD *))off_24CA0E4C8[v49])(&v51, v48);
  if (SHIBYTE(v21) < 0)
  {
    sub_20E860C04(__dst, v20[0], (unint64_t)v20[1]);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)v20;
    v23 = v21;
  }
  v24 = 1;
  LOBYTE(v25) = 0;
  v29 = 0;
  v30 = 1;
  sub_21022FAE0((uint64_t)__dst, (uint64_t)&cbks);
  *(CGDataConsumerCallbacks *)a3 = cbks;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v41)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v15 = v34;
    if (v34)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(_QWORD *)(a3 + 32) = v33;
      v33 = 0;
      __p = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v40)
    {
      v16 = v37;
      *(_QWORD *)(a3 + 64) = v36;
      *(_OWORD *)(a3 + 48) = v35;
      v35 = 0uLL;
      *(_QWORD *)(a3 + 72) = v16;
      *(_OWORD *)(a3 + 80) = v38;
      *(_QWORD *)(a3 + 96) = v39;
      v36 = 0;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    *(_BYTE *)(a3 + 120) = 0;
    if (v15 && SHIBYTE(v33) < 0)
      operator delete((void *)__p);
    if (!v30)
      goto LABEL_39;
    goto LABEL_31;
  }
  *(_BYTE *)(a3 + 120) = 0;
  if (v30)
  {
LABEL_31:
    if (v29)
    {
      if (v28 < 0)
        operator delete(v27);
      if (v26 < 0)
        operator delete(v25);
    }
    if (v24 && SHIBYTE(v23) < 0)
      operator delete(__dst[0]);
  }
LABEL_39:
  if (SHIBYTE(v21) < 0)
    operator delete(v20[0]);
LABEL_41:
  v17 = v46;
  if (v46)
  {
    v18 = (unint64_t *)&v46->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
}

void sub_20FF4B014(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  __break(1u);
}

void sub_20FF4B064()
{
  __cxa_end_catch();
  JUMPOUT(0x20FF4B088);
}

void sub_20FF4B074()
{
  JUMPOUT(0x20FF4B088);
}

void sub_20FF4B0A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1 - 104);
  _Unwind_Resume(a1);
}

void sub_20FF4B0B4(uint64_t a1, int a2)
{
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;

  switch(a2)
  {
    case 5:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      p_shared_owners = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9B0050;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.tiff");
      *(_QWORD *)a1 = CFSTR("public.tiff");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v10 = __ldxr(p_shared_owners);
      while (__stxr(v10 + 1, p_shared_owners));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(p_shared_owners);
      while (__stlxr(v6 - 1, p_shared_owners));
      break;
    case 4:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      v7 = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9B0050;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.jpeg");
      *(_QWORD *)a1 = CFSTR("public.jpeg");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v8 = __ldxr(v7);
      while (__stxr(v8 + 1, v7));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(v7);
      while (__stlxr(v6 - 1, v7));
      break;
    case 3:
      v3 = (std::__shared_weak_count *)operator new();
      v3->__shared_owners_ = 0;
      v4 = (unint64_t *)&v3->__shared_owners_;
      v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9B0050;
      v3->__shared_weak_owners_ = 0;
      v3[1].__vftable = (std::__shared_weak_count_vtbl *)CFSTR("public.png");
      *(_QWORD *)a1 = CFSTR("public.png");
      *(_QWORD *)(a1 + 8) = v3;
      do
        v5 = __ldxr(v4);
      while (__stxr(v5 + 1, v4));
      *(_BYTE *)(a1 + 16) = 1;
      do
        v6 = __ldaxr(v4);
      while (__stlxr(v6 - 1, v4));
      break;
    default:
      *(_BYTE *)a1 = 0;
      *(_BYTE *)(a1 + 16) = 0;
      return;
  }
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_20FF4B260(void *a1)
{
  __cxa_begin_catch(a1);
  CFRelease(CFSTR("public.png"));
  __cxa_rethrow();
}

void sub_20FF4B274()
{
  __break(1u);
}

void sub_20FF4B2C8()
{
  __cxa_end_catch();
  JUMPOUT(0x20FF4B2D0);
}

void sub_20FF4B2DC(_QWORD *a1@<X0>, unsigned int a2@<W1>, _QWORD *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  std::string *v15;
  __int128 v16;
  std::string *v17;
  void *size;
  void *v19;
  int v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  __int128 *v27;
  uint64_t v28;
  __int128 *v29;
  uint64_t v30;
  std::string v31;
  std::string v32;
  _DWORD v33[2];
  void *__dst[2];
  _BYTE v35[7];
  char v36;
  char v37;
  void *v38;
  char v39;
  void *v40;
  char v41;
  char v42;
  char v43;
  int v44;
  _BYTE v45[24];
  int v46;
  char v47;
  char *v48;
  __int128 v49;
  __int128 __p;
  uint64_t v51;
  unsigned __int8 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  char v58;
  char v59;
  _QWORD v60[3];
  _QWORD *v61;
  _QWORD v62[3];
  _QWORD *v63;
  _QWORD v64[3];
  _QWORD *v65;
  _BYTE v66[24];
  _BYTE *v67;
  uint64_t v68;

  v68 = *MEMORY[0x24BDAC8D0];
  v44 = a4;
  switch(a4)
  {
    case 1:
    case 2:
      v8 = (_QWORD *)a1[3];
      if (v8)
      {
        if (v8 == a1)
        {
          v67 = v66;
          (*(void (**)(_QWORD *, _BYTE *))(*a1 + 24))(a1, v66);
        }
        else
        {
          v67 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*v8 + 16))(a1[3]);
        }
      }
      else
      {
        v67 = 0;
      }
      sub_20FF4C190((uint64_t)v66, a3, a2, a5);
      v21 = v67;
      if (v67 != v66)
        goto LABEL_87;
      v22 = 4;
      v21 = v66;
      goto LABEL_89;
    case 3:
      v11 = (_QWORD *)a1[3];
      if (v11)
      {
        if (v11 != a1)
        {
          v12 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v11 + 16))(a1[3]);
          v65 = v12;
          if (!v12)
            goto LABEL_69;
LABEL_67:
          if (v12 != v64)
          {
            v12 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v12 + 16))(v12);
            goto LABEL_69;
          }
          *((_QWORD *)&__p + 1) = &v49;
          (*(void (**)(_QWORD *, __int128 *))(v64[0] + 24))(v64, &v49);
LABEL_70:
          sub_20FF472E8(&v49, a3, a2, 3, a5);
          v27 = (__int128 *)*((_QWORD *)&__p + 1);
          if (*((__int128 **)&__p + 1) == &v49)
          {
            v28 = 4;
            v27 = &v49;
          }
          else
          {
            if (!*((_QWORD *)&__p + 1))
              goto LABEL_75;
            v28 = 5;
          }
          (*(void (**)(void))(*(_QWORD *)v27 + 8 * v28))();
LABEL_75:
          v21 = v65;
          if (v65 == v64)
          {
            v22 = 4;
            v21 = v64;
            goto LABEL_89;
          }
          goto LABEL_87;
        }
        v65 = v64;
        (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v64);
        v12 = v65;
        if (v65)
          goto LABEL_67;
      }
      else
      {
        v12 = 0;
        v65 = 0;
      }
LABEL_69:
      *((_QWORD *)&__p + 1) = v12;
      goto LABEL_70;
    case 4:
      v13 = (_QWORD *)a1[3];
      if (v13)
      {
        if (v13 != a1)
        {
          v14 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v13 + 16))(a1[3]);
          v63 = v14;
          if (!v14)
            goto LABEL_80;
LABEL_78:
          if (v14 != v62)
          {
            v14 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v14 + 16))(v14);
            goto LABEL_80;
          }
          *((_QWORD *)&__p + 1) = &v49;
          (*(void (**)(_QWORD *, __int128 *))(v62[0] + 24))(v62, &v49);
LABEL_81:
          sub_20FF472E8(&v49, a3, a2, 4, a5);
          v29 = (__int128 *)*((_QWORD *)&__p + 1);
          if (*((__int128 **)&__p + 1) == &v49)
          {
            v30 = 4;
            v29 = &v49;
          }
          else
          {
            if (!*((_QWORD *)&__p + 1))
              goto LABEL_86;
            v30 = 5;
          }
          (*(void (**)(void))(*(_QWORD *)v29 + 8 * v30))();
LABEL_86:
          v21 = v63;
          if (v63 == v62)
          {
            v22 = 4;
            v21 = v62;
            goto LABEL_89;
          }
          goto LABEL_87;
        }
        v63 = v62;
        (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v62);
        v14 = v63;
        if (v63)
          goto LABEL_78;
      }
      else
      {
        v14 = 0;
        v63 = 0;
      }
LABEL_80:
      *((_QWORD *)&__p + 1) = v14;
      goto LABEL_81;
    case 5:
      v9 = (_QWORD *)a1[3];
      if (v9)
      {
        if (v9 != a1)
        {
          v10 = (_QWORD *)(*(uint64_t (**)(_QWORD))(*v9 + 16))(a1[3]);
          v61 = v10;
          if (!v10)
            goto LABEL_58;
LABEL_56:
          if (v10 != v60)
          {
            v10 = (_QWORD *)(*(uint64_t (**)(_QWORD *))(*v10 + 16))(v10);
            goto LABEL_58;
          }
          *((_QWORD *)&__p + 1) = &v49;
          (*(void (**)(_QWORD *, __int128 *))(v60[0] + 24))(v60, &v49);
LABEL_59:
          sub_20FF472E8(&v49, a3, a2, 5, a5);
          v25 = (__int128 *)*((_QWORD *)&__p + 1);
          if (*((__int128 **)&__p + 1) == &v49)
          {
            v26 = 4;
            v25 = &v49;
          }
          else
          {
            if (!*((_QWORD *)&__p + 1))
              goto LABEL_64;
            v26 = 5;
          }
          (*(void (**)(void))(*(_QWORD *)v25 + 8 * v26))();
LABEL_64:
          v21 = v61;
          if (v61 == v60)
          {
            v22 = 4;
            v21 = v60;
LABEL_89:
            (*(void (**)(void))(*v21 + 8 * v22))();
            return;
          }
LABEL_87:
          if (!v21)
            return;
          v22 = 5;
          goto LABEL_89;
        }
        v61 = v60;
        (*(void (**)(_QWORD *, _QWORD *))(*a1 + 24))(a1, v60);
        v10 = v61;
        if (v61)
          goto LABEL_56;
      }
      else
      {
        v10 = 0;
        v61 = 0;
      }
LABEL_58:
      *((_QWORD *)&__p + 1) = v10;
      goto LABEL_59;
    default:
      v46 = 0;
      sub_20FF48A40((uint64_t)&v48, (uint64_t)v45, &v44);
      if (v46 == -1)
        sub_20E877AB8();
      v48 = &v47;
      ((void (*)(std::string *__return_ptr, char **, _BYTE *))off_24CA0E510[v46])(&v31, &v48, v45);
      if (v46 != -1)
        ((void (*)(char **, _BYTE *))off_24CA0E4F8[v46])(&v48, v45);
      v15 = std::string::insert(&v31, 0, "No known method to load file of ", 0x20uLL);
      v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
      v32.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v16;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      v17 = std::string::append(&v32, " format.", 8uLL);
      v19 = (void *)v17->__r_.__value_.__r.__words[0];
      size = (void *)v17->__r_.__value_.__l.__size_;
      v33[0] = v17->__r_.__value_.__r.__words[2];
      *(_DWORD *)((char *)v33 + 3) = *(_DWORD *)((char *)&v17->__r_.__value_.__r.__words[2] + 3);
      v20 = SHIBYTE(v17->__r_.__value_.__r.__words[2]);
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      if (v20 < 0)
      {
        sub_20E860C04(__dst, v19, (unint64_t)size);
      }
      else
      {
        __dst[0] = v19;
        __dst[1] = size;
        *(_DWORD *)v35 = v33[0];
        *(_DWORD *)&v35[3] = *(_DWORD *)((char *)v33 + 3);
        v36 = v20;
      }
      v37 = 1;
      LOBYTE(v38) = 0;
      v42 = 0;
      v43 = 1;
      sub_21022FAE0((uint64_t)__dst, (uint64_t)&v49);
      *(_OWORD *)a5 = v49;
      *(_BYTE *)(a5 + 16) = 0;
      *(_BYTE *)(a5 + 112) = 0;
      if (v59)
      {
        *(_BYTE *)(a5 + 40) = 0;
        v23 = v52;
        if (v52)
        {
          *(_OWORD *)(a5 + 16) = __p;
          *(_QWORD *)(a5 + 32) = v51;
          v51 = 0;
          __p = 0uLL;
          *(_BYTE *)(a5 + 40) = 1;
        }
        *(_BYTE *)(a5 + 48) = 0;
        *(_BYTE *)(a5 + 104) = 0;
        if (v58)
        {
          v24 = v55;
          *(_QWORD *)(a5 + 64) = v54;
          *(_OWORD *)(a5 + 48) = v53;
          v53 = 0uLL;
          *(_QWORD *)(a5 + 72) = v24;
          *(_OWORD *)(a5 + 80) = v56;
          *(_QWORD *)(a5 + 96) = v57;
          v54 = 0;
          v56 = 0uLL;
          v57 = 0;
          *(_BYTE *)(a5 + 104) = 1;
        }
        *(_BYTE *)(a5 + 112) = 1;
        *(_BYTE *)(a5 + 120) = 0;
        if (v23 && SHIBYTE(v51) < 0)
          operator delete((void *)__p);
      }
      else
      {
        *(_BYTE *)(a5 + 120) = 0;
      }
      if (v43)
      {
        if (v42)
        {
          if (v41 < 0)
            operator delete(v40);
          if (v39 < 0)
            operator delete(v38);
        }
        if (v37 && v36 < 0)
          operator delete(__dst[0]);
      }
      if (v20 < 0)
      {
        operator delete(v19);
        if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_50:
          if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            return;
          goto LABEL_54;
        }
      }
      else if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_50;
      }
      operator delete(v32.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
LABEL_54:
      operator delete(v31.__r_.__value_.__l.__data_);
      return;
  }
}

void sub_20FF4B964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  void *v46;

  operator delete(v46);
  if (a21 < 0)
  {
    operator delete(__p);
    if (a15 < 0)
    {
LABEL_5:
      operator delete(a10);
      _Unwind_Resume(a1);
    }
  }
  else if (a15 < 0)
  {
    goto LABEL_5;
  }
  _Unwind_Resume(a1);
}

uint64_t sub_20FF4BB98(char *__s, uint64_t a2, uint64_t a3, int *a4, uint64_t a5)
{
  uint64_t result;
  char v10;
  char v11;
  _DWORD v12[6];
  int v13;
  _QWORD **v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v13 = 0;
  sub_20EE0A738(v12, __s);
  sub_20E878638((uint64_t)&v11, (uint64_t)v12, a2);
  v14 = (_QWORD **)v12;
  v15 = a3;
  v16 = v12;
  v17 = a3;
  v18 = a3;
  if (v13 == -1)
    sub_20E877AB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0E528[v13])(&v19, v12);
  sub_20FF48A40((uint64_t)&v10, (uint64_t)v12, a4);
  v14 = (_QWORD **)v12;
  v15 = a5;
  v16 = v12;
  v17 = a5;
  v18 = a5;
  if (v13 == -1)
    sub_20E877AB8();
  v19 = &v14;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0E540[v13])(&v19, v12);
  if (v13 == -1)
    sub_20E877AB8();
  v14 = &v19;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0E510[v13])(&v14, v12);
  if (v13 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0E4F8[v13])(&v14, v12);
  return result;
}

void sub_20FF4BCF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4BD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4BD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4BD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4BD44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4BD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF4BD6C(_DWORD *a1@<X0>, char *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  void *v9[2];
  uint64_t v10;
  void *__dst[2];
  uint64_t v12;
  char v13;
  void *v14;
  char v15;
  void *__p;
  char v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  unsigned __int8 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  _DWORD v32[6];
  int v33;
  _QWORD **v34;
  const char *v35;
  _DWORD *v36;
  const char *v37;
  const char *v38;
  _QWORD *v39;

  switch(a3)
  {
    case 0:
      v8 = 0;
      v33 = 0;
      sub_20E9737A0(v32, "Format ");
      sub_20FF48A40((uint64_t)&v31, (uint64_t)v32, &v8);
      v34 = (_QWORD **)v32;
      v35 = " invalid. ";
      v36 = v32;
      v37 = " invalid. ";
      v38 = " invalid. ";
      if (v33 == -1)
        sub_20E877AB8();
      v39 = &v34;
      ((void (*)(_QWORD **, _DWORD *))off_24CA0E558[v33])(&v39, v32);
      v34 = (_QWORD **)v32;
      v35 = "Must choose format to save.";
      v36 = v32;
      v37 = "Must choose format to save.";
      v38 = "Must choose format to save.";
      if (v33 == -1)
        sub_20E877AB8();
      v39 = &v34;
      ((void (*)(_QWORD **, _DWORD *))off_24CA0E570[v33])(&v39, v32);
      if (v33 == -1)
        sub_20E877AB8();
      v34 = &v39;
      ((void (*)(void **__return_ptr, _QWORD ***, _DWORD *))off_24CA0E510[v33])(v9, &v34, v32);
      if (v33 != -1)
        ((void (*)(_QWORD ***, _DWORD *))off_24CA0E4F8[v33])(&v34, v32);
      if (SHIBYTE(v10) < 0)
      {
        sub_20E860C04(__dst, v9[0], (unint64_t)v9[1]);
      }
      else
      {
        *(_OWORD *)__dst = *(_OWORD *)v9;
        v12 = v10;
      }
      v13 = 1;
      LOBYTE(v14) = 0;
      v18 = 0;
      v19 = 1;
      sub_21022F9AC((uint64_t)__dst, (uint64_t)&v20);
      *(_OWORD *)a4 = v20;
      *(_BYTE *)(a4 + 16) = 0;
      *(_BYTE *)(a4 + 112) = 0;
      if (v30)
      {
        *(_BYTE *)(a4 + 40) = 0;
        v6 = v23;
        if (v23)
        {
          *(_OWORD *)(a4 + 16) = v21;
          *(_QWORD *)(a4 + 32) = v22;
          v22 = 0;
          v21 = 0uLL;
          *(_BYTE *)(a4 + 40) = 1;
        }
        *(_BYTE *)(a4 + 48) = 0;
        *(_BYTE *)(a4 + 104) = 0;
        if (v29)
        {
          v7 = v26;
          *(_QWORD *)(a4 + 64) = v25;
          *(_OWORD *)(a4 + 48) = v24;
          v25 = 0;
          v24 = 0uLL;
          *(_QWORD *)(a4 + 72) = v7;
          *(_OWORD *)(a4 + 80) = v27;
          *(_QWORD *)(a4 + 96) = v28;
          v27 = 0uLL;
          v28 = 0;
          *(_BYTE *)(a4 + 104) = 1;
        }
        *(_BYTE *)(a4 + 112) = 1;
        *(_BYTE *)(a4 + 120) = 0;
        if (v6 && SHIBYTE(v22) < 0)
          operator delete((void *)v21);
      }
      else
      {
        *(_BYTE *)(a4 + 120) = 0;
      }
      if (v19)
      {
        if (v18)
        {
          if (v17 < 0)
            operator delete(__p);
          if (v15 < 0)
            operator delete(v14);
        }
        if (v13 && SHIBYTE(v12) < 0)
          operator delete(__dst[0]);
      }
      if (SHIBYTE(v10) < 0)
        operator delete(v9[0]);
      return;
    case 1:
    case 2:
      sub_20FF4EB84(a1, a2, 1, a3, a4);
      return;
    case 3:
      v5 = 3;
      goto LABEL_4;
    case 4:
      v5 = 4;
      goto LABEL_4;
    case 5:
      v5 = 5;
LABEL_4:
      sub_20FF480A0(a2, (uint64_t)a1, v5, a4);
      return;
    default:
      sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/ImageIO.cpp", 204, (uint64_t)"", 0, (uint64_t)"should not be reached", 21, (void (*)(void **))sub_21023DDB0);
      abort();
  }
}

void sub_20FF4C0FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF4C12C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF4C140(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF4C154(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF4C168(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF4C17C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E877A60(v1 - 112);
  _Unwind_Resume(a1);
}

void sub_20FF4C190(uint64_t a1@<X0>, _QWORD *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v4;
  const char *v7;
  uint64_t v8;
  _BYTE *v9;
  int v10;
  uint64_t v11;
  void *v12;
  std::string *v13;
  __int128 v14;
  std::string *v15;
  void *v16;
  void *v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  std::string::size_type v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  std::string *v31;
  __int128 v32;
  std::string *v33;
  __int128 v34;
  void **v35;
  std::string::size_type v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  void *v40;
  void *v41;
  int v42;
  _BYTE *v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  std::string::size_type v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  std::string::size_type size;
  std::__shared_weak_count *v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  unint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int8x16_t *v72;
  __int128 v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  int v78;
  unint64_t v79;
  unint64_t v80;
  int8x16_t *v81;
  int8x16_t *v82;
  unint64_t v83;
  int8x16_t *v84;
  int8x16_t v85;
  unsigned int v86;
  uint64_t v87;
  int8x16_t *v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  unsigned int v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  int8x16_t *v97;
  __int128 v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  int v102;
  uint64_t v103;
  std::string::size_type v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  std::string::size_type v113;
  std::__shared_weak_count *v114;
  unint64_t *v115;
  unint64_t v116;
  unint64_t v117;
  std::__shared_weak_count *v118;
  unint64_t *v119;
  unint64_t v120;
  unint64_t v121;
  std::string::size_type v122;
  std::__shared_weak_count *v123;
  unint64_t *v124;
  unint64_t v125;
  unint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  int8x16_t *v132;
  __int128 v133;
  unint64_t *v134;
  unint64_t v135;
  unint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  unsigned __int8 *v139;
  unsigned __int8 v140;
  unsigned __int8 v141;
  uint64_t v142;
  int v143;
  unint64_t v145;
  unint64_t v146;
  int64_t v147;
  std::string::size_type v148;
  size_t v149;
  std::string::size_type v150;
  std::string::size_type v151;
  std::string::size_type v152;
  unsigned __int8 *v153;
  _BYTE *v154;
  char v155;
  unint64_t v156;
  _OWORD *v157;
  __int128 *v158;
  unint64_t v159;
  __int128 v160;
  unsigned __int8 *v161;
  uint64_t *v162;
  unint64_t v163;
  uint64_t v164;
  std::string::size_type v165;
  unint64_t v166;
  int64_t v167;
  std::string::size_type v168;
  size_t v169;
  int64_t v170;
  std::string::size_type v171;
  unsigned __int8 *v172;
  _BYTE *v173;
  char v174;
  unsigned int v175;
  unint64_t v176;
  _OWORD *v177;
  __int128 *v178;
  unint64_t v179;
  __int128 v180;
  unsigned __int8 *v181;
  uint64_t *v182;
  unint64_t v183;
  uint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  int8x16_t *v188;
  __int128 v189;
  unint64_t *v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int8x16_t *v195;
  _QWORD *v196;
  uint64_t v197;
  int8x16_t *v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  void *v202;
  std::__shared_weak_count *v203;
  uint64_t v204;
  unint64_t *v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int8x16_t *v209;
  __int128 v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int8x16_t *v216;
  uint64_t v217;
  int8x16_t *v218;
  unsigned int v219;
  void *v220;
  unint64_t *v221;
  unint64_t v222;
  int8x16_t *v223;
  unint64_t v224;
  int8x16_t *v225;
  unint64_t v226;
  int8x16_t v227;
  uint64_t v228;
  unint64_t *v229;
  std::__shared_weak_count *v230;
  unint64_t *v231;
  unint64_t v232;
  std::__shared_weak_count *v233;
  unint64_t *v234;
  unint64_t v235;
  _QWORD *v236;
  _QWORD *v237;
  _QWORD *exception;
  int8x16_t *v239;
  uint64_t v240;
  int8x16_t *v241;
  uint64_t v243;
  int8x16_t *v244;
  std::string v245;
  _BYTE v246[30];
  std::string v247;
  _BYTE v248[32];
  char v249;
  void *v250;
  char v251;
  char v252;
  char v253;
  char v254;
  void *v255[2];
  unsigned __int8 v256;
  _DWORD v257[2];
  void *v258[2];
  _BYTE v259[7];
  char v260;
  char v261;
  void *v262;
  char v263;
  void *v264;
  char v265;
  char v266;
  char v267;
  void *__dst[2];
  _BYTE v269[7];
  char v270;
  char v271;
  void *v272;
  char v273;
  void *__p;
  char v275;
  char v276;
  char v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  char v281;
  char v282;
  void *v283;
  char v284;
  void *v285;
  char v286;
  char v287;
  char v288;
  char v289;
  unsigned int v290;
  char v291;
  char *v292;
  std::string v293;
  int8x16_t *v294;
  uint64_t v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  uint64_t v300;
  char v301;
  char v302;
  std::string v303;
  _BYTE v304[24];
  unsigned int v305;
  __int128 v306;
  __int128 v307;
  uint64_t v308;
  unsigned __int8 v309;
  __int128 v310;
  uint64_t v311;
  uint64_t v312;
  __int128 v313;
  uint64_t v314;
  char v315;
  char v316;
  uint64_t v317;

  v4 = a3;
  v317 = *MEMORY[0x24BDAC8D0];
  v290 = a3;
  sub_20FF4E440((uint64_t)&v279, a2);
  if (!v289)
  {
    v306 = v279;
    v9 = sub_20E89EFE4(&v307, &v280);
    *(_OWORD *)a4 = v306;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (v316)
    {
      *(_BYTE *)(a4 + 40) = 0;
      v10 = v309;
      if (v309)
      {
        *(_OWORD *)(a4 + 16) = *(_OWORD *)v9;
        *(_QWORD *)(a4 + 32) = *((_QWORD *)v9 + 2);
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *(_QWORD *)v9 = 0;
        *(_BYTE *)(a4 + 40) = 1;
      }
      *(_BYTE *)(a4 + 48) = 0;
      *(_BYTE *)(a4 + 104) = 0;
      if (v315)
      {
        v11 = v312;
        *(_QWORD *)(a4 + 64) = v311;
        *(_OWORD *)(a4 + 48) = v310;
        v310 = 0uLL;
        *(_QWORD *)(a4 + 72) = v11;
        *(_OWORD *)(a4 + 80) = v313;
        *(_QWORD *)(a4 + 96) = v314;
        v311 = 0;
        v313 = 0uLL;
        v314 = 0;
        *(_BYTE *)(a4 + 104) = 1;
      }
      *(_BYTE *)(a4 + 112) = 1;
      *(_BYTE *)(a4 + 120) = 0;
      if (v10 && SHIBYTE(v308) < 0)
      {
        v12 = (void *)v307;
LABEL_487:
        operator delete(v12);
        goto LABEL_488;
      }
    }
    else
    {
      *(_BYTE *)(a4 + 120) = 0;
    }
    goto LABEL_488;
  }
  v278 = v279;
  v7 = "N4cv3d3kit3img9ImageViewILNS1_6FormatE2ENS1_13DynamicBufferELNS1_10MutabilityE0EEE";
  v8 = 0;
  switch(v4)
  {
    case 0u:
      v4 = DWORD1(v278);
      goto LABEL_23;
    case 1u:
      goto LABEL_15;
    case 2u:
      v8 = 1;
      goto LABEL_15;
    case 0x15u:
      v8 = 2;
LABEL_15:
      v7 = (char *)&unk_2103F18C4 + 4 * v8;
      break;
    default:
      break;
  }
  if (v7 - (const char *)&unk_2103F18C4 != 12)
  {
    if (DWORD1(v278) == v4)
    {
LABEL_23:
      LODWORD(v306) = v4;
      v19 = *(_QWORD *)(a1 + 24);
      if (!v19)
        sub_20E86D37C();
      (*(void (**)(std::string *__return_ptr, uint64_t, char *, __int128 *))(*(_QWORD *)v19 + 48))(&v247, v19, (char *)&v278 + 8, &v306);
      if (!v254)
      {
        v306 = *(_OWORD *)&v247.__r_.__value_.__l.__data_;
        v43 = sub_20E89EFE4(&v307, (__int128 *)&v247.__r_.__value_.__r.__words[2]);
        *(_OWORD *)a4 = v306;
        *(_BYTE *)(a4 + 16) = 0;
        *(_BYTE *)(a4 + 112) = 0;
        if (v316)
        {
          *(_BYTE *)(a4 + 40) = 0;
          v44 = v309;
          if (v309)
          {
            *(_OWORD *)(a4 + 16) = *(_OWORD *)v43;
            *(_QWORD *)(a4 + 32) = *((_QWORD *)v43 + 2);
            *((_QWORD *)v43 + 1) = 0;
            *((_QWORD *)v43 + 2) = 0;
            *(_QWORD *)v43 = 0;
            *(_BYTE *)(a4 + 40) = 1;
          }
          *(_BYTE *)(a4 + 48) = 0;
          *(_BYTE *)(a4 + 104) = 0;
          if (v315)
          {
            v45 = v312;
            *(_QWORD *)(a4 + 64) = v311;
            *(_OWORD *)(a4 + 48) = v310;
            v310 = 0uLL;
            *(_QWORD *)(a4 + 72) = v45;
            *(_OWORD *)(a4 + 80) = v313;
            *(_QWORD *)(a4 + 96) = v314;
            v311 = 0;
            v313 = 0uLL;
            v314 = 0;
            *(_BYTE *)(a4 + 104) = 1;
          }
          *(_BYTE *)(a4 + 112) = 1;
          *(_BYTE *)(a4 + 120) = 0;
          if (v44 && SHIBYTE(v308) < 0)
            operator delete((void *)v307);
        }
        else
        {
          *(_BYTE *)(a4 + 120) = 0;
        }
LABEL_472:
        if (v254)
        {
          v233 = (std::__shared_weak_count *)v247.__r_.__value_.__r.__words[2];
          if (v247.__r_.__value_.__r.__words[2])
          {
            v234 = (unint64_t *)(v247.__r_.__value_.__r.__words[2] + 8);
            do
              v235 = __ldaxr(v234);
            while (__stlxr(v235 - 1, v234));
            if (!v235)
            {
              ((void (*)(std::__shared_weak_count *))v233->__on_zero_shared)(v233);
              std::__shared_weak_count::__release_weak(v233);
            }
          }
        }
        else if (v253)
        {
          if (v252)
          {
            if (v251 < 0)
              operator delete(v250);
            if (v249 < 0)
              operator delete(*(void **)&v248[24]);
          }
          if (v248[16] && (v248[15] & 0x80000000) != 0)
          {
            v12 = (void *)v247.__r_.__value_.__r.__words[2];
            goto LABEL_487;
          }
        }
        goto LABEL_488;
      }
      v245.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24C9C02C8;
      *(_OWORD *)&v245.__r_.__value_.__r.__words[1] = *(_OWORD *)&v247.__r_.__value_.__r.__words[1];
      *(_OWORD *)&v247.__r_.__value_.__r.__words[1] = 0uLL;
      *(_OWORD *)&v246[14] = *(_OWORD *)&v248[14];
      *(_OWORD *)v246 = *(_OWORD *)v248;
      v20 = *(_QWORD *)&v248[22] >> 16;
      if (v20 != DWORD1(v278))
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Pnm.cpp", 274, (uint64_t)"image_dynamic.RuntimeFormat() == color_format", 45, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_505;
        }
        v20 = DWORD1(v278);
      }
      if (v20 == 21)
      {
        v58 = v278;
        v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24C9F0FA0;
        sub_20FF525D0((uint64_t)&v245, (uint64_t)&v293.__r_.__value_.__l.__size_);
        if (v58)
        {
          if (((v300 * (unint64_t)v298) & 0x8000000000000000) != 0)
          {
            exception = __cxa_allocate_exception(8uLL);
            *exception = &off_24CA1FAE0;
            __cxa_throw(exception, (struct type_info *)&unk_24CA1FAF8, (void (*)(void *))std::exception::~exception);
          }
          size = v293.__r_.__value_.__l.__size_;
          if (!v293.__r_.__value_.__l.__size_)
            goto LABEL_187;
          v60 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
          if (v293.__r_.__value_.__r.__words[2])
          {
            v61 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v62 = __ldxr(v61);
            while (__stxr(v62 + 1, v61));
            do
              v63 = __ldaxr(v61);
            while (__stlxr(v63 - 1, v61));
            if (!v63)
            {
              ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
              std::__shared_weak_count::__release_weak(v60);
            }
            v64 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            size = v293.__r_.__value_.__l.__size_;
            if (v293.__r_.__value_.__r.__words[2])
            {
              v65 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v66 = __ldxr(v65);
              while (__stxr(v66 + 1, v65));
              do
                v67 = __ldaxr(v65);
              while (__stlxr(v67 - 1, v65));
              if (!v67)
              {
                ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
                std::__shared_weak_count::__release_weak(v64);
              }
            }
          }
          if (v302)
            (*(void (**)(__int128 *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)size + 96))(&v306, size, 1);
          else
LABEL_187:
            *(_QWORD *)&v306 = 0;
          if ((_DWORD)v295)
          {
            if (HIDWORD(v295))
            {
              v86 = v296;
              if (v296)
              {
                v87 = v299;
                v88 = v294;
                if (v301 && v294)
                {
                  v89 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
                  if (v293.__r_.__value_.__r.__words[2])
                  {
                    v90 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                    do
                      v91 = __ldxr(v90);
                    while (__stxr(v91 + 1, v90));
                    do
                      v92 = __ldaxr(v90);
                    while (__stlxr(v92 - 1, v90));
                    if (!v92)
                    {
                      (*(void (**)(_QWORD))(**((_QWORD **)&v89 + 1) + 16))(*((_QWORD *)&v89 + 1));
                      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v89 + 1));
                    }
                  }
                  (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v89 + 88))(v89, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                  v88 = v294;
                }
                v93 = v86 - 1;
                if (v86 != 1)
                {
                  do
                  {
                    std::istream::read();
                    v88 = (int8x16_t *)((char *)v88 + v87);
                    --v93;
                  }
                  while (v93);
                }
                std::istream::read();
              }
            }
          }
          v94 = v306;
          *(_QWORD *)&v306 = 0;
          if (v94)
            (*(void (**)(uint64_t))(*(_QWORD *)v94 + 8))(v94);
        }
        else
        {
          memset(&v303, 0, sizeof(v303));
          v113 = v293.__r_.__value_.__l.__size_;
          if (!v293.__r_.__value_.__l.__size_)
            goto LABEL_373;
          v114 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
          if (v293.__r_.__value_.__r.__words[2])
          {
            v115 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v116 = __ldxr(v115);
            while (__stxr(v116 + 1, v115));
            do
              v117 = __ldaxr(v115);
            while (__stlxr(v117 - 1, v115));
            if (!v117)
            {
              ((void (*)(std::__shared_weak_count *))v114->__on_zero_shared)(v114);
              std::__shared_weak_count::__release_weak(v114);
            }
            v118 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            v113 = v293.__r_.__value_.__l.__size_;
            if (v293.__r_.__value_.__r.__words[2])
            {
              v119 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v120 = __ldxr(v119);
              while (__stxr(v120 + 1, v119));
              do
                v121 = __ldaxr(v119);
              while (__stlxr(v121 - 1, v119));
              if (!v121)
              {
                ((void (*)(std::__shared_weak_count *))v118->__on_zero_shared)(v118);
                std::__shared_weak_count::__release_weak(v118);
              }
            }
          }
          if (v302)
            (*(void (**)(void **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v113 + 96))(v255, v113, 1);
          else
LABEL_373:
            v255[0] = 0;
          v186 = v299;
          v187 = v300;
          v188 = v294;
          if (v301 && v294)
          {
            v189 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
            if (v293.__r_.__value_.__r.__words[2])
            {
              v190 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v191 = __ldxr(v190);
              while (__stxr(v191 + 1, v190));
              do
                v192 = __ldaxr(v190);
              while (__stlxr(v192 - 1, v190));
              if (!v192)
              {
                (*(void (**)(_QWORD))(**((_QWORD **)&v189 + 1) + 16))(*((_QWORD *)&v189 + 1));
                std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v189 + 1));
              }
            }
            (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v189 + 88))(v189, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
            v188 = v294;
          }
          v193 = (v186 * HIDWORD(v187));
          if ((_DWORD)v193)
          {
            v194 = (3 * v187);
            if (3 * (_DWORD)v187)
            {
              v195 = (int8x16_t *)((char *)v188 + v193);
              v196 = a2 + 4;
              v197 = MEMORY[0x24BDAC740];
              do
              {
                v198 = v188;
                do
                {
                  v198->i8[0] = sub_20FF51C18((uint64_t)&v303, a2);
                  std::istream::tellg();
                  while ((*((_BYTE *)v196 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
                  {
                    v199 = std::istream::peek();
                    if (v199 <= 0x7F)
                    {
                      if ((*(_DWORD *)(v197 + 4 * v199 + 60) & 0x4000) == 0)
                        break;
                    }
                    else if (!__maskrune(v199, 0x4000uLL))
                    {
                      break;
                    }
                    std::istream::seekg();
                  }
                  std::istream::tellg();
                  v198->i8[1] = sub_20FF51C18((uint64_t)&v303, a2);
                  std::istream::tellg();
                  while ((*((_BYTE *)v196 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
                  {
                    v200 = std::istream::peek();
                    if (v200 <= 0x7F)
                    {
                      if ((*(_DWORD *)(v197 + 4 * v200 + 60) & 0x4000) == 0)
                        break;
                    }
                    else if (!__maskrune(v200, 0x4000uLL))
                    {
                      break;
                    }
                    std::istream::seekg();
                  }
                  std::istream::tellg();
                  v198->i8[2] = sub_20FF51C18((uint64_t)&v303, a2);
                  std::istream::tellg();
                  while ((*((_BYTE *)v196 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
                  {
                    v201 = std::istream::peek();
                    if (v201 <= 0x7F)
                    {
                      if ((*(_DWORD *)(v197 + 4 * v201 + 60) & 0x4000) == 0)
                        break;
                    }
                    else if (!__maskrune(v201, 0x4000uLL))
                    {
                      break;
                    }
                    std::istream::seekg();
                  }
                  std::istream::tellg();
                  v198 = (int8x16_t *)((char *)v198 + 3);
                }
                while (v198 != (int8x16_t *)&v188->i8[v194]);
                v188 = (int8x16_t *)((char *)v188 + v186);
              }
              while (v188 != v195);
            }
          }
          v202 = v255[0];
          v255[0] = 0;
          if (v202)
            (*(void (**)(void *))(*(_QWORD *)v202 + 8))(v202);
          if (v303.__r_.__value_.__r.__words[0])
          {
            v303.__r_.__value_.__l.__size_ = v303.__r_.__value_.__r.__words[0];
            operator delete(v303.__r_.__value_.__l.__data_);
          }
        }
        v203 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
        v204 = a4;
        if (!v293.__r_.__value_.__r.__words[2])
          goto LABEL_467;
        v205 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
        do
          v206 = __ldaxr(v205);
        while (__stlxr(v206 - 1, v205));
        goto LABEL_465;
      }
      if (v20 != 2)
      {
        if (v20 == 1)
        {
          v21 = v278;
          v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24C9C05B0;
          sub_20EB9FCDC((uint64_t)&v245, (uint64_t)&v293.__r_.__value_.__l.__size_);
          if (v21)
          {
            if (((v295 * (unint64_t)v296) & 0x8000000000000000) != 0)
            {
              v236 = __cxa_allocate_exception(8uLL);
              *v236 = &off_24CA1FAE0;
              __cxa_throw(v236, (struct type_info *)&unk_24CA1FAF8, (void (*)(void *))std::exception::~exception);
            }
            v22 = v293.__r_.__value_.__l.__size_;
            if (!v293.__r_.__value_.__l.__size_)
              goto LABEL_205;
            v23 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            if (v293.__r_.__value_.__r.__words[2])
            {
              v24 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v25 = __ldxr(v24);
              while (__stxr(v25 + 1, v24));
              do
                v26 = __ldaxr(v24);
              while (__stlxr(v26 - 1, v24));
              if (!v26)
              {
                ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
                std::__shared_weak_count::__release_weak(v23);
              }
              v27 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
              v22 = v293.__r_.__value_.__l.__size_;
              if (v293.__r_.__value_.__r.__words[2])
              {
                v28 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                do
                  v29 = __ldxr(v28);
                while (__stxr(v29 + 1, v28));
                do
                  v30 = __ldaxr(v28);
                while (__stlxr(v30 - 1, v28));
                if (!v30)
                {
                  ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
                  std::__shared_weak_count::__release_weak(v27);
                }
              }
            }
            if (BYTE1(v298))
              (*(void (**)(__int128 *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v22 + 96))(&v306, v22, 1);
            else
LABEL_205:
              *(_QWORD *)&v306 = 0;
            if ((_DWORD)v295)
            {
              v95 = HIDWORD(v295);
              if (HIDWORD(v295))
              {
                v96 = v297;
                v97 = v294;
                if ((_BYTE)v298 && v294)
                {
                  v98 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
                  if (v293.__r_.__value_.__r.__words[2])
                  {
                    v99 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                    do
                      v100 = __ldxr(v99);
                    while (__stxr(v100 + 1, v99));
                    do
                      v101 = __ldaxr(v99);
                    while (__stlxr(v101 - 1, v99));
                    if (!v101)
                    {
                      (*(void (**)(_QWORD))(**((_QWORD **)&v98 + 1) + 16))(*((_QWORD *)&v98 + 1));
                      std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v98 + 1));
                    }
                  }
                  (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v98 + 88))(v98, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                  v97 = v294;
                }
                v102 = v95 - 1;
                if (v95 != 1)
                {
                  do
                  {
                    std::istream::read();
                    v97 = (int8x16_t *)((char *)v97 + v96);
                    --v102;
                  }
                  while (v102);
                }
                std::istream::read();
              }
            }
            v103 = v306;
            *(_QWORD *)&v306 = 0;
            if (v103)
              (*(void (**)(uint64_t))(*(_QWORD *)v103 + 8))(v103);
          }
          else
          {
            memset(&v303, 0, sizeof(v303));
            v122 = v293.__r_.__value_.__l.__size_;
            if (!v293.__r_.__value_.__l.__size_)
              goto LABEL_418;
            v123 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            if (v293.__r_.__value_.__r.__words[2])
            {
              v124 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
              do
                v125 = __ldxr(v124);
              while (__stxr(v125 + 1, v124));
              do
                v126 = __ldaxr(v124);
              while (__stlxr(v126 - 1, v124));
              if (!v126)
              {
                ((void (*)(std::__shared_weak_count *))v123->__on_zero_shared)(v123);
                std::__shared_weak_count::__release_weak(v123);
              }
              v127 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
              v122 = v293.__r_.__value_.__l.__size_;
              if (v293.__r_.__value_.__r.__words[2])
              {
                v128 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                do
                  v129 = __ldxr(v128);
                while (__stxr(v129 + 1, v128));
                do
                  v130 = __ldaxr(v128);
                while (__stlxr(v130 - 1, v128));
                if (!v130)
                {
                  ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
                  std::__shared_weak_count::__release_weak(v127);
                }
              }
            }
            if (BYTE1(v298))
              (*(void (**)(void **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v122 + 96))(v255, v122, 1);
            else
LABEL_418:
              v255[0] = 0;
            v207 = v297;
            v208 = v295;
            v209 = v294;
            if ((_BYTE)v298 && v294)
            {
              v210 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
              if (v293.__r_.__value_.__r.__words[2])
              {
                v211 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
                do
                  v212 = __ldxr(v211);
                while (__stxr(v212 + 1, v211));
                do
                  v213 = __ldaxr(v211);
                while (__stlxr(v213 - 1, v211));
                if (!v213)
                {
                  (*(void (**)(_QWORD))(**((_QWORD **)&v210 + 1) + 16))(*((_QWORD *)&v210 + 1));
                  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v210 + 1));
                }
              }
              (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v210 + 88))(v210, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v209 = v294;
            }
            v214 = (v207 * HIDWORD(v208));
            if ((_DWORD)v214)
            {
              v215 = v208;
              if ((_DWORD)v208)
              {
                v216 = (int8x16_t *)((char *)v209 + v214);
                v217 = MEMORY[0x24BDAC740];
                do
                {
                  v218 = v209;
                  do
                  {
                    v218->i8[0] = sub_20FF51C18((uint64_t)&v303, a2);
                    std::istream::tellg();
                    while ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0)
                    {
                      v219 = std::istream::peek();
                      if (v219 <= 0x7F)
                      {
                        if ((*(_DWORD *)(v217 + 4 * v219 + 60) & 0x4000) == 0)
                          break;
                      }
                      else if (!__maskrune(v219, 0x4000uLL))
                      {
                        break;
                      }
                      std::istream::seekg();
                    }
                    std::istream::tellg();
                    v218 = (int8x16_t *)((char *)v218 + 1);
                  }
                  while (v218 != (int8x16_t *)&v209->i8[v215]);
                  v209 = (int8x16_t *)((char *)v209 + v207);
                }
                while (v209 != v216);
              }
            }
            v220 = v255[0];
            v255[0] = 0;
            if (v220)
              (*(void (**)(void *))(*(_QWORD *)v220 + 8))(v220);
            if (v303.__r_.__value_.__r.__words[0])
            {
              v303.__r_.__value_.__l.__size_ = v303.__r_.__value_.__r.__words[0];
              operator delete(v303.__r_.__value_.__l.__data_);
            }
          }
          v203 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
          v204 = a4;
          if (!v293.__r_.__value_.__r.__words[2])
            goto LABEL_467;
          v221 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
          do
            v206 = __ldaxr(v221);
          while (__stlxr(v206 - 1, v221));
          goto LABEL_465;
        }
        sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Pnm.cpp", 283, (uint64_t)"", 0, (uint64_t)"Not implemented", 15, (void (*)(void **))sub_21023DDB0);
LABEL_505:
        abort();
      }
      v48 = v278;
      v293.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_24C9F0B30;
      sub_20FF5201C((uint64_t)&v245, (uint64_t)&v293.__r_.__value_.__l.__size_);
      if (v48)
      {
        v243 = v295;
        if (((2 * v296 * (unint64_t)v295) & 0x8000000000000000) != 0)
        {
          v237 = __cxa_allocate_exception(8uLL);
          *v237 = &off_24CA1FAE0;
          __cxa_throw(v237, (struct type_info *)&unk_24CA1FAF8, (void (*)(void *))std::exception::~exception);
        }
        v49 = v293.__r_.__value_.__l.__size_;
        if (!v293.__r_.__value_.__l.__size_)
          goto LABEL_163;
        v50 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
        if (v293.__r_.__value_.__r.__words[2])
        {
          v51 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
          do
            v52 = __ldxr(v51);
          while (__stxr(v52 + 1, v51));
          do
            v53 = __ldaxr(v51);
          while (__stlxr(v53 - 1, v51));
          if (!v53)
          {
            ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
            std::__shared_weak_count::__release_weak(v50);
          }
          v54 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
          v49 = v293.__r_.__value_.__l.__size_;
          if (v293.__r_.__value_.__r.__words[2])
          {
            v55 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v56 = __ldxr(v55);
            while (__stxr(v56 + 1, v55));
            do
              v57 = __ldaxr(v55);
            while (__stlxr(v57 - 1, v55));
            if (!v57)
            {
              ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
              std::__shared_weak_count::__release_weak(v54);
            }
          }
        }
        if (BYTE1(v298))
          (*(void (**)(__int128 *__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v49 + 96))(&v306, v49, 1);
        else
LABEL_163:
          *(_QWORD *)&v306 = 0;
        if (!(_DWORD)v295)
          goto LABEL_460;
        v70 = HIDWORD(v295);
        if (!HIDWORD(v295))
          goto LABEL_460;
        v71 = v297;
        v72 = v294;
        if ((_BYTE)v298 && v294)
        {
          v73 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
          if (v293.__r_.__value_.__r.__words[2])
          {
            v74 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v75 = __ldxr(v74);
            while (__stxr(v75 + 1, v74));
            do
              v76 = __ldaxr(v74);
            while (__stlxr(v76 - 1, v74));
            if (!v76)
            {
              (*(void (**)(_QWORD))(**((_QWORD **)&v73 + 1) + 16))(*((_QWORD *)&v73 + 1));
              std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v73 + 1));
            }
          }
          (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v73 + 88))(v73, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v72 = v294;
        }
        v77 = v70 - 1;
        if (v70 != 1)
        {
          if ((_DWORD)v243)
          {
            v78 = 0;
            v79 = (v243 - 1) & 0x7FFFFFFFFFFFFFFFLL;
            v80 = (v79 + 1) & 0xFFFFFFFFFFFFFFF0;
            v81 = v72 + 1;
            while (1)
            {
              std::istream::read();
              if (!v72
                && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
              {
                break;
              }
              v82 = v72;
              if (v79 < 0xF)
                goto LABEL_511;
              v82 = (int8x16_t *)((char *)v72 + 2 * v80);
              v83 = (v79 + 1) & 0xFFFFFFFFFFFFFFF0;
              v84 = v81;
              do
              {
                v85 = vrev16q_s8(*v84);
                v84[-1] = vrev16q_s8(v84[-1]);
                *v84 = v85;
                v84 += 2;
                v83 -= 16;
              }
              while (v83);
              if (v79 + 1 != v80)
              {
LABEL_511:
                do
                {
                  v82->i16[0] = bswap32(v82->u16[0]) >> 16;
                  v82 = (int8x16_t *)((char *)v82 + 2);
                }
                while (v82 != (int8x16_t *)((char *)v72 + 2 * v243));
              }
              v72 = (int8x16_t *)((char *)v72 + 2 * v71);
              ++v78;
              v81 = (int8x16_t *)((char *)v81 + 2 * v71);
              if (v78 == v77)
                goto LABEL_450;
            }
LABEL_453:
            abort();
          }
          do
          {
            std::istream::read();
            v72 = (int8x16_t *)((char *)v72 + 2 * v71);
            --v77;
          }
          while (v77);
        }
LABEL_450:
        std::istream::read();
        if (!(_DWORD)v243 || v72)
        {
          if (!(_DWORD)v243)
          {
LABEL_460:
            v228 = v306;
            *(_QWORD *)&v306 = 0;
            if (v228)
              (*(void (**)(uint64_t))(*(_QWORD *)v228 + 8))(v228);
LABEL_462:
            v203 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
            v204 = a4;
            if (!v293.__r_.__value_.__r.__words[2])
            {
LABEL_467:
              *(_BYTE *)(v204 + 120) = 1;
              v230 = (std::__shared_weak_count *)v245.__r_.__value_.__r.__words[2];
              if (v245.__r_.__value_.__r.__words[2])
              {
                v231 = (unint64_t *)(v245.__r_.__value_.__r.__words[2] + 8);
                do
                  v232 = __ldaxr(v231);
                while (__stlxr(v232 - 1, v231));
                if (!v232)
                {
                  ((void (*)(std::__shared_weak_count *))v230->__on_zero_shared)(v230);
                  std::__shared_weak_count::__release_weak(v230);
                }
              }
              goto LABEL_472;
            }
            v229 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
            do
              v206 = __ldaxr(v229);
            while (__stlxr(v206 - 1, v229));
LABEL_465:
            if (!v206)
            {
              ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
              std::__shared_weak_count::__release_weak(v203);
              v204 = a4;
            }
            goto LABEL_467;
          }
        }
        else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_453;
        }
        v222 = (v243 - 1) & 0x7FFFFFFFFFFFFFFFLL;
        v223 = v72;
        if (v222 < 0xF)
          goto LABEL_512;
        v224 = v222 + 1;
        v223 = (int8x16_t *)((char *)v72 + 2 * (v224 & 0xFFFFFFFFFFFFFFF0));
        v225 = v72 + 1;
        v226 = v224 & 0xFFFFFFFFFFFFFFF0;
        do
        {
          v227 = vrev16q_s8(*v225);
          v225[-1] = vrev16q_s8(v225[-1]);
          *v225 = v227;
          v225 += 2;
          v226 -= 16;
        }
        while (v226);
        if (v224 != (v224 & 0xFFFFFFFFFFFFFFF0))
        {
LABEL_512:
          do
          {
            v223->i16[0] = bswap32(v223->u16[0]) >> 16;
            v223 = (int8x16_t *)((char *)v223 + 2);
          }
          while (v223 != (int8x16_t *)((char *)v72 + 2 * v243));
        }
        goto LABEL_460;
      }
      memset(&v303, 0, sizeof(v303));
      v104 = v293.__r_.__value_.__l.__size_;
      if (!v293.__r_.__value_.__l.__size_)
        goto LABEL_267;
      v105 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
      if (v293.__r_.__value_.__r.__words[2])
      {
        v106 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
        do
          v107 = __ldxr(v106);
        while (__stxr(v107 + 1, v106));
        do
          v108 = __ldaxr(v106);
        while (__stlxr(v108 - 1, v106));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
        v109 = (std::__shared_weak_count *)v293.__r_.__value_.__r.__words[2];
        v104 = v293.__r_.__value_.__l.__size_;
        if (v293.__r_.__value_.__r.__words[2])
        {
          v110 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
          do
            v111 = __ldxr(v110);
          while (__stxr(v111 + 1, v110));
          do
            v112 = __ldaxr(v110);
          while (__stlxr(v112 - 1, v110));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
      if (BYTE1(v298))
        (*(void (**)(void **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v104 + 96))(v255, v104, 1);
      else
LABEL_267:
        v255[0] = 0;
      v240 = v297;
      v131 = v295;
      v132 = v294;
      if ((_BYTE)v298 && v294)
      {
        v133 = *(_OWORD *)&v293.__r_.__value_.__r.__words[1];
        if (v293.__r_.__value_.__r.__words[2])
        {
          v134 = (unint64_t *)(v293.__r_.__value_.__r.__words[2] + 8);
          do
            v135 = __ldxr(v134);
          while (__stxr(v135 + 1, v134));
          do
            v136 = __ldaxr(v134);
          while (__stlxr(v136 - 1, v134));
          if (!v136)
          {
            (*(void (**)(_QWORD))(**((_QWORD **)&v133 + 1) + 16))(*((_QWORD *)&v133 + 1));
            std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v133 + 1));
          }
        }
        (*(void (**)(_QWORD, uint64_t, const char *))(*(_QWORD *)v133 + 88))(v133, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v132 = v294;
      }
      if (!((_DWORD)v240 * HIDWORD(v131)) || !(_DWORD)v131)
      {
LABEL_369:
        v185 = v255[0];
        v255[0] = 0;
        if (v185)
          (*(void (**)(void *))(*(_QWORD *)v185 + 8))(v185);
        if (v303.__r_.__value_.__r.__words[0])
          operator delete(v303.__r_.__value_.__l.__data_);
        goto LABEL_462;
      }
      v137 = a2 + 4;
      v138 = v303.__r_.__value_.__l.__size_;
      v139 = (unsigned __int8 *)v303.__r_.__value_.__r.__words[0];
      v239 = (int8x16_t *)((char *)v132 + 2 * (v240 * HIDWORD(v131)));
LABEL_281:
      v244 = (int8x16_t *)((char *)v132 + 2 * v131);
      v241 = v132;
      while (1)
      {
        if ((unsigned __int8 *)v138 != v139)
          v303.__r_.__value_.__l.__size_ = (std::string::size_type)v139;
        v140 = std::istream::peek();
        if ((*((_BYTE *)v137 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
        {
          v141 = v140;
          while (1)
          {
            v142 = 0;
            strcpy((char *)&v306, "0123456789");
            BYTE7(v307) = 10;
            do
              v143 = *((unsigned __int8 *)&v306 + v142);
            while (v143 != v141 && v142++ != 9);
            if (v143 != v141)
              goto LABEL_329;
            if ((unint64_t)v139 >= v303.__r_.__value_.__r.__words[2])
              break;
            *v139++ = v141;
LABEL_313:
            v303.__r_.__value_.__l.__size_ = (std::string::size_type)v139;
            std::istream::seekg();
            v141 = std::istream::peek();
            if ((*((_BYTE *)v137 + *(_QWORD *)(*a2 - 24)) & 2) != 0)
              goto LABEL_329;
          }
          v145 = v303.__r_.__value_.__r.__words[0];
          v146 = (unint64_t)&v139[-v303.__r_.__value_.__r.__words[0]];
          v147 = (int64_t)&v139[-v303.__r_.__value_.__r.__words[0] + 1];
          if (v147 < 0)
            goto LABEL_499;
          v148 = v303.__r_.__value_.__r.__words[2] - v303.__r_.__value_.__r.__words[0];
          if (2 * (v303.__r_.__value_.__r.__words[2] - v303.__r_.__value_.__r.__words[0]) > v147)
            v147 = 2 * v148;
          if (v148 >= 0x3FFFFFFFFFFFFFFFLL)
            v149 = 0x7FFFFFFFFFFFFFFFLL;
          else
            v149 = v147;
          if (v149)
          {
            v150 = (std::string::size_type)operator new(v149);
            v151 = v150 + v146;
            *(_BYTE *)(v150 + v146) = v141;
            v152 = v150 + v146 + 1;
            if (v139 != (unsigned __int8 *)v145)
            {
LABEL_303:
              if (v146 < 8
                || v150 + v146 - 1 - (unint64_t)&v139[~v145] > v150 + v146 - 1
                || v145 > (unint64_t)(v139 - 1)
                || v145 - v150 < 0x20)
              {
                v153 = v139;
              }
              else if (v146 >= 0x20)
              {
                v156 = v146 & 0xFFFFFFFFFFFFFFE0;
                v157 = (_OWORD *)(v150 + v146 - 16);
                v158 = (__int128 *)(v139 - 16);
                v159 = v146 & 0xFFFFFFFFFFFFFFE0;
                do
                {
                  v160 = *v158;
                  *(v157 - 1) = *(v158 - 1);
                  *v157 = v160;
                  v157 -= 2;
                  v158 -= 2;
                  v159 -= 32;
                }
                while (v159);
                if (v146 == v156)
                  goto LABEL_307;
                if ((v146 & 0x18) != 0)
                  goto LABEL_324;
                v151 -= v156;
                v153 = &v139[-v156];
              }
              else
              {
                v156 = 0;
LABEL_324:
                v153 = &v139[-(v146 & 0xFFFFFFFFFFFFFFF8)];
                v151 -= v146 & 0xFFFFFFFFFFFFFFF8;
                v161 = &v139[-v156 - v145 - 8 + v150];
                v162 = (uint64_t *)&v139[-v156 - 8];
                v163 = v156 - (v146 & 0xFFFFFFFFFFFFFFF8);
                do
                {
                  v164 = *v162--;
                  *(_QWORD *)v161 = v164;
                  v161 -= 8;
                  v163 += 8;
                }
                while (v163);
                if (v146 == (v146 & 0xFFFFFFFFFFFFFFF8))
                {
LABEL_307:
                  v139 = (unsigned __int8 *)v303.__r_.__value_.__r.__words[0];
                  v303.__r_.__value_.__r.__words[0] = v150;
                  v303.__r_.__value_.__l.__size_ = v152;
                  v303.__r_.__value_.__r.__words[2] = v150 + v149;
                  if (!v139)
                    goto LABEL_312;
LABEL_311:
                  operator delete(v139);
LABEL_312:
                  v139 = (unsigned __int8 *)v152;
                  goto LABEL_313;
                }
              }
              v154 = (_BYTE *)(v151 - 1);
              do
              {
                v155 = *--v153;
                *v154-- = v155;
              }
              while (v153 != (unsigned __int8 *)v145);
              goto LABEL_307;
            }
          }
          else
          {
            v150 = 0;
            v151 = (std::string::size_type)&v139[-v303.__r_.__value_.__r.__words[0]];
            *(_BYTE *)v146 = v141;
            v152 = v146 + 1;
            if (v139 != (unsigned __int8 *)v145)
              goto LABEL_303;
          }
          v303.__r_.__value_.__r.__words[0] = v151;
          v303.__r_.__value_.__l.__size_ = v152;
          v303.__r_.__value_.__r.__words[2] = v150 + v149;
          if (v139)
            goto LABEL_311;
          goto LABEL_312;
        }
LABEL_329:
        if ((unint64_t)v139 < v303.__r_.__value_.__r.__words[2])
        {
          *v139 = 10;
          v138 = (uint64_t)(v139 + 1);
          goto LABEL_349;
        }
        v165 = v303.__r_.__value_.__r.__words[0];
        v166 = (unint64_t)&v139[-v303.__r_.__value_.__r.__words[0]];
        v167 = (int64_t)&v139[-v303.__r_.__value_.__r.__words[0] + 1];
        if (v167 < 0)
LABEL_499:
          sub_20E867F44();
        v168 = v303.__r_.__value_.__r.__words[2] - v303.__r_.__value_.__r.__words[0];
        if (2 * (v303.__r_.__value_.__r.__words[2] - v303.__r_.__value_.__r.__words[0]) > v167)
          v167 = 2 * v168;
        if (v168 >= 0x3FFFFFFFFFFFFFFFLL)
          v169 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v169 = v167;
        if (v169)
        {
          v170 = (int64_t)operator new(v169);
          v171 = v170 + v166;
          *(_BYTE *)(v170 + v166) = 10;
          v138 = v170 + v166 + 1;
          if (v139 == (unsigned __int8 *)v165)
            goto LABEL_347;
        }
        else
        {
          v170 = 0;
          v171 = (std::string::size_type)&v139[-v303.__r_.__value_.__r.__words[0]];
          *(_BYTE *)v166 = 10;
          v138 = v166 + 1;
          if (v139 == (unsigned __int8 *)v165)
          {
LABEL_347:
            v303.__r_.__value_.__r.__words[0] = v171;
            v303.__r_.__value_.__l.__size_ = v138;
            v303.__r_.__value_.__r.__words[2] = v170 + v169;
            if (!v139)
              goto LABEL_349;
LABEL_348:
            operator delete(v139);
            goto LABEL_349;
          }
        }
        if (v166 < 8 || v165 - v170 < 0x20)
        {
          v172 = v139;
          goto LABEL_342;
        }
        if (v166 >= 0x20)
        {
          v176 = v166 & 0xFFFFFFFFFFFFFFE0;
          v177 = (_OWORD *)(v170 + v166 - 16);
          v178 = (__int128 *)(v139 - 16);
          v179 = v166 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            v180 = *v178;
            *(v177 - 1) = *(v178 - 1);
            *v177 = v180;
            v177 -= 2;
            v178 -= 2;
            v179 -= 32;
          }
          while (v179);
          if (v166 == v176)
            goto LABEL_344;
          if ((v166 & 0x18) == 0)
          {
            v171 -= v176;
            v172 = &v139[-v176];
LABEL_342:
            v173 = (_BYTE *)(v171 - 1);
            do
            {
              v174 = *--v172;
              *v173-- = v174;
            }
            while (v172 != (unsigned __int8 *)v165);
            goto LABEL_344;
          }
        }
        else
        {
          v176 = 0;
        }
        v172 = &v139[-(v166 & 0xFFFFFFFFFFFFFFF8)];
        v171 -= v166 & 0xFFFFFFFFFFFFFFF8;
        v181 = &v139[-v176 - v165 - 8 + v170];
        v182 = (uint64_t *)&v139[-v176 - 8];
        v183 = v176 - (v166 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          v184 = *v182--;
          *(_QWORD *)v181 = v184;
          v181 -= 8;
          v183 += 8;
        }
        while (v183);
        if (v166 != (v166 & 0xFFFFFFFFFFFFFFF8))
          goto LABEL_342;
LABEL_344:
        v139 = (unsigned __int8 *)v303.__r_.__value_.__r.__words[0];
        v303.__r_.__value_.__r.__words[0] = v170;
        v303.__r_.__value_.__l.__size_ = v138;
        v303.__r_.__value_.__r.__words[2] = v170 + v169;
        if (v139)
          goto LABEL_348;
LABEL_349:
        v303.__r_.__value_.__l.__size_ = v138;
        v139 = (unsigned __int8 *)v303.__r_.__value_.__r.__words[0];
        v132->i16[0] = atoi(v303.__r_.__value_.__l.__data_);
        std::istream::tellg();
        while ((*((_BYTE *)v137 + *(_QWORD *)(*a2 - 24)) & 2) == 0)
        {
          v175 = std::istream::peek();
          if (v175 <= 0x7F)
          {
            if ((*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * v175 + 60) & 0x4000) == 0)
              break;
          }
          else if (!__maskrune(v175, 0x4000uLL))
          {
            break;
          }
          std::istream::seekg();
        }
        std::istream::tellg();
        v132 = (int8x16_t *)((char *)v132 + 2);
        if (v132 == v244)
        {
          v132 = (int8x16_t *)((char *)v241 + 2 * v240);
          if (v132 == v239)
            goto LABEL_369;
          goto LABEL_281;
        }
      }
    }
    v305 = 0;
    sub_20E8A2C70((uint64_t)v255, (uint64_t)v304, &v290);
    if (v305 == -1)
      sub_20E877AB8();
    v255[0] = &v292;
    ((void (*)(std::string *__return_ptr, void **, _BYTE *))*(&off_24CA0E5E8 + v305))(&v303, v255, v304);
    if (v305 != -1)
      ((void (*)(void **, _BYTE *))off_24CA0E588[v305])(v255, v304);
    v31 = std::string::insert(&v303, 0, "Requested format ", 0x11uLL);
    v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
    v245.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v245.__r_.__value_.__l.__data_ = v32;
    v31->__r_.__value_.__l.__size_ = 0;
    v31->__r_.__value_.__r.__words[2] = 0;
    v31->__r_.__value_.__r.__words[0] = 0;
    v33 = std::string::append(&v245, " but pnm file contains ", 0x17uLL);
    v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v293.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v293.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    v305 = 0;
    sub_20E8A2C70((uint64_t)&v292, (uint64_t)v304, (unsigned int *)&v278 + 1);
    if (v305 == -1)
      sub_20E877AB8();
    v292 = &v291;
    ((void (*)(void **__return_ptr, char **, _BYTE *))*(&off_24CA0E5E8 + v305))(v255, &v292, v304);
    if (v305 != -1)
      ((void (*)(char **, _BYTE *))off_24CA0E588[v305])(&v292, v304);
    if ((v256 & 0x80u) == 0)
      v35 = v255;
    else
      v35 = (void **)v255[0];
    if ((v256 & 0x80u) == 0)
      v36 = v256;
    else
      v36 = (std::string::size_type)v255[1];
    v37 = std::string::append(&v293, (const std::string::value_type *)v35, v36);
    v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
    v247.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v247.__r_.__value_.__l.__data_ = v38;
    v37->__r_.__value_.__l.__size_ = 0;
    v37->__r_.__value_.__r.__words[2] = 0;
    v37->__r_.__value_.__r.__words[0] = 0;
    v39 = std::string::append(&v247, ".", 1uLL);
    v41 = (void *)v39->__r_.__value_.__r.__words[0];
    v40 = (void *)v39->__r_.__value_.__l.__size_;
    v257[0] = v39->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v257 + 3) = *(_DWORD *)((char *)&v39->__r_.__value_.__r.__words[2] + 3);
    v42 = SHIBYTE(v39->__r_.__value_.__r.__words[2]);
    v39->__r_.__value_.__l.__size_ = 0;
    v39->__r_.__value_.__r.__words[2] = 0;
    v39->__r_.__value_.__r.__words[0] = 0;
    if (v42 < 0)
    {
      sub_20E860C04(v258, v41, (unint64_t)v40);
    }
    else
    {
      v258[0] = v41;
      v258[1] = v40;
      *(_DWORD *)v259 = v257[0];
      *(_DWORD *)&v259[3] = *(_DWORD *)((char *)v257 + 3);
      v260 = v42;
    }
    v261 = 1;
    LOBYTE(v262) = 0;
    v266 = 0;
    v267 = 1;
    sub_21022F9AC((uint64_t)v258, (uint64_t)&v306);
    *(_OWORD *)a4 = v306;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (v316)
    {
      *(_BYTE *)(a4 + 40) = 0;
      v68 = v309;
      if (v309)
      {
        *(_OWORD *)(a4 + 16) = v307;
        *(_QWORD *)(a4 + 32) = v308;
        v308 = 0;
        v307 = 0uLL;
        *(_BYTE *)(a4 + 40) = 1;
      }
      *(_BYTE *)(a4 + 48) = 0;
      *(_BYTE *)(a4 + 104) = 0;
      if (v315)
      {
        v69 = v312;
        *(_QWORD *)(a4 + 64) = v311;
        *(_OWORD *)(a4 + 48) = v310;
        v310 = 0uLL;
        *(_QWORD *)(a4 + 72) = v69;
        *(_OWORD *)(a4 + 80) = v313;
        *(_QWORD *)(a4 + 96) = v314;
        v311 = 0;
        v313 = 0uLL;
        v314 = 0;
        *(_BYTE *)(a4 + 104) = 1;
      }
      *(_BYTE *)(a4 + 112) = 1;
      *(_BYTE *)(a4 + 120) = 0;
      if (v68 && SHIBYTE(v308) < 0)
        operator delete((void *)v307);
    }
    else
    {
      *(_BYTE *)(a4 + 120) = 0;
    }
    if (v267)
    {
      if (v266)
      {
        if (v265 < 0)
          operator delete(v264);
        if (v263 < 0)
          operator delete(v262);
      }
      if (v261 && v260 < 0)
        operator delete(v258[0]);
    }
    if (v42 < 0)
    {
      operator delete(v41);
      if ((SHIBYTE(v247.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_151:
        if (((char)v256 & 0x80000000) == 0)
          goto LABEL_152;
        goto LABEL_158;
      }
    }
    else if ((SHIBYTE(v247.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_151;
    }
    operator delete(v247.__r_.__value_.__l.__data_);
    if (((char)v256 & 0x80000000) == 0)
    {
LABEL_152:
      if ((SHIBYTE(v293.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_153;
      goto LABEL_159;
    }
LABEL_158:
    operator delete(v255[0]);
    if ((SHIBYTE(v293.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_153:
      if ((SHIBYTE(v245.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_154;
      goto LABEL_160;
    }
LABEL_159:
    operator delete(v293.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v245.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_154:
      if ((SHIBYTE(v303.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_488;
LABEL_161:
      v12 = (void *)v303.__r_.__value_.__r.__words[0];
      goto LABEL_487;
    }
LABEL_160:
    operator delete(v245.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v303.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_488;
    goto LABEL_161;
  }
  v305 = 0;
  sub_20E8A2C70((uint64_t)&v245, (uint64_t)v304, &v290);
  if (v305 == -1)
    sub_20E877AB8();
  v245.__r_.__value_.__r.__words[0] = (std::string::size_type)v255;
  ((void (*)(std::string *__return_ptr, std::string *, _BYTE *))*(&off_24CA0E5E8 + v305))(&v293, &v245, v304);
  if (v305 != -1)
    ((void (*)(std::string *, _BYTE *))off_24CA0E588[v305])(&v245, v304);
  v13 = std::string::insert(&v293, 0, "Format ", 7uLL);
  v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v247.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v247.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  v15 = std::string::append(&v247, " is not a valid pnm format.", 0x1BuLL);
  v17 = (void *)v15->__r_.__value_.__r.__words[0];
  v16 = (void *)v15->__r_.__value_.__l.__size_;
  LODWORD(v303.__r_.__value_.__l.__data_) = v15->__r_.__value_.__r.__words[2];
  *(_DWORD *)((char *)v303.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v15->__r_.__value_.__r.__words[2] + 3);
  v18 = SHIBYTE(v15->__r_.__value_.__r.__words[2]);
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (v18 < 0)
  {
    sub_20E860C04(__dst, v17, (unint64_t)v16);
  }
  else
  {
    __dst[0] = v17;
    __dst[1] = v16;
    *(_DWORD *)v269 = v303.__r_.__value_.__l.__data_;
    *(_DWORD *)&v269[3] = *(_DWORD *)((char *)v303.__r_.__value_.__r.__words + 3);
    v270 = v18;
  }
  v271 = 1;
  LOBYTE(v272) = 0;
  v276 = 0;
  v277 = 1;
  sub_21022F9AC((uint64_t)__dst, (uint64_t)&v306);
  *(_OWORD *)a4 = v306;
  *(_BYTE *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 112) = 0;
  if (v316)
  {
    *(_BYTE *)(a4 + 40) = 0;
    v46 = v309;
    if (v309)
    {
      *(_OWORD *)(a4 + 16) = v307;
      *(_QWORD *)(a4 + 32) = v308;
      v308 = 0;
      v307 = 0uLL;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v315)
    {
      v47 = v312;
      *(_QWORD *)(a4 + 64) = v311;
      *(_OWORD *)(a4 + 48) = v310;
      v310 = 0uLL;
      *(_QWORD *)(a4 + 72) = v47;
      *(_OWORD *)(a4 + 80) = v313;
      *(_QWORD *)(a4 + 96) = v314;
      v311 = 0;
      v313 = 0uLL;
      v314 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 120) = 0;
    if (v46 && SHIBYTE(v308) < 0)
      operator delete((void *)v307);
  }
  else
  {
    *(_BYTE *)(a4 + 120) = 0;
  }
  if (v277)
  {
    if (v276)
    {
      if (v275 < 0)
        operator delete(__p);
      if (v273 < 0)
        operator delete(v272);
    }
    if (v271 && v270 < 0)
      operator delete(__dst[0]);
  }
  if (v18 < 0)
  {
    operator delete(v17);
    if ((SHIBYTE(v247.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_91:
      if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
        goto LABEL_95;
      goto LABEL_488;
    }
  }
  else if ((SHIBYTE(v247.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_91;
  }
  operator delete(v247.__r_.__value_.__l.__data_);
  if (SHIBYTE(v293.__r_.__value_.__r.__words[2]) < 0)
  {
LABEL_95:
    v12 = (void *)v293.__r_.__value_.__r.__words[0];
    goto LABEL_487;
  }
LABEL_488:
  if (!v289 && v288)
  {
    if (v287)
    {
      if (v286 < 0)
        operator delete(v285);
      if (v284 < 0)
        operator delete(v283);
    }
    if (v282)
    {
      if (v281 < 0)
        operator delete((void *)v280);
    }
  }
}

void sub_20FF4E09C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;
  void *v72;

  v72 = (void *)STACK[0x2D0];
  if (STACK[0x2D0])
  {
    STACK[0x2D8] = (unint64_t)v72;
    operator delete(v72);
  }
  sub_20EA69038((uint64_t)&STACK[0x280]);
  sub_20EA69518((uint64_t)&a15);
  sub_20FDEFFB8((uint64_t)&a23);
  sub_20E89ED1C((uint64_t)&a71);
  _Unwind_Resume(a1);
}

void sub_20FF4E440(uint64_t a1, _QWORD *a2)
{
  size_t v4;
  size_t v5;
  const void **p_dst;
  int v7;
  uint64_t v8;
  const void **v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  size_t v16;
  const void **v17;
  int v18;
  int v19;
  uint64_t v20;
  size_t v21;
  const void **v22;
  __int128 *v23;
  int v24;
  __int128 v25[6];
  char v26;
  __int128 v27[6];
  char v28;
  const void **__dst;
  size_t v30;
  int64_t v31;
  __int128 __s;
  __int128 __p;
  uint64_t v34;
  unsigned __int8 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  char v42;
  _QWORD *v43;
  __int128 v44;
  char v45;
  char v46;
  void *v47;
  char v48;
  void *v49;
  char v50;
  char v51;
  char v52;

  v43 = a2;
  if (sub_20FF50424(&v43))
  {
    BYTE2(__s) = 0;
    LOWORD(__s) = 0;
    std::istream::read();
    v4 = strlen((const char *)&__s);
    if (v4 >= 0x7FFFFFFFFFFFFFF8)
      sub_20E860B7C();
    v5 = v4;
    if (v4 >= 0x17)
    {
      v10 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v4 | 7) != 0x17)
        v10 = v4 | 7;
      v11 = v10 + 1;
      p_dst = (const void **)operator new(v10 + 1);
      v30 = v5;
      v31 = v11 | 0x8000000000000000;
      __dst = p_dst;
    }
    else
    {
      HIBYTE(v31) = v4;
      p_dst = (const void **)&__dst;
      if (!v4)
        goto LABEL_25;
    }
    memcpy(p_dst, &__s, v5);
LABEL_25:
    *((_BYTE *)p_dst + v5) = 0;
    if (sub_20FF50424(&v43))
    {
      v12 = sub_20FF505E4(a2);
      if (sub_20FF50424(&v43))
      {
        v13 = sub_20FF505E4(a2);
        if (sub_20FF50424(&v43))
        {
          v14 = sub_20FF505E4(a2);
          if ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0)
          {
            v15 = v14;
            v16 = HIBYTE(v31);
            if (v31 < 0)
              v16 = v30;
            if (v16 != 2)
              goto LABEL_37;
            v17 = (const void **)&__dst;
            if (v31 < 0)
              v17 = __dst;
            if (*(_WORD *)v17 == 12880 || *(_WORD *)v17 == 13136)
            {
              v18 = 0;
            }
            else
            {
LABEL_37:
              if (!sub_20E860918((const void **)&__dst, "P5") && !sub_20E860918((const void **)&__dst, "P6"))
              {
                sub_20E89F6D4(v27, "Invalid pnm file. Format magic number not recognized.");
                v28 = 1;
                sub_20FF4871C(5u, v27, (uint64_t)&__s);
                sub_20FDCAA88(a1, (uint64_t)&__s);
                sub_20E89EF58((uint64_t)&__s);
                v23 = v27;
                goto LABEL_85;
              }
              v18 = 1;
            }
            v21 = HIBYTE(v31);
            if (v31 < 0)
              v21 = v30;
            if (v21 != 2)
              goto LABEL_97;
            v22 = (const void **)&__dst;
            if (v31 < 0)
              v22 = __dst;
            if (*(_WORD *)v22 == 12880 || *(_WORD *)v22 == 13648)
            {
              if (v15 == 255)
              {
                v24 = 1;
              }
              else
              {
                if (v15 != 0xFFFF)
                  goto LABEL_93;
                v24 = 2;
              }
            }
            else
            {
LABEL_97:
              if (sub_20E860918((const void **)&__dst, "P3") || sub_20E860918((const void **)&__dst, "P6"))
              {
                if (v15 != 255)
                {
                  if (v15 == 0xFFFF)
                  {
                    sub_20E89F6D4(v25, "Unsupported pnm format. Loader does not support Rgb16u (.pbm) loading yet.");
                    v26 = 1;
                    sub_20FF4871C(5u, v25, (uint64_t)&__s);
                    sub_20FDCAA88(a1, (uint64_t)&__s);
                    sub_20E89EF58((uint64_t)&__s);
                    v23 = v25;
LABEL_85:
                    sub_20E89F09C((uint64_t)v23);
LABEL_61:
                    if ((SHIBYTE(v31) & 0x80000000) == 0)
                      return;
                    v9 = __dst;
                    goto LABEL_63;
                  }
LABEL_93:
                  sub_20FF50A6C((uint64_t)&__s, v15);
                  sub_20FDCAA88(a1, (uint64_t)&__s);
                  sub_20E89EF58((uint64_t)&__s);
                  goto LABEL_61;
                }
                v24 = 21;
              }
              else
              {
                v24 = 0;
              }
            }
            LOBYTE(__s) = 0;
            std::istream::read();
            if (__s == 13)
            {
              LOBYTE(__s) = 0;
              std::istream::read();
            }
            *(_DWORD *)a1 = v18;
            *(_DWORD *)(a1 + 4) = v24;
            *(_DWORD *)(a1 + 8) = v12;
            *(_DWORD *)(a1 + 12) = v13;
            *(_BYTE *)(a1 + 120) = 1;
            goto LABEL_61;
          }
        }
      }
    }
    sub_20E89F6D4(&v44, "Invalid pnm file. Unexpected end of file in header.");
    v52 = 1;
    sub_20E89F2F8(5u, &v44, (uint64_t)&__s);
    if (!v52)
      goto LABEL_52;
    if (!v51)
      goto LABEL_49;
    if (v50 < 0)
    {
      operator delete(v49);
      if ((v48 & 0x80000000) == 0)
      {
LABEL_49:
        if (v46)
          goto LABEL_50;
        goto LABEL_52;
      }
    }
    else if ((v48 & 0x80000000) == 0)
    {
      goto LABEL_49;
    }
    operator delete(v47);
    if (v46)
    {
LABEL_50:
      if (v45 < 0)
        operator delete((void *)v44);
    }
LABEL_52:
    *(_OWORD *)a1 = __s;
    *(_BYTE *)(a1 + 16) = 0;
    *(_BYTE *)(a1 + 112) = 0;
    if (v42)
    {
      *(_BYTE *)(a1 + 40) = 0;
      v19 = v35;
      if (v35)
      {
        *(_OWORD *)(a1 + 16) = __p;
        *(_QWORD *)(a1 + 32) = v34;
        v34 = 0;
        __p = 0uLL;
        *(_BYTE *)(a1 + 40) = 1;
      }
      *(_BYTE *)(a1 + 48) = 0;
      *(_BYTE *)(a1 + 104) = 0;
      if (v41)
      {
        v20 = v38;
        *(_QWORD *)(a1 + 64) = v37;
        *(_OWORD *)(a1 + 48) = v36;
        v36 = 0uLL;
        *(_QWORD *)(a1 + 72) = v20;
        *(_OWORD *)(a1 + 80) = v39;
        *(_QWORD *)(a1 + 96) = v40;
        v37 = 0;
        v39 = 0uLL;
        v40 = 0;
        *(_BYTE *)(a1 + 104) = 1;
      }
      *(_BYTE *)(a1 + 112) = 1;
      *(_BYTE *)(a1 + 120) = 0;
      if (v19 && SHIBYTE(v34) < 0)
        operator delete((void *)__p);
    }
    else
    {
      *(_BYTE *)(a1 + 120) = 0;
    }
    goto LABEL_61;
  }
  sub_20E89F6D4(&v44, "Invalid pnm file. Unexpected end of file in header.");
  v52 = 1;
  sub_20E89F2F8(5u, &v44, (uint64_t)&__s);
  if (v52)
  {
    if (!v51)
      goto LABEL_10;
    if (v50 < 0)
    {
      operator delete(v49);
      if ((v48 & 0x80000000) == 0)
      {
LABEL_10:
        if (!v46)
          goto LABEL_13;
LABEL_11:
        if (v45 < 0)
          operator delete((void *)v44);
        goto LABEL_13;
      }
    }
    else if ((v48 & 0x80000000) == 0)
    {
      goto LABEL_10;
    }
    operator delete(v47);
    if (!v46)
      goto LABEL_13;
    goto LABEL_11;
  }
LABEL_13:
  *(_OWORD *)a1 = __s;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v42)
  {
    *(_BYTE *)(a1 + 120) = 0;
    return;
  }
  *(_BYTE *)(a1 + 40) = 0;
  v7 = v35;
  if (v35)
  {
    *(_OWORD *)(a1 + 16) = __p;
    *(_QWORD *)(a1 + 32) = v34;
    v34 = 0;
    __p = 0uLL;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (v41)
  {
    v8 = v38;
    *(_QWORD *)(a1 + 64) = v37;
    *(_OWORD *)(a1 + 48) = v36;
    v36 = 0uLL;
    *(_QWORD *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 80) = v39;
    *(_QWORD *)(a1 + 96) = v40;
    v37 = 0;
    v39 = 0uLL;
    v40 = 0;
    *(_BYTE *)(a1 + 104) = 1;
  }
  *(_BYTE *)(a1 + 112) = 1;
  *(_BYTE *)(a1 + 120) = 0;
  if (v7 && SHIBYTE(v34) < 0)
  {
    v9 = (const void **)__p;
LABEL_63:
    operator delete(v9);
  }
}

void sub_20FF4EAE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a40 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF4EB84(_DWORD *a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  unsigned int v9;
  unsigned int v10;
  std::string *v11;
  __int128 v12;
  std::string *v13;
  void *size;
  void *v15;
  int v16;
  std::string *v17;
  __int128 v18;
  std::string *v19;
  __int128 v20;
  void **v21;
  std::string::size_type v22;
  std::string *v23;
  __int128 v24;
  std::string *v25;
  void *v26;
  void *v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  const char *v31;
  const char *v32;
  int v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  int v38;
  _BYTE *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  std::string *v56;
  __int128 v57;
  std::string *v58;
  unint64_t v59;
  void *v60;
  int v61;
  uint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  std::__shared_weak_count *v67;
  unint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  _BYTE *v81;
  int v82;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  unint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  std::string::size_type v98;
  std::__shared_weak_count *v99;
  unint64_t *v100;
  unint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  int v109;
  std::string::size_type v110;
  unint64_t *v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  int v119;
  std::string::size_type v120;
  unint64_t *v121;
  __int128 v122;
  __int128 __p;
  uint64_t v124;
  unsigned __int8 v125;
  void *v126[2];
  uint64_t v127;
  uint64_t v128;
  void *v129[2];
  uint64_t v130;
  char v131;
  unsigned __int8 v132;
  char v133;
  void *v134[2];
  unsigned __int8 v135;
  unsigned int v136[2];
  void *v137[2];
  _BYTE v138[7];
  char v139;
  char v140;
  void *v141;
  char v142;
  void *v143;
  char v144;
  char v145;
  char v146;
  void *__dst[2];
  _BYTE v148[7];
  char v149;
  char v150;
  void *v151;
  char v152;
  void *v153;
  char v154;
  char v155;
  char v156;
  unsigned int v157;
  int v158;
  char *v159;
  std::string v160;
  std::string v161;
  std::string v162;
  char v163;
  void *v164;
  char v165;
  void *v166;
  char v167;
  char v168;
  char v169;
  _BYTE v170[32];
  uint64_t v171;
  int v172;
  unsigned int v173;
  __int128 v174;
  uint64_t v175;
  _BYTE *v176;
  __int128 v177;
  uint64_t v178;
  char v179;
  unsigned __int8 v180;
  std::string v181;
  unsigned int v182;
  char v183;

  v158 = a4;
  v9 = a1[12];
  v157 = v9;
  v10 = v9 - 1;
  if (v9 != 1
    && v9 != 21
    && v9 != 2
    && "N4cv3d3kit3img9ImageViewILNS1_6FormatE2ENS1_13DynamicBufferELNS1_10MutabilityE0EEE" - (char *)&unk_2103F18C4 == 12)
  {
    *(_DWORD *)&v170[24] = 0;
    sub_20E8A2C70((uint64_t)&v161, (uint64_t)v170, &v157);
    if (*(_DWORD *)&v170[24] == -1)
      sub_20E877AB8();
    v161.__r_.__value_.__r.__words[0] = (std::string::size_type)v134;
    ((void (*)(std::string *__return_ptr, std::string *, _BYTE *))*(&off_24CA0E5E8
                                                                             + *(unsigned int *)&v170[24]))(&v181, &v161, v170);
    if (*(_DWORD *)&v170[24] != -1)
      ((void (*)(std::string *, _BYTE *))off_24CA0E588[*(unsigned int *)&v170[24]])(&v161, v170);
    v11 = std::string::insert(&v181, 0, "Image is of format ", 0x13uLL);
    v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v162.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v162.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    v13 = std::string::append(&v162, " but must be 8-bit Gray or Rgb to save as pnm.", 0x2EuLL);
    v15 = (void *)v13->__r_.__value_.__r.__words[0];
    size = (void *)v13->__r_.__value_.__l.__size_;
    LODWORD(v160.__r_.__value_.__l.__data_) = v13->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)v160.__r_.__value_.__r.__words + 3) = *(_DWORD *)((char *)&v13->__r_.__value_.__r.__words[2] + 3);
    v16 = SHIBYTE(v13->__r_.__value_.__r.__words[2]);
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (v16 < 0)
    {
      sub_20E860C04(__dst, v15, (unint64_t)size);
    }
    else
    {
      __dst[0] = v15;
      __dst[1] = size;
      *(_DWORD *)v148 = v160.__r_.__value_.__l.__data_;
      *(_DWORD *)&v148[3] = *(_DWORD *)((char *)v160.__r_.__value_.__r.__words + 3);
      v149 = v16;
    }
    v150 = 1;
    LOBYTE(v151) = 0;
    v155 = 0;
    v156 = 1;
    sub_21022F9AC((uint64_t)__dst, (uint64_t)&v122);
    *(_OWORD *)a5 = v122;
    *(_BYTE *)(a5 + 16) = 0;
    *(_BYTE *)(a5 + 112) = 0;
    if (v132)
    {
      *(_BYTE *)(a5 + 40) = 0;
      v33 = v125;
      if (v125)
      {
        *(_OWORD *)(a5 + 16) = __p;
        *(_QWORD *)(a5 + 32) = v124;
        v124 = 0;
        __p = 0uLL;
        *(_BYTE *)(a5 + 40) = 1;
      }
      *(_BYTE *)(a5 + 48) = 0;
      *(_BYTE *)(a5 + 104) = 0;
      if (v131)
      {
        v34 = v128;
        *(_QWORD *)(a5 + 64) = v127;
        *(_OWORD *)(a5 + 48) = *(_OWORD *)v126;
        v126[0] = 0;
        v126[1] = 0;
        *(_QWORD *)(a5 + 72) = v34;
        *(_OWORD *)(a5 + 80) = *(_OWORD *)v129;
        *(_QWORD *)(a5 + 96) = v130;
        v127 = 0;
        v129[0] = 0;
        v129[1] = 0;
        v130 = 0;
        *(_BYTE *)(a5 + 104) = 1;
      }
      *(_BYTE *)(a5 + 112) = 1;
      *(_BYTE *)(a5 + 120) = 0;
      if (v33 && SHIBYTE(v124) < 0)
        operator delete((void *)__p);
      if (!v156)
      {
LABEL_52:
        if (v16 < 0)
        {
          operator delete(v15);
          if ((SHIBYTE(v162.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_54:
            if ((SHIBYTE(v181.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              return;
LABEL_58:
            v35 = (void *)v181.__r_.__value_.__r.__words[0];
LABEL_309:
            operator delete(v35);
            return;
          }
        }
        else if ((SHIBYTE(v162.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_54;
        }
        operator delete(v162.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v181.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          return;
        goto LABEL_58;
      }
    }
    else
    {
      *(_BYTE *)(a5 + 120) = 0;
      if (!v156)
        goto LABEL_52;
    }
    if (!v155)
      goto LABEL_49;
    if (v154 < 0)
    {
      operator delete(v153);
      if ((v152 & 0x80000000) == 0)
      {
LABEL_49:
        if (!v150)
          goto LABEL_52;
LABEL_50:
        if (v149 < 0)
          operator delete(__dst[0]);
        goto LABEL_52;
      }
    }
    else if ((v152 & 0x80000000) == 0)
    {
      goto LABEL_49;
    }
    operator delete(v151);
    if (!v150)
      goto LABEL_52;
    goto LABEL_50;
  }
  if (a4 && (a4 == 1 && v10 > 1 || a4 == 2 && v9 != 21))
  {
    *(_DWORD *)&v170[24] = 0;
    sub_20FF48A40((uint64_t)v134, (uint64_t)v170, &v158);
    if (*(_DWORD *)&v170[24] == -1)
      sub_20E877AB8();
    v134[0] = &v159;
    ((void (*)(std::string *__return_ptr, void **, _BYTE *))*(&off_24CA0E5E8 + *(unsigned int *)&v170[24]))(&v160, v134, v170);
    if (*(_DWORD *)&v170[24] != -1)
      ((void (*)(void **, _BYTE *))off_24CA0E588[*(unsigned int *)&v170[24]])(v134, v170);
    v17 = std::string::insert(&v160, 0, "Requested io-format ", 0x14uLL);
    v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v161.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v161.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    v19 = std::string::append(&v161, " but image is of color format ", 0x1EuLL);
    v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v181.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v181.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    *(_DWORD *)&v170[24] = 0;
    sub_20E8A2C70((uint64_t)&v159, (uint64_t)v170, &v157);
    if (*(_DWORD *)&v170[24] == -1)
      sub_20E877AB8();
    v159 = &v183;
    ((void (*)(void **__return_ptr, char **, _BYTE *))*(&off_24CA0E5E8 + *(unsigned int *)&v170[24]))(v134, &v159, v170);
    if (*(_DWORD *)&v170[24] != -1)
      ((void (*)(char **, _BYTE *))off_24CA0E588[*(unsigned int *)&v170[24]])(&v159, v170);
    if ((v135 & 0x80u) == 0)
      v21 = v134;
    else
      v21 = (void **)v134[0];
    if ((v135 & 0x80u) == 0)
      v22 = v135;
    else
      v22 = (std::string::size_type)v134[1];
    v23 = std::string::append(&v181, (const std::string::value_type *)v21, v22);
    v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v162.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v162.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    v25 = std::string::append(&v162, " incompatible with pnm.", 0x17uLL);
    v27 = (void *)v25->__r_.__value_.__r.__words[0];
    v26 = (void *)v25->__r_.__value_.__l.__size_;
    v136[0] = v25->__r_.__value_.__r.__words[2];
    *(unsigned int *)((char *)v136 + 3) = *(_DWORD *)((char *)&v25->__r_.__value_.__r.__words[2] + 3);
    v28 = SHIBYTE(v25->__r_.__value_.__r.__words[2]);
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    if (v28 < 0)
    {
      sub_20E860C04(v137, v27, (unint64_t)v26);
    }
    else
    {
      v137[0] = v27;
      v137[1] = v26;
      *(_DWORD *)v138 = v136[0];
      *(_DWORD *)&v138[3] = *(unsigned int *)((char *)v136 + 3);
      v139 = v28;
    }
    v140 = 1;
    LOBYTE(v141) = 0;
    v145 = 0;
    v146 = 1;
    sub_21022F9AC((uint64_t)v137, (uint64_t)&v122);
    *(_OWORD *)a5 = v122;
    *(_BYTE *)(a5 + 16) = 0;
    *(_BYTE *)(a5 + 112) = 0;
    if (v132)
    {
      *(_BYTE *)(a5 + 40) = 0;
      v54 = v125;
      if (v125)
      {
        *(_OWORD *)(a5 + 16) = __p;
        *(_QWORD *)(a5 + 32) = v124;
        v124 = 0;
        __p = 0uLL;
        *(_BYTE *)(a5 + 40) = 1;
      }
      *(_BYTE *)(a5 + 48) = 0;
      *(_BYTE *)(a5 + 104) = 0;
      if (v131)
      {
        v55 = v128;
        *(_QWORD *)(a5 + 64) = v127;
        *(_OWORD *)(a5 + 48) = *(_OWORD *)v126;
        v126[0] = 0;
        v126[1] = 0;
        *(_QWORD *)(a5 + 72) = v55;
        *(_OWORD *)(a5 + 80) = *(_OWORD *)v129;
        *(_QWORD *)(a5 + 96) = v130;
        v127 = 0;
        v129[0] = 0;
        v129[1] = 0;
        v130 = 0;
        *(_BYTE *)(a5 + 104) = 1;
      }
      *(_BYTE *)(a5 + 112) = 1;
      *(_BYTE *)(a5 + 120) = 0;
      if (v54 && SHIBYTE(v124) < 0)
        operator delete((void *)__p);
    }
    else
    {
      *(_BYTE *)(a5 + 120) = 0;
    }
    if (v146)
    {
      if (v145)
      {
        if (v144 < 0)
          operator delete(v143);
        if (v142 < 0)
          operator delete(v141);
      }
      if (v140)
      {
        if (v139 < 0)
          operator delete(v137[0]);
      }
    }
    if (v28 < 0)
    {
      operator delete(v27);
      if ((SHIBYTE(v162.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_134:
        if (((char)v135 & 0x80000000) == 0)
          goto LABEL_135;
        goto LABEL_141;
      }
    }
    else if ((SHIBYTE(v162.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_134;
    }
    operator delete(v162.__r_.__value_.__l.__data_);
    if (((char)v135 & 0x80000000) == 0)
    {
LABEL_135:
      if ((SHIBYTE(v181.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_136;
      goto LABEL_142;
    }
LABEL_141:
    operator delete(v134[0]);
    if ((SHIBYTE(v181.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_136:
      if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_137;
      goto LABEL_143;
    }
LABEL_142:
    operator delete(v181.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_137:
      if ((SHIBYTE(v160.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        return;
LABEL_144:
      v35 = (void *)v160.__r_.__value_.__r.__words[0];
      goto LABEL_309;
    }
LABEL_143:
    operator delete(v161.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v160.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return;
    goto LABEL_144;
  }
  v30 = a1[6];
  v29 = a1[7];
  v136[0] = v9;
  if (v10 <= 1)
  {
    v31 = "P2\n";
    v32 = "P5\n";
    goto LABEL_61;
  }
  if (v9 != 21)
  {
    v182 = 0;
    sub_20E8A2C70((uint64_t)v134, (uint64_t)&v181, v136);
    if (v182 == -1)
      sub_20E877AB8();
    v134[0] = &v183;
    ((void (*)(std::string *__return_ptr, void **, std::string *))*(&off_24CA0E5E8 + v182))(&v160, v134, &v181);
    if (v182 != -1)
      ((void (*)(void **, std::string *))off_24CA0E588[v182])(v134, &v181);
    v56 = std::string::insert(&v160, 0, "Image is of format ", 0x13uLL);
    v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
    v161.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v161.__r_.__value_.__l.__data_ = v57;
    v56->__r_.__value_.__l.__size_ = 0;
    v56->__r_.__value_.__r.__words[2] = 0;
    v56->__r_.__value_.__r.__words[0] = 0;
    v58 = std::string::append(&v161, " but must be 8-bit Gray or Rgb to save as pnm.", 0x2EuLL);
    v60 = (void *)v58->__r_.__value_.__r.__words[0];
    v59 = v58->__r_.__value_.__l.__size_;
    LODWORD(v159) = v58->__r_.__value_.__r.__words[2];
    *(_DWORD *)((char *)&v159 + 3) = *(_DWORD *)((char *)&v58->__r_.__value_.__r.__words[2] + 3);
    v61 = SHIBYTE(v58->__r_.__value_.__r.__words[2]);
    v58->__r_.__value_.__l.__size_ = 0;
    v58->__r_.__value_.__r.__words[2] = 0;
    v58->__r_.__value_.__r.__words[0] = 0;
    if (v61 < 0)
    {
      sub_20E860C04(&v162, v60, v59);
    }
    else
    {
      v162.__r_.__value_.__r.__words[0] = (std::string::size_type)v60;
      v162.__r_.__value_.__l.__size_ = v59;
      LODWORD(v162.__r_.__value_.__r.__words[2]) = (_DWORD)v159;
      *(_DWORD *)((char *)&v162.__r_.__value_.__r.__words[2] + 3) = *(_DWORD *)((char *)&v159 + 3);
      *((_BYTE *)&v162.__r_.__value_.__s + 23) = v61;
    }
    v163 = 1;
    LOBYTE(v164) = 0;
    v168 = 0;
    v169 = 1;
    v81 = v170;
    sub_21022F9AC((uint64_t)&v162, (uint64_t)v170);
    v122 = *(_OWORD *)v170;
    LOBYTE(__p) = 0;
    v82 = v180;
    if (!v180)
    {
      v85 = 0;
      v84 = 0;
      v83 = 0;
      goto LABEL_282;
    }
    v125 = 0;
    if ((_BYTE)v172)
    {
      __p = *(_OWORD *)&v170[16];
      v124 = v171;
      *(_QWORD *)&v170[24] = 0;
      v171 = 0;
      *(_QWORD *)&v170[16] = 0;
      v83 = 1;
      v125 = 1;
      LOBYTE(v126[0]) = 0;
      v131 = 0;
      if (v179)
      {
LABEL_207:
        v81 = v176;
        v127 = v175;
        *(_OWORD *)v126 = v174;
        v174 = 0uLL;
        *(_OWORD *)v129 = v177;
        v130 = v178;
        v175 = 0;
        v177 = 0uLL;
        v178 = 0;
        v84 = 1;
        v131 = 1;
LABEL_279:
        v85 = 1;
        if ((_BYTE)v172 && SHIBYTE(v171) < 0)
          operator delete(*(void **)&v170[16]);
LABEL_282:
        if (v169)
        {
          if (v168)
          {
            if (v167 < 0)
              operator delete(v166);
            if (v165 < 0)
              operator delete(v164);
          }
          if (v163 && SHIBYTE(v162.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v162.__r_.__value_.__l.__data_);
        }
        if (v61 < 0)
        {
          operator delete(v60);
          if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_293:
            if ((SHIBYTE(v160.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              goto LABEL_294;
LABEL_313:
            operator delete(v160.__r_.__value_.__l.__data_);
LABEL_294:
            *(_BYTE *)(a5 + 120) = 0;
            *(_OWORD *)a5 = v122;
            *(_BYTE *)(a5 + 16) = 0;
            *(_BYTE *)(a5 + 112) = 0;
            if (v82)
            {
              *(_BYTE *)(a5 + 40) = 0;
              if (v83)
              {
                *(_OWORD *)(a5 + 16) = __p;
                *(_QWORD *)(a5 + 32) = v124;
                v124 = 0;
                __p = 0uLL;
                *(_BYTE *)(a5 + 40) = 1;
              }
              *(_BYTE *)(a5 + 48) = 0;
              *(_BYTE *)(a5 + 104) = 0;
              if (v84)
              {
                *(_OWORD *)(a5 + 48) = *(_OWORD *)v126;
                *(_QWORD *)(a5 + 64) = v127;
                v126[0] = 0;
                v126[1] = 0;
                *(_QWORD *)(a5 + 72) = v81;
                *(_OWORD *)(a5 + 80) = *(_OWORD *)v129;
                *(_QWORD *)(a5 + 96) = v130;
                v127 = 0;
                v129[0] = 0;
                v129[1] = 0;
                v130 = 0;
                *(_BYTE *)(a5 + 104) = 1;
              }
              *(_BYTE *)(a5 + 112) = 1;
            }
            goto LABEL_300;
          }
        }
        else if ((SHIBYTE(v161.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_293;
        }
        operator delete(v161.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v160.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          goto LABEL_294;
        goto LABEL_313;
      }
    }
    else
    {
      v83 = 0;
      LOBYTE(v126[0]) = 0;
      v131 = 0;
      if (v179)
        goto LABEL_207;
    }
    v84 = 0;
    goto LABEL_279;
  }
  v31 = "P3\n";
  v32 = "P6\n";
LABEL_61:
  if (a3 == 1)
    v36 = (uint64_t)v32;
  else
    v36 = (uint64_t)v31;
  sub_20E86A980(a2, v36, 3);
  if (v9 == 21 || v9 == 1)
    v38 = 255;
  else
    v38 = 0xFFFF;
  std::to_string((std::string *)v170, v30);
  if (v170[23] >= 0)
    v39 = v170;
  else
    v39 = *(_BYTE **)v170;
  if (v170[23] >= 0)
    v40 = v170[23];
  else
    v40 = *(_QWORD *)&v170[8];
  sub_20E86A980(a2, (uint64_t)v39, v40);
  if ((v170[23] & 0x80000000) != 0)
    operator delete(*(void **)v170);
  sub_20E86A980(a2, (uint64_t)" ", 1);
  std::to_string((std::string *)v170, v29);
  if (v170[23] >= 0)
    v41 = v170;
  else
    v41 = *(_BYTE **)v170;
  if (v170[23] >= 0)
    v42 = v170[23];
  else
    v42 = *(_QWORD *)&v170[8];
  sub_20E86A980(a2, (uint64_t)v41, v42);
  if ((v170[23] & 0x80000000) != 0)
    operator delete(*(void **)v170);
  sub_20E86A980(a2, (uint64_t)"\n", 1);
  std::to_string((std::string *)v170, v38);
  if (v170[23] >= 0)
    v43 = v170;
  else
    v43 = *(_BYTE **)v170;
  if (v170[23] >= 0)
    v44 = v170[23];
  else
    v44 = *(_QWORD *)&v170[8];
  sub_20E86A980(a2, (uint64_t)v43, v44);
  if ((v170[23] & 0x80000000) != 0)
    operator delete(*(void **)v170);
  sub_20E86A980(a2, (uint64_t)"\n", 1);
  v133 = 1;
  switch(v157)
  {
    case 0x15u:
      *(_QWORD *)v170 = &off_24CA0E720;
      sub_20FF515E4((uint64_t)a1, (uint64_t)&v170[8]);
      if (a3 == 1)
      {
        v71 = *(_QWORD *)&v170[8];
        if (!*(_QWORD *)&v170[8])
          goto LABEL_231;
        v72 = *(std::__shared_weak_count **)&v170[16];
        if (*(_QWORD *)&v170[16])
        {
          v73 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
          do
            v74 = __ldxr(v73);
          while (__stxr(v74 + 1, v73));
          do
            v75 = __ldaxr(v73);
          while (__stlxr(v75 - 1, v73));
          if (!v75)
          {
            ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
            std::__shared_weak_count::__release_weak(v72);
          }
          v76 = *(std::__shared_weak_count **)&v170[16];
          v71 = *(_QWORD *)&v170[8];
          if (*(_QWORD *)&v170[16])
          {
            v77 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
            do
              v78 = __ldxr(v77);
            while (__stxr(v78 + 1, v77));
            do
              v79 = __ldaxr(v77);
            while (__stlxr(v79 - 1, v77));
            if (!v79)
            {
              ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
              std::__shared_weak_count::__release_weak(v76);
            }
          }
        }
        if (BYTE1(v176))
          (*(void (**)(std::string *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v71 + 96))(&v162, v71, 0);
        else
LABEL_231:
          v162.__r_.__value_.__r.__words[0] = 0;
        if ((_DWORD)v171)
        {
          if (HIDWORD(v171))
          {
            v102 = v172;
            if (v172)
            {
              v103 = DWORD1(v174);
              v104 = *(_QWORD *)&v170[24];
              if ((_BYTE)v176 && *(_QWORD *)&v170[24])
              {
                v105 = *(_OWORD *)&v170[8];
                if (*(_QWORD *)&v170[16])
                {
                  v106 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
                  do
                    v107 = __ldxr(v106);
                  while (__stxr(v107 + 1, v106));
                  do
                    v108 = __ldaxr(v106);
                  while (__stlxr(v108 - 1, v106));
                  if (!v108)
                  {
                    (*(void (**)(_QWORD))(**((_QWORD **)&v105 + 1) + 16))(*((_QWORD *)&v105 + 1));
                    std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v105 + 1));
                  }
                }
                (*(void (**)(_QWORD, _QWORD, const char *))(*(_QWORD *)v105 + 88))(v105, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
                v104 = *(_QWORD *)&v170[24];
              }
              v109 = v102 - 1;
              if (v102 != 1)
              {
                do
                {
                  std::ostream::write();
                  v104 += v103;
                  --v109;
                }
                while (v109);
              }
              std::ostream::write();
            }
          }
        }
        v110 = v162.__r_.__value_.__r.__words[0];
        v162.__r_.__value_.__r.__words[0] = 0;
        if (v110)
          (*(void (**)(std::string::size_type))(*(_QWORD *)v110 + 8))(v110);
      }
      else
      {
        v181.__r_.__value_.__r.__words[0] = 16;
        v181.__r_.__value_.__l.__size_ = 0x1000000008;
        v181.__r_.__value_.__r.__words[2] = 14;
        v80 = operator new(0x18uLL);
        *(_OWORD *)v80 = xmmword_24CA0E600;
        v80[2] = "\n";
        v162.__r_.__value_.__r.__words[0] = (std::string::size_type)v80;
        v162.__r_.__value_.__l.__size_ = (std::string::size_type)(v80 + 3);
        v162.__r_.__value_.__r.__words[2] = (std::string::size_type)(v80 + 3);
        v163 = 1;
        sub_20FF54BAC((uint64_t)&v181, a2, (uint64_t)v170, (uint64_t)&v162);
        if (v163 && v162.__r_.__value_.__r.__words[0])
        {
          v162.__r_.__value_.__l.__size_ = v162.__r_.__value_.__r.__words[0];
          operator delete(v162.__r_.__value_.__l.__data_);
        }
        if (DWORD2(v174) && HIDWORD(v174))
          sub_20E86A980(a2, (uint64_t)"\n", 1);
      }
      v99 = *(std::__shared_weak_count **)&v170[16];
      if (!*(_QWORD *)&v170[16])
        goto LABEL_275;
      v111 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
      do
        v101 = __ldaxr(v111);
      while (__stlxr(v101 - 1, v111));
      break;
    case 2u:
      *(_QWORD *)v170 = &off_24CA0E628;
      sub_20FF50F20((uint64_t)a1, (uint64_t)&v170[8]);
      if (a3 == 1)
      {
        v62 = *(_QWORD *)&v170[8];
        if (!*(_QWORD *)&v170[8])
          goto LABEL_209;
        v63 = *(std::__shared_weak_count **)&v170[16];
        if (*(_QWORD *)&v170[16])
        {
          v64 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
          do
            v65 = __ldxr(v64);
          while (__stxr(v65 + 1, v64));
          do
            v66 = __ldaxr(v64);
          while (__stlxr(v66 - 1, v64));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
            std::__shared_weak_count::__release_weak(v63);
          }
          v67 = *(std::__shared_weak_count **)&v170[16];
          v62 = *(_QWORD *)&v170[8];
          if (*(_QWORD *)&v170[16])
          {
            v68 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
            do
              v69 = __ldxr(v68);
            while (__stxr(v69 + 1, v68));
            do
              v70 = __ldaxr(v68);
            while (__stlxr(v70 - 1, v68));
            if (!v70)
            {
              ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
              std::__shared_weak_count::__release_weak(v67);
            }
          }
        }
        if (BYTE1(v174))
          (*(void (**)(std::string *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v62 + 96))(&v162, v62, 0);
        else
LABEL_209:
          v162.__r_.__value_.__r.__words[0] = 0;
        v86 = v173;
        v87 = *(_QWORD *)&v170[24];
        v88 = v171;
        if ((_BYTE)v174 && *(_QWORD *)&v170[24])
        {
          v89 = *(_OWORD *)&v170[8];
          if (*(_QWORD *)&v170[16])
          {
            v90 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
            do
              v91 = __ldxr(v90);
            while (__stxr(v91 + 1, v90));
            do
              v92 = __ldaxr(v90);
            while (__stlxr(v92 - 1, v90));
            if (!v92)
            {
              (*(void (**)(_QWORD))(**((_QWORD **)&v89 + 1) + 16))(*((_QWORD *)&v89 + 1));
              std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v89 + 1));
            }
          }
          (*(void (**)(_QWORD, _QWORD, const char *))(*(_QWORD *)v89 + 88))(v89, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
          v87 = *(_QWORD *)&v170[24];
        }
        v93 = v86 * HIDWORD(v88);
        if ((_DWORD)v86 * HIDWORD(v88) && (_DWORD)v88)
        {
          v94 = 2 * v88;
          v95 = 2 * v86;
          v96 = v87 + 2 * v93;
          do
          {
            v97 = 0;
            do
            {
              LOWORD(v181.__r_.__value_.__l.__data_) = bswap32(*(unsigned __int16 *)(v87 + v97)) >> 16;
              std::ostream::write();
              v97 += 2;
            }
            while (v94 != v97);
            v87 += v95;
          }
          while (v87 != v96);
        }
        v98 = v162.__r_.__value_.__r.__words[0];
        v162.__r_.__value_.__r.__words[0] = 0;
        if (v98)
          (*(void (**)(std::string::size_type))(*(_QWORD *)v98 + 8))(v98);
      }
      else
      {
        v181.__r_.__value_.__r.__words[0] = 16;
        v181.__r_.__value_.__l.__size_ = 0x1000000008;
        v181.__r_.__value_.__r.__words[2] = 14;
        v162.__r_.__value_.__s.__data_[0] = 0;
        v163 = 0;
        sub_20FF53E4C((uint64_t)&v181, a2, (uint64_t)v170, (uint64_t)&v162);
        if (v163 && v162.__r_.__value_.__r.__words[0])
        {
          v162.__r_.__value_.__l.__size_ = v162.__r_.__value_.__r.__words[0];
          operator delete(v162.__r_.__value_.__l.__data_);
        }
        if ((_DWORD)v171 && HIDWORD(v171))
          sub_20E86A980(a2, (uint64_t)"\n", 1);
      }
      v99 = *(std::__shared_weak_count **)&v170[16];
      if (!*(_QWORD *)&v170[16])
        goto LABEL_275;
      v100 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
      do
        v101 = __ldaxr(v100);
      while (__stlxr(v101 - 1, v100));
      break;
    case 1u:
      *(_QWORD *)v170 = &off_24C9C0A88;
      sub_20EA6D268((uint64_t)a1, (uint64_t)&v170[8]);
      if (a3 == 1)
      {
        v45 = *(_QWORD *)&v170[8];
        if (!*(_QWORD *)&v170[8])
          goto LABEL_253;
        v46 = *(std::__shared_weak_count **)&v170[16];
        if (*(_QWORD *)&v170[16])
        {
          v47 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
          do
            v48 = __ldxr(v47);
          while (__stxr(v48 + 1, v47));
          do
            v49 = __ldaxr(v47);
          while (__stlxr(v49 - 1, v47));
          if (!v49)
          {
            ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
            std::__shared_weak_count::__release_weak(v46);
          }
          v50 = *(std::__shared_weak_count **)&v170[16];
          v45 = *(_QWORD *)&v170[8];
          if (*(_QWORD *)&v170[16])
          {
            v51 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
            do
              v52 = __ldxr(v51);
            while (__stxr(v52 + 1, v51));
            do
              v53 = __ldaxr(v51);
            while (__stlxr(v53 - 1, v51));
            if (!v53)
            {
              ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
              std::__shared_weak_count::__release_weak(v50);
            }
          }
        }
        if (BYTE1(v174))
          (*(void (**)(std::string *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v45 + 96))(&v162, v45, 0);
        else
LABEL_253:
          v162.__r_.__value_.__r.__words[0] = 0;
        if ((_DWORD)v171)
        {
          v112 = HIDWORD(v171);
          if (HIDWORD(v171))
          {
            v113 = v173;
            v114 = *(_QWORD *)&v170[24];
            if ((_BYTE)v174 && *(_QWORD *)&v170[24])
            {
              v115 = *(_OWORD *)&v170[8];
              if (*(_QWORD *)&v170[16])
              {
                v116 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
                do
                  v117 = __ldxr(v116);
                while (__stxr(v117 + 1, v116));
                do
                  v118 = __ldaxr(v116);
                while (__stlxr(v118 - 1, v116));
                if (!v118)
                {
                  (*(void (**)(_QWORD))(**((_QWORD **)&v115 + 1) + 16))(*((_QWORD *)&v115 + 1));
                  std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v115 + 1));
                }
              }
              (*(void (**)(_QWORD, _QWORD, const char *))(*(_QWORD *)v115 + 88))(v115, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
              v114 = *(_QWORD *)&v170[24];
            }
            v119 = v112 - 1;
            if (v112 != 1)
            {
              do
              {
                std::ostream::write();
                v114 += v113;
                --v119;
              }
              while (v119);
            }
            std::ostream::write();
          }
        }
        v120 = v162.__r_.__value_.__r.__words[0];
        v162.__r_.__value_.__r.__words[0] = 0;
        if (v120)
          (*(void (**)(std::string::size_type))(*(_QWORD *)v120 + 8))(v120);
      }
      else
      {
        v181.__r_.__value_.__r.__words[0] = 16;
        v181.__r_.__value_.__l.__size_ = 0x1000000008;
        v181.__r_.__value_.__r.__words[2] = 14;
        v162.__r_.__value_.__s.__data_[0] = 0;
        v163 = 0;
        sub_20FF52E34((uint64_t)&v181, a2, (uint64_t)v170, (uint64_t)&v162);
        if (v163 && v162.__r_.__value_.__r.__words[0])
        {
          v162.__r_.__value_.__l.__size_ = v162.__r_.__value_.__r.__words[0];
          operator delete(v162.__r_.__value_.__l.__data_);
        }
        if ((_DWORD)v171 && HIDWORD(v171))
          sub_20E86A980(a2, (uint64_t)"\n", 1);
      }
      v99 = *(std::__shared_weak_count **)&v170[16];
      if (!*(_QWORD *)&v170[16])
        goto LABEL_275;
      v121 = (unint64_t *)(*(_QWORD *)&v170[16] + 8);
      do
        v101 = __ldaxr(v121);
      while (__stlxr(v101 - 1, v121));
      break;
    default:
      sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Pnm.cpp", 440, (uint64_t)"", 0, (uint64_t)"not implemented", 15, (void (*)(void **))sub_21023DDB0);
      abort();
  }
  if (!v101)
  {
    ((void (*)(std::__shared_weak_count *))v99->__on_zero_shared)(v99);
    std::__shared_weak_count::__release_weak(v99);
  }
LABEL_275:
  *(_BYTE *)(a5 + 120) = 1;
  if (v133)
    return;
  v85 = v132;
LABEL_300:
  if (v85)
  {
    if (v131)
    {
      if (SHIBYTE(v130) < 0)
        operator delete(v129[0]);
      if (SHIBYTE(v127) < 0)
        operator delete(v126[0]);
    }
    if (v125 && SHIBYTE(v124) < 0)
    {
      v35 = (void *)__p;
      goto LABEL_309;
    }
  }
}

void sub_20FF4FF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,uint64_t a63)
{
  void *a65;
  uint64_t v65;
  void *v67;

  v67 = a65;
  a65 = 0;
  if (v67)
    (*(void (**)(void *))(*(_QWORD *)v67 + 8))(v67);
  sub_20FF50354(v65 - 248);
  sub_20E89ED1C((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF50354(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_20FF503BC(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

BOOL sub_20FF50424(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  unsigned int v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;

  v2 = MEMORY[0x24BDAC740];
  while (1)
  {
    v3 = *a1;
    std::istream::tellg();
    while ((*((_BYTE *)v3 + *(_QWORD *)(*v3 - 24) + 32) & 2) == 0)
    {
      v4 = std::istream::peek();
      if (v4 <= 0x7F)
      {
        if ((*(_DWORD *)(v2 + 4 * v4 + 60) & 0x4000) == 0)
          break;
      }
      else if (!__maskrune(v4, 0x4000uLL))
      {
        break;
      }
      std::istream::seekg();
    }
    std::istream::tellg();
    if (v9 == v8)
    {
      v5 = *a1;
      std::istream::tellg();
      v6 = v5 + 4;
      while ((*((_BYTE *)v6 + *(_QWORD *)(*v5 - 24)) & 2) == 0)
      {
        if (std::istream::peek() != 35 || (*((_BYTE *)v6 + *(_QWORD *)(*v5 - 24)) & 2) != 0)
          break;
        while (std::istream::peek() != 10)
        {
          std::istream::seekg();
          if ((*((_BYTE *)v6 + *(_QWORD *)(*v5 - 24)) & 2) != 0)
            goto LABEL_2;
        }
      }
LABEL_2:
      std::istream::tellg();
      if (v9 == v8)
        return (*((_BYTE *)*a1 + *(_QWORD *)(**a1 - 24) + 32) & 2) == 0;
    }
  }
}

uint64_t sub_20FF505E4(_QWORD *a1)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  char *v4;
  unint64_t v5;
  void **v6;
  char *v7;
  int v8;
  BOOL v9;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  size_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  unint64_t v22;
  char *v23;
  __int128 *v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  size_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char v39;
  uint64_t v40;
  unint64_t v42;
  __int128 *v43;
  char *v44;
  unint64_t v45;
  __int128 v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  char *__p;
  char *v52;
  void *v53[2];
  unsigned __int8 v54;

  __p = 0;
  v52 = 0;
  v2 = std::istream::peek();
  if ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) != 0)
  {
    v4 = 0;
    v11 = 0;
    goto LABEL_59;
  }
  v3 = v2;
  v4 = 0;
  do
  {
    sub_20E9E9DB8("0123456789", (uint64_t)v53);
    v5 = v54;
    if ((v54 & 0x80u) == 0)
      v6 = v53;
    else
      v6 = (void **)v53[0];
    if ((v54 & 0x80u) != 0)
      v5 = (unint64_t)v53[1];
    if (v5)
    {
      v7 = (char *)(v5 - 1);
      do
      {
        v8 = *(unsigned __int8 *)v6;
        v6 = (void **)((char *)v6 + 1);
        v9 = v8 == v3;
      }
      while (v8 != v3 && v7-- != 0);
      if (((char)v54 & 0x80000000) == 0)
      {
LABEL_16:
        v11 = (unint64_t)v52;
        if (!v9)
          goto LABEL_57;
        goto LABEL_20;
      }
    }
    else
    {
      v9 = 0;
      if (((char)v54 & 0x80000000) == 0)
        goto LABEL_16;
    }
    operator delete(v53[0]);
    v11 = (unint64_t)v52;
    if (!v9)
      goto LABEL_57;
LABEL_20:
    if ((unint64_t)v4 < v11)
    {
      *v4++ = v3;
      goto LABEL_40;
    }
    v12 = v4 - __p;
    v13 = v4 - __p + 1;
    if (v13 < 0)
      goto LABEL_93;
    v14 = v11 - (_QWORD)__p;
    if (2 * v14 > v13)
      v13 = 2 * v14;
    if (v14 >= 0x3FFFFFFFFFFFFFFFLL)
      v15 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v15 = v13;
    if (!v15)
    {
      v16 = 0;
      v17 = (char *)(v4 - __p);
      *(_BYTE *)v12 = v3;
      v18 = v12 + 1;
      if (v4 == __p)
        goto LABEL_37;
LABEL_30:
      if (v12 < 8 || v16 > &v16[v4 - __p - 1] || __p > v4 - 1 || (unint64_t)(__p - v16) < 0x20)
      {
        v19 = v4;
        goto LABEL_32;
      }
      if (v12 >= 0x20)
      {
        v22 = v12 & 0xFFFFFFFFFFFFFFE0;
        v23 = &v16[v12 - 16];
        v24 = (__int128 *)(v4 - 16);
        v25 = v12 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          v26 = *v24;
          *((_OWORD *)v23 - 1) = *(v24 - 1);
          *(_OWORD *)v23 = v26;
          v23 -= 32;
          v24 -= 2;
          v25 -= 32;
        }
        while (v25);
        if (v12 == v22)
        {
LABEL_34:
          v4 = __p;
          __p = v16;
          v52 = &v16[v15];
          if (!v4)
            goto LABEL_39;
LABEL_38:
          operator delete(v4);
          goto LABEL_39;
        }
        if ((v12 & 0x18) == 0)
        {
          v17 -= v22;
          v19 = &v4[-v22];
          goto LABEL_32;
        }
      }
      else
      {
        v22 = 0;
      }
      v19 = &v4[-(v12 & 0xFFFFFFFFFFFFFFF8)];
      v17 -= v12 & 0xFFFFFFFFFFFFFFF8;
      v27 = &v16[&v4[-v22] - __p - 8];
      v28 = (uint64_t *)&v4[-v22 - 8];
      v29 = v22 - (v12 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        v30 = *v28--;
        *(_QWORD *)v27 = v30;
        v27 -= 8;
        v29 += 8;
      }
      while (v29);
      if (v12 == (v12 & 0xFFFFFFFFFFFFFFF8))
        goto LABEL_34;
LABEL_32:
      v20 = v17 - 1;
      do
      {
        v21 = *--v19;
        *v20-- = v21;
      }
      while (v19 != __p);
      goto LABEL_34;
    }
    v16 = (char *)operator new(v15);
    v17 = &v16[v12];
    v16[v12] = v3;
    v18 = (uint64_t)&v16[v12 + 1];
    if (v4 != __p)
      goto LABEL_30;
LABEL_37:
    __p = v17;
    v52 = &v16[v15];
    if (v4)
      goto LABEL_38;
LABEL_39:
    v4 = (char *)v18;
LABEL_40:
    std::istream::seekg();
    v3 = std::istream::peek();
  }
  while ((*((_BYTE *)a1 + *(_QWORD *)(*a1 - 24) + 32) & 2) == 0);
  v11 = (unint64_t)v52;
LABEL_57:
  if ((unint64_t)v4 < v11)
  {
    *v4 = 10;
    goto LABEL_78;
  }
LABEL_59:
  v31 = v4 - __p;
  v32 = v4 - __p + 1;
  if (v32 < 0)
LABEL_93:
    sub_20E867F44();
  v33 = v11 - (_QWORD)__p;
  if (2 * v33 > v32)
    v32 = 2 * v33;
  if (v33 >= 0x3FFFFFFFFFFFFFFFLL)
    v34 = 0x7FFFFFFFFFFFFFFFLL;
  else
    v34 = v32;
  if (v34)
    v35 = (char *)operator new(v34);
  else
    v35 = 0;
  v36 = &v35[v31];
  v35[v31] = 10;
  if (v4 == __p)
  {
    v35 += v31;
    __p = v36;
    if (!v4)
      goto LABEL_79;
    goto LABEL_77;
  }
  if (v31 < 8 || (unint64_t)(__p - v35) < 0x20)
  {
    v37 = v4;
    goto LABEL_72;
  }
  if (v31 >= 0x20)
  {
    v42 = v31 & 0xFFFFFFFFFFFFFFE0;
    v43 = (__int128 *)(v4 - 16);
    v44 = &v35[v4 - 16 - __p];
    v45 = v31 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      v46 = *v43;
      *((_OWORD *)v44 - 1) = *(v43 - 1);
      *(_OWORD *)v44 = v46;
      v44 -= 32;
      v43 -= 2;
      v45 -= 32;
    }
    while (v45);
    if (v31 != v42)
    {
      if ((v31 & 0x18) == 0)
      {
        v36 -= v42;
        v37 = &v4[-v42];
        goto LABEL_72;
      }
      goto LABEL_88;
    }
  }
  else
  {
    v42 = 0;
LABEL_88:
    v37 = &v4[-(v31 & 0xFFFFFFFFFFFFFFF8)];
    v36 -= v31 & 0xFFFFFFFFFFFFFFF8;
    v47 = &v4[-v42 - 8];
    v48 = &v35[v47 - __p];
    v49 = v42 - (v31 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v50 = *(_QWORD *)v47;
      v47 -= 8;
      *(_QWORD *)v48 = v50;
      v48 -= 8;
      v49 += 8;
    }
    while (v49);
    if (v31 != (v31 & 0xFFFFFFFFFFFFFFF8))
    {
LABEL_72:
      v38 = v36 - 1;
      do
      {
        v39 = *--v37;
        *v38-- = v39;
      }
      while (v37 != __p);
    }
  }
  v4 = __p;
  __p = v35;
  if (v4)
  {
LABEL_77:
    operator delete(v4);
LABEL_78:
    v35 = __p;
  }
LABEL_79:
  v40 = atoi(v35);
  if (v35)
    operator delete(v35);
  return v40;
}

void sub_20FF50A4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF50A6C(uint64_t a1, int a2)
{
  int v4;
  void *v5[2];
  uint64_t v6;
  void *__p[2];
  uint64_t v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  char *v16;
  __int128 v17;
  unsigned int v18;
  std::string v19;
  std::string **v20;
  std::string *v21;
  std::string *v22;
  char **v23;
  std::string *v24;
  std::string *v25;

  if (a2 >= 255)
    v4 = 0xFFFF;
  else
    v4 = 255;
  v16 = (char *)operator new(0x68uLL);
  v17 = xmmword_2102E3F40;
  strcpy(v16, "Unsupported pnm format. Loader does not support intensity scaling. File specifies maximum intensity ");
  v18 = 1;
  std::to_string(&v19, a2);
  v21 = (std::string *)&v16;
  v22 = &v19;
  v23 = &v16;
  v24 = &v19;
  v25 = &v19;
  v20 = &v21;
  sub_20E877F18((uint64_t)&v20, (uint64_t)&v16);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  v21 = (std::string *)&v16;
  v22 = (std::string *)" but should be ";
  v23 = &v16;
  v24 = (std::string *)" but should be ";
  v25 = (std::string *)" but should be ";
  if (v18 == -1)
    sub_20E877AB8();
  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)&v21;
  ((void (*)(std::string *, char **))off_24CA0E5B8[v18])(&v19, &v16);
  std::to_string(&v19, v4);
  v21 = (std::string *)&v16;
  v22 = &v19;
  v23 = &v16;
  v24 = &v19;
  v25 = &v19;
  if (v18 == -1)
    sub_20E877AB8();
  v20 = &v21;
  ((void (*)(std::string ***, char **))off_24CA0E5A0[v18])(&v20, &v16);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v19.__r_.__value_.__l.__data_);
  v21 = (std::string *)&v16;
  v22 = (std::string *)".";
  v23 = &v16;
  v24 = (std::string *)".";
  v25 = (std::string *)".";
  if (v18 == -1)
    sub_20E877AB8();
  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)&v21;
  ((void (*)(std::string *, char **))off_24CA0E5D0[v18])(&v19, &v16);
  if (v18 == -1)
    sub_20E877AB8();
  v21 = &v19;
  ((void (*)(void **__return_ptr, std::string **, char **))*(&off_24CA0E5E8 + v18))(v5, &v21, &v16);
  if (v18 != -1)
    ((void (*)(std::string **, char **))off_24CA0E588[v18])(&v21, &v16);
  if (SHIBYTE(v6) < 0)
  {
    sub_20E860C04(__p, v5[0], (unint64_t)v5[1]);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v5;
    v8 = v6;
  }
  v9 = 1;
  LOBYTE(v10) = 0;
  v14 = 0;
  v15 = 1;
  sub_20FF4871C(5u, (__int128 *)__p, a1);
  if (v15)
  {
    if (!v14)
      goto LABEL_21;
    if (v13 < 0)
    {
      operator delete(v12);
      if ((v11 & 0x80000000) == 0)
      {
LABEL_21:
        if (!v9)
          goto LABEL_24;
LABEL_22:
        if (SHIBYTE(v8) < 0)
          operator delete(__p[0]);
        goto LABEL_24;
      }
    }
    else if ((v11 & 0x80000000) == 0)
    {
      goto LABEL_21;
    }
    operator delete(v10);
    if (!v9)
      goto LABEL_24;
    goto LABEL_22;
  }
LABEL_24:
  if (SHIBYTE(v6) < 0)
    operator delete(v5[0]);
}

void sub_20FF50D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF50DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_20E877A60((uint64_t)&a26);
  _Unwind_Resume(a1);
}

void sub_20FF50E0C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF50E74()
{
  return 2;
}

uint64_t sub_20FF50E7C(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_20FF50E84@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 32);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 44);
  return result;
}

uint64_t sub_20FF50E9C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_20FF50F20(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a1 + 48) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF511A0(a1);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a1 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
  }
}

void sub_20FF51154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF511A0(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20FF51218();
  v3 = sub_20EA6CDA8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF51218()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A576F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A576F8))
  {
    sub_20E8610C0(v7, "ConstImageView");
    v2 = sub_20EEC51EC();
    sub_20FF5141C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF5141C((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A576E0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A576E0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A576F8);
          return &stru_254A576E0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A576E0;
}

void sub_20FF51368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A576F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A576F8);
  _Unwind_Resume(a1);
}

void sub_20FF5141C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF514B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF514D4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5153C()
{
  return 21;
}

uint64_t sub_20FF51544(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF5154C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF51560(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

void sub_20FF515E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 21)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF518E4(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v15;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF51898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF518E4(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20FF5195C();
  v3 = sub_20EA6CDA8();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF5195C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57718);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57718))
  {
    sub_20E8610C0(v7, "ConstImageView");
    v2 = sub_20EEC2608();
    sub_20FF51B60((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF51B60((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57700, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57700, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57718);
          return &stru_254A57700;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57700;
}

void sub_20FF51AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57718);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57718);
  _Unwind_Resume(a1);
}

void sub_20FF51B60(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF51BFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF51C18(uint64_t a1, _QWORD *a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t v7;
  void **v8;
  char *v9;
  int v10;
  BOOL v11;
  unint64_t v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  size_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  __int128 *v24;
  unint64_t v25;
  __int128 v26;
  char *v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  unint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  size_t v40;
  _BYTE *v41;
  char *v42;
  char *v43;
  unint64_t v44;
  __int128 *v45;
  _OWORD *v46;
  unint64_t v47;
  __int128 v48;
  char *v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  void *v56[2];
  unsigned __int8 v57;

  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)a1)
    *(_QWORD *)(a1 + 8) = *(_QWORD *)a1;
  v4 = std::istream::peek();
  if ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0)
  {
    v5 = v4;
    do
    {
      sub_20E9E9DB8("0123456789", (uint64_t)v56);
      v7 = v57;
      if ((v57 & 0x80u) == 0)
        v8 = v56;
      else
        v8 = (void **)v56[0];
      if ((v57 & 0x80u) != 0)
        v7 = (unint64_t)v56[1];
      if (v7)
      {
        v9 = (char *)(v7 - 1);
        do
        {
          v10 = *(unsigned __int8 *)v8;
          v8 = (void **)((char *)v8 + 1);
          v11 = v10 == v5;
        }
        while (v10 != v5 && v9-- != 0);
        if (((char)v57 & 0x80000000) == 0)
        {
LABEL_20:
          if (!v11)
            break;
          goto LABEL_24;
        }
      }
      else
      {
        v11 = 0;
        if (((char)v57 & 0x80000000) == 0)
          goto LABEL_20;
      }
      operator delete(v56[0]);
      if (!v11)
        break;
LABEL_24:
      v14 = *(unsigned __int8 **)(a1 + 8);
      v13 = *(_QWORD *)(a1 + 16);
      if ((unint64_t)v14 >= v13)
      {
        v15 = *(unsigned __int8 **)a1;
        v16 = (unint64_t)&v14[-*(_QWORD *)a1];
        v17 = v16 + 1;
        if ((uint64_t)(v16 + 1) < 0)
          goto LABEL_85;
        v18 = v13 - (_QWORD)v15;
        if (2 * v18 > v17)
          v17 = 2 * v18;
        if (v18 >= 0x3FFFFFFFFFFFFFFFLL)
          v19 = 0x7FFFFFFFFFFFFFFFLL;
        else
          v19 = v17;
        if (v19)
        {
          v20 = (char *)operator new(v19);
          v21 = &v20[v16];
          v20[v16] = v5;
          v6 = (uint64_t)&v20[v16 + 1];
          if (v14 == v15)
          {
LABEL_51:
            *(_QWORD *)a1 = v21;
            *(_QWORD *)(a1 + 8) = v6;
            *(_QWORD *)(a1 + 16) = &v20[v19];
            if (v14)
              operator delete(v14);
            goto LABEL_6;
          }
        }
        else
        {
          v20 = 0;
          v21 = (char *)&v14[-*(_QWORD *)a1];
          *(_BYTE *)v16 = v5;
          v6 = v16 + 1;
          if (v14 == v15)
            goto LABEL_51;
        }
        if (v16 >= 8 && (unint64_t)(v15 - (unsigned __int8 *)v20) >= 0x20)
        {
          if (v16 >= 0x20)
          {
            v22 = v16 & 0xFFFFFFFFFFFFFFE0;
            v23 = &v20[v16 - 16];
            v24 = (__int128 *)(v14 - 16);
            v25 = v16 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              v26 = *v24;
              *((_OWORD *)v23 - 1) = *(v24 - 1);
              *(_OWORD *)v23 = v26;
              v23 -= 32;
              v24 -= 2;
              v25 -= 32;
            }
            while (v25);
            if (v16 == v22)
              goto LABEL_50;
            if ((v16 & 0x18) != 0)
              goto LABEL_43;
            v21 -= v22;
            v14 -= v22;
          }
          else
          {
            v22 = 0;
LABEL_43:
            v21 -= v16 & 0xFFFFFFFFFFFFFFF8;
            v27 = &v20[&v14[-v22] - v15 - 8];
            v28 = (uint64_t *)&v14[-v22 - 8];
            v29 = v22 - (v16 & 0xFFFFFFFFFFFFFFF8);
            do
            {
              v30 = *v28--;
              *(_QWORD *)v27 = v30;
              v27 -= 8;
              v29 += 8;
            }
            while (v29);
            v14 -= v16 & 0xFFFFFFFFFFFFFFF8;
            if (v16 == (v16 & 0xFFFFFFFFFFFFFFF8))
            {
LABEL_50:
              v14 = *(unsigned __int8 **)a1;
              v21 = v20;
              goto LABEL_51;
            }
          }
        }
        v31 = v21 - 1;
        do
        {
          v32 = *--v14;
          *v31-- = v32;
        }
        while (v14 != v15);
        goto LABEL_50;
      }
      *v14 = v5;
      v6 = (uint64_t)(v14 + 1);
LABEL_6:
      *(_QWORD *)(a1 + 8) = v6;
      std::istream::seekg();
      v5 = std::istream::peek();
    }
    while ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) == 0);
  }
  v34 = *(unsigned __int8 **)(a1 + 8);
  v33 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v34 >= v33)
  {
    v36 = *(unsigned __int8 **)a1;
    v37 = (unint64_t)&v34[-*(_QWORD *)a1];
    v38 = v37 + 1;
    if ((uint64_t)(v37 + 1) < 0)
LABEL_85:
      sub_20E867F44();
    v39 = v33 - (_QWORD)v36;
    if (2 * v39 > v38)
      v38 = 2 * v39;
    if (v39 >= 0x3FFFFFFFFFFFFFFFLL)
      v40 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v40 = v38;
    if (v40)
      v41 = operator new(v40);
    else
      v41 = 0;
    v42 = &v41[v37];
    v43 = &v41[v40];
    v41[v37] = 10;
    v35 = (uint64_t)&v41[v37 + 1];
    if (v34 == v36)
    {
      *(_QWORD *)a1 = v42;
      *(_QWORD *)(a1 + 8) = v35;
      *(_QWORD *)(a1 + 16) = v43;
      if (!v34)
        goto LABEL_84;
      goto LABEL_83;
    }
    if (v37 < 8 || (unint64_t)(v36 - v41) < 0x20)
      goto LABEL_80;
    if (v37 >= 0x20)
    {
      v44 = v37 & 0xFFFFFFFFFFFFFFE0;
      v45 = (__int128 *)(v34 - 16);
      v46 = &v41[v34 - 16 - v36];
      v47 = v37 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        v48 = *v45;
        *(v46 - 1) = *(v45 - 1);
        *v46 = v48;
        v46 -= 2;
        v45 -= 2;
        v47 -= 32;
      }
      while (v47);
      if (v37 == v44)
      {
LABEL_82:
        v34 = *(unsigned __int8 **)a1;
        *(_QWORD *)a1 = v41;
        *(_QWORD *)(a1 + 8) = v35;
        *(_QWORD *)(a1 + 16) = v43;
        if (!v34)
          goto LABEL_84;
LABEL_83:
        operator delete(v34);
        goto LABEL_84;
      }
      if ((v37 & 0x18) == 0)
      {
        v42 -= v44;
        v34 -= v44;
        goto LABEL_80;
      }
    }
    else
    {
      v44 = 0;
    }
    v42 -= v37 & 0xFFFFFFFFFFFFFFF8;
    v49 = (char *)&v34[-v44 - 8];
    v50 = &v41[v49 - (char *)v36];
    v51 = v44 - (v37 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      v52 = *(_QWORD *)v49;
      v49 -= 8;
      *v50-- = v52;
      v51 += 8;
    }
    while (v51);
    v34 -= v37 & 0xFFFFFFFFFFFFFFF8;
    if (v37 == (v37 & 0xFFFFFFFFFFFFFFF8))
      goto LABEL_82;
LABEL_80:
    v53 = v42 - 1;
    do
    {
      v54 = *--v34;
      *v53-- = v54;
    }
    while (v34 != v36);
    goto LABEL_82;
  }
  *v34 = 10;
  v35 = (uint64_t)(v34 + 1);
LABEL_84:
  *(_QWORD *)(a1 + 8) = v35;
  return atoi(*(const char **)a1);
}

void sub_20FF5201C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  _BOOL4 v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  std::__shared_weak_count *size;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::logic_error *exception;
  std::string v23;

  if (*(_DWORD *)(a1 + 48) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF5229C(a1);
    std::logic_error::logic_error(exception, &v23);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v23.__r_.__value_.__r.__words[0] = v4;
      v23.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v4;
    }
  }
  else
  {
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24);
  v12 = v11 != 0;
  v13 = v11 == 0;
  if (!*(_DWORD *)(a1 + 28))
    v13 = 1;
  if (v13)
    v14 = 0;
  else
    v14 = ((unint64_t)*(unsigned int *)(a1 + 32) << 31) & 0x7FFFFFFF00000000;
  if (v13)
    v15 = 0;
  else
    v15 = *(_QWORD *)(a1 + 24);
  if (HIDWORD(v15) * HIDWORD(v14) == -1
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  v16 = v14 | v12;
  v17 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v23.__r_.__value_.__l.__size_;
  if (v23.__r_.__value_.__l.__size_)
  {
    v19 = (unint64_t *)(v23.__r_.__value_.__l.__size_ + 8);
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
    *(_QWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 8) = size;
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
    do
      v21 = __ldaxr(v19);
    while (__stlxr(v21 - 1, v19));
    if (!v21)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
  else
  {
    *(_OWORD *)a2 = v23.__r_.__value_.__r.__words[0];
    *(_QWORD *)(a2 + 16) = v10;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v16;
    *(_WORD *)(a2 + 40) = v17;
  }
}

void sub_20FF52250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;
  int v16;

  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF5229C(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20FF52314();
  v3 = sub_20EB9FFD0();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF52314()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A576B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A576B8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20EEC51EC();
    sub_20FF52518((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF52518((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A576A0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A576A0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A576B8);
          return &stru_254A576A0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A576A0;
}

void sub_20FF52464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A576B8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A576B8);
  _Unwind_Resume(a1);
}

void sub_20FF52518(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF525B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF525D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int16 v22;
  std::__shared_weak_count *size;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::logic_error *exception;
  std::string v29;
  _BYTE v30[12];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)(a1 + 48) != 21)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF528D0(a1);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (v5)
    {
      p_shared_owners = (unint64_t *)&v5->__shared_owners_;
      do
        v7 = __ldxr(p_shared_owners);
      while (__stxr(v7 + 1, p_shared_owners));
      v29.__r_.__value_.__r.__words[0] = v4;
      v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
      do
        v8 = __ldxr(p_shared_owners);
      while (__stxr(v8 + 1, p_shared_owners));
      do
        v9 = __ldaxr(p_shared_owners);
      while (__stlxr(v9 - 1, p_shared_owners));
      if (!v9)
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
    else
    {
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = *(unint64_t *)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = 0uLL;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_DWORD *)(a1 + 24) == 0;
  if (*(_DWORD *)(a1 + 24))
    v12 = 3;
  else
    v12 = 0;
  if (!*(_DWORD *)(a1 + 28))
    v11 = 1;
  v13 = !v11;
  if (v11)
    v14 = 0;
  else
    v14 = (unint64_t)*(unsigned int *)(a1 + 32) << 32;
  v15 = v14 | v12;
  v16 = *(_QWORD *)(a1 + 24);
  if (!v13)
    v16 = 0;
  *(_QWORD *)&v30[4] = v16;
  v17 = v16;
  *(_DWORD *)v30 = 3;
  v18 = *(_QWORD *)v30;
  v19 = HIDWORD(v16);
  *(_DWORD *)v30 = 1;
  *(_QWORD *)&v30[4] = v15;
  v20 = *(_QWORD *)v30;
  v21 = HIDWORD(v14);
  if (HIDWORD(v16) * HIDWORD(v14) == -1
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Array/include/Essentials/Array/ArrayView.h", 983, (uint64_t)"total_size < std::numeric_limits<uint32_t>::max()", 49, (uint64_t)"Given data block is too big to be represented by uint32_t indexed ArrayView", 75, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  v22 = *(_WORD *)(a1 + 52);
  size = (std::__shared_weak_count *)v29.__r_.__value_.__l.__size_;
  if (v29.__r_.__value_.__l.__size_)
  {
    v24 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v25 = __ldxr(v24);
    while (__stxr(v25 + 1, v24));
  }
  *(_QWORD *)a2 = v29.__r_.__value_.__r.__words[0];
  *(_QWORD *)(a2 + 8) = size;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v18;
  *(_DWORD *)(a2 + 32) = v19;
  *(_QWORD *)(a2 + 36) = v20;
  *(_DWORD *)(a2 + 44) = v21;
  *(_QWORD *)(a2 + 48) = v17;
  *(_QWORD *)(a2 + 56) = v15;
  *(_WORD *)(a2 + 64) = v22;
  if (size)
  {
    v26 = (unint64_t *)&size->__shared_owners_;
    do
      v27 = __ldaxr(v26);
    while (__stlxr(v27 - 1, v26));
    if (!v27)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF52884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF528D0(uint64_t a1)
{
  std::string *v2;
  std::string *v3;
  unsigned int v5;

  v2 = sub_20FF52948();
  v3 = sub_20EB9FFD0();
  v5 = *(_DWORD *)(a1 + 48);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v2, (uint64_t)" from an ", (uint64_t)v3, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF52948()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A576D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A576D8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20EEC2608();
    sub_20FF52B4C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF52B4C((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A576C0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A576C0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A576D8);
          return &stru_254A576C0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A576C0;
}

void sub_20FF52A98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A576D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A576D8);
  _Unwind_Resume(a1);
}

void sub_20FF52B4C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF52BE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF52C04(_DWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  __int16 v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD v13[3];
  uint64_t v14;
  __int128 v15;
  uint64_t (**v16)();

  v16 = &off_24C9F0DC8;
  sub_2101B8124(a1, (uint64_t)&v12);
  v3 = operator new();
  *(_QWORD *)v3 = &off_24C9F0C28;
  *(_OWORD *)(v3 + 8) = v13[0];
  *(_OWORD *)(v3 + 20) = *(_OWORD *)((char *)v13 + 12);
  *(_OWORD *)(v3 + 40) = v13[2];
  *(_QWORD *)(v3 + 56) = v14;
  *(_OWORD *)(v3 + 64) = v15;
  v4 = (std::__shared_weak_count *)operator new();
  v4->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  v4->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9F0E00;
  v4->__shared_weak_owners_ = 0;
  v4[1].__vftable = (std::__shared_weak_count_vtbl *)v3;
  *a2 = v3;
  a2[1] = (uint64_t)v4;
  do
    v6 = __ldxr(p_shared_owners);
  while (__stxr(v6 + 1, p_shared_owners));
  a2[2] = 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v12, v3, 2);
  v7 = *(_QWORD *)(v12 + 16);
  *(_OWORD *)(a2 + 3) = *(_OWORD *)v12;
  a2[5] = v7;
  v12 = 0;
  MEMORY[0x212BC6398]();
  a2[6] = a2[3];
  *(_OWORD *)(a2 + 7) = *((_OWORD *)a2 + 2);
  v8 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)*a2 + 104))(*a2);
  v9 = v8;
  if ((v8 & 0xFFFFFF) <= 0x10000)
    v9 = 0;
  v10 = v8 & 0xFF00;
  if ((v8 & 0xFF0000) == 0)
    v10 = 0;
  *((_WORD *)a2 + 36) = v10 & 0xFF00 | v9;
  do
    v11 = __ldaxr(p_shared_owners);
  while (__stlxr(v11 - 1, p_shared_owners));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_20FF52DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;

  sub_20E86665C(v10);
  sub_20E86665C((uint64_t)&a10);
  sub_20EEC14F8(&a9);
  _Unwind_Resume(a1);
}

void sub_20FF52E08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20EEC14F8(&a9);
  _Unwind_Resume(a1);
}

void sub_20FF52E1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  if (a18)
    free(a18);
  _Unwind_Resume(exception_object);
}

void sub_20FF52E34(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  unsigned int v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unsigned __int8 v53;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[5];
  uint64_t v60;
  uint64_t v61;
  void *__p;
  void *v63;
  char *v64;
  uint64_t v65;
  unsigned __int8 v66;
  _QWORD *v67;
  unsigned __int8 *v68;
  _QWORD *v69;

  if (!*(_DWORD *)(a3 + 32) || !*(_DWORD *)(a3 + 36))
    return;
  v65 = *(_QWORD *)(a3 + 32);
  __p = 0;
  v63 = 0;
  v64 = 0;
  if (!*(_BYTE *)(a4 + 24))
  {
    v8 = operator new(0x10uLL);
    *v8 = " ";
    v8[1] = "\n";
    __p = v8;
    v63 = v8 + 2;
    v64 = (char *)(v8 + 2);
    v61 = 1;
    goto LABEL_70;
  }
  v5 = *(_QWORD **)(a4 + 8);
  v4 = *(char **)(a4 + 16);
  __p = *(void **)a4;
  v6 = __p;
  v63 = v5;
  v64 = v4;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  if (v6 == v5)
  {
    if (v5 >= (_QWORD *)v4)
    {
      v10 = (v4 - (char *)v5) >> 2;
      if (v10 <= 1)
        v10 = 1;
      if ((unint64_t)(v4 - (char *)v5) >= 0x7FFFFFFFFFFFFFF8)
        v11 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v11 = v10;
      if (v11 >> 61)
        sub_20E877A38();
      v6 = operator new(8 * v11);
      *v6 = " ";
      v4 = (char *)&v6[v11];
      __p = v6;
      v64 = v4;
      if (v5)
        operator delete(v5);
      v63 = v6 + 1;
      v5 = v6 + 1;
      v7 = 8;
    }
    else
    {
      *v5 = " ";
      v6 = v5++;
      v63 = v5;
      v7 = (char *)v5 - (char *)v6;
      if ((char *)v5 - (char *)v6 != 8)
        goto LABEL_10;
    }
  }
  else
  {
    v7 = (char *)v5 - (char *)v6;
    if ((char *)v5 - (char *)v6 != 8)
    {
LABEL_10:
      v9 = (char *)v5 - (char *)v6;
      v61 = v5 - v6 - 1;
      if ((unint64_t)((char *)v5 - (char *)v6) <= 0xF)
        goto LABEL_42;
      goto LABEL_70;
    }
  }
  if (v5 < (_QWORD *)v4)
  {
    *v5 = "\n";
    v12 = __p;
    v13 = v5 + 1;
    goto LABEL_41;
  }
  v14 = v7 >> 3;
  if ((v4 - (char *)v6) >> 2 <= (unint64_t)((v7 >> 3) + 1))
    v15 = v14 + 1;
  else
    v15 = (v4 - (char *)v6) >> 2;
  if ((unint64_t)(v4 - (char *)v6) >= 0x7FFFFFFFFFFFFFF8)
    v16 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v16 = v15;
  if (v16 >> 61)
    sub_20E877A38();
  v17 = operator new(8 * v16);
  v12 = &v17[8 * v14];
  v18 = &v17[8 * v16];
  *v12 = "\n";
  v13 = v12 + 1;
  if (v5 != v6)
  {
    v19 = (char *)v5 - (char *)v6 - 8;
    if (v19 < 0x58)
    {
      v20 = v5;
      goto LABEL_38;
    }
    if ((unint64_t)((char *)v5 - (v7 & 0xFFFFFFFFFFFFFFF8) - v17) < 0x20)
    {
      v20 = v5;
      do
      {
LABEL_38:
        v27 = *--v20;
        *--v12 = v27;
      }
      while (v20 != v6);
      goto LABEL_39;
    }
    v21 = (v19 >> 3) + 1;
    v22 = 8 * (v21 & 0x3FFFFFFFFFFFFFFCLL);
    v20 = &v5[v22 / 0xFFFFFFFFFFFFFFF8];
    v12 = (_QWORD *)((char *)v12 - v22);
    v23 = &v17[8 * v14 - 16];
    v24 = (__int128 *)(v5 - 2);
    v25 = v21 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v26 = *v24;
      *(v23 - 1) = *(v24 - 1);
      *v23 = v26;
      v23 -= 2;
      v24 -= 2;
      v25 -= 4;
    }
    while (v25);
    if (v21 != (v21 & 0x3FFFFFFFFFFFFFFCLL))
      goto LABEL_38;
  }
LABEL_39:
  __p = v12;
  v64 = v18;
  if (v6)
    operator delete(v6);
LABEL_41:
  v63 = v13;
  v6 = v12;
  v5 = v13;
  v9 = (char *)v13 - (char *)v12;
  v61 = v13 - v12 - 1;
  if ((unint64_t)((char *)v13 - (char *)v12) <= 0xF)
  {
LABEL_42:
    v28 = v6;
    while (v5 < (_QWORD *)v64)
    {
      *v5 = "\n";
      v28 = __p;
      v29 = v5 + 1;
LABEL_44:
      v63 = v29;
      v9 = (char *)v29 - (char *)v28;
      v6 = v28;
      v5 = v29;
      if ((unint64_t)((char *)v29 - (char *)v28) >= 0x10)
        goto LABEL_70;
    }
    v30 = v9 >> 3;
    v31 = v64 - (char *)v28;
    if ((v64 - (char *)v28) >> 2 <= (v9 >> 3) + 1)
      v32 = v30 + 1;
    else
      v32 = v31 >> 2;
    if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8)
      v33 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v33 = v32;
    if (v33 >> 61)
      sub_20E877A38();
    v34 = operator new(8 * v33);
    v28 = &v34[8 * v30];
    *v28 = "\n";
    v29 = v28 + 1;
    if (v5 != v6)
    {
      v35 = (char *)v5 - (char *)v6 - 8;
      if (v35 < 0x168)
      {
        v36 = v5;
        goto LABEL_67;
      }
      v37 = ((char *)(v5 - 1) - (char *)v6) & 0xFFFFFFFFFFFFFFF8;
      v38 = (unint64_t)&v34[(v9 & 8) - 8];
      v39 = v38 - v37;
      v40 = (unint64_t)v5 - v37 - 8;
      v41 = v39 > v38 || v40 > (unint64_t)(v5 - 1);
      if (v41)
      {
        v36 = v5;
        goto LABEL_67;
      }
      if ((unint64_t)((char *)v5 - (v9 & 8) - v34) < 0x20)
      {
        v36 = v5;
        do
        {
LABEL_67:
          v48 = *--v36;
          *--v28 = v48;
        }
        while (v36 != v6);
        goto LABEL_68;
      }
      v42 = (v35 >> 3) + 1;
      v43 = 8 * (v42 & 0x3FFFFFFFFFFFFFFCLL);
      v36 = &v5[v43 / 0xFFFFFFFFFFFFFFF8];
      v28 = (_QWORD *)((char *)v28 - v43);
      v44 = &v34[8 * v30 - 16];
      v45 = (__int128 *)(v5 - 2);
      v46 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v47 = *v45;
        *(v44 - 1) = *(v45 - 1);
        *v44 = v47;
        v44 -= 2;
        v45 -= 2;
        v46 -= 4;
      }
      while (v46);
      if (v42 != (v42 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_67;
    }
LABEL_68:
    __p = v28;
    v64 = &v34[8 * v33];
    if (v6)
      operator delete(v6);
    goto LABEL_44;
  }
LABEL_70:
  v59[0] = &v60;
  v59[1] = &v65;
  v59[2] = &__p;
  v59[3] = &v61;
  v59[4] = a1;
  v60 = 0;
  LOBYTE(v57[0]) = 0;
  v66 = -1;
  v67 = v57;
  v68 = &v66;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
  {
    sub_20FF5341C((uint64_t)&v67, a3);
    v49 = v66;
    v50 = a2;
    if (!v66)
    {
      LOBYTE(v51) = 0;
      goto LABEL_77;
    }
  }
  else
  {
    v49 = 255;
    v50 = a2;
  }
  LOBYTE(v51) = 0;
  do
  {
    LOBYTE(v51) = v51 + 1;
    v41 = v49 > 9;
    v49 /= 0xAu;
  }
  while (v41);
LABEL_77:
  v52 = LOBYTE(v57[0]);
  if (LOBYTE(v57[0]))
  {
    v53 = 0;
    do
    {
      ++v53;
      v41 = v52 > 9;
      v52 /= 0xAu;
    }
    while (v41);
  }
  else
  {
    v53 = 0;
  }
  LODWORD(v51) = v51;
  if (v53 > v51)
    LODWORD(v51) = v53;
  if (v51 <= 1)
    v51 = 1;
  else
    v51 = v51;
  v58[0] = v51;
  v58[1] = 0;
  v57[0] = v50;
  v57[1] = v58;
  v67 = 0;
  sub_20FF5362C(a1, v50, (unsigned int *)&v67, 1u, v61);
  v67 = v57;
  v68 = (unsigned __int8 *)v59;
  v69 = v50;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
    sub_20FF53908((uint64_t)&v67, a3);
  if (__p)
  {
    v63 = __p;
    operator delete(__p);
  }
}

void sub_20FF533DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  void *v25;

  if (v25)
    operator delete(v25);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF5341C(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  unsigned __int8 **v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  BOOL v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  int v17;
  int i;
  int v19;
  _BYTE *v20;
  unsigned int v21;
  unsigned __int8 *v22;
  unsigned int v23;
  unsigned int v24;
  unsigned __int8 *v25;
  unsigned int v26;
  unsigned int v27;
  unsigned __int8 *v28;
  unsigned int v29;
  unsigned int v30;
  unsigned __int8 *v31;
  unsigned int v32;
  unsigned int v33;
  unsigned __int8 *v34;
  unsigned int v35;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v6 = (unsigned __int8 **)result;
    v7 = v2 - 1;
    v8 = *(unsigned int *)(a2 + 40);
    v9 = *(unsigned int *)(a2 + 44);
    v10 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48))
      v11 = v10 == 0;
    else
      v11 = 1;
    if (!v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      result = (*(uint64_t (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v10 = *(_BYTE **)(a2 + 24);
    }
    v17 = v3 - 1;
    if (v7)
    {
      if (v3 == 1)
      {
        do
        {
          v27 = **v6;
          if (v27 <= *v10)
            LOBYTE(v27) = *v10;
          **v6 = v27;
          v28 = v6[1];
          v29 = *v10;
          if (v29 >= *v28)
            LOBYTE(v29) = *v28;
          *v28 = v29;
          v10 += v9;
          --v7;
        }
        while (v7);
      }
      else
      {
        for (i = 0; i != v7; ++i)
        {
          v19 = v3 - 1;
          v20 = v10;
          do
          {
            v21 = **v6;
            if (v21 <= *v20)
              LOBYTE(v21) = *v20;
            **v6 = v21;
            v22 = v6[1];
            v23 = *v20;
            if (v23 >= *v22)
              LOBYTE(v23) = *v22;
            *v22 = v23;
            v20 += v8;
            --v19;
          }
          while (v19);
          v24 = **v6;
          if (v24 <= *v20)
            LOBYTE(v24) = *v20;
          **v6 = v24;
          v25 = v6[1];
          v26 = *v20;
          if (v26 >= *v25)
            LOBYTE(v26) = *v25;
          *v25 = v26;
          v10 += v9;
        }
      }
    }
    if (v3 != 1)
    {
      do
      {
        v30 = **v6;
        if (v30 <= *v10)
          LOBYTE(v30) = *v10;
        **v6 = v30;
        v31 = v6[1];
        v32 = *v10;
        if (v32 >= *v31)
          LOBYTE(v32) = *v31;
        *v31 = v32;
        v10 += v8;
        --v17;
      }
      while (v17);
    }
    v33 = **v6;
    if (v33 <= *v10)
      LOBYTE(v33) = *v10;
    **v6 = v33;
    v34 = v6[1];
    v35 = *v10;
    if (v35 >= *v34)
      LOBYTE(v35) = *v34;
    *v34 = v35;
  }
  return result;
}

_QWORD *sub_20FF5362C(uint64_t a1, _QWORD *a2, unsigned int *a3, unsigned int a4, unsigned int a5)
{
  unsigned int v6;
  uint64_t v9;
  _QWORD *result;
  std::string *v11;
  std::string::size_type size;
  std::string *v13;
  std::string::size_type v14;
  uint64_t v15;
  std::string v16;

  if (a4 > a5)
  {
    v6 = a4;
    v9 = a4;
    do
    {
      v15 = *(_QWORD *)a3;
      ++*(_DWORD *)((char *)&v15 + v9 * 4);
      sub_20E86A980(a2, (uint64_t)"[", 1);
      std::to_string(&v16, v6);
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v11 = &v16;
      else
        v11 = (std::string *)v16.__r_.__value_.__r.__words[0];
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v16.__r_.__value_.__r.__words[2]);
      else
        size = v16.__r_.__value_.__l.__size_;
      sub_20E86A980(a2, (uint64_t)v11, size);
      if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v16.__r_.__value_.__l.__data_);
      sub_20E86A980(a2, (uint64_t)"d-slice #", 9);
      std::to_string(&v16, a3[v9]);
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = &v16;
      else
        v13 = (std::string *)v16.__r_.__value_.__r.__words[0];
      if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v14 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
      else
        v14 = v16.__r_.__value_.__l.__size_;
      sub_20E86A980(a2, (uint64_t)v13, v14);
      if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v16.__r_.__value_.__l.__data_);
      sub_20E86A980(a2, (uint64_t)": ", 2);
      sub_20FF537DC(a2, a3);
      sub_20E86A980(a2, (uint64_t)" to ", 4);
      sub_20FF537DC(a2, (unsigned int *)&v15);
      result = sub_20E86A980(a2, (uint64_t)"]\n", 2);
      --v6;
      --v9;
    }
    while (v6 > a5);
  }
  return result;
}

void sub_20FF537BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20FF537DC(_QWORD *a1, unsigned int *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  unsigned int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20FE0DCF8((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20E877AB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))*(&off_24CA0E5E8 + v10))(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24CA0E588[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20E86A980(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20FF538C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF538E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF538F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF53908(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v7;
  unsigned __int8 *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  _DWORD v14[5];
  char v15;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v14[0] = 0;
    v14[1] = v3 - 1;
    v7 = *(_DWORD *)(a2 + 44);
    v14[2] = *(_DWORD *)(a2 + 40);
    v14[3] = v2 - 1;
    v14[4] = v7;
    v8 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v8)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(std::__shared_weak_count **)(a2 + 16);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v9 + 88))(v9, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v8 = *(unsigned __int8 **)(a2 + 24);
    }
    v15 = 0;
    sub_20FF539EC(v14, (uint64_t)&v15, a1, v8);
  }
}

void sub_20FF539EC(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  int v7;
  int v8;
  uint64_t v9;
  size_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  _DWORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned __int8 *v25;
  void *__p[2];
  unsigned __int8 v27;
  _BYTE v28[24];
  unsigned int v29;
  std::string v30;
  _QWORD v31[5];
  _QWORD *v32;

  if (a1[3])
  {
    v7 = 0;
    while (1)
    {
      v24 = v7;
      v25 = a4;
      if (a1[1])
        break;
LABEL_3:
      sub_20FF53D00(a3, a4);
      a4 = &v25[a1[4]];
      v7 = v24 + 1;
      if ((v24 + 1) >= a1[3])
        goto LABEL_26;
    }
    v8 = 0;
    while (1)
    {
      v11 = **(uint64_t ***)a3;
      v12 = **(unsigned __int8 **)(*(_QWORD *)a3 + 8);
      v29 = 0;
      std::to_string(&v30, *a4);
      v31[0] = v28;
      v31[1] = &v30;
      v31[2] = v28;
      v31[3] = &v30;
      v31[4] = &v30;
      if (v29 == -1)
        sub_20E877AB8();
      v32 = v31;
      ((void (*)(_QWORD **, _BYTE *))off_24CA0E5A0[v29])(&v32, v28);
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v30.__r_.__value_.__l.__data_);
      if (v29 == -1)
        sub_20E877AB8();
      v31[0] = &v30;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))*(&off_24CA0E5E8 + v29))(__p, v31, v28);
      if (v29 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24CA0E588[v29])(v31, v28);
      v13 = *v11;
      *(uint64_t *)((char *)v11 + *(_QWORD *)(*v11 - 24) + 24) = v12;
      *(_DWORD *)((char *)v11 + *(_QWORD *)(v13 - 24) + 8) = *(_DWORD *)((_BYTE *)v11 + *(_QWORD *)(v13 - 24) + 8) & 0xFFFFFF4F | 0x80;
      if ((v27 & 0x80u) == 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      if ((v27 & 0x80u) == 0)
        v15 = v27;
      else
        v15 = (uint64_t)__p[1];
      sub_20E86A980(v11, (uint64_t)v14, v15);
      if ((char)v27 < 0)
        operator delete(__p[0]);
      v17 = *(_QWORD *)(a3 + 8);
      v16 = *(_QWORD **)(a3 + 16);
      v18 = *(_QWORD *)(v17 + 32);
      v19 = *(unsigned int **)v17;
      v20 = *(_DWORD **)(v17 + 8);
      v21 = **(_DWORD **)v17 + 1;
      **(_DWORD **)v17 = v21;
      if (v21 == *v20)
      {
        v22 = v19[1] + 1;
        *v19 = 0;
        v19[1] = v22;
        if (v22 == v20[1])
          goto LABEL_8;
        v9 = 1;
      }
      else
      {
        v9 = 0;
      }
      v10 = strlen(*(const char **)(**(_QWORD **)(v17 + 16) + 8 * v9));
      sub_20E86A980(v16, *(_QWORD *)(**(_QWORD **)(v17 + 16) + 8 * v9), v10);
      sub_20FF5362C(v18, v16, *(unsigned int **)v17, v9, **(_DWORD **)(v17 + 24));
LABEL_8:
      a4 += a1[2];
      if (++v8 >= a1[1])
        goto LABEL_3;
    }
  }
LABEL_26:
  if (a1[1])
  {
    v23 = 0;
    do
    {
      sub_20FF53D00(a3, a4);
      a4 += a1[2];
      ++v23;
    }
    while (v23 < a1[1]);
  }
  sub_20FF53D00(a3, a4);
}

void sub_20FF53C8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF53D00(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  _DWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  size_t v16;
  void *__p[2];
  unsigned __int8 v18;

  v3 = **(uint64_t ***)a1;
  v4 = **(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  sub_20E9E7014(a2);
  v5 = *v3;
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 24) = v4;
  *(_DWORD *)((char *)v3 + *(_QWORD *)(v5 - 24) + 8) = *(_DWORD *)((_BYTE *)v3 + *(_QWORD *)(v5 - 24) + 8) & 0xFFFFFF4F | 0x80;
  if ((v18 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v18 & 0x80u) == 0)
    v7 = v18;
  else
    v7 = (uint64_t)__p[1];
  sub_20E86A980(v3, (uint64_t)v6, v7);
  if ((char)v18 < 0)
    operator delete(__p[0]);
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD **)(a1 + 16);
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(unsigned int **)v9;
  v12 = *(_DWORD **)(v9 + 8);
  v13 = **(_DWORD **)v9 + 1;
  **(_DWORD **)v9 = v13;
  if (v13 == *v12)
  {
    v14 = v11[1] + 1;
    *v11 = 0;
    v11[1] = v14;
    if (v14 == v12[1])
      return;
    v15 = 1;
  }
  else
  {
    v15 = 0;
  }
  v16 = strlen(*(const char **)(**(_QWORD **)(v9 + 16) + 8 * v15));
  sub_20E86A980(v8, *(_QWORD *)(**(_QWORD **)(v9 + 16) + 8 * v15), v16);
  sub_20FF5362C(v10, v8, *(unsigned int **)v9, v15, **(_DWORD **)(v9 + 24));
}

void sub_20FF53E30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF53E4C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE *v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  __int128 *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  unsigned int v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int v52;
  unsigned __int8 v53;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[5];
  uint64_t v60;
  uint64_t v61;
  void *__p;
  void *v63;
  char *v64;
  uint64_t v65;
  unsigned __int16 v66;
  _QWORD *v67;
  unsigned __int16 *v68;
  _QWORD *v69;

  if (!*(_DWORD *)(a3 + 32) || !*(_DWORD *)(a3 + 36))
    return;
  v65 = *(_QWORD *)(a3 + 32);
  __p = 0;
  v63 = 0;
  v64 = 0;
  if (!*(_BYTE *)(a4 + 24))
  {
    v8 = operator new(0x10uLL);
    *v8 = " ";
    v8[1] = "\n";
    __p = v8;
    v63 = v8 + 2;
    v64 = (char *)(v8 + 2);
    v61 = 1;
    goto LABEL_70;
  }
  v5 = *(_QWORD **)(a4 + 8);
  v4 = *(char **)(a4 + 16);
  __p = *(void **)a4;
  v6 = __p;
  v63 = v5;
  v64 = v4;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  if (v6 == v5)
  {
    if (v5 >= (_QWORD *)v4)
    {
      v10 = (v4 - (char *)v5) >> 2;
      if (v10 <= 1)
        v10 = 1;
      if ((unint64_t)(v4 - (char *)v5) >= 0x7FFFFFFFFFFFFFF8)
        v11 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v11 = v10;
      if (v11 >> 61)
        sub_20E877A38();
      v6 = operator new(8 * v11);
      *v6 = " ";
      v4 = (char *)&v6[v11];
      __p = v6;
      v64 = v4;
      if (v5)
        operator delete(v5);
      v63 = v6 + 1;
      v5 = v6 + 1;
      v7 = 8;
    }
    else
    {
      *v5 = " ";
      v6 = v5++;
      v63 = v5;
      v7 = (char *)v5 - (char *)v6;
      if ((char *)v5 - (char *)v6 != 8)
        goto LABEL_10;
    }
  }
  else
  {
    v7 = (char *)v5 - (char *)v6;
    if ((char *)v5 - (char *)v6 != 8)
    {
LABEL_10:
      v9 = (char *)v5 - (char *)v6;
      v61 = v5 - v6 - 1;
      if ((unint64_t)((char *)v5 - (char *)v6) <= 0xF)
        goto LABEL_42;
      goto LABEL_70;
    }
  }
  if (v5 < (_QWORD *)v4)
  {
    *v5 = "\n";
    v12 = __p;
    v13 = v5 + 1;
    goto LABEL_41;
  }
  v14 = v7 >> 3;
  if ((v4 - (char *)v6) >> 2 <= (unint64_t)((v7 >> 3) + 1))
    v15 = v14 + 1;
  else
    v15 = (v4 - (char *)v6) >> 2;
  if ((unint64_t)(v4 - (char *)v6) >= 0x7FFFFFFFFFFFFFF8)
    v16 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v16 = v15;
  if (v16 >> 61)
    sub_20E877A38();
  v17 = operator new(8 * v16);
  v12 = &v17[8 * v14];
  v18 = &v17[8 * v16];
  *v12 = "\n";
  v13 = v12 + 1;
  if (v5 != v6)
  {
    v19 = (char *)v5 - (char *)v6 - 8;
    if (v19 < 0x58)
    {
      v20 = v5;
      goto LABEL_38;
    }
    if ((unint64_t)((char *)v5 - (v7 & 0xFFFFFFFFFFFFFFF8) - v17) < 0x20)
    {
      v20 = v5;
      do
      {
LABEL_38:
        v27 = *--v20;
        *--v12 = v27;
      }
      while (v20 != v6);
      goto LABEL_39;
    }
    v21 = (v19 >> 3) + 1;
    v22 = 8 * (v21 & 0x3FFFFFFFFFFFFFFCLL);
    v20 = &v5[v22 / 0xFFFFFFFFFFFFFFF8];
    v12 = (_QWORD *)((char *)v12 - v22);
    v23 = &v17[8 * v14 - 16];
    v24 = (__int128 *)(v5 - 2);
    v25 = v21 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v26 = *v24;
      *(v23 - 1) = *(v24 - 1);
      *v23 = v26;
      v23 -= 2;
      v24 -= 2;
      v25 -= 4;
    }
    while (v25);
    if (v21 != (v21 & 0x3FFFFFFFFFFFFFFCLL))
      goto LABEL_38;
  }
LABEL_39:
  __p = v12;
  v64 = v18;
  if (v6)
    operator delete(v6);
LABEL_41:
  v63 = v13;
  v6 = v12;
  v5 = v13;
  v9 = (char *)v13 - (char *)v12;
  v61 = v13 - v12 - 1;
  if ((unint64_t)((char *)v13 - (char *)v12) <= 0xF)
  {
LABEL_42:
    v28 = v6;
    while (v5 < (_QWORD *)v64)
    {
      *v5 = "\n";
      v28 = __p;
      v29 = v5 + 1;
LABEL_44:
      v63 = v29;
      v9 = (char *)v29 - (char *)v28;
      v6 = v28;
      v5 = v29;
      if ((unint64_t)((char *)v29 - (char *)v28) >= 0x10)
        goto LABEL_70;
    }
    v30 = v9 >> 3;
    v31 = v64 - (char *)v28;
    if ((v64 - (char *)v28) >> 2 <= (v9 >> 3) + 1)
      v32 = v30 + 1;
    else
      v32 = v31 >> 2;
    if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8)
      v33 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v33 = v32;
    if (v33 >> 61)
      sub_20E877A38();
    v34 = operator new(8 * v33);
    v28 = &v34[8 * v30];
    *v28 = "\n";
    v29 = v28 + 1;
    if (v5 != v6)
    {
      v35 = (char *)v5 - (char *)v6 - 8;
      if (v35 < 0x168)
      {
        v36 = v5;
        goto LABEL_67;
      }
      v37 = ((char *)(v5 - 1) - (char *)v6) & 0xFFFFFFFFFFFFFFF8;
      v38 = (unint64_t)&v34[(v9 & 8) - 8];
      v39 = v38 - v37;
      v40 = (unint64_t)v5 - v37 - 8;
      v41 = v39 > v38 || v40 > (unint64_t)(v5 - 1);
      if (v41)
      {
        v36 = v5;
        goto LABEL_67;
      }
      if ((unint64_t)((char *)v5 - (v9 & 8) - v34) < 0x20)
      {
        v36 = v5;
        do
        {
LABEL_67:
          v48 = *--v36;
          *--v28 = v48;
        }
        while (v36 != v6);
        goto LABEL_68;
      }
      v42 = (v35 >> 3) + 1;
      v43 = 8 * (v42 & 0x3FFFFFFFFFFFFFFCLL);
      v36 = &v5[v43 / 0xFFFFFFFFFFFFFFF8];
      v28 = (_QWORD *)((char *)v28 - v43);
      v44 = &v34[8 * v30 - 16];
      v45 = (__int128 *)(v5 - 2);
      v46 = v42 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v47 = *v45;
        *(v44 - 1) = *(v45 - 1);
        *v44 = v47;
        v44 -= 2;
        v45 -= 2;
        v46 -= 4;
      }
      while (v46);
      if (v42 != (v42 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_67;
    }
LABEL_68:
    __p = v28;
    v64 = &v34[8 * v33];
    if (v6)
      operator delete(v6);
    goto LABEL_44;
  }
LABEL_70:
  v59[0] = &v60;
  v59[1] = &v65;
  v59[2] = &__p;
  v59[3] = &v61;
  v59[4] = a1;
  v60 = 0;
  LOWORD(v57[0]) = 0;
  v66 = -1;
  v67 = v57;
  v68 = &v66;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
  {
    sub_20FF54434(&v67, a3);
    v49 = v66;
    v50 = a2;
    if (!v66)
    {
      LOBYTE(v51) = 0;
      goto LABEL_77;
    }
  }
  else
  {
    v49 = 0xFFFF;
    v50 = a2;
  }
  LOBYTE(v51) = 0;
  do
  {
    LOBYTE(v51) = v51 + 1;
    v41 = v49 > 9;
    v49 /= 0xAu;
  }
  while (v41);
LABEL_77:
  v52 = LOWORD(v57[0]);
  if (LOWORD(v57[0]))
  {
    v53 = 0;
    do
    {
      ++v53;
      v41 = v52 > 9;
      v52 /= 0xAu;
    }
    while (v41);
  }
  else
  {
    v53 = 0;
  }
  LODWORD(v51) = v51;
  if (v53 > v51)
    LODWORD(v51) = v53;
  if (v51 <= 1)
    v51 = 1;
  else
    v51 = v51;
  v58[0] = v51;
  v58[1] = 0;
  v57[0] = v50;
  v57[1] = v58;
  v67 = 0;
  sub_20FF5362C(a1, v50, (unsigned int *)&v67, 1u, v61);
  v67 = v57;
  v68 = (unsigned __int16 *)v59;
  v69 = v50;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36))
    sub_20FF54668((uint64_t)&v67, a3);
  if (__p)
  {
    v63 = __p;
    operator delete(__p);
  }
}

void sub_20FF543F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  void *v25;

  if (v25)
    operator delete(v25);
  _Unwind_Resume(exception_object);
}

_DWORD *sub_20FF54434(_DWORD *result, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  uint64_t v6;
  int v7;
  _WORD *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  _DWORD v14[5];
  char v15;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v6 = (uint64_t)result;
    v14[0] = 0;
    v14[1] = v3 - 1;
    v7 = *(_DWORD *)(a2 + 44);
    v14[2] = *(_DWORD *)(a2 + 40);
    v14[3] = v2 - 1;
    v14[4] = v7;
    v8 = *(_WORD **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v8)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(std::__shared_weak_count **)(a2 + 16);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v9 + 88))(v9, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v8 = *(_WORD **)(a2 + 24);
    }
    v15 = 0;
    return sub_20FF54518(v14, (uint64_t)&v15, v6, v8);
  }
  return result;
}

_DWORD *sub_20FF54518(_DWORD *result, uint64_t a2, uint64_t a3, _WORD *a4)
{
  int v4;
  int v5;
  _WORD *v6;
  _WORD *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _WORD *v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;

  v4 = result[3];
  v5 = result[1];
  if (!v4)
  {
    v7 = *(_WORD **)a3;
    v6 = *(_WORD **)(a3 + 8);
    if (!v5)
      goto LABEL_29;
    goto LABEL_17;
  }
  v7 = *(_WORD **)a3;
  v6 = *(_WORD **)(a3 + 8);
  v8 = result[4];
  if (v5)
  {
    v9 = 0;
    v10 = 2 * v8;
    v11 = 2 * result[2];
    do
    {
      v12 = a4;
      v13 = v5;
      do
      {
        v14 = (unsigned __int16)*v7;
        if (v14 <= (unsigned __int16)*v12)
          LOWORD(v14) = *v12;
        *v7 = v14;
        v15 = (unsigned __int16)*v12;
        if (v15 >= (unsigned __int16)*v6)
          LOWORD(v15) = *v6;
        *v6 = v15;
        v12 = (_WORD *)((char *)v12 + v11);
        --v13;
      }
      while (v13);
      v16 = (unsigned __int16)*v7;
      if (v16 <= (unsigned __int16)*v12)
        LOWORD(v16) = *v12;
      *v7 = v16;
      v17 = (unsigned __int16)*v12;
      if (v17 >= (unsigned __int16)*v6)
        LOWORD(v17) = *v6;
      *v6 = v17;
      a4 = (_WORD *)((char *)a4 + v10);
      ++v9;
    }
    while (v9 != v4);
LABEL_17:
    v18 = 2 * result[2];
    do
    {
      v19 = (unsigned __int16)*v7;
      if (v19 <= (unsigned __int16)*a4)
        LOWORD(v19) = *a4;
      *v7 = v19;
      v20 = (unsigned __int16)*a4;
      if (v20 >= (unsigned __int16)*v6)
        LOWORD(v20) = *v6;
      *v6 = v20;
      a4 = (_WORD *)((char *)a4 + v18);
      --v5;
    }
    while (v5);
    goto LABEL_29;
  }
  do
  {
    v21 = (unsigned __int16)*v7;
    if (v21 <= (unsigned __int16)*a4)
      LOWORD(v21) = *a4;
    *v7 = v21;
    v22 = (unsigned __int16)*a4;
    if (v22 >= (unsigned __int16)*v6)
      LOWORD(v22) = *v6;
    *v6 = v22;
    a4 += v8;
    --v4;
  }
  while (v4);
LABEL_29:
  v23 = (unsigned __int16)*v7;
  if (v23 <= (unsigned __int16)*a4)
    LOWORD(v23) = *a4;
  *v7 = v23;
  v24 = (unsigned __int16)*a4;
  if (v24 >= (unsigned __int16)*v6)
    LOWORD(v24) = *v6;
  *v6 = v24;
  return result;
}

void sub_20FF54668(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v7;
  unsigned __int16 *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  unint64_t v13;
  _DWORD v14[5];
  char v15;

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v14[0] = 0;
    v14[1] = v3 - 1;
    v7 = *(_DWORD *)(a2 + 44);
    v14[2] = *(_DWORD *)(a2 + 40);
    v14[3] = v2 - 1;
    v14[4] = v7;
    v8 = *(unsigned __int16 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 48) && v8)
    {
      v9 = *(_QWORD *)(a2 + 8);
      v10 = *(std::__shared_weak_count **)(a2 + 16);
      if (v10)
      {
        p_shared_owners = (unint64_t *)&v10->__shared_owners_;
        do
          v12 = __ldxr(p_shared_owners);
        while (__stxr(v12 + 1, p_shared_owners));
        do
          v13 = __ldaxr(p_shared_owners);
        while (__stlxr(v13 - 1, p_shared_owners));
        if (!v13)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v9 + 88))(v9, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v8 = *(unsigned __int16 **)(a2 + 24);
    }
    v15 = 0;
    sub_20FF5474C(v14, (uint64_t)&v15, a1, v8);
  }
}

void sub_20FF5474C(_DWORD *a1, uint64_t a2, uint64_t a3, unsigned __int16 *a4)
{
  int v7;
  int v8;
  uint64_t v9;
  size_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int *v19;
  _DWORD *v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  unsigned __int16 *v25;
  void *__p[2];
  unsigned __int8 v27;
  _BYTE v28[24];
  unsigned int v29;
  std::string v30;
  _QWORD v31[5];
  _QWORD *v32;

  if (a1[3])
  {
    v7 = 0;
    while (1)
    {
      v24 = v7;
      v25 = a4;
      if (a1[1])
        break;
LABEL_3:
      sub_20FF54A60(a3, a4);
      a4 = &v25[a1[4]];
      v7 = v24 + 1;
      if ((v24 + 1) >= a1[3])
        goto LABEL_26;
    }
    v8 = 0;
    while (1)
    {
      v11 = **(uint64_t ***)a3;
      v12 = **(unsigned __int8 **)(*(_QWORD *)a3 + 8);
      v29 = 0;
      std::to_string(&v30, *a4);
      v31[0] = v28;
      v31[1] = &v30;
      v31[2] = v28;
      v31[3] = &v30;
      v31[4] = &v30;
      if (v29 == -1)
        sub_20E877AB8();
      v32 = v31;
      ((void (*)(_QWORD **, _BYTE *))off_24CA0E5A0[v29])(&v32, v28);
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v30.__r_.__value_.__l.__data_);
      if (v29 == -1)
        sub_20E877AB8();
      v31[0] = &v30;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))*(&off_24CA0E5E8 + v29))(__p, v31, v28);
      if (v29 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24CA0E588[v29])(v31, v28);
      v13 = *v11;
      *(uint64_t *)((char *)v11 + *(_QWORD *)(*v11 - 24) + 24) = v12;
      *(_DWORD *)((char *)v11 + *(_QWORD *)(v13 - 24) + 8) = *(_DWORD *)((_BYTE *)v11 + *(_QWORD *)(v13 - 24) + 8) & 0xFFFFFF4F | 0x80;
      if ((v27 & 0x80u) == 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      if ((v27 & 0x80u) == 0)
        v15 = v27;
      else
        v15 = (uint64_t)__p[1];
      sub_20E86A980(v11, (uint64_t)v14, v15);
      if ((char)v27 < 0)
        operator delete(__p[0]);
      v17 = *(_QWORD *)(a3 + 8);
      v16 = *(_QWORD **)(a3 + 16);
      v18 = *(_QWORD *)(v17 + 32);
      v19 = *(unsigned int **)v17;
      v20 = *(_DWORD **)(v17 + 8);
      v21 = **(_DWORD **)v17 + 1;
      **(_DWORD **)v17 = v21;
      if (v21 == *v20)
      {
        v22 = v19[1] + 1;
        *v19 = 0;
        v19[1] = v22;
        if (v22 == v20[1])
          goto LABEL_8;
        v9 = 1;
      }
      else
      {
        v9 = 0;
      }
      v10 = strlen(*(const char **)(**(_QWORD **)(v17 + 16) + 8 * v9));
      sub_20E86A980(v16, *(_QWORD *)(**(_QWORD **)(v17 + 16) + 8 * v9), v10);
      sub_20FF5362C(v18, v16, *(unsigned int **)v17, v9, **(_DWORD **)(v17 + 24));
LABEL_8:
      a4 += a1[2];
      if (++v8 >= a1[1])
        goto LABEL_3;
    }
  }
LABEL_26:
  if (a1[1])
  {
    v23 = 0;
    do
    {
      sub_20FF54A60(a3, a4);
      a4 += a1[2];
      ++v23;
    }
    while (v23 < a1[1]);
  }
  sub_20FF54A60(a3, a4);
}

void sub_20FF549EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF54A60(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  _DWORD *v12;
  int v13;
  int v14;
  uint64_t v15;
  size_t v16;
  void *__p[2];
  unsigned __int8 v18;

  v3 = **(uint64_t ***)a1;
  v4 = **(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  sub_20E9F6944(a2);
  v5 = *v3;
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 24) = v4;
  *(_DWORD *)((char *)v3 + *(_QWORD *)(v5 - 24) + 8) = *(_DWORD *)((_BYTE *)v3 + *(_QWORD *)(v5 - 24) + 8) & 0xFFFFFF4F | 0x80;
  if ((v18 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v18 & 0x80u) == 0)
    v7 = v18;
  else
    v7 = (uint64_t)__p[1];
  sub_20E86A980(v3, (uint64_t)v6, v7);
  if ((char)v18 < 0)
    operator delete(__p[0]);
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD **)(a1 + 16);
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(unsigned int **)v9;
  v12 = *(_DWORD **)(v9 + 8);
  v13 = **(_DWORD **)v9 + 1;
  **(_DWORD **)v9 = v13;
  if (v13 == *v12)
  {
    v14 = v11[1] + 1;
    *v11 = 0;
    v11[1] = v14;
    if (v14 == v12[1])
      return;
    v15 = 1;
  }
  else
  {
    v15 = 0;
  }
  v16 = strlen(*(const char **)(**(_QWORD **)(v9 + 16) + 8 * v15));
  sub_20E86A980(v8, *(_QWORD *)(**(_QWORD **)(v9 + 16) + 8 * v15), v16);
  sub_20FF5362C(v10, v8, *(unsigned int **)v9, v15, **(_DWORD **)(v9 + 24));
}

void sub_20FF54B90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF54BAC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _BYTE *v37;
  unint64_t v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 *v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  unsigned __int8 v57;
  _QWORD v60[2];
  _QWORD v61[2];
  _QWORD v62[5];
  uint64_t v63;
  int v64;
  uint64_t v65;
  void *__p;
  void *v67;
  char *v68;
  uint64_t v69;
  int v70;
  unsigned __int8 v71;
  uint64_t *v72;
  unsigned __int8 *v73;
  _QWORD *v74;
  uint64_t v75[2];

  if (!*(_DWORD *)(a3 + 56) || !*(_DWORD *)(a3 + 60))
    return;
  v5 = *(_QWORD *)(a3 + 32);
  v68 = 0;
  v69 = v5;
  v70 = *(_DWORD *)(a3 + 40);
  __p = 0;
  v67 = 0;
  if (!*(_BYTE *)(a4 + 24))
  {
    v10 = *(_DWORD *)(a1 + 8);
    if (v69 > v10
      || (v11 = *(_DWORD *)(a1 + 12), v69 > v11)
      || HIDWORD(v69) > v10
      || HIDWORD(v69) * (int)v69 > v11)
    {
      v8 = (char *)operator new(0x10uLL);
      v7 = v8 + 16;
      *(_QWORD *)v8 = " ";
      *((_QWORD *)v8 + 1) = "\n";
    }
    else
    {
      v8 = (char *)operator new(0x18uLL);
      v7 = v8 + 24;
      *(_OWORD *)v8 = xmmword_24CA1E060;
      *((_QWORD *)v8 + 2) = "\n";
    }
    __p = v8;
    v67 = v7;
    v68 = v7;
    v12 = v7 - v8;
    v65 = ((v7 - v8) >> 3) - 1;
    if ((unint64_t)(v7 - v8) <= 0x17)
      goto LABEL_49;
    goto LABEL_77;
  }
  v7 = *(char **)(a4 + 8);
  v6 = *(char **)(a4 + 16);
  __p = *(void **)a4;
  v8 = (char *)__p;
  v67 = v7;
  v68 = v6;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  if (v8 == v7)
  {
    if (v7 >= v6)
    {
      v13 = (v6 - v7) >> 2;
      if (v13 <= 1)
        v13 = 1;
      if ((unint64_t)(v6 - v7) >= 0x7FFFFFFFFFFFFFF8)
        v14 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v14 = v13;
      if (v14 >> 61)
        sub_20E877A38();
      v8 = (char *)operator new(8 * v14);
      *(_QWORD *)v8 = " ";
      v6 = &v8[8 * v14];
      __p = v8;
      v68 = v6;
      if (v7)
        operator delete(v7);
      v67 = v8 + 8;
      v7 = v8 + 8;
      v9 = 8;
    }
    else
    {
      *(_QWORD *)v7 = " ";
      v8 = v7;
      v7 += 8;
      v67 = v7;
      v9 = v7 - v8;
      if (v7 - v8 != 8)
        goto LABEL_17;
    }
  }
  else
  {
    v9 = v7 - v8;
    if (v7 - v8 != 8)
    {
LABEL_17:
      v12 = v7 - v8;
      v65 = ((v7 - v8) >> 3) - 1;
      if ((unint64_t)(v7 - v8) <= 0x17)
        goto LABEL_49;
      goto LABEL_77;
    }
  }
  if (v7 < v6)
  {
    *(_QWORD *)v7 = "\n";
    v15 = __p;
    v16 = v7 + 8;
    goto LABEL_48;
  }
  v17 = v9 >> 3;
  if ((v6 - v8) >> 2 <= (unint64_t)((v9 >> 3) + 1))
    v18 = v17 + 1;
  else
    v18 = (v6 - v8) >> 2;
  if ((unint64_t)(v6 - v8) >= 0x7FFFFFFFFFFFFFF8)
    v19 = 0x1FFFFFFFFFFFFFFFLL;
  else
    v19 = v18;
  if (v19 >> 61)
    sub_20E877A38();
  v20 = operator new(8 * v19);
  v15 = &v20[8 * v17];
  v21 = &v20[8 * v19];
  *v15 = "\n";
  v16 = v15 + 1;
  if (v7 != v8)
  {
    v22 = v7 - v8 - 8;
    if (v22 < 0x58)
    {
      v23 = v7;
      goto LABEL_45;
    }
    if ((unint64_t)(&v7[-(v9 & 0xFFFFFFFFFFFFFFF8)] - v20) < 0x20)
    {
      v23 = v7;
      do
      {
LABEL_45:
        v30 = *((_QWORD *)v23 - 1);
        v23 -= 8;
        *--v15 = v30;
      }
      while (v23 != v8);
      goto LABEL_46;
    }
    v24 = (v22 >> 3) + 1;
    v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
    v23 = &v7[-v25];
    v15 = (_QWORD *)((char *)v15 - v25);
    v26 = &v20[8 * v17 - 16];
    v27 = (__int128 *)(v7 - 16);
    v28 = v24 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v29 = *v27;
      *(v26 - 1) = *(v27 - 1);
      *v26 = v29;
      v26 -= 2;
      v27 -= 2;
      v28 -= 4;
    }
    while (v28);
    if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
      goto LABEL_45;
  }
LABEL_46:
  __p = v15;
  v68 = v21;
  if (v8)
    operator delete(v8);
LABEL_48:
  v67 = v16;
  v8 = (char *)v15;
  v7 = (char *)v16;
  v12 = (char *)v16 - (char *)v15;
  v65 = v16 - v15 - 1;
  if ((unint64_t)((char *)v16 - (char *)v15) <= 0x17)
  {
LABEL_49:
    v31 = v8;
    while (v7 < v68)
    {
      *(_QWORD *)v7 = "\n";
      v31 = __p;
      v32 = v7 + 8;
LABEL_51:
      v67 = v32;
      v12 = (char *)v32 - (char *)v31;
      v8 = (char *)v31;
      v7 = (char *)v32;
      if ((unint64_t)((char *)v32 - (char *)v31) >= 0x18)
        goto LABEL_77;
    }
    v33 = v12 >> 3;
    v34 = v68 - (char *)v31;
    if ((v68 - (char *)v31) >> 2 <= (v12 >> 3) + 1)
      v35 = v33 + 1;
    else
      v35 = v34 >> 2;
    if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8)
      v36 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v36 = v35;
    if (v36 >> 61)
      sub_20E877A38();
    v37 = operator new(8 * v36);
    v31 = &v37[8 * v33];
    *v31 = "\n";
    v32 = v31 + 1;
    if (v7 != v8)
    {
      v38 = v7 - v8 - 8;
      if (v38 < 0x168)
      {
        v39 = v7;
        goto LABEL_74;
      }
      v40 = (v7 - 8 - v8) & 0xFFFFFFFFFFFFFFF8;
      v41 = v12 & 0xFFFFFFFFFFFFFFF8;
      v42 = (unint64_t)&v37[(v12 & 0xFFFFFFFFFFFFFFF8) - 8];
      v43 = v42 - v40;
      v44 = (unint64_t)&v7[-v40 - 8];
      v45 = v43 > v42 || v44 > (unint64_t)(v7 - 8);
      if (v45)
      {
        v39 = v7;
        goto LABEL_74;
      }
      if ((unint64_t)(&v7[-v41] - v37) < 0x20)
      {
        v39 = v7;
        do
        {
LABEL_74:
          v52 = *((_QWORD *)v39 - 1);
          v39 -= 8;
          *--v31 = v52;
        }
        while (v39 != v8);
        goto LABEL_75;
      }
      v46 = (v38 >> 3) + 1;
      v47 = 8 * (v46 & 0x3FFFFFFFFFFFFFFCLL);
      v39 = &v7[-v47];
      v31 = (_QWORD *)((char *)v31 - v47);
      v48 = &v37[v41 - 16];
      v49 = (__int128 *)(v7 - 16);
      v50 = v46 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        v51 = *v49;
        *(v48 - 1) = *(v49 - 1);
        *v48 = v51;
        v48 -= 2;
        v49 -= 2;
        v50 -= 4;
      }
      while (v50);
      if (v46 != (v46 & 0x3FFFFFFFFFFFFFFCLL))
        goto LABEL_74;
    }
LABEL_75:
    __p = v31;
    v68 = &v37[8 * v36];
    if (v8)
      operator delete(v8);
    goto LABEL_51;
  }
LABEL_77:
  v64 = 0;
  v62[0] = &v63;
  v62[1] = &v69;
  v62[2] = &__p;
  v62[3] = &v65;
  v62[4] = a1;
  v63 = 0;
  LOBYTE(v75[0]) = 0;
  v71 = -1;
  v72 = v75;
  v73 = &v71;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36) && *(_DWORD *)(a3 + 40))
  {
    v60[0] = &v72;
    sub_20FF5521C((uint64_t)v60, a3);
    v53 = a2;
    v54 = v71;
    if (!v71)
    {
      LOBYTE(v55) = 0;
      goto LABEL_85;
    }
  }
  else
  {
    v54 = 255;
    v53 = a2;
  }
  LOBYTE(v55) = 0;
  do
  {
    LOBYTE(v55) = v55 + 1;
    v45 = v54 > 9;
    v54 /= 0xAu;
  }
  while (v45);
LABEL_85:
  v56 = LOBYTE(v75[0]);
  if (LOBYTE(v75[0]))
  {
    v57 = 0;
    do
    {
      ++v57;
      v45 = v56 > 9;
      v56 /= 0xAu;
    }
    while (v45);
  }
  else
  {
    v57 = 0;
  }
  LODWORD(v55) = v55;
  if (v57 > v55)
    LODWORD(v55) = v57;
  if (v55 <= 1)
    v55 = 1;
  else
    v55 = v55;
  v61[0] = v55;
  v61[1] = 0;
  v60[0] = v53;
  v60[1] = v61;
  LODWORD(v73) = 0;
  v72 = 0;
  sub_20FF554C4(a1, v53, (unsigned int *)&v72, 2u, v65);
  v72 = v60;
  v73 = (unsigned __int8 *)v62;
  v74 = v53;
  if (*(_DWORD *)(a3 + 32) && *(_DWORD *)(a3 + 36) && *(_DWORD *)(a3 + 40))
  {
    v75[0] = (uint64_t)&v72;
    sub_20FF557A8(v75, a3);
  }
  if (__p)
  {
    v67 = __p;
    operator delete(__p);
  }
}

void sub_20FF551DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  void *v24;

  if (v24)
    operator delete(v24);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF5521C(uint64_t result, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  BOOL v5;
  _QWORD **v8;
  int v9;
  unsigned int v10;
  _BYTE *v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  unint64_t v16;
  unsigned int v17;
  _DWORD v18[5];
  unsigned int v19;
  unsigned int v20;
  uint64_t v21[2];

  v3 = *(_DWORD *)(a2 + 32);
  v2 = *(_DWORD *)(a2 + 36);
  v4 = *(_DWORD *)(a2 + 40);
  if (v3)
    v5 = v2 == 0;
  else
    v5 = 1;
  if (!v5 && v4 != 0)
  {
    v8 = (_QWORD **)result;
    v18[0] = 0;
    v18[1] = v3 - 1;
    v9 = *(_DWORD *)(a2 + 48);
    v18[2] = *(_DWORD *)(a2 + 44);
    v18[3] = v2 - 1;
    v10 = v4 - 1;
    v18[4] = v9;
    v19 = v10;
    v20 = *(_DWORD *)(a2 + 52);
    v11 = *(_BYTE **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72) && v11)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(std::__shared_weak_count **)(a2 + 16);
      if (v13)
      {
        p_shared_owners = (unint64_t *)&v13->__shared_owners_;
        do
          v15 = __ldxr(p_shared_owners);
        while (__stxr(v15 + 1, p_shared_owners));
        do
          v16 = __ldaxr(p_shared_owners);
        while (__stlxr(v16 - 1, p_shared_owners));
        if (!v16)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v12 + 88))(v12, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(_BYTE **)(a2 + 24);
      v10 = v19;
    }
    v21[0] = 0;
    v21[1] = 0;
    if (v10)
    {
      v17 = 0;
      do
      {
        sub_20FF5534C((uint64_t)v18, v21, v8, v11);
        v11 += v20;
        ++v17;
      }
      while (v17 < v19);
    }
    return sub_20FF5534C((uint64_t)v18, v21, v8, v11);
  }
  return result;
}

uint64_t sub_20FF5534C(uint64_t result, uint64_t *a2, _QWORD **a3, _BYTE *a4)
{
  unsigned int v4;
  _BYTE **v5;
  _BYTE *v6;
  unsigned int v7;
  _BYTE *v8;
  unsigned int v9;
  _BYTE **v10;
  uint64_t v11;
  _BYTE *v12;
  unsigned int v13;
  _BYTE *v14;
  unsigned int v15;
  _BYTE **v16;
  uint64_t v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE **v22;
  _BYTE *v23;
  unsigned int v24;
  _BYTE *v25;
  unsigned int v26;
  _BYTE **v27;
  uint64_t v28;
  _BYTE *v29;
  unsigned int v30;
  _BYTE *v31;
  unsigned int v32;
  _BYTE **v33;
  uint64_t v34;
  _BYTE *v35;
  unsigned int v36;
  _BYTE *v37;
  unsigned int v38;

  *a2 = (uint64_t)a4;
  if (*(_DWORD *)(result + 12))
  {
    v4 = 0;
    do
    {
      *a2 = (uint64_t)a4;
      v5 = (_BYTE **)*a3;
      v6 = (_BYTE *)**a3;
      v7 = *v6;
      if (v7 <= *a4)
        LOBYTE(v7) = *a4;
      *v6 = v7;
      v8 = v5[1];
      v9 = *a4;
      if (v9 >= *v8)
        LOBYTE(v9) = *v8;
      *v8 = v9;
      v10 = (_BYTE **)*a3;
      v11 = *a2;
      v12 = (_BYTE *)**a3;
      v13 = *v12;
      if (v13 <= *(unsigned __int8 *)(*a2 + 1))
        LOBYTE(v13) = *(_BYTE *)(*a2 + 1);
      *v12 = v13;
      v14 = v10[1];
      v15 = *(unsigned __int8 *)(v11 + 1);
      if (v15 >= *v14)
        LOBYTE(v15) = *v14;
      *v14 = v15;
      v16 = (_BYTE **)*a3;
      v17 = *a2;
      v18 = (_BYTE *)**a3;
      v19 = *v18;
      if (v19 <= *(unsigned __int8 *)(*a2 + 2))
        LOBYTE(v19) = *(_BYTE *)(*a2 + 2);
      *v18 = v19;
      v20 = v16[1];
      v21 = *(unsigned __int8 *)(v17 + 2);
      if (v21 >= *v20)
        LOBYTE(v21) = *v20;
      *v20 = v21;
      a4 += *(unsigned int *)(result + 16);
      ++v4;
    }
    while (v4 < *(_DWORD *)(result + 12));
  }
  *a2 = (uint64_t)a4;
  v22 = (_BYTE **)*a3;
  v23 = (_BYTE *)**a3;
  v24 = *v23;
  if (v24 <= *a4)
    LOBYTE(v24) = *a4;
  *v23 = v24;
  v25 = v22[1];
  v26 = *a4;
  if (v26 >= *v25)
    LOBYTE(v26) = *v25;
  *v25 = v26;
  v27 = (_BYTE **)*a3;
  v28 = *a2;
  v29 = (_BYTE *)**a3;
  v30 = *v29;
  if (v30 <= *(unsigned __int8 *)(*a2 + 1))
    LOBYTE(v30) = *(_BYTE *)(*a2 + 1);
  *v29 = v30;
  v31 = v27[1];
  v32 = *(unsigned __int8 *)(v28 + 1);
  if (v32 >= *v31)
    LOBYTE(v32) = *v31;
  *v31 = v32;
  v33 = (_BYTE **)*a3;
  v34 = *a2;
  v35 = (_BYTE *)**a3;
  v36 = *v35;
  if (v36 <= *(unsigned __int8 *)(*a2 + 2))
    LOBYTE(v36) = *(_BYTE *)(*a2 + 2);
  *v35 = v36;
  v37 = v33[1];
  v38 = *(unsigned __int8 *)(v34 + 2);
  if (v38 >= *v37)
    LOBYTE(v38) = *v37;
  *v37 = v38;
  return result;
}

_QWORD *sub_20FF554C4(uint64_t a1, _QWORD *a2, unsigned int *a3, unsigned int a4, unsigned int a5)
{
  unsigned int v6;
  uint64_t v9;
  _QWORD *result;
  std::string *v11;
  std::string::size_type size;
  std::string *v13;
  std::string::size_type v14;
  uint64_t v15;
  unsigned int v16;
  std::string v17;

  if (a4 > a5)
  {
    v6 = a4;
    v9 = a4;
    do
    {
      v15 = *(_QWORD *)a3;
      v16 = a3[2];
      ++*(_DWORD *)((char *)&v15 + v9 * 4);
      sub_20E86A980(a2, (uint64_t)"[", 1);
      std::to_string(&v17, v6);
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v11 = &v17;
      else
        v11 = (std::string *)v17.__r_.__value_.__r.__words[0];
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = HIBYTE(v17.__r_.__value_.__r.__words[2]);
      else
        size = v17.__r_.__value_.__l.__size_;
      sub_20E86A980(a2, (uint64_t)v11, size);
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v17.__r_.__value_.__l.__data_);
      sub_20E86A980(a2, (uint64_t)"d-slice #", 9);
      std::to_string(&v17, a3[v9]);
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v13 = &v17;
      else
        v13 = (std::string *)v17.__r_.__value_.__r.__words[0];
      if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v14 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
      else
        v14 = v17.__r_.__value_.__l.__size_;
      sub_20E86A980(a2, (uint64_t)v13, v14);
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v17.__r_.__value_.__l.__data_);
      sub_20E86A980(a2, (uint64_t)": ", 2);
      sub_20FF5567C(a2, a3);
      sub_20E86A980(a2, (uint64_t)" to ", 4);
      sub_20FF5567C(a2, (unsigned int *)&v15);
      result = sub_20E86A980(a2, (uint64_t)"]\n", 2);
      --v6;
      --v9;
    }
    while (v6 > a5);
  }
  return result;
}

void sub_20FF5565C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_20FF5567C(_QWORD *a1, unsigned int *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  void *__p[2];
  unsigned __int8 v8;
  _BYTE v9[24];
  unsigned int v10;
  char v11;
  char *v12;

  v10 = 0;
  sub_20FE0DAB8((uint64_t)&v12, (uint64_t)v9, a2);
  if (v10 == -1)
    sub_20E877AB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _BYTE *))*(&off_24CA0E5E8 + v10))(__p, &v12, v9);
  if (v10 != -1)
    ((void (*)(char **, _BYTE *))off_24CA0E588[v10])(&v12, v9);
  if ((v8 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v8 & 0x80u) == 0)
    v4 = v8;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20E86A980(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20FF55764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF55780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF55794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF557A8(uint64_t *a1, uint64_t a2)
{
  int v2;
  int v3;
  BOOL v4;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  BOOL v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  unint64_t v17;
  int v18;
  int v19;
  unsigned __int8 *v20;
  int v21;
  uint64_t v22;
  size_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  void *p_p;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  _DWORD *v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  size_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int *v51;
  _DWORD *v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  size_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int *v68;
  _DWORD *v69;
  int v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  unsigned __int8 *v75;
  int v76;
  unsigned __int8 *v77;
  uint64_t v78;
  void *__p;
  uint64_t v80;
  unsigned __int8 v81;
  _BYTE v82[24];
  unsigned int v83;
  std::string v84;
  std::string *v85;
  std::string *v86;
  _BYTE *v87;
  std::string *v88;
  std::string *v89;
  _QWORD v90[3];

  v2 = *(_DWORD *)(a2 + 36);
  v3 = *(_DWORD *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32))
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4 && v3 != 0)
  {
    v8 = v3 - 1;
    v9 = *(unsigned int *)(a2 + 48);
    v10 = *(unsigned int *)(a2 + 52);
    v11 = *(unsigned __int8 **)(a2 + 24);
    if (*(_BYTE *)(a2 + 72))
      v12 = v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(_QWORD *)(a2 + 8);
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        p_shared_owners = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(p_shared_owners);
        while (__stxr(v16 + 1, p_shared_owners));
        do
          v17 = __ldaxr(p_shared_owners);
        while (__stlxr(v17 - 1, p_shared_owners));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
      }
      (*(void (**)(uint64_t, _QWORD, const char *))(*(_QWORD *)v13 + 88))(v13, 0, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
      v11 = *(unsigned __int8 **)(a2 + 24);
    }
    v18 = v2 - 1;
    if (v8)
    {
      if (v18)
      {
        v19 = 0;
        v20 = v11 + 2;
        v78 = v9;
        v74 = v10;
        v73 = v18;
        while (1)
        {
          v76 = v19;
          v77 = v11;
          v75 = v20;
          v21 = v18;
          do
          {
            v24 = (_QWORD *)*a1;
            v25 = *(_QWORD *)*a1;
            v26 = *(uint64_t **)v25;
            v27 = **(unsigned __int8 **)(v25 + 8);
            v83 = 0;
            std::to_string(&v84, *(v20 - 2));
            v85 = (std::string *)v82;
            v86 = &v84;
            v87 = v82;
            v88 = &v84;
            v89 = &v84;
            if (v83 == -1)
              sub_20E877AB8();
            v90[0] = &v85;
            ((void (*)(_QWORD *, _BYTE *))off_24CA0E5A0[v83])(v90, v82);
            if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v84.__r_.__value_.__l.__data_);
            if (v83 == -1)
              sub_20E877AB8();
            v85 = &v84;
            ((void (*)(void **__return_ptr, std::string **, _BYTE *))*(&off_24CA0E5E8 + v83))(&__p, &v85, v82);
            if (v83 != -1)
              ((void (*)(std::string **, _BYTE *))off_24CA0E588[v83])(&v85, v82);
            v28 = *v26;
            *(uint64_t *)((char *)v26 + *(_QWORD *)(*v26 - 24) + 24) = v27;
            *(_DWORD *)((char *)v26 + *(_QWORD *)(v28 - 24) + 8) = *(_DWORD *)((_BYTE *)v26 + *(_QWORD *)(v28 - 24) + 8) & 0xFFFFFF4F | 0x80;
            if ((v81 & 0x80u) == 0)
              p_p = &__p;
            else
              p_p = __p;
            if ((v81 & 0x80u) == 0)
              v30 = v81;
            else
              v30 = v80;
            sub_20E86A980(v26, (uint64_t)p_p, v30);
            if ((char)v81 < 0)
              operator delete(__p);
            v32 = v24[1];
            v31 = (_QWORD *)v24[2];
            v33 = *(_QWORD *)(v32 + 32);
            v34 = *(unsigned int **)v32;
            v35 = *(_DWORD **)(v32 + 8);
            v36 = **(_DWORD **)v32 + 1;
            **(_DWORD **)v32 = v36;
            if (v36 == *v35)
            {
              v37 = v34[1] + 1;
              *v34 = 0;
              v34[1] = v37;
              if (v37 == v35[1])
              {
                v38 = v34[2] + 1;
                v34[1] = 0;
                v34[2] = v38;
                if (v38 == v35[2])
                  goto LABEL_48;
                v39 = 2;
              }
              else
              {
                v39 = 1;
              }
            }
            else
            {
              v39 = 0;
            }
            v40 = strlen(*(const char **)(**(_QWORD **)(v32 + 16) + 8 * v39));
            sub_20E86A980(v31, *(_QWORD *)(**(_QWORD **)(v32 + 16) + 8 * v39), v40);
            sub_20FF554C4(v33, v31, *(unsigned int **)v32, v39, **(_DWORD **)(v32 + 24));
LABEL_48:
            v41 = (_QWORD *)*a1;
            v42 = *(_QWORD *)*a1;
            v43 = *(uint64_t **)v42;
            v44 = **(unsigned __int8 **)(v42 + 8);
            v83 = 0;
            std::to_string(&v84, *(v20 - 1));
            v85 = (std::string *)v82;
            v86 = &v84;
            v87 = v82;
            v88 = &v84;
            v89 = &v84;
            if (v83 == -1)
              sub_20E877AB8();
            v90[0] = &v85;
            ((void (*)(_QWORD *, _BYTE *))off_24CA0E5A0[v83])(v90, v82);
            if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v84.__r_.__value_.__l.__data_);
            if (v83 == -1)
              sub_20E877AB8();
            v85 = &v84;
            ((void (*)(void **__return_ptr, std::string **, _BYTE *))*(&off_24CA0E5E8 + v83))(&__p, &v85, v82);
            if (v83 != -1)
              ((void (*)(std::string **, _BYTE *))off_24CA0E588[v83])(&v85, v82);
            v45 = *v43;
            *(uint64_t *)((char *)v43 + *(_QWORD *)(*v43 - 24) + 24) = v44;
            *(_DWORD *)((char *)v43 + *(_QWORD *)(v45 - 24) + 8) = *(_DWORD *)((_BYTE *)v43 + *(_QWORD *)(v45 - 24) + 8) & 0xFFFFFF4F | 0x80;
            if ((v81 & 0x80u) == 0)
              v46 = &__p;
            else
              v46 = __p;
            if ((v81 & 0x80u) == 0)
              v47 = v81;
            else
              v47 = v80;
            sub_20E86A980(v43, (uint64_t)v46, v47);
            if ((char)v81 < 0)
              operator delete(__p);
            v49 = v41[1];
            v48 = (_QWORD *)v41[2];
            v50 = *(_QWORD *)(v49 + 32);
            v51 = *(unsigned int **)v49;
            v52 = *(_DWORD **)(v49 + 8);
            v53 = **(_DWORD **)v49 + 1;
            **(_DWORD **)v49 = v53;
            if (v53 == *v52)
            {
              v54 = v51[1] + 1;
              *v51 = 0;
              v51[1] = v54;
              if (v54 == v52[1])
              {
                v55 = v51[2] + 1;
                v51[1] = 0;
                v51[2] = v55;
                if (v55 == v52[2])
                  goto LABEL_69;
                v56 = 2;
              }
              else
              {
                v56 = 1;
              }
            }
            else
            {
              v56 = 0;
            }
            v57 = strlen(*(const char **)(**(_QWORD **)(v49 + 16) + 8 * v56));
            sub_20E86A980(v48, *(_QWORD *)(**(_QWORD **)(v49 + 16) + 8 * v56), v57);
            sub_20FF554C4(v50, v48, *(unsigned int **)v49, v56, **(_DWORD **)(v49 + 24));
LABEL_69:
            v58 = (_QWORD *)*a1;
            v59 = *(_QWORD *)*a1;
            v60 = *(uint64_t **)v59;
            v61 = **(unsigned __int8 **)(v59 + 8);
            v83 = 0;
            std::to_string(&v84, *v20);
            v85 = (std::string *)v82;
            v86 = &v84;
            v87 = v82;
            v88 = &v84;
            v89 = &v84;
            if (v83 == -1)
              sub_20E877AB8();
            v90[0] = &v85;
            ((void (*)(_QWORD *, _BYTE *))off_24CA0E5A0[v83])(v90, v82);
            if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v84.__r_.__value_.__l.__data_);
            if (v83 == -1)
              sub_20E877AB8();
            v85 = &v84;
            ((void (*)(void **__return_ptr, std::string **, _BYTE *))*(&off_24CA0E5E8 + v83))(&__p, &v85, v82);
            if (v83 != -1)
              ((void (*)(std::string **, _BYTE *))off_24CA0E588[v83])(&v85, v82);
            v62 = *v60;
            *(uint64_t *)((char *)v60 + *(_QWORD *)(*v60 - 24) + 24) = v61;
            *(_DWORD *)((char *)v60 + *(_QWORD *)(v62 - 24) + 8) = *(_DWORD *)((_BYTE *)v60 + *(_QWORD *)(v62 - 24) + 8) & 0xFFFFFF4F | 0x80;
            if ((v81 & 0x80u) == 0)
              v63 = &__p;
            else
              v63 = __p;
            if ((v81 & 0x80u) == 0)
              v64 = v81;
            else
              v64 = v80;
            sub_20E86A980(v60, (uint64_t)v63, v64);
            if ((char)v81 < 0)
              operator delete(__p);
            v66 = v58[1];
            v65 = (_QWORD *)v58[2];
            v67 = *(_QWORD *)(v66 + 32);
            v68 = *(unsigned int **)v66;
            v69 = *(_DWORD **)(v66 + 8);
            v70 = **(_DWORD **)v66 + 1;
            **(_DWORD **)v66 = v70;
            if (v70 != *v69)
            {
              v22 = 0;
LABEL_25:
              v23 = strlen(*(const char **)(**(_QWORD **)(v66 + 16) + 8 * v22));
              sub_20E86A980(v65, *(_QWORD *)(**(_QWORD **)(v66 + 16) + 8 * v22), v23);
              sub_20FF554C4(v67, v65, *(unsigned int **)v66, v22, **(_DWORD **)(v66 + 24));
              goto LABEL_26;
            }
            v71 = v68[1] + 1;
            *v68 = 0;
            v68[1] = v71;
            if (v71 != v69[1])
            {
              v22 = 1;
              goto LABEL_25;
            }
            v72 = v68[2] + 1;
            v68[1] = 0;
            v68[2] = v72;
            if (v72 != v69[2])
            {
              v22 = 2;
              goto LABEL_25;
            }
LABEL_26:
            v9 = v78;
            v20 += v78;
            --v21;
          }
          while (v21);
          sub_20FF5604C(*a1, v20 - 2);
          sub_20FF5604C(*a1, v20 - 1);
          sub_20FF5604C(*a1, v20);
          v11 = &v77[v74];
          v19 = v76 + 1;
          v20 = &v75[v74];
          v18 = v73;
          if (v76 + 1 == v8)
            goto LABEL_89;
        }
      }
      do
      {
        sub_20FF5604C(*a1, v11);
        sub_20FF5604C(*a1, v11 + 1);
        sub_20FF5604C(*a1, v11 + 2);
        v11 += v10;
        --v8;
      }
      while (v8);
    }
LABEL_89:
    while (v18)
    {
      sub_20FF5604C(*a1, v11);
      sub_20FF5604C(*a1, v11 + 1);
      sub_20FF5604C(*a1, v11 + 2);
      v11 += v9;
      --v18;
    }
    sub_20FF5604C(*a1, v11);
    sub_20FF5604C(*a1, v11 + 1);
    sub_20FF5604C(*a1, v11 + 2);
  }
}

void sub_20FF55F28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a22 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF5604C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  _DWORD *v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  size_t v17;
  void *__p[2];
  unsigned __int8 v19;

  v3 = **(uint64_t ***)a1;
  v4 = **(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  sub_20E9E7014(a2);
  v5 = *v3;
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 - 24) + 24) = v4;
  *(_DWORD *)((char *)v3 + *(_QWORD *)(v5 - 24) + 8) = *(_DWORD *)((_BYTE *)v3 + *(_QWORD *)(v5 - 24) + 8) & 0xFFFFFF4F | 0x80;
  if ((v19 & 0x80u) == 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  if ((v19 & 0x80u) == 0)
    v7 = v19;
  else
    v7 = (uint64_t)__p[1];
  sub_20E86A980(v3, (uint64_t)v6, v7);
  if ((char)v19 < 0)
    operator delete(__p[0]);
  v9 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD **)(a1 + 16);
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(unsigned int **)v9;
  v12 = *(_DWORD **)(v9 + 8);
  v13 = **(_DWORD **)v9 + 1;
  **(_DWORD **)v9 = v13;
  if (v13 == *v12)
  {
    v14 = v11[1] + 1;
    *v11 = 0;
    v11[1] = v14;
    if (v14 == v12[1])
    {
      v15 = v11[2] + 1;
      v11[1] = 0;
      v11[2] = v15;
      if (v15 == v12[2])
        return;
      v16 = 2;
    }
    else
    {
      v16 = 1;
    }
  }
  else
  {
    v16 = 0;
  }
  v17 = strlen(*(const char **)(**(_QWORD **)(v9 + 16) + 8 * v16));
  sub_20E86A980(v8, *(_QWORD *)(**(_QWORD **)(v9 + 16) + 8 * v16), v17);
  sub_20FF554C4(v10, v8, *(unsigned int **)v9, v16, **(_DWORD **)(v9 + 24));
}

void sub_20FF5619C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF561B8(uint64_t *a1, int a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD __dst[20];
  _QWORD *v9;

  v9 = (_QWORD *)*a1;
  memcpy(__dst, &unk_2103F29F0, sizeof(__dst));
  v4 = *(_DWORD *)((char *)&xmmword_2103F2950 + (((char *)sub_20FF577A8(__dst, (uint64_t *)&v9) - (char *)__dst) >> 1));
  __dst[0] = xmmword_2103F27A0;
  __dst[1] = unk_2103F27B0;
  __dst[2] = xmmword_2103F27C0;
  *(_QWORD *)&__dst[3] = 0x2600000025;
  if (a2 != 1)
    goto LABEL_18;
  v5 = (char *)&__dst[3] + 8;
  v6 = 0;
  switch(v4)
  {
    case 1:
      goto LABEL_16;
    case 2:
      v6 = 1;
      goto LABEL_16;
    case 3:
      v6 = 2;
      goto LABEL_16;
    case 4:
      v6 = 3;
      goto LABEL_16;
    case 5:
      v6 = 4;
      goto LABEL_16;
    case 7:
      v6 = 5;
      goto LABEL_16;
    case 8:
      v6 = 6;
      goto LABEL_16;
    case 21:
      v6 = 7;
      goto LABEL_16;
    case 22:
      v6 = 8;
      goto LABEL_16;
    case 25:
      v6 = 9;
      goto LABEL_16;
    case 31:
      v6 = 10;
      goto LABEL_16;
    case 32:
      v6 = 11;
      goto LABEL_16;
    case 37:
      v6 = 12;
      goto LABEL_16;
    case 38:
      v6 = 13;
LABEL_16:
      v5 = (char *)__dst + 4 * v6;
      break;
    default:
      break;
  }
  if (v5 - (char *)__dst != 56)
  {
    v9 = a1;
    sub_20FF5949C(v4);
  }
  else
  {
LABEL_18:
    v7 = a1[1];
    v9 = &v7;
    sub_2101A1E10(v4);
  }
}

void sub_20FF5634C(uint64_t *a1, int a2)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD __dst[20];
  _QWORD *v9;

  v9 = (_QWORD *)*a1;
  memcpy(__dst, &unk_2103F29F0, sizeof(__dst));
  v4 = *(_DWORD *)((char *)&xmmword_2103F2950 + (((char *)sub_20FF577A8(__dst, (uint64_t *)&v9) - (char *)__dst) >> 1));
  __dst[0] = xmmword_2103F27D8;
  __dst[1] = unk_2103F27E8;
  __dst[2] = xmmword_2103F27F8;
  *(_QWORD *)&__dst[3] = 0x2600000025;
  if (a2 != 1)
    goto LABEL_18;
  v5 = (char *)&__dst[3] + 8;
  v6 = 0;
  switch(v4)
  {
    case 1:
      goto LABEL_16;
    case 2:
      v6 = 1;
      goto LABEL_16;
    case 3:
      v6 = 2;
      goto LABEL_16;
    case 4:
      v6 = 3;
      goto LABEL_16;
    case 5:
      v6 = 4;
      goto LABEL_16;
    case 7:
      v6 = 5;
      goto LABEL_16;
    case 8:
      v6 = 6;
      goto LABEL_16;
    case 21:
      v6 = 7;
      goto LABEL_16;
    case 22:
      v6 = 8;
      goto LABEL_16;
    case 25:
      v6 = 9;
      goto LABEL_16;
    case 31:
      v6 = 10;
      goto LABEL_16;
    case 32:
      v6 = 11;
      goto LABEL_16;
    case 37:
      v6 = 12;
      goto LABEL_16;
    case 38:
      v6 = 13;
LABEL_16:
      v5 = (char *)__dst + 4 * v6;
      break;
    default:
      break;
  }
  if (v5 - (char *)__dst != 56)
  {
    v9 = a1;
    sub_20FF5F6D8(v4);
  }
  else
  {
LABEL_18:
    v7 = a1[1];
    v9 = &v7;
    sub_2101A1E10(v4);
  }
}

uint64_t sub_20FF564E0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  int v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;
  int v31;
  _OWORD v32[10];
  uint64_t v33;

  v28 = &off_24C9C0338;
  sub_20FF60920(a2, (uint64_t)&v29);
  if ((*(_QWORD *)&a3 & 0xFF0000) == 0)
  {
    LOWORD(a3) = 1;
    v12 = v30;
    if (!v30)
      goto LABEL_11;
    goto LABEL_7;
  }
  if (!sub_20FF575D8(v31, (unsigned __int16)a3, v6, v7, v8, v9, v10, v11, v23)
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Serialization.cpp", 218, (uint64_t)"CanSerialize(to_serialize.RuntimeFormat(), *op_format)", 54, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  v12 = v30;
  if (v30)
  {
LABEL_7:
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
LABEL_11:
  *(_WORD *)a1 = a3;
  sub_20FF60920(a2, (uint64_t)&v24);
  v15 = v26;
  v32[6] = xmmword_2103F29B0;
  v32[7] = unk_2103F29C0;
  v32[8] = xmmword_2103F29D0;
  v32[9] = unk_2103F29E0;
  v32[2] = xmmword_2103F2970;
  v32[3] = unk_2103F2980;
  v32[4] = xmmword_2103F2990;
  v32[5] = unk_2103F29A0;
  v32[0] = xmmword_2103F2950;
  v32[1] = unk_2103F2960;
  v16 = (char *)sub_20FF57B70(v32, v27);
  if (v16 != (char *)&v33)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)((char *)&unk_2103F29F0 + 2 * (v16 - (char *)v32));
    *(_QWORD *)(a1 + 16) = v15;
    v17 = v25;
    if (!v25)
      goto LABEL_20;
    goto LABEL_16;
  }
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Serialization.cpp", 166, (uint64_t)"maybe_format", 12, (uint64_t)"Format is not serializable. Must be a non-dynamic format.", 57, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v15;
  v17 = v25;
  if (v25)
  {
LABEL_16:
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
LABEL_20:
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = &off_24C9FC408;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v20 = *(_OWORD *)(a2 + 24);
  v21 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 86) = *(_QWORD *)(a2 + 54);
  *(_OWORD *)(a1 + 72) = v21;
  *(_OWORD *)(a1 + 56) = v20;
  *(_DWORD *)(a1 + 96) = 1;
  return a1;
}

void sub_20FF5671C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20EA69690((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF56730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20EA69690((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF56744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int v22;
  BOOL v23;
  int v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_18;
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5)
    goto LABEL_14;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (v8)
  {
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    v4 = *(_QWORD *)(a1 + 8);
    v9 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v9)
      goto LABEL_14;
  }
  v10 = (unint64_t *)&v9->__shared_owners_;
  do
    v11 = __ldxr(v10);
  while (__stxr(v11 + 1, v10));
  do
    v12 = __ldaxr(v10);
  while (__stlxr(v12 - 1, v10));
  if (v12)
  {
LABEL_14:
    if (*(_BYTE *)(a1 + 53))
      goto LABEL_15;
LABEL_18:
    v33 = 0;
    v13 = *(_QWORD *)(a2 + 8);
    if (!v13)
      goto LABEL_35;
    goto LABEL_19;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  if (!*(_BYTE *)(a1 + 53))
    goto LABEL_18;
LABEL_15:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v4 + 96))(&v33, v4, 0);
  v13 = *(_QWORD *)(a2 + 8);
  if (!v13)
  {
LABEL_35:
    v32 = 0;
    v22 = *(_DWORD *)(a1 + 48);
    if (v22 != *(_DWORD *)(a2 + 48))
      goto LABEL_51;
    goto LABEL_36;
  }
LABEL_19:
  v14 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v14)
    goto LABEL_31;
  v15 = (unint64_t *)&v14->__shared_owners_;
  do
    v16 = __ldxr(v15);
  while (__stxr(v16 + 1, v15));
  do
    v17 = __ldaxr(v15);
  while (__stlxr(v17 - 1, v15));
  if (v17)
  {
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    v13 = *(_QWORD *)(a2 + 8);
    v18 = *(std::__shared_weak_count **)(a2 + 16);
    if (!v18)
      goto LABEL_31;
  }
  v19 = (unint64_t *)&v18->__shared_owners_;
  do
    v20 = __ldxr(v19);
  while (__stxr(v20 + 1, v19));
  do
    v21 = __ldaxr(v19);
  while (__stlxr(v21 - 1, v19));
  if (v21)
  {
LABEL_31:
    if (!*(_BYTE *)(a2 + 53))
      goto LABEL_35;
    goto LABEL_32;
  }
  ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
  std::__shared_weak_count::__release_weak(v18);
  if (!*(_BYTE *)(a2 + 53))
    goto LABEL_35;
LABEL_32:
  (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(&v32, v13, 0);
  v22 = *(_DWORD *)(a1 + 48);
  if (v22 != *(_DWORD *)(a2 + 48))
    goto LABEL_51;
LABEL_36:
  if (*(_DWORD *)(a1 + 24))
    v23 = *(_DWORD *)(a1 + 28) == 0;
  else
    v23 = 1;
  v24 = v23;
  if (*(_DWORD *)(a2 + 24))
  {
    v25 = *(_DWORD *)(a2 + 28) == 0;
    if (((v24 ^ v25) & 1) == 0)
    {
      if ((v24 & v25) == 1)
        goto LABEL_45;
LABEL_50:
      v28 = sub_210161770(v22, a1, a2);
      goto LABEL_52;
    }
LABEL_51:
    v28 = 0;
    goto LABEL_52;
  }
  if ((v24 & 1) == 0)
    goto LABEL_51;
  if ((v24 & 1) != 1)
    goto LABEL_50;
LABEL_45:
  v26 = *(_QWORD *)(a1 + 24);
  v27 = *(_QWORD *)(a2 + 24);
  v28 = (_DWORD)v26 == (_DWORD)v27 && HIDWORD(v26) == HIDWORD(v27);
LABEL_52:
  v29 = v32;
  v32 = 0;
  if (v29)
    (*(void (**)(uint64_t))(*(_QWORD *)v29 + 8))(v29);
  v30 = v33;
  v33 = 0;
  if (v30)
    (*(void (**)(uint64_t))(*(_QWORD *)v30 + 8))(v30);
  return v28;
}

void sub_20FF56A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;

  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v11 = a10;
    if (!a10)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v11 = a10;
    if (!a10)
      goto LABEL_3;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF56A64(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  uint64_t v26;
  int v27;
  uint64_t (**v28)();
  uint64_t v29;
  std::__shared_weak_count *v30;
  int v31;
  _OWORD v32[10];
  uint64_t v33;

  v28 = &off_24C9C0338;
  sub_20FF60920(a2, (uint64_t)&v29);
  if ((*(_QWORD *)&a3 & 0xFF0000) == 0)
  {
    LOWORD(a3) = 1;
    v12 = v30;
    if (!v30)
      goto LABEL_11;
    goto LABEL_7;
  }
  if (!sub_20FF575D8(v31, (unsigned __int16)a3, v6, v7, v8, v9, v10, v11, v23)
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Serialization.cpp", 218, (uint64_t)"CanSerialize(to_serialize.RuntimeFormat(), *op_format)", 54, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  v12 = v30;
  if (v30)
  {
LABEL_7:
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
LABEL_11:
  *(_WORD *)a1 = a3;
  sub_20FF60920(a2, (uint64_t)&v24);
  v15 = v26;
  v32[6] = xmmword_2103F29B0;
  v32[7] = unk_2103F29C0;
  v32[8] = xmmword_2103F29D0;
  v32[9] = unk_2103F29E0;
  v32[2] = xmmword_2103F2970;
  v32[3] = unk_2103F2980;
  v32[4] = xmmword_2103F2990;
  v32[5] = unk_2103F29A0;
  v32[0] = xmmword_2103F2950;
  v32[1] = unk_2103F2960;
  v16 = (char *)sub_20FF57B70(v32, v27);
  if (v16 != (char *)&v33)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)((char *)&unk_2103F29F0 + 2 * (v16 - (char *)v32));
    *(_QWORD *)(a1 + 16) = v15;
    v17 = v25;
    if (!v25)
      goto LABEL_20;
    goto LABEL_16;
  }
  if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Serialization.cpp", 166, (uint64_t)"maybe_format", 12, (uint64_t)"Format is not serializable. Must be a non-dynamic format.", 57, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v15;
  v17 = v25;
  if (v25)
  {
LABEL_16:
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
LABEL_20:
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = &off_24C9FC408;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  v20 = *(_OWORD *)(a2 + 24);
  v21 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 86) = *(_QWORD *)(a2 + 54);
  *(_OWORD *)(a1 + 72) = v21;
  *(_OWORD *)(a1 + 56) = v20;
  *(_DWORD *)(a1 + 96) = 1;
  return a1;
}

void sub_20FF56CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20EA69690((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF56CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20EA69690((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF56CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  unint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  __int16 v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v36;
  int v37;
  _OWORD v38[10];
  uint64_t v39;

  v8 = a3;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(p_shared_owners);
    while (__stxr(v13 + 1, p_shared_owners));
    v14 = *(_DWORD *)(a2 + 48);
    do
      v15 = __ldxr(p_shared_owners);
    while (__stxr(v15 + 1, p_shared_owners));
  }
  else
  {
    v14 = *(_DWORD *)(a2 + 48);
  }
  v16 = (uint64_t *)(a2 + 24);
  v37 = v14;
  if (v11)
  {
    v17 = (unint64_t *)&v11->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
      if ((*(_QWORD *)&v8 & 0xFF0000) != 0)
        goto LABEL_13;
LABEL_18:
      LOWORD(v8) = 1;
      if (!v11)
        goto LABEL_23;
      goto LABEL_19;
    }
  }
  if ((a3 & 0xFF0000) == 0)
    goto LABEL_18;
LABEL_13:
  if (!sub_20FF575D8(v37, (unsigned __int16)v8, a3, a4, a5, a6, a7, a8, v36)
    && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Serialization.cpp", 218, (uint64_t)"CanSerialize(to_serialize.RuntimeFormat(), *op_format)", 54, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
  {
    abort();
  }
  if (v11)
  {
LABEL_19:
    v19 = (unint64_t *)&v11->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
LABEL_23:
  v38[7] = unk_2103F29C0;
  v38[8] = xmmword_2103F29D0;
  v38[9] = unk_2103F29E0;
  v38[2] = xmmword_2103F2970;
  v38[3] = unk_2103F2980;
  v38[4] = xmmword_2103F2990;
  *(_WORD *)a1 = v8;
  v21 = *(_DWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a2 + 24);
  v38[5] = unk_2103F29A0;
  v38[6] = xmmword_2103F29B0;
  v38[0] = xmmword_2103F2950;
  v38[1] = unk_2103F2960;
  v23 = (char *)sub_20FF57B70(v38, v21);
  if (v23 == (char *)&v39)
  {
    if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/ImageIO/src/Serialization.cpp", 166, (uint64_t)"maybe_format", 12, (uint64_t)"Format is not serializable. Must be a non-dynamic format.", 57, (void (*)(void **))sub_21023DDB0))
    {
      abort();
    }
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = v22;
    *(_DWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = &off_24C9C0338;
    v24 = *(_QWORD *)(a2 + 8);
    v25 = *(std::__shared_weak_count **)(a2 + 16);
    if (v25)
      goto LABEL_25;
LABEL_32:
    v28 = *(_QWORD *)(a2 + 40);
    v29 = *(_DWORD *)(a2 + 48);
    v30 = *(_WORD *)(a2 + 52);
    goto LABEL_33;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)((char *)&unk_2103F29F0 + 2 * (v23 - (char *)v38));
  *(_QWORD *)(a1 + 16) = v22;
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = &off_24C9C0338;
  v24 = *(_QWORD *)(a2 + 8);
  v25 = *(std::__shared_weak_count **)(a2 + 16);
  if (!v25)
    goto LABEL_32;
LABEL_25:
  v26 = (unint64_t *)&v25->__shared_owners_;
  do
    v27 = __ldxr(v26);
  while (__stxr(v27 + 1, v26));
  v28 = *(_QWORD *)(a2 + 40);
  v29 = *(_DWORD *)(a2 + 48);
  v30 = *(_WORD *)(a2 + 52);
  do
    v31 = __ldxr(v26);
  while (__stxr(v31 + 1, v26));
LABEL_33:
  *(_QWORD *)(a1 + 40) = v24;
  *(_QWORD *)(a1 + 48) = v25;
  v32 = *v16;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 56) = v32;
  *(_QWORD *)(a1 + 72) = v28;
  *(_DWORD *)(a1 + 80) = v29;
  *(_WORD *)(a1 + 84) = v30;
  if (v25)
  {
    v33 = (unint64_t *)&v25->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
  *(_DWORD *)(a1 + 96) = 0;
  return a1;
}

void sub_20FF56FD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20EA69690((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF56FE4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  int v26;
  __int16 v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  uint64_t (**v31)();
  uint64_t v32;
  std::__shared_weak_count *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  __int16 v38;
  _QWORD v39[2];
  char v40;

  v3 = *(_DWORD *)(a1 + 96);
  if (v3 == 1)
  {
    *(_QWORD *)a2 = &off_24C9FC408;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 40) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 56);
    *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 72);
    *(_QWORD *)(a2 + 54) = *(_QWORD *)(a1 + 86);
    return;
  }
  if (v3)
    sub_20E877AB8();
  v31 = &off_24C9C0338;
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(std::__shared_weak_count **)(a1 + 48);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_QWORD *)(a1 + 72);
    v9 = *(_DWORD *)(a1 + 80);
    v10 = *(_WORD *)(a1 + 84);
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  else
  {
    v8 = *(_QWORD *)(a1 + 72);
    v9 = *(_DWORD *)(a1 + 80);
    v10 = *(_WORD *)(a1 + 84);
  }
  v32 = v4;
  v33 = v5;
  v34 = *(_QWORD *)(a1 + 56);
  v35 = *(_DWORD *)(a1 + 64);
  v36 = v8;
  v37 = v9;
  v38 = v10;
  if (!v5)
    goto LABEL_16;
  v12 = (unint64_t *)&v5->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
  {
LABEL_16:
    *(_QWORD *)a2 = &off_24C9FC408;
    v14 = v32;
    if (v32)
      goto LABEL_17;
LABEL_31:
    v39[0] = &v40;
    v39[1] = &v31;
    sub_2101BC338(v37);
    v25 = v33;
    if (!v33)
      return;
    goto LABEL_35;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  *(_QWORD *)a2 = &off_24C9FC408;
  v14 = v32;
  if (!v32)
    goto LABEL_31;
LABEL_17:
  if (v33)
  {
    v15 = &v33->__shared_owners_;
    do
      v16 = __ldxr((unint64_t *)v15);
    while (__stxr(v16 + 1, (unint64_t *)v15));
    do
      v17 = __ldaxr((unint64_t *)v15);
    while (__stlxr(v17 - 1, (unint64_t *)v15));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
    v14 = v32;
    v18 = &v33->__shared_owners_;
    do
      v19 = __ldxr((unint64_t *)v18);
    while (__stxr(v19 + 1, (unint64_t *)v18));
    do
      v20 = __ldaxr((unint64_t *)v18);
    while (__stlxr(v20 - 1, (unint64_t *)v18));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v14 + 32))(v39, v14);
  v21 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v39[0] + 48))(v39[0]);
  v22 = v39[0];
  if (v39[0])
  {
    v23 = (_QWORD *)operator new();
    v24 = v39[0];
    *v23 = &off_24C9FC460;
    v23[1] = 0;
    v23[2] = 0;
    v23[3] = v24;
  }
  else
  {
    v23 = 0;
  }
  v26 = v37;
  v27 = v38;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v23;
  v28 = v34;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v28;
  *(_DWORD *)(a2 + 40) = v35;
  *(_QWORD *)(a2 + 48) = v21;
  *(_DWORD *)(a2 + 56) = v26;
  *(_WORD *)(a2 + 60) = v27;
  v25 = v33;
  if (v33)
  {
LABEL_35:
    v29 = (unint64_t *)&v25->__shared_owners_;
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
      std::__shared_weak_count::__release_weak(v25);
    }
  }
}

void sub_20FF572BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20EA69690((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF572D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17;

  v17 = a16;
  a16 = 0;
  if (v17)
    (*(void (**)(uint64_t))(*(_QWORD *)v17 + 8))(v17);
  sub_20EA69690((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF572FC(unsigned __int16 *a1, unsigned __int16 *a2)
{
  uint64_t v3;
  int v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unsigned __int16 v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  unsigned __int16 v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  uint64_t (**v33)();
  uint64_t v34;
  std::__shared_weak_count *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  unsigned __int16 v40;
  uint64_t (**v41)();
  uint64_t v42;
  std::__shared_weak_count *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  unsigned __int16 v48;

  if (*a1 != *a2 || *((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1) || *((_QWORD *)a1 + 2) != *((_QWORD *)a2 + 2))
    return 0;
  v5 = *((_DWORD *)a1 + 24);
  if (v5)
  {
    if (v5 != 1)
      sub_20E877AB8();
    v41 = &off_24C9C0338;
    sub_20FF60B50((uint64_t)(a1 + 16), (uint64_t)&v42);
  }
  else
  {
    v41 = &off_24C9C0338;
    v6 = *((_QWORD *)a1 + 5);
    v7 = (std::__shared_weak_count *)*((_QWORD *)a1 + 6);
    if (v7)
    {
      p_shared_owners = (unint64_t *)&v7->__shared_owners_;
      do
        v9 = __ldxr(p_shared_owners);
      while (__stxr(v9 + 1, p_shared_owners));
      v10 = *((_QWORD *)a1 + 9);
      v11 = *((_DWORD *)a1 + 20);
      v12 = a1[42];
      do
        v13 = __ldxr(p_shared_owners);
      while (__stxr(v13 + 1, p_shared_owners));
    }
    else
    {
      v10 = *((_QWORD *)a1 + 9);
      v11 = *((_DWORD *)a1 + 20);
      v12 = a1[42];
    }
    v42 = v6;
    v43 = v7;
    v44 = *((_QWORD *)a1 + 7);
    v45 = *((_DWORD *)a1 + 16);
    v46 = v10;
    v47 = v11;
    v48 = v12;
    if (v7)
    {
      v14 = (unint64_t *)&v7->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
  }
  v16 = *((_DWORD *)a2 + 24);
  if (v16)
  {
    if (v16 != 1)
      sub_20E877AB8();
    v33 = &off_24C9C0338;
    sub_20FF60B50((uint64_t)(a2 + 16), (uint64_t)&v34);
  }
  else
  {
    v33 = &off_24C9C0338;
    v17 = *((_QWORD *)a2 + 5);
    v18 = (std::__shared_weak_count *)*((_QWORD *)a2 + 6);
    if (v18)
    {
      v19 = (unint64_t *)&v18->__shared_owners_;
      do
        v20 = __ldxr(v19);
      while (__stxr(v20 + 1, v19));
      v21 = *((_QWORD *)a2 + 9);
      v22 = *((_DWORD *)a2 + 20);
      v23 = a2[42];
      do
        v24 = __ldxr(v19);
      while (__stxr(v24 + 1, v19));
    }
    else
    {
      v21 = *((_QWORD *)a2 + 9);
      v22 = *((_DWORD *)a2 + 20);
      v23 = a2[42];
    }
    v34 = v17;
    v35 = v18;
    v36 = *((_QWORD *)a2 + 7);
    v37 = *((_DWORD *)a2 + 16);
    v38 = v21;
    v39 = v22;
    v40 = v23;
    if (v18)
    {
      v25 = (unint64_t *)&v18->__shared_owners_;
      do
        v26 = __ldaxr(v25);
      while (__stlxr(v26 - 1, v25));
      if (!v26)
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
    }
  }
  v3 = sub_20FF56744((uint64_t)&v41, (uint64_t)&v33);
  v27 = v35;
  if (v35)
  {
    v28 = (unint64_t *)&v35->__shared_owners_;
    do
      v29 = __ldaxr(v28);
    while (__stlxr(v29 - 1, v28));
    if (!v29)
    {
      ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
      std::__shared_weak_count::__release_weak(v27);
    }
  }
  v30 = v43;
  if (!v43)
    return v3;
  v31 = (unint64_t *)&v43->__shared_owners_;
  do
    v32 = __ldaxr(v31);
  while (__stlxr(v32 - 1, v31));
  if (v32)
    return v3;
  ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
  std::__shared_weak_count::__release_weak(v30);
  return v3;
}

void sub_20FF575A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  sub_20EA69690((uint64_t)&a9);
  sub_20EA69690((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_20FF575C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_20EA69690((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_20FF575D8(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _DWORD v15[6];
  uint64_t v16;

  switch(a2)
  {
    case 1:
      return a1 != 0;
    case 2:
      if (a1 == 1)
        goto LABEL_11;
      if (a1 != 2)
        return 0;
      goto LABEL_6;
    case 3:
      return a1 == 21;
    case 4:
      v11 = (char *)&v16;
      v12 = 0;
      switch(a1)
      {
        case 1:
          goto LABEL_21;
        case 2:
          v12 = 1;
          goto LABEL_21;
        case 21:
          v12 = 2;
          goto LABEL_21;
        case 22:
          v12 = 3;
          goto LABEL_21;
        case 29:
          v12 = 4;
          goto LABEL_21;
        case 30:
          v12 = 5;
LABEL_21:
          v11 = (char *)&v15[v12];
          break;
        default:
          return v11 - (char *)v15 != 24;
      }
      return v11 - (char *)v15 != 24;
    case 5:
      if (a1 == 1)
      {
LABEL_11:
        v10 = 0;
        return ((unint64_t)v15 | (4 * v10)) - (_QWORD)v15 != 8;
      }
      if (a1 == 21)
      {
LABEL_6:
        v10 = 1;
        return ((unint64_t)v15 | (4 * v10)) - (_QWORD)v15 != 8;
      }
      return 0;
    case 6:
      v13 = (char *)&a9;
      v14 = 0;
      switch(a1)
      {
        case 1:
          goto LABEL_33;
        case 2:
          v14 = 1;
          goto LABEL_33;
        case 3:
          v14 = 2;
          goto LABEL_33;
        case 4:
          v14 = 3;
          goto LABEL_33;
        case 21:
          v14 = 4;
          goto LABEL_33;
        case 22:
          v14 = 5;
          goto LABEL_33;
        case 23:
          v14 = 6;
          goto LABEL_33;
        case 24:
          v14 = 7;
          goto LABEL_33;
        case 29:
          v14 = 8;
          goto LABEL_33;
        case 30:
          v14 = 9;
          goto LABEL_33;
        case 31:
          v14 = 10;
          goto LABEL_33;
        case 32:
          v14 = 11;
LABEL_33:
          v13 = (char *)&v15[v14];
          break;
        default:
          return v13 - (char *)v15 != 48;
      }
      return v13 - (char *)v15 != 48;
    default:
      return 0;
  }
}

_QWORD *sub_20FF577A8(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  if (*result != *a2)
  {
    if (result[1] == v2)
    {
      ++result;
    }
    else if (result[2] == v2)
    {
      result += 2;
    }
    else if (result[3] == v2)
    {
      result += 3;
    }
    else if (result[4] == v2)
    {
      result += 4;
    }
    else if (result[5] == v2)
    {
      result += 5;
    }
    else if (result[6] == v2)
    {
      result += 6;
    }
    else if (result[7] == v2)
    {
      result += 7;
    }
    else if (result[8] == v2)
    {
      result += 8;
    }
    else if (result[9] == v2)
    {
      result += 9;
    }
    else if (result[10] == v2)
    {
      result += 10;
    }
    else if (result[11] == v2)
    {
      result += 11;
    }
    else if (result[12] == v2)
    {
      result += 12;
    }
    else if (result[13] == v2)
    {
      result += 13;
    }
    else if (result[14] == v2)
    {
      result += 14;
    }
    else if (result[15] == v2)
    {
      result += 15;
    }
    else if (result[16] == v2)
    {
      result += 16;
    }
    else if (result[17] == v2)
    {
      result += 17;
    }
    else if (result[18] == v2)
    {
      result += 18;
    }
    else if (result[19] == v2)
    {
      result += 19;
    }
    else if (result[20] == v2)
    {
      result += 20;
    }
    else if (result[21] == v2)
    {
      result += 21;
    }
    else if (result[22] == v2)
    {
      result += 22;
    }
    else if (result[23] == v2)
    {
      result += 23;
    }
    else if (result[24] == v2)
    {
      result += 24;
    }
    else if (result[25] == v2)
    {
      result += 25;
    }
    else if (result[26] == v2)
    {
      result += 26;
    }
    else if (result[27] == v2)
    {
      result += 27;
    }
    else if (result[28] == v2)
    {
      result += 28;
    }
    else if (result[29] == v2)
    {
      result += 29;
    }
    else if (result[30] == v2)
    {
      result += 30;
    }
    else if (result[31] == v2)
    {
      result += 31;
    }
    else if (result[32] == v2)
    {
      result += 32;
    }
    else if (result[33] == v2)
    {
      result += 33;
    }
    else if (result[34] == v2)
    {
      result += 34;
    }
    else if (result[35] == v2)
    {
      result += 35;
    }
    else if (result[36] == v2)
    {
      result += 36;
    }
    else if (result[37] == v2)
    {
      result += 37;
    }
    else if (result[38] == v2)
    {
      result += 38;
    }
    else if (result[39] == v2)
    {
      result += 39;
    }
    else
    {
      result += 40;
    }
  }
  return result;
}

_DWORD *sub_20FF57B70(_DWORD *a1, int a2)
{
  _DWORD *v2;
  uint64_t v3;

  v2 = a1 + 40;
  if (*a1 == a2)
  {
    v3 = 0;
    return &a1[v3];
  }
  if (a1[1] == a2)
  {
    v3 = 1;
    return &a1[v3];
  }
  if (a1[2] == a2)
  {
    v3 = 2;
    return &a1[v3];
  }
  if (a1[3] == a2)
  {
    v3 = 3;
    return &a1[v3];
  }
  if (a1[4] == a2)
  {
    v3 = 4;
    return &a1[v3];
  }
  if (a1[5] == a2)
  {
    v3 = 5;
    return &a1[v3];
  }
  if (a1[6] == a2)
  {
    v3 = 6;
    return &a1[v3];
  }
  if (a1[7] == a2)
  {
    v3 = 7;
    return &a1[v3];
  }
  if (a1[8] == a2)
  {
    v3 = 8;
    return &a1[v3];
  }
  if (a1[9] == a2)
  {
    v3 = 9;
    return &a1[v3];
  }
  if (a1[10] == a2)
  {
    v3 = 10;
    return &a1[v3];
  }
  if (a1[11] == a2)
  {
    v3 = 11;
    return &a1[v3];
  }
  if (a1[12] == a2)
  {
    v3 = 12;
    return &a1[v3];
  }
  if (a1[13] == a2)
  {
    v3 = 13;
    return &a1[v3];
  }
  if (a1[14] == a2)
  {
    v3 = 14;
    return &a1[v3];
  }
  if (a1[15] == a2)
  {
    v3 = 15;
    return &a1[v3];
  }
  if (a1[16] == a2)
  {
    v3 = 16;
    return &a1[v3];
  }
  if (a1[17] == a2)
  {
    v3 = 17;
    return &a1[v3];
  }
  if (a1[18] == a2)
  {
    v3 = 18;
    return &a1[v3];
  }
  if (a1[19] == a2)
  {
    v3 = 19;
    return &a1[v3];
  }
  if (a1[20] == a2)
  {
    v3 = 20;
    return &a1[v3];
  }
  if (a1[21] == a2)
  {
    v3 = 21;
    return &a1[v3];
  }
  if (a1[22] == a2)
  {
    v3 = 22;
    return &a1[v3];
  }
  if (a1[23] == a2)
  {
    v3 = 23;
    return &a1[v3];
  }
  if (a1[24] == a2)
  {
    v3 = 24;
    return &a1[v3];
  }
  if (a1[25] == a2)
  {
    v3 = 25;
    return &a1[v3];
  }
  if (a1[26] == a2)
  {
    v3 = 26;
    return &a1[v3];
  }
  if (a1[27] == a2)
  {
    v3 = 27;
    return &a1[v3];
  }
  if (a1[28] == a2)
  {
    v3 = 28;
    return &a1[v3];
  }
  if (a1[29] == a2)
  {
    v3 = 29;
    return &a1[v3];
  }
  if (a1[30] == a2)
  {
    v3 = 30;
    return &a1[v3];
  }
  if (a1[31] == a2)
  {
    v3 = 31;
    return &a1[v3];
  }
  if (a1[32] == a2)
  {
    v3 = 32;
    return &a1[v3];
  }
  if (a1[33] == a2)
  {
    v3 = 33;
    return &a1[v3];
  }
  if (a1[34] == a2)
  {
    v3 = 34;
    return &a1[v3];
  }
  if (a1[35] == a2)
  {
    v3 = 35;
    return &a1[v3];
  }
  if (a1[36] == a2)
  {
    v3 = 36;
    return &a1[v3];
  }
  if (a1[37] == a2)
  {
    v3 = 37;
    return &a1[v3];
  }
  if (a1[38] == a2)
  {
    v3 = 38;
    return &a1[v3];
  }
  if (a1[39] == a2)
  {
    v3 = 39;
    return &a1[v3];
  }
  return v2;
}

_QWORD *sub_20FF57E9C(_QWORD *a1, uint64_t *a2)
{
  void **v3;
  uint64_t v4;
  _QWORD *result;
  _QWORD *v6;
  unsigned int v7;
  void *__p[2];
  unsigned __int8 v9;
  _QWORD __dst[40];
  char v11;
  char *v12;

  v12 = (char *)*a2;
  memcpy(__dst, &unk_2103F29F0, sizeof(__dst));
  v7 = *(_DWORD *)((char *)&xmmword_2103F2950 + (((char *)sub_20FF577A8(__dst, (uint64_t *)&v12) - (char *)__dst) >> 1));
  LODWORD(__dst[3]) = 0;
  sub_20E8A2C70((uint64_t)&v12, (uint64_t)__dst, &v7);
  if (LODWORD(__dst[3]) == -1)
    sub_20E877AB8();
  v12 = &v11;
  ((void (*)(void **__return_ptr, char **, _QWORD *))off_24CA0F558[LODWORD(__dst[3])])(__p, &v12, __dst);
  if (LODWORD(__dst[3]) != -1)
    ((void (*)(char **, _QWORD *))off_24CA0F540[LODWORD(__dst[3])])(&v12, __dst);
  if ((v9 & 0x80u) == 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  if ((v9 & 0x80u) == 0)
    v4 = v9;
  else
    v4 = (uint64_t)__p[1];
  result = sub_20E86A980(a1, (uint64_t)v3, v4);
  v6 = result;
  if ((char)v9 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_20FF57FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF57FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF58008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_20E877A60((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF5801C(uint64_t *a1, _WORD *a2)
{
  unsigned __int8 v4;
  uint64_t *v5;
  std::logic_error *exception;
  uint64_t v8;
  int v9;
  __int16 v10;
  std::string v11;
  void *__p[2];
  uint64_t v13;

  v4 = atomic_load((unsigned __int8 *)&qword_254A6DC80);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A6DC80))
  {
    sub_20FF58200();
    __cxa_atexit((void (*)(void *))sub_20FF5828C, &qword_254A6DC68, &dword_20E81F000);
    __cxa_guard_release(&qword_254A6DC80);
  }
  __p[0] = 0;
  __p[1] = 0;
  v13 = 0;
  sub_20EA94AF4(a1, (uint64_t)__p);
  v5 = sub_20E8D4B64((uint64_t)&qword_254A6DC68, (const void **)__p);
  if (v5 == &qword_254A6DC70)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v8 = 0x3000200010000;
    v10 = 6;
    v9 = 327684;
    sub_20FF582B4("invalid serialization format type string ", (const char *)__p, ", expected one of ", (unsigned __int16 *)&v8);
    std::logic_error::logic_error(exception, &v11);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  *a2 = *((_WORD *)v5 + 28);
  if (SHIBYTE(v13) < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_20FF58194(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A6DC80);
  _Unwind_Resume(a1);
}

void sub_20FF581AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  int v23;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v23 & 1) == 0)
    {
LABEL_6:
      if (a22 < 0)
        operator delete(a17);
      _Unwind_Resume(a1);
    }
  }
  else if (!v23)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v22);
  goto LABEL_6;
}

void sub_20FF58200()
{
  _BYTE v0[14];
  _BYTE v1[2];
  unsigned __int16 *v2[3];
  _QWORD v3[3];

  *(_QWORD *)v0 = 0x3000200010000;
  *(_QWORD *)&v0[6] = 0x6000500040003;
  v2[2] = (unsigned __int16 *)v1;
  v3[0] = v0;
  v3[2] = v0;
  v2[0] = (unsigned __int16 *)v1;
  qword_254A6DC78 = 0;
  qword_254A6DC70 = 0;
  qword_254A6DC68 = (uint64_t)&qword_254A6DC70;
  sub_20FF60198((_QWORD **)&qword_254A6DC68, (uint64_t)v3, v2);
}

void sub_20FF58274(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E866BE0(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_20FF5828C(uint64_t a1)
{
  sub_20E866BE0(a1, *(char **)(a1 + 8));
  return a1;
}

uint64_t sub_20FF582B4(char *__s, const char *a2, const char *a3, unsigned __int16 *a4)
{
  uint64_t result;
  _DWORD v8[6];
  int v9;
  _QWORD **v10;
  const char *v11;
  _DWORD *v12;
  const char *v13;
  const char *v14;
  _QWORD *v15;

  v9 = 0;
  sub_20E8A3934(v8, __s);
  v10 = (_QWORD **)v8;
  v11 = a2;
  v12 = v8;
  v13 = a2;
  v14 = a2;
  if (v9 == -1)
    sub_20E877AB8();
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F570[v9])(&v15, v8);
  v10 = (_QWORD **)v8;
  v11 = a3;
  v12 = v8;
  v13 = a3;
  v14 = a3;
  if (v9 == -1)
    sub_20E877AB8();
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F588[v9])(&v15, v8);
  v10 = (_QWORD **)v8;
  v11 = "{";
  v12 = v8;
  v13 = "{";
  v14 = "{";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v9])(&v15, v8);
  sub_20FDE696C((uint64_t)&v10, (uint64_t)v8, a4);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v9])(&v15, v8);
  sub_20FDE696C((uint64_t)&v10, (uint64_t)v8, a4 + 1);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v9])(&v15, v8);
  sub_20FDE696C((uint64_t)&v10, (uint64_t)v8, a4 + 2);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v9])(&v15, v8);
  sub_20FDE696C((uint64_t)&v10, (uint64_t)v8, a4 + 3);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v9])(&v15, v8);
  sub_20FDE696C((uint64_t)&v10, (uint64_t)v8, a4 + 4);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v9])(&v15, v8);
  sub_20FDE696C((uint64_t)&v10, (uint64_t)v8, a4 + 5);
  v10 = (_QWORD **)v8;
  v11 = ",";
  v12 = v8;
  v13 = ",";
  v14 = ",";
  if (v9 == -1)
    goto LABEL_15;
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v9])(&v15, v8);
  sub_20FDE696C((uint64_t)&v10, (uint64_t)v8, a4 + 6);
  v10 = (_QWORD **)v8;
  v11 = "}";
  v12 = v8;
  v13 = "}";
  v14 = "}";
  if (v9 == -1)
LABEL_15:
    sub_20E877AB8();
  v15 = &v10;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v9])(&v15, v8);
  if (v9 == -1)
    sub_20E877AB8();
  v10 = &v15;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0F558[v9])(&v10, v8);
  if (v9 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0F540[v9])(&v10, v8);
  return result;
}

void sub_20FF58624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF5864C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF58688(uint64_t *a1, _QWORD *a2)
{
  unsigned __int8 v4;
  uint64_t *v5;
  std::logic_error *exception;
  uint64_t v8[2];
  std::string v9;
  void *__p[2];
  uint64_t v11;

  v4 = atomic_load((unsigned __int8 *)&qword_254A6DCA0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_254A6DCA0))
  {
    sub_20FF58858();
    __cxa_atexit((void (*)(void *))sub_20FF588D4, &qword_254A6DC88, &dword_20E81F000);
    __cxa_guard_release(&qword_254A6DCA0);
  }
  __p[0] = 0;
  __p[1] = 0;
  v11 = 0;
  sub_20EA94AF4(a1, (uint64_t)__p);
  v5 = sub_20E8D4B64((uint64_t)&qword_254A6DC88, (const void **)__p);
  if (v5 == &qword_254A6DC90)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    v8[0] = 40;
    v8[1] = (uint64_t)&unk_2103F2810;
    sub_20FF588FC("invalid image format type string ", (const char *)__p, ", expected one of ", v8);
    std::logic_error::logic_error(exception, &v9);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  *a2 = v5[7];
  if (SHIBYTE(v11) < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_20FF587EC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_254A6DCA0);
  _Unwind_Resume(a1);
}

void sub_20FF58804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  void *v22;
  int v23;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v23 & 1) == 0)
    {
LABEL_6:
      if (a22 < 0)
        operator delete(a17);
      _Unwind_Resume(a1);
    }
  }
  else if (!v23)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v22);
  goto LABEL_6;
}

void sub_20FF58858()
{
  uint64_t *v0[3];
  _QWORD v1[3];

  v1[0] = &unk_2103F2810;
  v1[2] = &unk_2103F2810;
  v0[0] = (uint64_t *)&xmmword_2103F2950;
  v0[2] = (uint64_t *)&xmmword_2103F2950;
  qword_254A6DC98 = 0;
  qword_254A6DC90 = 0;
  qword_254A6DC88 = (uint64_t)&qword_254A6DC90;
  sub_20FF6055C((_QWORD **)&qword_254A6DC88, (uint64_t)v1, v0);
}

void sub_20FF588BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E866BE0(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_20FF588D4(uint64_t a1)
{
  sub_20E866BE0(a1, *(char **)(a1 + 8));
  return a1;
}

uint64_t sub_20FF588FC(char *__s, const char *a2, const char *a3, uint64_t *a4)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  _DWORD v11[6];
  int v12;
  _QWORD **v13;
  const char *v14;
  _DWORD *v15;
  const char *v16;
  const char *v17;
  _QWORD *v18;

  v12 = 0;
  sub_20E8F8738(v11, __s);
  v13 = (_QWORD **)v11;
  v14 = a2;
  v15 = v11;
  v16 = a2;
  v17 = a2;
  if (v12 == -1)
    sub_20E877AB8();
  v18 = &v13;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F570[v12])(&v18, v11);
  v13 = (_QWORD **)v11;
  v14 = a3;
  v15 = v11;
  v16 = a3;
  v17 = a3;
  if (v12 == -1)
    sub_20E877AB8();
  v18 = &v13;
  ((void (*)(_QWORD **, _DWORD *))off_24CA0F588[v12])(&v18, v11);
  if (*a4 <= 0)
  {
    v13 = (_QWORD **)v11;
    v14 = "{}";
    v15 = v11;
    v16 = "{}";
    v17 = "{}";
    if (v12 == -1)
      goto LABEL_16;
    v18 = &v13;
    ((void (*)(_QWORD **, _DWORD *))off_24CA0F5A0[v12])(&v18, v11);
  }
  else
  {
    v13 = (_QWORD **)v11;
    v14 = "{";
    v15 = v11;
    v16 = "{";
    v17 = "{";
    if (v12 == -1)
      goto LABEL_16;
    v18 = &v13;
    ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v12])(&v18, v11);
    v7 = (uint64_t *)a4[1];
    sub_20FDE6C20((uint64_t)&v13, (uint64_t)v11, v7);
    v8 = a4[1] + 8 * *a4;
    v9 = v7 + 1;
    if (v7 + 1 != (uint64_t *)v8)
    {
      while (1)
      {
        v13 = (_QWORD **)v11;
        v14 = ",";
        v15 = v11;
        v16 = ",";
        v17 = ",";
        if (v12 == -1)
          break;
        v18 = &v13;
        ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v12])(&v18, v11);
        sub_20FDE6C20((uint64_t)&v13, (uint64_t)v11, v9++);
        if (v9 == (uint64_t *)v8)
          goto LABEL_8;
      }
LABEL_16:
      sub_20E877AB8();
    }
LABEL_8:
    v13 = (_QWORD **)v11;
    v14 = "}";
    v15 = v11;
    v16 = "}";
    v17 = "}";
    if (v12 == -1)
      goto LABEL_16;
    v18 = &v13;
    ((void (*)(_QWORD **, _DWORD *))off_24CA0F5B8[v12])(&v18, v11);
  }
  if (v12 == -1)
    sub_20E877AB8();
  v13 = &v18;
  result = ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0F558[v12])(&v13, v11);
  if (v12 != -1)
    return ((uint64_t (*)(_QWORD ***, _DWORD *))off_24CA0F540[v12])(&v13, v11);
  return result;
}

void sub_20FF58B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58BD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF58C10(int a1)
{
  std::logic_error *exception;
  std::string v3;
  unsigned __int16 v4;

  v4 = a1;
  if ((a1 - 2) >= 5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF58CE8("Invalid serialization format type: ", &v4);
    std::logic_error::logic_error(exception, &v3);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  return (unsigned __int16)(a1 - 2) + 1;
}

void sub_20FF58CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  void *v14;
  int v15;

  if (a14 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v14);
  goto LABEL_6;
}

uint64_t sub_20FF58CE8(char *__s, unsigned __int16 *a2)
{
  uint64_t result;
  _DWORD v4[6];
  int v5;
  char v6;
  char *v7;

  v5 = 0;
  sub_20E878B5C(v4, __s);
  sub_20FDE696C((uint64_t)&v7, (uint64_t)v4, a2);
  if (v5 == -1)
    sub_20E877AB8();
  v7 = &v6;
  result = ((uint64_t (*)(char **, _DWORD *))off_24CA0F558[v5])(&v7, v4);
  if (v5 != -1)
    return ((uint64_t (*)(char **, _DWORD *))off_24CA0F540[v5])(&v7, v4);
  return result;
}

void sub_20FF58D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_20E877A60((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_20FF58DCC(const void *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;

  v4 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA0F5D0, 0);
  if (v4)
  {
    v16 = v4;
    sub_20FF61028(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
  }
  else
  {
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24C9B0410, 0);
    if (v5)
    {
      v16 = v5;
      sub_20FF7B7AC(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
    }
    else
    {
      v6 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA06648, 0);
      if (v6)
      {
        v16 = v6;
        sub_20FF83108(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
      }
      else
      {
        v7 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA0F608, 0);
        if (v7)
        {
          v16 = v7;
          sub_20FF8AA64(*(_DWORD *)(a2 + 56), &v16, a2);
        }
        else
        {
          v8 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA09258, 0);
          if (v8)
          {
            v16 = v8;
            sub_20FF9535C(*(_DWORD *)(a2 + 56), &v16, a2);
          }
          else
          {
            v9 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA06418, 0);
            if (v9)
            {
              v16 = v9;
              sub_20FF9FC54(*(_DWORD *)(a2 + 56), &v16, a2);
            }
            else
            {
              v10 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA0F640, 0);
              if (v10)
              {
                v16 = v10;
                sub_20FFAA54C(*(_DWORD *)(a2 + 56), &v16, a2);
              }
              else
              {
                v11 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA09220, 0);
                if (v11)
                {
                  v16 = v11;
                  sub_20FFB4E44(*(_DWORD *)(a2 + 56), &v16, a2);
                }
                else
                {
                  v12 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA0F678, 0);
                  if (v12)
                  {
                    v16 = v12;
                    sub_20FFBF73C(*(_DWORD *)(a2 + 56), &v16, a2);
                  }
                  else
                  {
                    v13 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA0F6B0, 0);
                    if (v13)
                    {
                      v16 = v13;
                      sub_20FFCA034(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
                    }
                    else
                    {
                      v14 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA09290, 0);
                      if (v14)
                      {
                        v16 = v14;
                        sub_20FFD17F0(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
                      }
                      else
                      {
                        v15 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6CE8, (const struct __class_type_info *)&unk_24CA0F6F8, 0);
                        if (v15)
                        {
                          v16 = v15;
                          sub_20FFD8FAC(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
                        }
                        else
                        {
                          v16 = (uint64_t *)a1;
                          sub_20FFE0768(*(_DWORD *)(a2 + 56), (uint64_t *)&v16, a2);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_20FF59134(const void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24C9C4868, 0);
  if (v4)
  {
    v16 = v4;
    sub_20FFE82C0(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
  }
  else
  {
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24C9B45D8, 0);
    if (v5)
    {
      v16 = v5;
      sub_20FFFF23C(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
    }
    else
    {
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24CA068F8, 0);
      if (v6)
      {
        v16 = v6;
        sub_210007AC8(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
      }
      else
      {
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24C9C5520, 0);
        if (v7)
        {
          v16 = v7;
          sub_210010354(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
        }
        else
        {
          v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24CA09150, 0);
          if (v8)
          {
            v16 = v8;
            sub_21001A3FC(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
          }
          else
          {
            v9 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24CA068C0, 0);
            if (v9)
            {
              v16 = v9;
              sub_2100244A4(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
            }
            else
            {
              v10 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24CA0F730, 0);
              if (v10)
              {
                v16 = v10;
                sub_21002E54C(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
              }
              else
              {
                v11 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24CA09118, 0);
                if (v11)
                {
                  v16 = v11;
                  sub_2100385F4(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                }
                else
                {
                  v12 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24CA0F768, 0);
                  if (v12)
                  {
                    v16 = v12;
                    sub_21004269C(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                  }
                  else
                  {
                    v13 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24C9EF808, 0);
                    if (v13)
                    {
                      v16 = v13;
                      sub_21004C744(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                    }
                    else
                    {
                      v14 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24CA09198, 0);
                      if (v14)
                      {
                        v16 = v14;
                        sub_210054828(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                      }
                      else
                      {
                        v15 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C9B6D00, (const struct __class_type_info *)&unk_24CA0F7A0, 0);
                        if (v15)
                        {
                          v16 = v15;
                          sub_21005C90C(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                        }
                        else
                        {
                          v16 = (void *)a1;
                          sub_2100649F0(*(_DWORD *)(a2 + 48), (uint64_t *)&v16, a2);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_20FF5949C(int a1)
{
  __asm { BR              X10 }
}

void sub_20FF594CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  std::__shared_weak_count *v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;

  v14[0] = *(_QWORD *)(*(_QWORD *)a2 + 8);
  v14[1] = &off_24C9E4010;
  sub_20ED5BAEC(v14, (uint64_t)&v15);
  *(_QWORD *)v2 = &off_24C9FC408;
  v3 = v15;
  v4 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v7 = v16;
  }
  else
  {
    v7 = 0;
  }
  v8 = v21;
  if (v18)
    v9 = v17 | 0x100000000;
  else
    v9 = 0;
  v10 = v20;
  v11 = v19;
  *(_QWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v9;
  *(_QWORD *)(v2 + 32) = v10;
  *(_DWORD *)(v2 + 40) = v8;
  *(_QWORD *)(v2 + 48) = v11;
  *(_DWORD *)(v2 + 56) = 1;
  *(_WORD *)(v2 + 60) = 256;
  if (v7)
  {
    v12 = (unint64_t *)&v7->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_20FF59F28()
{
  sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_21023DDB0);
  abort();
}

uint64_t sub_20FF59F5C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF59FC4(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void (*v12)();
  unint64_t v13;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  _QWORD v19[2];

  LODWORD(v3) = *a2;
  v4 = *a2 != 0;
  if (a2[1])
    v3 = v3;
  else
    v3 = 0;
  v19[0] = *(_QWORD *)a2;
  v19[1] = v4 | (v3 << 32);
  sub_210133A40((uint64_t)&v14, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_24CA18948;
  v7 = v17;
  *(_DWORD *)(v5 + 8) = v15;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    *(_OWORD *)(v5 + 48) = v18;
    *(_QWORD *)v5 = off_24CA18EE8;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_24CA0E878[v7])(v19, v5 + 16, v16);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v17;
    *(_OWORD *)(v6 + 48) = v18;
    *(_QWORD *)v6 = off_24CA18EE8;
    v14 = off_24CA18948;
    if ((_DWORD)v8 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_24CA19938[v8])(v19, v16);
  }
  v9 = (std::__shared_weak_count *)operator new();
  v9->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0F7E8;
  v9->__shared_weak_owners_ = 0;
  v9[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v9;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(&v14, v6, 2);
  v12 = v14[2];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v14;
  *(_QWORD *)(a1 + 40) = v12;
  v14 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
}

void sub_20FF5A26C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v6;
  uint64_t v7;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  sub_20E86665C(v2);
  do
    v6 = __ldaxr(v4);
  while (__stlxr(v6 - 1, v4));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_20E86665C((uint64_t)va1);
  sub_20FF5A3F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20FF5A2BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20FF5A3F0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20FF5A2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_210129258((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF5A2E4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5A34C()
{
  return 2;
}

uint64_t sub_20FF5A354(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_20FF5A35C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 64);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 76);
  return result;
}

uint64_t sub_20FF5A374(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5A3F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18948;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40A1F8E8FFLL);
  }
  return a1;
}

void sub_20FF5A47C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5A4A0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18948;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5A528(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE2EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5A598(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5A600(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void (*v12)();
  unint64_t v13;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  _QWORD v19[2];

  LODWORD(v3) = *a2;
  v4 = *a2 != 0;
  if (a2[1])
    v3 = v3;
  else
    v3 = 0;
  v19[0] = *(_QWORD *)a2;
  v19[1] = v4 | (v3 << 32);
  sub_21013529C((uint64_t)&v14, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_24CA18AF8;
  v7 = v17;
  *(_DWORD *)(v5 + 8) = v15;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    *(_OWORD *)(v5 + 48) = v18;
    *(_QWORD *)v5 = off_24CA18F78;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_24CA0E878[v7])(v19, v5 + 16, v16);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v17;
    *(_OWORD *)(v6 + 48) = v18;
    *(_QWORD *)v6 = off_24CA18F78;
    v14 = off_24CA18AF8;
    if ((_DWORD)v8 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_24CA19938[v8])(v19, v16);
  }
  v9 = (std::__shared_weak_count *)operator new();
  v9->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0F838;
  v9->__shared_weak_owners_ = 0;
  v9[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v9;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(&v14, v6, 3);
  v12 = v14[2];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v14;
  *(_QWORD *)(a1 + 40) = v12;
  v14 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
}

void sub_20FF5A8A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v6;
  uint64_t v7;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  sub_20E86665C(v2);
  do
    v6 = __ldaxr(v4);
  while (__stlxr(v6 - 1, v4));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_20E86665C((uint64_t)va1);
  sub_20FF5AA2C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20FF5A8F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20FF5AA2C((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20FF5A90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_21012C468((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF5A920(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5A988()
{
  return 3;
}

uint64_t sub_20FF5A990(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_20FF5A998@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 64);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 76);
  return result;
}

uint64_t sub_20FF5A9B0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5AA2C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18AF8;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40A1F8E8FFLL);
  }
  return a1;
}

void sub_20FF5AAB8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5AADC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18AF8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5AB64(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE3EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5ABD4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5AC3C(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void (*v12)();
  unint64_t v13;
  void (**v14)();
  int v15;
  _BYTE v16[24];
  unsigned int v17;
  __int128 v18;
  _QWORD v19[2];

  LODWORD(v3) = *a2;
  v4 = *a2 != 0;
  if (a2[1])
    v3 = v3;
  else
    v3 = 0;
  v19[0] = *(_QWORD *)a2;
  v19[1] = v4 | (v3 << 32);
  sub_210136B00((uint64_t)&v14, (uint64_t)v19);
  v5 = operator new();
  v6 = v5;
  *(_QWORD *)v5 = off_24CA18CA8;
  v7 = v17;
  *(_DWORD *)(v5 + 8) = v15;
  *(_BYTE *)(v5 + 16) = 0;
  *(_DWORD *)(v5 + 40) = -1;
  if ((_DWORD)v7 == -1)
  {
    *(_OWORD *)(v5 + 48) = v18;
    *(_QWORD *)v5 = off_24CA19008;
  }
  else
  {
    ((void (*)(_QWORD *, uint64_t, _BYTE *))off_24CA0E878[v7])(v19, v5 + 16, v16);
    *(_DWORD *)(v6 + 40) = v7;
    v8 = v17;
    *(_OWORD *)(v6 + 48) = v18;
    *(_QWORD *)v6 = off_24CA19008;
    v14 = off_24CA18CA8;
    if ((_DWORD)v8 != -1)
      ((void (*)(_QWORD *, _BYTE *))off_24CA19938[v8])(v19, v16);
  }
  v9 = (std::__shared_weak_count *)operator new();
  v9->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v9->__shared_owners_;
  v9->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0F888;
  v9->__shared_weak_owners_ = 0;
  v9[1].__vftable = (std::__shared_weak_count_vtbl *)v6;
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v9;
  do
    v11 = __ldxr(p_shared_owners);
  while (__stxr(v11 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v6 + 64))(&v14, v6, 4);
  v12 = v14[2];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v14;
  *(_QWORD *)(a1 + 40) = v12;
  v14 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a1 + 32);
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
}

void sub_20FF5AEE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *v4;
  unint64_t v6;
  uint64_t v7;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v7 = va_arg(va1, _QWORD);
  sub_20E86665C(v2);
  do
    v6 = __ldaxr(v4);
  while (__stlxr(v6 - 1, v4));
  if (!v6)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  sub_20E86665C((uint64_t)va1);
  sub_20FF5B068((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20FF5AF34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_20FF5B068((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_20FF5AF48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_21012F4E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_20FF5AF5C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5AFC4()
{
  return 4;
}

uint64_t sub_20FF5AFCC(uint64_t a1)
{
  return a1 + 64;
}

uint64_t sub_20FF5AFD4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 64);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 76);
  return result;
}

uint64_t sub_20FF5AFEC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5B068(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18CA8;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40A1F8E8FFLL);
  }
  return a1;
}

void sub_20FF5B0F4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5B118(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18CA8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5B1A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE4EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5B210(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5B278(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v3 = 2 * (*a2 != 0);
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 2;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 & 0x1FFFFFFFFLL | ((unint64_t)(v4 >> 1) << 33);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_21013835C((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA18798;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA19098;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA19098;
    v19 = off_24CA18798;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0F8D8;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 5);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5B5A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5B640(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5B6A8()
{
  return 5;
}

uint64_t sub_20FF5B6B0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5B6B8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5B6CC(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5B748(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18798;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5B7D4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5B7F8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18798;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5B880(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE5EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5B8F0(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5B958(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v3 = 2 * (*a2 != 0);
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 2;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 & 0x1FFFFFFFFLL | ((unint64_t)(v4 >> 1) << 33);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_210139DA0((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA18B88;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA19128;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA19128;
    v19 = off_24CA18B88;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0F928;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 7);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5BC84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5BD20(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5BD88()
{
  return 7;
}

uint64_t sub_20FF5BD90(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5BD98@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5BDB0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5BE2C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18B88;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5BEB8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5BEDC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18B88;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5BF64(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE7EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5BFD4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5C03C(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v3 = 2 * (*a2 != 0);
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 2;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 & 0x1FFFFFFFFLL | ((unint64_t)(v4 >> 1) << 33);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_21013B7E4((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA18D38;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA191B8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA191B8;
    v19 = off_24CA18D38;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0F978;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 8);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5C368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5C404(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5C46C()
{
  return 8;
}

uint64_t sub_20FF5C474(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5C47C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5C494(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5C510(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18D38;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5C59C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5C5C0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18D38;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5C648(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE8EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5C6B8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5C720(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  if (*a2)
    v3 = 3;
  else
    v3 = 0;
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 3;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 | (v4 << 32);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_21013D228((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA18828;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA19248;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA19248;
    v19 = off_24CA18828;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0F9C8;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 21);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5CA44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5CAE0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5CB48()
{
  return 21;
}

uint64_t sub_20FF5CB50(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5CB58@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5CB6C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5CBE8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18828;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5CC74(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5CC98(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18828;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5CD20(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE21EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5CD90(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5CDF8(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  if (*a2)
    v3 = 3;
  else
    v3 = 0;
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 3;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 | (v4 << 32);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_21013ED44((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA189D8;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA192D8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA192D8;
    v19 = off_24CA189D8;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0FA18;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 22);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5D11C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5D1B8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5D220()
{
  return 22;
}

uint64_t sub_20FF5D228(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5D230@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5D248(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5D2C4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA189D8;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5D350(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5D374(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA189D8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5D3FC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE22EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5D46C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5D4D4(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a2 != 0);
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 4;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v4 >> 2) << 34);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_210140880((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA188B8;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA19368;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA19368;
    v19 = off_24CA188B8;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0FA68;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 25);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5D800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5D89C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5D904()
{
  return 25;
}

uint64_t sub_20FF5D90C(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5D914@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5D928(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5D9A4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA188B8;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5DA30(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5DA54(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA188B8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5DADC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE25EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5DB4C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5DBB4(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a2 != 0);
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 4;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v4 >> 2) << 34);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_21014230C((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA18C18;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA193F8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA193F8;
    v19 = off_24CA18C18;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0FAB8;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 31);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5DEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5DF7C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5DFE4()
{
  return 31;
}

uint64_t sub_20FF5DFEC(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5DFF4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5E00C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5E088(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18C18;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5E114(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5E138(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18C18;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5E1C0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE31EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5E230(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5E298(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a2 != 0);
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 4;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v4 >> 2) << 34);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_210143D50((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA18DC8;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA19488;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA19488;
    v19 = off_24CA18DC8;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0FB08;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 32);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5E5C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5E660(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5E6C8()
{
  return 32;
}

uint64_t sub_20FF5E6D0(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5E6D8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5E6F0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5E76C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18DC8;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5E7F8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5E81C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18DC8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5E8A4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE32EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5E914(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5E97C(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a2 != 0);
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 4;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v4 >> 2) << 34);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_2101457D0((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA188B8;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA19518;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA19518;
    v19 = off_24CA188B8;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0FB58;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 37);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5ECA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5ED44(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5EDAC()
{
  return 37;
}

uint64_t sub_20FF5EDB4(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5EDBC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5EDD0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5EE4C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA188B8;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5EED8(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5EEFC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA188B8;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5EF84(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE37EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t sub_20FF5EFF4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF5F05C(uint64_t a1, _DWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  void (**v19)();
  int v20;
  _BYTE v21[24];
  unsigned int v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD v26[3];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[3];

  v31[2] = *MEMORY[0x24BDAC8D0];
  v3 = 4 * (*a2 != 0);
  LODWORD(v4) = v3 * *a2;
  if (a2[1])
    v4 = v4;
  else
    v4 = 0;
  v26[0] = 4;
  v5 = *(_QWORD *)a2;
  v26[1] = *(_QWORD *)a2;
  v26[2] = HIDWORD(v5);
  LODWORD(v31[0]) = 1;
  *(_QWORD *)((char *)v31 + 4) = v3 & 0x3FFFFFFFFLL | ((unint64_t)(v4 >> 2) << 34);
  v27 = v31[0];
  v28 = v4;
  v29 = v5;
  v30 = *(_QWORD *)((char *)v31 + 4);
  sub_21014725C((uint64_t)&v19, (uint64_t)v26);
  v6 = operator new();
  v7 = v6;
  *(_QWORD *)v6 = off_24CA18A68;
  v8 = v22;
  *(_DWORD *)(v6 + 8) = v20;
  *(_BYTE *)(v6 + 16) = 0;
  *(_DWORD *)(v6 + 40) = -1;
  if ((_DWORD)v8 == -1)
  {
    v11 = v24;
    *(_OWORD *)(v6 + 48) = v23;
    *(_OWORD *)(v6 + 64) = v11;
    *(_QWORD *)(v6 + 80) = v25;
    *(_QWORD *)v6 = off_24CA195A8;
  }
  else
  {
    ((void (*)(_DWORD *, uint64_t, _BYTE *))off_24CA0E878[v8])(v26, v6 + 16, v21);
    *(_DWORD *)(v7 + 40) = v8;
    v9 = v22;
    v10 = v24;
    *(_OWORD *)(v7 + 48) = v23;
    *(_OWORD *)(v7 + 64) = v10;
    *(_QWORD *)(v7 + 80) = v25;
    *(_QWORD *)v7 = off_24CA195A8;
    v19 = off_24CA18A68;
    if ((_DWORD)v9 != -1)
      ((void (*)(_DWORD *, _BYTE *))off_24CA19938[v9])(v26, v21);
  }
  v12 = (std::__shared_weak_count *)operator new();
  v12->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v12->__shared_owners_;
  v12->__vftable = (std::__shared_weak_count_vtbl *)&off_24CA0FBA8;
  v12->__shared_weak_owners_ = 0;
  v12[1].__vftable = (std::__shared_weak_count_vtbl *)v7;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v12;
  do
    v14 = __ldxr(p_shared_owners);
  while (__stxr(v14 + 1, p_shared_owners));
  *(_QWORD *)(a1 + 16) = 0;
  (*(void (**)(void (***__return_ptr)(), uint64_t, uint64_t))(*(_QWORD *)v7 + 64))(&v19, v7, 38);
  v16 = *((_OWORD *)v19 + 1);
  v15 = *((_OWORD *)v19 + 2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v19;
  *(_OWORD *)(a1 + 40) = v16;
  *(_OWORD *)(a1 + 56) = v15;
  v19 = 0;
  MEMORY[0x212BC6398]();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a1 + 24);
  v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 96) = v17;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a1 + 64);
  do
    v18 = __ldaxr(p_shared_owners);
  while (__stlxr(v18 - 1, p_shared_owners));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
}

void sub_20FF5F388(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12)
{
  if (a2)
    sub_20E860DA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_20FF5F424(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5F48C()
{
  return 38;
}

uint64_t sub_20FF5F494(uint64_t a1)
{
  return a1 + 112;
}

uint64_t sub_20FF5F49C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 92);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 108);
  return result;
}

uint64_t sub_20FF5F4B4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    return v1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldxr(p_shared_owners);
  while (__stxr(v4 + 1, p_shared_owners));
  do
    v5 = __ldaxr(p_shared_owners);
  while (__stlxr(v5 - 1, p_shared_owners));
  if (v5)
    return v1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return v1;
}

uint64_t *sub_20FF5F530(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char v5;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    *(_QWORD *)v2 = off_24CA18A68;
    v3 = *(unsigned int *)(v2 + 40);
    if ((_DWORD)v3 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v3])(&v5, v2 + 16);
    *(_DWORD *)(v2 + 40) = -1;
    MEMORY[0x212BC6398](v2, 0x10A3C40ED729E16);
  }
  return a1;
}

void sub_20FF5F5BC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF5F5E0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(result + 24);
  if (v1)
  {
    *(_QWORD *)v1 = off_24CA18A68;
    v2 = *(unsigned int *)(v1 + 40);
    if ((_DWORD)v2 != -1)
      ((void (*)(char *, uint64_t))off_24CA19938[v2])(&v3, v1 + 16);
    *(_DWORD *)(v1 + 40) = -1;
    JUMPOUT(0x212BC6398);
  }
  return result;
}

uint64_t sub_20FF5F668(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit2cv13CVImageBufferILNS2_3img6FormatE38EEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_20FF5F6D8(int a1)
{
  __asm { BR              X10 }
}

void sub_20FF5F708(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  std::__shared_weak_count *v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;

  v14[0] = *(_QWORD *)(*(_QWORD *)a2 + 8);
  v14[1] = &off_24C9E4010;
  sub_20ED5BAEC(v14, (uint64_t)&v15);
  *(_QWORD *)v2 = &off_24C9FC408;
  v3 = v15;
  v4 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v7 = v16;
  }
  else
  {
    v7 = 0;
  }
  v8 = v21;
  if (v18)
    v9 = v17 | 0x100000000;
  else
    v9 = 0;
  v10 = v20;
  v11 = v19;
  *(_QWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 24) = v9;
  *(_QWORD *)(v2 + 32) = v10;
  *(_DWORD *)(v2 + 40) = v8;
  *(_QWORD *)(v2 + 48) = v11;
  *(_DWORD *)(v2 + 56) = 1;
  *(_WORD *)(v2 + 60) = 256;
  if (v7)
  {
    v12 = (unint64_t *)&v7->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_20FF60164()
{
  sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_21023DDB0);
  abort();
}

void sub_20FF60198(_QWORD **a1, uint64_t a2, unsigned __int16 **a3)
{
  unsigned __int16 *v4;
  unsigned __int16 *v5;
  unsigned __int16 *v6;
  BOOL v7;
  _QWORD *v9;
  _WORD *v10;
  void *v11;
  size_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  int v20;
  const void *v21;
  size_t v22;
  const void *v23;
  size_t v24;
  size_t v25;
  int v26;
  _QWORD *v27;
  size_t v28;
  size_t v29;
  const void *v30;
  size_t v31;
  size_t v32;
  int v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  unsigned __int16 **v38;
  _QWORD *v39;
  void *v40;
  _BYTE v41[15];
  unsigned __int8 v42;
  _BYTE v43[24];
  int v44;
  char v45;
  _QWORD v46[2];
  _QWORD v47[3];

  v47[2] = *MEMORY[0x24BDAC8D0];
  v4 = *(unsigned __int16 **)a2;
  v5 = *a3;
  v38 = a3;
  v6 = a3[2];
  v7 = *(unsigned __int16 **)a2 == v5 && *(_QWORD *)(a2 + 16) == (_QWORD)v6;
  if (!v7)
  {
    v9 = a1;
    v39 = a1 + 1;
    do
    {
      v44 = 0;
      sub_20FDE696C((uint64_t)v46, (uint64_t)v43, v4);
      if (v44 == -1)
        sub_20E877AB8();
      v46[0] = &v45;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24CA0F558[v44])(&v40, v46, v43);
      if (v44 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24CA0F540[v44])(v46, v43);
      v10 = *(_WORD **)(a2 + 16);
      v11 = v40;
      v47[0] = *(_QWORD *)v41;
      *(_QWORD *)((char *)v47 + 7) = *(_QWORD *)&v41[7];
      v12 = v42;
      v13 = (char)v42;
      v14 = operator new(0x40uLL);
      v14[4] = v11;
      v14[5] = v47[0];
      *(_QWORD *)((char *)v14 + 47) = *(_QWORD *)((char *)v47 + 7);
      *((_BYTE *)v14 + 55) = v13;
      v47[0] = 0;
      *(_QWORD *)((char *)v47 + 7) = 0;
      *((_WORD *)v14 + 28) = *v10;
      v15 = v9[1];
      v16 = v39;
      v17 = v39;
      if ((_QWORD *)*v9 != v39)
      {
        v18 = (_QWORD *)v9[1];
        v19 = v39;
        if (v15)
        {
          do
          {
            v17 = v18;
            v18 = (_QWORD *)v18[1];
          }
          while (v18);
        }
        else
        {
          do
          {
            v17 = (_QWORD *)v19[2];
            v7 = *v17 == (_QWORD)v19;
            v19 = v17;
          }
          while (v7);
        }
        v20 = *((char *)v17 + 55);
        if (v20 >= 0)
          v21 = v17 + 4;
        else
          v21 = (const void *)v17[4];
        if (v20 >= 0)
          v22 = *((unsigned __int8 *)v17 + 55);
        else
          v22 = v17[5];
        if (v13 >= 0)
          v23 = v14 + 4;
        else
          v23 = v11;
        if (v13 >= 0)
          v24 = v12;
        else
          v24 = v14[5];
        if (v24 >= v22)
          v25 = v22;
        else
          v25 = v24;
        v26 = memcmp(v21, v23, v25);
        if (v26)
        {
          v16 = v39;
          if ((v26 & 0x80000000) == 0)
            goto LABEL_31;
        }
        else
        {
          v16 = v39;
          if (v22 >= v24)
          {
LABEL_31:
            v27 = v16;
            v17 = v16;
            if (!v15)
              goto LABEL_60;
            while (1)
            {
              v17 = (_QWORD *)v15;
              v28 = *(unsigned __int8 *)(v15 + 55);
              v29 = *(_QWORD *)(v15 + 40);
              if ((v28 & 0x80u) == 0)
                v30 = (const void *)(v15 + 32);
              else
                v30 = *(const void **)(v15 + 32);
              if ((v28 & 0x80u) == 0)
                v31 = v28;
              else
                v31 = v29;
              if (v31 >= v24)
                v32 = v24;
              else
                v32 = v31;
              v33 = memcmp(v23, v30, v32);
              if (v33)
              {
                if (v33 < 0)
                  goto LABEL_33;
              }
              else if (v24 < v31)
              {
LABEL_33:
                v15 = *v17;
                v27 = v17;
                if (!*v17)
                  goto LABEL_60;
                continue;
              }
              v34 = memcmp(v30, v23, v32);
              if (v34)
              {
                if ((v34 & 0x80000000) == 0)
                  goto LABEL_57;
              }
              else if (v31 >= v24)
              {
                goto LABEL_57;
              }
              v15 = v17[1];
              if (!v15)
              {
                v27 = v17 + 1;
                goto LABEL_60;
              }
            }
          }
        }
      }
      v27 = v17 + 1;
      if (!v15)
      {
        v17 = v16;
        v27 = v16;
      }
      if (*v27)
      {
LABEL_57:
        if (v13 < 0)
          operator delete(v11);
        operator delete(v14);
        v9 = a1;
        goto LABEL_63;
      }
LABEL_60:
      *v14 = 0;
      v14[1] = 0;
      v14[2] = v17;
      *v27 = v14;
      v9 = a1;
      v35 = (_QWORD *)**a1;
      if (v35)
      {
        *a1 = v35;
        v14 = (_QWORD *)*v27;
      }
      sub_20E868578(a1[1], v14);
      a1[2] = (_QWORD *)((char *)a1[2] + 1);
LABEL_63:
      v4 = (unsigned __int16 *)(*(_QWORD *)a2 + 2);
      *(_QWORD *)a2 = v4;
      v36 = *(_QWORD *)(a2 + 16) + 2;
      *(_QWORD *)(a2 + 16) = v36;
    }
    while (v4 != *v38 || (unsigned __int16 *)v36 != v38[2]);
  }
}

void sub_20FF604F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, int a20)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20E860DA4(exception_object);
}

void sub_20FF6055C(_QWORD **a1, uint64_t a2, uint64_t **a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  BOOL v7;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  size_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  int v20;
  const void *v21;
  size_t v22;
  const void *v23;
  size_t v24;
  size_t v25;
  int v26;
  _QWORD *v27;
  size_t v28;
  size_t v29;
  const void *v30;
  size_t v31;
  size_t v32;
  int v33;
  int v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t **v38;
  _QWORD *v39;
  void *v40;
  _BYTE v41[15];
  unsigned __int8 v42;
  _BYTE v43[24];
  int v44;
  char v45;
  _QWORD v46[2];
  _QWORD v47[3];

  v47[2] = *MEMORY[0x24BDAC8D0];
  v4 = *(uint64_t **)a2;
  v5 = *a3;
  v38 = a3;
  v6 = a3[2];
  v7 = *(uint64_t **)a2 == v5 && *(_QWORD *)(a2 + 16) == (_QWORD)v6;
  if (!v7)
  {
    v9 = a1;
    v39 = a1 + 1;
    do
    {
      v44 = 0;
      sub_20FDE6C20((uint64_t)v46, (uint64_t)v43, v4);
      if (v44 == -1)
        sub_20E877AB8();
      v46[0] = &v45;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24CA0F558[v44])(&v40, v46, v43);
      if (v44 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24CA0F540[v44])(v46, v43);
      v10 = *(_QWORD **)(a2 + 16);
      v11 = v40;
      v47[0] = *(_QWORD *)v41;
      *(_QWORD *)((char *)v47 + 7) = *(_QWORD *)&v41[7];
      v12 = v42;
      v13 = (char)v42;
      v14 = operator new(0x40uLL);
      v14[4] = v11;
      v14[5] = v47[0];
      *(_QWORD *)((char *)v14 + 47) = *(_QWORD *)((char *)v47 + 7);
      *((_BYTE *)v14 + 55) = v13;
      v47[0] = 0;
      *(_QWORD *)((char *)v47 + 7) = 0;
      v14[7] = *v10;
      v15 = v9[1];
      v16 = v39;
      v17 = v39;
      if ((_QWORD *)*v9 != v39)
      {
        v18 = (_QWORD *)v9[1];
        v19 = v39;
        if (v15)
        {
          do
          {
            v17 = v18;
            v18 = (_QWORD *)v18[1];
          }
          while (v18);
        }
        else
        {
          do
          {
            v17 = (_QWORD *)v19[2];
            v7 = *v17 == (_QWORD)v19;
            v19 = v17;
          }
          while (v7);
        }
        v20 = *((char *)v17 + 55);
        if (v20 >= 0)
          v21 = v17 + 4;
        else
          v21 = (const void *)v17[4];
        if (v20 >= 0)
          v22 = *((unsigned __int8 *)v17 + 55);
        else
          v22 = v17[5];
        if (v13 >= 0)
          v23 = v14 + 4;
        else
          v23 = v11;
        if (v13 >= 0)
          v24 = v12;
        else
          v24 = v14[5];
        if (v24 >= v22)
          v25 = v22;
        else
          v25 = v24;
        v26 = memcmp(v21, v23, v25);
        if (v26)
        {
          v16 = v39;
          if ((v26 & 0x80000000) == 0)
            goto LABEL_31;
        }
        else
        {
          v16 = v39;
          if (v22 >= v24)
          {
LABEL_31:
            v27 = v16;
            v17 = v16;
            if (!v15)
              goto LABEL_60;
            while (1)
            {
              v17 = (_QWORD *)v15;
              v28 = *(unsigned __int8 *)(v15 + 55);
              v29 = *(_QWORD *)(v15 + 40);
              if ((v28 & 0x80u) == 0)
                v30 = (const void *)(v15 + 32);
              else
                v30 = *(const void **)(v15 + 32);
              if ((v28 & 0x80u) == 0)
                v31 = v28;
              else
                v31 = v29;
              if (v31 >= v24)
                v32 = v24;
              else
                v32 = v31;
              v33 = memcmp(v23, v30, v32);
              if (v33)
              {
                if (v33 < 0)
                  goto LABEL_33;
              }
              else if (v24 < v31)
              {
LABEL_33:
                v15 = *v17;
                v27 = v17;
                if (!*v17)
                  goto LABEL_60;
                continue;
              }
              v34 = memcmp(v30, v23, v32);
              if (v34)
              {
                if ((v34 & 0x80000000) == 0)
                  goto LABEL_57;
              }
              else if (v31 >= v24)
              {
                goto LABEL_57;
              }
              v15 = v17[1];
              if (!v15)
              {
                v27 = v17 + 1;
                goto LABEL_60;
              }
            }
          }
        }
      }
      v27 = v17 + 1;
      if (!v15)
      {
        v17 = v16;
        v27 = v16;
      }
      if (*v27)
      {
LABEL_57:
        if (v13 < 0)
          operator delete(v11);
        operator delete(v14);
        v9 = a1;
        goto LABEL_63;
      }
LABEL_60:
      *v14 = 0;
      v14[1] = 0;
      v14[2] = v17;
      *v27 = v14;
      v9 = a1;
      v35 = (_QWORD *)**a1;
      if (v35)
      {
        *a1 = v35;
        v14 = (_QWORD *)*v27;
      }
      sub_20E868578(a1[1], v14);
      a1[2] = (_QWORD *)((char *)a1[2] + 1);
LABEL_63:
      v4 = (uint64_t *)(*(_QWORD *)a2 + 8);
      *(_QWORD *)a2 = v4;
      v36 = *(_QWORD *)(a2 + 16) + 8;
      *(_QWORD *)(a2 + 16) = v36;
    }
    while (v4 != *v38 || (uint64_t *)v36 != v38[2]);
  }
}

void sub_20FF608B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, int a20)
{
  if (!a2)
    _Unwind_Resume(exception_object);
  sub_20E860DA4(exception_object);
}

void sub_20FF60920(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unsigned __int8 v15;
  __int16 v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;

  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  v25 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v24 = v3;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(_DWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 56);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v24 = 0;
    v8 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(_DWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 56);
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v22;
  *(_DWORD *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = v9;
  if (v4)
  {
    if (v3)
    {
      v11 = (unint64_t *)&v3->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      do
        v13 = __ldaxr(v11);
      while (__stlxr(v13 - 1, v11));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
    if ((v14 & 0xFFFFFFu) <= 0x10000)
      v15 = 0;
    else
      v15 = v14;
    v16 = v14 & 0xFF00;
    if ((v14 & 0xFF0000) == 0)
      v16 = 0;
    v3 = v24;
    *(_WORD *)(a2 + 44) = v16 & 0xFF00 | v15;
    if (!v24)
      goto LABEL_28;
  }
  else
  {
    *(_WORD *)(a2 + 44) = 0;
    if (!v3)
      goto LABEL_28;
  }
  v17 = (unint64_t *)&v3->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    v19 = v25;
    if (!v25)
      return;
    goto LABEL_29;
  }
LABEL_28:
  v19 = v25;
  if (!v25)
    return;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldaxr(v20);
  while (__stlxr(v21 - 1, v20));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
}

void sub_20FF60AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  va_list va;
  uint64_t v10;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v5 = *(std::__shared_weak_count **)(v3 + 8);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_20E86665C((uint64_t)va);
  sub_20E86665C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20FF60B50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::__shared_weak_count *v3;
  uint64_t v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unsigned __int8 v15;
  __int16 v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  std::__shared_weak_count *v24;
  std::__shared_weak_count *v25;

  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  v25 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    v24 = v3;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v8 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(_DWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 56);
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
  }
  else
  {
    v24 = 0;
    v8 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 32);
    v23 = *(_DWORD *)(a1 + 40);
    v9 = *(_DWORD *)(a1 + 56);
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v22;
  *(_DWORD *)(a2 + 24) = v23;
  *(_QWORD *)(a2 + 32) = v8;
  *(_DWORD *)(a2 + 40) = v9;
  if (v4)
  {
    if (v3)
    {
      v11 = (unint64_t *)&v3->__shared_owners_;
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + 1, v11));
      do
        v13 = __ldaxr(v11);
      while (__stlxr(v13 - 1, v11));
      if (!v13)
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    v14 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 104))(v4);
    if ((v14 & 0xFFFFFFu) <= 0x10000)
      v15 = 0;
    else
      v15 = v14;
    v16 = v14 & 0xFF00;
    if ((v14 & 0xFF0000) == 0)
      v16 = 0;
    v3 = v24;
    *(_WORD *)(a2 + 44) = v16 & 0xFF00 | v15;
    if (!v24)
      goto LABEL_28;
  }
  else
  {
    *(_WORD *)(a2 + 44) = 0;
    if (!v3)
      goto LABEL_28;
  }
  v17 = (unint64_t *)&v3->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (!v18)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    v19 = v25;
    if (!v25)
      return;
    goto LABEL_29;
  }
LABEL_28:
  v19 = v25;
  if (!v25)
    return;
LABEL_29:
  v20 = (unint64_t *)&v19->__shared_owners_;
  do
    v21 = __ldaxr(v20);
  while (__stlxr(v21 - 1, v20));
  if (!v21)
  {
    ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
    std::__shared_weak_count::__release_weak(v19);
  }
}

void sub_20FF60D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  va_list va;
  uint64_t v10;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v5 = *(std::__shared_weak_count **)(v3 + 8);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  sub_20E86665C((uint64_t)va);
  sub_20E86665C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_20FF60D80()
{
  unsigned __int8 v0;
  std::string *v1;
  __int128 *v2;
  int64x2_t v3;
  int8x16_t v4;
  void *v5[3];
  void *v6[2];
  char v7;
  void *v8[2];
  char v9;
  void *__p;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A6C9D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A6C9D8))
  {
    sub_20E8610C0(v6, "Image");
    v1 = sub_20E8A46B4();
    sub_20FF60F70((uint64_t)v8, (uint64_t)v1);
    v2 = sub_20E8A41FC();
    sub_20FF60F70((uint64_t)&__p, (uint64_t)v2);
    sub_20E877C80(v5, (uint64_t)v8, 2uLL);
    sub_21023CE38((char *)v6, (uint64_t *)v5, &stru_254A6C9E0, v3, v4);
    sub_20E89FB98(v5);
    if (v11 < 0)
    {
      operator delete(__p);
      if ((v9 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v7 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A6C9E0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A6C9D8);
          return;
        }
LABEL_10:
        operator delete(v6[0]);
        goto LABEL_7;
      }
    }
    else if ((v9 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v8[0]);
    if ((v7 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
}

void sub_20FF60EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A6C9D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A6C9D8);
  _Unwind_Resume(a1);
}

void sub_20FF60F70(uint64_t a1, uint64_t a2)
{
  std::string __p;

  if (*(char *)(a2 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a2, *(_QWORD *)(a2 + 8));
  else
    __p = *(std::string *)a2;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6100C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF61028(int a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  unint64_t v195;
  std::__shared_weak_count *v196;
  unint64_t *v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  std::__shared_weak_count *v203;
  unint64_t *v204;
  unint64_t v205;
  unint64_t v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  std::__shared_weak_count *v214;
  unint64_t *v215;
  unint64_t v216;
  unint64_t v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  std::__shared_weak_count *v225;
  unint64_t *v226;
  unint64_t v227;
  unint64_t v228;
  std::__shared_weak_count *v229;
  unint64_t *v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  std::__shared_weak_count *v236;
  unint64_t *v237;
  unint64_t v238;
  unint64_t v239;
  std::__shared_weak_count *v240;
  unint64_t *v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  std::__shared_weak_count *v247;
  unint64_t *v248;
  unint64_t v249;
  unint64_t v250;
  std::__shared_weak_count *v251;
  unint64_t *v252;
  unint64_t v253;
  unint64_t v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  std::__shared_weak_count *v258;
  unint64_t *v259;
  unint64_t v260;
  unint64_t v261;
  std::__shared_weak_count *v262;
  unint64_t *v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  std::__shared_weak_count *v269;
  unint64_t *v270;
  unint64_t v271;
  unint64_t v272;
  std::__shared_weak_count *v273;
  unint64_t *v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  int v278;
  uint64_t v279;
  std::__shared_weak_count *v280;
  unint64_t *v281;
  unint64_t v282;
  unint64_t v283;
  std::__shared_weak_count *v284;
  unint64_t *v285;
  unint64_t v286;
  unint64_t v287;
  uint64_t v288;
  int v289;
  uint64_t v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  unint64_t v294;
  std::__shared_weak_count *v295;
  unint64_t *v296;
  unint64_t v297;
  unint64_t v298;
  uint64_t v299;
  int v300;
  uint64_t v301;
  std::__shared_weak_count *v302;
  unint64_t *v303;
  unint64_t v304;
  unint64_t v305;
  std::__shared_weak_count *v306;
  unint64_t *v307;
  unint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  std::__shared_weak_count *v312;
  unint64_t *v313;
  unint64_t v314;
  unint64_t v315;
  std::__shared_weak_count *v316;
  unint64_t *v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  std::__shared_weak_count *v322;
  unint64_t *v323;
  unint64_t v324;
  unint64_t v325;
  std::__shared_weak_count *v326;
  unint64_t *v327;
  unint64_t v328;
  unint64_t v329;
  uint64_t v330;
  int v331;
  uint64_t v332;
  std::__shared_weak_count *v333;
  unint64_t *v334;
  unint64_t v335;
  unint64_t v336;
  std::__shared_weak_count *v337;
  unint64_t *v338;
  unint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  std::__shared_weak_count *v343;
  unint64_t *v344;
  unint64_t v345;
  unint64_t v346;
  std::__shared_weak_count *v347;
  unint64_t *v348;
  unint64_t v349;
  unint64_t v350;
  uint64_t v351;
  int v352;
  uint64_t v353;
  std::__shared_weak_count *v354;
  unint64_t *v355;
  unint64_t v356;
  unint64_t v357;
  std::__shared_weak_count *v358;
  unint64_t *v359;
  unint64_t v360;
  unint64_t v361;
  uint64_t v362;
  int v363;
  uint64_t v364;
  std::__shared_weak_count *v365;
  unint64_t *v366;
  unint64_t v367;
  unint64_t v368;
  std::__shared_weak_count *v369;
  unint64_t *v370;
  unint64_t v371;
  unint64_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  std::__shared_weak_count *v376;
  unint64_t *v377;
  unint64_t v378;
  unint64_t v379;
  std::__shared_weak_count *v380;
  unint64_t *v381;
  unint64_t v382;
  unint64_t v383;
  uint64_t v384;
  int v385;
  uint64_t v386;
  std::__shared_weak_count *v387;
  unint64_t *v388;
  unint64_t v389;
  unint64_t v390;
  std::__shared_weak_count *v391;
  unint64_t *v392;
  unint64_t v393;
  unint64_t v394;
  uint64_t v395;
  int v396;
  uint64_t v397;
  std::__shared_weak_count *v398;
  unint64_t *v399;
  unint64_t v400;
  unint64_t v401;
  std::__shared_weak_count *v402;
  unint64_t *v403;
  unint64_t v404;
  unint64_t v405;
  uint64_t v406;
  int v407;
  uint64_t v408;
  std::__shared_weak_count *v409;
  unint64_t *v410;
  unint64_t v411;
  unint64_t v412;
  std::__shared_weak_count *v413;
  unint64_t *v414;
  unint64_t v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  std::__shared_weak_count *v419;
  unint64_t *v420;
  unint64_t v421;
  unint64_t v422;
  std::__shared_weak_count *v423;
  unint64_t *v424;
  unint64_t v425;
  unint64_t v426;
  uint64_t v427;
  int v428;
  uint64_t v429;
  std::__shared_weak_count *v430;
  unint64_t *v431;
  unint64_t v432;
  unint64_t v433;
  std::__shared_weak_count *v434;
  unint64_t *v435;
  unint64_t v436;
  unint64_t v437;
  int v438;
  uint64_t v439;
  _WORD *v440;
  uint64_t v441;
  std::__shared_weak_count *v442;
  unint64_t *v443;
  unint64_t v444;
  unint64_t v445;
  int v446;
  int m;
  uint64_t v448;
  int v449;
  uint64_t v450;
  _WORD *v451;
  uint64_t v452;
  std::__shared_weak_count *v453;
  unint64_t *v454;
  unint64_t v455;
  unint64_t v456;
  int v457;
  uint64_t v458;
  int v459;
  uint64_t v460;
  _BYTE *v461;
  uint64_t v462;
  std::__shared_weak_count *v463;
  unint64_t *v464;
  unint64_t v465;
  unint64_t v466;
  uint64_t v467;
  int v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  std::__shared_weak_count *v473;
  unint64_t *v474;
  unint64_t v475;
  int v476;
  uint64_t v477;
  float *v478;
  uint64_t v479;
  std::__shared_weak_count *v480;
  unint64_t *v481;
  unint64_t v482;
  unint64_t v483;
  int v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  int v488;
  uint64_t v489;
  _BYTE *v490;
  uint64_t v491;
  std::__shared_weak_count *v492;
  unint64_t *v493;
  unint64_t v494;
  unint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  unint64_t *v502;
  int v503;
  uint64_t v504;
  float *v505;
  uint64_t v506;
  std::__shared_weak_count *v507;
  unint64_t *v508;
  unint64_t v509;
  unint64_t v510;
  int v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  int v515;
  uint64_t v516;
  _WORD *v517;
  uint64_t v518;
  std::__shared_weak_count *v519;
  unint64_t *v520;
  unint64_t v521;
  unint64_t v522;
  uint64_t v523;
  int v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  unint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  unint64_t *v533;
  int v534;
  uint64_t v535;
  _BYTE *v536;
  uint64_t v537;
  std::__shared_weak_count *v538;
  unint64_t *v539;
  unint64_t v540;
  unint64_t v541;
  uint64_t v542;
  int v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  unint64_t *v548;
  int v549;
  uint64_t v550;
  float *v551;
  uint64_t v552;
  std::__shared_weak_count *v553;
  unint64_t *v554;
  unint64_t v555;
  unint64_t v556;
  uint64_t v557;
  int v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  unint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  unint64_t *v567;
  int v568;
  uint64_t v569;
  _WORD *v570;
  uint64_t v571;
  std::__shared_weak_count *v572;
  unint64_t *v573;
  unint64_t v574;
  unint64_t v575;
  int v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  int v580;
  uint64_t v581;
  _WORD *v582;
  uint64_t v583;
  std::__shared_weak_count *v584;
  unint64_t *v585;
  unint64_t v586;
  unint64_t v587;
  int v588;
  int j;
  uint64_t v590;
  int v591;
  uint64_t v592;
  _WORD *v593;
  uint64_t v594;
  std::__shared_weak_count *v595;
  unint64_t *v596;
  unint64_t v597;
  unint64_t v598;
  int v599;
  int jj;
  uint64_t v601;
  int v602;
  uint64_t v603;
  _WORD *v604;
  uint64_t v605;
  std::__shared_weak_count *v606;
  unint64_t *v607;
  unint64_t v608;
  unint64_t v609;
  int v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  int v614;
  uint64_t v615;
  _WORD *v616;
  uint64_t v617;
  std::__shared_weak_count *v618;
  unint64_t *v619;
  unint64_t v620;
  unint64_t v621;
  uint64_t v622;
  int v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  unint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  unint64_t *v632;
  int v633;
  uint64_t v634;
  _WORD *v635;
  uint64_t v636;
  std::__shared_weak_count *v637;
  unint64_t *v638;
  unint64_t v639;
  unint64_t v640;
  int v641;
  int n;
  uint64_t v643;
  int v644;
  uint64_t v645;
  _WORD *v646;
  uint64_t v647;
  std::__shared_weak_count *v648;
  unint64_t *v649;
  unint64_t v650;
  unint64_t v651;
  uint64_t v652;
  int v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  unint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  unint64_t *v662;
  int v663;
  uint64_t v664;
  float *v665;
  uint64_t v666;
  std::__shared_weak_count *v667;
  unint64_t *v668;
  unint64_t v669;
  unint64_t v670;
  int v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  unint64_t *v678;
  int v679;
  uint64_t v680;
  float *v681;
  uint64_t v682;
  std::__shared_weak_count *v683;
  unint64_t *v684;
  unint64_t v685;
  unint64_t v686;
  uint64_t v687;
  int v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  unint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  unint64_t *v697;
  int v698;
  uint64_t v699;
  float *v700;
  uint64_t v701;
  std::__shared_weak_count *v702;
  unint64_t *v703;
  unint64_t v704;
  unint64_t v705;
  uint64_t v706;
  int v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  unint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  unint64_t *v716;
  int v717;
  uint64_t v718;
  _WORD *v719;
  uint64_t v720;
  std::__shared_weak_count *v721;
  unint64_t *v722;
  unint64_t v723;
  unint64_t v724;
  int v725;
  int ii;
  uint64_t v727;
  int v728;
  uint64_t v729;
  _WORD *v730;
  uint64_t v731;
  std::__shared_weak_count *v732;
  unint64_t *v733;
  unint64_t v734;
  unint64_t v735;
  uint64_t v736;
  int v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  unint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  unint64_t *v746;
  int v747;
  uint64_t v748;
  _WORD *v749;
  uint64_t v750;
  std::__shared_weak_count *v751;
  unint64_t *v752;
  unint64_t v753;
  unint64_t v754;
  uint64_t v755;
  int v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  unint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  unint64_t *v765;
  int v766;
  uint64_t v767;
  float *v768;
  uint64_t v769;
  std::__shared_weak_count *v770;
  unint64_t *v771;
  unint64_t v772;
  unint64_t v773;
  uint64_t v774;
  int v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  unint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  unint64_t *v784;
  int v785;
  uint64_t v786;
  _BYTE *v787;
  uint64_t v788;
  std::__shared_weak_count *v789;
  unint64_t *v790;
  unint64_t v791;
  unint64_t v792;
  uint64_t v793;
  int v794;
  int v795;
  uint64_t v796;
  uint64_t v797;
  int v798;
  uint64_t v799;
  _BYTE *v800;
  uint64_t v801;
  std::__shared_weak_count *v802;
  unint64_t *v803;
  unint64_t v804;
  unint64_t v805;
  uint64_t v806;
  int v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  unint64_t *v812;
  int v813;
  uint64_t v814;
  float *v815;
  uint64_t v816;
  std::__shared_weak_count *v817;
  unint64_t *v818;
  unint64_t v819;
  unint64_t v820;
  uint64_t v821;
  int v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  unint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  unint64_t *v831;
  int v832;
  uint64_t v833;
  float *v834;
  uint64_t v835;
  std::__shared_weak_count *v836;
  unint64_t *v837;
  unint64_t v838;
  unint64_t v839;
  uint64_t v840;
  int v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  unint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  unint64_t *v850;
  int v851;
  uint64_t v852;
  _WORD *v853;
  uint64_t v854;
  std::__shared_weak_count *v855;
  unint64_t *v856;
  unint64_t v857;
  unint64_t v858;
  int v859;
  uint64_t i;
  int v861;
  uint64_t v862;
  _WORD *v863;
  uint64_t v864;
  std::__shared_weak_count *v865;
  unint64_t *v866;
  unint64_t v867;
  unint64_t v868;
  int v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  unint64_t *v876;
  int v877;
  uint64_t v878;
  _BYTE *v879;
  uint64_t v880;
  std::__shared_weak_count *v881;
  unint64_t *v882;
  unint64_t v883;
  unint64_t v884;
  int v885;
  int v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  unint64_t *v891;
  int v892;
  uint64_t v893;
  _BYTE *v894;
  uint64_t v895;
  std::__shared_weak_count *v896;
  unint64_t *v897;
  unint64_t v898;
  unint64_t v899;
  uint64_t v900;
  int v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  unint64_t *v906;
  int v907;
  uint64_t v908;
  _WORD *v909;
  uint64_t v910;
  std::__shared_weak_count *v911;
  unint64_t *v912;
  unint64_t v913;
  unint64_t v914;
  int v915;
  uint64_t v916;
  int v917;
  uint64_t v918;
  _WORD *v919;
  uint64_t v920;
  std::__shared_weak_count *v921;
  unint64_t *v922;
  unint64_t v923;
  unint64_t v924;
  int v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  int v929;
  uint64_t v930;
  _BYTE *v931;
  uint64_t v932;
  std::__shared_weak_count *v933;
  unint64_t *v934;
  unint64_t v935;
  unint64_t v936;
  uint64_t v937;
  int v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  unint64_t *v943;
  int v944;
  uint64_t v945;
  float *v946;
  uint64_t v947;
  std::__shared_weak_count *v948;
  unint64_t *v949;
  unint64_t v950;
  unint64_t v951;
  int v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  int v956;
  uint64_t v957;
  _WORD *v958;
  uint64_t v959;
  std::__shared_weak_count *v960;
  unint64_t *v961;
  unint64_t v962;
  unint64_t v963;
  uint64_t v964;
  int v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  unint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  unint64_t *v974;
  int v975;
  uint64_t v976;
  _WORD *v977;
  uint64_t v978;
  std::__shared_weak_count *v979;
  unint64_t *v980;
  unint64_t v981;
  unint64_t v982;
  int v983;
  int k;
  uint64_t v985;
  int v986;
  uint64_t v987;
  _BYTE *v988;
  uint64_t v989;
  std::__shared_weak_count *v990;
  unint64_t *v991;
  unint64_t v992;
  unint64_t v993;
  uint64_t v994;
  int v995;
  int v996;
  uint64_t v997;
  uint64_t v998;
  int v999;
  uint64_t v1000;
  _WORD *v1001;
  uint64_t v1002;
  std::__shared_weak_count *v1003;
  unint64_t *v1004;
  unint64_t v1005;
  unint64_t v1006;
  int v1007;
  uint64_t v1008;
  int v1009;
  uint64_t v1010;
  _BYTE *v1011;
  uint64_t v1012;
  std::__shared_weak_count *v1013;
  unint64_t *v1014;
  unint64_t v1015;
  unint64_t v1016;
  uint64_t v1017;
  int v1018;
  int v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  unint64_t *v1024;
  uint64_t v1025;
  uint64_t v1026;
  unint64_t *v1027;
  uint64_t v1028;
  uint64_t v1029;
  unint64_t *v1030;
  uint64_t v1031;
  uint64_t v1032;
  unint64_t *v1033;
  uint64_t v1034;
  uint64_t v1035;
  unint64_t *v1036;
  uint64_t v1037;
  uint64_t v1038;
  unint64_t *v1039;
  uint64_t v1040;
  uint64_t v1041;
  unint64_t *v1042;
  uint64_t v1043;
  uint64_t v1044;
  unint64_t *v1045;
  uint64_t v1046;
  uint64_t v1047;
  unint64_t *v1048;
  uint64_t v1049;
  uint64_t v1050;
  unint64_t *v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  unint64_t *v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  unint64_t *v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  unint64_t *v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  unint64_t *v1067;
  uint64_t v1068;
  uint64_t v1069;
  unint64_t *v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  unint64_t *v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  unint64_t *v1078;
  uint64_t v1079;
  uint64_t v1080;
  unint64_t *v1081;
  uint64_t v1082;
  uint64_t v1083;
  unint64_t *v1084;
  uint64_t v1085;
  int v1086;
  int v1087;
  int v1088;
  int v1089;
  uint64_t v1090;
  int v1091;
  int v1092;
  uint64_t v1093;
  int v1094;
  uint64_t v1095;
  uint64_t v1096;
  uint64_t v1097;
  int v1098;
  int v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  int v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  int v1113;
  int v1114;
  __int16 v1115;
  uint64_t (**v1116)();
  uint64_t v1117;
  std::__shared_weak_count *v1118;
  _BYTE *v1119;
  unsigned int v1120;
  int v1121;
  int v1122;
  unsigned int v1123;
  char v1124;
  char v1125;
  unsigned int v1126;
  int v1127;
  char v1128;
  char v1129;
  uint64_t v1130;

  switch(a1)
  {
    case 0:
      sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_21023DDB0);
      abort();
    case 1:
      v1116 = &off_24C9C05B0;
      sub_20FF68984(&v1117, a3);
      v4 = *a2;
      v5 = v1120;
      v6 = v1117;
      if (!v1117)
        goto LABEL_1462;
      v7 = v1118;
      if (v1118)
      {
        p_shared_owners = (unint64_t *)&v1118->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1117;
        v11 = v1118;
        if (v1118)
        {
          v12 = (unint64_t *)&v1118->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(&v1130, v6, 1);
      else
LABEL_1462:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1489;
      v877 = v1121;
      if (!v1121)
        goto LABEL_1489;
      v878 = v1123;
      v879 = v1119;
      if (v1124 && v1119)
      {
        v880 = v1117;
        v881 = v1118;
        if (v1118)
        {
          v882 = (unint64_t *)&v1118->__shared_owners_;
          do
            v883 = __ldxr(v882);
          while (__stxr(v883 + 1, v882));
          do
            v884 = __ldaxr(v882);
          while (__stlxr(v884 - 1, v882));
          if (!v884)
          {
            ((void (*)(std::__shared_weak_count *))v881->__on_zero_shared)(v881);
            std::__shared_weak_count::__release_weak(v881);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v880 + 88))(v880, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v879 = v1119;
      }
      v885 = v877 - 1;
      if (v877 == 1)
        goto LABEL_1482;
      if (!(_DWORD)v5)
        goto LABEL_1489;
      v886 = 0;
      do
      {
        if (!v879
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1999;
        }
        v887 = 0;
        v888 = *(_QWORD *)(v4 + 48);
        do
          sub_20E9ED7B4(v888, &v879[v887++]);
        while (v5 != v887);
        v879 += v878;
        ++v886;
      }
      while (v886 != v885);
LABEL_1482:
      if ((_DWORD)v5 && !v879)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1999:
          abort();
        }
        v879 = 0;
      }
      if ((_DWORD)v5)
      {
        v889 = *(_QWORD *)(v4 + 48);
        do
        {
          sub_20E9ED7B4(v889, v879++);
          --v5;
        }
        while (v5);
      }
LABEL_1489:
      v890 = v1130;
      v1130 = 0;
      if (v890)
        (*(void (**)(uint64_t))(*(_QWORD *)v890 + 8))(v890);
      v473 = v1118;
      if (!v1118)
        return;
      v891 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v891);
      while (__stlxr(v475 - 1, v891));
      goto LABEL_1975;
    case 2:
      v1116 = &off_24C9F0B30;
      sub_20FF68BA8(&v1117, a3);
      v320 = *a2;
      v1097 = v1120;
      v321 = v1117;
      if (!v1117)
        goto LABEL_1429;
      v322 = v1118;
      if (v1118)
      {
        v323 = (unint64_t *)&v1118->__shared_owners_;
        do
          v324 = __ldxr(v323);
        while (__stxr(v324 + 1, v323));
        do
          v325 = __ldaxr(v323);
        while (__stlxr(v325 - 1, v323));
        if (!v325)
        {
          ((void (*)(std::__shared_weak_count *))v322->__on_zero_shared)(v322);
          std::__shared_weak_count::__release_weak(v322);
        }
        v321 = v1117;
        v326 = v1118;
        if (v1118)
        {
          v327 = (unint64_t *)&v1118->__shared_owners_;
          do
            v328 = __ldxr(v327);
          while (__stxr(v328 + 1, v327));
          do
            v329 = __ldaxr(v327);
          while (__stlxr(v329 - 1, v327));
          if (!v329)
          {
            ((void (*)(std::__shared_weak_count *))v326->__on_zero_shared)(v326);
            std::__shared_weak_count::__release_weak(v326);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v321 + 96))(&v1130, v321, 1);
      else
LABEL_1429:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1456;
      v861 = v1121;
      if (!v1121)
        goto LABEL_1456;
      v862 = v1123;
      v863 = v1119;
      if (v1124 && v1119)
      {
        v864 = v1117;
        v865 = v1118;
        if (v1118)
        {
          v866 = (unint64_t *)&v1118->__shared_owners_;
          do
            v867 = __ldxr(v866);
          while (__stxr(v867 + 1, v866));
          do
            v868 = __ldaxr(v866);
          while (__stlxr(v868 - 1, v866));
          if (!v868)
          {
            ((void (*)(std::__shared_weak_count *))v865->__on_zero_shared)(v865);
            std::__shared_weak_count::__release_weak(v865);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v864 + 88))(v864, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v863 = v1119;
      }
      if (v861 == 1)
        goto LABEL_1449;
      if (!(_DWORD)v1097)
        goto LABEL_1456;
      v869 = 0;
      v870 = 2 * v862;
      do
      {
        if (!v863
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1998;
        }
        v871 = 0;
        v872 = *(_QWORD *)(v320 + 48);
        do
          sub_20E9ED948(v872, &v863[v871++]);
        while (v1097 != v871);
        v863 = (_WORD *)((char *)v863 + v870);
        ++v869;
      }
      while (v869 != v861 - 1);
LABEL_1449:
      if ((_DWORD)v1097 && !v863)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1998:
          abort();
        }
        v863 = 0;
      }
      if ((_DWORD)v1097)
      {
        v873 = *(_QWORD *)(v320 + 48);
        v874 = 2 * v1097;
        do
        {
          sub_20E9ED948(v873, v863++);
          v874 -= 2;
        }
        while (v874);
      }
LABEL_1456:
      v875 = v1130;
      v1130 = 0;
      if (v875)
        (*(void (**)(uint64_t))(*(_QWORD *)v875 + 8))(v875);
      v473 = v1118;
      if (!v1118)
        return;
      v876 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v876);
      while (__stlxr(v475 - 1, v876));
      goto LABEL_1975;
    case 3:
      v1116 = &off_24C9C07A0;
      sub_20FF68DCC(&v1117, a3);
      v310 = *a2;
      v1096 = v1120;
      v311 = v1117;
      if (!v1117)
        goto LABEL_1405;
      v312 = v1118;
      if (v1118)
      {
        v313 = (unint64_t *)&v1118->__shared_owners_;
        do
          v314 = __ldxr(v313);
        while (__stxr(v314 + 1, v313));
        do
          v315 = __ldaxr(v313);
        while (__stlxr(v315 - 1, v313));
        if (!v315)
        {
          ((void (*)(std::__shared_weak_count *))v312->__on_zero_shared)(v312);
          std::__shared_weak_count::__release_weak(v312);
        }
        v311 = v1117;
        v316 = v1118;
        if (v1118)
        {
          v317 = (unint64_t *)&v1118->__shared_owners_;
          do
            v318 = __ldxr(v317);
          while (__stxr(v318 + 1, v317));
          do
            v319 = __ldaxr(v317);
          while (__stlxr(v319 - 1, v317));
          if (!v319)
          {
            ((void (*)(std::__shared_weak_count *))v316->__on_zero_shared)(v316);
            std::__shared_weak_count::__release_weak(v316);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v311 + 96))(&v1130, v311, 1);
      else
LABEL_1405:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1817;
      v851 = v1121;
      if (!v1121)
        goto LABEL_1817;
      v852 = v1123;
      v853 = v1119;
      if (v1124 && v1119)
      {
        v854 = v1117;
        v855 = v1118;
        if (v1118)
        {
          v856 = (unint64_t *)&v1118->__shared_owners_;
          do
            v857 = __ldxr(v856);
          while (__stxr(v857 + 1, v856));
          do
            v858 = __ldaxr(v856);
          while (__stlxr(v858 - 1, v856));
          if (!v858)
          {
            ((void (*)(std::__shared_weak_count *))v855->__on_zero_shared)(v855);
            std::__shared_weak_count::__release_weak(v855);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v854 + 88))(v854, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v853 = v1119;
      }
      if (v851 == 1)
        goto LABEL_1425;
      if (!(_DWORD)v1096)
        goto LABEL_1817;
      v859 = 0;
      do
      {
        if (!v853
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1428;
        }
        for (i = 0; i != v1096; ++i)
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v310 + 48), &v1115);
          v853[i] = v1115;
        }
        v853 += v852;
        ++v859;
      }
      while (v859 != v851 - 1);
LABEL_1425:
      if (!(_DWORD)v1096 || v853)
      {
        if (!(_DWORD)v1096)
          goto LABEL_1817;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1428:
        abort();
      }
      v1040 = 2 * v1096;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v310 + 48), &v1115);
        *v853++ = v1115;
        v1040 -= 2;
      }
      while (v1040);
LABEL_1817:
      v1041 = v1130;
      v1130 = 0;
      if (v1041)
        (*(void (**)(uint64_t))(*(_QWORD *)v1041 + 8))(v1041);
      v473 = v1118;
      if (!v1118)
        return;
      v1042 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1042);
      while (__stlxr(v475 - 1, v1042));
      goto LABEL_1975;
    case 4:
      v1116 = &off_24C9AD6F0;
      sub_20FF69410(&v1117, a3);
      v190 = *a2;
      v1095 = v1120;
      v191 = v1117;
      if (!v1117)
        goto LABEL_1053;
      v192 = v1118;
      if (v1118)
      {
        v193 = (unint64_t *)&v1118->__shared_owners_;
        do
          v194 = __ldxr(v193);
        while (__stxr(v194 + 1, v193));
        do
          v195 = __ldaxr(v193);
        while (__stlxr(v195 - 1, v193));
        if (!v195)
        {
          ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
          std::__shared_weak_count::__release_weak(v192);
        }
        v191 = v1117;
        v196 = v1118;
        if (v1118)
        {
          v197 = (unint64_t *)&v1118->__shared_owners_;
          do
            v198 = __ldxr(v197);
          while (__stxr(v198 + 1, v197));
          do
            v199 = __ldaxr(v197);
          while (__stlxr(v199 - 1, v197));
          if (!v199)
          {
            ((void (*)(std::__shared_weak_count *))v196->__on_zero_shared)(v196);
            std::__shared_weak_count::__release_weak(v196);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v191 + 96))(&v1130, v191, 1);
      else
LABEL_1053:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1080;
      v663 = v1121;
      if (!v1121)
        goto LABEL_1080;
      v664 = v1123;
      v665 = (float *)v1119;
      if (v1124 && v1119)
      {
        v666 = v1117;
        v667 = v1118;
        if (v1118)
        {
          v668 = (unint64_t *)&v1118->__shared_owners_;
          do
            v669 = __ldxr(v668);
          while (__stxr(v669 + 1, v668));
          do
            v670 = __ldaxr(v668);
          while (__stlxr(v670 - 1, v668));
          if (!v670)
          {
            ((void (*)(std::__shared_weak_count *))v667->__on_zero_shared)(v667);
            std::__shared_weak_count::__release_weak(v667);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v666 + 88))(v666, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v665 = (float *)v1119;
      }
      if (v663 == 1)
        goto LABEL_1073;
      if (!(_DWORD)v1095)
        goto LABEL_1080;
      v671 = 0;
      v672 = 4 * v664;
      do
      {
        if (!v665
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1989;
        }
        v673 = 0;
        v674 = *(_QWORD *)(v190 + 48);
        do
          sub_20E9EDF48(v674, &v665[v673++]);
        while (v1095 != v673);
        v665 = (float *)((char *)v665 + v672);
        ++v671;
      }
      while (v671 != v663 - 1);
LABEL_1073:
      if ((_DWORD)v1095 && !v665)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1989:
          abort();
        }
        v665 = 0;
      }
      if ((_DWORD)v1095)
      {
        v675 = *(_QWORD *)(v190 + 48);
        v676 = 4 * v1095;
        do
        {
          sub_20E9EDF48(v675, v665++);
          v676 -= 4;
        }
        while (v676);
      }
LABEL_1080:
      v677 = v1130;
      v1130 = 0;
      if (v677)
        (*(void (**)(uint64_t))(*(_QWORD *)v677 + 8))(v677);
      v473 = v1118;
      if (!v1118)
        return;
      v678 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v678);
      while (__stlxr(v475 - 1, v678));
      goto LABEL_1975;
    case 5:
      v1116 = &off_24C9C06A8;
      sub_20FF69634((std::string::size_type *)&v1117, a3);
      v277 = *a2;
      v278 = v1127;
      v279 = v1117;
      if (!v1117)
        goto LABEL_1303;
      v280 = v1118;
      if (v1118)
      {
        v281 = (unint64_t *)&v1118->__shared_owners_;
        do
          v282 = __ldxr(v281);
        while (__stxr(v282 + 1, v281));
        do
          v283 = __ldaxr(v281);
        while (__stlxr(v283 - 1, v281));
        if (!v283)
        {
          ((void (*)(std::__shared_weak_count *))v280->__on_zero_shared)(v280);
          std::__shared_weak_count::__release_weak(v280);
        }
        v279 = v1117;
        v284 = v1118;
        if (v1118)
        {
          v285 = (unint64_t *)&v1118->__shared_owners_;
          do
            v286 = __ldxr(v285);
          while (__stxr(v286 + 1, v285));
          do
            v287 = __ldaxr(v285);
          while (__stlxr(v287 - 1, v285));
          if (!v287)
          {
            ((void (*)(std::__shared_weak_count *))v284->__on_zero_shared)(v284);
            std::__shared_weak_count::__release_weak(v284);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v279 + 96))(&v1130, v279, 1);
      else
LABEL_1303:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1331;
      if (!v1121)
        goto LABEL_1331;
      v798 = v1122;
      if (!v1122)
        goto LABEL_1331;
      v799 = v1126;
      v800 = v1119;
      if (v1128 && v1119)
      {
        v801 = v1117;
        v802 = v1118;
        if (v1118)
        {
          v803 = (unint64_t *)&v1118->__shared_owners_;
          do
            v804 = __ldxr(v803);
          while (__stxr(v804 + 1, v803));
          do
            v805 = __ldaxr(v803);
          while (__stlxr(v805 - 1, v803));
          if (!v805)
          {
            ((void (*)(std::__shared_weak_count *))v802->__on_zero_shared)(v802);
            std::__shared_weak_count::__release_weak(v802);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v801 + 88))(v801, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v800 = v1119;
      }
      v806 = (2 * v278);
      if (v798 == 1)
        goto LABEL_1324;
      if (!(_DWORD)v806)
        goto LABEL_1331;
      v807 = 0;
      do
      {
        if (!v800
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1995;
        }
        v808 = 0;
        v809 = *(_QWORD *)(v277 + 48);
        do
          sub_20E9ED7B4(v809, &v800[v808++]);
        while (v806 != v808);
        v800 += v799;
        ++v807;
      }
      while (v807 != v798 - 1);
LABEL_1324:
      if ((_DWORD)v806 && !v800)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1995:
          abort();
        }
        v800 = 0;
      }
      if ((_DWORD)v806)
      {
        v810 = *(_QWORD *)(v277 + 48);
        do
        {
          sub_20E9ED7B4(v810, v800++);
          --v806;
        }
        while (v806);
      }
LABEL_1331:
      v811 = v1130;
      v1130 = 0;
      if (v811)
        (*(void (**)(uint64_t))(*(_QWORD *)v811 + 8))(v811);
      v473 = v1118;
      if (!v1118)
        return;
      v812 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v812);
      while (__stlxr(v475 - 1, v812));
      goto LABEL_1975;
    case 6:
      v1116 = &off_24CA11908;
      sub_20FF69C90((std::string::size_type *)&v1117, a3);
      v179 = *a2;
      v180 = v1127;
      v181 = v1117;
      if (!v1117)
        goto LABEL_1019;
      v182 = v1118;
      if (v1118)
      {
        v183 = (unint64_t *)&v1118->__shared_owners_;
        do
          v184 = __ldxr(v183);
        while (__stxr(v184 + 1, v183));
        do
          v185 = __ldaxr(v183);
        while (__stlxr(v185 - 1, v183));
        if (!v185)
        {
          ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
          std::__shared_weak_count::__release_weak(v182);
        }
        v181 = v1117;
        v186 = v1118;
        if (v1118)
        {
          v187 = (unint64_t *)&v1118->__shared_owners_;
          do
            v188 = __ldxr(v187);
          while (__stxr(v188 + 1, v187));
          do
            v189 = __ldaxr(v187);
          while (__stlxr(v189 - 1, v187));
          if (!v189)
          {
            ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
            std::__shared_weak_count::__release_weak(v186);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v181 + 96))(&v1130, v181, 1);
      else
LABEL_1019:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1047;
      if (!v1121)
        goto LABEL_1047;
      v644 = v1122;
      if (!v1122)
        goto LABEL_1047;
      v645 = v1126;
      v646 = v1119;
      if (v1128 && v1119)
      {
        v647 = v1117;
        v648 = v1118;
        if (v1118)
        {
          v649 = (unint64_t *)&v1118->__shared_owners_;
          do
            v650 = __ldxr(v649);
          while (__stxr(v650 + 1, v649));
          do
            v651 = __ldaxr(v649);
          while (__stlxr(v651 - 1, v649));
          if (!v651)
          {
            ((void (*)(std::__shared_weak_count *))v648->__on_zero_shared)(v648);
            std::__shared_weak_count::__release_weak(v648);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v647 + 88))(v647, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v646 = v1119;
      }
      v652 = (2 * v180);
      if (v644 == 1)
        goto LABEL_1040;
      if (!(_DWORD)v652)
        goto LABEL_1047;
      v653 = 0;
      v654 = 2 * v645;
      v655 = 2 * v652;
      do
      {
        if (!v646
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1984;
        }
        v656 = v652;
        v657 = 0;
        v658 = *(_QWORD *)(v179 + 48);
        do
        {
          sub_20E9ED948(v658, &v646[v657 / 2]);
          v657 += 2;
        }
        while (v655 != v657);
        v646 = (_WORD *)((char *)v646 + v654);
        ++v653;
        v652 = v656;
      }
      while (v653 != v644 - 1);
LABEL_1040:
      if ((_DWORD)v652 && !v646)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1984:
          abort();
        }
        v646 = 0;
      }
      if ((_DWORD)v652)
      {
        v659 = *(_QWORD *)(v179 + 48);
        v660 = 2 * v652;
        do
        {
          sub_20E9ED948(v659, v646++);
          v660 -= 2;
        }
        while (v660);
      }
LABEL_1047:
      v661 = v1130;
      v1130 = 0;
      if (v661)
        (*(void (**)(uint64_t))(*(_QWORD *)v661 + 8))(v661);
      v473 = v1118;
      if (!v1118)
        return;
      v662 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v662);
      while (__stlxr(v475 - 1, v662));
      goto LABEL_1975;
    case 7:
      v1116 = &off_24CA11A00;
      sub_20FF6A4F8((std::string::size_type *)&v1117, a3);
      v124 = *a2;
      v125 = v1127;
      v126 = v1117;
      if (!v1117)
        goto LABEL_888;
      v127 = v1118;
      if (v1118)
      {
        v128 = (unint64_t *)&v1118->__shared_owners_;
        do
          v129 = __ldxr(v128);
        while (__stxr(v129 + 1, v128));
        do
          v130 = __ldaxr(v128);
        while (__stlxr(v130 - 1, v128));
        if (!v130)
        {
          ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
          std::__shared_weak_count::__release_weak(v127);
        }
        v126 = v1117;
        v131 = v1118;
        if (v1118)
        {
          v132 = (unint64_t *)&v1118->__shared_owners_;
          do
            v133 = __ldxr(v132);
          while (__stxr(v133 + 1, v132));
          do
            v134 = __ldaxr(v132);
          while (__stlxr(v134 - 1, v132));
          if (!v134)
          {
            ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
            std::__shared_weak_count::__release_weak(v131);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v126 + 96))(&v1130, v126, 1);
      else
LABEL_888:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1781;
      if (!v1121)
        goto LABEL_1781;
      v580 = v1122;
      if (!v1122)
        goto LABEL_1781;
      v581 = v1126;
      v582 = v1119;
      if (v1128 && v1119)
      {
        v583 = v1117;
        v584 = v1118;
        if (v1118)
        {
          v585 = (unint64_t *)&v1118->__shared_owners_;
          do
            v586 = __ldxr(v585);
          while (__stxr(v586 + 1, v585));
          do
            v587 = __ldaxr(v585);
          while (__stlxr(v587 - 1, v585));
          if (!v587)
          {
            ((void (*)(std::__shared_weak_count *))v584->__on_zero_shared)(v584);
            std::__shared_weak_count::__release_weak(v584);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v583 + 88))(v583, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v582 = v1119;
      }
      v588 = v580 - 1;
      v1104 = (2 * v125);
      if (!v588)
        goto LABEL_909;
      if (!(2 * v125))
        goto LABEL_1781;
      for (j = 0; j != v588; ++j)
      {
        if (!v582
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_912;
        }
        v590 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v124 + 48), &v1115);
          v582[v590++] = v1115;
        }
        while (v1104 != v590);
        v582 += v581;
      }
LABEL_909:
      if (!(_DWORD)v1104 || v582)
      {
        if (!(_DWORD)v1104)
          goto LABEL_1781;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_912:
        abort();
      }
      v1028 = 2 * v1104;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v124 + 48), &v1115);
        *v582++ = v1115;
        v1028 -= 2;
      }
      while (v1028);
LABEL_1781:
      v1029 = v1130;
      v1130 = 0;
      if (v1029)
        (*(void (**)(uint64_t))(*(_QWORD *)v1029 + 8))(v1029);
      v473 = v1118;
      if (!v1118)
        return;
      v1030 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1030);
      while (__stlxr(v475 - 1, v1030));
      goto LABEL_1975;
    case 8:
      v1116 = &off_24CA11AF8;
      sub_20FF6AD60((std::string::size_type *)&v1117, a3);
      v299 = *a2;
      v300 = v1127;
      v301 = v1117;
      if (!v1117)
        goto LABEL_1371;
      v302 = v1118;
      if (v1118)
      {
        v303 = (unint64_t *)&v1118->__shared_owners_;
        do
          v304 = __ldxr(v303);
        while (__stxr(v304 + 1, v303));
        do
          v305 = __ldaxr(v303);
        while (__stlxr(v305 - 1, v303));
        if (!v305)
        {
          ((void (*)(std::__shared_weak_count *))v302->__on_zero_shared)(v302);
          std::__shared_weak_count::__release_weak(v302);
        }
        v301 = v1117;
        v306 = v1118;
        if (v1118)
        {
          v307 = (unint64_t *)&v1118->__shared_owners_;
          do
            v308 = __ldxr(v307);
          while (__stxr(v308 + 1, v307));
          do
            v309 = __ldaxr(v307);
          while (__stlxr(v309 - 1, v307));
          if (!v309)
          {
            ((void (*)(std::__shared_weak_count *))v306->__on_zero_shared)(v306);
            std::__shared_weak_count::__release_weak(v306);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v301 + 96))(&v1130, v301, 1);
      else
LABEL_1371:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1399;
      if (!v1121)
        goto LABEL_1399;
      v832 = v1122;
      if (!v1122)
        goto LABEL_1399;
      v833 = v1126;
      v834 = (float *)v1119;
      if (v1128 && v1119)
      {
        v835 = v1117;
        v836 = v1118;
        if (v1118)
        {
          v837 = (unint64_t *)&v1118->__shared_owners_;
          do
            v838 = __ldxr(v837);
          while (__stxr(v838 + 1, v837));
          do
            v839 = __ldaxr(v837);
          while (__stlxr(v839 - 1, v837));
          if (!v839)
          {
            ((void (*)(std::__shared_weak_count *))v836->__on_zero_shared)(v836);
            std::__shared_weak_count::__release_weak(v836);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v835 + 88))(v835, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v834 = (float *)v1119;
      }
      v840 = (2 * v300);
      if (v832 == 1)
        goto LABEL_1392;
      if (!(_DWORD)v840)
        goto LABEL_1399;
      v841 = 0;
      v842 = 4 * v833;
      v843 = 4 * v840;
      do
      {
        if (!v834
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1997;
        }
        v844 = v840;
        v845 = 0;
        v846 = *(_QWORD *)(v299 + 48);
        do
        {
          sub_20E9EDF48(v846, &v834[v845 / 4]);
          v845 += 4;
        }
        while (v843 != v845);
        v834 = (float *)((char *)v834 + v842);
        ++v841;
        v840 = v844;
      }
      while (v841 != v832 - 1);
LABEL_1392:
      if ((_DWORD)v840 && !v834)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1997:
          abort();
        }
        v834 = 0;
      }
      if ((_DWORD)v840)
      {
        v847 = *(_QWORD *)(v299 + 48);
        v848 = 4 * v840;
        do
        {
          sub_20E9EDF48(v847, v834++);
          v848 -= 4;
        }
        while (v848);
      }
LABEL_1399:
      v849 = v1130;
      v1130 = 0;
      if (v849)
        (*(void (**)(uint64_t))(*(_QWORD *)v849 + 8))(v849);
      v473 = v1118;
      if (!v1118)
        return;
      v850 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v850);
      while (__stlxr(v475 - 1, v850));
      goto LABEL_1975;
    case 9:
      v1116 = &off_24CA11BF0;
      sub_20FF6B5C8((std::string::size_type *)&v1117, a3);
      v266 = *a2;
      v267 = v1127;
      v268 = v1117;
      if (!v1117)
        goto LABEL_1281;
      v269 = v1118;
      if (v1118)
      {
        v270 = (unint64_t *)&v1118->__shared_owners_;
        do
          v271 = __ldxr(v270);
        while (__stxr(v271 + 1, v270));
        do
          v272 = __ldaxr(v270);
        while (__stlxr(v272 - 1, v270));
        if (!v272)
        {
          ((void (*)(std::__shared_weak_count *))v269->__on_zero_shared)(v269);
          std::__shared_weak_count::__release_weak(v269);
        }
        v268 = v1117;
        v273 = v1118;
        if (v1118)
        {
          v274 = (unint64_t *)&v1118->__shared_owners_;
          do
            v275 = __ldxr(v274);
          while (__stxr(v275 + 1, v274));
          do
            v276 = __ldaxr(v274);
          while (__stlxr(v276 - 1, v274));
          if (!v276)
          {
            ((void (*)(std::__shared_weak_count *))v273->__on_zero_shared)(v273);
            std::__shared_weak_count::__release_weak(v273);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v268 + 96))(&v1130, v268, 1);
      else
LABEL_1281:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1914;
      if (!v1121)
        goto LABEL_1914;
      v785 = v1122;
      if (!v1122)
        goto LABEL_1914;
      v786 = v1126;
      v787 = v1119;
      if (v1128 && v1119)
      {
        v788 = v1117;
        v789 = v1118;
        if (v1118)
        {
          v790 = (unint64_t *)&v1118->__shared_owners_;
          do
            v791 = __ldxr(v790);
          while (__stxr(v791 + 1, v790));
          do
            v792 = __ldaxr(v790);
          while (__stlxr(v792 - 1, v790));
          if (!v792)
          {
            ((void (*)(std::__shared_weak_count *))v789->__on_zero_shared)(v789);
            std::__shared_weak_count::__release_weak(v789);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v788 + 88))(v788, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v787 = v1119;
      }
      v793 = (3 * v267);
      v794 = v785 - 1;
      if (v785 == 1)
      {
        v1109 = v267;
LABEL_1907:
        if (v1109 && !v787)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2000;
          }
          v787 = 0;
        }
        if (v1109)
        {
          v1068 = *(_QWORD *)(v266 + 48);
          do
          {
            sub_20E9ED7B4(v1068, v787++);
            --v793;
          }
          while (v793);
        }
      }
      else if (v267)
      {
        v1109 = v267;
        v795 = 0;
        while (v787
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v796 = 0;
          v797 = *(_QWORD *)(v266 + 48);
          do
            sub_20E9ED7B4(v797, &v787[v796++]);
          while (v793 != v796);
          v787 += v786;
          if (++v795 == v794)
            goto LABEL_1907;
        }
LABEL_2000:
        abort();
      }
LABEL_1914:
      v1069 = v1130;
      v1130 = 0;
      if (v1069)
        (*(void (**)(uint64_t))(*(_QWORD *)v1069 + 8))(v1069);
      v473 = v1118;
      if (!v1118)
        return;
      v1070 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1070);
      while (__stlxr(v475 - 1, v1070));
      goto LABEL_1975;
    case 10:
      v1116 = &off_24CA11CE8;
      sub_20FF6BE2C((std::string::size_type *)&v1117, a3);
      v351 = *a2;
      v352 = v1127;
      v353 = v1117;
      if (!v1117)
        goto LABEL_1554;
      v354 = v1118;
      if (v1118)
      {
        v355 = (unint64_t *)&v1118->__shared_owners_;
        do
          v356 = __ldxr(v355);
        while (__stxr(v356 + 1, v355));
        do
          v357 = __ldaxr(v355);
        while (__stlxr(v357 - 1, v355));
        if (!v357)
        {
          ((void (*)(std::__shared_weak_count *))v354->__on_zero_shared)(v354);
          std::__shared_weak_count::__release_weak(v354);
        }
        v353 = v1117;
        v358 = v1118;
        if (v1118)
        {
          v359 = (unint64_t *)&v1118->__shared_owners_;
          do
            v360 = __ldxr(v359);
          while (__stxr(v360 + 1, v359));
          do
            v361 = __ldaxr(v359);
          while (__stlxr(v361 - 1, v359));
          if (!v361)
          {
            ((void (*)(std::__shared_weak_count *))v358->__on_zero_shared)(v358);
            std::__shared_weak_count::__release_weak(v358);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v353 + 96))(&v1130, v353, 1);
      else
LABEL_1554:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1928;
      if (!v1121)
        goto LABEL_1928;
      v917 = v1122;
      if (!v1122)
        goto LABEL_1928;
      v918 = v1126;
      v919 = v1119;
      if (v1128 && v1119)
      {
        v920 = v1117;
        v921 = v1118;
        if (v1118)
        {
          v922 = (unint64_t *)&v1118->__shared_owners_;
          do
            v923 = __ldxr(v922);
          while (__stxr(v923 + 1, v922));
          do
            v924 = __ldaxr(v922);
          while (__stlxr(v924 - 1, v922));
          if (!v924)
          {
            ((void (*)(std::__shared_weak_count *))v921->__on_zero_shared)(v921);
            std::__shared_weak_count::__release_weak(v921);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v920 + 88))(v920, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v919 = v1119;
      }
      v1110 = (3 * v352);
      if (v917 == 1)
      {
        v1091 = v352;
LABEL_1921:
        if (v1091 && !v919)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2004;
          }
          v919 = 0;
        }
        if (v1091)
        {
          v1071 = *(_QWORD *)(v351 + 48);
          v1072 = 2 * v1110;
          do
          {
            sub_20E9ED948(v1071, v919++);
            v1072 -= 2;
          }
          while (v1072);
        }
      }
      else if (v352)
      {
        v1091 = v352;
        v925 = 0;
        v926 = 2 * v918;
        while (v919
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v927 = 0;
          v928 = *(_QWORD *)(v351 + 48);
          do
            sub_20E9ED948(v928, &v919[v927++]);
          while (v1110 != v927);
          v919 = (_WORD *)((char *)v919 + v926);
          if (++v925 == v917 - 1)
            goto LABEL_1921;
        }
LABEL_2004:
        abort();
      }
LABEL_1928:
      v1073 = v1130;
      v1130 = 0;
      if (v1073)
        (*(void (**)(uint64_t))(*(_QWORD *)v1073 + 8))(v1073);
      v473 = v1118;
      if (!v1118)
        return;
      v1074 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1074);
      while (__stlxr(v475 - 1, v1074));
      goto LABEL_1975;
    case 11:
      v1116 = &off_24CA11DE0;
      sub_20FF6C694((std::string::size_type *)&v1117, a3);
      v341 = *a2;
      v1098 = v1127;
      v342 = v1117;
      if (!v1117)
        goto LABEL_1529;
      v343 = v1118;
      if (v1118)
      {
        v344 = (unint64_t *)&v1118->__shared_owners_;
        do
          v345 = __ldxr(v344);
        while (__stxr(v345 + 1, v344));
        do
          v346 = __ldaxr(v344);
        while (__stlxr(v346 - 1, v344));
        if (!v346)
        {
          ((void (*)(std::__shared_weak_count *))v343->__on_zero_shared)(v343);
          std::__shared_weak_count::__release_weak(v343);
        }
        v342 = v1117;
        v347 = v1118;
        if (v1118)
        {
          v348 = (unint64_t *)&v1118->__shared_owners_;
          do
            v349 = __ldxr(v348);
          while (__stxr(v349 + 1, v348));
          do
            v350 = __ldaxr(v348);
          while (__stlxr(v350 - 1, v348));
          if (!v350)
          {
            ((void (*)(std::__shared_weak_count *))v347->__on_zero_shared)(v347);
            std::__shared_weak_count::__release_weak(v347);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v342 + 96))(&v1130, v342, 1);
      else
LABEL_1529:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1826;
      if (!v1121)
        goto LABEL_1826;
      v907 = v1122;
      if (!v1122)
        goto LABEL_1826;
      v908 = v1126;
      v909 = v1119;
      if (v1128 && v1119)
      {
        v910 = v1117;
        v911 = v1118;
        if (v1118)
        {
          v912 = (unint64_t *)&v1118->__shared_owners_;
          do
            v913 = __ldxr(v912);
          while (__stxr(v913 + 1, v912));
          do
            v914 = __ldaxr(v912);
          while (__stlxr(v914 - 1, v912));
          if (!v914)
          {
            ((void (*)(std::__shared_weak_count *))v911->__on_zero_shared)(v911);
            std::__shared_weak_count::__release_weak(v911);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v910 + 88))(v910, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v909 = v1119;
      }
      v1090 = (3 * v1098);
      if (v907 == 1)
        goto LABEL_1550;
      if (!v1098)
        goto LABEL_1826;
      v915 = 0;
      do
      {
        if (!v909
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1553;
        }
        v916 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v341 + 48), &v1115);
          v909[v916++] = v1115;
        }
        while (v1090 != v916);
        v909 += v908;
        ++v915;
      }
      while (v915 != v907 - 1);
LABEL_1550:
      if (!v1098 || v909)
      {
        if (!v1098)
          goto LABEL_1826;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1553:
        abort();
      }
      v1043 = 2 * v1090;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v341 + 48), &v1115);
        *v909++ = v1115;
        v1043 -= 2;
      }
      while (v1043);
LABEL_1826:
      v1044 = v1130;
      v1130 = 0;
      if (v1044)
        (*(void (**)(uint64_t))(*(_QWORD *)v1044 + 8))(v1044);
      v473 = v1118;
      if (!v1118)
        return;
      v1045 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1045);
      while (__stlxr(v475 - 1, v1045));
      goto LABEL_1975;
    case 12:
      v1116 = &off_24CA11ED8;
      sub_20FF6CEFC((std::string::size_type *)&v1117, a3);
      v47 = *a2;
      v48 = v1127;
      v49 = v1117;
      if (!v1117)
        goto LABEL_686;
      v50 = v1118;
      if (v1118)
      {
        v51 = (unint64_t *)&v1118->__shared_owners_;
        do
          v52 = __ldxr(v51);
        while (__stxr(v52 + 1, v51));
        do
          v53 = __ldaxr(v51);
        while (__stlxr(v53 - 1, v51));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
        v49 = v1117;
        v54 = v1118;
        if (v1118)
        {
          v55 = (unint64_t *)&v1118->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v49 + 96))(&v1130, v49, 1);
      else
LABEL_686:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1858;
      if (!v1121)
        goto LABEL_1858;
      v476 = v1122;
      if (!v1122)
        goto LABEL_1858;
      v477 = v1126;
      v478 = (float *)v1119;
      if (v1128 && v1119)
      {
        v479 = v1117;
        v480 = v1118;
        if (v1118)
        {
          v481 = (unint64_t *)&v1118->__shared_owners_;
          do
            v482 = __ldxr(v481);
          while (__stxr(v482 + 1, v481));
          do
            v483 = __ldaxr(v481);
          while (__stlxr(v483 - 1, v481));
          if (!v483)
          {
            ((void (*)(std::__shared_weak_count *))v480->__on_zero_shared)(v480);
            std::__shared_weak_count::__release_weak(v480);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v479 + 88))(v479, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v478 = (float *)v1119;
      }
      v1101 = (3 * v48);
      if (v476 == 1)
      {
        v1086 = v48;
LABEL_1851:
        if (v1086 && !v478)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1985;
          }
          v478 = 0;
        }
        if (v1086)
        {
          v1052 = *(_QWORD *)(v47 + 48);
          v1053 = 4 * v1101;
          do
          {
            sub_20E9EDF48(v1052, v478++);
            v1053 -= 4;
          }
          while (v1053);
        }
      }
      else if (v48)
      {
        v1086 = v48;
        v484 = 0;
        v485 = 4 * v477;
        while (v478
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v486 = 0;
          v487 = *(_QWORD *)(v47 + 48);
          do
            sub_20E9EDF48(v487, &v478[v486++]);
          while (v1101 != v486);
          v478 = (float *)((char *)v478 + v485);
          if (++v484 == v476 - 1)
            goto LABEL_1851;
        }
LABEL_1985:
        abort();
      }
LABEL_1858:
      v1054 = v1130;
      v1130 = 0;
      if (v1054)
        (*(void (**)(uint64_t))(*(_QWORD *)v1054 + 8))(v1054);
      v473 = v1118;
      if (!v1118)
        return;
      v1055 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1055);
      while (__stlxr(v475 - 1, v1055));
      goto LABEL_1975;
    case 13:
      v1116 = &off_24CA11FD0;
      sub_20FF6D764((std::string::size_type *)&v1117, a3);
      v91 = *a2;
      v92 = v1127;
      v93 = v1117;
      if (!v1117)
        goto LABEL_798;
      v94 = v1118;
      if (v1118)
      {
        v95 = (unint64_t *)&v1118->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
          std::__shared_weak_count::__release_weak(v94);
        }
        v93 = v1117;
        v98 = v1118;
        if (v1118)
        {
          v99 = (unint64_t *)&v1118->__shared_owners_;
          do
            v100 = __ldxr(v99);
          while (__stxr(v100 + 1, v99));
          do
            v101 = __ldaxr(v99);
          while (__stlxr(v101 - 1, v99));
          if (!v101)
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v93 + 96))(&v1130, v93, 1);
      else
LABEL_798:
        v1130 = 0;
      if (!v1120)
        goto LABEL_826;
      if (!v1121)
        goto LABEL_826;
      v534 = v1122;
      if (!v1122)
        goto LABEL_826;
      v535 = v1126;
      v536 = v1119;
      if (v1128 && v1119)
      {
        v537 = v1117;
        v538 = v1118;
        if (v1118)
        {
          v539 = (unint64_t *)&v1118->__shared_owners_;
          do
            v540 = __ldxr(v539);
          while (__stxr(v540 + 1, v539));
          do
            v541 = __ldaxr(v539);
          while (__stlxr(v541 - 1, v539));
          if (!v541)
          {
            ((void (*)(std::__shared_weak_count *))v538->__on_zero_shared)(v538);
            std::__shared_weak_count::__release_weak(v538);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v537 + 88))(v537, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v536 = v1119;
      }
      v542 = (4 * v92);
      if (v534 == 1)
        goto LABEL_819;
      if (!(_DWORD)v542)
        goto LABEL_826;
      v543 = 0;
      do
      {
        if (!v536
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1981;
        }
        v544 = 0;
        v545 = *(_QWORD *)(v91 + 48);
        do
          sub_20E9ED7B4(v545, &v536[v544++]);
        while (v542 != v544);
        v536 += v535;
        ++v543;
      }
      while (v543 != v534 - 1);
LABEL_819:
      if ((_DWORD)v542 && !v536)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1981:
          abort();
        }
        v536 = 0;
      }
      if ((_DWORD)v542)
      {
        v546 = *(_QWORD *)(v91 + 48);
        do
        {
          sub_20E9ED7B4(v546, v536++);
          --v542;
        }
        while (v542);
      }
LABEL_826:
      v547 = v1130;
      v1130 = 0;
      if (v547)
        (*(void (**)(uint64_t))(*(_QWORD *)v547 + 8))(v547);
      v473 = v1118;
      if (!v1118)
        return;
      v548 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v548);
      while (__stlxr(v475 - 1, v548));
      goto LABEL_1975;
    case 14:
      v1116 = &off_24CA120C8;
      sub_20FF6DFC8((std::string::size_type *)&v1117, a3);
      v80 = *a2;
      v81 = v1127;
      v82 = v1117;
      if (!v1117)
        goto LABEL_764;
      v83 = v1118;
      if (v1118)
      {
        v84 = (unint64_t *)&v1118->__shared_owners_;
        do
          v85 = __ldxr(v84);
        while (__stxr(v85 + 1, v84));
        do
          v86 = __ldaxr(v84);
        while (__stlxr(v86 - 1, v84));
        if (!v86)
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
        v82 = v1117;
        v87 = v1118;
        if (v1118)
        {
          v88 = (unint64_t *)&v1118->__shared_owners_;
          do
            v89 = __ldxr(v88);
          while (__stxr(v89 + 1, v88));
          do
            v90 = __ldaxr(v88);
          while (__stlxr(v90 - 1, v88));
          if (!v90)
          {
            ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
            std::__shared_weak_count::__release_weak(v87);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v82 + 96))(&v1130, v82, 1);
      else
LABEL_764:
        v1130 = 0;
      if (!v1120)
        goto LABEL_792;
      if (!v1121)
        goto LABEL_792;
      v515 = v1122;
      if (!v1122)
        goto LABEL_792;
      v516 = v1126;
      v517 = v1119;
      if (v1128 && v1119)
      {
        v518 = v1117;
        v519 = v1118;
        if (v1118)
        {
          v520 = (unint64_t *)&v1118->__shared_owners_;
          do
            v521 = __ldxr(v520);
          while (__stxr(v521 + 1, v520));
          do
            v522 = __ldaxr(v520);
          while (__stlxr(v522 - 1, v520));
          if (!v522)
          {
            ((void (*)(std::__shared_weak_count *))v519->__on_zero_shared)(v519);
            std::__shared_weak_count::__release_weak(v519);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v518 + 88))(v518, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v517 = v1119;
      }
      v523 = (4 * v81);
      if (v515 == 1)
        goto LABEL_785;
      if (!(_DWORD)v523)
        goto LABEL_792;
      v524 = 0;
      v525 = 2 * v516;
      v526 = 2 * v523;
      do
      {
        if (!v517
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1980;
        }
        v527 = v523;
        v528 = 0;
        v529 = *(_QWORD *)(v80 + 48);
        do
        {
          sub_20E9ED948(v529, &v517[v528 / 2]);
          v528 += 2;
        }
        while (v526 != v528);
        v517 = (_WORD *)((char *)v517 + v525);
        ++v524;
        v523 = v527;
      }
      while (v524 != v515 - 1);
LABEL_785:
      if ((_DWORD)v523 && !v517)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1980:
          abort();
        }
        v517 = 0;
      }
      if ((_DWORD)v523)
      {
        v530 = *(_QWORD *)(v80 + 48);
        v531 = 2 * v523;
        do
        {
          sub_20E9ED948(v530, v517++);
          v531 -= 2;
        }
        while (v531);
      }
LABEL_792:
      v532 = v1130;
      v1130 = 0;
      if (v532)
        (*(void (**)(uint64_t))(*(_QWORD *)v532 + 8))(v532);
      v473 = v1118;
      if (!v1118)
        return;
      v533 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v533);
      while (__stlxr(v475 - 1, v533));
      goto LABEL_1975;
    case 15:
      v1116 = &off_24CA121C0;
      sub_20FF6E830((std::string::size_type *)&v1117, a3);
      v395 = *a2;
      v396 = v1127;
      v397 = v1117;
      if (!v1117)
        goto LABEL_1666;
      v398 = v1118;
      if (v1118)
      {
        v399 = (unint64_t *)&v1118->__shared_owners_;
        do
          v400 = __ldxr(v399);
        while (__stxr(v400 + 1, v399));
        do
          v401 = __ldaxr(v399);
        while (__stlxr(v401 - 1, v399));
        if (!v401)
        {
          ((void (*)(std::__shared_weak_count *))v398->__on_zero_shared)(v398);
          std::__shared_weak_count::__release_weak(v398);
        }
        v397 = v1117;
        v402 = v1118;
        if (v1118)
        {
          v403 = (unint64_t *)&v1118->__shared_owners_;
          do
            v404 = __ldxr(v403);
          while (__stxr(v404 + 1, v403));
          do
            v405 = __ldaxr(v403);
          while (__stlxr(v405 - 1, v403));
          if (!v405)
          {
            ((void (*)(std::__shared_weak_count *))v402->__on_zero_shared)(v402);
            std::__shared_weak_count::__release_weak(v402);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v397 + 96))(&v1130, v397, 1);
      else
LABEL_1666:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1835;
      if (!v1121)
        goto LABEL_1835;
      v975 = v1122;
      if (!v1122)
        goto LABEL_1835;
      v976 = v1126;
      v977 = v1119;
      if (v1128 && v1119)
      {
        v978 = v1117;
        v979 = v1118;
        if (v1118)
        {
          v980 = (unint64_t *)&v1118->__shared_owners_;
          do
            v981 = __ldxr(v980);
          while (__stxr(v981 + 1, v980));
          do
            v982 = __ldaxr(v980);
          while (__stlxr(v982 - 1, v980));
          if (!v982)
          {
            ((void (*)(std::__shared_weak_count *))v979->__on_zero_shared)(v979);
            std::__shared_weak_count::__release_weak(v979);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v978 + 88))(v978, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v977 = v1119;
      }
      v983 = v975 - 1;
      v1112 = (4 * v396);
      if (!v983)
        goto LABEL_1687;
      if (!(4 * v396))
        goto LABEL_1835;
      for (k = 0; k != v983; ++k)
      {
        if (!v977
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1690;
        }
        v985 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v395 + 48), &v1115);
          v977[v985++] = v1115;
        }
        while (v1112 != v985);
        v977 += v976;
      }
LABEL_1687:
      if (!(_DWORD)v1112 || v977)
      {
        if (!(_DWORD)v1112)
          goto LABEL_1835;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1690:
        abort();
      }
      v1046 = 2 * v1112;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v395 + 48), &v1115);
        *v977++ = v1115;
        v1046 -= 2;
      }
      while (v1046);
LABEL_1835:
      v1047 = v1130;
      v1130 = 0;
      if (v1047)
        (*(void (**)(uint64_t))(*(_QWORD *)v1047 + 8))(v1047);
      v473 = v1118;
      if (!v1118)
        return;
      v1048 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1048);
      while (__stlxr(v475 - 1, v1048));
      goto LABEL_1975;
    case 16:
      v1116 = &off_24CA122B8;
      sub_20FF6F098((std::string::size_type *)&v1117, a3);
      v288 = *a2;
      v289 = v1127;
      v290 = v1117;
      if (!v1117)
        goto LABEL_1337;
      v291 = v1118;
      if (v1118)
      {
        v292 = (unint64_t *)&v1118->__shared_owners_;
        do
          v293 = __ldxr(v292);
        while (__stxr(v293 + 1, v292));
        do
          v294 = __ldaxr(v292);
        while (__stlxr(v294 - 1, v292));
        if (!v294)
        {
          ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
          std::__shared_weak_count::__release_weak(v291);
        }
        v290 = v1117;
        v295 = v1118;
        if (v1118)
        {
          v296 = (unint64_t *)&v1118->__shared_owners_;
          do
            v297 = __ldxr(v296);
          while (__stxr(v297 + 1, v296));
          do
            v298 = __ldaxr(v296);
          while (__stlxr(v298 - 1, v296));
          if (!v298)
          {
            ((void (*)(std::__shared_weak_count *))v295->__on_zero_shared)(v295);
            std::__shared_weak_count::__release_weak(v295);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v290 + 96))(&v1130, v290, 1);
      else
LABEL_1337:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1365;
      if (!v1121)
        goto LABEL_1365;
      v813 = v1122;
      if (!v1122)
        goto LABEL_1365;
      v814 = v1126;
      v815 = (float *)v1119;
      if (v1128 && v1119)
      {
        v816 = v1117;
        v817 = v1118;
        if (v1118)
        {
          v818 = (unint64_t *)&v1118->__shared_owners_;
          do
            v819 = __ldxr(v818);
          while (__stxr(v819 + 1, v818));
          do
            v820 = __ldaxr(v818);
          while (__stlxr(v820 - 1, v818));
          if (!v820)
          {
            ((void (*)(std::__shared_weak_count *))v817->__on_zero_shared)(v817);
            std::__shared_weak_count::__release_weak(v817);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v816 + 88))(v816, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v815 = (float *)v1119;
      }
      v821 = (4 * v289);
      if (v813 == 1)
        goto LABEL_1358;
      if (!(_DWORD)v821)
        goto LABEL_1365;
      v822 = 0;
      v823 = 4 * v814;
      v824 = 4 * v821;
      do
      {
        if (!v815
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1996;
        }
        v825 = v821;
        v826 = 0;
        v827 = *(_QWORD *)(v288 + 48);
        do
        {
          sub_20E9EDF48(v827, &v815[v826 / 4]);
          v826 += 4;
        }
        while (v824 != v826);
        v815 = (float *)((char *)v815 + v823);
        ++v822;
        v821 = v825;
      }
      while (v822 != v813 - 1);
LABEL_1358:
      if ((_DWORD)v821 && !v815)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1996:
          abort();
        }
        v815 = 0;
      }
      if ((_DWORD)v821)
      {
        v828 = *(_QWORD *)(v288 + 48);
        v829 = 4 * v821;
        do
        {
          sub_20E9EDF48(v828, v815++);
          v829 -= 4;
        }
        while (v829);
      }
LABEL_1365:
      v830 = v1130;
      v1130 = 0;
      if (v830)
        (*(void (**)(uint64_t))(*(_QWORD *)v830 + 8))(v830);
      v473 = v1118;
      if (!v1118)
        return;
      v831 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v831);
      while (__stlxr(v475 - 1, v831));
      goto LABEL_1975;
    case 17:
      v1116 = &off_24CA123B0;
      sub_20FF6F900((std::string::size_type *)&v1117, a3);
      v406 = *a2;
      v407 = v1127;
      v408 = v1117;
      if (!v1117)
        goto LABEL_1691;
      v409 = v1118;
      if (v1118)
      {
        v410 = (unint64_t *)&v1118->__shared_owners_;
        do
          v411 = __ldxr(v410);
        while (__stxr(v411 + 1, v410));
        do
          v412 = __ldaxr(v410);
        while (__stlxr(v412 - 1, v410));
        if (!v412)
        {
          ((void (*)(std::__shared_weak_count *))v409->__on_zero_shared)(v409);
          std::__shared_weak_count::__release_weak(v409);
        }
        v408 = v1117;
        v413 = v1118;
        if (v1118)
        {
          v414 = (unint64_t *)&v1118->__shared_owners_;
          do
            v415 = __ldxr(v414);
          while (__stxr(v415 + 1, v414));
          do
            v416 = __ldaxr(v414);
          while (__stlxr(v416 - 1, v414));
          if (!v416)
          {
            ((void (*)(std::__shared_weak_count *))v413->__on_zero_shared)(v413);
            std::__shared_weak_count::__release_weak(v413);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v408 + 96))(&v1130, v408, 1);
      else
LABEL_1691:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1956;
      if (!v1121)
        goto LABEL_1956;
      v986 = v1122;
      if (!v1122)
        goto LABEL_1956;
      v987 = v1126;
      v988 = v1119;
      if (v1128 && v1119)
      {
        v989 = v1117;
        v990 = v1118;
        if (v1118)
        {
          v991 = (unint64_t *)&v1118->__shared_owners_;
          do
            v992 = __ldxr(v991);
          while (__stxr(v992 + 1, v991));
          do
            v993 = __ldaxr(v991);
          while (__stlxr(v993 - 1, v991));
          if (!v993)
          {
            ((void (*)(std::__shared_weak_count *))v990->__on_zero_shared)(v990);
            std::__shared_weak_count::__release_weak(v990);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v989 + 88))(v989, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v988 = v1119;
      }
      v994 = (3 * v407);
      v995 = v986 - 1;
      if (v986 == 1)
      {
        v1113 = v407;
LABEL_1949:
        if (v1113 && !v988)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2006;
          }
          v988 = 0;
        }
        if (v1113)
        {
          v1079 = *(_QWORD *)(v406 + 48);
          do
          {
            sub_20E9ED7B4(v1079, v988++);
            --v994;
          }
          while (v994);
        }
      }
      else if (v407)
      {
        v1113 = v407;
        v996 = 0;
        while (v988
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v997 = 0;
          v998 = *(_QWORD *)(v406 + 48);
          do
            sub_20E9ED7B4(v998, &v988[v997++]);
          while (v994 != v997);
          v988 += v987;
          if (++v996 == v995)
            goto LABEL_1949;
        }
LABEL_2006:
        abort();
      }
LABEL_1956:
      v1080 = v1130;
      v1130 = 0;
      if (v1080)
        (*(void (**)(uint64_t))(*(_QWORD *)v1080 + 8))(v1080);
      v473 = v1118;
      if (!v1118)
        return;
      v1081 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1081);
      while (__stlxr(v475 - 1, v1081));
      goto LABEL_1975;
    case 18:
      v1116 = &off_24CA124A8;
      sub_20FF70164((std::string::size_type *)&v1117, a3);
      v113 = *a2;
      v114 = v1127;
      v115 = v1117;
      if (!v1117)
        goto LABEL_866;
      v116 = v1118;
      if (v1118)
      {
        v117 = (unint64_t *)&v1118->__shared_owners_;
        do
          v118 = __ldxr(v117);
        while (__stxr(v118 + 1, v117));
        do
          v119 = __ldaxr(v117);
        while (__stlxr(v119 - 1, v117));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
        v115 = v1117;
        v120 = v1118;
        if (v1118)
        {
          v121 = (unint64_t *)&v1118->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
          do
            v123 = __ldaxr(v121);
          while (__stlxr(v123 - 1, v121));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
            std::__shared_weak_count::__release_weak(v120);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v115 + 96))(&v1130, v115, 1);
      else
LABEL_866:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1886;
      if (!v1121)
        goto LABEL_1886;
      v568 = v1122;
      if (!v1122)
        goto LABEL_1886;
      v569 = v1126;
      v570 = v1119;
      if (v1128 && v1119)
      {
        v571 = v1117;
        v572 = v1118;
        if (v1118)
        {
          v573 = (unint64_t *)&v1118->__shared_owners_;
          do
            v574 = __ldxr(v573);
          while (__stxr(v574 + 1, v573));
          do
            v575 = __ldaxr(v573);
          while (__stlxr(v575 - 1, v573));
          if (!v575)
          {
            ((void (*)(std::__shared_weak_count *))v572->__on_zero_shared)(v572);
            std::__shared_weak_count::__release_weak(v572);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v571 + 88))(v571, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v570 = v1119;
      }
      v1103 = (3 * v114);
      if (v568 == 1)
      {
        v1088 = v114;
LABEL_1879:
        if (v1088 && !v570)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1987;
          }
          v570 = 0;
        }
        if (v1088)
        {
          v1060 = *(_QWORD *)(v113 + 48);
          v1061 = 2 * v1103;
          do
          {
            sub_20E9ED948(v1060, v570++);
            v1061 -= 2;
          }
          while (v1061);
        }
      }
      else if (v114)
      {
        v1088 = v114;
        v576 = 0;
        v577 = 2 * v569;
        while (v570
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v578 = 0;
          v579 = *(_QWORD *)(v113 + 48);
          do
            sub_20E9ED948(v579, &v570[v578++]);
          while (v1103 != v578);
          v570 = (_WORD *)((char *)v570 + v577);
          if (++v576 == v568 - 1)
            goto LABEL_1879;
        }
LABEL_1987:
        abort();
      }
LABEL_1886:
      v1062 = v1130;
      v1130 = 0;
      if (v1062)
        (*(void (**)(uint64_t))(*(_QWORD *)v1062 + 8))(v1062);
      v473 = v1118;
      if (!v1118)
        return;
      v1063 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1063);
      while (__stlxr(v475 - 1, v1063));
      goto LABEL_1975;
    case 19:
      v1116 = &off_24CA125A0;
      sub_20FF709CC((std::string::size_type *)&v1117, a3);
      v26 = *a2;
      v1094 = v1127;
      v27 = v1117;
      if (!v1117)
        goto LABEL_627;
      v28 = v1118;
      if (v1118)
      {
        v29 = (unint64_t *)&v1118->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
        v27 = v1117;
        v32 = v1118;
        if (v1118)
        {
          v33 = (unint64_t *)&v1118->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v27 + 96))(&v1130, v27, 1);
      else
LABEL_627:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1772;
      if (!v1121)
        goto LABEL_1772;
      v449 = v1122;
      if (!v1122)
        goto LABEL_1772;
      v450 = v1126;
      v451 = v1119;
      if (v1128 && v1119)
      {
        v452 = v1117;
        v453 = v1118;
        if (v1118)
        {
          v454 = (unint64_t *)&v1118->__shared_owners_;
          do
            v455 = __ldxr(v454);
          while (__stxr(v455 + 1, v454));
          do
            v456 = __ldaxr(v454);
          while (__stlxr(v456 - 1, v454));
          if (!v456)
          {
            ((void (*)(std::__shared_weak_count *))v453->__on_zero_shared)(v453);
            std::__shared_weak_count::__release_weak(v453);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v452 + 88))(v452, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v451 = v1119;
      }
      v1085 = (3 * v1094);
      if (v449 == 1)
        goto LABEL_648;
      if (!v1094)
        goto LABEL_1772;
      v457 = 0;
      do
      {
        if (!v451
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_651;
        }
        v458 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v26 + 48), &v1115);
          v451[v458++] = v1115;
        }
        while (v1085 != v458);
        v451 += v450;
        ++v457;
      }
      while (v457 != v449 - 1);
LABEL_648:
      if (!v1094 || v451)
      {
        if (!v1094)
          goto LABEL_1772;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_651:
        abort();
      }
      v1025 = 2 * v1085;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v26 + 48), &v1115);
        *v451++ = v1115;
        v1025 -= 2;
      }
      while (v1025);
LABEL_1772:
      v1026 = v1130;
      v1130 = 0;
      if (v1026)
        (*(void (**)(uint64_t))(*(_QWORD *)v1026 + 8))(v1026);
      v473 = v1118;
      if (!v1118)
        return;
      v1027 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1027);
      while (__stlxr(v475 - 1, v1027));
      goto LABEL_1975;
    case 20:
      v1116 = &off_24CA12698;
      sub_20FF71234((std::string::size_type *)&v1117, a3);
      v373 = *a2;
      v374 = v1127;
      v375 = v1117;
      if (!v1117)
        goto LABEL_1610;
      v376 = v1118;
      if (v1118)
      {
        v377 = (unint64_t *)&v1118->__shared_owners_;
        do
          v378 = __ldxr(v377);
        while (__stxr(v378 + 1, v377));
        do
          v379 = __ldaxr(v377);
        while (__stlxr(v379 - 1, v377));
        if (!v379)
        {
          ((void (*)(std::__shared_weak_count *))v376->__on_zero_shared)(v376);
          std::__shared_weak_count::__release_weak(v376);
        }
        v375 = v1117;
        v380 = v1118;
        if (v1118)
        {
          v381 = (unint64_t *)&v1118->__shared_owners_;
          do
            v382 = __ldxr(v381);
          while (__stxr(v382 + 1, v381));
          do
            v383 = __ldaxr(v381);
          while (__stlxr(v383 - 1, v381));
          if (!v383)
          {
            ((void (*)(std::__shared_weak_count *))v380->__on_zero_shared)(v380);
            std::__shared_weak_count::__release_weak(v380);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v375 + 96))(&v1130, v375, 1);
      else
LABEL_1610:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1942;
      if (!v1121)
        goto LABEL_1942;
      v944 = v1122;
      if (!v1122)
        goto LABEL_1942;
      v945 = v1126;
      v946 = (float *)v1119;
      if (v1128 && v1119)
      {
        v947 = v1117;
        v948 = v1118;
        if (v1118)
        {
          v949 = (unint64_t *)&v1118->__shared_owners_;
          do
            v950 = __ldxr(v949);
          while (__stxr(v950 + 1, v949));
          do
            v951 = __ldaxr(v949);
          while (__stlxr(v951 - 1, v949));
          if (!v951)
          {
            ((void (*)(std::__shared_weak_count *))v948->__on_zero_shared)(v948);
            std::__shared_weak_count::__release_weak(v948);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v947 + 88))(v947, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v946 = (float *)v1119;
      }
      v1111 = (3 * v374);
      if (v944 == 1)
      {
        v1092 = v374;
LABEL_1935:
        if (v1092 && !v946)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2005;
          }
          v946 = 0;
        }
        if (v1092)
        {
          v1075 = *(_QWORD *)(v373 + 48);
          v1076 = 4 * v1111;
          do
          {
            sub_20E9EDF48(v1075, v946++);
            v1076 -= 4;
          }
          while (v1076);
        }
      }
      else if (v374)
      {
        v1092 = v374;
        v952 = 0;
        v953 = 4 * v945;
        while (v946
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v954 = 0;
          v955 = *(_QWORD *)(v373 + 48);
          do
            sub_20E9EDF48(v955, &v946[v954++]);
          while (v1111 != v954);
          v946 = (float *)((char *)v946 + v953);
          if (++v952 == v944 - 1)
            goto LABEL_1935;
        }
LABEL_2005:
        abort();
      }
LABEL_1942:
      v1077 = v1130;
      v1130 = 0;
      if (v1077)
        (*(void (**)(uint64_t))(*(_QWORD *)v1077 + 8))(v1077);
      v473 = v1118;
      if (!v1118)
        return;
      v1078 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1078);
      while (__stlxr(v475 - 1, v1078));
      goto LABEL_1975;
    case 21:
      v1116 = &off_24C9F0FA0;
      sub_20FF71A34(&v1117, a3);
      v427 = *a2;
      v428 = v1127;
      v429 = v1117;
      if (!v1117)
        goto LABEL_1738;
      v430 = v1118;
      if (v1118)
      {
        v431 = (unint64_t *)&v1118->__shared_owners_;
        do
          v432 = __ldxr(v431);
        while (__stxr(v432 + 1, v431));
        do
          v433 = __ldaxr(v431);
        while (__stlxr(v433 - 1, v431));
        if (!v433)
        {
          ((void (*)(std::__shared_weak_count *))v430->__on_zero_shared)(v430);
          std::__shared_weak_count::__release_weak(v430);
        }
        v429 = v1117;
        v434 = v1118;
        if (v1118)
        {
          v435 = (unint64_t *)&v1118->__shared_owners_;
          do
            v436 = __ldxr(v435);
          while (__stxr(v436 + 1, v435));
          do
            v437 = __ldaxr(v435);
          while (__stlxr(v437 - 1, v435));
          if (!v437)
          {
            ((void (*)(std::__shared_weak_count *))v434->__on_zero_shared)(v434);
            std::__shared_weak_count::__release_weak(v434);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v429 + 96))(&v1130, v429, 1);
      else
LABEL_1738:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1970;
      if (!v1121)
        goto LABEL_1970;
      v1009 = v1122;
      if (!v1122)
        goto LABEL_1970;
      v1010 = v1126;
      v1011 = v1119;
      if (v1128 && v1119)
      {
        v1012 = v1117;
        v1013 = v1118;
        if (v1118)
        {
          v1014 = (unint64_t *)&v1118->__shared_owners_;
          do
            v1015 = __ldxr(v1014);
          while (__stxr(v1015 + 1, v1014));
          do
            v1016 = __ldaxr(v1014);
          while (__stlxr(v1016 - 1, v1014));
          if (!v1016)
          {
            ((void (*)(std::__shared_weak_count *))v1013->__on_zero_shared)(v1013);
            std::__shared_weak_count::__release_weak(v1013);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1012 + 88))(v1012, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1011 = v1119;
      }
      v1017 = (3 * v428);
      v1018 = v1009 - 1;
      if (v1009 == 1)
      {
        v1114 = v428;
LABEL_1963:
        if (v1114 && !v1011)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2007;
          }
          v1011 = 0;
        }
        if (v1114)
        {
          v1082 = *(_QWORD *)(v427 + 48);
          do
          {
            sub_20E9ED7B4(v1082, v1011++);
            --v1017;
          }
          while (v1017);
        }
      }
      else if (v428)
      {
        v1114 = v428;
        v1019 = 0;
        while (v1011
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1020 = 0;
          v1021 = *(_QWORD *)(v427 + 48);
          do
            sub_20E9ED7B4(v1021, &v1011[v1020++]);
          while (v1017 != v1020);
          v1011 += v1010;
          if (++v1019 == v1018)
            goto LABEL_1963;
        }
LABEL_2007:
        abort();
      }
LABEL_1970:
      v1083 = v1130;
      v1130 = 0;
      if (v1083)
        (*(void (**)(uint64_t))(*(_QWORD *)v1083 + 8))(v1083);
      v473 = v1118;
      if (!v1118)
        return;
      v1084 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1084);
      while (__stlxr(v475 - 1, v1084));
      goto LABEL_1975;
    case 22:
      v1116 = &off_24CA12790;
      sub_20FF71E24(&v1117, a3);
      v146 = *a2;
      v147 = v1127;
      v148 = v1117;
      if (!v1117)
        goto LABEL_938;
      v149 = v1118;
      if (v1118)
      {
        v150 = (unint64_t *)&v1118->__shared_owners_;
        do
          v151 = __ldxr(v150);
        while (__stxr(v151 + 1, v150));
        do
          v152 = __ldaxr(v150);
        while (__stlxr(v152 - 1, v150));
        if (!v152)
        {
          ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
          std::__shared_weak_count::__release_weak(v149);
        }
        v148 = v1117;
        v153 = v1118;
        if (v1118)
        {
          v154 = (unint64_t *)&v1118->__shared_owners_;
          do
            v155 = __ldxr(v154);
          while (__stxr(v155 + 1, v154));
          do
            v156 = __ldaxr(v154);
          while (__stlxr(v156 - 1, v154));
          if (!v156)
          {
            ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
            std::__shared_weak_count::__release_weak(v153);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v148 + 96))(&v1130, v148, 1);
      else
LABEL_938:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1900;
      if (!v1121)
        goto LABEL_1900;
      v602 = v1122;
      if (!v1122)
        goto LABEL_1900;
      v603 = v1126;
      v604 = v1119;
      if (v1128 && v1119)
      {
        v605 = v1117;
        v606 = v1118;
        if (v1118)
        {
          v607 = (unint64_t *)&v1118->__shared_owners_;
          do
            v608 = __ldxr(v607);
          while (__stxr(v608 + 1, v607));
          do
            v609 = __ldaxr(v607);
          while (__stlxr(v609 - 1, v607));
          if (!v609)
          {
            ((void (*)(std::__shared_weak_count *))v606->__on_zero_shared)(v606);
            std::__shared_weak_count::__release_weak(v606);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v605 + 88))(v605, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v604 = v1119;
      }
      v1106 = (3 * v147);
      if (v602 == 1)
      {
        v1089 = v147;
LABEL_1893:
        if (v1089 && !v604)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1988;
          }
          v604 = 0;
        }
        if (v1089)
        {
          v1064 = *(_QWORD *)(v146 + 48);
          v1065 = 2 * v1106;
          do
          {
            sub_20E9ED948(v1064, v604++);
            v1065 -= 2;
          }
          while (v1065);
        }
      }
      else if (v147)
      {
        v1089 = v147;
        v610 = 0;
        v611 = 2 * v603;
        while (v604
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v612 = 0;
          v613 = *(_QWORD *)(v146 + 48);
          do
            sub_20E9ED948(v613, &v604[v612++]);
          while (v1106 != v612);
          v604 = (_WORD *)((char *)v604 + v611);
          if (++v610 == v602 - 1)
            goto LABEL_1893;
        }
LABEL_1988:
        abort();
      }
LABEL_1900:
      v1066 = v1130;
      v1130 = 0;
      if (v1066)
        (*(void (**)(uint64_t))(*(_QWORD *)v1066 + 8))(v1066);
      v473 = v1118;
      if (!v1118)
        return;
      v1067 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1067);
      while (__stlxr(v475 - 1, v1067));
      goto LABEL_1975;
    case 23:
      v1116 = &off_24CA12888;
      sub_20FF726DC(&v1117, a3);
      v417 = *a2;
      v1099 = v1127;
      v418 = v1117;
      if (!v1117)
        goto LABEL_1713;
      v419 = v1118;
      if (v1118)
      {
        v420 = (unint64_t *)&v1118->__shared_owners_;
        do
          v421 = __ldxr(v420);
        while (__stxr(v421 + 1, v420));
        do
          v422 = __ldaxr(v420);
        while (__stlxr(v422 - 1, v420));
        if (!v422)
        {
          ((void (*)(std::__shared_weak_count *))v419->__on_zero_shared)(v419);
          std::__shared_weak_count::__release_weak(v419);
        }
        v418 = v1117;
        v423 = v1118;
        if (v1118)
        {
          v424 = (unint64_t *)&v1118->__shared_owners_;
          do
            v425 = __ldxr(v424);
          while (__stxr(v425 + 1, v424));
          do
            v426 = __ldaxr(v424);
          while (__stlxr(v426 - 1, v424));
          if (!v426)
          {
            ((void (*)(std::__shared_weak_count *))v423->__on_zero_shared)(v423);
            std::__shared_weak_count::__release_weak(v423);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v418 + 96))(&v1130, v418, 1);
      else
LABEL_1713:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1844;
      if (!v1121)
        goto LABEL_1844;
      v999 = v1122;
      if (!v1122)
        goto LABEL_1844;
      v1000 = v1126;
      v1001 = v1119;
      if (v1128 && v1119)
      {
        v1002 = v1117;
        v1003 = v1118;
        if (v1118)
        {
          v1004 = (unint64_t *)&v1118->__shared_owners_;
          do
            v1005 = __ldxr(v1004);
          while (__stxr(v1005 + 1, v1004));
          do
            v1006 = __ldaxr(v1004);
          while (__stlxr(v1006 - 1, v1004));
          if (!v1006)
          {
            ((void (*)(std::__shared_weak_count *))v1003->__on_zero_shared)(v1003);
            std::__shared_weak_count::__release_weak(v1003);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1002 + 88))(v1002, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1001 = v1119;
      }
      v1093 = (3 * v1099);
      if (v999 == 1)
        goto LABEL_1734;
      if (!v1099)
        goto LABEL_1844;
      v1007 = 0;
      do
      {
        if (!v1001
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1737;
        }
        v1008 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v417 + 48), &v1115);
          v1001[v1008++] = v1115;
        }
        while (v1093 != v1008);
        v1001 += v1000;
        ++v1007;
      }
      while (v1007 != v999 - 1);
LABEL_1734:
      if (!v1099 || v1001)
      {
        if (!v1099)
          goto LABEL_1844;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1737:
        abort();
      }
      v1049 = 2 * v1093;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v417 + 48), &v1115);
        *v1001++ = v1115;
        v1049 -= 2;
      }
      while (v1049);
LABEL_1844:
      v1050 = v1130;
      v1130 = 0;
      if (v1050)
        (*(void (**)(uint64_t))(*(_QWORD *)v1050 + 8))(v1050);
      v473 = v1118;
      if (!v1118)
        return;
      v1051 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1051);
      while (__stlxr(v475 - 1, v1051));
      goto LABEL_1975;
    case 24:
      v1116 = &off_24CA12980;
      sub_20FF72F94(&v1117, a3);
      v69 = *a2;
      v70 = v1127;
      v71 = v1117;
      if (!v1117)
        goto LABEL_742;
      v72 = v1118;
      if (v1118)
      {
        v73 = (unint64_t *)&v1118->__shared_owners_;
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
        do
          v75 = __ldaxr(v73);
        while (__stlxr(v75 - 1, v73));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
        v71 = v1117;
        v76 = v1118;
        if (v1118)
        {
          v77 = (unint64_t *)&v1118->__shared_owners_;
          do
            v78 = __ldxr(v77);
          while (__stxr(v78 + 1, v77));
          do
            v79 = __ldaxr(v77);
          while (__stlxr(v79 - 1, v77));
          if (!v79)
          {
            ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
            std::__shared_weak_count::__release_weak(v76);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v71 + 96))(&v1130, v71, 1);
      else
LABEL_742:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1872;
      if (!v1121)
        goto LABEL_1872;
      v503 = v1122;
      if (!v1122)
        goto LABEL_1872;
      v504 = v1126;
      v505 = (float *)v1119;
      if (v1128 && v1119)
      {
        v506 = v1117;
        v507 = v1118;
        if (v1118)
        {
          v508 = (unint64_t *)&v1118->__shared_owners_;
          do
            v509 = __ldxr(v508);
          while (__stxr(v509 + 1, v508));
          do
            v510 = __ldaxr(v508);
          while (__stlxr(v510 - 1, v508));
          if (!v510)
          {
            ((void (*)(std::__shared_weak_count *))v507->__on_zero_shared)(v507);
            std::__shared_weak_count::__release_weak(v507);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v506 + 88))(v506, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v505 = (float *)v1119;
      }
      v1102 = (3 * v70);
      if (v503 == 1)
      {
        v1087 = v70;
LABEL_1865:
        if (v1087 && !v505)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1986;
          }
          v505 = 0;
        }
        if (v1087)
        {
          v1056 = *(_QWORD *)(v69 + 48);
          v1057 = 4 * v1102;
          do
          {
            sub_20E9EDF48(v1056, v505++);
            v1057 -= 4;
          }
          while (v1057);
        }
      }
      else if (v70)
      {
        v1087 = v70;
        v511 = 0;
        v512 = 4 * v504;
        while (v505
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v513 = 0;
          v514 = *(_QWORD *)(v69 + 48);
          do
            sub_20E9EDF48(v514, &v505[v513++]);
          while (v1102 != v513);
          v505 = (float *)((char *)v505 + v512);
          if (++v511 == v503 - 1)
            goto LABEL_1865;
        }
LABEL_1986:
        abort();
      }
LABEL_1872:
      v1058 = v1130;
      v1130 = 0;
      if (v1058)
        (*(void (**)(uint64_t))(*(_QWORD *)v1058 + 8))(v1058);
      v473 = v1118;
      if (v1118)
      {
        v1059 = (unint64_t *)&v1118->__shared_owners_;
        do
          v475 = __ldaxr(v1059);
        while (__stlxr(v475 - 1, v1059));
LABEL_1975:
        if (!v475)
        {
          ((void (*)(std::__shared_weak_count *))v473->__on_zero_shared)(v473);
          std::__shared_weak_count::__release_weak(v473);
        }
      }
      return;
    case 25:
      v1116 = &off_24C9C04B8;
      sub_20FF737E4(&v1117, a3);
      v36 = *a2;
      v37 = v1127;
      v38 = v1117;
      if (!v1117)
        goto LABEL_652;
      v39 = v1118;
      if (v1118)
      {
        v40 = (unint64_t *)&v1118->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
        v38 = v1117;
        v43 = v1118;
        if (v1118)
        {
          v44 = (unint64_t *)&v1118->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v38 + 96))(&v1130, v38, 1);
      else
LABEL_652:
        v1130 = 0;
      if (!v1120)
        goto LABEL_680;
      if (!v1121)
        goto LABEL_680;
      v459 = v1122;
      if (!v1122)
        goto LABEL_680;
      v460 = v1126;
      v461 = v1119;
      if (v1128 && v1119)
      {
        v462 = v1117;
        v463 = v1118;
        if (v1118)
        {
          v464 = (unint64_t *)&v1118->__shared_owners_;
          do
            v465 = __ldxr(v464);
          while (__stxr(v465 + 1, v464));
          do
            v466 = __ldaxr(v464);
          while (__stlxr(v466 - 1, v464));
          if (!v466)
          {
            ((void (*)(std::__shared_weak_count *))v463->__on_zero_shared)(v463);
            std::__shared_weak_count::__release_weak(v463);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v462 + 88))(v462, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v461 = v1119;
      }
      v467 = (4 * v37);
      if (v459 == 1)
        goto LABEL_673;
      if (!(_DWORD)v467)
        goto LABEL_680;
      v468 = 0;
      do
      {
        if (!v461
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1978;
        }
        v469 = 0;
        v470 = *(_QWORD *)(v36 + 48);
        do
          sub_20E9ED7B4(v470, &v461[v469++]);
        while (v467 != v469);
        v461 += v460;
        ++v468;
      }
      while (v468 != v459 - 1);
LABEL_673:
      if ((_DWORD)v467 && !v461)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1978:
          abort();
        }
        v461 = 0;
      }
      if ((_DWORD)v467)
      {
        v471 = *(_QWORD *)(v36 + 48);
        do
        {
          sub_20E9ED7B4(v471, v461++);
          --v467;
        }
        while (v467);
      }
LABEL_680:
      v472 = v1130;
      v1130 = 0;
      if (v472)
        (*(void (**)(uint64_t))(*(_QWORD *)v472 + 8))(v472);
      v473 = v1118;
      if (!v1118)
        return;
      v474 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v474);
      while (__stlxr(v475 - 1, v474));
      goto LABEL_1975;
    case 26:
      v1116 = &off_24CA12A78;
      sub_20FF73E90((std::string::size_type *)&v1117, a3);
      v157 = *a2;
      v158 = v1127;
      v159 = v1117;
      if (!v1117)
        goto LABEL_960;
      v160 = v1118;
      if (v1118)
      {
        v161 = (unint64_t *)&v1118->__shared_owners_;
        do
          v162 = __ldxr(v161);
        while (__stxr(v162 + 1, v161));
        do
          v163 = __ldaxr(v161);
        while (__stlxr(v163 - 1, v161));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
        v159 = v1117;
        v164 = v1118;
        if (v1118)
        {
          v165 = (unint64_t *)&v1118->__shared_owners_;
          do
            v166 = __ldxr(v165);
          while (__stxr(v166 + 1, v165));
          do
            v167 = __ldaxr(v165);
          while (__stlxr(v167 - 1, v165));
          if (!v167)
          {
            ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
            std::__shared_weak_count::__release_weak(v164);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v159 + 96))(&v1130, v159, 1);
      else
LABEL_960:
        v1130 = 0;
      if (!v1120)
        goto LABEL_988;
      if (!v1121)
        goto LABEL_988;
      v614 = v1122;
      if (!v1122)
        goto LABEL_988;
      v615 = v1126;
      v616 = v1119;
      if (v1128 && v1119)
      {
        v617 = v1117;
        v618 = v1118;
        if (v1118)
        {
          v619 = (unint64_t *)&v1118->__shared_owners_;
          do
            v620 = __ldxr(v619);
          while (__stxr(v620 + 1, v619));
          do
            v621 = __ldaxr(v619);
          while (__stlxr(v621 - 1, v619));
          if (!v621)
          {
            ((void (*)(std::__shared_weak_count *))v618->__on_zero_shared)(v618);
            std::__shared_weak_count::__release_weak(v618);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v617 + 88))(v617, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v616 = v1119;
      }
      v622 = (4 * v158);
      if (v614 == 1)
        goto LABEL_981;
      if (!(_DWORD)v622)
        goto LABEL_988;
      v623 = 0;
      v624 = 2 * v615;
      v625 = 2 * v622;
      do
      {
        if (!v616
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1983;
        }
        v626 = v622;
        v627 = 0;
        v628 = *(_QWORD *)(v157 + 48);
        do
        {
          sub_20E9ED948(v628, &v616[v627 / 2]);
          v627 += 2;
        }
        while (v625 != v627);
        v616 = (_WORD *)((char *)v616 + v624);
        ++v623;
        v622 = v626;
      }
      while (v623 != v614 - 1);
LABEL_981:
      if ((_DWORD)v622 && !v616)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1983:
          abort();
        }
        v616 = 0;
      }
      if ((_DWORD)v622)
      {
        v629 = *(_QWORD *)(v157 + 48);
        v630 = 2 * v622;
        do
        {
          sub_20E9ED948(v629, v616++);
          v630 -= 2;
        }
        while (v630);
      }
LABEL_988:
      v631 = v1130;
      v1130 = 0;
      if (v631)
        (*(void (**)(uint64_t))(*(_QWORD *)v631 + 8))(v631);
      v473 = v1118;
      if (!v1118)
        return;
      v632 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v632);
      while (__stlxr(v475 - 1, v632));
      goto LABEL_1975;
    case 27:
      v1116 = &off_24CA12B70;
      sub_20FF746F8((std::string::size_type *)&v1117, a3);
      v15 = *a2;
      v16 = v1127;
      v17 = v1117;
      if (!v1117)
        goto LABEL_602;
      v18 = v1118;
      if (v1118)
      {
        v19 = (unint64_t *)&v1118->__shared_owners_;
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 1, v19));
        do
          v21 = __ldaxr(v19);
        while (__stlxr(v21 - 1, v19));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        v17 = v1117;
        v22 = v1118;
        if (v1118)
        {
          v23 = (unint64_t *)&v1118->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v1130, v17, 1);
      else
LABEL_602:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1763;
      if (!v1121)
        goto LABEL_1763;
      v438 = v1122;
      if (!v1122)
        goto LABEL_1763;
      v439 = v1126;
      v440 = v1119;
      if (v1128 && v1119)
      {
        v441 = v1117;
        v442 = v1118;
        if (v1118)
        {
          v443 = (unint64_t *)&v1118->__shared_owners_;
          do
            v444 = __ldxr(v443);
          while (__stxr(v444 + 1, v443));
          do
            v445 = __ldaxr(v443);
          while (__stlxr(v445 - 1, v443));
          if (!v445)
          {
            ((void (*)(std::__shared_weak_count *))v442->__on_zero_shared)(v442);
            std::__shared_weak_count::__release_weak(v442);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v441 + 88))(v441, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v440 = v1119;
      }
      v446 = v438 - 1;
      v1100 = (4 * v16);
      if (!v446)
        goto LABEL_623;
      if (!(4 * v16))
        goto LABEL_1763;
      for (m = 0; m != v446; ++m)
      {
        if (!v440
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_626;
        }
        v448 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v15 + 48), &v1115);
          v440[v448++] = v1115;
        }
        while (v1100 != v448);
        v440 += v439;
      }
LABEL_623:
      if (!(_DWORD)v1100 || v440)
      {
        if (!(_DWORD)v1100)
          goto LABEL_1763;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_626:
        abort();
      }
      v1022 = 2 * v1100;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v15 + 48), &v1115);
        *v440++ = v1115;
        v1022 -= 2;
      }
      while (v1022);
LABEL_1763:
      v1023 = v1130;
      v1130 = 0;
      if (v1023)
        (*(void (**)(uint64_t))(*(_QWORD *)v1023 + 8))(v1023);
      v473 = v1118;
      if (!v1118)
        return;
      v1024 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1024);
      while (__stlxr(v475 - 1, v1024));
      goto LABEL_1975;
    case 28:
      v1116 = &off_24C9C0E68;
      sub_20FF74EF8((std::string::size_type *)&v1117, a3);
      v200 = *a2;
      v201 = v1127;
      v202 = v1117;
      if (!v1117)
        goto LABEL_1086;
      v203 = v1118;
      if (v1118)
      {
        v204 = (unint64_t *)&v1118->__shared_owners_;
        do
          v205 = __ldxr(v204);
        while (__stxr(v205 + 1, v204));
        do
          v206 = __ldaxr(v204);
        while (__stlxr(v206 - 1, v204));
        if (!v206)
        {
          ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
          std::__shared_weak_count::__release_weak(v203);
        }
        v202 = v1117;
        v207 = v1118;
        if (v1118)
        {
          v208 = (unint64_t *)&v1118->__shared_owners_;
          do
            v209 = __ldxr(v208);
          while (__stxr(v209 + 1, v208));
          do
            v210 = __ldaxr(v208);
          while (__stlxr(v210 - 1, v208));
          if (!v210)
          {
            ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
            std::__shared_weak_count::__release_weak(v207);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v202 + 96))(&v1130, v202, 1);
      else
LABEL_1086:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1114;
      if (!v1121)
        goto LABEL_1114;
      v679 = v1122;
      if (!v1122)
        goto LABEL_1114;
      v680 = v1126;
      v681 = (float *)v1119;
      if (v1128 && v1119)
      {
        v682 = v1117;
        v683 = v1118;
        if (v1118)
        {
          v684 = (unint64_t *)&v1118->__shared_owners_;
          do
            v685 = __ldxr(v684);
          while (__stxr(v685 + 1, v684));
          do
            v686 = __ldaxr(v684);
          while (__stlxr(v686 - 1, v684));
          if (!v686)
          {
            ((void (*)(std::__shared_weak_count *))v683->__on_zero_shared)(v683);
            std::__shared_weak_count::__release_weak(v683);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v682 + 88))(v682, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v681 = (float *)v1119;
      }
      v687 = (4 * v201);
      if (v679 == 1)
        goto LABEL_1107;
      if (!(_DWORD)v687)
        goto LABEL_1114;
      v688 = 0;
      v689 = 4 * v680;
      v690 = 4 * v687;
      do
      {
        if (!v681
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1990;
        }
        v691 = v687;
        v692 = 0;
        v693 = *(_QWORD *)(v200 + 48);
        do
        {
          sub_20E9EDF48(v693, &v681[v692 / 4]);
          v692 += 4;
        }
        while (v690 != v692);
        v681 = (float *)((char *)v681 + v689);
        ++v688;
        v687 = v691;
      }
      while (v688 != v679 - 1);
LABEL_1107:
      if ((_DWORD)v687 && !v681)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1990:
          abort();
        }
        v681 = 0;
      }
      if ((_DWORD)v687)
      {
        v694 = *(_QWORD *)(v200 + 48);
        v695 = 4 * v687;
        do
        {
          sub_20E9EDF48(v694, v681++);
          v695 -= 4;
        }
        while (v695);
      }
LABEL_1114:
      v696 = v1130;
      v1130 = 0;
      if (v696)
        (*(void (**)(uint64_t))(*(_QWORD *)v696 + 8))(v696);
      v473 = v1118;
      if (!v1118)
        return;
      v697 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v697);
      while (__stlxr(v475 - 1, v697));
      goto LABEL_1975;
    case 29:
      v1116 = &off_24C9C03C0;
      sub_20FF754EC(&v1117, a3);
      v58 = *a2;
      v59 = v1127;
      v60 = v1117;
      if (!v1117)
        goto LABEL_708;
      v61 = v1118;
      if (v1118)
      {
        v62 = (unint64_t *)&v1118->__shared_owners_;
        do
          v63 = __ldxr(v62);
        while (__stxr(v63 + 1, v62));
        do
          v64 = __ldaxr(v62);
        while (__stlxr(v64 - 1, v62));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
        v60 = v1117;
        v65 = v1118;
        if (v1118)
        {
          v66 = (unint64_t *)&v1118->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          if (!v68)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v60 + 96))(&v1130, v60, 1);
      else
LABEL_708:
        v1130 = 0;
      if (!v1120)
        goto LABEL_736;
      if (!v1121)
        goto LABEL_736;
      v488 = v1122;
      if (!v1122)
        goto LABEL_736;
      v489 = v1126;
      v490 = v1119;
      if (v1128 && v1119)
      {
        v491 = v1117;
        v492 = v1118;
        if (v1118)
        {
          v493 = (unint64_t *)&v1118->__shared_owners_;
          do
            v494 = __ldxr(v493);
          while (__stxr(v494 + 1, v493));
          do
            v495 = __ldaxr(v493);
          while (__stlxr(v495 - 1, v493));
          if (!v495)
          {
            ((void (*)(std::__shared_weak_count *))v492->__on_zero_shared)(v492);
            std::__shared_weak_count::__release_weak(v492);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v491 + 88))(v491, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v490 = v1119;
      }
      v496 = (4 * v59);
      if (v488 == 1)
        goto LABEL_729;
      if (!(_DWORD)v496)
        goto LABEL_736;
      v497 = 0;
      do
      {
        if (!v490
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1979;
        }
        v498 = 0;
        v499 = *(_QWORD *)(v58 + 48);
        do
          sub_20E9ED7B4(v499, &v490[v498++]);
        while (v496 != v498);
        v490 += v489;
        ++v497;
      }
      while (v497 != v488 - 1);
LABEL_729:
      if ((_DWORD)v496 && !v490)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1979:
          abort();
        }
        v490 = 0;
      }
      if ((_DWORD)v496)
      {
        v500 = *(_QWORD *)(v58 + 48);
        do
        {
          sub_20E9ED7B4(v500, v490++);
          --v496;
        }
        while (v496);
      }
LABEL_736:
      v501 = v1130;
      v1130 = 0;
      if (v501)
        (*(void (**)(uint64_t))(*(_QWORD *)v501 + 8))(v501);
      v473 = v1118;
      if (!v1118)
        return;
      v502 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v502);
      while (__stlxr(v475 - 1, v502));
      goto LABEL_1975;
    case 30:
      v1116 = &off_24CA12C68;
      sub_20FF75B98(&v1117, a3);
      v233 = *a2;
      v234 = v1127;
      v235 = v1117;
      if (!v1117)
        goto LABEL_1179;
      v236 = v1118;
      if (v1118)
      {
        v237 = (unint64_t *)&v1118->__shared_owners_;
        do
          v238 = __ldxr(v237);
        while (__stxr(v238 + 1, v237));
        do
          v239 = __ldaxr(v237);
        while (__stlxr(v239 - 1, v237));
        if (!v239)
        {
          ((void (*)(std::__shared_weak_count *))v236->__on_zero_shared)(v236);
          std::__shared_weak_count::__release_weak(v236);
        }
        v235 = v1117;
        v240 = v1118;
        if (v1118)
        {
          v241 = (unint64_t *)&v1118->__shared_owners_;
          do
            v242 = __ldxr(v241);
          while (__stxr(v242 + 1, v241));
          do
            v243 = __ldaxr(v241);
          while (__stlxr(v243 - 1, v241));
          if (!v243)
          {
            ((void (*)(std::__shared_weak_count *))v240->__on_zero_shared)(v240);
            std::__shared_weak_count::__release_weak(v240);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v235 + 96))(&v1130, v235, 1);
      else
LABEL_1179:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1207;
      if (!v1121)
        goto LABEL_1207;
      v728 = v1122;
      if (!v1122)
        goto LABEL_1207;
      v729 = v1126;
      v730 = v1119;
      if (v1128 && v1119)
      {
        v731 = v1117;
        v732 = v1118;
        if (v1118)
        {
          v733 = (unint64_t *)&v1118->__shared_owners_;
          do
            v734 = __ldxr(v733);
          while (__stxr(v734 + 1, v733));
          do
            v735 = __ldaxr(v733);
          while (__stlxr(v735 - 1, v733));
          if (!v735)
          {
            ((void (*)(std::__shared_weak_count *))v732->__on_zero_shared)(v732);
            std::__shared_weak_count::__release_weak(v732);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v731 + 88))(v731, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v730 = v1119;
      }
      v736 = (4 * v234);
      if (v728 == 1)
        goto LABEL_1200;
      if (!(_DWORD)v736)
        goto LABEL_1207;
      v737 = 0;
      v738 = 2 * v729;
      v739 = 2 * v736;
      do
      {
        if (!v730
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1992;
        }
        v740 = v736;
        v741 = 0;
        v742 = *(_QWORD *)(v233 + 48);
        do
        {
          sub_20E9ED948(v742, &v730[v741 / 2]);
          v741 += 2;
        }
        while (v739 != v741);
        v730 = (_WORD *)((char *)v730 + v738);
        ++v737;
        v736 = v740;
      }
      while (v737 != v728 - 1);
LABEL_1200:
      if ((_DWORD)v736 && !v730)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1992:
          abort();
        }
        v730 = 0;
      }
      if ((_DWORD)v736)
      {
        v743 = *(_QWORD *)(v233 + 48);
        v744 = 2 * v736;
        do
        {
          sub_20E9ED948(v743, v730++);
          v744 -= 2;
        }
        while (v744);
      }
LABEL_1207:
      v745 = v1130;
      v1130 = 0;
      if (v745)
        (*(void (**)(uint64_t))(*(_QWORD *)v745 + 8))(v745);
      v473 = v1118;
      if (!v1118)
        return;
      v746 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v746);
      while (__stlxr(v475 - 1, v746));
      goto LABEL_1975;
    case 31:
      v1116 = &off_24CA12D60;
      sub_20FF76450(&v1117, a3);
      v168 = *a2;
      v169 = v1127;
      v170 = v1117;
      if (!v1117)
        goto LABEL_994;
      v171 = v1118;
      if (v1118)
      {
        v172 = (unint64_t *)&v1118->__shared_owners_;
        do
          v173 = __ldxr(v172);
        while (__stxr(v173 + 1, v172));
        do
          v174 = __ldaxr(v172);
        while (__stlxr(v174 - 1, v172));
        if (!v174)
        {
          ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
          std::__shared_weak_count::__release_weak(v171);
        }
        v170 = v1117;
        v175 = v1118;
        if (v1118)
        {
          v176 = (unint64_t *)&v1118->__shared_owners_;
          do
            v177 = __ldxr(v176);
          while (__stxr(v177 + 1, v176));
          do
            v178 = __ldaxr(v176);
          while (__stlxr(v178 - 1, v176));
          if (!v178)
          {
            ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
            std::__shared_weak_count::__release_weak(v175);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v170 + 96))(&v1130, v170, 1);
      else
LABEL_994:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1799;
      if (!v1121)
        goto LABEL_1799;
      v633 = v1122;
      if (!v1122)
        goto LABEL_1799;
      v634 = v1126;
      v635 = v1119;
      if (v1128 && v1119)
      {
        v636 = v1117;
        v637 = v1118;
        if (v1118)
        {
          v638 = (unint64_t *)&v1118->__shared_owners_;
          do
            v639 = __ldxr(v638);
          while (__stxr(v639 + 1, v638));
          do
            v640 = __ldaxr(v638);
          while (__stlxr(v640 - 1, v638));
          if (!v640)
          {
            ((void (*)(std::__shared_weak_count *))v637->__on_zero_shared)(v637);
            std::__shared_weak_count::__release_weak(v637);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v636 + 88))(v636, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v635 = v1119;
      }
      v641 = v633 - 1;
      v1107 = (4 * v169);
      if (!v641)
        goto LABEL_1015;
      if (!(4 * v169))
        goto LABEL_1799;
      for (n = 0; n != v641; ++n)
      {
        if (!v635
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1018;
        }
        v643 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v168 + 48), &v1115);
          v635[v643++] = v1115;
        }
        while (v1107 != v643);
        v635 += v634;
      }
LABEL_1015:
      if (!(_DWORD)v1107 || v635)
      {
        if (!(_DWORD)v1107)
          goto LABEL_1799;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1018:
        abort();
      }
      v1034 = 2 * v1107;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v168 + 48), &v1115);
        *v635++ = v1115;
        v1034 -= 2;
      }
      while (v1034);
LABEL_1799:
      v1035 = v1130;
      v1130 = 0;
      if (v1035)
        (*(void (**)(uint64_t))(*(_QWORD *)v1035 + 8))(v1035);
      v473 = v1118;
      if (!v1118)
        return;
      v1036 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1036);
      while (__stlxr(v475 - 1, v1036));
      goto LABEL_1975;
    case 32:
      v1116 = &off_24C9C0D70;
      sub_20FF76CA0(&v1117, a3);
      v255 = *a2;
      v256 = v1127;
      v257 = v1117;
      if (!v1117)
        goto LABEL_1247;
      v258 = v1118;
      if (v1118)
      {
        v259 = (unint64_t *)&v1118->__shared_owners_;
        do
          v260 = __ldxr(v259);
        while (__stxr(v260 + 1, v259));
        do
          v261 = __ldaxr(v259);
        while (__stlxr(v261 - 1, v259));
        if (!v261)
        {
          ((void (*)(std::__shared_weak_count *))v258->__on_zero_shared)(v258);
          std::__shared_weak_count::__release_weak(v258);
        }
        v257 = v1117;
        v262 = v1118;
        if (v1118)
        {
          v263 = (unint64_t *)&v1118->__shared_owners_;
          do
            v264 = __ldxr(v263);
          while (__stxr(v264 + 1, v263));
          do
            v265 = __ldaxr(v263);
          while (__stlxr(v265 - 1, v263));
          if (!v265)
          {
            ((void (*)(std::__shared_weak_count *))v262->__on_zero_shared)(v262);
            std::__shared_weak_count::__release_weak(v262);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v257 + 96))(&v1130, v257, 1);
      else
LABEL_1247:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1275;
      if (!v1121)
        goto LABEL_1275;
      v766 = v1122;
      if (!v1122)
        goto LABEL_1275;
      v767 = v1126;
      v768 = (float *)v1119;
      if (v1128 && v1119)
      {
        v769 = v1117;
        v770 = v1118;
        if (v1118)
        {
          v771 = (unint64_t *)&v1118->__shared_owners_;
          do
            v772 = __ldxr(v771);
          while (__stxr(v772 + 1, v771));
          do
            v773 = __ldaxr(v771);
          while (__stlxr(v773 - 1, v771));
          if (!v773)
          {
            ((void (*)(std::__shared_weak_count *))v770->__on_zero_shared)(v770);
            std::__shared_weak_count::__release_weak(v770);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v769 + 88))(v769, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v768 = (float *)v1119;
      }
      v774 = (4 * v256);
      if (v766 == 1)
        goto LABEL_1268;
      if (!(_DWORD)v774)
        goto LABEL_1275;
      v775 = 0;
      v776 = 4 * v767;
      v777 = 4 * v774;
      do
      {
        if (!v768
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1994;
        }
        v778 = v774;
        v779 = 0;
        v780 = *(_QWORD *)(v255 + 48);
        do
        {
          sub_20E9EDF48(v780, &v768[v779 / 4]);
          v779 += 4;
        }
        while (v777 != v779);
        v768 = (float *)((char *)v768 + v776);
        ++v775;
        v774 = v778;
      }
      while (v775 != v766 - 1);
LABEL_1268:
      if ((_DWORD)v774 && !v768)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1994:
          abort();
        }
        v768 = 0;
      }
      if ((_DWORD)v774)
      {
        v781 = *(_QWORD *)(v255 + 48);
        v782 = 4 * v774;
        do
        {
          sub_20E9EDF48(v781, v768++);
          v782 -= 4;
        }
        while (v782);
      }
LABEL_1275:
      v783 = v1130;
      v1130 = 0;
      if (v783)
        (*(void (**)(uint64_t))(*(_QWORD *)v783 + 8))(v783);
      v473 = v1118;
      if (!v1118)
        return;
      v784 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v784);
      while (__stlxr(v475 - 1, v784));
      goto LABEL_1975;
    case 33:
      v1116 = &off_24CA12E58;
      sub_20FF7734C(&v1117, a3);
      v362 = *a2;
      v363 = v1127;
      v364 = v1117;
      if (!v1117)
        goto LABEL_1576;
      v365 = v1118;
      if (v1118)
      {
        v366 = (unint64_t *)&v1118->__shared_owners_;
        do
          v367 = __ldxr(v366);
        while (__stxr(v367 + 1, v366));
        do
          v368 = __ldaxr(v366);
        while (__stlxr(v368 - 1, v366));
        if (!v368)
        {
          ((void (*)(std::__shared_weak_count *))v365->__on_zero_shared)(v365);
          std::__shared_weak_count::__release_weak(v365);
        }
        v364 = v1117;
        v369 = v1118;
        if (v1118)
        {
          v370 = (unint64_t *)&v1118->__shared_owners_;
          do
            v371 = __ldxr(v370);
          while (__stxr(v371 + 1, v370));
          do
            v372 = __ldaxr(v370);
          while (__stlxr(v372 - 1, v370));
          if (!v372)
          {
            ((void (*)(std::__shared_weak_count *))v369->__on_zero_shared)(v369);
            std::__shared_weak_count::__release_weak(v369);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v364 + 96))(&v1130, v364, 1);
      else
LABEL_1576:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1604;
      if (!v1121)
        goto LABEL_1604;
      v929 = v1122;
      if (!v1122)
        goto LABEL_1604;
      v930 = v1126;
      v931 = v1119;
      if (v1128 && v1119)
      {
        v932 = v1117;
        v933 = v1118;
        if (v1118)
        {
          v934 = (unint64_t *)&v1118->__shared_owners_;
          do
            v935 = __ldxr(v934);
          while (__stxr(v935 + 1, v934));
          do
            v936 = __ldaxr(v934);
          while (__stlxr(v936 - 1, v934));
          if (!v936)
          {
            ((void (*)(std::__shared_weak_count *))v933->__on_zero_shared)(v933);
            std::__shared_weak_count::__release_weak(v933);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v932 + 88))(v932, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v931 = v1119;
      }
      v937 = (4 * v363);
      if (v929 == 1)
        goto LABEL_1597;
      if (!(_DWORD)v937)
        goto LABEL_1604;
      v938 = 0;
      do
      {
        if (!v931
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_2002;
        }
        v939 = 0;
        v940 = *(_QWORD *)(v362 + 48);
        do
          sub_20E9ED7B4(v940, &v931[v939++]);
        while (v937 != v939);
        v931 += v930;
        ++v938;
      }
      while (v938 != v929 - 1);
LABEL_1597:
      if ((_DWORD)v937 && !v931)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_2002:
          abort();
        }
        v931 = 0;
      }
      if ((_DWORD)v937)
      {
        v941 = *(_QWORD *)(v362 + 48);
        do
        {
          sub_20E9ED7B4(v941, v931++);
          --v937;
        }
        while (v937);
      }
LABEL_1604:
      v942 = v1130;
      v1130 = 0;
      if (v942)
        (*(void (**)(uint64_t))(*(_QWORD *)v942 + 8))(v942);
      v473 = v1118;
      if (!v1118)
        return;
      v943 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v943);
      while (__stlxr(v475 - 1, v943));
      goto LABEL_1975;
    case 34:
      v1116 = &off_24CA12F50;
      sub_20FF77C00((std::string::size_type *)&v1117, a3);
      v244 = *a2;
      v245 = v1127;
      v246 = v1117;
      if (!v1117)
        goto LABEL_1213;
      v247 = v1118;
      if (v1118)
      {
        v248 = (unint64_t *)&v1118->__shared_owners_;
        do
          v249 = __ldxr(v248);
        while (__stxr(v249 + 1, v248));
        do
          v250 = __ldaxr(v248);
        while (__stlxr(v250 - 1, v248));
        if (!v250)
        {
          ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
          std::__shared_weak_count::__release_weak(v247);
        }
        v246 = v1117;
        v251 = v1118;
        if (v1118)
        {
          v252 = (unint64_t *)&v1118->__shared_owners_;
          do
            v253 = __ldxr(v252);
          while (__stxr(v253 + 1, v252));
          do
            v254 = __ldaxr(v252);
          while (__stlxr(v254 - 1, v252));
          if (!v254)
          {
            ((void (*)(std::__shared_weak_count *))v251->__on_zero_shared)(v251);
            std::__shared_weak_count::__release_weak(v251);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v246 + 96))(&v1130, v246, 1);
      else
LABEL_1213:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1241;
      if (!v1121)
        goto LABEL_1241;
      v747 = v1122;
      if (!v1122)
        goto LABEL_1241;
      v748 = v1126;
      v749 = v1119;
      if (v1128 && v1119)
      {
        v750 = v1117;
        v751 = v1118;
        if (v1118)
        {
          v752 = (unint64_t *)&v1118->__shared_owners_;
          do
            v753 = __ldxr(v752);
          while (__stxr(v753 + 1, v752));
          do
            v754 = __ldaxr(v752);
          while (__stlxr(v754 - 1, v752));
          if (!v754)
          {
            ((void (*)(std::__shared_weak_count *))v751->__on_zero_shared)(v751);
            std::__shared_weak_count::__release_weak(v751);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v750 + 88))(v750, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v749 = v1119;
      }
      v755 = (4 * v245);
      if (v747 == 1)
        goto LABEL_1234;
      if (!(_DWORD)v755)
        goto LABEL_1241;
      v756 = 0;
      v757 = 2 * v748;
      v758 = 2 * v755;
      do
      {
        if (!v749
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1993;
        }
        v759 = v755;
        v760 = 0;
        v761 = *(_QWORD *)(v244 + 48);
        do
        {
          sub_20E9ED948(v761, &v749[v760 / 2]);
          v760 += 2;
        }
        while (v758 != v760);
        v749 = (_WORD *)((char *)v749 + v757);
        ++v756;
        v755 = v759;
      }
      while (v756 != v747 - 1);
LABEL_1234:
      if ((_DWORD)v755 && !v749)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1993:
          abort();
        }
        v749 = 0;
      }
      if ((_DWORD)v755)
      {
        v762 = *(_QWORD *)(v244 + 48);
        v763 = 2 * v755;
        do
        {
          sub_20E9ED948(v762, v749++);
          v763 -= 2;
        }
        while (v763);
      }
LABEL_1241:
      v764 = v1130;
      v1130 = 0;
      if (v764)
        (*(void (**)(uint64_t))(*(_QWORD *)v764 + 8))(v764);
      v473 = v1118;
      if (!v1118)
        return;
      v765 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v765);
      while (__stlxr(v475 - 1, v765));
      goto LABEL_1975;
    case 35:
      v1116 = &off_24CA13048;
      sub_20FF78468((std::string::size_type *)&v1117, a3);
      v222 = *a2;
      v223 = v1127;
      v224 = v1117;
      if (!v1117)
        goto LABEL_1154;
      v225 = v1118;
      if (v1118)
      {
        v226 = (unint64_t *)&v1118->__shared_owners_;
        do
          v227 = __ldxr(v226);
        while (__stxr(v227 + 1, v226));
        do
          v228 = __ldaxr(v226);
        while (__stlxr(v228 - 1, v226));
        if (!v228)
        {
          ((void (*)(std::__shared_weak_count *))v225->__on_zero_shared)(v225);
          std::__shared_weak_count::__release_weak(v225);
        }
        v224 = v1117;
        v229 = v1118;
        if (v1118)
        {
          v230 = (unint64_t *)&v1118->__shared_owners_;
          do
            v231 = __ldxr(v230);
          while (__stxr(v231 + 1, v230));
          do
            v232 = __ldaxr(v230);
          while (__stlxr(v232 - 1, v230));
          if (!v232)
          {
            ((void (*)(std::__shared_weak_count *))v229->__on_zero_shared)(v229);
            std::__shared_weak_count::__release_weak(v229);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v224 + 96))(&v1130, v224, 1);
      else
LABEL_1154:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1808;
      if (!v1121)
        goto LABEL_1808;
      v717 = v1122;
      if (!v1122)
        goto LABEL_1808;
      v718 = v1126;
      v719 = v1119;
      if (v1128 && v1119)
      {
        v720 = v1117;
        v721 = v1118;
        if (v1118)
        {
          v722 = (unint64_t *)&v1118->__shared_owners_;
          do
            v723 = __ldxr(v722);
          while (__stxr(v723 + 1, v722));
          do
            v724 = __ldaxr(v722);
          while (__stlxr(v724 - 1, v722));
          if (!v724)
          {
            ((void (*)(std::__shared_weak_count *))v721->__on_zero_shared)(v721);
            std::__shared_weak_count::__release_weak(v721);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v720 + 88))(v720, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v719 = v1119;
      }
      v725 = v717 - 1;
      v1108 = (4 * v223);
      if (!v725)
        goto LABEL_1175;
      if (!(4 * v223))
        goto LABEL_1808;
      for (ii = 0; ii != v725; ++ii)
      {
        if (!v719
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1178;
        }
        v727 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v222 + 48), &v1115);
          v719[v727++] = v1115;
        }
        while (v1108 != v727);
        v719 += v718;
      }
LABEL_1175:
      if (!(_DWORD)v1108 || v719)
      {
        if (!(_DWORD)v1108)
          goto LABEL_1808;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1178:
        abort();
      }
      v1037 = 2 * v1108;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v222 + 48), &v1115);
        *v719++ = v1115;
        v1037 -= 2;
      }
      while (v1037);
LABEL_1808:
      v1038 = v1130;
      v1130 = 0;
      if (v1038)
        (*(void (**)(uint64_t))(*(_QWORD *)v1038 + 8))(v1038);
      v473 = v1118;
      if (!v1118)
        return;
      v1039 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1039);
      while (__stlxr(v475 - 1, v1039));
      goto LABEL_1975;
    case 36:
      v1116 = &off_24CA13140;
      sub_20FF78CD0((std::string::size_type *)&v1117, a3);
      v211 = *a2;
      v212 = v1127;
      v213 = v1117;
      if (!v1117)
        goto LABEL_1120;
      v214 = v1118;
      if (v1118)
      {
        v215 = (unint64_t *)&v1118->__shared_owners_;
        do
          v216 = __ldxr(v215);
        while (__stxr(v216 + 1, v215));
        do
          v217 = __ldaxr(v215);
        while (__stlxr(v217 - 1, v215));
        if (!v217)
        {
          ((void (*)(std::__shared_weak_count *))v214->__on_zero_shared)(v214);
          std::__shared_weak_count::__release_weak(v214);
        }
        v213 = v1117;
        v218 = v1118;
        if (v1118)
        {
          v219 = (unint64_t *)&v1118->__shared_owners_;
          do
            v220 = __ldxr(v219);
          while (__stxr(v220 + 1, v219));
          do
            v221 = __ldaxr(v219);
          while (__stlxr(v221 - 1, v219));
          if (!v221)
          {
            ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
            std::__shared_weak_count::__release_weak(v218);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v213 + 96))(&v1130, v213, 1);
      else
LABEL_1120:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1148;
      if (!v1121)
        goto LABEL_1148;
      v698 = v1122;
      if (!v1122)
        goto LABEL_1148;
      v699 = v1126;
      v700 = (float *)v1119;
      if (v1128 && v1119)
      {
        v701 = v1117;
        v702 = v1118;
        if (v1118)
        {
          v703 = (unint64_t *)&v1118->__shared_owners_;
          do
            v704 = __ldxr(v703);
          while (__stxr(v704 + 1, v703));
          do
            v705 = __ldaxr(v703);
          while (__stlxr(v705 - 1, v703));
          if (!v705)
          {
            ((void (*)(std::__shared_weak_count *))v702->__on_zero_shared)(v702);
            std::__shared_weak_count::__release_weak(v702);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v701 + 88))(v701, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v700 = (float *)v1119;
      }
      v706 = (4 * v212);
      if (v698 == 1)
        goto LABEL_1141;
      if (!(_DWORD)v706)
        goto LABEL_1148;
      v707 = 0;
      v708 = 4 * v699;
      v709 = 4 * v706;
      do
      {
        if (!v700
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1991;
        }
        v710 = v706;
        v711 = 0;
        v712 = *(_QWORD *)(v211 + 48);
        do
        {
          sub_20E9EDF48(v712, &v700[v711 / 4]);
          v711 += 4;
        }
        while (v709 != v711);
        v700 = (float *)((char *)v700 + v708);
        ++v707;
        v706 = v710;
      }
      while (v707 != v698 - 1);
LABEL_1141:
      if ((_DWORD)v706 && !v700)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1991:
          abort();
        }
        v700 = 0;
      }
      if ((_DWORD)v706)
      {
        v713 = *(_QWORD *)(v211 + 48);
        v714 = 4 * v706;
        do
        {
          sub_20E9EDF48(v713, v700++);
          v714 -= 4;
        }
        while (v714);
      }
LABEL_1148:
      v715 = v1130;
      v1130 = 0;
      if (v715)
        (*(void (**)(uint64_t))(*(_QWORD *)v715 + 8))(v715);
      v473 = v1118;
      if (!v1118)
        return;
      v716 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v716);
      while (__stlxr(v475 - 1, v716));
      goto LABEL_1975;
    case 37:
      v1116 = &off_24CA13238;
      sub_20FF79538(&v1117, a3);
      v330 = *a2;
      v331 = v1127;
      v332 = v1117;
      if (!v1117)
        goto LABEL_1495;
      v333 = v1118;
      if (v1118)
      {
        v334 = (unint64_t *)&v1118->__shared_owners_;
        do
          v335 = __ldxr(v334);
        while (__stxr(v335 + 1, v334));
        do
          v336 = __ldaxr(v334);
        while (__stlxr(v336 - 1, v334));
        if (!v336)
        {
          ((void (*)(std::__shared_weak_count *))v333->__on_zero_shared)(v333);
          std::__shared_weak_count::__release_weak(v333);
        }
        v332 = v1117;
        v337 = v1118;
        if (v1118)
        {
          v338 = (unint64_t *)&v1118->__shared_owners_;
          do
            v339 = __ldxr(v338);
          while (__stxr(v339 + 1, v338));
          do
            v340 = __ldaxr(v338);
          while (__stlxr(v340 - 1, v338));
          if (!v340)
          {
            ((void (*)(std::__shared_weak_count *))v337->__on_zero_shared)(v337);
            std::__shared_weak_count::__release_weak(v337);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v332 + 96))(&v1130, v332, 1);
      else
LABEL_1495:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1523;
      if (!v1121)
        goto LABEL_1523;
      v892 = v1122;
      if (!v1122)
        goto LABEL_1523;
      v893 = v1126;
      v894 = v1119;
      if (v1128 && v1119)
      {
        v895 = v1117;
        v896 = v1118;
        if (v1118)
        {
          v897 = (unint64_t *)&v1118->__shared_owners_;
          do
            v898 = __ldxr(v897);
          while (__stxr(v898 + 1, v897));
          do
            v899 = __ldaxr(v897);
          while (__stlxr(v899 - 1, v897));
          if (!v899)
          {
            ((void (*)(std::__shared_weak_count *))v896->__on_zero_shared)(v896);
            std::__shared_weak_count::__release_weak(v896);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v895 + 88))(v895, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v894 = v1119;
      }
      v900 = (4 * v331);
      if (v892 == 1)
        goto LABEL_1516;
      if (!(_DWORD)v900)
        goto LABEL_1523;
      v901 = 0;
      do
      {
        if (!v894
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_2001;
        }
        v902 = 0;
        v903 = *(_QWORD *)(v330 + 48);
        do
          sub_20E9ED7B4(v903, &v894[v902++]);
        while (v900 != v902);
        v894 += v893;
        ++v901;
      }
      while (v901 != v892 - 1);
LABEL_1516:
      if ((_DWORD)v900 && !v894)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_2001:
          abort();
        }
        v894 = 0;
      }
      if ((_DWORD)v900)
      {
        v904 = *(_QWORD *)(v330 + 48);
        do
        {
          sub_20E9ED7B4(v904, v894++);
          --v900;
        }
        while (v900);
      }
LABEL_1523:
      v905 = v1130;
      v1130 = 0;
      if (v905)
        (*(void (**)(uint64_t))(*(_QWORD *)v905 + 8))(v905);
      v473 = v1118;
      if (!v1118)
        return;
      v906 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v906);
      while (__stlxr(v475 - 1, v906));
      goto LABEL_1975;
    case 38:
      v1116 = &off_24CA13330;
      sub_20FF79DEC(&v1117, a3);
      v384 = *a2;
      v385 = v1127;
      v386 = v1117;
      if (!v1117)
        goto LABEL_1632;
      v387 = v1118;
      if (v1118)
      {
        v388 = (unint64_t *)&v1118->__shared_owners_;
        do
          v389 = __ldxr(v388);
        while (__stxr(v389 + 1, v388));
        do
          v390 = __ldaxr(v388);
        while (__stlxr(v390 - 1, v388));
        if (!v390)
        {
          ((void (*)(std::__shared_weak_count *))v387->__on_zero_shared)(v387);
          std::__shared_weak_count::__release_weak(v387);
        }
        v386 = v1117;
        v391 = v1118;
        if (v1118)
        {
          v392 = (unint64_t *)&v1118->__shared_owners_;
          do
            v393 = __ldxr(v392);
          while (__stxr(v393 + 1, v392));
          do
            v394 = __ldaxr(v392);
          while (__stlxr(v394 - 1, v392));
          if (!v394)
          {
            ((void (*)(std::__shared_weak_count *))v391->__on_zero_shared)(v391);
            std::__shared_weak_count::__release_weak(v391);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v386 + 96))(&v1130, v386, 1);
      else
LABEL_1632:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1660;
      if (!v1121)
        goto LABEL_1660;
      v956 = v1122;
      if (!v1122)
        goto LABEL_1660;
      v957 = v1126;
      v958 = v1119;
      if (v1128 && v1119)
      {
        v959 = v1117;
        v960 = v1118;
        if (v1118)
        {
          v961 = (unint64_t *)&v1118->__shared_owners_;
          do
            v962 = __ldxr(v961);
          while (__stxr(v962 + 1, v961));
          do
            v963 = __ldaxr(v961);
          while (__stlxr(v963 - 1, v961));
          if (!v963)
          {
            ((void (*)(std::__shared_weak_count *))v960->__on_zero_shared)(v960);
            std::__shared_weak_count::__release_weak(v960);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v959 + 88))(v959, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v958 = v1119;
      }
      v964 = (4 * v385);
      if (v956 == 1)
        goto LABEL_1653;
      if (!(_DWORD)v964)
        goto LABEL_1660;
      v965 = 0;
      v966 = 2 * v957;
      v967 = 2 * v964;
      do
      {
        if (!v958
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_2003;
        }
        v968 = v964;
        v969 = 0;
        v970 = *(_QWORD *)(v384 + 48);
        do
        {
          sub_20E9ED948(v970, &v958[v969 / 2]);
          v969 += 2;
        }
        while (v967 != v969);
        v958 = (_WORD *)((char *)v958 + v966);
        ++v965;
        v964 = v968;
      }
      while (v965 != v956 - 1);
LABEL_1653:
      if ((_DWORD)v964 && !v958)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_2003:
          abort();
        }
        v958 = 0;
      }
      if ((_DWORD)v964)
      {
        v971 = *(_QWORD *)(v384 + 48);
        v972 = 2 * v964;
        do
        {
          sub_20E9ED948(v971, v958++);
          v972 -= 2;
        }
        while (v972);
      }
LABEL_1660:
      v973 = v1130;
      v1130 = 0;
      if (v973)
        (*(void (**)(uint64_t))(*(_QWORD *)v973 + 8))(v973);
      v473 = v1118;
      if (!v1118)
        return;
      v974 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v974);
      while (__stlxr(v475 - 1, v974));
      goto LABEL_1975;
    case 39:
      v1116 = &off_24CA13428;
      sub_20FF7A6A4(&v1117, a3);
      v135 = *a2;
      v136 = v1127;
      v137 = v1117;
      if (!v1117)
        goto LABEL_913;
      v138 = v1118;
      if (v1118)
      {
        v139 = (unint64_t *)&v1118->__shared_owners_;
        do
          v140 = __ldxr(v139);
        while (__stxr(v140 + 1, v139));
        do
          v141 = __ldaxr(v139);
        while (__stlxr(v141 - 1, v139));
        if (!v141)
        {
          ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
          std::__shared_weak_count::__release_weak(v138);
        }
        v137 = v1117;
        v142 = v1118;
        if (v1118)
        {
          v143 = (unint64_t *)&v1118->__shared_owners_;
          do
            v144 = __ldxr(v143);
          while (__stxr(v144 + 1, v143));
          do
            v145 = __ldaxr(v143);
          while (__stlxr(v145 - 1, v143));
          if (!v145)
          {
            ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
            std::__shared_weak_count::__release_weak(v142);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v137 + 96))(&v1130, v137, 1);
      else
LABEL_913:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1790;
      if (!v1121)
        goto LABEL_1790;
      v591 = v1122;
      if (!v1122)
        goto LABEL_1790;
      v592 = v1126;
      v593 = v1119;
      if (v1128 && v1119)
      {
        v594 = v1117;
        v595 = v1118;
        if (v1118)
        {
          v596 = (unint64_t *)&v1118->__shared_owners_;
          do
            v597 = __ldxr(v596);
          while (__stxr(v597 + 1, v596));
          do
            v598 = __ldaxr(v596);
          while (__stlxr(v598 - 1, v596));
          if (!v598)
          {
            ((void (*)(std::__shared_weak_count *))v595->__on_zero_shared)(v595);
            std::__shared_weak_count::__release_weak(v595);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v594 + 88))(v594, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v593 = v1119;
      }
      v599 = v591 - 1;
      v1105 = (4 * v136);
      if (!v599)
        goto LABEL_934;
      if (!(4 * v136))
        goto LABEL_1790;
      for (jj = 0; jj != v599; ++jj)
      {
        if (!v593
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_937;
        }
        v601 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v135 + 48), &v1115);
          v593[v601++] = v1115;
        }
        while (v1105 != v601);
        v593 += v592;
      }
LABEL_934:
      if (!(_DWORD)v1105 || v593)
      {
        if (!(_DWORD)v1105)
          goto LABEL_1790;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_937:
        abort();
      }
      v1031 = 2 * v1105;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v135 + 48), &v1115);
        *v593++ = v1115;
        v1031 -= 2;
      }
      while (v1031);
LABEL_1790:
      v1032 = v1130;
      v1130 = 0;
      if (v1032)
        (*(void (**)(uint64_t))(*(_QWORD *)v1032 + 8))(v1032);
      v473 = v1118;
      if (!v1118)
        return;
      v1033 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1033);
      while (__stlxr(v475 - 1, v1033));
      goto LABEL_1975;
    case 40:
      v1116 = &off_24CA13520;
      sub_20FF7AF5C(&v1117, a3);
      v102 = *a2;
      v103 = v1127;
      v104 = v1117;
      if (!v1117)
        goto LABEL_832;
      v105 = v1118;
      if (v1118)
      {
        v106 = (unint64_t *)&v1118->__shared_owners_;
        do
          v107 = __ldxr(v106);
        while (__stxr(v107 + 1, v106));
        do
          v108 = __ldaxr(v106);
        while (__stlxr(v108 - 1, v106));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
        v104 = v1117;
        v109 = v1118;
        if (v1118)
        {
          v110 = (unint64_t *)&v1118->__shared_owners_;
          do
            v111 = __ldxr(v110);
          while (__stxr(v111 + 1, v110));
          do
            v112 = __ldaxr(v110);
          while (__stlxr(v112 - 1, v110));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v104 + 96))(&v1130, v104, 1);
      else
LABEL_832:
        v1130 = 0;
      if (!v1120)
        goto LABEL_860;
      if (!v1121)
        goto LABEL_860;
      v549 = v1122;
      if (!v1122)
        goto LABEL_860;
      v550 = v1126;
      v551 = (float *)v1119;
      if (v1128 && v1119)
      {
        v552 = v1117;
        v553 = v1118;
        if (v1118)
        {
          v554 = (unint64_t *)&v1118->__shared_owners_;
          do
            v555 = __ldxr(v554);
          while (__stxr(v555 + 1, v554));
          do
            v556 = __ldaxr(v554);
          while (__stlxr(v556 - 1, v554));
          if (!v556)
          {
            ((void (*)(std::__shared_weak_count *))v553->__on_zero_shared)(v553);
            std::__shared_weak_count::__release_weak(v553);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v552 + 88))(v552, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v551 = (float *)v1119;
      }
      v557 = (4 * v103);
      if (v549 == 1)
        goto LABEL_853;
      if (!(_DWORD)v557)
        goto LABEL_860;
      v558 = 0;
      v559 = 4 * v550;
      v560 = 4 * v557;
      do
      {
        if (!v551
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1982;
        }
        v561 = v557;
        v562 = 0;
        v563 = *(_QWORD *)(v102 + 48);
        do
        {
          sub_20E9EDF48(v563, &v551[v562 / 4]);
          v562 += 4;
        }
        while (v560 != v562);
        v551 = (float *)((char *)v551 + v559);
        ++v558;
        v557 = v561;
      }
      while (v558 != v549 - 1);
LABEL_853:
      if ((_DWORD)v557 && !v551)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1982:
          abort();
        }
        v551 = 0;
      }
      if ((_DWORD)v557)
      {
        v564 = *(_QWORD *)(v102 + 48);
        v565 = 4 * v557;
        do
        {
          sub_20E9EDF48(v564, v551++);
          v565 -= 4;
        }
        while (v565);
      }
LABEL_860:
      v566 = v1130;
      v1130 = 0;
      if (v566)
        (*(void (**)(uint64_t))(*(_QWORD *)v566 + 8))(v566);
      v473 = v1118;
      if (!v1118)
        return;
      v567 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v567);
      while (__stlxr(v475 - 1, v567));
      goto LABEL_1975;
    default:
      return;
  }
}

void sub_20FF67CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF68984(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF68B30((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20EEC28A8(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF68ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF68B30(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20EB9FA20();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20FF68BA8(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF68D54((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20EEC5D34(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF68D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF68D54(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF52314();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20FF68DCC(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF68F78((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF692AC(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF68F24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF68F78(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF68FF0();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF68FF0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57EB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57EB8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20EA6DEC4();
    sub_20FF691F4((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF691F4((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57EA0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57EA0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57EB8);
          return &stru_254A57EA0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57EA0;
}

void sub_20FF69140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57EB8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57EB8);
  _Unwind_Resume(a1);
}

void sub_20FF691F4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF69290(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20FF692AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  __int16 v17;
  uint64_t v19;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v19, v3, 3);
  v9 = *(_QWORD *)(v19 + 16);
  *((_OWORD *)a1 + 1) = *(_OWORD *)v19;
  a1[4] = v9;
  v19 = 0;
  MEMORY[0x212BC6398]();
  v10 = *a1;
  v11 = (std::__shared_weak_count *)a1[1];
  if (v11)
  {
    v12 = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 104))(v10);
  v16 = v15;
  if ((v15 & 0xFFFFFF) <= 0x10000)
    v16 = 0;
  v17 = v15 & 0xFF00;
  if ((v15 & 0xFF0000) == 0)
    v17 = 0;
  *((_WORD *)a1 + 20) = v17 & 0xFF00 | v16;
  return a1;
}

void sub_20FF693FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

void sub_20FF69410(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 4)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF695BC((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20E8A6194(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF69568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF695BC(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20EBA07CC();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

void sub_20FF69634(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 5)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF698F4((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 5);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF69898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF698F4(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6996C();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6996C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57ED8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57ED8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20EA6CCB0();
    sub_20FF69B70((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF69B70((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57EC0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57EC0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57ED8);
          return &stru_254A57EC0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57EC0;
}

void sub_20FF69ABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57ED8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57ED8);
  _Unwind_Resume(a1);
}

void sub_20FF69B70(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF69C0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_20FF69C28(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF69C90(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6A064((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 6);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF69EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF69F50(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF69FB8()
{
  return 6;
}

uint64_t sub_20FF69FC0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF69FC8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF69FE0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6A064(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6A0DC();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6A0DC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57EF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57EF8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6A398();
    sub_20FF6A2E0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6A2E0((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57EE0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57EE0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57EF8);
          return &stru_254A57EE0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57EE0;
}

void sub_20FF6A22C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57EF8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57EF8);
  _Unwind_Resume(a1);
}

void sub_20FF6A2E0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6A37C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6A398()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57758);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57758))
    return &stru_254A57740;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two16u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57740);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57740, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57758);
  return &stru_254A57740;
}

void sub_20FF6A450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57758);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57758);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6A490(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6A4F8(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6A8CC((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 7);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6A75C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6A7B8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6A820()
{
  return 7;
}

uint64_t sub_20FF6A828(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6A830@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6A848(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6A8CC(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6A944();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6A944()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57F18);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57F18))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6AC00();
    sub_20FF6AB48((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6AB48((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57F00, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57F00, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57F18);
          return &stru_254A57F00;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57F00;
}

void sub_20FF6AA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57F18);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57F18);
  _Unwind_Resume(a1);
}

void sub_20FF6AB48(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6ABE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6AC00()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57798);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57798))
    return &stru_254A57780;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two16f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57780);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57780, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57798);
  return &stru_254A57780;
}

void sub_20FF6ACB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57798);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57798);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6ACF8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6AD60(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 8)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6B134((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 8);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6AFC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6B020(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6B088()
{
  return 8;
}

uint64_t sub_20FF6B090(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6B098@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6B0B0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6B134(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6B1AC();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6B1AC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57F38);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57F38))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6B468();
    sub_20FF6B3B0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6B3B0((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57F20, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57F20, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57F38);
          return &stru_254A57F20;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57F20;
}

void sub_20FF6B2FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57F38);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57F38);
  _Unwind_Resume(a1);
}

void sub_20FF6B3B0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6B44C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6B468()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A577D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A577D8))
    return &stru_254A577C0;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Two32f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A577C0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A577C0, &dword_20E81F000);
  __cxa_guard_release(&qword_254A577D8);
  return &stru_254A577C0;
}

void sub_20FF6B520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A577D8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A577D8);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6B560(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6B5C8(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 9)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6B998((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 9);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6B82C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6B888(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6B8F0()
{
  return 9;
}

uint64_t sub_20FF6B8F8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6B900@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6B914(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6B998(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6BA10();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6BA10()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57F58);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57F58))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6BCCC();
    sub_20FF6BC14((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6BC14((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57F40, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57F40, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57F58);
          return &stru_254A57F40;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57F40;
}

void sub_20FF6BB60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57F58);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57F58);
  _Unwind_Resume(a1);
}

void sub_20FF6BC14(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6BCB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6BCCC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57818);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57818))
    return &stru_254A57800;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three8u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57800);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57800, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57818);
  return &stru_254A57800;
}

void sub_20FF6BD84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57818);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57818);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6BDC4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6BE2C(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 10)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6C200((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 10);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6C090(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6C0EC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6C154()
{
  return 10;
}

uint64_t sub_20FF6C15C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6C164@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6C17C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6C200(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6C278();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6C278()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57F78);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57F78))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6C534();
    sub_20FF6C47C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6C47C((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57F60, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57F60, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57F78);
          return &stru_254A57F60;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57F60;
}

void sub_20FF6C3C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57F78);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57F78);
  _Unwind_Resume(a1);
}

void sub_20FF6C47C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6C518(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6C534()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57858);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57858))
    return &stru_254A57840;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three16u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57840);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57840, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57858);
  return &stru_254A57840;
}

void sub_20FF6C5EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57858);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57858);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6C62C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6C694(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 11)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6CA68((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 11);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6C8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6C954(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6C9BC()
{
  return 11;
}

uint64_t sub_20FF6C9C4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6C9CC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6C9E4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6CA68(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6CAE0();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6CAE0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57F98);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57F98))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6CD9C();
    sub_20FF6CCE4((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6CCE4((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57F80, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57F80, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57F98);
          return &stru_254A57F80;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57F80;
}

void sub_20FF6CC30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57F98);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57F98);
  _Unwind_Resume(a1);
}

void sub_20FF6CCE4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6CD80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6CD9C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57898);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57898))
    return &stru_254A57880;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three16f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57880);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57880, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57898);
  return &stru_254A57880;
}

void sub_20FF6CE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57898);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57898);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6CE94(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6CEFC(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 12)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6D2D0((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 12);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6D160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6D1BC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6D224()
{
  return 12;
}

uint64_t sub_20FF6D22C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6D234@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6D24C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6D2D0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6D348();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6D348()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57FB8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57FB8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6D604();
    sub_20FF6D54C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6D54C((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57FA0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57FA0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57FB8);
          return &stru_254A57FA0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57FA0;
}

void sub_20FF6D498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57FB8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57FB8);
  _Unwind_Resume(a1);
}

void sub_20FF6D54C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6D5E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6D604()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A578D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A578D8))
    return &stru_254A578C0;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Three32f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A578C0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A578C0, &dword_20E81F000);
  __cxa_guard_release(&qword_254A578D8);
  return &stru_254A578C0;
}

void sub_20FF6D6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A578D8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A578D8);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6D6FC(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6D764(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 13)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6DB34((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 13);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6D9C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6DA24(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6DA8C()
{
  return 13;
}

uint64_t sub_20FF6DA94(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6DA9C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6DAB0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6DB34(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6DBAC();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6DBAC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57FD8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57FD8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6DE68();
    sub_20FF6DDB0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6DDB0((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57FC0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57FC0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57FD8);
          return &stru_254A57FC0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57FC0;
}

void sub_20FF6DCFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57FD8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57FD8);
  _Unwind_Resume(a1);
}

void sub_20FF6DDB0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6DE4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6DE68()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57918);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57918))
    return &stru_254A57900;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four8u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57900);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57900, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57918);
  return &stru_254A57900;
}

void sub_20FF6DF20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57918);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57918);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6DF60(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6DFC8(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 14)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6E39C((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 14);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6E22C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6E288(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6E2F0()
{
  return 14;
}

uint64_t sub_20FF6E2F8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6E300@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6E318(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6E39C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6E414();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6E414()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A57FF8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A57FF8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6E6D0();
    sub_20FF6E618((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6E618((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A57FE0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57FE0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A57FF8);
          return &stru_254A57FE0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A57FE0;
}

void sub_20FF6E564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A57FF8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A57FF8);
  _Unwind_Resume(a1);
}

void sub_20FF6E618(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6E6B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6E6D0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57958);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57958))
    return &stru_254A57940;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four16u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57940);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57940, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57958);
  return &stru_254A57940;
}

void sub_20FF6E788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57958);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57958);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6E7C8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6E830(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 15)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6EC04((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 15);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6EA94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6EAF0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6EB58()
{
  return 15;
}

uint64_t sub_20FF6EB60(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6EB68@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6EB80(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6EC04(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6EC7C();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6EC7C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58018);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58018))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6EF38();
    sub_20FF6EE80((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6EE80((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58000, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58000, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58018);
          return &stru_254A58000;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58000;
}

void sub_20FF6EDCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58018);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58018);
  _Unwind_Resume(a1);
}

void sub_20FF6EE80(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6EF1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6EF38()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57998);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57998))
    return &stru_254A57980;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four16f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57980);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57980, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57998);
  return &stru_254A57980;
}

void sub_20FF6EFF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57998);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57998);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6F030(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6F098(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 16)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6F46C((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 16);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6F2FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6F358(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6F3C0()
{
  return 16;
}

uint64_t sub_20FF6F3C8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6F3D0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6F3E8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6F46C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6F4E4();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6F4E4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58038);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58038))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF6F7A0();
    sub_20FF6F6E8((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6F6E8((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58020, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58020, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58038);
          return &stru_254A58020;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58020;
}

void sub_20FF6F634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58038);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58038);
  _Unwind_Resume(a1);
}

void sub_20FF6F6E8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6F784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF6F7A0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A579D8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A579D8))
    return &stru_254A579C0;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Four32f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A579C0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A579C0, &dword_20E81F000);
  __cxa_guard_release(&qword_254A579D8);
  return &stru_254A579C0;
}

void sub_20FF6F858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A579D8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A579D8);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF6F898(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF6F900(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 17)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF6FCD0((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 17);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF6FB64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF6FBC0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF6FC28()
{
  return 17;
}

uint64_t sub_20FF6FC30(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF6FC38@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF6FC4C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF6FCD0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF6FD48();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF6FD48()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58058);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58058))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF70004();
    sub_20FF6FF4C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF6FF4C((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58040, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58040, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58058);
          return &stru_254A58040;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58040;
}

void sub_20FF6FE98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58058);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58058);
  _Unwind_Resume(a1);
}

void sub_20FF6FF4C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF6FFE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF70004()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57A18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57A18))
    return &stru_254A57A00;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr8u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57A00);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57A00, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57A18);
  return &stru_254A57A00;
}

void sub_20FF700BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57A18);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57A18);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF700FC(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF70164(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 18)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF70538((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 18);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF703C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF70424(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF7048C()
{
  return 18;
}

uint64_t sub_20FF70494(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF7049C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF704B4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF70538(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF705B0();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF705B0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58078);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58078))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF7086C();
    sub_20FF707B4((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF707B4((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58060, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58060, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58078);
          return &stru_254A58060;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58060;
}

void sub_20FF70700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58078);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58078);
  _Unwind_Resume(a1);
}

void sub_20FF707B4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF70850(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF7086C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57A58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57A58))
    return &stru_254A57A40;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr16u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57A40);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57A40, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57A58);
  return &stru_254A57A40;
}

void sub_20FF70924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57A58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57A58);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF70964(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF709CC(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 19)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF70DA0((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 19);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF70C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF70C8C(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF70CF4()
{
  return 19;
}

uint64_t sub_20FF70CFC(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF70D04@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF70D1C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF70DA0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF70E18();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF70E18()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58098);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58098))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF710D4();
    sub_20FF7101C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF7101C((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58080, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58080, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58098);
          return &stru_254A58080;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58080;
}

void sub_20FF70F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58098);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58098);
  _Unwind_Resume(a1);
}

void sub_20FF7101C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF710B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF710D4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57A98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57A98))
    return &stru_254A57A80;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr16f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57A80);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57A80, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57A98);
  return &stru_254A57A80;
}

void sub_20FF7118C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57A98);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57A98);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF711CC(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF71234(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 20)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF71608((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 20);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF71498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF714F4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF7155C()
{
  return 20;
}

uint64_t sub_20FF71564(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF7156C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF71584(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF71608(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF71680();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF71680()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A580B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A580B8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF7193C();
    sub_20FF71884((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF71884((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A580A0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A580A0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A580B8);
          return &stru_254A580A0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A580A0;
}

void sub_20FF717D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A580B8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A580B8);
  _Unwind_Resume(a1);
}

void sub_20FF71884(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF71920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF7193C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57AD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57AD8))
    return &stru_254A57AC0;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgr32f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57AC0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57AC0, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57AD8);
  return &stru_254A57AC0;
}

void sub_20FF719F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57AD8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57AD8);
  _Unwind_Resume(a1);
}

void sub_20FF71A34(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 21)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF71BE0((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF71C58(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF71B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF71BE0(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF52948();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

uint64_t *sub_20FF71C58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 21);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF71DA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF71DBC(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF71E24(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 22)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF720E4((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF72510(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF71F7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF71FD0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF72038()
{
  return 22;
}

uint64_t sub_20FF72040(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF72048@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF72060(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF720E4(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF7215C();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF7215C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A580D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A580D8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF72418();
    sub_20FF72360((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF72360((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A580C0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A580C0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A580D8);
          return &stru_254A580C0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A580C0;
}

void sub_20FF722AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A580D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A580D8);
  _Unwind_Resume(a1);
}

void sub_20FF72360(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF723FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF72418()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57B18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57B18))
    return &stru_254A57B00;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb16u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57B00);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57B00, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57B18);
  return &stru_254A57B00;
}

void sub_20FF724D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57B18);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57B18);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF72510(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 22);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF72660(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF72674(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF726DC(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 23)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF7299C((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF72DC8(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF72834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF72888(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF728F0()
{
  return 23;
}

uint64_t sub_20FF728F8(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF72900@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF72918(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF7299C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF72A14();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF72A14()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A580F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A580F8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF72CD0();
    sub_20FF72C18((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF72C18((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A580E0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A580E0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A580F8);
          return &stru_254A580E0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A580E0;
}

void sub_20FF72B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A580F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A580F8);
  _Unwind_Resume(a1);
}

void sub_20FF72C18(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF72CB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF72CD0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57B58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57B58))
    return &stru_254A57B40;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb16f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57B40);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57B40, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57B58);
  return &stru_254A57B40;
}

void sub_20FF72D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57B58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57B58);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF72DC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 23);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF72F18(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF72F2C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF72F94(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 24)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF73254((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF73680(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF730EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF73140(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF731A8()
{
  return 24;
}

uint64_t sub_20FF731B0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF731B8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF731D0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF73254(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF732CC();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF732CC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58118);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58118))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF73588();
    sub_20FF734D0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF734D0((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58100, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58100, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58118);
          return &stru_254A58100;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58100;
}

void sub_20FF7341C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58118);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58118);
  _Unwind_Resume(a1);
}

void sub_20FF734D0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF7356C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF73588()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57B98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57B98))
    return &stru_254A57B80;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgb32f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57B80);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57B80, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57B98);
  return &stru_254A57B80;
}

void sub_20FF73640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57B98);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57B98);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF73680(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 24);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF737D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

void sub_20FF737E4(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 25)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF73990((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF73CC4(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF7393C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF73990(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF73A08();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF73A08()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58138);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58138))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20EA6EBA4();
    sub_20FF73C0C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF73C0C((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58120, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58120, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58138);
          return &stru_254A58120;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58120;
}

void sub_20FF73B58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58138);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58138);
  _Unwind_Resume(a1);
}

void sub_20FF73C0C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF73CA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20FF73CC4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 25);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF73E14(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF73E28(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF73E90(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 26)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF74264((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 26);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF740F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF74150(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF741B8()
{
  return 26;
}

uint64_t sub_20FF741C0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF741C8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF741E0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF74264(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF742DC();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF742DC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58158);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58158))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF74598();
    sub_20FF744E0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF744E0((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58140, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58140, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58158);
          return &stru_254A58140;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58140;
}

void sub_20FF7442C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58158);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58158);
  _Unwind_Resume(a1);
}

void sub_20FF744E0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF7457C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF74598()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57BD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57BD8))
    return &stru_254A57BC0;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra16u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57BC0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57BC0, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57BD8);
  return &stru_254A57BC0;
}

void sub_20FF74650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57BD8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57BD8);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF74690(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF746F8(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 27)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF74ACC((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 27);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF7495C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF749B8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF74A20()
{
  return 27;
}

uint64_t sub_20FF74A28(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF74A30@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF74A48(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF74ACC(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF74B44();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF74B44()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58178);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58178))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF74E00();
    sub_20FF74D48((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF74D48((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58160, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58160, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58178);
          return &stru_254A58160;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58160;
}

void sub_20FF74C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58178);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58178);
  _Unwind_Resume(a1);
}

void sub_20FF74D48(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF74DE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF74E00()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57C18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57C18))
    return &stru_254A57C00;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Bgra16f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57C00);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57C00, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57C18);
  return &stru_254A57C00;
}

void sub_20FF74EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57C18);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57C18);
  _Unwind_Resume(a1);
}

void sub_20FF74EF8(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 28)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF751B8((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 28);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF7515C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF751B8(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF75230();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF75230()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58198);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58198))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20EA6F2D4();
    sub_20FF75434((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF75434((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58180, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58180, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58198);
          return &stru_254A58180;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58180;
}

void sub_20FF75380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58198);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58198);
  _Unwind_Resume(a1);
}

void sub_20FF75434(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF754D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_20FF754EC(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 29)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF75698((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF759CC(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF75644(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF75698(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF75710();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF75710()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A581B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A581B8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20EA6FA00();
    sub_20FF75914((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF75914((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A581A0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A581A0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A581B8);
          return &stru_254A581A0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A581A0;
}

void sub_20FF75860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A581B8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A581B8);
  _Unwind_Resume(a1);
}

void sub_20FF75914(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF759B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20FF759CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 29);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF75B1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF75B30(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF75B98(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 30)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF75E58((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF76284(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF75CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF75D44(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF75DAC()
{
  return 30;
}

uint64_t sub_20FF75DB4(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF75DBC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF75DD4(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF75E58(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF75ED0();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF75ED0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A581D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A581D8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF7618C();
    sub_20FF760D4((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF760D4((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A581C0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A581C0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A581D8);
          return &stru_254A581C0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A581C0;
}

void sub_20FF76020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A581D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A581D8);
  _Unwind_Resume(a1);
}

void sub_20FF760D4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF76170(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF7618C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57C58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57C58))
    return &stru_254A57C40;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba16u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57C40);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57C40, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57C58);
  return &stru_254A57C40;
}

void sub_20FF76244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57C58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57C58);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF76284(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 30);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF763D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF763E8(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF76450(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 31)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF76710((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF76B3C(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF765A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF765FC(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF76664()
{
  return 31;
}

uint64_t sub_20FF7666C(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF76674@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF7668C(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF76710(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF76788();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF76788()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A581F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A581F8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF76A44();
    sub_20FF7698C((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF7698C((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A581E0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A581E0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A581F8);
          return &stru_254A581E0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A581E0;
}

void sub_20FF768D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A581F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A581F8);
  _Unwind_Resume(a1);
}

void sub_20FF7698C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF76A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF76A44()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57C98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57C98))
    return &stru_254A57C80;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Rgba16f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57C80);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57C80, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57C98);
  return &stru_254A57C80;
}

void sub_20FF76AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57C98);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57C98);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF76B3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 31);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF76C8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

void sub_20FF76CA0(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 32)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF76E4C((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF77180(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF76DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF76E4C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF76EC4();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF76EC4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58218);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58218))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20EA70130();
    sub_20FF770C8((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF770C8((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58200, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58200, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58218);
          return &stru_254A58200;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58200;
}

void sub_20FF77014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58218);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58218);
  _Unwind_Resume(a1);
}

void sub_20FF770C8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF77164(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_20FF77180(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 32);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF772D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF772E4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF7734C(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 33)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF77608((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF77A34(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF774A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF774F8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF77560()
{
  return 33;
}

uint64_t sub_20FF77568(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF77570@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF77584(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF77608(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF77680();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF77680()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58238);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58238))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF7793C();
    sub_20FF77884((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF77884((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58220, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58220, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58238);
          return &stru_254A58220;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58220;
}

void sub_20FF777D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58238);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58238);
  _Unwind_Resume(a1);
}

void sub_20FF77884(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF77920(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF7793C()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57CD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57CD8))
    return &stru_254A57CC0;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr8u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57CC0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57CC0, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57CD8);
  return &stru_254A57CC0;
}

void sub_20FF779F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57CD8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57CD8);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF77A34(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 33);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF77B84(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF77B98(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF77C00(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 34)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF77FD4((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 34);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF77E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF77EC0(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF77F28()
{
  return 34;
}

uint64_t sub_20FF77F30(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF77F38@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF77F50(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF77FD4(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF7804C();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF7804C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58258);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58258))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF78308();
    sub_20FF78250((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF78250((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58240, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58240, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58258);
          return &stru_254A58240;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58240;
}

void sub_20FF7819C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58258);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58258);
  _Unwind_Resume(a1);
}

void sub_20FF78250(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF782EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF78308()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57D18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57D18))
    return &stru_254A57D00;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr16u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57D00);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57D00, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57D18);
  return &stru_254A57D00;
}

void sub_20FF783C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57D18);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57D18);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF78400(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF78468(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 35)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF7883C((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 35);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF786CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF78728(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF78790()
{
  return 35;
}

uint64_t sub_20FF78798(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF787A0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF787B8(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF7883C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF788B4();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF788B4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58278);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58278))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF78B70();
    sub_20FF78AB8((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF78AB8((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58260, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58260, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58278);
          return &stru_254A58260;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58260;
}

void sub_20FF78A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58278);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58278);
  _Unwind_Resume(a1);
}

void sub_20FF78AB8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF78B54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF78B70()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57D58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57D58))
    return &stru_254A57D40;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr16f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57D40);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57D40, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57D58);
  return &stru_254A57D40;
}

void sub_20FF78C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57D58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57D58);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF78C68(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF78CD0(std::string::size_type *a1, uint64_t a2)
{
  std::string::size_type v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  __int16 v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  std::logic_error *exception;
  std::__shared_weak_count *v28;
  std::string v29;
  _OWORD *v30;

  if (*(_DWORD *)(a2 + 56) != 36)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF790A4((uint64_t)&v29, a2);
    std::logic_error::logic_error(exception, &v29);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  v29.__r_.__value_.__r.__words[0] = v4;
  v29.__r_.__value_.__l.__size_ = (std::string::size_type)v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    v28 = v5;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    *a1 = v4;
    a1[1] = (std::string::size_type)v5;
    do
      v10 = __ldxr(p_shared_owners);
    while (__stxr(v10 + 1, p_shared_owners));
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  else
  {
    v28 = 0;
    *a1 = v4;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, std::string::size_type, uint64_t))(*(_QWORD *)v4 + 64))(&v30, v4, 36);
  v12 = v30;
  v14 = v30[1];
  v13 = v30[2];
  *((_OWORD *)a1 + 1) = *v30;
  *((_OWORD *)a1 + 2) = v14;
  *((_OWORD *)a1 + 3) = v13;
  v30 = 0;
  MEMORY[0x212BC6398](v12);
  v15 = *a1;
  v16 = (std::__shared_weak_count *)a1[1];
  if (v16)
  {
    v17 = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldxr(v17);
    while (__stxr(v18 + 1, v17));
    do
      v19 = __ldaxr(v17);
    while (__stlxr(v19 - 1, v17));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  v20 = (*(uint64_t (**)(std::string::size_type))(*(_QWORD *)v15 + 104))(v15);
  v21 = v20;
  if ((v20 & 0xFFFFFF) <= 0x10000)
    v21 = 0;
  v22 = v20 & 0xFF00;
  if ((v20 & 0xFF0000) == 0)
    v22 = 0;
  *((_WORD *)a1 + 32) = v22 & 0xFF00 | v21;
  if (v28)
  {
    v23 = (unint64_t *)&v28->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
  }
  if (v29.__r_.__value_.__l.__size_)
  {
    v25 = (unint64_t *)(v29.__r_.__value_.__l.__size_ + 8);
    do
      v26 = __ldaxr(v25);
    while (__stlxr(v26 - 1, v25));
    if (!v26)
    {
      (*(void (**)(std::string::size_type))(*(_QWORD *)v29.__r_.__value_.__l.__size_ + 16))(v29.__r_.__value_.__l.__size_);
      std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v29.__r_.__value_.__l.__size_);
    }
  }
}

void sub_20FF78F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  void *v16;
  int v17;

  if (a16 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  _Unwind_Resume(a1);
}

void sub_20FF78F90(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF78FF8()
{
  return 36;
}

uint64_t sub_20FF79000(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF79008@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF79020(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF790A4(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF7911C();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF7911C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58298);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58298))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF793D8();
    sub_20FF79320((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF79320((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58280, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58280, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58298);
          return &stru_254A58280;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58280;
}

void sub_20FF7926C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58298);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58298);
  _Unwind_Resume(a1);
}

void sub_20FF79320(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF793BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF793D8()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57D98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57D98))
    return &stru_254A57D80;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Abgr32f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57D80);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57D80, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57D98);
  return &stru_254A57D80;
}

void sub_20FF79490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57D98);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57D98);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF794D0(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF79538(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 37)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF797F4((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF79C20(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF79690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF796E4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF7974C()
{
  return 37;
}

uint64_t sub_20FF79754(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF7975C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF79770(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF797F4(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF7986C();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF7986C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A582B8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A582B8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF79B28();
    sub_20FF79A70((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF79A70((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A582A0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A582A0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A582B8);
          return &stru_254A582A0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A582A0;
}

void sub_20FF799BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A582B8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A582B8);
  _Unwind_Resume(a1);
}

void sub_20FF79A70(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF79B0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF79B28()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57DD8);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57DD8))
    return &stru_254A57DC0;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb8u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57DC0);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57DC0, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57DD8);
  return &stru_254A57DC0;
}

void sub_20FF79BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57DD8);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57DD8);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF79C20(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 37);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF79D70(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF79D84(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF79DEC(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 38)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF7A0AC((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF7A4D8(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF79F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF79F98(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF7A000()
{
  return 38;
}

uint64_t sub_20FF7A008(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF7A010@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF7A028(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF7A0AC(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF7A124();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF7A124()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A582D8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A582D8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF7A3E0();
    sub_20FF7A328((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF7A328((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A582C0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A582C0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A582D8);
          return &stru_254A582C0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A582C0;
}

void sub_20FF7A274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A582D8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A582D8);
  _Unwind_Resume(a1);
}

void sub_20FF7A328(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF7A3C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF7A3E0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57E18);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57E18))
    return &stru_254A57E00;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb16u]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57E00);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57E00, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57E18);
  return &stru_254A57E00;
}

void sub_20FF7A498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57E18);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57E18);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF7A4D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 38);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF7A628(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF7A63C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF7A6A4(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 39)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF7A964((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF7AD90(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF7A7FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF7A850(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF7A8B8()
{
  return 39;
}

uint64_t sub_20FF7A8C0(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF7A8C8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 2 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF7A8E0(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF7A964(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF7A9DC();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF7A9DC()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A582F8);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A582F8))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF7AC98();
    sub_20FF7ABE0((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF7ABE0((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A582E0, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A582E0, &dword_20E81F000);
          __cxa_guard_release(&qword_254A582F8);
          return &stru_254A582E0;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A582E0;
}

void sub_20FF7AB2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A582F8);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A582F8);
  _Unwind_Resume(a1);
}

void sub_20FF7ABE0(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF7AC7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF7AC98()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57E58);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57E58))
    return &stru_254A57E40;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb16f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57E40);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57E40, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57E58);
  return &stru_254A57E40;
}

void sub_20FF7AD50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57E58);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57E58);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF7AD90(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 39);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF7AEE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_20FF7AEF4(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_20FF7AF5C(uint64_t *a1, uint64_t a2)
{
  std::string::size_type v3;
  std::string::size_type v4;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *size;
  unint64_t *v12;
  unint64_t v13;
  std::logic_error *exception;
  std::string::size_type v15;
  std::__shared_weak_count *v16;
  std::string v17;

  if (*(_DWORD *)(a2 + 56) != 40)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_20FF7B21C((uint64_t)&v17, a2);
    std::logic_error::logic_error(exception, &v17);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C9AAA18, (void (*)(void *))MEMORY[0x24BEDAB88]);
  }
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v17.__r_.__value_.__r.__words[0] = v3;
  v17.__r_.__value_.__l.__size_ = v4;
  if (v4)
  {
    v5 = (unint64_t *)(v4 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
    v15 = v3;
    v16 = (std::__shared_weak_count *)v4;
    do
      v7 = __ldxr(v5);
    while (__stxr(v7 + 1, v5));
  }
  else
  {
    v15 = v3;
    v16 = 0;
  }
  sub_20FF7B648(a1, (uint64_t *)&v15);
  v8 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  size = (std::__shared_weak_count *)v17.__r_.__value_.__l.__size_;
  if (v17.__r_.__value_.__l.__size_)
  {
    v12 = (unint64_t *)(v17.__r_.__value_.__l.__size_ + 8);
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
  }
}

void sub_20FF7B0B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  void *v17;
  int v18;

  if (a17 < 0)
  {
    operator delete(__p);
    if ((v18 & 1) == 0)
LABEL_6:
      _Unwind_Resume(a1);
  }
  else if (!v18)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_20FF7B108(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
  JUMPOUT(0x212BC6398);
}

uint64_t sub_20FF7B170()
{
  return 40;
}

uint64_t sub_20FF7B178(uint64_t a1)
{
  return a1 + 56;
}

uint64_t sub_20FF7B180@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *(_QWORD *)(result + 36);
  *(_DWORD *)(a2 + 8) = 4 * *(_DWORD *)(result + 52);
  return result;
}

uint64_t sub_20FF7B198(uint64_t a1)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(a1 + 8);
  if (!v1)
    return 0;
  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldxr(p_shared_owners);
    while (__stxr(v4 + 1, p_shared_owners));
    do
      v5 = __ldaxr(p_shared_owners);
    while (__stlxr(v5 - 1, p_shared_owners));
    if (!v5)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return v1;
}

uint64_t sub_20FF7B21C(uint64_t a1, uint64_t a2)
{
  std::string *v3;
  unsigned int v5;

  v3 = sub_20FF7B294();
  sub_20FF60D80();
  v5 = *(_DWORD *)(a2 + 56);
  return sub_20E8A2A0C("Attempting to create an ", (uint64_t)v3, (uint64_t)" from an ", (uint64_t)&stru_254A6C9E0, (uint64_t)" but the image is of incompatible format ", &v5);
}

std::string *sub_20FF7B294()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 *v3;
  int64x2_t v4;
  int8x16_t v5;
  void *v6[3];
  void *v7[2];
  char v8;
  void *v9[2];
  char v10;
  void *__p;
  char v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_254A58318);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_254A58318))
  {
    sub_20E8610C0(v7, "ImageView");
    v2 = sub_20FF7B550();
    sub_20FF7B498((uint64_t)v2, (uint64_t)v9);
    v3 = sub_20E8A41FC();
    sub_20FF7B498((uint64_t)v3, (uint64_t)&__p);
    sub_20E877C80(v6, (uint64_t)v9, 2uLL);
    sub_21023CE38((char *)v7, (uint64_t *)v6, &stru_254A58300, v4, v5);
    sub_20E89FB98(v6);
    if (v12 < 0)
    {
      operator delete(__p);
      if ((v10 & 0x80000000) == 0)
      {
LABEL_6:
        if ((v8 & 0x80000000) == 0)
        {
LABEL_7:
          __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A58300, &dword_20E81F000);
          __cxa_guard_release(&qword_254A58318);
          return &stru_254A58300;
        }
LABEL_10:
        operator delete(v7[0]);
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v9[0]);
    if ((v8 & 0x80000000) == 0)
      goto LABEL_7;
    goto LABEL_10;
  }
  return &stru_254A58300;
}

void sub_20FF7B3E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  sub_20E89FB98((void **)&a9);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a17 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a19);
  if ((a17 & 0x80000000) == 0)
  {
LABEL_4:
    __cxa_guard_abort(&qword_254A58318);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a12);
  __cxa_guard_abort(&qword_254A58318);
  _Unwind_Resume(a1);
}

void sub_20FF7B498(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  std::string __p;

  if (*(char *)(a1 + 23) < 0)
    sub_20E860C04(&__p, *(void **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  sub_210236E50(&__p, "cv3d::kit::img::", 16, "", 0, 1, 1, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
}

void sub_20FF7B534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::string *sub_20FF7B550()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_254A57E98);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254A57E98))
    return &stru_254A57E80;
  sub_21023CB10("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::img::Format::Argb32f]", __p);
  sub_21023CFB0((uint64_t)__p, &stru_254A57E80);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_254A57E80, &dword_20E81F000);
  __cxa_guard_release(&qword_254A57E98);
  return &stru_254A57E80;
}

void sub_20FF7B608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_254A57E98);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_254A57E98);
  _Unwind_Resume(a1);
}

uint64_t *sub_20FF7B648(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  __int16 v18;
  _OWORD *v20;

  v3 = *a2;
  v4 = (std::__shared_weak_count *)a2[1];
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
    *a1 = v3;
    a1[1] = (uint64_t)v4;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  else
  {
    *a1 = v3;
    a1[1] = 0;
  }
  (*(void (**)(_OWORD **__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v3 + 64))(&v20, v3, 40);
  v10 = v20[1];
  v9 = v20[2];
  *((_OWORD *)a1 + 1) = *v20;
  *((_OWORD *)a1 + 2) = v10;
  *((_OWORD *)a1 + 3) = v9;
  v20 = 0;
  MEMORY[0x212BC6398]();
  v11 = *a1;
  v12 = (std::__shared_weak_count *)a1[1];
  if (v12)
  {
    v13 = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    do
      v15 = __ldaxr(v13);
    while (__stlxr(v15 - 1, v13));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 104))(v11);
  v17 = v16;
  if ((v16 & 0xFFFFFF) <= 0x10000)
    v17 = 0;
  v18 = v16 & 0xFF00;
  if ((v16 & 0xFF0000) == 0)
    v18 = 0;
  *((_WORD *)a1 + 32) = v18 & 0xFF00 | v17;
  return a1;
}

void sub_20FF7B798(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_20E86665C(v1);
  _Unwind_Resume(a1);
}

void sub_20FF7B7AC(int a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  unint64_t v195;
  std::__shared_weak_count *v196;
  unint64_t *v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  std::__shared_weak_count *v203;
  unint64_t *v204;
  unint64_t v205;
  unint64_t v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  std::__shared_weak_count *v214;
  unint64_t *v215;
  unint64_t v216;
  unint64_t v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  std::__shared_weak_count *v225;
  unint64_t *v226;
  unint64_t v227;
  unint64_t v228;
  std::__shared_weak_count *v229;
  unint64_t *v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  std::__shared_weak_count *v236;
  unint64_t *v237;
  unint64_t v238;
  unint64_t v239;
  std::__shared_weak_count *v240;
  unint64_t *v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  std::__shared_weak_count *v247;
  unint64_t *v248;
  unint64_t v249;
  unint64_t v250;
  std::__shared_weak_count *v251;
  unint64_t *v252;
  unint64_t v253;
  unint64_t v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  std::__shared_weak_count *v258;
  unint64_t *v259;
  unint64_t v260;
  unint64_t v261;
  std::__shared_weak_count *v262;
  unint64_t *v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  std::__shared_weak_count *v269;
  unint64_t *v270;
  unint64_t v271;
  unint64_t v272;
  std::__shared_weak_count *v273;
  unint64_t *v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  int v278;
  uint64_t v279;
  std::__shared_weak_count *v280;
  unint64_t *v281;
  unint64_t v282;
  unint64_t v283;
  std::__shared_weak_count *v284;
  unint64_t *v285;
  unint64_t v286;
  unint64_t v287;
  uint64_t v288;
  int v289;
  uint64_t v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  unint64_t v294;
  std::__shared_weak_count *v295;
  unint64_t *v296;
  unint64_t v297;
  unint64_t v298;
  uint64_t v299;
  int v300;
  uint64_t v301;
  std::__shared_weak_count *v302;
  unint64_t *v303;
  unint64_t v304;
  unint64_t v305;
  std::__shared_weak_count *v306;
  unint64_t *v307;
  unint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  std::__shared_weak_count *v312;
  unint64_t *v313;
  unint64_t v314;
  unint64_t v315;
  std::__shared_weak_count *v316;
  unint64_t *v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  std::__shared_weak_count *v322;
  unint64_t *v323;
  unint64_t v324;
  unint64_t v325;
  std::__shared_weak_count *v326;
  unint64_t *v327;
  unint64_t v328;
  unint64_t v329;
  uint64_t v330;
  int v331;
  uint64_t v332;
  std::__shared_weak_count *v333;
  unint64_t *v334;
  unint64_t v335;
  unint64_t v336;
  std::__shared_weak_count *v337;
  unint64_t *v338;
  unint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  std::__shared_weak_count *v343;
  unint64_t *v344;
  unint64_t v345;
  unint64_t v346;
  std::__shared_weak_count *v347;
  unint64_t *v348;
  unint64_t v349;
  unint64_t v350;
  uint64_t v351;
  int v352;
  uint64_t v353;
  std::__shared_weak_count *v354;
  unint64_t *v355;
  unint64_t v356;
  unint64_t v357;
  std::__shared_weak_count *v358;
  unint64_t *v359;
  unint64_t v360;
  unint64_t v361;
  uint64_t v362;
  int v363;
  uint64_t v364;
  std::__shared_weak_count *v365;
  unint64_t *v366;
  unint64_t v367;
  unint64_t v368;
  std::__shared_weak_count *v369;
  unint64_t *v370;
  unint64_t v371;
  unint64_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  std::__shared_weak_count *v376;
  unint64_t *v377;
  unint64_t v378;
  unint64_t v379;
  std::__shared_weak_count *v380;
  unint64_t *v381;
  unint64_t v382;
  unint64_t v383;
  uint64_t v384;
  int v385;
  uint64_t v386;
  std::__shared_weak_count *v387;
  unint64_t *v388;
  unint64_t v389;
  unint64_t v390;
  std::__shared_weak_count *v391;
  unint64_t *v392;
  unint64_t v393;
  unint64_t v394;
  uint64_t v395;
  int v396;
  uint64_t v397;
  std::__shared_weak_count *v398;
  unint64_t *v399;
  unint64_t v400;
  unint64_t v401;
  std::__shared_weak_count *v402;
  unint64_t *v403;
  unint64_t v404;
  unint64_t v405;
  uint64_t v406;
  int v407;
  uint64_t v408;
  std::__shared_weak_count *v409;
  unint64_t *v410;
  unint64_t v411;
  unint64_t v412;
  std::__shared_weak_count *v413;
  unint64_t *v414;
  unint64_t v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  std::__shared_weak_count *v419;
  unint64_t *v420;
  unint64_t v421;
  unint64_t v422;
  std::__shared_weak_count *v423;
  unint64_t *v424;
  unint64_t v425;
  unint64_t v426;
  uint64_t v427;
  int v428;
  uint64_t v429;
  std::__shared_weak_count *v430;
  unint64_t *v431;
  unint64_t v432;
  unint64_t v433;
  std::__shared_weak_count *v434;
  unint64_t *v435;
  unint64_t v436;
  unint64_t v437;
  int v438;
  uint64_t v439;
  _WORD *v440;
  uint64_t v441;
  std::__shared_weak_count *v442;
  unint64_t *v443;
  unint64_t v444;
  unint64_t v445;
  int v446;
  int m;
  uint64_t v448;
  int v449;
  uint64_t v450;
  _WORD *v451;
  uint64_t v452;
  std::__shared_weak_count *v453;
  unint64_t *v454;
  unint64_t v455;
  unint64_t v456;
  int v457;
  uint64_t v458;
  int v459;
  uint64_t v460;
  _BYTE *v461;
  uint64_t v462;
  std::__shared_weak_count *v463;
  unint64_t *v464;
  unint64_t v465;
  unint64_t v466;
  uint64_t v467;
  int v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  std::__shared_weak_count *v473;
  unint64_t *v474;
  unint64_t v475;
  int v476;
  uint64_t v477;
  float *v478;
  uint64_t v479;
  std::__shared_weak_count *v480;
  unint64_t *v481;
  unint64_t v482;
  unint64_t v483;
  int v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  int v488;
  uint64_t v489;
  _BYTE *v490;
  uint64_t v491;
  std::__shared_weak_count *v492;
  unint64_t *v493;
  unint64_t v494;
  unint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  unint64_t *v502;
  int v503;
  uint64_t v504;
  float *v505;
  uint64_t v506;
  std::__shared_weak_count *v507;
  unint64_t *v508;
  unint64_t v509;
  unint64_t v510;
  int v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  int v515;
  uint64_t v516;
  _WORD *v517;
  uint64_t v518;
  std::__shared_weak_count *v519;
  unint64_t *v520;
  unint64_t v521;
  unint64_t v522;
  uint64_t v523;
  int v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  unint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  unint64_t *v533;
  int v534;
  uint64_t v535;
  _BYTE *v536;
  uint64_t v537;
  std::__shared_weak_count *v538;
  unint64_t *v539;
  unint64_t v540;
  unint64_t v541;
  uint64_t v542;
  int v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  unint64_t *v548;
  int v549;
  uint64_t v550;
  float *v551;
  uint64_t v552;
  std::__shared_weak_count *v553;
  unint64_t *v554;
  unint64_t v555;
  unint64_t v556;
  uint64_t v557;
  int v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  unint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  unint64_t *v567;
  int v568;
  uint64_t v569;
  _WORD *v570;
  uint64_t v571;
  std::__shared_weak_count *v572;
  unint64_t *v573;
  unint64_t v574;
  unint64_t v575;
  int v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  int v580;
  uint64_t v581;
  _WORD *v582;
  uint64_t v583;
  std::__shared_weak_count *v584;
  unint64_t *v585;
  unint64_t v586;
  unint64_t v587;
  int v588;
  int j;
  uint64_t v590;
  int v591;
  uint64_t v592;
  _WORD *v593;
  uint64_t v594;
  std::__shared_weak_count *v595;
  unint64_t *v596;
  unint64_t v597;
  unint64_t v598;
  int v599;
  int jj;
  uint64_t v601;
  int v602;
  uint64_t v603;
  _WORD *v604;
  uint64_t v605;
  std::__shared_weak_count *v606;
  unint64_t *v607;
  unint64_t v608;
  unint64_t v609;
  int v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  int v614;
  uint64_t v615;
  _WORD *v616;
  uint64_t v617;
  std::__shared_weak_count *v618;
  unint64_t *v619;
  unint64_t v620;
  unint64_t v621;
  uint64_t v622;
  int v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  unint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  unint64_t *v632;
  int v633;
  uint64_t v634;
  _WORD *v635;
  uint64_t v636;
  std::__shared_weak_count *v637;
  unint64_t *v638;
  unint64_t v639;
  unint64_t v640;
  int v641;
  int n;
  uint64_t v643;
  int v644;
  uint64_t v645;
  _WORD *v646;
  uint64_t v647;
  std::__shared_weak_count *v648;
  unint64_t *v649;
  unint64_t v650;
  unint64_t v651;
  uint64_t v652;
  int v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  unint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  unint64_t *v662;
  int v663;
  uint64_t v664;
  float *v665;
  uint64_t v666;
  std::__shared_weak_count *v667;
  unint64_t *v668;
  unint64_t v669;
  unint64_t v670;
  int v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  unint64_t *v678;
  int v679;
  uint64_t v680;
  float *v681;
  uint64_t v682;
  std::__shared_weak_count *v683;
  unint64_t *v684;
  unint64_t v685;
  unint64_t v686;
  uint64_t v687;
  int v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  unint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  unint64_t *v697;
  int v698;
  uint64_t v699;
  float *v700;
  uint64_t v701;
  std::__shared_weak_count *v702;
  unint64_t *v703;
  unint64_t v704;
  unint64_t v705;
  uint64_t v706;
  int v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  unint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  unint64_t *v716;
  int v717;
  uint64_t v718;
  _WORD *v719;
  uint64_t v720;
  std::__shared_weak_count *v721;
  unint64_t *v722;
  unint64_t v723;
  unint64_t v724;
  int v725;
  int ii;
  uint64_t v727;
  int v728;
  uint64_t v729;
  _WORD *v730;
  uint64_t v731;
  std::__shared_weak_count *v732;
  unint64_t *v733;
  unint64_t v734;
  unint64_t v735;
  uint64_t v736;
  int v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  unint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  unint64_t *v746;
  int v747;
  uint64_t v748;
  _WORD *v749;
  uint64_t v750;
  std::__shared_weak_count *v751;
  unint64_t *v752;
  unint64_t v753;
  unint64_t v754;
  uint64_t v755;
  int v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  unint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  unint64_t *v765;
  int v766;
  uint64_t v767;
  float *v768;
  uint64_t v769;
  std::__shared_weak_count *v770;
  unint64_t *v771;
  unint64_t v772;
  unint64_t v773;
  uint64_t v774;
  int v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  unint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  unint64_t *v784;
  int v785;
  uint64_t v786;
  _BYTE *v787;
  uint64_t v788;
  std::__shared_weak_count *v789;
  unint64_t *v790;
  unint64_t v791;
  unint64_t v792;
  uint64_t v793;
  int v794;
  int v795;
  uint64_t v796;
  uint64_t v797;
  int v798;
  uint64_t v799;
  _BYTE *v800;
  uint64_t v801;
  std::__shared_weak_count *v802;
  unint64_t *v803;
  unint64_t v804;
  unint64_t v805;
  uint64_t v806;
  int v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  unint64_t *v812;
  int v813;
  uint64_t v814;
  float *v815;
  uint64_t v816;
  std::__shared_weak_count *v817;
  unint64_t *v818;
  unint64_t v819;
  unint64_t v820;
  uint64_t v821;
  int v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  unint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  unint64_t *v831;
  int v832;
  uint64_t v833;
  float *v834;
  uint64_t v835;
  std::__shared_weak_count *v836;
  unint64_t *v837;
  unint64_t v838;
  unint64_t v839;
  uint64_t v840;
  int v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  unint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  unint64_t *v850;
  int v851;
  uint64_t v852;
  _WORD *v853;
  uint64_t v854;
  std::__shared_weak_count *v855;
  unint64_t *v856;
  unint64_t v857;
  unint64_t v858;
  int v859;
  uint64_t i;
  int v861;
  uint64_t v862;
  _WORD *v863;
  uint64_t v864;
  std::__shared_weak_count *v865;
  unint64_t *v866;
  unint64_t v867;
  unint64_t v868;
  int v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  unint64_t *v876;
  int v877;
  uint64_t v878;
  _BYTE *v879;
  uint64_t v880;
  std::__shared_weak_count *v881;
  unint64_t *v882;
  unint64_t v883;
  unint64_t v884;
  int v885;
  int v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  unint64_t *v891;
  int v892;
  uint64_t v893;
  _BYTE *v894;
  uint64_t v895;
  std::__shared_weak_count *v896;
  unint64_t *v897;
  unint64_t v898;
  unint64_t v899;
  uint64_t v900;
  int v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  unint64_t *v906;
  int v907;
  uint64_t v908;
  _WORD *v909;
  uint64_t v910;
  std::__shared_weak_count *v911;
  unint64_t *v912;
  unint64_t v913;
  unint64_t v914;
  int v915;
  uint64_t v916;
  int v917;
  uint64_t v918;
  _WORD *v919;
  uint64_t v920;
  std::__shared_weak_count *v921;
  unint64_t *v922;
  unint64_t v923;
  unint64_t v924;
  int v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  int v929;
  uint64_t v930;
  _BYTE *v931;
  uint64_t v932;
  std::__shared_weak_count *v933;
  unint64_t *v934;
  unint64_t v935;
  unint64_t v936;
  uint64_t v937;
  int v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  unint64_t *v943;
  int v944;
  uint64_t v945;
  float *v946;
  uint64_t v947;
  std::__shared_weak_count *v948;
  unint64_t *v949;
  unint64_t v950;
  unint64_t v951;
  int v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  int v956;
  uint64_t v957;
  _WORD *v958;
  uint64_t v959;
  std::__shared_weak_count *v960;
  unint64_t *v961;
  unint64_t v962;
  unint64_t v963;
  uint64_t v964;
  int v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  unint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  unint64_t *v974;
  int v975;
  uint64_t v976;
  _WORD *v977;
  uint64_t v978;
  std::__shared_weak_count *v979;
  unint64_t *v980;
  unint64_t v981;
  unint64_t v982;
  int v983;
  int k;
  uint64_t v985;
  int v986;
  uint64_t v987;
  _BYTE *v988;
  uint64_t v989;
  std::__shared_weak_count *v990;
  unint64_t *v991;
  unint64_t v992;
  unint64_t v993;
  uint64_t v994;
  int v995;
  int v996;
  uint64_t v997;
  uint64_t v998;
  int v999;
  uint64_t v1000;
  _WORD *v1001;
  uint64_t v1002;
  std::__shared_weak_count *v1003;
  unint64_t *v1004;
  unint64_t v1005;
  unint64_t v1006;
  int v1007;
  uint64_t v1008;
  int v1009;
  uint64_t v1010;
  _BYTE *v1011;
  uint64_t v1012;
  std::__shared_weak_count *v1013;
  unint64_t *v1014;
  unint64_t v1015;
  unint64_t v1016;
  uint64_t v1017;
  int v1018;
  int v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  unint64_t *v1024;
  uint64_t v1025;
  uint64_t v1026;
  unint64_t *v1027;
  uint64_t v1028;
  uint64_t v1029;
  unint64_t *v1030;
  uint64_t v1031;
  uint64_t v1032;
  unint64_t *v1033;
  uint64_t v1034;
  uint64_t v1035;
  unint64_t *v1036;
  uint64_t v1037;
  uint64_t v1038;
  unint64_t *v1039;
  uint64_t v1040;
  uint64_t v1041;
  unint64_t *v1042;
  uint64_t v1043;
  uint64_t v1044;
  unint64_t *v1045;
  uint64_t v1046;
  uint64_t v1047;
  unint64_t *v1048;
  uint64_t v1049;
  uint64_t v1050;
  unint64_t *v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  unint64_t *v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  unint64_t *v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  unint64_t *v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  unint64_t *v1067;
  uint64_t v1068;
  uint64_t v1069;
  unint64_t *v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  unint64_t *v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  unint64_t *v1078;
  uint64_t v1079;
  uint64_t v1080;
  unint64_t *v1081;
  uint64_t v1082;
  uint64_t v1083;
  unint64_t *v1084;
  uint64_t v1085;
  int v1086;
  int v1087;
  int v1088;
  int v1089;
  uint64_t v1090;
  int v1091;
  int v1092;
  uint64_t v1093;
  int v1094;
  uint64_t v1095;
  uint64_t v1096;
  uint64_t v1097;
  int v1098;
  int v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  int v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  int v1113;
  int v1114;
  __int16 v1115;
  uint64_t (**v1116)();
  uint64_t v1117;
  std::__shared_weak_count *v1118;
  _BYTE *v1119;
  unsigned int v1120;
  int v1121;
  int v1122;
  unsigned int v1123;
  char v1124;
  char v1125;
  unsigned int v1126;
  int v1127;
  char v1128;
  char v1129;
  uint64_t v1130;

  switch(a1)
  {
    case 0:
      sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_21023DDB0);
      abort();
    case 1:
      v1116 = &off_24C9C05B0;
      sub_20FF68984(&v1117, a3);
      v4 = *a2;
      v5 = v1120;
      v6 = v1117;
      if (!v1117)
        goto LABEL_1462;
      v7 = v1118;
      if (v1118)
      {
        p_shared_owners = (unint64_t *)&v1118->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1117;
        v11 = v1118;
        if (v1118)
        {
          v12 = (unint64_t *)&v1118->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(&v1130, v6, 1);
      else
LABEL_1462:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1489;
      v877 = v1121;
      if (!v1121)
        goto LABEL_1489;
      v878 = v1123;
      v879 = v1119;
      if (v1124 && v1119)
      {
        v880 = v1117;
        v881 = v1118;
        if (v1118)
        {
          v882 = (unint64_t *)&v1118->__shared_owners_;
          do
            v883 = __ldxr(v882);
          while (__stxr(v883 + 1, v882));
          do
            v884 = __ldaxr(v882);
          while (__stlxr(v884 - 1, v882));
          if (!v884)
          {
            ((void (*)(std::__shared_weak_count *))v881->__on_zero_shared)(v881);
            std::__shared_weak_count::__release_weak(v881);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v880 + 88))(v880, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v879 = v1119;
      }
      v885 = v877 - 1;
      if (v877 == 1)
        goto LABEL_1482;
      if (!(_DWORD)v5)
        goto LABEL_1489;
      v886 = 0;
      do
      {
        if (!v879
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1999;
        }
        v887 = 0;
        v888 = *(_QWORD *)(v4 + 48);
        do
          sub_20E9ED7B4(v888, &v879[v887++]);
        while (v5 != v887);
        v879 += v878;
        ++v886;
      }
      while (v886 != v885);
LABEL_1482:
      if ((_DWORD)v5 && !v879)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1999:
          abort();
        }
        v879 = 0;
      }
      if ((_DWORD)v5)
      {
        v889 = *(_QWORD *)(v4 + 48);
        do
        {
          sub_20E9ED7B4(v889, v879++);
          --v5;
        }
        while (v5);
      }
LABEL_1489:
      v890 = v1130;
      v1130 = 0;
      if (v890)
        (*(void (**)(uint64_t))(*(_QWORD *)v890 + 8))(v890);
      v473 = v1118;
      if (!v1118)
        return;
      v891 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v891);
      while (__stlxr(v475 - 1, v891));
      goto LABEL_1975;
    case 2:
      v1116 = &off_24C9F0B30;
      sub_20FF68BA8(&v1117, a3);
      v320 = *a2;
      v1097 = v1120;
      v321 = v1117;
      if (!v1117)
        goto LABEL_1429;
      v322 = v1118;
      if (v1118)
      {
        v323 = (unint64_t *)&v1118->__shared_owners_;
        do
          v324 = __ldxr(v323);
        while (__stxr(v324 + 1, v323));
        do
          v325 = __ldaxr(v323);
        while (__stlxr(v325 - 1, v323));
        if (!v325)
        {
          ((void (*)(std::__shared_weak_count *))v322->__on_zero_shared)(v322);
          std::__shared_weak_count::__release_weak(v322);
        }
        v321 = v1117;
        v326 = v1118;
        if (v1118)
        {
          v327 = (unint64_t *)&v1118->__shared_owners_;
          do
            v328 = __ldxr(v327);
          while (__stxr(v328 + 1, v327));
          do
            v329 = __ldaxr(v327);
          while (__stlxr(v329 - 1, v327));
          if (!v329)
          {
            ((void (*)(std::__shared_weak_count *))v326->__on_zero_shared)(v326);
            std::__shared_weak_count::__release_weak(v326);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v321 + 96))(&v1130, v321, 1);
      else
LABEL_1429:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1456;
      v861 = v1121;
      if (!v1121)
        goto LABEL_1456;
      v862 = v1123;
      v863 = v1119;
      if (v1124 && v1119)
      {
        v864 = v1117;
        v865 = v1118;
        if (v1118)
        {
          v866 = (unint64_t *)&v1118->__shared_owners_;
          do
            v867 = __ldxr(v866);
          while (__stxr(v867 + 1, v866));
          do
            v868 = __ldaxr(v866);
          while (__stlxr(v868 - 1, v866));
          if (!v868)
          {
            ((void (*)(std::__shared_weak_count *))v865->__on_zero_shared)(v865);
            std::__shared_weak_count::__release_weak(v865);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v864 + 88))(v864, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v863 = v1119;
      }
      if (v861 == 1)
        goto LABEL_1449;
      if (!(_DWORD)v1097)
        goto LABEL_1456;
      v869 = 0;
      v870 = 2 * v862;
      do
      {
        if (!v863
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1998;
        }
        v871 = 0;
        v872 = *(_QWORD *)(v320 + 48);
        do
          sub_20E9ED948(v872, &v863[v871++]);
        while (v1097 != v871);
        v863 = (_WORD *)((char *)v863 + v870);
        ++v869;
      }
      while (v869 != v861 - 1);
LABEL_1449:
      if ((_DWORD)v1097 && !v863)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1998:
          abort();
        }
        v863 = 0;
      }
      if ((_DWORD)v1097)
      {
        v873 = *(_QWORD *)(v320 + 48);
        v874 = 2 * v1097;
        do
        {
          sub_20E9ED948(v873, v863++);
          v874 -= 2;
        }
        while (v874);
      }
LABEL_1456:
      v875 = v1130;
      v1130 = 0;
      if (v875)
        (*(void (**)(uint64_t))(*(_QWORD *)v875 + 8))(v875);
      v473 = v1118;
      if (!v1118)
        return;
      v876 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v876);
      while (__stlxr(v475 - 1, v876));
      goto LABEL_1975;
    case 3:
      v1116 = &off_24C9C07A0;
      sub_20FF68DCC(&v1117, a3);
      v310 = *a2;
      v1096 = v1120;
      v311 = v1117;
      if (!v1117)
        goto LABEL_1405;
      v312 = v1118;
      if (v1118)
      {
        v313 = (unint64_t *)&v1118->__shared_owners_;
        do
          v314 = __ldxr(v313);
        while (__stxr(v314 + 1, v313));
        do
          v315 = __ldaxr(v313);
        while (__stlxr(v315 - 1, v313));
        if (!v315)
        {
          ((void (*)(std::__shared_weak_count *))v312->__on_zero_shared)(v312);
          std::__shared_weak_count::__release_weak(v312);
        }
        v311 = v1117;
        v316 = v1118;
        if (v1118)
        {
          v317 = (unint64_t *)&v1118->__shared_owners_;
          do
            v318 = __ldxr(v317);
          while (__stxr(v318 + 1, v317));
          do
            v319 = __ldaxr(v317);
          while (__stlxr(v319 - 1, v317));
          if (!v319)
          {
            ((void (*)(std::__shared_weak_count *))v316->__on_zero_shared)(v316);
            std::__shared_weak_count::__release_weak(v316);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v311 + 96))(&v1130, v311, 1);
      else
LABEL_1405:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1817;
      v851 = v1121;
      if (!v1121)
        goto LABEL_1817;
      v852 = v1123;
      v853 = v1119;
      if (v1124 && v1119)
      {
        v854 = v1117;
        v855 = v1118;
        if (v1118)
        {
          v856 = (unint64_t *)&v1118->__shared_owners_;
          do
            v857 = __ldxr(v856);
          while (__stxr(v857 + 1, v856));
          do
            v858 = __ldaxr(v856);
          while (__stlxr(v858 - 1, v856));
          if (!v858)
          {
            ((void (*)(std::__shared_weak_count *))v855->__on_zero_shared)(v855);
            std::__shared_weak_count::__release_weak(v855);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v854 + 88))(v854, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v853 = v1119;
      }
      if (v851 == 1)
        goto LABEL_1425;
      if (!(_DWORD)v1096)
        goto LABEL_1817;
      v859 = 0;
      do
      {
        if (!v853
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1428;
        }
        for (i = 0; i != v1096; ++i)
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v310 + 48), &v1115);
          v853[i] = v1115;
        }
        v853 += v852;
        ++v859;
      }
      while (v859 != v851 - 1);
LABEL_1425:
      if (!(_DWORD)v1096 || v853)
      {
        if (!(_DWORD)v1096)
          goto LABEL_1817;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1428:
        abort();
      }
      v1040 = 2 * v1096;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v310 + 48), &v1115);
        *v853++ = v1115;
        v1040 -= 2;
      }
      while (v1040);
LABEL_1817:
      v1041 = v1130;
      v1130 = 0;
      if (v1041)
        (*(void (**)(uint64_t))(*(_QWORD *)v1041 + 8))(v1041);
      v473 = v1118;
      if (!v1118)
        return;
      v1042 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1042);
      while (__stlxr(v475 - 1, v1042));
      goto LABEL_1975;
    case 4:
      v1116 = &off_24C9AD6F0;
      sub_20FF69410(&v1117, a3);
      v190 = *a2;
      v1095 = v1120;
      v191 = v1117;
      if (!v1117)
        goto LABEL_1053;
      v192 = v1118;
      if (v1118)
      {
        v193 = (unint64_t *)&v1118->__shared_owners_;
        do
          v194 = __ldxr(v193);
        while (__stxr(v194 + 1, v193));
        do
          v195 = __ldaxr(v193);
        while (__stlxr(v195 - 1, v193));
        if (!v195)
        {
          ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
          std::__shared_weak_count::__release_weak(v192);
        }
        v191 = v1117;
        v196 = v1118;
        if (v1118)
        {
          v197 = (unint64_t *)&v1118->__shared_owners_;
          do
            v198 = __ldxr(v197);
          while (__stxr(v198 + 1, v197));
          do
            v199 = __ldaxr(v197);
          while (__stlxr(v199 - 1, v197));
          if (!v199)
          {
            ((void (*)(std::__shared_weak_count *))v196->__on_zero_shared)(v196);
            std::__shared_weak_count::__release_weak(v196);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v191 + 96))(&v1130, v191, 1);
      else
LABEL_1053:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1080;
      v663 = v1121;
      if (!v1121)
        goto LABEL_1080;
      v664 = v1123;
      v665 = (float *)v1119;
      if (v1124 && v1119)
      {
        v666 = v1117;
        v667 = v1118;
        if (v1118)
        {
          v668 = (unint64_t *)&v1118->__shared_owners_;
          do
            v669 = __ldxr(v668);
          while (__stxr(v669 + 1, v668));
          do
            v670 = __ldaxr(v668);
          while (__stlxr(v670 - 1, v668));
          if (!v670)
          {
            ((void (*)(std::__shared_weak_count *))v667->__on_zero_shared)(v667);
            std::__shared_weak_count::__release_weak(v667);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v666 + 88))(v666, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v665 = (float *)v1119;
      }
      if (v663 == 1)
        goto LABEL_1073;
      if (!(_DWORD)v1095)
        goto LABEL_1080;
      v671 = 0;
      v672 = 4 * v664;
      do
      {
        if (!v665
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1989;
        }
        v673 = 0;
        v674 = *(_QWORD *)(v190 + 48);
        do
          sub_20E9EDF48(v674, &v665[v673++]);
        while (v1095 != v673);
        v665 = (float *)((char *)v665 + v672);
        ++v671;
      }
      while (v671 != v663 - 1);
LABEL_1073:
      if ((_DWORD)v1095 && !v665)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1989:
          abort();
        }
        v665 = 0;
      }
      if ((_DWORD)v1095)
      {
        v675 = *(_QWORD *)(v190 + 48);
        v676 = 4 * v1095;
        do
        {
          sub_20E9EDF48(v675, v665++);
          v676 -= 4;
        }
        while (v676);
      }
LABEL_1080:
      v677 = v1130;
      v1130 = 0;
      if (v677)
        (*(void (**)(uint64_t))(*(_QWORD *)v677 + 8))(v677);
      v473 = v1118;
      if (!v1118)
        return;
      v678 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v678);
      while (__stlxr(v475 - 1, v678));
      goto LABEL_1975;
    case 5:
      v1116 = &off_24C9C06A8;
      sub_20FF69634((std::string::size_type *)&v1117, a3);
      v277 = *a2;
      v278 = v1127;
      v279 = v1117;
      if (!v1117)
        goto LABEL_1303;
      v280 = v1118;
      if (v1118)
      {
        v281 = (unint64_t *)&v1118->__shared_owners_;
        do
          v282 = __ldxr(v281);
        while (__stxr(v282 + 1, v281));
        do
          v283 = __ldaxr(v281);
        while (__stlxr(v283 - 1, v281));
        if (!v283)
        {
          ((void (*)(std::__shared_weak_count *))v280->__on_zero_shared)(v280);
          std::__shared_weak_count::__release_weak(v280);
        }
        v279 = v1117;
        v284 = v1118;
        if (v1118)
        {
          v285 = (unint64_t *)&v1118->__shared_owners_;
          do
            v286 = __ldxr(v285);
          while (__stxr(v286 + 1, v285));
          do
            v287 = __ldaxr(v285);
          while (__stlxr(v287 - 1, v285));
          if (!v287)
          {
            ((void (*)(std::__shared_weak_count *))v284->__on_zero_shared)(v284);
            std::__shared_weak_count::__release_weak(v284);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v279 + 96))(&v1130, v279, 1);
      else
LABEL_1303:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1331;
      if (!v1121)
        goto LABEL_1331;
      v798 = v1122;
      if (!v1122)
        goto LABEL_1331;
      v799 = v1126;
      v800 = v1119;
      if (v1128 && v1119)
      {
        v801 = v1117;
        v802 = v1118;
        if (v1118)
        {
          v803 = (unint64_t *)&v1118->__shared_owners_;
          do
            v804 = __ldxr(v803);
          while (__stxr(v804 + 1, v803));
          do
            v805 = __ldaxr(v803);
          while (__stlxr(v805 - 1, v803));
          if (!v805)
          {
            ((void (*)(std::__shared_weak_count *))v802->__on_zero_shared)(v802);
            std::__shared_weak_count::__release_weak(v802);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v801 + 88))(v801, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v800 = v1119;
      }
      v806 = (2 * v278);
      if (v798 == 1)
        goto LABEL_1324;
      if (!(_DWORD)v806)
        goto LABEL_1331;
      v807 = 0;
      do
      {
        if (!v800
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1995;
        }
        v808 = 0;
        v809 = *(_QWORD *)(v277 + 48);
        do
          sub_20E9ED7B4(v809, &v800[v808++]);
        while (v806 != v808);
        v800 += v799;
        ++v807;
      }
      while (v807 != v798 - 1);
LABEL_1324:
      if ((_DWORD)v806 && !v800)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1995:
          abort();
        }
        v800 = 0;
      }
      if ((_DWORD)v806)
      {
        v810 = *(_QWORD *)(v277 + 48);
        do
        {
          sub_20E9ED7B4(v810, v800++);
          --v806;
        }
        while (v806);
      }
LABEL_1331:
      v811 = v1130;
      v1130 = 0;
      if (v811)
        (*(void (**)(uint64_t))(*(_QWORD *)v811 + 8))(v811);
      v473 = v1118;
      if (!v1118)
        return;
      v812 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v812);
      while (__stlxr(v475 - 1, v812));
      goto LABEL_1975;
    case 6:
      v1116 = &off_24CA11908;
      sub_20FF69C90((std::string::size_type *)&v1117, a3);
      v179 = *a2;
      v180 = v1127;
      v181 = v1117;
      if (!v1117)
        goto LABEL_1019;
      v182 = v1118;
      if (v1118)
      {
        v183 = (unint64_t *)&v1118->__shared_owners_;
        do
          v184 = __ldxr(v183);
        while (__stxr(v184 + 1, v183));
        do
          v185 = __ldaxr(v183);
        while (__stlxr(v185 - 1, v183));
        if (!v185)
        {
          ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
          std::__shared_weak_count::__release_weak(v182);
        }
        v181 = v1117;
        v186 = v1118;
        if (v1118)
        {
          v187 = (unint64_t *)&v1118->__shared_owners_;
          do
            v188 = __ldxr(v187);
          while (__stxr(v188 + 1, v187));
          do
            v189 = __ldaxr(v187);
          while (__stlxr(v189 - 1, v187));
          if (!v189)
          {
            ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
            std::__shared_weak_count::__release_weak(v186);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v181 + 96))(&v1130, v181, 1);
      else
LABEL_1019:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1047;
      if (!v1121)
        goto LABEL_1047;
      v644 = v1122;
      if (!v1122)
        goto LABEL_1047;
      v645 = v1126;
      v646 = v1119;
      if (v1128 && v1119)
      {
        v647 = v1117;
        v648 = v1118;
        if (v1118)
        {
          v649 = (unint64_t *)&v1118->__shared_owners_;
          do
            v650 = __ldxr(v649);
          while (__stxr(v650 + 1, v649));
          do
            v651 = __ldaxr(v649);
          while (__stlxr(v651 - 1, v649));
          if (!v651)
          {
            ((void (*)(std::__shared_weak_count *))v648->__on_zero_shared)(v648);
            std::__shared_weak_count::__release_weak(v648);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v647 + 88))(v647, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v646 = v1119;
      }
      v652 = (2 * v180);
      if (v644 == 1)
        goto LABEL_1040;
      if (!(_DWORD)v652)
        goto LABEL_1047;
      v653 = 0;
      v654 = 2 * v645;
      v655 = 2 * v652;
      do
      {
        if (!v646
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1984;
        }
        v656 = v652;
        v657 = 0;
        v658 = *(_QWORD *)(v179 + 48);
        do
        {
          sub_20E9ED948(v658, &v646[v657 / 2]);
          v657 += 2;
        }
        while (v655 != v657);
        v646 = (_WORD *)((char *)v646 + v654);
        ++v653;
        v652 = v656;
      }
      while (v653 != v644 - 1);
LABEL_1040:
      if ((_DWORD)v652 && !v646)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1984:
          abort();
        }
        v646 = 0;
      }
      if ((_DWORD)v652)
      {
        v659 = *(_QWORD *)(v179 + 48);
        v660 = 2 * v652;
        do
        {
          sub_20E9ED948(v659, v646++);
          v660 -= 2;
        }
        while (v660);
      }
LABEL_1047:
      v661 = v1130;
      v1130 = 0;
      if (v661)
        (*(void (**)(uint64_t))(*(_QWORD *)v661 + 8))(v661);
      v473 = v1118;
      if (!v1118)
        return;
      v662 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v662);
      while (__stlxr(v475 - 1, v662));
      goto LABEL_1975;
    case 7:
      v1116 = &off_24CA11A00;
      sub_20FF6A4F8((std::string::size_type *)&v1117, a3);
      v124 = *a2;
      v125 = v1127;
      v126 = v1117;
      if (!v1117)
        goto LABEL_888;
      v127 = v1118;
      if (v1118)
      {
        v128 = (unint64_t *)&v1118->__shared_owners_;
        do
          v129 = __ldxr(v128);
        while (__stxr(v129 + 1, v128));
        do
          v130 = __ldaxr(v128);
        while (__stlxr(v130 - 1, v128));
        if (!v130)
        {
          ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
          std::__shared_weak_count::__release_weak(v127);
        }
        v126 = v1117;
        v131 = v1118;
        if (v1118)
        {
          v132 = (unint64_t *)&v1118->__shared_owners_;
          do
            v133 = __ldxr(v132);
          while (__stxr(v133 + 1, v132));
          do
            v134 = __ldaxr(v132);
          while (__stlxr(v134 - 1, v132));
          if (!v134)
          {
            ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
            std::__shared_weak_count::__release_weak(v131);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v126 + 96))(&v1130, v126, 1);
      else
LABEL_888:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1781;
      if (!v1121)
        goto LABEL_1781;
      v580 = v1122;
      if (!v1122)
        goto LABEL_1781;
      v581 = v1126;
      v582 = v1119;
      if (v1128 && v1119)
      {
        v583 = v1117;
        v584 = v1118;
        if (v1118)
        {
          v585 = (unint64_t *)&v1118->__shared_owners_;
          do
            v586 = __ldxr(v585);
          while (__stxr(v586 + 1, v585));
          do
            v587 = __ldaxr(v585);
          while (__stlxr(v587 - 1, v585));
          if (!v587)
          {
            ((void (*)(std::__shared_weak_count *))v584->__on_zero_shared)(v584);
            std::__shared_weak_count::__release_weak(v584);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v583 + 88))(v583, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v582 = v1119;
      }
      v588 = v580 - 1;
      v1104 = (2 * v125);
      if (!v588)
        goto LABEL_909;
      if (!(2 * v125))
        goto LABEL_1781;
      for (j = 0; j != v588; ++j)
      {
        if (!v582
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_912;
        }
        v590 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v124 + 48), &v1115);
          v582[v590++] = v1115;
        }
        while (v1104 != v590);
        v582 += v581;
      }
LABEL_909:
      if (!(_DWORD)v1104 || v582)
      {
        if (!(_DWORD)v1104)
          goto LABEL_1781;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_912:
        abort();
      }
      v1028 = 2 * v1104;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v124 + 48), &v1115);
        *v582++ = v1115;
        v1028 -= 2;
      }
      while (v1028);
LABEL_1781:
      v1029 = v1130;
      v1130 = 0;
      if (v1029)
        (*(void (**)(uint64_t))(*(_QWORD *)v1029 + 8))(v1029);
      v473 = v1118;
      if (!v1118)
        return;
      v1030 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1030);
      while (__stlxr(v475 - 1, v1030));
      goto LABEL_1975;
    case 8:
      v1116 = &off_24CA11AF8;
      sub_20FF6AD60((std::string::size_type *)&v1117, a3);
      v299 = *a2;
      v300 = v1127;
      v301 = v1117;
      if (!v1117)
        goto LABEL_1371;
      v302 = v1118;
      if (v1118)
      {
        v303 = (unint64_t *)&v1118->__shared_owners_;
        do
          v304 = __ldxr(v303);
        while (__stxr(v304 + 1, v303));
        do
          v305 = __ldaxr(v303);
        while (__stlxr(v305 - 1, v303));
        if (!v305)
        {
          ((void (*)(std::__shared_weak_count *))v302->__on_zero_shared)(v302);
          std::__shared_weak_count::__release_weak(v302);
        }
        v301 = v1117;
        v306 = v1118;
        if (v1118)
        {
          v307 = (unint64_t *)&v1118->__shared_owners_;
          do
            v308 = __ldxr(v307);
          while (__stxr(v308 + 1, v307));
          do
            v309 = __ldaxr(v307);
          while (__stlxr(v309 - 1, v307));
          if (!v309)
          {
            ((void (*)(std::__shared_weak_count *))v306->__on_zero_shared)(v306);
            std::__shared_weak_count::__release_weak(v306);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v301 + 96))(&v1130, v301, 1);
      else
LABEL_1371:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1399;
      if (!v1121)
        goto LABEL_1399;
      v832 = v1122;
      if (!v1122)
        goto LABEL_1399;
      v833 = v1126;
      v834 = (float *)v1119;
      if (v1128 && v1119)
      {
        v835 = v1117;
        v836 = v1118;
        if (v1118)
        {
          v837 = (unint64_t *)&v1118->__shared_owners_;
          do
            v838 = __ldxr(v837);
          while (__stxr(v838 + 1, v837));
          do
            v839 = __ldaxr(v837);
          while (__stlxr(v839 - 1, v837));
          if (!v839)
          {
            ((void (*)(std::__shared_weak_count *))v836->__on_zero_shared)(v836);
            std::__shared_weak_count::__release_weak(v836);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v835 + 88))(v835, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v834 = (float *)v1119;
      }
      v840 = (2 * v300);
      if (v832 == 1)
        goto LABEL_1392;
      if (!(_DWORD)v840)
        goto LABEL_1399;
      v841 = 0;
      v842 = 4 * v833;
      v843 = 4 * v840;
      do
      {
        if (!v834
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1997;
        }
        v844 = v840;
        v845 = 0;
        v846 = *(_QWORD *)(v299 + 48);
        do
        {
          sub_20E9EDF48(v846, &v834[v845 / 4]);
          v845 += 4;
        }
        while (v843 != v845);
        v834 = (float *)((char *)v834 + v842);
        ++v841;
        v840 = v844;
      }
      while (v841 != v832 - 1);
LABEL_1392:
      if ((_DWORD)v840 && !v834)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1997:
          abort();
        }
        v834 = 0;
      }
      if ((_DWORD)v840)
      {
        v847 = *(_QWORD *)(v299 + 48);
        v848 = 4 * v840;
        do
        {
          sub_20E9EDF48(v847, v834++);
          v848 -= 4;
        }
        while (v848);
      }
LABEL_1399:
      v849 = v1130;
      v1130 = 0;
      if (v849)
        (*(void (**)(uint64_t))(*(_QWORD *)v849 + 8))(v849);
      v473 = v1118;
      if (!v1118)
        return;
      v850 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v850);
      while (__stlxr(v475 - 1, v850));
      goto LABEL_1975;
    case 9:
      v1116 = &off_24CA11BF0;
      sub_20FF6B5C8((std::string::size_type *)&v1117, a3);
      v266 = *a2;
      v267 = v1127;
      v268 = v1117;
      if (!v1117)
        goto LABEL_1281;
      v269 = v1118;
      if (v1118)
      {
        v270 = (unint64_t *)&v1118->__shared_owners_;
        do
          v271 = __ldxr(v270);
        while (__stxr(v271 + 1, v270));
        do
          v272 = __ldaxr(v270);
        while (__stlxr(v272 - 1, v270));
        if (!v272)
        {
          ((void (*)(std::__shared_weak_count *))v269->__on_zero_shared)(v269);
          std::__shared_weak_count::__release_weak(v269);
        }
        v268 = v1117;
        v273 = v1118;
        if (v1118)
        {
          v274 = (unint64_t *)&v1118->__shared_owners_;
          do
            v275 = __ldxr(v274);
          while (__stxr(v275 + 1, v274));
          do
            v276 = __ldaxr(v274);
          while (__stlxr(v276 - 1, v274));
          if (!v276)
          {
            ((void (*)(std::__shared_weak_count *))v273->__on_zero_shared)(v273);
            std::__shared_weak_count::__release_weak(v273);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v268 + 96))(&v1130, v268, 1);
      else
LABEL_1281:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1914;
      if (!v1121)
        goto LABEL_1914;
      v785 = v1122;
      if (!v1122)
        goto LABEL_1914;
      v786 = v1126;
      v787 = v1119;
      if (v1128 && v1119)
      {
        v788 = v1117;
        v789 = v1118;
        if (v1118)
        {
          v790 = (unint64_t *)&v1118->__shared_owners_;
          do
            v791 = __ldxr(v790);
          while (__stxr(v791 + 1, v790));
          do
            v792 = __ldaxr(v790);
          while (__stlxr(v792 - 1, v790));
          if (!v792)
          {
            ((void (*)(std::__shared_weak_count *))v789->__on_zero_shared)(v789);
            std::__shared_weak_count::__release_weak(v789);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v788 + 88))(v788, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v787 = v1119;
      }
      v793 = (3 * v267);
      v794 = v785 - 1;
      if (v785 == 1)
      {
        v1109 = v267;
LABEL_1907:
        if (v1109 && !v787)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2000;
          }
          v787 = 0;
        }
        if (v1109)
        {
          v1068 = *(_QWORD *)(v266 + 48);
          do
          {
            sub_20E9ED7B4(v1068, v787++);
            --v793;
          }
          while (v793);
        }
      }
      else if (v267)
      {
        v1109 = v267;
        v795 = 0;
        while (v787
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v796 = 0;
          v797 = *(_QWORD *)(v266 + 48);
          do
            sub_20E9ED7B4(v797, &v787[v796++]);
          while (v793 != v796);
          v787 += v786;
          if (++v795 == v794)
            goto LABEL_1907;
        }
LABEL_2000:
        abort();
      }
LABEL_1914:
      v1069 = v1130;
      v1130 = 0;
      if (v1069)
        (*(void (**)(uint64_t))(*(_QWORD *)v1069 + 8))(v1069);
      v473 = v1118;
      if (!v1118)
        return;
      v1070 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1070);
      while (__stlxr(v475 - 1, v1070));
      goto LABEL_1975;
    case 10:
      v1116 = &off_24CA11CE8;
      sub_20FF6BE2C((std::string::size_type *)&v1117, a3);
      v351 = *a2;
      v352 = v1127;
      v353 = v1117;
      if (!v1117)
        goto LABEL_1554;
      v354 = v1118;
      if (v1118)
      {
        v355 = (unint64_t *)&v1118->__shared_owners_;
        do
          v356 = __ldxr(v355);
        while (__stxr(v356 + 1, v355));
        do
          v357 = __ldaxr(v355);
        while (__stlxr(v357 - 1, v355));
        if (!v357)
        {
          ((void (*)(std::__shared_weak_count *))v354->__on_zero_shared)(v354);
          std::__shared_weak_count::__release_weak(v354);
        }
        v353 = v1117;
        v358 = v1118;
        if (v1118)
        {
          v359 = (unint64_t *)&v1118->__shared_owners_;
          do
            v360 = __ldxr(v359);
          while (__stxr(v360 + 1, v359));
          do
            v361 = __ldaxr(v359);
          while (__stlxr(v361 - 1, v359));
          if (!v361)
          {
            ((void (*)(std::__shared_weak_count *))v358->__on_zero_shared)(v358);
            std::__shared_weak_count::__release_weak(v358);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v353 + 96))(&v1130, v353, 1);
      else
LABEL_1554:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1928;
      if (!v1121)
        goto LABEL_1928;
      v917 = v1122;
      if (!v1122)
        goto LABEL_1928;
      v918 = v1126;
      v919 = v1119;
      if (v1128 && v1119)
      {
        v920 = v1117;
        v921 = v1118;
        if (v1118)
        {
          v922 = (unint64_t *)&v1118->__shared_owners_;
          do
            v923 = __ldxr(v922);
          while (__stxr(v923 + 1, v922));
          do
            v924 = __ldaxr(v922);
          while (__stlxr(v924 - 1, v922));
          if (!v924)
          {
            ((void (*)(std::__shared_weak_count *))v921->__on_zero_shared)(v921);
            std::__shared_weak_count::__release_weak(v921);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v920 + 88))(v920, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v919 = v1119;
      }
      v1110 = (3 * v352);
      if (v917 == 1)
      {
        v1091 = v352;
LABEL_1921:
        if (v1091 && !v919)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2004;
          }
          v919 = 0;
        }
        if (v1091)
        {
          v1071 = *(_QWORD *)(v351 + 48);
          v1072 = 2 * v1110;
          do
          {
            sub_20E9ED948(v1071, v919++);
            v1072 -= 2;
          }
          while (v1072);
        }
      }
      else if (v352)
      {
        v1091 = v352;
        v925 = 0;
        v926 = 2 * v918;
        while (v919
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v927 = 0;
          v928 = *(_QWORD *)(v351 + 48);
          do
            sub_20E9ED948(v928, &v919[v927++]);
          while (v1110 != v927);
          v919 = (_WORD *)((char *)v919 + v926);
          if (++v925 == v917 - 1)
            goto LABEL_1921;
        }
LABEL_2004:
        abort();
      }
LABEL_1928:
      v1073 = v1130;
      v1130 = 0;
      if (v1073)
        (*(void (**)(uint64_t))(*(_QWORD *)v1073 + 8))(v1073);
      v473 = v1118;
      if (!v1118)
        return;
      v1074 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1074);
      while (__stlxr(v475 - 1, v1074));
      goto LABEL_1975;
    case 11:
      v1116 = &off_24CA11DE0;
      sub_20FF6C694((std::string::size_type *)&v1117, a3);
      v341 = *a2;
      v1098 = v1127;
      v342 = v1117;
      if (!v1117)
        goto LABEL_1529;
      v343 = v1118;
      if (v1118)
      {
        v344 = (unint64_t *)&v1118->__shared_owners_;
        do
          v345 = __ldxr(v344);
        while (__stxr(v345 + 1, v344));
        do
          v346 = __ldaxr(v344);
        while (__stlxr(v346 - 1, v344));
        if (!v346)
        {
          ((void (*)(std::__shared_weak_count *))v343->__on_zero_shared)(v343);
          std::__shared_weak_count::__release_weak(v343);
        }
        v342 = v1117;
        v347 = v1118;
        if (v1118)
        {
          v348 = (unint64_t *)&v1118->__shared_owners_;
          do
            v349 = __ldxr(v348);
          while (__stxr(v349 + 1, v348));
          do
            v350 = __ldaxr(v348);
          while (__stlxr(v350 - 1, v348));
          if (!v350)
          {
            ((void (*)(std::__shared_weak_count *))v347->__on_zero_shared)(v347);
            std::__shared_weak_count::__release_weak(v347);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v342 + 96))(&v1130, v342, 1);
      else
LABEL_1529:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1826;
      if (!v1121)
        goto LABEL_1826;
      v907 = v1122;
      if (!v1122)
        goto LABEL_1826;
      v908 = v1126;
      v909 = v1119;
      if (v1128 && v1119)
      {
        v910 = v1117;
        v911 = v1118;
        if (v1118)
        {
          v912 = (unint64_t *)&v1118->__shared_owners_;
          do
            v913 = __ldxr(v912);
          while (__stxr(v913 + 1, v912));
          do
            v914 = __ldaxr(v912);
          while (__stlxr(v914 - 1, v912));
          if (!v914)
          {
            ((void (*)(std::__shared_weak_count *))v911->__on_zero_shared)(v911);
            std::__shared_weak_count::__release_weak(v911);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v910 + 88))(v910, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v909 = v1119;
      }
      v1090 = (3 * v1098);
      if (v907 == 1)
        goto LABEL_1550;
      if (!v1098)
        goto LABEL_1826;
      v915 = 0;
      do
      {
        if (!v909
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1553;
        }
        v916 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v341 + 48), &v1115);
          v909[v916++] = v1115;
        }
        while (v1090 != v916);
        v909 += v908;
        ++v915;
      }
      while (v915 != v907 - 1);
LABEL_1550:
      if (!v1098 || v909)
      {
        if (!v1098)
          goto LABEL_1826;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1553:
        abort();
      }
      v1043 = 2 * v1090;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v341 + 48), &v1115);
        *v909++ = v1115;
        v1043 -= 2;
      }
      while (v1043);
LABEL_1826:
      v1044 = v1130;
      v1130 = 0;
      if (v1044)
        (*(void (**)(uint64_t))(*(_QWORD *)v1044 + 8))(v1044);
      v473 = v1118;
      if (!v1118)
        return;
      v1045 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1045);
      while (__stlxr(v475 - 1, v1045));
      goto LABEL_1975;
    case 12:
      v1116 = &off_24CA11ED8;
      sub_20FF6CEFC((std::string::size_type *)&v1117, a3);
      v47 = *a2;
      v48 = v1127;
      v49 = v1117;
      if (!v1117)
        goto LABEL_686;
      v50 = v1118;
      if (v1118)
      {
        v51 = (unint64_t *)&v1118->__shared_owners_;
        do
          v52 = __ldxr(v51);
        while (__stxr(v52 + 1, v51));
        do
          v53 = __ldaxr(v51);
        while (__stlxr(v53 - 1, v51));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
        v49 = v1117;
        v54 = v1118;
        if (v1118)
        {
          v55 = (unint64_t *)&v1118->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v49 + 96))(&v1130, v49, 1);
      else
LABEL_686:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1858;
      if (!v1121)
        goto LABEL_1858;
      v476 = v1122;
      if (!v1122)
        goto LABEL_1858;
      v477 = v1126;
      v478 = (float *)v1119;
      if (v1128 && v1119)
      {
        v479 = v1117;
        v480 = v1118;
        if (v1118)
        {
          v481 = (unint64_t *)&v1118->__shared_owners_;
          do
            v482 = __ldxr(v481);
          while (__stxr(v482 + 1, v481));
          do
            v483 = __ldaxr(v481);
          while (__stlxr(v483 - 1, v481));
          if (!v483)
          {
            ((void (*)(std::__shared_weak_count *))v480->__on_zero_shared)(v480);
            std::__shared_weak_count::__release_weak(v480);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v479 + 88))(v479, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v478 = (float *)v1119;
      }
      v1101 = (3 * v48);
      if (v476 == 1)
      {
        v1086 = v48;
LABEL_1851:
        if (v1086 && !v478)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1985;
          }
          v478 = 0;
        }
        if (v1086)
        {
          v1052 = *(_QWORD *)(v47 + 48);
          v1053 = 4 * v1101;
          do
          {
            sub_20E9EDF48(v1052, v478++);
            v1053 -= 4;
          }
          while (v1053);
        }
      }
      else if (v48)
      {
        v1086 = v48;
        v484 = 0;
        v485 = 4 * v477;
        while (v478
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v486 = 0;
          v487 = *(_QWORD *)(v47 + 48);
          do
            sub_20E9EDF48(v487, &v478[v486++]);
          while (v1101 != v486);
          v478 = (float *)((char *)v478 + v485);
          if (++v484 == v476 - 1)
            goto LABEL_1851;
        }
LABEL_1985:
        abort();
      }
LABEL_1858:
      v1054 = v1130;
      v1130 = 0;
      if (v1054)
        (*(void (**)(uint64_t))(*(_QWORD *)v1054 + 8))(v1054);
      v473 = v1118;
      if (!v1118)
        return;
      v1055 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1055);
      while (__stlxr(v475 - 1, v1055));
      goto LABEL_1975;
    case 13:
      v1116 = &off_24CA11FD0;
      sub_20FF6D764((std::string::size_type *)&v1117, a3);
      v91 = *a2;
      v92 = v1127;
      v93 = v1117;
      if (!v1117)
        goto LABEL_798;
      v94 = v1118;
      if (v1118)
      {
        v95 = (unint64_t *)&v1118->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
          std::__shared_weak_count::__release_weak(v94);
        }
        v93 = v1117;
        v98 = v1118;
        if (v1118)
        {
          v99 = (unint64_t *)&v1118->__shared_owners_;
          do
            v100 = __ldxr(v99);
          while (__stxr(v100 + 1, v99));
          do
            v101 = __ldaxr(v99);
          while (__stlxr(v101 - 1, v99));
          if (!v101)
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v93 + 96))(&v1130, v93, 1);
      else
LABEL_798:
        v1130 = 0;
      if (!v1120)
        goto LABEL_826;
      if (!v1121)
        goto LABEL_826;
      v534 = v1122;
      if (!v1122)
        goto LABEL_826;
      v535 = v1126;
      v536 = v1119;
      if (v1128 && v1119)
      {
        v537 = v1117;
        v538 = v1118;
        if (v1118)
        {
          v539 = (unint64_t *)&v1118->__shared_owners_;
          do
            v540 = __ldxr(v539);
          while (__stxr(v540 + 1, v539));
          do
            v541 = __ldaxr(v539);
          while (__stlxr(v541 - 1, v539));
          if (!v541)
          {
            ((void (*)(std::__shared_weak_count *))v538->__on_zero_shared)(v538);
            std::__shared_weak_count::__release_weak(v538);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v537 + 88))(v537, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v536 = v1119;
      }
      v542 = (4 * v92);
      if (v534 == 1)
        goto LABEL_819;
      if (!(_DWORD)v542)
        goto LABEL_826;
      v543 = 0;
      do
      {
        if (!v536
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1981;
        }
        v544 = 0;
        v545 = *(_QWORD *)(v91 + 48);
        do
          sub_20E9ED7B4(v545, &v536[v544++]);
        while (v542 != v544);
        v536 += v535;
        ++v543;
      }
      while (v543 != v534 - 1);
LABEL_819:
      if ((_DWORD)v542 && !v536)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1981:
          abort();
        }
        v536 = 0;
      }
      if ((_DWORD)v542)
      {
        v546 = *(_QWORD *)(v91 + 48);
        do
        {
          sub_20E9ED7B4(v546, v536++);
          --v542;
        }
        while (v542);
      }
LABEL_826:
      v547 = v1130;
      v1130 = 0;
      if (v547)
        (*(void (**)(uint64_t))(*(_QWORD *)v547 + 8))(v547);
      v473 = v1118;
      if (!v1118)
        return;
      v548 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v548);
      while (__stlxr(v475 - 1, v548));
      goto LABEL_1975;
    case 14:
      v1116 = &off_24CA120C8;
      sub_20FF6DFC8((std::string::size_type *)&v1117, a3);
      v80 = *a2;
      v81 = v1127;
      v82 = v1117;
      if (!v1117)
        goto LABEL_764;
      v83 = v1118;
      if (v1118)
      {
        v84 = (unint64_t *)&v1118->__shared_owners_;
        do
          v85 = __ldxr(v84);
        while (__stxr(v85 + 1, v84));
        do
          v86 = __ldaxr(v84);
        while (__stlxr(v86 - 1, v84));
        if (!v86)
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
        v82 = v1117;
        v87 = v1118;
        if (v1118)
        {
          v88 = (unint64_t *)&v1118->__shared_owners_;
          do
            v89 = __ldxr(v88);
          while (__stxr(v89 + 1, v88));
          do
            v90 = __ldaxr(v88);
          while (__stlxr(v90 - 1, v88));
          if (!v90)
          {
            ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
            std::__shared_weak_count::__release_weak(v87);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v82 + 96))(&v1130, v82, 1);
      else
LABEL_764:
        v1130 = 0;
      if (!v1120)
        goto LABEL_792;
      if (!v1121)
        goto LABEL_792;
      v515 = v1122;
      if (!v1122)
        goto LABEL_792;
      v516 = v1126;
      v517 = v1119;
      if (v1128 && v1119)
      {
        v518 = v1117;
        v519 = v1118;
        if (v1118)
        {
          v520 = (unint64_t *)&v1118->__shared_owners_;
          do
            v521 = __ldxr(v520);
          while (__stxr(v521 + 1, v520));
          do
            v522 = __ldaxr(v520);
          while (__stlxr(v522 - 1, v520));
          if (!v522)
          {
            ((void (*)(std::__shared_weak_count *))v519->__on_zero_shared)(v519);
            std::__shared_weak_count::__release_weak(v519);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v518 + 88))(v518, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v517 = v1119;
      }
      v523 = (4 * v81);
      if (v515 == 1)
        goto LABEL_785;
      if (!(_DWORD)v523)
        goto LABEL_792;
      v524 = 0;
      v525 = 2 * v516;
      v526 = 2 * v523;
      do
      {
        if (!v517
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1980;
        }
        v527 = v523;
        v528 = 0;
        v529 = *(_QWORD *)(v80 + 48);
        do
        {
          sub_20E9ED948(v529, &v517[v528 / 2]);
          v528 += 2;
        }
        while (v526 != v528);
        v517 = (_WORD *)((char *)v517 + v525);
        ++v524;
        v523 = v527;
      }
      while (v524 != v515 - 1);
LABEL_785:
      if ((_DWORD)v523 && !v517)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1980:
          abort();
        }
        v517 = 0;
      }
      if ((_DWORD)v523)
      {
        v530 = *(_QWORD *)(v80 + 48);
        v531 = 2 * v523;
        do
        {
          sub_20E9ED948(v530, v517++);
          v531 -= 2;
        }
        while (v531);
      }
LABEL_792:
      v532 = v1130;
      v1130 = 0;
      if (v532)
        (*(void (**)(uint64_t))(*(_QWORD *)v532 + 8))(v532);
      v473 = v1118;
      if (!v1118)
        return;
      v533 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v533);
      while (__stlxr(v475 - 1, v533));
      goto LABEL_1975;
    case 15:
      v1116 = &off_24CA121C0;
      sub_20FF6E830((std::string::size_type *)&v1117, a3);
      v395 = *a2;
      v396 = v1127;
      v397 = v1117;
      if (!v1117)
        goto LABEL_1666;
      v398 = v1118;
      if (v1118)
      {
        v399 = (unint64_t *)&v1118->__shared_owners_;
        do
          v400 = __ldxr(v399);
        while (__stxr(v400 + 1, v399));
        do
          v401 = __ldaxr(v399);
        while (__stlxr(v401 - 1, v399));
        if (!v401)
        {
          ((void (*)(std::__shared_weak_count *))v398->__on_zero_shared)(v398);
          std::__shared_weak_count::__release_weak(v398);
        }
        v397 = v1117;
        v402 = v1118;
        if (v1118)
        {
          v403 = (unint64_t *)&v1118->__shared_owners_;
          do
            v404 = __ldxr(v403);
          while (__stxr(v404 + 1, v403));
          do
            v405 = __ldaxr(v403);
          while (__stlxr(v405 - 1, v403));
          if (!v405)
          {
            ((void (*)(std::__shared_weak_count *))v402->__on_zero_shared)(v402);
            std::__shared_weak_count::__release_weak(v402);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v397 + 96))(&v1130, v397, 1);
      else
LABEL_1666:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1835;
      if (!v1121)
        goto LABEL_1835;
      v975 = v1122;
      if (!v1122)
        goto LABEL_1835;
      v976 = v1126;
      v977 = v1119;
      if (v1128 && v1119)
      {
        v978 = v1117;
        v979 = v1118;
        if (v1118)
        {
          v980 = (unint64_t *)&v1118->__shared_owners_;
          do
            v981 = __ldxr(v980);
          while (__stxr(v981 + 1, v980));
          do
            v982 = __ldaxr(v980);
          while (__stlxr(v982 - 1, v980));
          if (!v982)
          {
            ((void (*)(std::__shared_weak_count *))v979->__on_zero_shared)(v979);
            std::__shared_weak_count::__release_weak(v979);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v978 + 88))(v978, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v977 = v1119;
      }
      v983 = v975 - 1;
      v1112 = (4 * v396);
      if (!v983)
        goto LABEL_1687;
      if (!(4 * v396))
        goto LABEL_1835;
      for (k = 0; k != v983; ++k)
      {
        if (!v977
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1690;
        }
        v985 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v395 + 48), &v1115);
          v977[v985++] = v1115;
        }
        while (v1112 != v985);
        v977 += v976;
      }
LABEL_1687:
      if (!(_DWORD)v1112 || v977)
      {
        if (!(_DWORD)v1112)
          goto LABEL_1835;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1690:
        abort();
      }
      v1046 = 2 * v1112;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v395 + 48), &v1115);
        *v977++ = v1115;
        v1046 -= 2;
      }
      while (v1046);
LABEL_1835:
      v1047 = v1130;
      v1130 = 0;
      if (v1047)
        (*(void (**)(uint64_t))(*(_QWORD *)v1047 + 8))(v1047);
      v473 = v1118;
      if (!v1118)
        return;
      v1048 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1048);
      while (__stlxr(v475 - 1, v1048));
      goto LABEL_1975;
    case 16:
      v1116 = &off_24CA122B8;
      sub_20FF6F098((std::string::size_type *)&v1117, a3);
      v288 = *a2;
      v289 = v1127;
      v290 = v1117;
      if (!v1117)
        goto LABEL_1337;
      v291 = v1118;
      if (v1118)
      {
        v292 = (unint64_t *)&v1118->__shared_owners_;
        do
          v293 = __ldxr(v292);
        while (__stxr(v293 + 1, v292));
        do
          v294 = __ldaxr(v292);
        while (__stlxr(v294 - 1, v292));
        if (!v294)
        {
          ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
          std::__shared_weak_count::__release_weak(v291);
        }
        v290 = v1117;
        v295 = v1118;
        if (v1118)
        {
          v296 = (unint64_t *)&v1118->__shared_owners_;
          do
            v297 = __ldxr(v296);
          while (__stxr(v297 + 1, v296));
          do
            v298 = __ldaxr(v296);
          while (__stlxr(v298 - 1, v296));
          if (!v298)
          {
            ((void (*)(std::__shared_weak_count *))v295->__on_zero_shared)(v295);
            std::__shared_weak_count::__release_weak(v295);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v290 + 96))(&v1130, v290, 1);
      else
LABEL_1337:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1365;
      if (!v1121)
        goto LABEL_1365;
      v813 = v1122;
      if (!v1122)
        goto LABEL_1365;
      v814 = v1126;
      v815 = (float *)v1119;
      if (v1128 && v1119)
      {
        v816 = v1117;
        v817 = v1118;
        if (v1118)
        {
          v818 = (unint64_t *)&v1118->__shared_owners_;
          do
            v819 = __ldxr(v818);
          while (__stxr(v819 + 1, v818));
          do
            v820 = __ldaxr(v818);
          while (__stlxr(v820 - 1, v818));
          if (!v820)
          {
            ((void (*)(std::__shared_weak_count *))v817->__on_zero_shared)(v817);
            std::__shared_weak_count::__release_weak(v817);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v816 + 88))(v816, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v815 = (float *)v1119;
      }
      v821 = (4 * v289);
      if (v813 == 1)
        goto LABEL_1358;
      if (!(_DWORD)v821)
        goto LABEL_1365;
      v822 = 0;
      v823 = 4 * v814;
      v824 = 4 * v821;
      do
      {
        if (!v815
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1996;
        }
        v825 = v821;
        v826 = 0;
        v827 = *(_QWORD *)(v288 + 48);
        do
        {
          sub_20E9EDF48(v827, &v815[v826 / 4]);
          v826 += 4;
        }
        while (v824 != v826);
        v815 = (float *)((char *)v815 + v823);
        ++v822;
        v821 = v825;
      }
      while (v822 != v813 - 1);
LABEL_1358:
      if ((_DWORD)v821 && !v815)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1996:
          abort();
        }
        v815 = 0;
      }
      if ((_DWORD)v821)
      {
        v828 = *(_QWORD *)(v288 + 48);
        v829 = 4 * v821;
        do
        {
          sub_20E9EDF48(v828, v815++);
          v829 -= 4;
        }
        while (v829);
      }
LABEL_1365:
      v830 = v1130;
      v1130 = 0;
      if (v830)
        (*(void (**)(uint64_t))(*(_QWORD *)v830 + 8))(v830);
      v473 = v1118;
      if (!v1118)
        return;
      v831 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v831);
      while (__stlxr(v475 - 1, v831));
      goto LABEL_1975;
    case 17:
      v1116 = &off_24CA123B0;
      sub_20FF6F900((std::string::size_type *)&v1117, a3);
      v406 = *a2;
      v407 = v1127;
      v408 = v1117;
      if (!v1117)
        goto LABEL_1691;
      v409 = v1118;
      if (v1118)
      {
        v410 = (unint64_t *)&v1118->__shared_owners_;
        do
          v411 = __ldxr(v410);
        while (__stxr(v411 + 1, v410));
        do
          v412 = __ldaxr(v410);
        while (__stlxr(v412 - 1, v410));
        if (!v412)
        {
          ((void (*)(std::__shared_weak_count *))v409->__on_zero_shared)(v409);
          std::__shared_weak_count::__release_weak(v409);
        }
        v408 = v1117;
        v413 = v1118;
        if (v1118)
        {
          v414 = (unint64_t *)&v1118->__shared_owners_;
          do
            v415 = __ldxr(v414);
          while (__stxr(v415 + 1, v414));
          do
            v416 = __ldaxr(v414);
          while (__stlxr(v416 - 1, v414));
          if (!v416)
          {
            ((void (*)(std::__shared_weak_count *))v413->__on_zero_shared)(v413);
            std::__shared_weak_count::__release_weak(v413);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v408 + 96))(&v1130, v408, 1);
      else
LABEL_1691:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1956;
      if (!v1121)
        goto LABEL_1956;
      v986 = v1122;
      if (!v1122)
        goto LABEL_1956;
      v987 = v1126;
      v988 = v1119;
      if (v1128 && v1119)
      {
        v989 = v1117;
        v990 = v1118;
        if (v1118)
        {
          v991 = (unint64_t *)&v1118->__shared_owners_;
          do
            v992 = __ldxr(v991);
          while (__stxr(v992 + 1, v991));
          do
            v993 = __ldaxr(v991);
          while (__stlxr(v993 - 1, v991));
          if (!v993)
          {
            ((void (*)(std::__shared_weak_count *))v990->__on_zero_shared)(v990);
            std::__shared_weak_count::__release_weak(v990);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v989 + 88))(v989, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v988 = v1119;
      }
      v994 = (3 * v407);
      v995 = v986 - 1;
      if (v986 == 1)
      {
        v1113 = v407;
LABEL_1949:
        if (v1113 && !v988)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2006;
          }
          v988 = 0;
        }
        if (v1113)
        {
          v1079 = *(_QWORD *)(v406 + 48);
          do
          {
            sub_20E9ED7B4(v1079, v988++);
            --v994;
          }
          while (v994);
        }
      }
      else if (v407)
      {
        v1113 = v407;
        v996 = 0;
        while (v988
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v997 = 0;
          v998 = *(_QWORD *)(v406 + 48);
          do
            sub_20E9ED7B4(v998, &v988[v997++]);
          while (v994 != v997);
          v988 += v987;
          if (++v996 == v995)
            goto LABEL_1949;
        }
LABEL_2006:
        abort();
      }
LABEL_1956:
      v1080 = v1130;
      v1130 = 0;
      if (v1080)
        (*(void (**)(uint64_t))(*(_QWORD *)v1080 + 8))(v1080);
      v473 = v1118;
      if (!v1118)
        return;
      v1081 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1081);
      while (__stlxr(v475 - 1, v1081));
      goto LABEL_1975;
    case 18:
      v1116 = &off_24CA124A8;
      sub_20FF70164((std::string::size_type *)&v1117, a3);
      v113 = *a2;
      v114 = v1127;
      v115 = v1117;
      if (!v1117)
        goto LABEL_866;
      v116 = v1118;
      if (v1118)
      {
        v117 = (unint64_t *)&v1118->__shared_owners_;
        do
          v118 = __ldxr(v117);
        while (__stxr(v118 + 1, v117));
        do
          v119 = __ldaxr(v117);
        while (__stlxr(v119 - 1, v117));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
        v115 = v1117;
        v120 = v1118;
        if (v1118)
        {
          v121 = (unint64_t *)&v1118->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
          do
            v123 = __ldaxr(v121);
          while (__stlxr(v123 - 1, v121));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
            std::__shared_weak_count::__release_weak(v120);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v115 + 96))(&v1130, v115, 1);
      else
LABEL_866:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1886;
      if (!v1121)
        goto LABEL_1886;
      v568 = v1122;
      if (!v1122)
        goto LABEL_1886;
      v569 = v1126;
      v570 = v1119;
      if (v1128 && v1119)
      {
        v571 = v1117;
        v572 = v1118;
        if (v1118)
        {
          v573 = (unint64_t *)&v1118->__shared_owners_;
          do
            v574 = __ldxr(v573);
          while (__stxr(v574 + 1, v573));
          do
            v575 = __ldaxr(v573);
          while (__stlxr(v575 - 1, v573));
          if (!v575)
          {
            ((void (*)(std::__shared_weak_count *))v572->__on_zero_shared)(v572);
            std::__shared_weak_count::__release_weak(v572);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v571 + 88))(v571, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v570 = v1119;
      }
      v1103 = (3 * v114);
      if (v568 == 1)
      {
        v1088 = v114;
LABEL_1879:
        if (v1088 && !v570)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1987;
          }
          v570 = 0;
        }
        if (v1088)
        {
          v1060 = *(_QWORD *)(v113 + 48);
          v1061 = 2 * v1103;
          do
          {
            sub_20E9ED948(v1060, v570++);
            v1061 -= 2;
          }
          while (v1061);
        }
      }
      else if (v114)
      {
        v1088 = v114;
        v576 = 0;
        v577 = 2 * v569;
        while (v570
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v578 = 0;
          v579 = *(_QWORD *)(v113 + 48);
          do
            sub_20E9ED948(v579, &v570[v578++]);
          while (v1103 != v578);
          v570 = (_WORD *)((char *)v570 + v577);
          if (++v576 == v568 - 1)
            goto LABEL_1879;
        }
LABEL_1987:
        abort();
      }
LABEL_1886:
      v1062 = v1130;
      v1130 = 0;
      if (v1062)
        (*(void (**)(uint64_t))(*(_QWORD *)v1062 + 8))(v1062);
      v473 = v1118;
      if (!v1118)
        return;
      v1063 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1063);
      while (__stlxr(v475 - 1, v1063));
      goto LABEL_1975;
    case 19:
      v1116 = &off_24CA125A0;
      sub_20FF709CC((std::string::size_type *)&v1117, a3);
      v26 = *a2;
      v1094 = v1127;
      v27 = v1117;
      if (!v1117)
        goto LABEL_627;
      v28 = v1118;
      if (v1118)
      {
        v29 = (unint64_t *)&v1118->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
        v27 = v1117;
        v32 = v1118;
        if (v1118)
        {
          v33 = (unint64_t *)&v1118->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v27 + 96))(&v1130, v27, 1);
      else
LABEL_627:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1772;
      if (!v1121)
        goto LABEL_1772;
      v449 = v1122;
      if (!v1122)
        goto LABEL_1772;
      v450 = v1126;
      v451 = v1119;
      if (v1128 && v1119)
      {
        v452 = v1117;
        v453 = v1118;
        if (v1118)
        {
          v454 = (unint64_t *)&v1118->__shared_owners_;
          do
            v455 = __ldxr(v454);
          while (__stxr(v455 + 1, v454));
          do
            v456 = __ldaxr(v454);
          while (__stlxr(v456 - 1, v454));
          if (!v456)
          {
            ((void (*)(std::__shared_weak_count *))v453->__on_zero_shared)(v453);
            std::__shared_weak_count::__release_weak(v453);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v452 + 88))(v452, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v451 = v1119;
      }
      v1085 = (3 * v1094);
      if (v449 == 1)
        goto LABEL_648;
      if (!v1094)
        goto LABEL_1772;
      v457 = 0;
      do
      {
        if (!v451
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_651;
        }
        v458 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v26 + 48), &v1115);
          v451[v458++] = v1115;
        }
        while (v1085 != v458);
        v451 += v450;
        ++v457;
      }
      while (v457 != v449 - 1);
LABEL_648:
      if (!v1094 || v451)
      {
        if (!v1094)
          goto LABEL_1772;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_651:
        abort();
      }
      v1025 = 2 * v1085;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v26 + 48), &v1115);
        *v451++ = v1115;
        v1025 -= 2;
      }
      while (v1025);
LABEL_1772:
      v1026 = v1130;
      v1130 = 0;
      if (v1026)
        (*(void (**)(uint64_t))(*(_QWORD *)v1026 + 8))(v1026);
      v473 = v1118;
      if (!v1118)
        return;
      v1027 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1027);
      while (__stlxr(v475 - 1, v1027));
      goto LABEL_1975;
    case 20:
      v1116 = &off_24CA12698;
      sub_20FF71234((std::string::size_type *)&v1117, a3);
      v373 = *a2;
      v374 = v1127;
      v375 = v1117;
      if (!v1117)
        goto LABEL_1610;
      v376 = v1118;
      if (v1118)
      {
        v377 = (unint64_t *)&v1118->__shared_owners_;
        do
          v378 = __ldxr(v377);
        while (__stxr(v378 + 1, v377));
        do
          v379 = __ldaxr(v377);
        while (__stlxr(v379 - 1, v377));
        if (!v379)
        {
          ((void (*)(std::__shared_weak_count *))v376->__on_zero_shared)(v376);
          std::__shared_weak_count::__release_weak(v376);
        }
        v375 = v1117;
        v380 = v1118;
        if (v1118)
        {
          v381 = (unint64_t *)&v1118->__shared_owners_;
          do
            v382 = __ldxr(v381);
          while (__stxr(v382 + 1, v381));
          do
            v383 = __ldaxr(v381);
          while (__stlxr(v383 - 1, v381));
          if (!v383)
          {
            ((void (*)(std::__shared_weak_count *))v380->__on_zero_shared)(v380);
            std::__shared_weak_count::__release_weak(v380);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v375 + 96))(&v1130, v375, 1);
      else
LABEL_1610:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1942;
      if (!v1121)
        goto LABEL_1942;
      v944 = v1122;
      if (!v1122)
        goto LABEL_1942;
      v945 = v1126;
      v946 = (float *)v1119;
      if (v1128 && v1119)
      {
        v947 = v1117;
        v948 = v1118;
        if (v1118)
        {
          v949 = (unint64_t *)&v1118->__shared_owners_;
          do
            v950 = __ldxr(v949);
          while (__stxr(v950 + 1, v949));
          do
            v951 = __ldaxr(v949);
          while (__stlxr(v951 - 1, v949));
          if (!v951)
          {
            ((void (*)(std::__shared_weak_count *))v948->__on_zero_shared)(v948);
            std::__shared_weak_count::__release_weak(v948);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v947 + 88))(v947, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v946 = (float *)v1119;
      }
      v1111 = (3 * v374);
      if (v944 == 1)
      {
        v1092 = v374;
LABEL_1935:
        if (v1092 && !v946)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2005;
          }
          v946 = 0;
        }
        if (v1092)
        {
          v1075 = *(_QWORD *)(v373 + 48);
          v1076 = 4 * v1111;
          do
          {
            sub_20E9EDF48(v1075, v946++);
            v1076 -= 4;
          }
          while (v1076);
        }
      }
      else if (v374)
      {
        v1092 = v374;
        v952 = 0;
        v953 = 4 * v945;
        while (v946
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v954 = 0;
          v955 = *(_QWORD *)(v373 + 48);
          do
            sub_20E9EDF48(v955, &v946[v954++]);
          while (v1111 != v954);
          v946 = (float *)((char *)v946 + v953);
          if (++v952 == v944 - 1)
            goto LABEL_1935;
        }
LABEL_2005:
        abort();
      }
LABEL_1942:
      v1077 = v1130;
      v1130 = 0;
      if (v1077)
        (*(void (**)(uint64_t))(*(_QWORD *)v1077 + 8))(v1077);
      v473 = v1118;
      if (!v1118)
        return;
      v1078 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1078);
      while (__stlxr(v475 - 1, v1078));
      goto LABEL_1975;
    case 21:
      v1116 = &off_24C9F0FA0;
      sub_20FF71A34(&v1117, a3);
      v427 = *a2;
      v428 = v1127;
      v429 = v1117;
      if (!v1117)
        goto LABEL_1738;
      v430 = v1118;
      if (v1118)
      {
        v431 = (unint64_t *)&v1118->__shared_owners_;
        do
          v432 = __ldxr(v431);
        while (__stxr(v432 + 1, v431));
        do
          v433 = __ldaxr(v431);
        while (__stlxr(v433 - 1, v431));
        if (!v433)
        {
          ((void (*)(std::__shared_weak_count *))v430->__on_zero_shared)(v430);
          std::__shared_weak_count::__release_weak(v430);
        }
        v429 = v1117;
        v434 = v1118;
        if (v1118)
        {
          v435 = (unint64_t *)&v1118->__shared_owners_;
          do
            v436 = __ldxr(v435);
          while (__stxr(v436 + 1, v435));
          do
            v437 = __ldaxr(v435);
          while (__stlxr(v437 - 1, v435));
          if (!v437)
          {
            ((void (*)(std::__shared_weak_count *))v434->__on_zero_shared)(v434);
            std::__shared_weak_count::__release_weak(v434);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v429 + 96))(&v1130, v429, 1);
      else
LABEL_1738:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1970;
      if (!v1121)
        goto LABEL_1970;
      v1009 = v1122;
      if (!v1122)
        goto LABEL_1970;
      v1010 = v1126;
      v1011 = v1119;
      if (v1128 && v1119)
      {
        v1012 = v1117;
        v1013 = v1118;
        if (v1118)
        {
          v1014 = (unint64_t *)&v1118->__shared_owners_;
          do
            v1015 = __ldxr(v1014);
          while (__stxr(v1015 + 1, v1014));
          do
            v1016 = __ldaxr(v1014);
          while (__stlxr(v1016 - 1, v1014));
          if (!v1016)
          {
            ((void (*)(std::__shared_weak_count *))v1013->__on_zero_shared)(v1013);
            std::__shared_weak_count::__release_weak(v1013);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1012 + 88))(v1012, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1011 = v1119;
      }
      v1017 = (3 * v428);
      v1018 = v1009 - 1;
      if (v1009 == 1)
      {
        v1114 = v428;
LABEL_1963:
        if (v1114 && !v1011)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2007;
          }
          v1011 = 0;
        }
        if (v1114)
        {
          v1082 = *(_QWORD *)(v427 + 48);
          do
          {
            sub_20E9ED7B4(v1082, v1011++);
            --v1017;
          }
          while (v1017);
        }
      }
      else if (v428)
      {
        v1114 = v428;
        v1019 = 0;
        while (v1011
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1020 = 0;
          v1021 = *(_QWORD *)(v427 + 48);
          do
            sub_20E9ED7B4(v1021, &v1011[v1020++]);
          while (v1017 != v1020);
          v1011 += v1010;
          if (++v1019 == v1018)
            goto LABEL_1963;
        }
LABEL_2007:
        abort();
      }
LABEL_1970:
      v1083 = v1130;
      v1130 = 0;
      if (v1083)
        (*(void (**)(uint64_t))(*(_QWORD *)v1083 + 8))(v1083);
      v473 = v1118;
      if (!v1118)
        return;
      v1084 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1084);
      while (__stlxr(v475 - 1, v1084));
      goto LABEL_1975;
    case 22:
      v1116 = &off_24CA12790;
      sub_20FF71E24(&v1117, a3);
      v146 = *a2;
      v147 = v1127;
      v148 = v1117;
      if (!v1117)
        goto LABEL_938;
      v149 = v1118;
      if (v1118)
      {
        v150 = (unint64_t *)&v1118->__shared_owners_;
        do
          v151 = __ldxr(v150);
        while (__stxr(v151 + 1, v150));
        do
          v152 = __ldaxr(v150);
        while (__stlxr(v152 - 1, v150));
        if (!v152)
        {
          ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
          std::__shared_weak_count::__release_weak(v149);
        }
        v148 = v1117;
        v153 = v1118;
        if (v1118)
        {
          v154 = (unint64_t *)&v1118->__shared_owners_;
          do
            v155 = __ldxr(v154);
          while (__stxr(v155 + 1, v154));
          do
            v156 = __ldaxr(v154);
          while (__stlxr(v156 - 1, v154));
          if (!v156)
          {
            ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
            std::__shared_weak_count::__release_weak(v153);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v148 + 96))(&v1130, v148, 1);
      else
LABEL_938:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1900;
      if (!v1121)
        goto LABEL_1900;
      v602 = v1122;
      if (!v1122)
        goto LABEL_1900;
      v603 = v1126;
      v604 = v1119;
      if (v1128 && v1119)
      {
        v605 = v1117;
        v606 = v1118;
        if (v1118)
        {
          v607 = (unint64_t *)&v1118->__shared_owners_;
          do
            v608 = __ldxr(v607);
          while (__stxr(v608 + 1, v607));
          do
            v609 = __ldaxr(v607);
          while (__stlxr(v609 - 1, v607));
          if (!v609)
          {
            ((void (*)(std::__shared_weak_count *))v606->__on_zero_shared)(v606);
            std::__shared_weak_count::__release_weak(v606);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v605 + 88))(v605, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v604 = v1119;
      }
      v1106 = (3 * v147);
      if (v602 == 1)
      {
        v1089 = v147;
LABEL_1893:
        if (v1089 && !v604)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1988;
          }
          v604 = 0;
        }
        if (v1089)
        {
          v1064 = *(_QWORD *)(v146 + 48);
          v1065 = 2 * v1106;
          do
          {
            sub_20E9ED948(v1064, v604++);
            v1065 -= 2;
          }
          while (v1065);
        }
      }
      else if (v147)
      {
        v1089 = v147;
        v610 = 0;
        v611 = 2 * v603;
        while (v604
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v612 = 0;
          v613 = *(_QWORD *)(v146 + 48);
          do
            sub_20E9ED948(v613, &v604[v612++]);
          while (v1106 != v612);
          v604 = (_WORD *)((char *)v604 + v611);
          if (++v610 == v602 - 1)
            goto LABEL_1893;
        }
LABEL_1988:
        abort();
      }
LABEL_1900:
      v1066 = v1130;
      v1130 = 0;
      if (v1066)
        (*(void (**)(uint64_t))(*(_QWORD *)v1066 + 8))(v1066);
      v473 = v1118;
      if (!v1118)
        return;
      v1067 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1067);
      while (__stlxr(v475 - 1, v1067));
      goto LABEL_1975;
    case 23:
      v1116 = &off_24CA12888;
      sub_20FF726DC(&v1117, a3);
      v417 = *a2;
      v1099 = v1127;
      v418 = v1117;
      if (!v1117)
        goto LABEL_1713;
      v419 = v1118;
      if (v1118)
      {
        v420 = (unint64_t *)&v1118->__shared_owners_;
        do
          v421 = __ldxr(v420);
        while (__stxr(v421 + 1, v420));
        do
          v422 = __ldaxr(v420);
        while (__stlxr(v422 - 1, v420));
        if (!v422)
        {
          ((void (*)(std::__shared_weak_count *))v419->__on_zero_shared)(v419);
          std::__shared_weak_count::__release_weak(v419);
        }
        v418 = v1117;
        v423 = v1118;
        if (v1118)
        {
          v424 = (unint64_t *)&v1118->__shared_owners_;
          do
            v425 = __ldxr(v424);
          while (__stxr(v425 + 1, v424));
          do
            v426 = __ldaxr(v424);
          while (__stlxr(v426 - 1, v424));
          if (!v426)
          {
            ((void (*)(std::__shared_weak_count *))v423->__on_zero_shared)(v423);
            std::__shared_weak_count::__release_weak(v423);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v418 + 96))(&v1130, v418, 1);
      else
LABEL_1713:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1844;
      if (!v1121)
        goto LABEL_1844;
      v999 = v1122;
      if (!v1122)
        goto LABEL_1844;
      v1000 = v1126;
      v1001 = v1119;
      if (v1128 && v1119)
      {
        v1002 = v1117;
        v1003 = v1118;
        if (v1118)
        {
          v1004 = (unint64_t *)&v1118->__shared_owners_;
          do
            v1005 = __ldxr(v1004);
          while (__stxr(v1005 + 1, v1004));
          do
            v1006 = __ldaxr(v1004);
          while (__stlxr(v1006 - 1, v1004));
          if (!v1006)
          {
            ((void (*)(std::__shared_weak_count *))v1003->__on_zero_shared)(v1003);
            std::__shared_weak_count::__release_weak(v1003);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1002 + 88))(v1002, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1001 = v1119;
      }
      v1093 = (3 * v1099);
      if (v999 == 1)
        goto LABEL_1734;
      if (!v1099)
        goto LABEL_1844;
      v1007 = 0;
      do
      {
        if (!v1001
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1737;
        }
        v1008 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v417 + 48), &v1115);
          v1001[v1008++] = v1115;
        }
        while (v1093 != v1008);
        v1001 += v1000;
        ++v1007;
      }
      while (v1007 != v999 - 1);
LABEL_1734:
      if (!v1099 || v1001)
      {
        if (!v1099)
          goto LABEL_1844;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1737:
        abort();
      }
      v1049 = 2 * v1093;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v417 + 48), &v1115);
        *v1001++ = v1115;
        v1049 -= 2;
      }
      while (v1049);
LABEL_1844:
      v1050 = v1130;
      v1130 = 0;
      if (v1050)
        (*(void (**)(uint64_t))(*(_QWORD *)v1050 + 8))(v1050);
      v473 = v1118;
      if (!v1118)
        return;
      v1051 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1051);
      while (__stlxr(v475 - 1, v1051));
      goto LABEL_1975;
    case 24:
      v1116 = &off_24CA12980;
      sub_20FF72F94(&v1117, a3);
      v69 = *a2;
      v70 = v1127;
      v71 = v1117;
      if (!v1117)
        goto LABEL_742;
      v72 = v1118;
      if (v1118)
      {
        v73 = (unint64_t *)&v1118->__shared_owners_;
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
        do
          v75 = __ldaxr(v73);
        while (__stlxr(v75 - 1, v73));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
        v71 = v1117;
        v76 = v1118;
        if (v1118)
        {
          v77 = (unint64_t *)&v1118->__shared_owners_;
          do
            v78 = __ldxr(v77);
          while (__stxr(v78 + 1, v77));
          do
            v79 = __ldaxr(v77);
          while (__stlxr(v79 - 1, v77));
          if (!v79)
          {
            ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
            std::__shared_weak_count::__release_weak(v76);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v71 + 96))(&v1130, v71, 1);
      else
LABEL_742:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1872;
      if (!v1121)
        goto LABEL_1872;
      v503 = v1122;
      if (!v1122)
        goto LABEL_1872;
      v504 = v1126;
      v505 = (float *)v1119;
      if (v1128 && v1119)
      {
        v506 = v1117;
        v507 = v1118;
        if (v1118)
        {
          v508 = (unint64_t *)&v1118->__shared_owners_;
          do
            v509 = __ldxr(v508);
          while (__stxr(v509 + 1, v508));
          do
            v510 = __ldaxr(v508);
          while (__stlxr(v510 - 1, v508));
          if (!v510)
          {
            ((void (*)(std::__shared_weak_count *))v507->__on_zero_shared)(v507);
            std::__shared_weak_count::__release_weak(v507);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v506 + 88))(v506, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v505 = (float *)v1119;
      }
      v1102 = (3 * v70);
      if (v503 == 1)
      {
        v1087 = v70;
LABEL_1865:
        if (v1087 && !v505)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1986;
          }
          v505 = 0;
        }
        if (v1087)
        {
          v1056 = *(_QWORD *)(v69 + 48);
          v1057 = 4 * v1102;
          do
          {
            sub_20E9EDF48(v1056, v505++);
            v1057 -= 4;
          }
          while (v1057);
        }
      }
      else if (v70)
      {
        v1087 = v70;
        v511 = 0;
        v512 = 4 * v504;
        while (v505
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v513 = 0;
          v514 = *(_QWORD *)(v69 + 48);
          do
            sub_20E9EDF48(v514, &v505[v513++]);
          while (v1102 != v513);
          v505 = (float *)((char *)v505 + v512);
          if (++v511 == v503 - 1)
            goto LABEL_1865;
        }
LABEL_1986:
        abort();
      }
LABEL_1872:
      v1058 = v1130;
      v1130 = 0;
      if (v1058)
        (*(void (**)(uint64_t))(*(_QWORD *)v1058 + 8))(v1058);
      v473 = v1118;
      if (v1118)
      {
        v1059 = (unint64_t *)&v1118->__shared_owners_;
        do
          v475 = __ldaxr(v1059);
        while (__stlxr(v475 - 1, v1059));
LABEL_1975:
        if (!v475)
        {
          ((void (*)(std::__shared_weak_count *))v473->__on_zero_shared)(v473);
          std::__shared_weak_count::__release_weak(v473);
        }
      }
      return;
    case 25:
      v1116 = &off_24C9C04B8;
      sub_20FF737E4(&v1117, a3);
      v36 = *a2;
      v37 = v1127;
      v38 = v1117;
      if (!v1117)
        goto LABEL_652;
      v39 = v1118;
      if (v1118)
      {
        v40 = (unint64_t *)&v1118->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
        v38 = v1117;
        v43 = v1118;
        if (v1118)
        {
          v44 = (unint64_t *)&v1118->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v38 + 96))(&v1130, v38, 1);
      else
LABEL_652:
        v1130 = 0;
      if (!v1120)
        goto LABEL_680;
      if (!v1121)
        goto LABEL_680;
      v459 = v1122;
      if (!v1122)
        goto LABEL_680;
      v460 = v1126;
      v461 = v1119;
      if (v1128 && v1119)
      {
        v462 = v1117;
        v463 = v1118;
        if (v1118)
        {
          v464 = (unint64_t *)&v1118->__shared_owners_;
          do
            v465 = __ldxr(v464);
          while (__stxr(v465 + 1, v464));
          do
            v466 = __ldaxr(v464);
          while (__stlxr(v466 - 1, v464));
          if (!v466)
          {
            ((void (*)(std::__shared_weak_count *))v463->__on_zero_shared)(v463);
            std::__shared_weak_count::__release_weak(v463);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v462 + 88))(v462, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v461 = v1119;
      }
      v467 = (4 * v37);
      if (v459 == 1)
        goto LABEL_673;
      if (!(_DWORD)v467)
        goto LABEL_680;
      v468 = 0;
      do
      {
        if (!v461
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1978;
        }
        v469 = 0;
        v470 = *(_QWORD *)(v36 + 48);
        do
          sub_20E9ED7B4(v470, &v461[v469++]);
        while (v467 != v469);
        v461 += v460;
        ++v468;
      }
      while (v468 != v459 - 1);
LABEL_673:
      if ((_DWORD)v467 && !v461)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1978:
          abort();
        }
        v461 = 0;
      }
      if ((_DWORD)v467)
      {
        v471 = *(_QWORD *)(v36 + 48);
        do
        {
          sub_20E9ED7B4(v471, v461++);
          --v467;
        }
        while (v467);
      }
LABEL_680:
      v472 = v1130;
      v1130 = 0;
      if (v472)
        (*(void (**)(uint64_t))(*(_QWORD *)v472 + 8))(v472);
      v473 = v1118;
      if (!v1118)
        return;
      v474 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v474);
      while (__stlxr(v475 - 1, v474));
      goto LABEL_1975;
    case 26:
      v1116 = &off_24CA12A78;
      sub_20FF73E90((std::string::size_type *)&v1117, a3);
      v157 = *a2;
      v158 = v1127;
      v159 = v1117;
      if (!v1117)
        goto LABEL_960;
      v160 = v1118;
      if (v1118)
      {
        v161 = (unint64_t *)&v1118->__shared_owners_;
        do
          v162 = __ldxr(v161);
        while (__stxr(v162 + 1, v161));
        do
          v163 = __ldaxr(v161);
        while (__stlxr(v163 - 1, v161));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
        v159 = v1117;
        v164 = v1118;
        if (v1118)
        {
          v165 = (unint64_t *)&v1118->__shared_owners_;
          do
            v166 = __ldxr(v165);
          while (__stxr(v166 + 1, v165));
          do
            v167 = __ldaxr(v165);
          while (__stlxr(v167 - 1, v165));
          if (!v167)
          {
            ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
            std::__shared_weak_count::__release_weak(v164);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v159 + 96))(&v1130, v159, 1);
      else
LABEL_960:
        v1130 = 0;
      if (!v1120)
        goto LABEL_988;
      if (!v1121)
        goto LABEL_988;
      v614 = v1122;
      if (!v1122)
        goto LABEL_988;
      v615 = v1126;
      v616 = v1119;
      if (v1128 && v1119)
      {
        v617 = v1117;
        v618 = v1118;
        if (v1118)
        {
          v619 = (unint64_t *)&v1118->__shared_owners_;
          do
            v620 = __ldxr(v619);
          while (__stxr(v620 + 1, v619));
          do
            v621 = __ldaxr(v619);
          while (__stlxr(v621 - 1, v619));
          if (!v621)
          {
            ((void (*)(std::__shared_weak_count *))v618->__on_zero_shared)(v618);
            std::__shared_weak_count::__release_weak(v618);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v617 + 88))(v617, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v616 = v1119;
      }
      v622 = (4 * v158);
      if (v614 == 1)
        goto LABEL_981;
      if (!(_DWORD)v622)
        goto LABEL_988;
      v623 = 0;
      v624 = 2 * v615;
      v625 = 2 * v622;
      do
      {
        if (!v616
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1983;
        }
        v626 = v622;
        v627 = 0;
        v628 = *(_QWORD *)(v157 + 48);
        do
        {
          sub_20E9ED948(v628, &v616[v627 / 2]);
          v627 += 2;
        }
        while (v625 != v627);
        v616 = (_WORD *)((char *)v616 + v624);
        ++v623;
        v622 = v626;
      }
      while (v623 != v614 - 1);
LABEL_981:
      if ((_DWORD)v622 && !v616)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1983:
          abort();
        }
        v616 = 0;
      }
      if ((_DWORD)v622)
      {
        v629 = *(_QWORD *)(v157 + 48);
        v630 = 2 * v622;
        do
        {
          sub_20E9ED948(v629, v616++);
          v630 -= 2;
        }
        while (v630);
      }
LABEL_988:
      v631 = v1130;
      v1130 = 0;
      if (v631)
        (*(void (**)(uint64_t))(*(_QWORD *)v631 + 8))(v631);
      v473 = v1118;
      if (!v1118)
        return;
      v632 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v632);
      while (__stlxr(v475 - 1, v632));
      goto LABEL_1975;
    case 27:
      v1116 = &off_24CA12B70;
      sub_20FF746F8((std::string::size_type *)&v1117, a3);
      v15 = *a2;
      v16 = v1127;
      v17 = v1117;
      if (!v1117)
        goto LABEL_602;
      v18 = v1118;
      if (v1118)
      {
        v19 = (unint64_t *)&v1118->__shared_owners_;
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 1, v19));
        do
          v21 = __ldaxr(v19);
        while (__stlxr(v21 - 1, v19));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        v17 = v1117;
        v22 = v1118;
        if (v1118)
        {
          v23 = (unint64_t *)&v1118->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v1130, v17, 1);
      else
LABEL_602:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1763;
      if (!v1121)
        goto LABEL_1763;
      v438 = v1122;
      if (!v1122)
        goto LABEL_1763;
      v439 = v1126;
      v440 = v1119;
      if (v1128 && v1119)
      {
        v441 = v1117;
        v442 = v1118;
        if (v1118)
        {
          v443 = (unint64_t *)&v1118->__shared_owners_;
          do
            v444 = __ldxr(v443);
          while (__stxr(v444 + 1, v443));
          do
            v445 = __ldaxr(v443);
          while (__stlxr(v445 - 1, v443));
          if (!v445)
          {
            ((void (*)(std::__shared_weak_count *))v442->__on_zero_shared)(v442);
            std::__shared_weak_count::__release_weak(v442);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v441 + 88))(v441, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v440 = v1119;
      }
      v446 = v438 - 1;
      v1100 = (4 * v16);
      if (!v446)
        goto LABEL_623;
      if (!(4 * v16))
        goto LABEL_1763;
      for (m = 0; m != v446; ++m)
      {
        if (!v440
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_626;
        }
        v448 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v15 + 48), &v1115);
          v440[v448++] = v1115;
        }
        while (v1100 != v448);
        v440 += v439;
      }
LABEL_623:
      if (!(_DWORD)v1100 || v440)
      {
        if (!(_DWORD)v1100)
          goto LABEL_1763;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_626:
        abort();
      }
      v1022 = 2 * v1100;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v15 + 48), &v1115);
        *v440++ = v1115;
        v1022 -= 2;
      }
      while (v1022);
LABEL_1763:
      v1023 = v1130;
      v1130 = 0;
      if (v1023)
        (*(void (**)(uint64_t))(*(_QWORD *)v1023 + 8))(v1023);
      v473 = v1118;
      if (!v1118)
        return;
      v1024 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1024);
      while (__stlxr(v475 - 1, v1024));
      goto LABEL_1975;
    case 28:
      v1116 = &off_24C9C0E68;
      sub_20FF74EF8((std::string::size_type *)&v1117, a3);
      v200 = *a2;
      v201 = v1127;
      v202 = v1117;
      if (!v1117)
        goto LABEL_1086;
      v203 = v1118;
      if (v1118)
      {
        v204 = (unint64_t *)&v1118->__shared_owners_;
        do
          v205 = __ldxr(v204);
        while (__stxr(v205 + 1, v204));
        do
          v206 = __ldaxr(v204);
        while (__stlxr(v206 - 1, v204));
        if (!v206)
        {
          ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
          std::__shared_weak_count::__release_weak(v203);
        }
        v202 = v1117;
        v207 = v1118;
        if (v1118)
        {
          v208 = (unint64_t *)&v1118->__shared_owners_;
          do
            v209 = __ldxr(v208);
          while (__stxr(v209 + 1, v208));
          do
            v210 = __ldaxr(v208);
          while (__stlxr(v210 - 1, v208));
          if (!v210)
          {
            ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
            std::__shared_weak_count::__release_weak(v207);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v202 + 96))(&v1130, v202, 1);
      else
LABEL_1086:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1114;
      if (!v1121)
        goto LABEL_1114;
      v679 = v1122;
      if (!v1122)
        goto LABEL_1114;
      v680 = v1126;
      v681 = (float *)v1119;
      if (v1128 && v1119)
      {
        v682 = v1117;
        v683 = v1118;
        if (v1118)
        {
          v684 = (unint64_t *)&v1118->__shared_owners_;
          do
            v685 = __ldxr(v684);
          while (__stxr(v685 + 1, v684));
          do
            v686 = __ldaxr(v684);
          while (__stlxr(v686 - 1, v684));
          if (!v686)
          {
            ((void (*)(std::__shared_weak_count *))v683->__on_zero_shared)(v683);
            std::__shared_weak_count::__release_weak(v683);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v682 + 88))(v682, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v681 = (float *)v1119;
      }
      v687 = (4 * v201);
      if (v679 == 1)
        goto LABEL_1107;
      if (!(_DWORD)v687)
        goto LABEL_1114;
      v688 = 0;
      v689 = 4 * v680;
      v690 = 4 * v687;
      do
      {
        if (!v681
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1990;
        }
        v691 = v687;
        v692 = 0;
        v693 = *(_QWORD *)(v200 + 48);
        do
        {
          sub_20E9EDF48(v693, &v681[v692 / 4]);
          v692 += 4;
        }
        while (v690 != v692);
        v681 = (float *)((char *)v681 + v689);
        ++v688;
        v687 = v691;
      }
      while (v688 != v679 - 1);
LABEL_1107:
      if ((_DWORD)v687 && !v681)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1990:
          abort();
        }
        v681 = 0;
      }
      if ((_DWORD)v687)
      {
        v694 = *(_QWORD *)(v200 + 48);
        v695 = 4 * v687;
        do
        {
          sub_20E9EDF48(v694, v681++);
          v695 -= 4;
        }
        while (v695);
      }
LABEL_1114:
      v696 = v1130;
      v1130 = 0;
      if (v696)
        (*(void (**)(uint64_t))(*(_QWORD *)v696 + 8))(v696);
      v473 = v1118;
      if (!v1118)
        return;
      v697 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v697);
      while (__stlxr(v475 - 1, v697));
      goto LABEL_1975;
    case 29:
      v1116 = &off_24C9C03C0;
      sub_20FF754EC(&v1117, a3);
      v58 = *a2;
      v59 = v1127;
      v60 = v1117;
      if (!v1117)
        goto LABEL_708;
      v61 = v1118;
      if (v1118)
      {
        v62 = (unint64_t *)&v1118->__shared_owners_;
        do
          v63 = __ldxr(v62);
        while (__stxr(v63 + 1, v62));
        do
          v64 = __ldaxr(v62);
        while (__stlxr(v64 - 1, v62));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
        v60 = v1117;
        v65 = v1118;
        if (v1118)
        {
          v66 = (unint64_t *)&v1118->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          if (!v68)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v60 + 96))(&v1130, v60, 1);
      else
LABEL_708:
        v1130 = 0;
      if (!v1120)
        goto LABEL_736;
      if (!v1121)
        goto LABEL_736;
      v488 = v1122;
      if (!v1122)
        goto LABEL_736;
      v489 = v1126;
      v490 = v1119;
      if (v1128 && v1119)
      {
        v491 = v1117;
        v492 = v1118;
        if (v1118)
        {
          v493 = (unint64_t *)&v1118->__shared_owners_;
          do
            v494 = __ldxr(v493);
          while (__stxr(v494 + 1, v493));
          do
            v495 = __ldaxr(v493);
          while (__stlxr(v495 - 1, v493));
          if (!v495)
          {
            ((void (*)(std::__shared_weak_count *))v492->__on_zero_shared)(v492);
            std::__shared_weak_count::__release_weak(v492);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v491 + 88))(v491, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v490 = v1119;
      }
      v496 = (4 * v59);
      if (v488 == 1)
        goto LABEL_729;
      if (!(_DWORD)v496)
        goto LABEL_736;
      v497 = 0;
      do
      {
        if (!v490
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1979;
        }
        v498 = 0;
        v499 = *(_QWORD *)(v58 + 48);
        do
          sub_20E9ED7B4(v499, &v490[v498++]);
        while (v496 != v498);
        v490 += v489;
        ++v497;
      }
      while (v497 != v488 - 1);
LABEL_729:
      if ((_DWORD)v496 && !v490)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1979:
          abort();
        }
        v490 = 0;
      }
      if ((_DWORD)v496)
      {
        v500 = *(_QWORD *)(v58 + 48);
        do
        {
          sub_20E9ED7B4(v500, v490++);
          --v496;
        }
        while (v496);
      }
LABEL_736:
      v501 = v1130;
      v1130 = 0;
      if (v501)
        (*(void (**)(uint64_t))(*(_QWORD *)v501 + 8))(v501);
      v473 = v1118;
      if (!v1118)
        return;
      v502 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v502);
      while (__stlxr(v475 - 1, v502));
      goto LABEL_1975;
    case 30:
      v1116 = &off_24CA12C68;
      sub_20FF75B98(&v1117, a3);
      v233 = *a2;
      v234 = v1127;
      v235 = v1117;
      if (!v1117)
        goto LABEL_1179;
      v236 = v1118;
      if (v1118)
      {
        v237 = (unint64_t *)&v1118->__shared_owners_;
        do
          v238 = __ldxr(v237);
        while (__stxr(v238 + 1, v237));
        do
          v239 = __ldaxr(v237);
        while (__stlxr(v239 - 1, v237));
        if (!v239)
        {
          ((void (*)(std::__shared_weak_count *))v236->__on_zero_shared)(v236);
          std::__shared_weak_count::__release_weak(v236);
        }
        v235 = v1117;
        v240 = v1118;
        if (v1118)
        {
          v241 = (unint64_t *)&v1118->__shared_owners_;
          do
            v242 = __ldxr(v241);
          while (__stxr(v242 + 1, v241));
          do
            v243 = __ldaxr(v241);
          while (__stlxr(v243 - 1, v241));
          if (!v243)
          {
            ((void (*)(std::__shared_weak_count *))v240->__on_zero_shared)(v240);
            std::__shared_weak_count::__release_weak(v240);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v235 + 96))(&v1130, v235, 1);
      else
LABEL_1179:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1207;
      if (!v1121)
        goto LABEL_1207;
      v728 = v1122;
      if (!v1122)
        goto LABEL_1207;
      v729 = v1126;
      v730 = v1119;
      if (v1128 && v1119)
      {
        v731 = v1117;
        v732 = v1118;
        if (v1118)
        {
          v733 = (unint64_t *)&v1118->__shared_owners_;
          do
            v734 = __ldxr(v733);
          while (__stxr(v734 + 1, v733));
          do
            v735 = __ldaxr(v733);
          while (__stlxr(v735 - 1, v733));
          if (!v735)
          {
            ((void (*)(std::__shared_weak_count *))v732->__on_zero_shared)(v732);
            std::__shared_weak_count::__release_weak(v732);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v731 + 88))(v731, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v730 = v1119;
      }
      v736 = (4 * v234);
      if (v728 == 1)
        goto LABEL_1200;
      if (!(_DWORD)v736)
        goto LABEL_1207;
      v737 = 0;
      v738 = 2 * v729;
      v739 = 2 * v736;
      do
      {
        if (!v730
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1992;
        }
        v740 = v736;
        v741 = 0;
        v742 = *(_QWORD *)(v233 + 48);
        do
        {
          sub_20E9ED948(v742, &v730[v741 / 2]);
          v741 += 2;
        }
        while (v739 != v741);
        v730 = (_WORD *)((char *)v730 + v738);
        ++v737;
        v736 = v740;
      }
      while (v737 != v728 - 1);
LABEL_1200:
      if ((_DWORD)v736 && !v730)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1992:
          abort();
        }
        v730 = 0;
      }
      if ((_DWORD)v736)
      {
        v743 = *(_QWORD *)(v233 + 48);
        v744 = 2 * v736;
        do
        {
          sub_20E9ED948(v743, v730++);
          v744 -= 2;
        }
        while (v744);
      }
LABEL_1207:
      v745 = v1130;
      v1130 = 0;
      if (v745)
        (*(void (**)(uint64_t))(*(_QWORD *)v745 + 8))(v745);
      v473 = v1118;
      if (!v1118)
        return;
      v746 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v746);
      while (__stlxr(v475 - 1, v746));
      goto LABEL_1975;
    case 31:
      v1116 = &off_24CA12D60;
      sub_20FF76450(&v1117, a3);
      v168 = *a2;
      v169 = v1127;
      v170 = v1117;
      if (!v1117)
        goto LABEL_994;
      v171 = v1118;
      if (v1118)
      {
        v172 = (unint64_t *)&v1118->__shared_owners_;
        do
          v173 = __ldxr(v172);
        while (__stxr(v173 + 1, v172));
        do
          v174 = __ldaxr(v172);
        while (__stlxr(v174 - 1, v172));
        if (!v174)
        {
          ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
          std::__shared_weak_count::__release_weak(v171);
        }
        v170 = v1117;
        v175 = v1118;
        if (v1118)
        {
          v176 = (unint64_t *)&v1118->__shared_owners_;
          do
            v177 = __ldxr(v176);
          while (__stxr(v177 + 1, v176));
          do
            v178 = __ldaxr(v176);
          while (__stlxr(v178 - 1, v176));
          if (!v178)
          {
            ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
            std::__shared_weak_count::__release_weak(v175);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v170 + 96))(&v1130, v170, 1);
      else
LABEL_994:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1799;
      if (!v1121)
        goto LABEL_1799;
      v633 = v1122;
      if (!v1122)
        goto LABEL_1799;
      v634 = v1126;
      v635 = v1119;
      if (v1128 && v1119)
      {
        v636 = v1117;
        v637 = v1118;
        if (v1118)
        {
          v638 = (unint64_t *)&v1118->__shared_owners_;
          do
            v639 = __ldxr(v638);
          while (__stxr(v639 + 1, v638));
          do
            v640 = __ldaxr(v638);
          while (__stlxr(v640 - 1, v638));
          if (!v640)
          {
            ((void (*)(std::__shared_weak_count *))v637->__on_zero_shared)(v637);
            std::__shared_weak_count::__release_weak(v637);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v636 + 88))(v636, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v635 = v1119;
      }
      v641 = v633 - 1;
      v1107 = (4 * v169);
      if (!v641)
        goto LABEL_1015;
      if (!(4 * v169))
        goto LABEL_1799;
      for (n = 0; n != v641; ++n)
      {
        if (!v635
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1018;
        }
        v643 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v168 + 48), &v1115);
          v635[v643++] = v1115;
        }
        while (v1107 != v643);
        v635 += v634;
      }
LABEL_1015:
      if (!(_DWORD)v1107 || v635)
      {
        if (!(_DWORD)v1107)
          goto LABEL_1799;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1018:
        abort();
      }
      v1034 = 2 * v1107;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v168 + 48), &v1115);
        *v635++ = v1115;
        v1034 -= 2;
      }
      while (v1034);
LABEL_1799:
      v1035 = v1130;
      v1130 = 0;
      if (v1035)
        (*(void (**)(uint64_t))(*(_QWORD *)v1035 + 8))(v1035);
      v473 = v1118;
      if (!v1118)
        return;
      v1036 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1036);
      while (__stlxr(v475 - 1, v1036));
      goto LABEL_1975;
    case 32:
      v1116 = &off_24C9C0D70;
      sub_20FF76CA0(&v1117, a3);
      v255 = *a2;
      v256 = v1127;
      v257 = v1117;
      if (!v1117)
        goto LABEL_1247;
      v258 = v1118;
      if (v1118)
      {
        v259 = (unint64_t *)&v1118->__shared_owners_;
        do
          v260 = __ldxr(v259);
        while (__stxr(v260 + 1, v259));
        do
          v261 = __ldaxr(v259);
        while (__stlxr(v261 - 1, v259));
        if (!v261)
        {
          ((void (*)(std::__shared_weak_count *))v258->__on_zero_shared)(v258);
          std::__shared_weak_count::__release_weak(v258);
        }
        v257 = v1117;
        v262 = v1118;
        if (v1118)
        {
          v263 = (unint64_t *)&v1118->__shared_owners_;
          do
            v264 = __ldxr(v263);
          while (__stxr(v264 + 1, v263));
          do
            v265 = __ldaxr(v263);
          while (__stlxr(v265 - 1, v263));
          if (!v265)
          {
            ((void (*)(std::__shared_weak_count *))v262->__on_zero_shared)(v262);
            std::__shared_weak_count::__release_weak(v262);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v257 + 96))(&v1130, v257, 1);
      else
LABEL_1247:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1275;
      if (!v1121)
        goto LABEL_1275;
      v766 = v1122;
      if (!v1122)
        goto LABEL_1275;
      v767 = v1126;
      v768 = (float *)v1119;
      if (v1128 && v1119)
      {
        v769 = v1117;
        v770 = v1118;
        if (v1118)
        {
          v771 = (unint64_t *)&v1118->__shared_owners_;
          do
            v772 = __ldxr(v771);
          while (__stxr(v772 + 1, v771));
          do
            v773 = __ldaxr(v771);
          while (__stlxr(v773 - 1, v771));
          if (!v773)
          {
            ((void (*)(std::__shared_weak_count *))v770->__on_zero_shared)(v770);
            std::__shared_weak_count::__release_weak(v770);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v769 + 88))(v769, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v768 = (float *)v1119;
      }
      v774 = (4 * v256);
      if (v766 == 1)
        goto LABEL_1268;
      if (!(_DWORD)v774)
        goto LABEL_1275;
      v775 = 0;
      v776 = 4 * v767;
      v777 = 4 * v774;
      do
      {
        if (!v768
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1994;
        }
        v778 = v774;
        v779 = 0;
        v780 = *(_QWORD *)(v255 + 48);
        do
        {
          sub_20E9EDF48(v780, &v768[v779 / 4]);
          v779 += 4;
        }
        while (v777 != v779);
        v768 = (float *)((char *)v768 + v776);
        ++v775;
        v774 = v778;
      }
      while (v775 != v766 - 1);
LABEL_1268:
      if ((_DWORD)v774 && !v768)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1994:
          abort();
        }
        v768 = 0;
      }
      if ((_DWORD)v774)
      {
        v781 = *(_QWORD *)(v255 + 48);
        v782 = 4 * v774;
        do
        {
          sub_20E9EDF48(v781, v768++);
          v782 -= 4;
        }
        while (v782);
      }
LABEL_1275:
      v783 = v1130;
      v1130 = 0;
      if (v783)
        (*(void (**)(uint64_t))(*(_QWORD *)v783 + 8))(v783);
      v473 = v1118;
      if (!v1118)
        return;
      v784 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v784);
      while (__stlxr(v475 - 1, v784));
      goto LABEL_1975;
    case 33:
      v1116 = &off_24CA12E58;
      sub_20FF7734C(&v1117, a3);
      v362 = *a2;
      v363 = v1127;
      v364 = v1117;
      if (!v1117)
        goto LABEL_1576;
      v365 = v1118;
      if (v1118)
      {
        v366 = (unint64_t *)&v1118->__shared_owners_;
        do
          v367 = __ldxr(v366);
        while (__stxr(v367 + 1, v366));
        do
          v368 = __ldaxr(v366);
        while (__stlxr(v368 - 1, v366));
        if (!v368)
        {
          ((void (*)(std::__shared_weak_count *))v365->__on_zero_shared)(v365);
          std::__shared_weak_count::__release_weak(v365);
        }
        v364 = v1117;
        v369 = v1118;
        if (v1118)
        {
          v370 = (unint64_t *)&v1118->__shared_owners_;
          do
            v371 = __ldxr(v370);
          while (__stxr(v371 + 1, v370));
          do
            v372 = __ldaxr(v370);
          while (__stlxr(v372 - 1, v370));
          if (!v372)
          {
            ((void (*)(std::__shared_weak_count *))v369->__on_zero_shared)(v369);
            std::__shared_weak_count::__release_weak(v369);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v364 + 96))(&v1130, v364, 1);
      else
LABEL_1576:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1604;
      if (!v1121)
        goto LABEL_1604;
      v929 = v1122;
      if (!v1122)
        goto LABEL_1604;
      v930 = v1126;
      v931 = v1119;
      if (v1128 && v1119)
      {
        v932 = v1117;
        v933 = v1118;
        if (v1118)
        {
          v934 = (unint64_t *)&v1118->__shared_owners_;
          do
            v935 = __ldxr(v934);
          while (__stxr(v935 + 1, v934));
          do
            v936 = __ldaxr(v934);
          while (__stlxr(v936 - 1, v934));
          if (!v936)
          {
            ((void (*)(std::__shared_weak_count *))v933->__on_zero_shared)(v933);
            std::__shared_weak_count::__release_weak(v933);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v932 + 88))(v932, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v931 = v1119;
      }
      v937 = (4 * v363);
      if (v929 == 1)
        goto LABEL_1597;
      if (!(_DWORD)v937)
        goto LABEL_1604;
      v938 = 0;
      do
      {
        if (!v931
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_2002;
        }
        v939 = 0;
        v940 = *(_QWORD *)(v362 + 48);
        do
          sub_20E9ED7B4(v940, &v931[v939++]);
        while (v937 != v939);
        v931 += v930;
        ++v938;
      }
      while (v938 != v929 - 1);
LABEL_1597:
      if ((_DWORD)v937 && !v931)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_2002:
          abort();
        }
        v931 = 0;
      }
      if ((_DWORD)v937)
      {
        v941 = *(_QWORD *)(v362 + 48);
        do
        {
          sub_20E9ED7B4(v941, v931++);
          --v937;
        }
        while (v937);
      }
LABEL_1604:
      v942 = v1130;
      v1130 = 0;
      if (v942)
        (*(void (**)(uint64_t))(*(_QWORD *)v942 + 8))(v942);
      v473 = v1118;
      if (!v1118)
        return;
      v943 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v943);
      while (__stlxr(v475 - 1, v943));
      goto LABEL_1975;
    case 34:
      v1116 = &off_24CA12F50;
      sub_20FF77C00((std::string::size_type *)&v1117, a3);
      v244 = *a2;
      v245 = v1127;
      v246 = v1117;
      if (!v1117)
        goto LABEL_1213;
      v247 = v1118;
      if (v1118)
      {
        v248 = (unint64_t *)&v1118->__shared_owners_;
        do
          v249 = __ldxr(v248);
        while (__stxr(v249 + 1, v248));
        do
          v250 = __ldaxr(v248);
        while (__stlxr(v250 - 1, v248));
        if (!v250)
        {
          ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
          std::__shared_weak_count::__release_weak(v247);
        }
        v246 = v1117;
        v251 = v1118;
        if (v1118)
        {
          v252 = (unint64_t *)&v1118->__shared_owners_;
          do
            v253 = __ldxr(v252);
          while (__stxr(v253 + 1, v252));
          do
            v254 = __ldaxr(v252);
          while (__stlxr(v254 - 1, v252));
          if (!v254)
          {
            ((void (*)(std::__shared_weak_count *))v251->__on_zero_shared)(v251);
            std::__shared_weak_count::__release_weak(v251);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v246 + 96))(&v1130, v246, 1);
      else
LABEL_1213:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1241;
      if (!v1121)
        goto LABEL_1241;
      v747 = v1122;
      if (!v1122)
        goto LABEL_1241;
      v748 = v1126;
      v749 = v1119;
      if (v1128 && v1119)
      {
        v750 = v1117;
        v751 = v1118;
        if (v1118)
        {
          v752 = (unint64_t *)&v1118->__shared_owners_;
          do
            v753 = __ldxr(v752);
          while (__stxr(v753 + 1, v752));
          do
            v754 = __ldaxr(v752);
          while (__stlxr(v754 - 1, v752));
          if (!v754)
          {
            ((void (*)(std::__shared_weak_count *))v751->__on_zero_shared)(v751);
            std::__shared_weak_count::__release_weak(v751);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v750 + 88))(v750, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v749 = v1119;
      }
      v755 = (4 * v245);
      if (v747 == 1)
        goto LABEL_1234;
      if (!(_DWORD)v755)
        goto LABEL_1241;
      v756 = 0;
      v757 = 2 * v748;
      v758 = 2 * v755;
      do
      {
        if (!v749
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1993;
        }
        v759 = v755;
        v760 = 0;
        v761 = *(_QWORD *)(v244 + 48);
        do
        {
          sub_20E9ED948(v761, &v749[v760 / 2]);
          v760 += 2;
        }
        while (v758 != v760);
        v749 = (_WORD *)((char *)v749 + v757);
        ++v756;
        v755 = v759;
      }
      while (v756 != v747 - 1);
LABEL_1234:
      if ((_DWORD)v755 && !v749)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1993:
          abort();
        }
        v749 = 0;
      }
      if ((_DWORD)v755)
      {
        v762 = *(_QWORD *)(v244 + 48);
        v763 = 2 * v755;
        do
        {
          sub_20E9ED948(v762, v749++);
          v763 -= 2;
        }
        while (v763);
      }
LABEL_1241:
      v764 = v1130;
      v1130 = 0;
      if (v764)
        (*(void (**)(uint64_t))(*(_QWORD *)v764 + 8))(v764);
      v473 = v1118;
      if (!v1118)
        return;
      v765 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v765);
      while (__stlxr(v475 - 1, v765));
      goto LABEL_1975;
    case 35:
      v1116 = &off_24CA13048;
      sub_20FF78468((std::string::size_type *)&v1117, a3);
      v222 = *a2;
      v223 = v1127;
      v224 = v1117;
      if (!v1117)
        goto LABEL_1154;
      v225 = v1118;
      if (v1118)
      {
        v226 = (unint64_t *)&v1118->__shared_owners_;
        do
          v227 = __ldxr(v226);
        while (__stxr(v227 + 1, v226));
        do
          v228 = __ldaxr(v226);
        while (__stlxr(v228 - 1, v226));
        if (!v228)
        {
          ((void (*)(std::__shared_weak_count *))v225->__on_zero_shared)(v225);
          std::__shared_weak_count::__release_weak(v225);
        }
        v224 = v1117;
        v229 = v1118;
        if (v1118)
        {
          v230 = (unint64_t *)&v1118->__shared_owners_;
          do
            v231 = __ldxr(v230);
          while (__stxr(v231 + 1, v230));
          do
            v232 = __ldaxr(v230);
          while (__stlxr(v232 - 1, v230));
          if (!v232)
          {
            ((void (*)(std::__shared_weak_count *))v229->__on_zero_shared)(v229);
            std::__shared_weak_count::__release_weak(v229);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v224 + 96))(&v1130, v224, 1);
      else
LABEL_1154:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1808;
      if (!v1121)
        goto LABEL_1808;
      v717 = v1122;
      if (!v1122)
        goto LABEL_1808;
      v718 = v1126;
      v719 = v1119;
      if (v1128 && v1119)
      {
        v720 = v1117;
        v721 = v1118;
        if (v1118)
        {
          v722 = (unint64_t *)&v1118->__shared_owners_;
          do
            v723 = __ldxr(v722);
          while (__stxr(v723 + 1, v722));
          do
            v724 = __ldaxr(v722);
          while (__stlxr(v724 - 1, v722));
          if (!v724)
          {
            ((void (*)(std::__shared_weak_count *))v721->__on_zero_shared)(v721);
            std::__shared_weak_count::__release_weak(v721);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v720 + 88))(v720, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v719 = v1119;
      }
      v725 = v717 - 1;
      v1108 = (4 * v223);
      if (!v725)
        goto LABEL_1175;
      if (!(4 * v223))
        goto LABEL_1808;
      for (ii = 0; ii != v725; ++ii)
      {
        if (!v719
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1178;
        }
        v727 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v222 + 48), &v1115);
          v719[v727++] = v1115;
        }
        while (v1108 != v727);
        v719 += v718;
      }
LABEL_1175:
      if (!(_DWORD)v1108 || v719)
      {
        if (!(_DWORD)v1108)
          goto LABEL_1808;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1178:
        abort();
      }
      v1037 = 2 * v1108;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v222 + 48), &v1115);
        *v719++ = v1115;
        v1037 -= 2;
      }
      while (v1037);
LABEL_1808:
      v1038 = v1130;
      v1130 = 0;
      if (v1038)
        (*(void (**)(uint64_t))(*(_QWORD *)v1038 + 8))(v1038);
      v473 = v1118;
      if (!v1118)
        return;
      v1039 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1039);
      while (__stlxr(v475 - 1, v1039));
      goto LABEL_1975;
    case 36:
      v1116 = &off_24CA13140;
      sub_20FF78CD0((std::string::size_type *)&v1117, a3);
      v211 = *a2;
      v212 = v1127;
      v213 = v1117;
      if (!v1117)
        goto LABEL_1120;
      v214 = v1118;
      if (v1118)
      {
        v215 = (unint64_t *)&v1118->__shared_owners_;
        do
          v216 = __ldxr(v215);
        while (__stxr(v216 + 1, v215));
        do
          v217 = __ldaxr(v215);
        while (__stlxr(v217 - 1, v215));
        if (!v217)
        {
          ((void (*)(std::__shared_weak_count *))v214->__on_zero_shared)(v214);
          std::__shared_weak_count::__release_weak(v214);
        }
        v213 = v1117;
        v218 = v1118;
        if (v1118)
        {
          v219 = (unint64_t *)&v1118->__shared_owners_;
          do
            v220 = __ldxr(v219);
          while (__stxr(v220 + 1, v219));
          do
            v221 = __ldaxr(v219);
          while (__stlxr(v221 - 1, v219));
          if (!v221)
          {
            ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
            std::__shared_weak_count::__release_weak(v218);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v213 + 96))(&v1130, v213, 1);
      else
LABEL_1120:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1148;
      if (!v1121)
        goto LABEL_1148;
      v698 = v1122;
      if (!v1122)
        goto LABEL_1148;
      v699 = v1126;
      v700 = (float *)v1119;
      if (v1128 && v1119)
      {
        v701 = v1117;
        v702 = v1118;
        if (v1118)
        {
          v703 = (unint64_t *)&v1118->__shared_owners_;
          do
            v704 = __ldxr(v703);
          while (__stxr(v704 + 1, v703));
          do
            v705 = __ldaxr(v703);
          while (__stlxr(v705 - 1, v703));
          if (!v705)
          {
            ((void (*)(std::__shared_weak_count *))v702->__on_zero_shared)(v702);
            std::__shared_weak_count::__release_weak(v702);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v701 + 88))(v701, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v700 = (float *)v1119;
      }
      v706 = (4 * v212);
      if (v698 == 1)
        goto LABEL_1141;
      if (!(_DWORD)v706)
        goto LABEL_1148;
      v707 = 0;
      v708 = 4 * v699;
      v709 = 4 * v706;
      do
      {
        if (!v700
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1991;
        }
        v710 = v706;
        v711 = 0;
        v712 = *(_QWORD *)(v211 + 48);
        do
        {
          sub_20E9EDF48(v712, &v700[v711 / 4]);
          v711 += 4;
        }
        while (v709 != v711);
        v700 = (float *)((char *)v700 + v708);
        ++v707;
        v706 = v710;
      }
      while (v707 != v698 - 1);
LABEL_1141:
      if ((_DWORD)v706 && !v700)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1991:
          abort();
        }
        v700 = 0;
      }
      if ((_DWORD)v706)
      {
        v713 = *(_QWORD *)(v211 + 48);
        v714 = 4 * v706;
        do
        {
          sub_20E9EDF48(v713, v700++);
          v714 -= 4;
        }
        while (v714);
      }
LABEL_1148:
      v715 = v1130;
      v1130 = 0;
      if (v715)
        (*(void (**)(uint64_t))(*(_QWORD *)v715 + 8))(v715);
      v473 = v1118;
      if (!v1118)
        return;
      v716 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v716);
      while (__stlxr(v475 - 1, v716));
      goto LABEL_1975;
    case 37:
      v1116 = &off_24CA13238;
      sub_20FF79538(&v1117, a3);
      v330 = *a2;
      v331 = v1127;
      v332 = v1117;
      if (!v1117)
        goto LABEL_1495;
      v333 = v1118;
      if (v1118)
      {
        v334 = (unint64_t *)&v1118->__shared_owners_;
        do
          v335 = __ldxr(v334);
        while (__stxr(v335 + 1, v334));
        do
          v336 = __ldaxr(v334);
        while (__stlxr(v336 - 1, v334));
        if (!v336)
        {
          ((void (*)(std::__shared_weak_count *))v333->__on_zero_shared)(v333);
          std::__shared_weak_count::__release_weak(v333);
        }
        v332 = v1117;
        v337 = v1118;
        if (v1118)
        {
          v338 = (unint64_t *)&v1118->__shared_owners_;
          do
            v339 = __ldxr(v338);
          while (__stxr(v339 + 1, v338));
          do
            v340 = __ldaxr(v338);
          while (__stlxr(v340 - 1, v338));
          if (!v340)
          {
            ((void (*)(std::__shared_weak_count *))v337->__on_zero_shared)(v337);
            std::__shared_weak_count::__release_weak(v337);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v332 + 96))(&v1130, v332, 1);
      else
LABEL_1495:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1523;
      if (!v1121)
        goto LABEL_1523;
      v892 = v1122;
      if (!v1122)
        goto LABEL_1523;
      v893 = v1126;
      v894 = v1119;
      if (v1128 && v1119)
      {
        v895 = v1117;
        v896 = v1118;
        if (v1118)
        {
          v897 = (unint64_t *)&v1118->__shared_owners_;
          do
            v898 = __ldxr(v897);
          while (__stxr(v898 + 1, v897));
          do
            v899 = __ldaxr(v897);
          while (__stlxr(v899 - 1, v897));
          if (!v899)
          {
            ((void (*)(std::__shared_weak_count *))v896->__on_zero_shared)(v896);
            std::__shared_weak_count::__release_weak(v896);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v895 + 88))(v895, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v894 = v1119;
      }
      v900 = (4 * v331);
      if (v892 == 1)
        goto LABEL_1516;
      if (!(_DWORD)v900)
        goto LABEL_1523;
      v901 = 0;
      do
      {
        if (!v894
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_2001;
        }
        v902 = 0;
        v903 = *(_QWORD *)(v330 + 48);
        do
          sub_20E9ED7B4(v903, &v894[v902++]);
        while (v900 != v902);
        v894 += v893;
        ++v901;
      }
      while (v901 != v892 - 1);
LABEL_1516:
      if ((_DWORD)v900 && !v894)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_2001:
          abort();
        }
        v894 = 0;
      }
      if ((_DWORD)v900)
      {
        v904 = *(_QWORD *)(v330 + 48);
        do
        {
          sub_20E9ED7B4(v904, v894++);
          --v900;
        }
        while (v900);
      }
LABEL_1523:
      v905 = v1130;
      v1130 = 0;
      if (v905)
        (*(void (**)(uint64_t))(*(_QWORD *)v905 + 8))(v905);
      v473 = v1118;
      if (!v1118)
        return;
      v906 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v906);
      while (__stlxr(v475 - 1, v906));
      goto LABEL_1975;
    case 38:
      v1116 = &off_24CA13330;
      sub_20FF79DEC(&v1117, a3);
      v384 = *a2;
      v385 = v1127;
      v386 = v1117;
      if (!v1117)
        goto LABEL_1632;
      v387 = v1118;
      if (v1118)
      {
        v388 = (unint64_t *)&v1118->__shared_owners_;
        do
          v389 = __ldxr(v388);
        while (__stxr(v389 + 1, v388));
        do
          v390 = __ldaxr(v388);
        while (__stlxr(v390 - 1, v388));
        if (!v390)
        {
          ((void (*)(std::__shared_weak_count *))v387->__on_zero_shared)(v387);
          std::__shared_weak_count::__release_weak(v387);
        }
        v386 = v1117;
        v391 = v1118;
        if (v1118)
        {
          v392 = (unint64_t *)&v1118->__shared_owners_;
          do
            v393 = __ldxr(v392);
          while (__stxr(v393 + 1, v392));
          do
            v394 = __ldaxr(v392);
          while (__stlxr(v394 - 1, v392));
          if (!v394)
          {
            ((void (*)(std::__shared_weak_count *))v391->__on_zero_shared)(v391);
            std::__shared_weak_count::__release_weak(v391);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v386 + 96))(&v1130, v386, 1);
      else
LABEL_1632:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1660;
      if (!v1121)
        goto LABEL_1660;
      v956 = v1122;
      if (!v1122)
        goto LABEL_1660;
      v957 = v1126;
      v958 = v1119;
      if (v1128 && v1119)
      {
        v959 = v1117;
        v960 = v1118;
        if (v1118)
        {
          v961 = (unint64_t *)&v1118->__shared_owners_;
          do
            v962 = __ldxr(v961);
          while (__stxr(v962 + 1, v961));
          do
            v963 = __ldaxr(v961);
          while (__stlxr(v963 - 1, v961));
          if (!v963)
          {
            ((void (*)(std::__shared_weak_count *))v960->__on_zero_shared)(v960);
            std::__shared_weak_count::__release_weak(v960);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v959 + 88))(v959, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v958 = v1119;
      }
      v964 = (4 * v385);
      if (v956 == 1)
        goto LABEL_1653;
      if (!(_DWORD)v964)
        goto LABEL_1660;
      v965 = 0;
      v966 = 2 * v957;
      v967 = 2 * v964;
      do
      {
        if (!v958
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_2003;
        }
        v968 = v964;
        v969 = 0;
        v970 = *(_QWORD *)(v384 + 48);
        do
        {
          sub_20E9ED948(v970, &v958[v969 / 2]);
          v969 += 2;
        }
        while (v967 != v969);
        v958 = (_WORD *)((char *)v958 + v966);
        ++v965;
        v964 = v968;
      }
      while (v965 != v956 - 1);
LABEL_1653:
      if ((_DWORD)v964 && !v958)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_2003:
          abort();
        }
        v958 = 0;
      }
      if ((_DWORD)v964)
      {
        v971 = *(_QWORD *)(v384 + 48);
        v972 = 2 * v964;
        do
        {
          sub_20E9ED948(v971, v958++);
          v972 -= 2;
        }
        while (v972);
      }
LABEL_1660:
      v973 = v1130;
      v1130 = 0;
      if (v973)
        (*(void (**)(uint64_t))(*(_QWORD *)v973 + 8))(v973);
      v473 = v1118;
      if (!v1118)
        return;
      v974 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v974);
      while (__stlxr(v475 - 1, v974));
      goto LABEL_1975;
    case 39:
      v1116 = &off_24CA13428;
      sub_20FF7A6A4(&v1117, a3);
      v135 = *a2;
      v136 = v1127;
      v137 = v1117;
      if (!v1117)
        goto LABEL_913;
      v138 = v1118;
      if (v1118)
      {
        v139 = (unint64_t *)&v1118->__shared_owners_;
        do
          v140 = __ldxr(v139);
        while (__stxr(v140 + 1, v139));
        do
          v141 = __ldaxr(v139);
        while (__stlxr(v141 - 1, v139));
        if (!v141)
        {
          ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
          std::__shared_weak_count::__release_weak(v138);
        }
        v137 = v1117;
        v142 = v1118;
        if (v1118)
        {
          v143 = (unint64_t *)&v1118->__shared_owners_;
          do
            v144 = __ldxr(v143);
          while (__stxr(v144 + 1, v143));
          do
            v145 = __ldaxr(v143);
          while (__stlxr(v145 - 1, v143));
          if (!v145)
          {
            ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
            std::__shared_weak_count::__release_weak(v142);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v137 + 96))(&v1130, v137, 1);
      else
LABEL_913:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1790;
      if (!v1121)
        goto LABEL_1790;
      v591 = v1122;
      if (!v1122)
        goto LABEL_1790;
      v592 = v1126;
      v593 = v1119;
      if (v1128 && v1119)
      {
        v594 = v1117;
        v595 = v1118;
        if (v1118)
        {
          v596 = (unint64_t *)&v1118->__shared_owners_;
          do
            v597 = __ldxr(v596);
          while (__stxr(v597 + 1, v596));
          do
            v598 = __ldaxr(v596);
          while (__stlxr(v598 - 1, v596));
          if (!v598)
          {
            ((void (*)(std::__shared_weak_count *))v595->__on_zero_shared)(v595);
            std::__shared_weak_count::__release_weak(v595);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v594 + 88))(v594, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v593 = v1119;
      }
      v599 = v591 - 1;
      v1105 = (4 * v136);
      if (!v599)
        goto LABEL_934;
      if (!(4 * v136))
        goto LABEL_1790;
      for (jj = 0; jj != v599; ++jj)
      {
        if (!v593
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_937;
        }
        v601 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v135 + 48), &v1115);
          v593[v601++] = v1115;
        }
        while (v1105 != v601);
        v593 += v592;
      }
LABEL_934:
      if (!(_DWORD)v1105 || v593)
      {
        if (!(_DWORD)v1105)
          goto LABEL_1790;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_937:
        abort();
      }
      v1031 = 2 * v1105;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v135 + 48), &v1115);
        *v593++ = v1115;
        v1031 -= 2;
      }
      while (v1031);
LABEL_1790:
      v1032 = v1130;
      v1130 = 0;
      if (v1032)
        (*(void (**)(uint64_t))(*(_QWORD *)v1032 + 8))(v1032);
      v473 = v1118;
      if (!v1118)
        return;
      v1033 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1033);
      while (__stlxr(v475 - 1, v1033));
      goto LABEL_1975;
    case 40:
      v1116 = &off_24CA13520;
      sub_20FF7AF5C(&v1117, a3);
      v102 = *a2;
      v103 = v1127;
      v104 = v1117;
      if (!v1117)
        goto LABEL_832;
      v105 = v1118;
      if (v1118)
      {
        v106 = (unint64_t *)&v1118->__shared_owners_;
        do
          v107 = __ldxr(v106);
        while (__stxr(v107 + 1, v106));
        do
          v108 = __ldaxr(v106);
        while (__stlxr(v108 - 1, v106));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
        v104 = v1117;
        v109 = v1118;
        if (v1118)
        {
          v110 = (unint64_t *)&v1118->__shared_owners_;
          do
            v111 = __ldxr(v110);
          while (__stxr(v111 + 1, v110));
          do
            v112 = __ldaxr(v110);
          while (__stlxr(v112 - 1, v110));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v104 + 96))(&v1130, v104, 1);
      else
LABEL_832:
        v1130 = 0;
      if (!v1120)
        goto LABEL_860;
      if (!v1121)
        goto LABEL_860;
      v549 = v1122;
      if (!v1122)
        goto LABEL_860;
      v550 = v1126;
      v551 = (float *)v1119;
      if (v1128 && v1119)
      {
        v552 = v1117;
        v553 = v1118;
        if (v1118)
        {
          v554 = (unint64_t *)&v1118->__shared_owners_;
          do
            v555 = __ldxr(v554);
          while (__stxr(v555 + 1, v554));
          do
            v556 = __ldaxr(v554);
          while (__stlxr(v556 - 1, v554));
          if (!v556)
          {
            ((void (*)(std::__shared_weak_count *))v553->__on_zero_shared)(v553);
            std::__shared_weak_count::__release_weak(v553);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v552 + 88))(v552, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v551 = (float *)v1119;
      }
      v557 = (4 * v103);
      if (v549 == 1)
        goto LABEL_853;
      if (!(_DWORD)v557)
        goto LABEL_860;
      v558 = 0;
      v559 = 4 * v550;
      v560 = 4 * v557;
      do
      {
        if (!v551
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1982;
        }
        v561 = v557;
        v562 = 0;
        v563 = *(_QWORD *)(v102 + 48);
        do
        {
          sub_20E9EDF48(v563, &v551[v562 / 4]);
          v562 += 4;
        }
        while (v560 != v562);
        v551 = (float *)((char *)v551 + v559);
        ++v558;
        v557 = v561;
      }
      while (v558 != v549 - 1);
LABEL_853:
      if ((_DWORD)v557 && !v551)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1982:
          abort();
        }
        v551 = 0;
      }
      if ((_DWORD)v557)
      {
        v564 = *(_QWORD *)(v102 + 48);
        v565 = 4 * v557;
        do
        {
          sub_20E9EDF48(v564, v551++);
          v565 -= 4;
        }
        while (v565);
      }
LABEL_860:
      v566 = v1130;
      v1130 = 0;
      if (v566)
        (*(void (**)(uint64_t))(*(_QWORD *)v566 + 8))(v566);
      v473 = v1118;
      if (!v1118)
        return;
      v567 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v567);
      while (__stlxr(v475 - 1, v567));
      goto LABEL_1975;
    default:
      return;
  }
}

void sub_20FF82468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF83108(int a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  std::__shared_weak_count *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  unint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  std::__shared_weak_count *v54;
  unint64_t *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  std::__shared_weak_count *v61;
  unint64_t *v62;
  unint64_t v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  std::__shared_weak_count *v72;
  unint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  std::__shared_weak_count *v76;
  unint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  std::__shared_weak_count *v83;
  unint64_t *v84;
  unint64_t v85;
  unint64_t v86;
  std::__shared_weak_count *v87;
  unint64_t *v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  std::__shared_weak_count *v94;
  unint64_t *v95;
  unint64_t v96;
  unint64_t v97;
  std::__shared_weak_count *v98;
  unint64_t *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  std::__shared_weak_count *v109;
  unint64_t *v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  std::__shared_weak_count *v120;
  unint64_t *v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  std::__shared_weak_count *v127;
  unint64_t *v128;
  unint64_t v129;
  unint64_t v130;
  std::__shared_weak_count *v131;
  unint64_t *v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  std::__shared_weak_count *v138;
  unint64_t *v139;
  unint64_t v140;
  unint64_t v141;
  std::__shared_weak_count *v142;
  unint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  std::__shared_weak_count *v149;
  unint64_t *v150;
  unint64_t v151;
  unint64_t v152;
  std::__shared_weak_count *v153;
  unint64_t *v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  std::__shared_weak_count *v160;
  unint64_t *v161;
  unint64_t v162;
  unint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  std::__shared_weak_count *v171;
  unint64_t *v172;
  unint64_t v173;
  unint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  std::__shared_weak_count *v182;
  unint64_t *v183;
  unint64_t v184;
  unint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  std::__shared_weak_count *v192;
  unint64_t *v193;
  unint64_t v194;
  unint64_t v195;
  std::__shared_weak_count *v196;
  unint64_t *v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  int v201;
  uint64_t v202;
  std::__shared_weak_count *v203;
  unint64_t *v204;
  unint64_t v205;
  unint64_t v206;
  std::__shared_weak_count *v207;
  unint64_t *v208;
  unint64_t v209;
  unint64_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  std::__shared_weak_count *v214;
  unint64_t *v215;
  unint64_t v216;
  unint64_t v217;
  std::__shared_weak_count *v218;
  unint64_t *v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  std::__shared_weak_count *v225;
  unint64_t *v226;
  unint64_t v227;
  unint64_t v228;
  std::__shared_weak_count *v229;
  unint64_t *v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  std::__shared_weak_count *v236;
  unint64_t *v237;
  unint64_t v238;
  unint64_t v239;
  std::__shared_weak_count *v240;
  unint64_t *v241;
  unint64_t v242;
  unint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  std::__shared_weak_count *v247;
  unint64_t *v248;
  unint64_t v249;
  unint64_t v250;
  std::__shared_weak_count *v251;
  unint64_t *v252;
  unint64_t v253;
  unint64_t v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  std::__shared_weak_count *v258;
  unint64_t *v259;
  unint64_t v260;
  unint64_t v261;
  std::__shared_weak_count *v262;
  unint64_t *v263;
  unint64_t v264;
  unint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  std::__shared_weak_count *v269;
  unint64_t *v270;
  unint64_t v271;
  unint64_t v272;
  std::__shared_weak_count *v273;
  unint64_t *v274;
  unint64_t v275;
  unint64_t v276;
  uint64_t v277;
  int v278;
  uint64_t v279;
  std::__shared_weak_count *v280;
  unint64_t *v281;
  unint64_t v282;
  unint64_t v283;
  std::__shared_weak_count *v284;
  unint64_t *v285;
  unint64_t v286;
  unint64_t v287;
  uint64_t v288;
  int v289;
  uint64_t v290;
  std::__shared_weak_count *v291;
  unint64_t *v292;
  unint64_t v293;
  unint64_t v294;
  std::__shared_weak_count *v295;
  unint64_t *v296;
  unint64_t v297;
  unint64_t v298;
  uint64_t v299;
  int v300;
  uint64_t v301;
  std::__shared_weak_count *v302;
  unint64_t *v303;
  unint64_t v304;
  unint64_t v305;
  std::__shared_weak_count *v306;
  unint64_t *v307;
  unint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  std::__shared_weak_count *v312;
  unint64_t *v313;
  unint64_t v314;
  unint64_t v315;
  std::__shared_weak_count *v316;
  unint64_t *v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  uint64_t v321;
  std::__shared_weak_count *v322;
  unint64_t *v323;
  unint64_t v324;
  unint64_t v325;
  std::__shared_weak_count *v326;
  unint64_t *v327;
  unint64_t v328;
  unint64_t v329;
  uint64_t v330;
  int v331;
  uint64_t v332;
  std::__shared_weak_count *v333;
  unint64_t *v334;
  unint64_t v335;
  unint64_t v336;
  std::__shared_weak_count *v337;
  unint64_t *v338;
  unint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  std::__shared_weak_count *v343;
  unint64_t *v344;
  unint64_t v345;
  unint64_t v346;
  std::__shared_weak_count *v347;
  unint64_t *v348;
  unint64_t v349;
  unint64_t v350;
  uint64_t v351;
  int v352;
  uint64_t v353;
  std::__shared_weak_count *v354;
  unint64_t *v355;
  unint64_t v356;
  unint64_t v357;
  std::__shared_weak_count *v358;
  unint64_t *v359;
  unint64_t v360;
  unint64_t v361;
  uint64_t v362;
  int v363;
  uint64_t v364;
  std::__shared_weak_count *v365;
  unint64_t *v366;
  unint64_t v367;
  unint64_t v368;
  std::__shared_weak_count *v369;
  unint64_t *v370;
  unint64_t v371;
  unint64_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  std::__shared_weak_count *v376;
  unint64_t *v377;
  unint64_t v378;
  unint64_t v379;
  std::__shared_weak_count *v380;
  unint64_t *v381;
  unint64_t v382;
  unint64_t v383;
  uint64_t v384;
  int v385;
  uint64_t v386;
  std::__shared_weak_count *v387;
  unint64_t *v388;
  unint64_t v389;
  unint64_t v390;
  std::__shared_weak_count *v391;
  unint64_t *v392;
  unint64_t v393;
  unint64_t v394;
  uint64_t v395;
  int v396;
  uint64_t v397;
  std::__shared_weak_count *v398;
  unint64_t *v399;
  unint64_t v400;
  unint64_t v401;
  std::__shared_weak_count *v402;
  unint64_t *v403;
  unint64_t v404;
  unint64_t v405;
  uint64_t v406;
  int v407;
  uint64_t v408;
  std::__shared_weak_count *v409;
  unint64_t *v410;
  unint64_t v411;
  unint64_t v412;
  std::__shared_weak_count *v413;
  unint64_t *v414;
  unint64_t v415;
  unint64_t v416;
  uint64_t v417;
  uint64_t v418;
  std::__shared_weak_count *v419;
  unint64_t *v420;
  unint64_t v421;
  unint64_t v422;
  std::__shared_weak_count *v423;
  unint64_t *v424;
  unint64_t v425;
  unint64_t v426;
  uint64_t v427;
  int v428;
  uint64_t v429;
  std::__shared_weak_count *v430;
  unint64_t *v431;
  unint64_t v432;
  unint64_t v433;
  std::__shared_weak_count *v434;
  unint64_t *v435;
  unint64_t v436;
  unint64_t v437;
  int v438;
  uint64_t v439;
  _WORD *v440;
  uint64_t v441;
  std::__shared_weak_count *v442;
  unint64_t *v443;
  unint64_t v444;
  unint64_t v445;
  int v446;
  int m;
  uint64_t v448;
  int v449;
  uint64_t v450;
  _WORD *v451;
  uint64_t v452;
  std::__shared_weak_count *v453;
  unint64_t *v454;
  unint64_t v455;
  unint64_t v456;
  int v457;
  uint64_t v458;
  int v459;
  uint64_t v460;
  _BYTE *v461;
  uint64_t v462;
  std::__shared_weak_count *v463;
  unint64_t *v464;
  unint64_t v465;
  unint64_t v466;
  uint64_t v467;
  int v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  std::__shared_weak_count *v473;
  unint64_t *v474;
  unint64_t v475;
  int v476;
  uint64_t v477;
  float *v478;
  uint64_t v479;
  std::__shared_weak_count *v480;
  unint64_t *v481;
  unint64_t v482;
  unint64_t v483;
  int v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  int v488;
  uint64_t v489;
  _BYTE *v490;
  uint64_t v491;
  std::__shared_weak_count *v492;
  unint64_t *v493;
  unint64_t v494;
  unint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  unint64_t *v502;
  int v503;
  uint64_t v504;
  float *v505;
  uint64_t v506;
  std::__shared_weak_count *v507;
  unint64_t *v508;
  unint64_t v509;
  unint64_t v510;
  int v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  int v515;
  uint64_t v516;
  _WORD *v517;
  uint64_t v518;
  std::__shared_weak_count *v519;
  unint64_t *v520;
  unint64_t v521;
  unint64_t v522;
  uint64_t v523;
  int v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  unint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  unint64_t *v533;
  int v534;
  uint64_t v535;
  _BYTE *v536;
  uint64_t v537;
  std::__shared_weak_count *v538;
  unint64_t *v539;
  unint64_t v540;
  unint64_t v541;
  uint64_t v542;
  int v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  unint64_t *v548;
  int v549;
  uint64_t v550;
  float *v551;
  uint64_t v552;
  std::__shared_weak_count *v553;
  unint64_t *v554;
  unint64_t v555;
  unint64_t v556;
  uint64_t v557;
  int v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  unint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  unint64_t *v567;
  int v568;
  uint64_t v569;
  _WORD *v570;
  uint64_t v571;
  std::__shared_weak_count *v572;
  unint64_t *v573;
  unint64_t v574;
  unint64_t v575;
  int v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  int v580;
  uint64_t v581;
  _WORD *v582;
  uint64_t v583;
  std::__shared_weak_count *v584;
  unint64_t *v585;
  unint64_t v586;
  unint64_t v587;
  int v588;
  int j;
  uint64_t v590;
  int v591;
  uint64_t v592;
  _WORD *v593;
  uint64_t v594;
  std::__shared_weak_count *v595;
  unint64_t *v596;
  unint64_t v597;
  unint64_t v598;
  int v599;
  int jj;
  uint64_t v601;
  int v602;
  uint64_t v603;
  _WORD *v604;
  uint64_t v605;
  std::__shared_weak_count *v606;
  unint64_t *v607;
  unint64_t v608;
  unint64_t v609;
  int v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  int v614;
  uint64_t v615;
  _WORD *v616;
  uint64_t v617;
  std::__shared_weak_count *v618;
  unint64_t *v619;
  unint64_t v620;
  unint64_t v621;
  uint64_t v622;
  int v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  unint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  unint64_t *v632;
  int v633;
  uint64_t v634;
  _WORD *v635;
  uint64_t v636;
  std::__shared_weak_count *v637;
  unint64_t *v638;
  unint64_t v639;
  unint64_t v640;
  int v641;
  int n;
  uint64_t v643;
  int v644;
  uint64_t v645;
  _WORD *v646;
  uint64_t v647;
  std::__shared_weak_count *v648;
  unint64_t *v649;
  unint64_t v650;
  unint64_t v651;
  uint64_t v652;
  int v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  unint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  unint64_t *v662;
  int v663;
  uint64_t v664;
  float *v665;
  uint64_t v666;
  std::__shared_weak_count *v667;
  unint64_t *v668;
  unint64_t v669;
  unint64_t v670;
  int v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  unint64_t *v678;
  int v679;
  uint64_t v680;
  float *v681;
  uint64_t v682;
  std::__shared_weak_count *v683;
  unint64_t *v684;
  unint64_t v685;
  unint64_t v686;
  uint64_t v687;
  int v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  unint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  unint64_t *v697;
  int v698;
  uint64_t v699;
  float *v700;
  uint64_t v701;
  std::__shared_weak_count *v702;
  unint64_t *v703;
  unint64_t v704;
  unint64_t v705;
  uint64_t v706;
  int v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  unint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  unint64_t *v716;
  int v717;
  uint64_t v718;
  _WORD *v719;
  uint64_t v720;
  std::__shared_weak_count *v721;
  unint64_t *v722;
  unint64_t v723;
  unint64_t v724;
  int v725;
  int ii;
  uint64_t v727;
  int v728;
  uint64_t v729;
  _WORD *v730;
  uint64_t v731;
  std::__shared_weak_count *v732;
  unint64_t *v733;
  unint64_t v734;
  unint64_t v735;
  uint64_t v736;
  int v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  unint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  unint64_t *v746;
  int v747;
  uint64_t v748;
  _WORD *v749;
  uint64_t v750;
  std::__shared_weak_count *v751;
  unint64_t *v752;
  unint64_t v753;
  unint64_t v754;
  uint64_t v755;
  int v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  unint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  unint64_t *v765;
  int v766;
  uint64_t v767;
  float *v768;
  uint64_t v769;
  std::__shared_weak_count *v770;
  unint64_t *v771;
  unint64_t v772;
  unint64_t v773;
  uint64_t v774;
  int v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  unint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  unint64_t *v784;
  int v785;
  uint64_t v786;
  _BYTE *v787;
  uint64_t v788;
  std::__shared_weak_count *v789;
  unint64_t *v790;
  unint64_t v791;
  unint64_t v792;
  uint64_t v793;
  int v794;
  int v795;
  uint64_t v796;
  uint64_t v797;
  int v798;
  uint64_t v799;
  _BYTE *v800;
  uint64_t v801;
  std::__shared_weak_count *v802;
  unint64_t *v803;
  unint64_t v804;
  unint64_t v805;
  uint64_t v806;
  int v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  unint64_t *v812;
  int v813;
  uint64_t v814;
  float *v815;
  uint64_t v816;
  std::__shared_weak_count *v817;
  unint64_t *v818;
  unint64_t v819;
  unint64_t v820;
  uint64_t v821;
  int v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  unint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  unint64_t *v831;
  int v832;
  uint64_t v833;
  float *v834;
  uint64_t v835;
  std::__shared_weak_count *v836;
  unint64_t *v837;
  unint64_t v838;
  unint64_t v839;
  uint64_t v840;
  int v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  unint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  unint64_t *v850;
  int v851;
  uint64_t v852;
  _WORD *v853;
  uint64_t v854;
  std::__shared_weak_count *v855;
  unint64_t *v856;
  unint64_t v857;
  unint64_t v858;
  int v859;
  uint64_t i;
  int v861;
  uint64_t v862;
  _WORD *v863;
  uint64_t v864;
  std::__shared_weak_count *v865;
  unint64_t *v866;
  unint64_t v867;
  unint64_t v868;
  int v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  unint64_t *v876;
  int v877;
  uint64_t v878;
  _BYTE *v879;
  uint64_t v880;
  std::__shared_weak_count *v881;
  unint64_t *v882;
  unint64_t v883;
  unint64_t v884;
  int v885;
  int v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  unint64_t *v891;
  int v892;
  uint64_t v893;
  _BYTE *v894;
  uint64_t v895;
  std::__shared_weak_count *v896;
  unint64_t *v897;
  unint64_t v898;
  unint64_t v899;
  uint64_t v900;
  int v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  unint64_t *v906;
  int v907;
  uint64_t v908;
  _WORD *v909;
  uint64_t v910;
  std::__shared_weak_count *v911;
  unint64_t *v912;
  unint64_t v913;
  unint64_t v914;
  int v915;
  uint64_t v916;
  int v917;
  uint64_t v918;
  _WORD *v919;
  uint64_t v920;
  std::__shared_weak_count *v921;
  unint64_t *v922;
  unint64_t v923;
  unint64_t v924;
  int v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  int v929;
  uint64_t v930;
  _BYTE *v931;
  uint64_t v932;
  std::__shared_weak_count *v933;
  unint64_t *v934;
  unint64_t v935;
  unint64_t v936;
  uint64_t v937;
  int v938;
  uint64_t v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  unint64_t *v943;
  int v944;
  uint64_t v945;
  float *v946;
  uint64_t v947;
  std::__shared_weak_count *v948;
  unint64_t *v949;
  unint64_t v950;
  unint64_t v951;
  int v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  int v956;
  uint64_t v957;
  _WORD *v958;
  uint64_t v959;
  std::__shared_weak_count *v960;
  unint64_t *v961;
  unint64_t v962;
  unint64_t v963;
  uint64_t v964;
  int v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  unint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  unint64_t *v974;
  int v975;
  uint64_t v976;
  _WORD *v977;
  uint64_t v978;
  std::__shared_weak_count *v979;
  unint64_t *v980;
  unint64_t v981;
  unint64_t v982;
  int v983;
  int k;
  uint64_t v985;
  int v986;
  uint64_t v987;
  _BYTE *v988;
  uint64_t v989;
  std::__shared_weak_count *v990;
  unint64_t *v991;
  unint64_t v992;
  unint64_t v993;
  uint64_t v994;
  int v995;
  int v996;
  uint64_t v997;
  uint64_t v998;
  int v999;
  uint64_t v1000;
  _WORD *v1001;
  uint64_t v1002;
  std::__shared_weak_count *v1003;
  unint64_t *v1004;
  unint64_t v1005;
  unint64_t v1006;
  int v1007;
  uint64_t v1008;
  int v1009;
  uint64_t v1010;
  _BYTE *v1011;
  uint64_t v1012;
  std::__shared_weak_count *v1013;
  unint64_t *v1014;
  unint64_t v1015;
  unint64_t v1016;
  uint64_t v1017;
  int v1018;
  int v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  unint64_t *v1024;
  uint64_t v1025;
  uint64_t v1026;
  unint64_t *v1027;
  uint64_t v1028;
  uint64_t v1029;
  unint64_t *v1030;
  uint64_t v1031;
  uint64_t v1032;
  unint64_t *v1033;
  uint64_t v1034;
  uint64_t v1035;
  unint64_t *v1036;
  uint64_t v1037;
  uint64_t v1038;
  unint64_t *v1039;
  uint64_t v1040;
  uint64_t v1041;
  unint64_t *v1042;
  uint64_t v1043;
  uint64_t v1044;
  unint64_t *v1045;
  uint64_t v1046;
  uint64_t v1047;
  unint64_t *v1048;
  uint64_t v1049;
  uint64_t v1050;
  unint64_t *v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  unint64_t *v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  unint64_t *v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;
  unint64_t *v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  unint64_t *v1067;
  uint64_t v1068;
  uint64_t v1069;
  unint64_t *v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  unint64_t *v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  unint64_t *v1078;
  uint64_t v1079;
  uint64_t v1080;
  unint64_t *v1081;
  uint64_t v1082;
  uint64_t v1083;
  unint64_t *v1084;
  uint64_t v1085;
  int v1086;
  int v1087;
  int v1088;
  int v1089;
  uint64_t v1090;
  int v1091;
  int v1092;
  uint64_t v1093;
  int v1094;
  uint64_t v1095;
  uint64_t v1096;
  uint64_t v1097;
  int v1098;
  int v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  int v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  int v1113;
  int v1114;
  __int16 v1115;
  uint64_t (**v1116)();
  uint64_t v1117;
  std::__shared_weak_count *v1118;
  _BYTE *v1119;
  unsigned int v1120;
  int v1121;
  int v1122;
  unsigned int v1123;
  char v1124;
  char v1125;
  unsigned int v1126;
  int v1127;
  char v1128;
  char v1129;
  uint64_t v1130;

  switch(a1)
  {
    case 0:
      sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_21023DDB0);
      abort();
    case 1:
      v1116 = &off_24C9C05B0;
      sub_20FF68984(&v1117, a3);
      v4 = *a2;
      v5 = v1120;
      v6 = v1117;
      if (!v1117)
        goto LABEL_1462;
      v7 = v1118;
      if (v1118)
      {
        p_shared_owners = (unint64_t *)&v1118->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1117;
        v11 = v1118;
        if (v1118)
        {
          v12 = (unint64_t *)&v1118->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(&v1130, v6, 1);
      else
LABEL_1462:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1489;
      v877 = v1121;
      if (!v1121)
        goto LABEL_1489;
      v878 = v1123;
      v879 = v1119;
      if (v1124 && v1119)
      {
        v880 = v1117;
        v881 = v1118;
        if (v1118)
        {
          v882 = (unint64_t *)&v1118->__shared_owners_;
          do
            v883 = __ldxr(v882);
          while (__stxr(v883 + 1, v882));
          do
            v884 = __ldaxr(v882);
          while (__stlxr(v884 - 1, v882));
          if (!v884)
          {
            ((void (*)(std::__shared_weak_count *))v881->__on_zero_shared)(v881);
            std::__shared_weak_count::__release_weak(v881);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v880 + 88))(v880, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v879 = v1119;
      }
      v885 = v877 - 1;
      if (v877 == 1)
        goto LABEL_1482;
      if (!(_DWORD)v5)
        goto LABEL_1489;
      v886 = 0;
      do
      {
        if (!v879
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1999;
        }
        v887 = 0;
        v888 = *(_QWORD *)(v4 + 48);
        do
          sub_20E9ED7B4(v888, &v879[v887++]);
        while (v5 != v887);
        v879 += v878;
        ++v886;
      }
      while (v886 != v885);
LABEL_1482:
      if ((_DWORD)v5 && !v879)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1999:
          abort();
        }
        v879 = 0;
      }
      if ((_DWORD)v5)
      {
        v889 = *(_QWORD *)(v4 + 48);
        do
        {
          sub_20E9ED7B4(v889, v879++);
          --v5;
        }
        while (v5);
      }
LABEL_1489:
      v890 = v1130;
      v1130 = 0;
      if (v890)
        (*(void (**)(uint64_t))(*(_QWORD *)v890 + 8))(v890);
      v473 = v1118;
      if (!v1118)
        return;
      v891 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v891);
      while (__stlxr(v475 - 1, v891));
      goto LABEL_1975;
    case 2:
      v1116 = &off_24C9F0B30;
      sub_20FF68BA8(&v1117, a3);
      v320 = *a2;
      v1097 = v1120;
      v321 = v1117;
      if (!v1117)
        goto LABEL_1429;
      v322 = v1118;
      if (v1118)
      {
        v323 = (unint64_t *)&v1118->__shared_owners_;
        do
          v324 = __ldxr(v323);
        while (__stxr(v324 + 1, v323));
        do
          v325 = __ldaxr(v323);
        while (__stlxr(v325 - 1, v323));
        if (!v325)
        {
          ((void (*)(std::__shared_weak_count *))v322->__on_zero_shared)(v322);
          std::__shared_weak_count::__release_weak(v322);
        }
        v321 = v1117;
        v326 = v1118;
        if (v1118)
        {
          v327 = (unint64_t *)&v1118->__shared_owners_;
          do
            v328 = __ldxr(v327);
          while (__stxr(v328 + 1, v327));
          do
            v329 = __ldaxr(v327);
          while (__stlxr(v329 - 1, v327));
          if (!v329)
          {
            ((void (*)(std::__shared_weak_count *))v326->__on_zero_shared)(v326);
            std::__shared_weak_count::__release_weak(v326);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v321 + 96))(&v1130, v321, 1);
      else
LABEL_1429:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1456;
      v861 = v1121;
      if (!v1121)
        goto LABEL_1456;
      v862 = v1123;
      v863 = v1119;
      if (v1124 && v1119)
      {
        v864 = v1117;
        v865 = v1118;
        if (v1118)
        {
          v866 = (unint64_t *)&v1118->__shared_owners_;
          do
            v867 = __ldxr(v866);
          while (__stxr(v867 + 1, v866));
          do
            v868 = __ldaxr(v866);
          while (__stlxr(v868 - 1, v866));
          if (!v868)
          {
            ((void (*)(std::__shared_weak_count *))v865->__on_zero_shared)(v865);
            std::__shared_weak_count::__release_weak(v865);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v864 + 88))(v864, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v863 = v1119;
      }
      if (v861 == 1)
        goto LABEL_1449;
      if (!(_DWORD)v1097)
        goto LABEL_1456;
      v869 = 0;
      v870 = 2 * v862;
      do
      {
        if (!v863
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1998;
        }
        v871 = 0;
        v872 = *(_QWORD *)(v320 + 48);
        do
          sub_20E9ED948(v872, &v863[v871++]);
        while (v1097 != v871);
        v863 = (_WORD *)((char *)v863 + v870);
        ++v869;
      }
      while (v869 != v861 - 1);
LABEL_1449:
      if ((_DWORD)v1097 && !v863)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1998:
          abort();
        }
        v863 = 0;
      }
      if ((_DWORD)v1097)
      {
        v873 = *(_QWORD *)(v320 + 48);
        v874 = 2 * v1097;
        do
        {
          sub_20E9ED948(v873, v863++);
          v874 -= 2;
        }
        while (v874);
      }
LABEL_1456:
      v875 = v1130;
      v1130 = 0;
      if (v875)
        (*(void (**)(uint64_t))(*(_QWORD *)v875 + 8))(v875);
      v473 = v1118;
      if (!v1118)
        return;
      v876 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v876);
      while (__stlxr(v475 - 1, v876));
      goto LABEL_1975;
    case 3:
      v1116 = &off_24C9C07A0;
      sub_20FF68DCC(&v1117, a3);
      v310 = *a2;
      v1096 = v1120;
      v311 = v1117;
      if (!v1117)
        goto LABEL_1405;
      v312 = v1118;
      if (v1118)
      {
        v313 = (unint64_t *)&v1118->__shared_owners_;
        do
          v314 = __ldxr(v313);
        while (__stxr(v314 + 1, v313));
        do
          v315 = __ldaxr(v313);
        while (__stlxr(v315 - 1, v313));
        if (!v315)
        {
          ((void (*)(std::__shared_weak_count *))v312->__on_zero_shared)(v312);
          std::__shared_weak_count::__release_weak(v312);
        }
        v311 = v1117;
        v316 = v1118;
        if (v1118)
        {
          v317 = (unint64_t *)&v1118->__shared_owners_;
          do
            v318 = __ldxr(v317);
          while (__stxr(v318 + 1, v317));
          do
            v319 = __ldaxr(v317);
          while (__stlxr(v319 - 1, v317));
          if (!v319)
          {
            ((void (*)(std::__shared_weak_count *))v316->__on_zero_shared)(v316);
            std::__shared_weak_count::__release_weak(v316);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v311 + 96))(&v1130, v311, 1);
      else
LABEL_1405:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1817;
      v851 = v1121;
      if (!v1121)
        goto LABEL_1817;
      v852 = v1123;
      v853 = v1119;
      if (v1124 && v1119)
      {
        v854 = v1117;
        v855 = v1118;
        if (v1118)
        {
          v856 = (unint64_t *)&v1118->__shared_owners_;
          do
            v857 = __ldxr(v856);
          while (__stxr(v857 + 1, v856));
          do
            v858 = __ldaxr(v856);
          while (__stlxr(v858 - 1, v856));
          if (!v858)
          {
            ((void (*)(std::__shared_weak_count *))v855->__on_zero_shared)(v855);
            std::__shared_weak_count::__release_weak(v855);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v854 + 88))(v854, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v853 = v1119;
      }
      if (v851 == 1)
        goto LABEL_1425;
      if (!(_DWORD)v1096)
        goto LABEL_1817;
      v859 = 0;
      do
      {
        if (!v853
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1428;
        }
        for (i = 0; i != v1096; ++i)
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v310 + 48), &v1115);
          v853[i] = v1115;
        }
        v853 += v852;
        ++v859;
      }
      while (v859 != v851 - 1);
LABEL_1425:
      if (!(_DWORD)v1096 || v853)
      {
        if (!(_DWORD)v1096)
          goto LABEL_1817;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1428:
        abort();
      }
      v1040 = 2 * v1096;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v310 + 48), &v1115);
        *v853++ = v1115;
        v1040 -= 2;
      }
      while (v1040);
LABEL_1817:
      v1041 = v1130;
      v1130 = 0;
      if (v1041)
        (*(void (**)(uint64_t))(*(_QWORD *)v1041 + 8))(v1041);
      v473 = v1118;
      if (!v1118)
        return;
      v1042 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1042);
      while (__stlxr(v475 - 1, v1042));
      goto LABEL_1975;
    case 4:
      v1116 = &off_24C9AD6F0;
      sub_20FF69410(&v1117, a3);
      v190 = *a2;
      v1095 = v1120;
      v191 = v1117;
      if (!v1117)
        goto LABEL_1053;
      v192 = v1118;
      if (v1118)
      {
        v193 = (unint64_t *)&v1118->__shared_owners_;
        do
          v194 = __ldxr(v193);
        while (__stxr(v194 + 1, v193));
        do
          v195 = __ldaxr(v193);
        while (__stlxr(v195 - 1, v193));
        if (!v195)
        {
          ((void (*)(std::__shared_weak_count *))v192->__on_zero_shared)(v192);
          std::__shared_weak_count::__release_weak(v192);
        }
        v191 = v1117;
        v196 = v1118;
        if (v1118)
        {
          v197 = (unint64_t *)&v1118->__shared_owners_;
          do
            v198 = __ldxr(v197);
          while (__stxr(v198 + 1, v197));
          do
            v199 = __ldaxr(v197);
          while (__stlxr(v199 - 1, v197));
          if (!v199)
          {
            ((void (*)(std::__shared_weak_count *))v196->__on_zero_shared)(v196);
            std::__shared_weak_count::__release_weak(v196);
          }
        }
      }
      if (v1125)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v191 + 96))(&v1130, v191, 1);
      else
LABEL_1053:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1080;
      v663 = v1121;
      if (!v1121)
        goto LABEL_1080;
      v664 = v1123;
      v665 = (float *)v1119;
      if (v1124 && v1119)
      {
        v666 = v1117;
        v667 = v1118;
        if (v1118)
        {
          v668 = (unint64_t *)&v1118->__shared_owners_;
          do
            v669 = __ldxr(v668);
          while (__stxr(v669 + 1, v668));
          do
            v670 = __ldaxr(v668);
          while (__stlxr(v670 - 1, v668));
          if (!v670)
          {
            ((void (*)(std::__shared_weak_count *))v667->__on_zero_shared)(v667);
            std::__shared_weak_count::__release_weak(v667);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v666 + 88))(v666, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v665 = (float *)v1119;
      }
      if (v663 == 1)
        goto LABEL_1073;
      if (!(_DWORD)v1095)
        goto LABEL_1080;
      v671 = 0;
      v672 = 4 * v664;
      do
      {
        if (!v665
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1989;
        }
        v673 = 0;
        v674 = *(_QWORD *)(v190 + 48);
        do
          sub_20E9EDF48(v674, &v665[v673++]);
        while (v1095 != v673);
        v665 = (float *)((char *)v665 + v672);
        ++v671;
      }
      while (v671 != v663 - 1);
LABEL_1073:
      if ((_DWORD)v1095 && !v665)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1989:
          abort();
        }
        v665 = 0;
      }
      if ((_DWORD)v1095)
      {
        v675 = *(_QWORD *)(v190 + 48);
        v676 = 4 * v1095;
        do
        {
          sub_20E9EDF48(v675, v665++);
          v676 -= 4;
        }
        while (v676);
      }
LABEL_1080:
      v677 = v1130;
      v1130 = 0;
      if (v677)
        (*(void (**)(uint64_t))(*(_QWORD *)v677 + 8))(v677);
      v473 = v1118;
      if (!v1118)
        return;
      v678 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v678);
      while (__stlxr(v475 - 1, v678));
      goto LABEL_1975;
    case 5:
      v1116 = &off_24C9C06A8;
      sub_20FF69634((std::string::size_type *)&v1117, a3);
      v277 = *a2;
      v278 = v1127;
      v279 = v1117;
      if (!v1117)
        goto LABEL_1303;
      v280 = v1118;
      if (v1118)
      {
        v281 = (unint64_t *)&v1118->__shared_owners_;
        do
          v282 = __ldxr(v281);
        while (__stxr(v282 + 1, v281));
        do
          v283 = __ldaxr(v281);
        while (__stlxr(v283 - 1, v281));
        if (!v283)
        {
          ((void (*)(std::__shared_weak_count *))v280->__on_zero_shared)(v280);
          std::__shared_weak_count::__release_weak(v280);
        }
        v279 = v1117;
        v284 = v1118;
        if (v1118)
        {
          v285 = (unint64_t *)&v1118->__shared_owners_;
          do
            v286 = __ldxr(v285);
          while (__stxr(v286 + 1, v285));
          do
            v287 = __ldaxr(v285);
          while (__stlxr(v287 - 1, v285));
          if (!v287)
          {
            ((void (*)(std::__shared_weak_count *))v284->__on_zero_shared)(v284);
            std::__shared_weak_count::__release_weak(v284);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v279 + 96))(&v1130, v279, 1);
      else
LABEL_1303:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1331;
      if (!v1121)
        goto LABEL_1331;
      v798 = v1122;
      if (!v1122)
        goto LABEL_1331;
      v799 = v1126;
      v800 = v1119;
      if (v1128 && v1119)
      {
        v801 = v1117;
        v802 = v1118;
        if (v1118)
        {
          v803 = (unint64_t *)&v1118->__shared_owners_;
          do
            v804 = __ldxr(v803);
          while (__stxr(v804 + 1, v803));
          do
            v805 = __ldaxr(v803);
          while (__stlxr(v805 - 1, v803));
          if (!v805)
          {
            ((void (*)(std::__shared_weak_count *))v802->__on_zero_shared)(v802);
            std::__shared_weak_count::__release_weak(v802);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v801 + 88))(v801, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v800 = v1119;
      }
      v806 = (2 * v278);
      if (v798 == 1)
        goto LABEL_1324;
      if (!(_DWORD)v806)
        goto LABEL_1331;
      v807 = 0;
      do
      {
        if (!v800
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1995;
        }
        v808 = 0;
        v809 = *(_QWORD *)(v277 + 48);
        do
          sub_20E9ED7B4(v809, &v800[v808++]);
        while (v806 != v808);
        v800 += v799;
        ++v807;
      }
      while (v807 != v798 - 1);
LABEL_1324:
      if ((_DWORD)v806 && !v800)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1995:
          abort();
        }
        v800 = 0;
      }
      if ((_DWORD)v806)
      {
        v810 = *(_QWORD *)(v277 + 48);
        do
        {
          sub_20E9ED7B4(v810, v800++);
          --v806;
        }
        while (v806);
      }
LABEL_1331:
      v811 = v1130;
      v1130 = 0;
      if (v811)
        (*(void (**)(uint64_t))(*(_QWORD *)v811 + 8))(v811);
      v473 = v1118;
      if (!v1118)
        return;
      v812 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v812);
      while (__stlxr(v475 - 1, v812));
      goto LABEL_1975;
    case 6:
      v1116 = &off_24CA11908;
      sub_20FF69C90((std::string::size_type *)&v1117, a3);
      v179 = *a2;
      v180 = v1127;
      v181 = v1117;
      if (!v1117)
        goto LABEL_1019;
      v182 = v1118;
      if (v1118)
      {
        v183 = (unint64_t *)&v1118->__shared_owners_;
        do
          v184 = __ldxr(v183);
        while (__stxr(v184 + 1, v183));
        do
          v185 = __ldaxr(v183);
        while (__stlxr(v185 - 1, v183));
        if (!v185)
        {
          ((void (*)(std::__shared_weak_count *))v182->__on_zero_shared)(v182);
          std::__shared_weak_count::__release_weak(v182);
        }
        v181 = v1117;
        v186 = v1118;
        if (v1118)
        {
          v187 = (unint64_t *)&v1118->__shared_owners_;
          do
            v188 = __ldxr(v187);
          while (__stxr(v188 + 1, v187));
          do
            v189 = __ldaxr(v187);
          while (__stlxr(v189 - 1, v187));
          if (!v189)
          {
            ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
            std::__shared_weak_count::__release_weak(v186);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v181 + 96))(&v1130, v181, 1);
      else
LABEL_1019:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1047;
      if (!v1121)
        goto LABEL_1047;
      v644 = v1122;
      if (!v1122)
        goto LABEL_1047;
      v645 = v1126;
      v646 = v1119;
      if (v1128 && v1119)
      {
        v647 = v1117;
        v648 = v1118;
        if (v1118)
        {
          v649 = (unint64_t *)&v1118->__shared_owners_;
          do
            v650 = __ldxr(v649);
          while (__stxr(v650 + 1, v649));
          do
            v651 = __ldaxr(v649);
          while (__stlxr(v651 - 1, v649));
          if (!v651)
          {
            ((void (*)(std::__shared_weak_count *))v648->__on_zero_shared)(v648);
            std::__shared_weak_count::__release_weak(v648);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v647 + 88))(v647, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v646 = v1119;
      }
      v652 = (2 * v180);
      if (v644 == 1)
        goto LABEL_1040;
      if (!(_DWORD)v652)
        goto LABEL_1047;
      v653 = 0;
      v654 = 2 * v645;
      v655 = 2 * v652;
      do
      {
        if (!v646
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1984;
        }
        v656 = v652;
        v657 = 0;
        v658 = *(_QWORD *)(v179 + 48);
        do
        {
          sub_20E9ED948(v658, &v646[v657 / 2]);
          v657 += 2;
        }
        while (v655 != v657);
        v646 = (_WORD *)((char *)v646 + v654);
        ++v653;
        v652 = v656;
      }
      while (v653 != v644 - 1);
LABEL_1040:
      if ((_DWORD)v652 && !v646)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1984:
          abort();
        }
        v646 = 0;
      }
      if ((_DWORD)v652)
      {
        v659 = *(_QWORD *)(v179 + 48);
        v660 = 2 * v652;
        do
        {
          sub_20E9ED948(v659, v646++);
          v660 -= 2;
        }
        while (v660);
      }
LABEL_1047:
      v661 = v1130;
      v1130 = 0;
      if (v661)
        (*(void (**)(uint64_t))(*(_QWORD *)v661 + 8))(v661);
      v473 = v1118;
      if (!v1118)
        return;
      v662 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v662);
      while (__stlxr(v475 - 1, v662));
      goto LABEL_1975;
    case 7:
      v1116 = &off_24CA11A00;
      sub_20FF6A4F8((std::string::size_type *)&v1117, a3);
      v124 = *a2;
      v125 = v1127;
      v126 = v1117;
      if (!v1117)
        goto LABEL_888;
      v127 = v1118;
      if (v1118)
      {
        v128 = (unint64_t *)&v1118->__shared_owners_;
        do
          v129 = __ldxr(v128);
        while (__stxr(v129 + 1, v128));
        do
          v130 = __ldaxr(v128);
        while (__stlxr(v130 - 1, v128));
        if (!v130)
        {
          ((void (*)(std::__shared_weak_count *))v127->__on_zero_shared)(v127);
          std::__shared_weak_count::__release_weak(v127);
        }
        v126 = v1117;
        v131 = v1118;
        if (v1118)
        {
          v132 = (unint64_t *)&v1118->__shared_owners_;
          do
            v133 = __ldxr(v132);
          while (__stxr(v133 + 1, v132));
          do
            v134 = __ldaxr(v132);
          while (__stlxr(v134 - 1, v132));
          if (!v134)
          {
            ((void (*)(std::__shared_weak_count *))v131->__on_zero_shared)(v131);
            std::__shared_weak_count::__release_weak(v131);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v126 + 96))(&v1130, v126, 1);
      else
LABEL_888:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1781;
      if (!v1121)
        goto LABEL_1781;
      v580 = v1122;
      if (!v1122)
        goto LABEL_1781;
      v581 = v1126;
      v582 = v1119;
      if (v1128 && v1119)
      {
        v583 = v1117;
        v584 = v1118;
        if (v1118)
        {
          v585 = (unint64_t *)&v1118->__shared_owners_;
          do
            v586 = __ldxr(v585);
          while (__stxr(v586 + 1, v585));
          do
            v587 = __ldaxr(v585);
          while (__stlxr(v587 - 1, v585));
          if (!v587)
          {
            ((void (*)(std::__shared_weak_count *))v584->__on_zero_shared)(v584);
            std::__shared_weak_count::__release_weak(v584);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v583 + 88))(v583, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v582 = v1119;
      }
      v588 = v580 - 1;
      v1104 = (2 * v125);
      if (!v588)
        goto LABEL_909;
      if (!(2 * v125))
        goto LABEL_1781;
      for (j = 0; j != v588; ++j)
      {
        if (!v582
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_912;
        }
        v590 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v124 + 48), &v1115);
          v582[v590++] = v1115;
        }
        while (v1104 != v590);
        v582 += v581;
      }
LABEL_909:
      if (!(_DWORD)v1104 || v582)
      {
        if (!(_DWORD)v1104)
          goto LABEL_1781;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_912:
        abort();
      }
      v1028 = 2 * v1104;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v124 + 48), &v1115);
        *v582++ = v1115;
        v1028 -= 2;
      }
      while (v1028);
LABEL_1781:
      v1029 = v1130;
      v1130 = 0;
      if (v1029)
        (*(void (**)(uint64_t))(*(_QWORD *)v1029 + 8))(v1029);
      v473 = v1118;
      if (!v1118)
        return;
      v1030 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1030);
      while (__stlxr(v475 - 1, v1030));
      goto LABEL_1975;
    case 8:
      v1116 = &off_24CA11AF8;
      sub_20FF6AD60((std::string::size_type *)&v1117, a3);
      v299 = *a2;
      v300 = v1127;
      v301 = v1117;
      if (!v1117)
        goto LABEL_1371;
      v302 = v1118;
      if (v1118)
      {
        v303 = (unint64_t *)&v1118->__shared_owners_;
        do
          v304 = __ldxr(v303);
        while (__stxr(v304 + 1, v303));
        do
          v305 = __ldaxr(v303);
        while (__stlxr(v305 - 1, v303));
        if (!v305)
        {
          ((void (*)(std::__shared_weak_count *))v302->__on_zero_shared)(v302);
          std::__shared_weak_count::__release_weak(v302);
        }
        v301 = v1117;
        v306 = v1118;
        if (v1118)
        {
          v307 = (unint64_t *)&v1118->__shared_owners_;
          do
            v308 = __ldxr(v307);
          while (__stxr(v308 + 1, v307));
          do
            v309 = __ldaxr(v307);
          while (__stlxr(v309 - 1, v307));
          if (!v309)
          {
            ((void (*)(std::__shared_weak_count *))v306->__on_zero_shared)(v306);
            std::__shared_weak_count::__release_weak(v306);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v301 + 96))(&v1130, v301, 1);
      else
LABEL_1371:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1399;
      if (!v1121)
        goto LABEL_1399;
      v832 = v1122;
      if (!v1122)
        goto LABEL_1399;
      v833 = v1126;
      v834 = (float *)v1119;
      if (v1128 && v1119)
      {
        v835 = v1117;
        v836 = v1118;
        if (v1118)
        {
          v837 = (unint64_t *)&v1118->__shared_owners_;
          do
            v838 = __ldxr(v837);
          while (__stxr(v838 + 1, v837));
          do
            v839 = __ldaxr(v837);
          while (__stlxr(v839 - 1, v837));
          if (!v839)
          {
            ((void (*)(std::__shared_weak_count *))v836->__on_zero_shared)(v836);
            std::__shared_weak_count::__release_weak(v836);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v835 + 88))(v835, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v834 = (float *)v1119;
      }
      v840 = (2 * v300);
      if (v832 == 1)
        goto LABEL_1392;
      if (!(_DWORD)v840)
        goto LABEL_1399;
      v841 = 0;
      v842 = 4 * v833;
      v843 = 4 * v840;
      do
      {
        if (!v834
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1997;
        }
        v844 = v840;
        v845 = 0;
        v846 = *(_QWORD *)(v299 + 48);
        do
        {
          sub_20E9EDF48(v846, &v834[v845 / 4]);
          v845 += 4;
        }
        while (v843 != v845);
        v834 = (float *)((char *)v834 + v842);
        ++v841;
        v840 = v844;
      }
      while (v841 != v832 - 1);
LABEL_1392:
      if ((_DWORD)v840 && !v834)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1997:
          abort();
        }
        v834 = 0;
      }
      if ((_DWORD)v840)
      {
        v847 = *(_QWORD *)(v299 + 48);
        v848 = 4 * v840;
        do
        {
          sub_20E9EDF48(v847, v834++);
          v848 -= 4;
        }
        while (v848);
      }
LABEL_1399:
      v849 = v1130;
      v1130 = 0;
      if (v849)
        (*(void (**)(uint64_t))(*(_QWORD *)v849 + 8))(v849);
      v473 = v1118;
      if (!v1118)
        return;
      v850 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v850);
      while (__stlxr(v475 - 1, v850));
      goto LABEL_1975;
    case 9:
      v1116 = &off_24CA11BF0;
      sub_20FF6B5C8((std::string::size_type *)&v1117, a3);
      v266 = *a2;
      v267 = v1127;
      v268 = v1117;
      if (!v1117)
        goto LABEL_1281;
      v269 = v1118;
      if (v1118)
      {
        v270 = (unint64_t *)&v1118->__shared_owners_;
        do
          v271 = __ldxr(v270);
        while (__stxr(v271 + 1, v270));
        do
          v272 = __ldaxr(v270);
        while (__stlxr(v272 - 1, v270));
        if (!v272)
        {
          ((void (*)(std::__shared_weak_count *))v269->__on_zero_shared)(v269);
          std::__shared_weak_count::__release_weak(v269);
        }
        v268 = v1117;
        v273 = v1118;
        if (v1118)
        {
          v274 = (unint64_t *)&v1118->__shared_owners_;
          do
            v275 = __ldxr(v274);
          while (__stxr(v275 + 1, v274));
          do
            v276 = __ldaxr(v274);
          while (__stlxr(v276 - 1, v274));
          if (!v276)
          {
            ((void (*)(std::__shared_weak_count *))v273->__on_zero_shared)(v273);
            std::__shared_weak_count::__release_weak(v273);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v268 + 96))(&v1130, v268, 1);
      else
LABEL_1281:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1914;
      if (!v1121)
        goto LABEL_1914;
      v785 = v1122;
      if (!v1122)
        goto LABEL_1914;
      v786 = v1126;
      v787 = v1119;
      if (v1128 && v1119)
      {
        v788 = v1117;
        v789 = v1118;
        if (v1118)
        {
          v790 = (unint64_t *)&v1118->__shared_owners_;
          do
            v791 = __ldxr(v790);
          while (__stxr(v791 + 1, v790));
          do
            v792 = __ldaxr(v790);
          while (__stlxr(v792 - 1, v790));
          if (!v792)
          {
            ((void (*)(std::__shared_weak_count *))v789->__on_zero_shared)(v789);
            std::__shared_weak_count::__release_weak(v789);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v788 + 88))(v788, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v787 = v1119;
      }
      v793 = (3 * v267);
      v794 = v785 - 1;
      if (v785 == 1)
      {
        v1109 = v267;
LABEL_1907:
        if (v1109 && !v787)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2000;
          }
          v787 = 0;
        }
        if (v1109)
        {
          v1068 = *(_QWORD *)(v266 + 48);
          do
          {
            sub_20E9ED7B4(v1068, v787++);
            --v793;
          }
          while (v793);
        }
      }
      else if (v267)
      {
        v1109 = v267;
        v795 = 0;
        while (v787
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v796 = 0;
          v797 = *(_QWORD *)(v266 + 48);
          do
            sub_20E9ED7B4(v797, &v787[v796++]);
          while (v793 != v796);
          v787 += v786;
          if (++v795 == v794)
            goto LABEL_1907;
        }
LABEL_2000:
        abort();
      }
LABEL_1914:
      v1069 = v1130;
      v1130 = 0;
      if (v1069)
        (*(void (**)(uint64_t))(*(_QWORD *)v1069 + 8))(v1069);
      v473 = v1118;
      if (!v1118)
        return;
      v1070 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1070);
      while (__stlxr(v475 - 1, v1070));
      goto LABEL_1975;
    case 10:
      v1116 = &off_24CA11CE8;
      sub_20FF6BE2C((std::string::size_type *)&v1117, a3);
      v351 = *a2;
      v352 = v1127;
      v353 = v1117;
      if (!v1117)
        goto LABEL_1554;
      v354 = v1118;
      if (v1118)
      {
        v355 = (unint64_t *)&v1118->__shared_owners_;
        do
          v356 = __ldxr(v355);
        while (__stxr(v356 + 1, v355));
        do
          v357 = __ldaxr(v355);
        while (__stlxr(v357 - 1, v355));
        if (!v357)
        {
          ((void (*)(std::__shared_weak_count *))v354->__on_zero_shared)(v354);
          std::__shared_weak_count::__release_weak(v354);
        }
        v353 = v1117;
        v358 = v1118;
        if (v1118)
        {
          v359 = (unint64_t *)&v1118->__shared_owners_;
          do
            v360 = __ldxr(v359);
          while (__stxr(v360 + 1, v359));
          do
            v361 = __ldaxr(v359);
          while (__stlxr(v361 - 1, v359));
          if (!v361)
          {
            ((void (*)(std::__shared_weak_count *))v358->__on_zero_shared)(v358);
            std::__shared_weak_count::__release_weak(v358);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v353 + 96))(&v1130, v353, 1);
      else
LABEL_1554:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1928;
      if (!v1121)
        goto LABEL_1928;
      v917 = v1122;
      if (!v1122)
        goto LABEL_1928;
      v918 = v1126;
      v919 = v1119;
      if (v1128 && v1119)
      {
        v920 = v1117;
        v921 = v1118;
        if (v1118)
        {
          v922 = (unint64_t *)&v1118->__shared_owners_;
          do
            v923 = __ldxr(v922);
          while (__stxr(v923 + 1, v922));
          do
            v924 = __ldaxr(v922);
          while (__stlxr(v924 - 1, v922));
          if (!v924)
          {
            ((void (*)(std::__shared_weak_count *))v921->__on_zero_shared)(v921);
            std::__shared_weak_count::__release_weak(v921);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v920 + 88))(v920, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v919 = v1119;
      }
      v1110 = (3 * v352);
      if (v917 == 1)
      {
        v1091 = v352;
LABEL_1921:
        if (v1091 && !v919)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2004;
          }
          v919 = 0;
        }
        if (v1091)
        {
          v1071 = *(_QWORD *)(v351 + 48);
          v1072 = 2 * v1110;
          do
          {
            sub_20E9ED948(v1071, v919++);
            v1072 -= 2;
          }
          while (v1072);
        }
      }
      else if (v352)
      {
        v1091 = v352;
        v925 = 0;
        v926 = 2 * v918;
        while (v919
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v927 = 0;
          v928 = *(_QWORD *)(v351 + 48);
          do
            sub_20E9ED948(v928, &v919[v927++]);
          while (v1110 != v927);
          v919 = (_WORD *)((char *)v919 + v926);
          if (++v925 == v917 - 1)
            goto LABEL_1921;
        }
LABEL_2004:
        abort();
      }
LABEL_1928:
      v1073 = v1130;
      v1130 = 0;
      if (v1073)
        (*(void (**)(uint64_t))(*(_QWORD *)v1073 + 8))(v1073);
      v473 = v1118;
      if (!v1118)
        return;
      v1074 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1074);
      while (__stlxr(v475 - 1, v1074));
      goto LABEL_1975;
    case 11:
      v1116 = &off_24CA11DE0;
      sub_20FF6C694((std::string::size_type *)&v1117, a3);
      v341 = *a2;
      v1098 = v1127;
      v342 = v1117;
      if (!v1117)
        goto LABEL_1529;
      v343 = v1118;
      if (v1118)
      {
        v344 = (unint64_t *)&v1118->__shared_owners_;
        do
          v345 = __ldxr(v344);
        while (__stxr(v345 + 1, v344));
        do
          v346 = __ldaxr(v344);
        while (__stlxr(v346 - 1, v344));
        if (!v346)
        {
          ((void (*)(std::__shared_weak_count *))v343->__on_zero_shared)(v343);
          std::__shared_weak_count::__release_weak(v343);
        }
        v342 = v1117;
        v347 = v1118;
        if (v1118)
        {
          v348 = (unint64_t *)&v1118->__shared_owners_;
          do
            v349 = __ldxr(v348);
          while (__stxr(v349 + 1, v348));
          do
            v350 = __ldaxr(v348);
          while (__stlxr(v350 - 1, v348));
          if (!v350)
          {
            ((void (*)(std::__shared_weak_count *))v347->__on_zero_shared)(v347);
            std::__shared_weak_count::__release_weak(v347);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v342 + 96))(&v1130, v342, 1);
      else
LABEL_1529:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1826;
      if (!v1121)
        goto LABEL_1826;
      v907 = v1122;
      if (!v1122)
        goto LABEL_1826;
      v908 = v1126;
      v909 = v1119;
      if (v1128 && v1119)
      {
        v910 = v1117;
        v911 = v1118;
        if (v1118)
        {
          v912 = (unint64_t *)&v1118->__shared_owners_;
          do
            v913 = __ldxr(v912);
          while (__stxr(v913 + 1, v912));
          do
            v914 = __ldaxr(v912);
          while (__stlxr(v914 - 1, v912));
          if (!v914)
          {
            ((void (*)(std::__shared_weak_count *))v911->__on_zero_shared)(v911);
            std::__shared_weak_count::__release_weak(v911);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v910 + 88))(v910, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v909 = v1119;
      }
      v1090 = (3 * v1098);
      if (v907 == 1)
        goto LABEL_1550;
      if (!v1098)
        goto LABEL_1826;
      v915 = 0;
      do
      {
        if (!v909
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1553;
        }
        v916 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v341 + 48), &v1115);
          v909[v916++] = v1115;
        }
        while (v1090 != v916);
        v909 += v908;
        ++v915;
      }
      while (v915 != v907 - 1);
LABEL_1550:
      if (!v1098 || v909)
      {
        if (!v1098)
          goto LABEL_1826;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1553:
        abort();
      }
      v1043 = 2 * v1090;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v341 + 48), &v1115);
        *v909++ = v1115;
        v1043 -= 2;
      }
      while (v1043);
LABEL_1826:
      v1044 = v1130;
      v1130 = 0;
      if (v1044)
        (*(void (**)(uint64_t))(*(_QWORD *)v1044 + 8))(v1044);
      v473 = v1118;
      if (!v1118)
        return;
      v1045 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1045);
      while (__stlxr(v475 - 1, v1045));
      goto LABEL_1975;
    case 12:
      v1116 = &off_24CA11ED8;
      sub_20FF6CEFC((std::string::size_type *)&v1117, a3);
      v47 = *a2;
      v48 = v1127;
      v49 = v1117;
      if (!v1117)
        goto LABEL_686;
      v50 = v1118;
      if (v1118)
      {
        v51 = (unint64_t *)&v1118->__shared_owners_;
        do
          v52 = __ldxr(v51);
        while (__stxr(v52 + 1, v51));
        do
          v53 = __ldaxr(v51);
        while (__stlxr(v53 - 1, v51));
        if (!v53)
        {
          ((void (*)(std::__shared_weak_count *))v50->__on_zero_shared)(v50);
          std::__shared_weak_count::__release_weak(v50);
        }
        v49 = v1117;
        v54 = v1118;
        if (v1118)
        {
          v55 = (unint64_t *)&v1118->__shared_owners_;
          do
            v56 = __ldxr(v55);
          while (__stxr(v56 + 1, v55));
          do
            v57 = __ldaxr(v55);
          while (__stlxr(v57 - 1, v55));
          if (!v57)
          {
            ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
            std::__shared_weak_count::__release_weak(v54);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v49 + 96))(&v1130, v49, 1);
      else
LABEL_686:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1858;
      if (!v1121)
        goto LABEL_1858;
      v476 = v1122;
      if (!v1122)
        goto LABEL_1858;
      v477 = v1126;
      v478 = (float *)v1119;
      if (v1128 && v1119)
      {
        v479 = v1117;
        v480 = v1118;
        if (v1118)
        {
          v481 = (unint64_t *)&v1118->__shared_owners_;
          do
            v482 = __ldxr(v481);
          while (__stxr(v482 + 1, v481));
          do
            v483 = __ldaxr(v481);
          while (__stlxr(v483 - 1, v481));
          if (!v483)
          {
            ((void (*)(std::__shared_weak_count *))v480->__on_zero_shared)(v480);
            std::__shared_weak_count::__release_weak(v480);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v479 + 88))(v479, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v478 = (float *)v1119;
      }
      v1101 = (3 * v48);
      if (v476 == 1)
      {
        v1086 = v48;
LABEL_1851:
        if (v1086 && !v478)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1985;
          }
          v478 = 0;
        }
        if (v1086)
        {
          v1052 = *(_QWORD *)(v47 + 48);
          v1053 = 4 * v1101;
          do
          {
            sub_20E9EDF48(v1052, v478++);
            v1053 -= 4;
          }
          while (v1053);
        }
      }
      else if (v48)
      {
        v1086 = v48;
        v484 = 0;
        v485 = 4 * v477;
        while (v478
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v486 = 0;
          v487 = *(_QWORD *)(v47 + 48);
          do
            sub_20E9EDF48(v487, &v478[v486++]);
          while (v1101 != v486);
          v478 = (float *)((char *)v478 + v485);
          if (++v484 == v476 - 1)
            goto LABEL_1851;
        }
LABEL_1985:
        abort();
      }
LABEL_1858:
      v1054 = v1130;
      v1130 = 0;
      if (v1054)
        (*(void (**)(uint64_t))(*(_QWORD *)v1054 + 8))(v1054);
      v473 = v1118;
      if (!v1118)
        return;
      v1055 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1055);
      while (__stlxr(v475 - 1, v1055));
      goto LABEL_1975;
    case 13:
      v1116 = &off_24CA11FD0;
      sub_20FF6D764((std::string::size_type *)&v1117, a3);
      v91 = *a2;
      v92 = v1127;
      v93 = v1117;
      if (!v1117)
        goto LABEL_798;
      v94 = v1118;
      if (v1118)
      {
        v95 = (unint64_t *)&v1118->__shared_owners_;
        do
          v96 = __ldxr(v95);
        while (__stxr(v96 + 1, v95));
        do
          v97 = __ldaxr(v95);
        while (__stlxr(v97 - 1, v95));
        if (!v97)
        {
          ((void (*)(std::__shared_weak_count *))v94->__on_zero_shared)(v94);
          std::__shared_weak_count::__release_weak(v94);
        }
        v93 = v1117;
        v98 = v1118;
        if (v1118)
        {
          v99 = (unint64_t *)&v1118->__shared_owners_;
          do
            v100 = __ldxr(v99);
          while (__stxr(v100 + 1, v99));
          do
            v101 = __ldaxr(v99);
          while (__stlxr(v101 - 1, v99));
          if (!v101)
          {
            ((void (*)(std::__shared_weak_count *))v98->__on_zero_shared)(v98);
            std::__shared_weak_count::__release_weak(v98);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v93 + 96))(&v1130, v93, 1);
      else
LABEL_798:
        v1130 = 0;
      if (!v1120)
        goto LABEL_826;
      if (!v1121)
        goto LABEL_826;
      v534 = v1122;
      if (!v1122)
        goto LABEL_826;
      v535 = v1126;
      v536 = v1119;
      if (v1128 && v1119)
      {
        v537 = v1117;
        v538 = v1118;
        if (v1118)
        {
          v539 = (unint64_t *)&v1118->__shared_owners_;
          do
            v540 = __ldxr(v539);
          while (__stxr(v540 + 1, v539));
          do
            v541 = __ldaxr(v539);
          while (__stlxr(v541 - 1, v539));
          if (!v541)
          {
            ((void (*)(std::__shared_weak_count *))v538->__on_zero_shared)(v538);
            std::__shared_weak_count::__release_weak(v538);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v537 + 88))(v537, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v536 = v1119;
      }
      v542 = (4 * v92);
      if (v534 == 1)
        goto LABEL_819;
      if (!(_DWORD)v542)
        goto LABEL_826;
      v543 = 0;
      do
      {
        if (!v536
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1981;
        }
        v544 = 0;
        v545 = *(_QWORD *)(v91 + 48);
        do
          sub_20E9ED7B4(v545, &v536[v544++]);
        while (v542 != v544);
        v536 += v535;
        ++v543;
      }
      while (v543 != v534 - 1);
LABEL_819:
      if ((_DWORD)v542 && !v536)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1981:
          abort();
        }
        v536 = 0;
      }
      if ((_DWORD)v542)
      {
        v546 = *(_QWORD *)(v91 + 48);
        do
        {
          sub_20E9ED7B4(v546, v536++);
          --v542;
        }
        while (v542);
      }
LABEL_826:
      v547 = v1130;
      v1130 = 0;
      if (v547)
        (*(void (**)(uint64_t))(*(_QWORD *)v547 + 8))(v547);
      v473 = v1118;
      if (!v1118)
        return;
      v548 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v548);
      while (__stlxr(v475 - 1, v548));
      goto LABEL_1975;
    case 14:
      v1116 = &off_24CA120C8;
      sub_20FF6DFC8((std::string::size_type *)&v1117, a3);
      v80 = *a2;
      v81 = v1127;
      v82 = v1117;
      if (!v1117)
        goto LABEL_764;
      v83 = v1118;
      if (v1118)
      {
        v84 = (unint64_t *)&v1118->__shared_owners_;
        do
          v85 = __ldxr(v84);
        while (__stxr(v85 + 1, v84));
        do
          v86 = __ldaxr(v84);
        while (__stlxr(v86 - 1, v84));
        if (!v86)
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
        v82 = v1117;
        v87 = v1118;
        if (v1118)
        {
          v88 = (unint64_t *)&v1118->__shared_owners_;
          do
            v89 = __ldxr(v88);
          while (__stxr(v89 + 1, v88));
          do
            v90 = __ldaxr(v88);
          while (__stlxr(v90 - 1, v88));
          if (!v90)
          {
            ((void (*)(std::__shared_weak_count *))v87->__on_zero_shared)(v87);
            std::__shared_weak_count::__release_weak(v87);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v82 + 96))(&v1130, v82, 1);
      else
LABEL_764:
        v1130 = 0;
      if (!v1120)
        goto LABEL_792;
      if (!v1121)
        goto LABEL_792;
      v515 = v1122;
      if (!v1122)
        goto LABEL_792;
      v516 = v1126;
      v517 = v1119;
      if (v1128 && v1119)
      {
        v518 = v1117;
        v519 = v1118;
        if (v1118)
        {
          v520 = (unint64_t *)&v1118->__shared_owners_;
          do
            v521 = __ldxr(v520);
          while (__stxr(v521 + 1, v520));
          do
            v522 = __ldaxr(v520);
          while (__stlxr(v522 - 1, v520));
          if (!v522)
          {
            ((void (*)(std::__shared_weak_count *))v519->__on_zero_shared)(v519);
            std::__shared_weak_count::__release_weak(v519);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v518 + 88))(v518, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v517 = v1119;
      }
      v523 = (4 * v81);
      if (v515 == 1)
        goto LABEL_785;
      if (!(_DWORD)v523)
        goto LABEL_792;
      v524 = 0;
      v525 = 2 * v516;
      v526 = 2 * v523;
      do
      {
        if (!v517
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1980;
        }
        v527 = v523;
        v528 = 0;
        v529 = *(_QWORD *)(v80 + 48);
        do
        {
          sub_20E9ED948(v529, &v517[v528 / 2]);
          v528 += 2;
        }
        while (v526 != v528);
        v517 = (_WORD *)((char *)v517 + v525);
        ++v524;
        v523 = v527;
      }
      while (v524 != v515 - 1);
LABEL_785:
      if ((_DWORD)v523 && !v517)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1980:
          abort();
        }
        v517 = 0;
      }
      if ((_DWORD)v523)
      {
        v530 = *(_QWORD *)(v80 + 48);
        v531 = 2 * v523;
        do
        {
          sub_20E9ED948(v530, v517++);
          v531 -= 2;
        }
        while (v531);
      }
LABEL_792:
      v532 = v1130;
      v1130 = 0;
      if (v532)
        (*(void (**)(uint64_t))(*(_QWORD *)v532 + 8))(v532);
      v473 = v1118;
      if (!v1118)
        return;
      v533 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v533);
      while (__stlxr(v475 - 1, v533));
      goto LABEL_1975;
    case 15:
      v1116 = &off_24CA121C0;
      sub_20FF6E830((std::string::size_type *)&v1117, a3);
      v395 = *a2;
      v396 = v1127;
      v397 = v1117;
      if (!v1117)
        goto LABEL_1666;
      v398 = v1118;
      if (v1118)
      {
        v399 = (unint64_t *)&v1118->__shared_owners_;
        do
          v400 = __ldxr(v399);
        while (__stxr(v400 + 1, v399));
        do
          v401 = __ldaxr(v399);
        while (__stlxr(v401 - 1, v399));
        if (!v401)
        {
          ((void (*)(std::__shared_weak_count *))v398->__on_zero_shared)(v398);
          std::__shared_weak_count::__release_weak(v398);
        }
        v397 = v1117;
        v402 = v1118;
        if (v1118)
        {
          v403 = (unint64_t *)&v1118->__shared_owners_;
          do
            v404 = __ldxr(v403);
          while (__stxr(v404 + 1, v403));
          do
            v405 = __ldaxr(v403);
          while (__stlxr(v405 - 1, v403));
          if (!v405)
          {
            ((void (*)(std::__shared_weak_count *))v402->__on_zero_shared)(v402);
            std::__shared_weak_count::__release_weak(v402);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v397 + 96))(&v1130, v397, 1);
      else
LABEL_1666:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1835;
      if (!v1121)
        goto LABEL_1835;
      v975 = v1122;
      if (!v1122)
        goto LABEL_1835;
      v976 = v1126;
      v977 = v1119;
      if (v1128 && v1119)
      {
        v978 = v1117;
        v979 = v1118;
        if (v1118)
        {
          v980 = (unint64_t *)&v1118->__shared_owners_;
          do
            v981 = __ldxr(v980);
          while (__stxr(v981 + 1, v980));
          do
            v982 = __ldaxr(v980);
          while (__stlxr(v982 - 1, v980));
          if (!v982)
          {
            ((void (*)(std::__shared_weak_count *))v979->__on_zero_shared)(v979);
            std::__shared_weak_count::__release_weak(v979);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v978 + 88))(v978, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v977 = v1119;
      }
      v983 = v975 - 1;
      v1112 = (4 * v396);
      if (!v983)
        goto LABEL_1687;
      if (!(4 * v396))
        goto LABEL_1835;
      for (k = 0; k != v983; ++k)
      {
        if (!v977
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1690;
        }
        v985 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v395 + 48), &v1115);
          v977[v985++] = v1115;
        }
        while (v1112 != v985);
        v977 += v976;
      }
LABEL_1687:
      if (!(_DWORD)v1112 || v977)
      {
        if (!(_DWORD)v1112)
          goto LABEL_1835;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1690:
        abort();
      }
      v1046 = 2 * v1112;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v395 + 48), &v1115);
        *v977++ = v1115;
        v1046 -= 2;
      }
      while (v1046);
LABEL_1835:
      v1047 = v1130;
      v1130 = 0;
      if (v1047)
        (*(void (**)(uint64_t))(*(_QWORD *)v1047 + 8))(v1047);
      v473 = v1118;
      if (!v1118)
        return;
      v1048 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1048);
      while (__stlxr(v475 - 1, v1048));
      goto LABEL_1975;
    case 16:
      v1116 = &off_24CA122B8;
      sub_20FF6F098((std::string::size_type *)&v1117, a3);
      v288 = *a2;
      v289 = v1127;
      v290 = v1117;
      if (!v1117)
        goto LABEL_1337;
      v291 = v1118;
      if (v1118)
      {
        v292 = (unint64_t *)&v1118->__shared_owners_;
        do
          v293 = __ldxr(v292);
        while (__stxr(v293 + 1, v292));
        do
          v294 = __ldaxr(v292);
        while (__stlxr(v294 - 1, v292));
        if (!v294)
        {
          ((void (*)(std::__shared_weak_count *))v291->__on_zero_shared)(v291);
          std::__shared_weak_count::__release_weak(v291);
        }
        v290 = v1117;
        v295 = v1118;
        if (v1118)
        {
          v296 = (unint64_t *)&v1118->__shared_owners_;
          do
            v297 = __ldxr(v296);
          while (__stxr(v297 + 1, v296));
          do
            v298 = __ldaxr(v296);
          while (__stlxr(v298 - 1, v296));
          if (!v298)
          {
            ((void (*)(std::__shared_weak_count *))v295->__on_zero_shared)(v295);
            std::__shared_weak_count::__release_weak(v295);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v290 + 96))(&v1130, v290, 1);
      else
LABEL_1337:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1365;
      if (!v1121)
        goto LABEL_1365;
      v813 = v1122;
      if (!v1122)
        goto LABEL_1365;
      v814 = v1126;
      v815 = (float *)v1119;
      if (v1128 && v1119)
      {
        v816 = v1117;
        v817 = v1118;
        if (v1118)
        {
          v818 = (unint64_t *)&v1118->__shared_owners_;
          do
            v819 = __ldxr(v818);
          while (__stxr(v819 + 1, v818));
          do
            v820 = __ldaxr(v818);
          while (__stlxr(v820 - 1, v818));
          if (!v820)
          {
            ((void (*)(std::__shared_weak_count *))v817->__on_zero_shared)(v817);
            std::__shared_weak_count::__release_weak(v817);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v816 + 88))(v816, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v815 = (float *)v1119;
      }
      v821 = (4 * v289);
      if (v813 == 1)
        goto LABEL_1358;
      if (!(_DWORD)v821)
        goto LABEL_1365;
      v822 = 0;
      v823 = 4 * v814;
      v824 = 4 * v821;
      do
      {
        if (!v815
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1996;
        }
        v825 = v821;
        v826 = 0;
        v827 = *(_QWORD *)(v288 + 48);
        do
        {
          sub_20E9EDF48(v827, &v815[v826 / 4]);
          v826 += 4;
        }
        while (v824 != v826);
        v815 = (float *)((char *)v815 + v823);
        ++v822;
        v821 = v825;
      }
      while (v822 != v813 - 1);
LABEL_1358:
      if ((_DWORD)v821 && !v815)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1996:
          abort();
        }
        v815 = 0;
      }
      if ((_DWORD)v821)
      {
        v828 = *(_QWORD *)(v288 + 48);
        v829 = 4 * v821;
        do
        {
          sub_20E9EDF48(v828, v815++);
          v829 -= 4;
        }
        while (v829);
      }
LABEL_1365:
      v830 = v1130;
      v1130 = 0;
      if (v830)
        (*(void (**)(uint64_t))(*(_QWORD *)v830 + 8))(v830);
      v473 = v1118;
      if (!v1118)
        return;
      v831 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v831);
      while (__stlxr(v475 - 1, v831));
      goto LABEL_1975;
    case 17:
      v1116 = &off_24CA123B0;
      sub_20FF6F900((std::string::size_type *)&v1117, a3);
      v406 = *a2;
      v407 = v1127;
      v408 = v1117;
      if (!v1117)
        goto LABEL_1691;
      v409 = v1118;
      if (v1118)
      {
        v410 = (unint64_t *)&v1118->__shared_owners_;
        do
          v411 = __ldxr(v410);
        while (__stxr(v411 + 1, v410));
        do
          v412 = __ldaxr(v410);
        while (__stlxr(v412 - 1, v410));
        if (!v412)
        {
          ((void (*)(std::__shared_weak_count *))v409->__on_zero_shared)(v409);
          std::__shared_weak_count::__release_weak(v409);
        }
        v408 = v1117;
        v413 = v1118;
        if (v1118)
        {
          v414 = (unint64_t *)&v1118->__shared_owners_;
          do
            v415 = __ldxr(v414);
          while (__stxr(v415 + 1, v414));
          do
            v416 = __ldaxr(v414);
          while (__stlxr(v416 - 1, v414));
          if (!v416)
          {
            ((void (*)(std::__shared_weak_count *))v413->__on_zero_shared)(v413);
            std::__shared_weak_count::__release_weak(v413);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v408 + 96))(&v1130, v408, 1);
      else
LABEL_1691:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1956;
      if (!v1121)
        goto LABEL_1956;
      v986 = v1122;
      if (!v1122)
        goto LABEL_1956;
      v987 = v1126;
      v988 = v1119;
      if (v1128 && v1119)
      {
        v989 = v1117;
        v990 = v1118;
        if (v1118)
        {
          v991 = (unint64_t *)&v1118->__shared_owners_;
          do
            v992 = __ldxr(v991);
          while (__stxr(v992 + 1, v991));
          do
            v993 = __ldaxr(v991);
          while (__stlxr(v993 - 1, v991));
          if (!v993)
          {
            ((void (*)(std::__shared_weak_count *))v990->__on_zero_shared)(v990);
            std::__shared_weak_count::__release_weak(v990);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v989 + 88))(v989, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v988 = v1119;
      }
      v994 = (3 * v407);
      v995 = v986 - 1;
      if (v986 == 1)
      {
        v1113 = v407;
LABEL_1949:
        if (v1113 && !v988)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2006;
          }
          v988 = 0;
        }
        if (v1113)
        {
          v1079 = *(_QWORD *)(v406 + 48);
          do
          {
            sub_20E9ED7B4(v1079, v988++);
            --v994;
          }
          while (v994);
        }
      }
      else if (v407)
      {
        v1113 = v407;
        v996 = 0;
        while (v988
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v997 = 0;
          v998 = *(_QWORD *)(v406 + 48);
          do
            sub_20E9ED7B4(v998, &v988[v997++]);
          while (v994 != v997);
          v988 += v987;
          if (++v996 == v995)
            goto LABEL_1949;
        }
LABEL_2006:
        abort();
      }
LABEL_1956:
      v1080 = v1130;
      v1130 = 0;
      if (v1080)
        (*(void (**)(uint64_t))(*(_QWORD *)v1080 + 8))(v1080);
      v473 = v1118;
      if (!v1118)
        return;
      v1081 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1081);
      while (__stlxr(v475 - 1, v1081));
      goto LABEL_1975;
    case 18:
      v1116 = &off_24CA124A8;
      sub_20FF70164((std::string::size_type *)&v1117, a3);
      v113 = *a2;
      v114 = v1127;
      v115 = v1117;
      if (!v1117)
        goto LABEL_866;
      v116 = v1118;
      if (v1118)
      {
        v117 = (unint64_t *)&v1118->__shared_owners_;
        do
          v118 = __ldxr(v117);
        while (__stxr(v118 + 1, v117));
        do
          v119 = __ldaxr(v117);
        while (__stlxr(v119 - 1, v117));
        if (!v119)
        {
          ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
          std::__shared_weak_count::__release_weak(v116);
        }
        v115 = v1117;
        v120 = v1118;
        if (v1118)
        {
          v121 = (unint64_t *)&v1118->__shared_owners_;
          do
            v122 = __ldxr(v121);
          while (__stxr(v122 + 1, v121));
          do
            v123 = __ldaxr(v121);
          while (__stlxr(v123 - 1, v121));
          if (!v123)
          {
            ((void (*)(std::__shared_weak_count *))v120->__on_zero_shared)(v120);
            std::__shared_weak_count::__release_weak(v120);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v115 + 96))(&v1130, v115, 1);
      else
LABEL_866:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1886;
      if (!v1121)
        goto LABEL_1886;
      v568 = v1122;
      if (!v1122)
        goto LABEL_1886;
      v569 = v1126;
      v570 = v1119;
      if (v1128 && v1119)
      {
        v571 = v1117;
        v572 = v1118;
        if (v1118)
        {
          v573 = (unint64_t *)&v1118->__shared_owners_;
          do
            v574 = __ldxr(v573);
          while (__stxr(v574 + 1, v573));
          do
            v575 = __ldaxr(v573);
          while (__stlxr(v575 - 1, v573));
          if (!v575)
          {
            ((void (*)(std::__shared_weak_count *))v572->__on_zero_shared)(v572);
            std::__shared_weak_count::__release_weak(v572);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v571 + 88))(v571, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v570 = v1119;
      }
      v1103 = (3 * v114);
      if (v568 == 1)
      {
        v1088 = v114;
LABEL_1879:
        if (v1088 && !v570)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1987;
          }
          v570 = 0;
        }
        if (v1088)
        {
          v1060 = *(_QWORD *)(v113 + 48);
          v1061 = 2 * v1103;
          do
          {
            sub_20E9ED948(v1060, v570++);
            v1061 -= 2;
          }
          while (v1061);
        }
      }
      else if (v114)
      {
        v1088 = v114;
        v576 = 0;
        v577 = 2 * v569;
        while (v570
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v578 = 0;
          v579 = *(_QWORD *)(v113 + 48);
          do
            sub_20E9ED948(v579, &v570[v578++]);
          while (v1103 != v578);
          v570 = (_WORD *)((char *)v570 + v577);
          if (++v576 == v568 - 1)
            goto LABEL_1879;
        }
LABEL_1987:
        abort();
      }
LABEL_1886:
      v1062 = v1130;
      v1130 = 0;
      if (v1062)
        (*(void (**)(uint64_t))(*(_QWORD *)v1062 + 8))(v1062);
      v473 = v1118;
      if (!v1118)
        return;
      v1063 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1063);
      while (__stlxr(v475 - 1, v1063));
      goto LABEL_1975;
    case 19:
      v1116 = &off_24CA125A0;
      sub_20FF709CC((std::string::size_type *)&v1117, a3);
      v26 = *a2;
      v1094 = v1127;
      v27 = v1117;
      if (!v1117)
        goto LABEL_627;
      v28 = v1118;
      if (v1118)
      {
        v29 = (unint64_t *)&v1118->__shared_owners_;
        do
          v30 = __ldxr(v29);
        while (__stxr(v30 + 1, v29));
        do
          v31 = __ldaxr(v29);
        while (__stlxr(v31 - 1, v29));
        if (!v31)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
        v27 = v1117;
        v32 = v1118;
        if (v1118)
        {
          v33 = (unint64_t *)&v1118->__shared_owners_;
          do
            v34 = __ldxr(v33);
          while (__stxr(v34 + 1, v33));
          do
            v35 = __ldaxr(v33);
          while (__stlxr(v35 - 1, v33));
          if (!v35)
          {
            ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
            std::__shared_weak_count::__release_weak(v32);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v27 + 96))(&v1130, v27, 1);
      else
LABEL_627:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1772;
      if (!v1121)
        goto LABEL_1772;
      v449 = v1122;
      if (!v1122)
        goto LABEL_1772;
      v450 = v1126;
      v451 = v1119;
      if (v1128 && v1119)
      {
        v452 = v1117;
        v453 = v1118;
        if (v1118)
        {
          v454 = (unint64_t *)&v1118->__shared_owners_;
          do
            v455 = __ldxr(v454);
          while (__stxr(v455 + 1, v454));
          do
            v456 = __ldaxr(v454);
          while (__stlxr(v456 - 1, v454));
          if (!v456)
          {
            ((void (*)(std::__shared_weak_count *))v453->__on_zero_shared)(v453);
            std::__shared_weak_count::__release_weak(v453);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v452 + 88))(v452, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v451 = v1119;
      }
      v1085 = (3 * v1094);
      if (v449 == 1)
        goto LABEL_648;
      if (!v1094)
        goto LABEL_1772;
      v457 = 0;
      do
      {
        if (!v451
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_651;
        }
        v458 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v26 + 48), &v1115);
          v451[v458++] = v1115;
        }
        while (v1085 != v458);
        v451 += v450;
        ++v457;
      }
      while (v457 != v449 - 1);
LABEL_648:
      if (!v1094 || v451)
      {
        if (!v1094)
          goto LABEL_1772;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_651:
        abort();
      }
      v1025 = 2 * v1085;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v26 + 48), &v1115);
        *v451++ = v1115;
        v1025 -= 2;
      }
      while (v1025);
LABEL_1772:
      v1026 = v1130;
      v1130 = 0;
      if (v1026)
        (*(void (**)(uint64_t))(*(_QWORD *)v1026 + 8))(v1026);
      v473 = v1118;
      if (!v1118)
        return;
      v1027 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1027);
      while (__stlxr(v475 - 1, v1027));
      goto LABEL_1975;
    case 20:
      v1116 = &off_24CA12698;
      sub_20FF71234((std::string::size_type *)&v1117, a3);
      v373 = *a2;
      v374 = v1127;
      v375 = v1117;
      if (!v1117)
        goto LABEL_1610;
      v376 = v1118;
      if (v1118)
      {
        v377 = (unint64_t *)&v1118->__shared_owners_;
        do
          v378 = __ldxr(v377);
        while (__stxr(v378 + 1, v377));
        do
          v379 = __ldaxr(v377);
        while (__stlxr(v379 - 1, v377));
        if (!v379)
        {
          ((void (*)(std::__shared_weak_count *))v376->__on_zero_shared)(v376);
          std::__shared_weak_count::__release_weak(v376);
        }
        v375 = v1117;
        v380 = v1118;
        if (v1118)
        {
          v381 = (unint64_t *)&v1118->__shared_owners_;
          do
            v382 = __ldxr(v381);
          while (__stxr(v382 + 1, v381));
          do
            v383 = __ldaxr(v381);
          while (__stlxr(v383 - 1, v381));
          if (!v383)
          {
            ((void (*)(std::__shared_weak_count *))v380->__on_zero_shared)(v380);
            std::__shared_weak_count::__release_weak(v380);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v375 + 96))(&v1130, v375, 1);
      else
LABEL_1610:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1942;
      if (!v1121)
        goto LABEL_1942;
      v944 = v1122;
      if (!v1122)
        goto LABEL_1942;
      v945 = v1126;
      v946 = (float *)v1119;
      if (v1128 && v1119)
      {
        v947 = v1117;
        v948 = v1118;
        if (v1118)
        {
          v949 = (unint64_t *)&v1118->__shared_owners_;
          do
            v950 = __ldxr(v949);
          while (__stxr(v950 + 1, v949));
          do
            v951 = __ldaxr(v949);
          while (__stlxr(v951 - 1, v949));
          if (!v951)
          {
            ((void (*)(std::__shared_weak_count *))v948->__on_zero_shared)(v948);
            std::__shared_weak_count::__release_weak(v948);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v947 + 88))(v947, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v946 = (float *)v1119;
      }
      v1111 = (3 * v374);
      if (v944 == 1)
      {
        v1092 = v374;
LABEL_1935:
        if (v1092 && !v946)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2005;
          }
          v946 = 0;
        }
        if (v1092)
        {
          v1075 = *(_QWORD *)(v373 + 48);
          v1076 = 4 * v1111;
          do
          {
            sub_20E9EDF48(v1075, v946++);
            v1076 -= 4;
          }
          while (v1076);
        }
      }
      else if (v374)
      {
        v1092 = v374;
        v952 = 0;
        v953 = 4 * v945;
        while (v946
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v954 = 0;
          v955 = *(_QWORD *)(v373 + 48);
          do
            sub_20E9EDF48(v955, &v946[v954++]);
          while (v1111 != v954);
          v946 = (float *)((char *)v946 + v953);
          if (++v952 == v944 - 1)
            goto LABEL_1935;
        }
LABEL_2005:
        abort();
      }
LABEL_1942:
      v1077 = v1130;
      v1130 = 0;
      if (v1077)
        (*(void (**)(uint64_t))(*(_QWORD *)v1077 + 8))(v1077);
      v473 = v1118;
      if (!v1118)
        return;
      v1078 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1078);
      while (__stlxr(v475 - 1, v1078));
      goto LABEL_1975;
    case 21:
      v1116 = &off_24C9F0FA0;
      sub_20FF71A34(&v1117, a3);
      v427 = *a2;
      v428 = v1127;
      v429 = v1117;
      if (!v1117)
        goto LABEL_1738;
      v430 = v1118;
      if (v1118)
      {
        v431 = (unint64_t *)&v1118->__shared_owners_;
        do
          v432 = __ldxr(v431);
        while (__stxr(v432 + 1, v431));
        do
          v433 = __ldaxr(v431);
        while (__stlxr(v433 - 1, v431));
        if (!v433)
        {
          ((void (*)(std::__shared_weak_count *))v430->__on_zero_shared)(v430);
          std::__shared_weak_count::__release_weak(v430);
        }
        v429 = v1117;
        v434 = v1118;
        if (v1118)
        {
          v435 = (unint64_t *)&v1118->__shared_owners_;
          do
            v436 = __ldxr(v435);
          while (__stxr(v436 + 1, v435));
          do
            v437 = __ldaxr(v435);
          while (__stlxr(v437 - 1, v435));
          if (!v437)
          {
            ((void (*)(std::__shared_weak_count *))v434->__on_zero_shared)(v434);
            std::__shared_weak_count::__release_weak(v434);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v429 + 96))(&v1130, v429, 1);
      else
LABEL_1738:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1970;
      if (!v1121)
        goto LABEL_1970;
      v1009 = v1122;
      if (!v1122)
        goto LABEL_1970;
      v1010 = v1126;
      v1011 = v1119;
      if (v1128 && v1119)
      {
        v1012 = v1117;
        v1013 = v1118;
        if (v1118)
        {
          v1014 = (unint64_t *)&v1118->__shared_owners_;
          do
            v1015 = __ldxr(v1014);
          while (__stxr(v1015 + 1, v1014));
          do
            v1016 = __ldaxr(v1014);
          while (__stlxr(v1016 - 1, v1014));
          if (!v1016)
          {
            ((void (*)(std::__shared_weak_count *))v1013->__on_zero_shared)(v1013);
            std::__shared_weak_count::__release_weak(v1013);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1012 + 88))(v1012, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1011 = v1119;
      }
      v1017 = (3 * v428);
      v1018 = v1009 - 1;
      if (v1009 == 1)
      {
        v1114 = v428;
LABEL_1963:
        if (v1114 && !v1011)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_2007;
          }
          v1011 = 0;
        }
        if (v1114)
        {
          v1082 = *(_QWORD *)(v427 + 48);
          do
          {
            sub_20E9ED7B4(v1082, v1011++);
            --v1017;
          }
          while (v1017);
        }
      }
      else if (v428)
      {
        v1114 = v428;
        v1019 = 0;
        while (v1011
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1020 = 0;
          v1021 = *(_QWORD *)(v427 + 48);
          do
            sub_20E9ED7B4(v1021, &v1011[v1020++]);
          while (v1017 != v1020);
          v1011 += v1010;
          if (++v1019 == v1018)
            goto LABEL_1963;
        }
LABEL_2007:
        abort();
      }
LABEL_1970:
      v1083 = v1130;
      v1130 = 0;
      if (v1083)
        (*(void (**)(uint64_t))(*(_QWORD *)v1083 + 8))(v1083);
      v473 = v1118;
      if (!v1118)
        return;
      v1084 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1084);
      while (__stlxr(v475 - 1, v1084));
      goto LABEL_1975;
    case 22:
      v1116 = &off_24CA12790;
      sub_20FF71E24(&v1117, a3);
      v146 = *a2;
      v147 = v1127;
      v148 = v1117;
      if (!v1117)
        goto LABEL_938;
      v149 = v1118;
      if (v1118)
      {
        v150 = (unint64_t *)&v1118->__shared_owners_;
        do
          v151 = __ldxr(v150);
        while (__stxr(v151 + 1, v150));
        do
          v152 = __ldaxr(v150);
        while (__stlxr(v152 - 1, v150));
        if (!v152)
        {
          ((void (*)(std::__shared_weak_count *))v149->__on_zero_shared)(v149);
          std::__shared_weak_count::__release_weak(v149);
        }
        v148 = v1117;
        v153 = v1118;
        if (v1118)
        {
          v154 = (unint64_t *)&v1118->__shared_owners_;
          do
            v155 = __ldxr(v154);
          while (__stxr(v155 + 1, v154));
          do
            v156 = __ldaxr(v154);
          while (__stlxr(v156 - 1, v154));
          if (!v156)
          {
            ((void (*)(std::__shared_weak_count *))v153->__on_zero_shared)(v153);
            std::__shared_weak_count::__release_weak(v153);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v148 + 96))(&v1130, v148, 1);
      else
LABEL_938:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1900;
      if (!v1121)
        goto LABEL_1900;
      v602 = v1122;
      if (!v1122)
        goto LABEL_1900;
      v603 = v1126;
      v604 = v1119;
      if (v1128 && v1119)
      {
        v605 = v1117;
        v606 = v1118;
        if (v1118)
        {
          v607 = (unint64_t *)&v1118->__shared_owners_;
          do
            v608 = __ldxr(v607);
          while (__stxr(v608 + 1, v607));
          do
            v609 = __ldaxr(v607);
          while (__stlxr(v609 - 1, v607));
          if (!v609)
          {
            ((void (*)(std::__shared_weak_count *))v606->__on_zero_shared)(v606);
            std::__shared_weak_count::__release_weak(v606);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v605 + 88))(v605, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v604 = v1119;
      }
      v1106 = (3 * v147);
      if (v602 == 1)
      {
        v1089 = v147;
LABEL_1893:
        if (v1089 && !v604)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1988;
          }
          v604 = 0;
        }
        if (v1089)
        {
          v1064 = *(_QWORD *)(v146 + 48);
          v1065 = 2 * v1106;
          do
          {
            sub_20E9ED948(v1064, v604++);
            v1065 -= 2;
          }
          while (v1065);
        }
      }
      else if (v147)
      {
        v1089 = v147;
        v610 = 0;
        v611 = 2 * v603;
        while (v604
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v612 = 0;
          v613 = *(_QWORD *)(v146 + 48);
          do
            sub_20E9ED948(v613, &v604[v612++]);
          while (v1106 != v612);
          v604 = (_WORD *)((char *)v604 + v611);
          if (++v610 == v602 - 1)
            goto LABEL_1893;
        }
LABEL_1988:
        abort();
      }
LABEL_1900:
      v1066 = v1130;
      v1130 = 0;
      if (v1066)
        (*(void (**)(uint64_t))(*(_QWORD *)v1066 + 8))(v1066);
      v473 = v1118;
      if (!v1118)
        return;
      v1067 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1067);
      while (__stlxr(v475 - 1, v1067));
      goto LABEL_1975;
    case 23:
      v1116 = &off_24CA12888;
      sub_20FF726DC(&v1117, a3);
      v417 = *a2;
      v1099 = v1127;
      v418 = v1117;
      if (!v1117)
        goto LABEL_1713;
      v419 = v1118;
      if (v1118)
      {
        v420 = (unint64_t *)&v1118->__shared_owners_;
        do
          v421 = __ldxr(v420);
        while (__stxr(v421 + 1, v420));
        do
          v422 = __ldaxr(v420);
        while (__stlxr(v422 - 1, v420));
        if (!v422)
        {
          ((void (*)(std::__shared_weak_count *))v419->__on_zero_shared)(v419);
          std::__shared_weak_count::__release_weak(v419);
        }
        v418 = v1117;
        v423 = v1118;
        if (v1118)
        {
          v424 = (unint64_t *)&v1118->__shared_owners_;
          do
            v425 = __ldxr(v424);
          while (__stxr(v425 + 1, v424));
          do
            v426 = __ldaxr(v424);
          while (__stlxr(v426 - 1, v424));
          if (!v426)
          {
            ((void (*)(std::__shared_weak_count *))v423->__on_zero_shared)(v423);
            std::__shared_weak_count::__release_weak(v423);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v418 + 96))(&v1130, v418, 1);
      else
LABEL_1713:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1844;
      if (!v1121)
        goto LABEL_1844;
      v999 = v1122;
      if (!v1122)
        goto LABEL_1844;
      v1000 = v1126;
      v1001 = v1119;
      if (v1128 && v1119)
      {
        v1002 = v1117;
        v1003 = v1118;
        if (v1118)
        {
          v1004 = (unint64_t *)&v1118->__shared_owners_;
          do
            v1005 = __ldxr(v1004);
          while (__stxr(v1005 + 1, v1004));
          do
            v1006 = __ldaxr(v1004);
          while (__stlxr(v1006 - 1, v1004));
          if (!v1006)
          {
            ((void (*)(std::__shared_weak_count *))v1003->__on_zero_shared)(v1003);
            std::__shared_weak_count::__release_weak(v1003);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1002 + 88))(v1002, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1001 = v1119;
      }
      v1093 = (3 * v1099);
      if (v999 == 1)
        goto LABEL_1734;
      if (!v1099)
        goto LABEL_1844;
      v1007 = 0;
      do
      {
        if (!v1001
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1737;
        }
        v1008 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v417 + 48), &v1115);
          v1001[v1008++] = v1115;
        }
        while (v1093 != v1008);
        v1001 += v1000;
        ++v1007;
      }
      while (v1007 != v999 - 1);
LABEL_1734:
      if (!v1099 || v1001)
      {
        if (!v1099)
          goto LABEL_1844;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1737:
        abort();
      }
      v1049 = 2 * v1093;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v417 + 48), &v1115);
        *v1001++ = v1115;
        v1049 -= 2;
      }
      while (v1049);
LABEL_1844:
      v1050 = v1130;
      v1130 = 0;
      if (v1050)
        (*(void (**)(uint64_t))(*(_QWORD *)v1050 + 8))(v1050);
      v473 = v1118;
      if (!v1118)
        return;
      v1051 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1051);
      while (__stlxr(v475 - 1, v1051));
      goto LABEL_1975;
    case 24:
      v1116 = &off_24CA12980;
      sub_20FF72F94(&v1117, a3);
      v69 = *a2;
      v70 = v1127;
      v71 = v1117;
      if (!v1117)
        goto LABEL_742;
      v72 = v1118;
      if (v1118)
      {
        v73 = (unint64_t *)&v1118->__shared_owners_;
        do
          v74 = __ldxr(v73);
        while (__stxr(v74 + 1, v73));
        do
          v75 = __ldaxr(v73);
        while (__stlxr(v75 - 1, v73));
        if (!v75)
        {
          ((void (*)(std::__shared_weak_count *))v72->__on_zero_shared)(v72);
          std::__shared_weak_count::__release_weak(v72);
        }
        v71 = v1117;
        v76 = v1118;
        if (v1118)
        {
          v77 = (unint64_t *)&v1118->__shared_owners_;
          do
            v78 = __ldxr(v77);
          while (__stxr(v78 + 1, v77));
          do
            v79 = __ldaxr(v77);
          while (__stlxr(v79 - 1, v77));
          if (!v79)
          {
            ((void (*)(std::__shared_weak_count *))v76->__on_zero_shared)(v76);
            std::__shared_weak_count::__release_weak(v76);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v71 + 96))(&v1130, v71, 1);
      else
LABEL_742:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1872;
      if (!v1121)
        goto LABEL_1872;
      v503 = v1122;
      if (!v1122)
        goto LABEL_1872;
      v504 = v1126;
      v505 = (float *)v1119;
      if (v1128 && v1119)
      {
        v506 = v1117;
        v507 = v1118;
        if (v1118)
        {
          v508 = (unint64_t *)&v1118->__shared_owners_;
          do
            v509 = __ldxr(v508);
          while (__stxr(v509 + 1, v508));
          do
            v510 = __ldaxr(v508);
          while (__stlxr(v510 - 1, v508));
          if (!v510)
          {
            ((void (*)(std::__shared_weak_count *))v507->__on_zero_shared)(v507);
            std::__shared_weak_count::__release_weak(v507);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v506 + 88))(v506, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v505 = (float *)v1119;
      }
      v1102 = (3 * v70);
      if (v503 == 1)
      {
        v1087 = v70;
LABEL_1865:
        if (v1087 && !v505)
        {
          if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            goto LABEL_1986;
          }
          v505 = 0;
        }
        if (v1087)
        {
          v1056 = *(_QWORD *)(v69 + 48);
          v1057 = 4 * v1102;
          do
          {
            sub_20E9EDF48(v1056, v505++);
            v1057 -= 4;
          }
          while (v1057);
        }
      }
      else if (v70)
      {
        v1087 = v70;
        v511 = 0;
        v512 = 4 * v504;
        while (v505
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v513 = 0;
          v514 = *(_QWORD *)(v69 + 48);
          do
            sub_20E9EDF48(v514, &v505[v513++]);
          while (v1102 != v513);
          v505 = (float *)((char *)v505 + v512);
          if (++v511 == v503 - 1)
            goto LABEL_1865;
        }
LABEL_1986:
        abort();
      }
LABEL_1872:
      v1058 = v1130;
      v1130 = 0;
      if (v1058)
        (*(void (**)(uint64_t))(*(_QWORD *)v1058 + 8))(v1058);
      v473 = v1118;
      if (v1118)
      {
        v1059 = (unint64_t *)&v1118->__shared_owners_;
        do
          v475 = __ldaxr(v1059);
        while (__stlxr(v475 - 1, v1059));
LABEL_1975:
        if (!v475)
        {
          ((void (*)(std::__shared_weak_count *))v473->__on_zero_shared)(v473);
          std::__shared_weak_count::__release_weak(v473);
        }
      }
      return;
    case 25:
      v1116 = &off_24C9C04B8;
      sub_20FF737E4(&v1117, a3);
      v36 = *a2;
      v37 = v1127;
      v38 = v1117;
      if (!v1117)
        goto LABEL_652;
      v39 = v1118;
      if (v1118)
      {
        v40 = (unint64_t *)&v1118->__shared_owners_;
        do
          v41 = __ldxr(v40);
        while (__stxr(v41 + 1, v40));
        do
          v42 = __ldaxr(v40);
        while (__stlxr(v42 - 1, v40));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
          std::__shared_weak_count::__release_weak(v39);
        }
        v38 = v1117;
        v43 = v1118;
        if (v1118)
        {
          v44 = (unint64_t *)&v1118->__shared_owners_;
          do
            v45 = __ldxr(v44);
          while (__stxr(v45 + 1, v44));
          do
            v46 = __ldaxr(v44);
          while (__stlxr(v46 - 1, v44));
          if (!v46)
          {
            ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
            std::__shared_weak_count::__release_weak(v43);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v38 + 96))(&v1130, v38, 1);
      else
LABEL_652:
        v1130 = 0;
      if (!v1120)
        goto LABEL_680;
      if (!v1121)
        goto LABEL_680;
      v459 = v1122;
      if (!v1122)
        goto LABEL_680;
      v460 = v1126;
      v461 = v1119;
      if (v1128 && v1119)
      {
        v462 = v1117;
        v463 = v1118;
        if (v1118)
        {
          v464 = (unint64_t *)&v1118->__shared_owners_;
          do
            v465 = __ldxr(v464);
          while (__stxr(v465 + 1, v464));
          do
            v466 = __ldaxr(v464);
          while (__stlxr(v466 - 1, v464));
          if (!v466)
          {
            ((void (*)(std::__shared_weak_count *))v463->__on_zero_shared)(v463);
            std::__shared_weak_count::__release_weak(v463);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v462 + 88))(v462, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v461 = v1119;
      }
      v467 = (4 * v37);
      if (v459 == 1)
        goto LABEL_673;
      if (!(_DWORD)v467)
        goto LABEL_680;
      v468 = 0;
      do
      {
        if (!v461
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1978;
        }
        v469 = 0;
        v470 = *(_QWORD *)(v36 + 48);
        do
          sub_20E9ED7B4(v470, &v461[v469++]);
        while (v467 != v469);
        v461 += v460;
        ++v468;
      }
      while (v468 != v459 - 1);
LABEL_673:
      if ((_DWORD)v467 && !v461)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1978:
          abort();
        }
        v461 = 0;
      }
      if ((_DWORD)v467)
      {
        v471 = *(_QWORD *)(v36 + 48);
        do
        {
          sub_20E9ED7B4(v471, v461++);
          --v467;
        }
        while (v467);
      }
LABEL_680:
      v472 = v1130;
      v1130 = 0;
      if (v472)
        (*(void (**)(uint64_t))(*(_QWORD *)v472 + 8))(v472);
      v473 = v1118;
      if (!v1118)
        return;
      v474 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v474);
      while (__stlxr(v475 - 1, v474));
      goto LABEL_1975;
    case 26:
      v1116 = &off_24CA12A78;
      sub_20FF73E90((std::string::size_type *)&v1117, a3);
      v157 = *a2;
      v158 = v1127;
      v159 = v1117;
      if (!v1117)
        goto LABEL_960;
      v160 = v1118;
      if (v1118)
      {
        v161 = (unint64_t *)&v1118->__shared_owners_;
        do
          v162 = __ldxr(v161);
        while (__stxr(v162 + 1, v161));
        do
          v163 = __ldaxr(v161);
        while (__stlxr(v163 - 1, v161));
        if (!v163)
        {
          ((void (*)(std::__shared_weak_count *))v160->__on_zero_shared)(v160);
          std::__shared_weak_count::__release_weak(v160);
        }
        v159 = v1117;
        v164 = v1118;
        if (v1118)
        {
          v165 = (unint64_t *)&v1118->__shared_owners_;
          do
            v166 = __ldxr(v165);
          while (__stxr(v166 + 1, v165));
          do
            v167 = __ldaxr(v165);
          while (__stlxr(v167 - 1, v165));
          if (!v167)
          {
            ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
            std::__shared_weak_count::__release_weak(v164);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v159 + 96))(&v1130, v159, 1);
      else
LABEL_960:
        v1130 = 0;
      if (!v1120)
        goto LABEL_988;
      if (!v1121)
        goto LABEL_988;
      v614 = v1122;
      if (!v1122)
        goto LABEL_988;
      v615 = v1126;
      v616 = v1119;
      if (v1128 && v1119)
      {
        v617 = v1117;
        v618 = v1118;
        if (v1118)
        {
          v619 = (unint64_t *)&v1118->__shared_owners_;
          do
            v620 = __ldxr(v619);
          while (__stxr(v620 + 1, v619));
          do
            v621 = __ldaxr(v619);
          while (__stlxr(v621 - 1, v619));
          if (!v621)
          {
            ((void (*)(std::__shared_weak_count *))v618->__on_zero_shared)(v618);
            std::__shared_weak_count::__release_weak(v618);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v617 + 88))(v617, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v616 = v1119;
      }
      v622 = (4 * v158);
      if (v614 == 1)
        goto LABEL_981;
      if (!(_DWORD)v622)
        goto LABEL_988;
      v623 = 0;
      v624 = 2 * v615;
      v625 = 2 * v622;
      do
      {
        if (!v616
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1983;
        }
        v626 = v622;
        v627 = 0;
        v628 = *(_QWORD *)(v157 + 48);
        do
        {
          sub_20E9ED948(v628, &v616[v627 / 2]);
          v627 += 2;
        }
        while (v625 != v627);
        v616 = (_WORD *)((char *)v616 + v624);
        ++v623;
        v622 = v626;
      }
      while (v623 != v614 - 1);
LABEL_981:
      if ((_DWORD)v622 && !v616)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1983:
          abort();
        }
        v616 = 0;
      }
      if ((_DWORD)v622)
      {
        v629 = *(_QWORD *)(v157 + 48);
        v630 = 2 * v622;
        do
        {
          sub_20E9ED948(v629, v616++);
          v630 -= 2;
        }
        while (v630);
      }
LABEL_988:
      v631 = v1130;
      v1130 = 0;
      if (v631)
        (*(void (**)(uint64_t))(*(_QWORD *)v631 + 8))(v631);
      v473 = v1118;
      if (!v1118)
        return;
      v632 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v632);
      while (__stlxr(v475 - 1, v632));
      goto LABEL_1975;
    case 27:
      v1116 = &off_24CA12B70;
      sub_20FF746F8((std::string::size_type *)&v1117, a3);
      v15 = *a2;
      v16 = v1127;
      v17 = v1117;
      if (!v1117)
        goto LABEL_602;
      v18 = v1118;
      if (v1118)
      {
        v19 = (unint64_t *)&v1118->__shared_owners_;
        do
          v20 = __ldxr(v19);
        while (__stxr(v20 + 1, v19));
        do
          v21 = __ldaxr(v19);
        while (__stlxr(v21 - 1, v19));
        if (!v21)
        {
          ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
          std::__shared_weak_count::__release_weak(v18);
        }
        v17 = v1117;
        v22 = v1118;
        if (v1118)
        {
          v23 = (unint64_t *)&v1118->__shared_owners_;
          do
            v24 = __ldxr(v23);
          while (__stxr(v24 + 1, v23));
          do
            v25 = __ldaxr(v23);
          while (__stlxr(v25 - 1, v23));
          if (!v25)
          {
            ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
            std::__shared_weak_count::__release_weak(v22);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v17 + 96))(&v1130, v17, 1);
      else
LABEL_602:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1763;
      if (!v1121)
        goto LABEL_1763;
      v438 = v1122;
      if (!v1122)
        goto LABEL_1763;
      v439 = v1126;
      v440 = v1119;
      if (v1128 && v1119)
      {
        v441 = v1117;
        v442 = v1118;
        if (v1118)
        {
          v443 = (unint64_t *)&v1118->__shared_owners_;
          do
            v444 = __ldxr(v443);
          while (__stxr(v444 + 1, v443));
          do
            v445 = __ldaxr(v443);
          while (__stlxr(v445 - 1, v443));
          if (!v445)
          {
            ((void (*)(std::__shared_weak_count *))v442->__on_zero_shared)(v442);
            std::__shared_weak_count::__release_weak(v442);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v441 + 88))(v441, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v440 = v1119;
      }
      v446 = v438 - 1;
      v1100 = (4 * v16);
      if (!v446)
        goto LABEL_623;
      if (!(4 * v16))
        goto LABEL_1763;
      for (m = 0; m != v446; ++m)
      {
        if (!v440
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_626;
        }
        v448 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v15 + 48), &v1115);
          v440[v448++] = v1115;
        }
        while (v1100 != v448);
        v440 += v439;
      }
LABEL_623:
      if (!(_DWORD)v1100 || v440)
      {
        if (!(_DWORD)v1100)
          goto LABEL_1763;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_626:
        abort();
      }
      v1022 = 2 * v1100;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v15 + 48), &v1115);
        *v440++ = v1115;
        v1022 -= 2;
      }
      while (v1022);
LABEL_1763:
      v1023 = v1130;
      v1130 = 0;
      if (v1023)
        (*(void (**)(uint64_t))(*(_QWORD *)v1023 + 8))(v1023);
      v473 = v1118;
      if (!v1118)
        return;
      v1024 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1024);
      while (__stlxr(v475 - 1, v1024));
      goto LABEL_1975;
    case 28:
      v1116 = &off_24C9C0E68;
      sub_20FF74EF8((std::string::size_type *)&v1117, a3);
      v200 = *a2;
      v201 = v1127;
      v202 = v1117;
      if (!v1117)
        goto LABEL_1086;
      v203 = v1118;
      if (v1118)
      {
        v204 = (unint64_t *)&v1118->__shared_owners_;
        do
          v205 = __ldxr(v204);
        while (__stxr(v205 + 1, v204));
        do
          v206 = __ldaxr(v204);
        while (__stlxr(v206 - 1, v204));
        if (!v206)
        {
          ((void (*)(std::__shared_weak_count *))v203->__on_zero_shared)(v203);
          std::__shared_weak_count::__release_weak(v203);
        }
        v202 = v1117;
        v207 = v1118;
        if (v1118)
        {
          v208 = (unint64_t *)&v1118->__shared_owners_;
          do
            v209 = __ldxr(v208);
          while (__stxr(v209 + 1, v208));
          do
            v210 = __ldaxr(v208);
          while (__stlxr(v210 - 1, v208));
          if (!v210)
          {
            ((void (*)(std::__shared_weak_count *))v207->__on_zero_shared)(v207);
            std::__shared_weak_count::__release_weak(v207);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v202 + 96))(&v1130, v202, 1);
      else
LABEL_1086:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1114;
      if (!v1121)
        goto LABEL_1114;
      v679 = v1122;
      if (!v1122)
        goto LABEL_1114;
      v680 = v1126;
      v681 = (float *)v1119;
      if (v1128 && v1119)
      {
        v682 = v1117;
        v683 = v1118;
        if (v1118)
        {
          v684 = (unint64_t *)&v1118->__shared_owners_;
          do
            v685 = __ldxr(v684);
          while (__stxr(v685 + 1, v684));
          do
            v686 = __ldaxr(v684);
          while (__stlxr(v686 - 1, v684));
          if (!v686)
          {
            ((void (*)(std::__shared_weak_count *))v683->__on_zero_shared)(v683);
            std::__shared_weak_count::__release_weak(v683);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v682 + 88))(v682, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v681 = (float *)v1119;
      }
      v687 = (4 * v201);
      if (v679 == 1)
        goto LABEL_1107;
      if (!(_DWORD)v687)
        goto LABEL_1114;
      v688 = 0;
      v689 = 4 * v680;
      v690 = 4 * v687;
      do
      {
        if (!v681
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1990;
        }
        v691 = v687;
        v692 = 0;
        v693 = *(_QWORD *)(v200 + 48);
        do
        {
          sub_20E9EDF48(v693, &v681[v692 / 4]);
          v692 += 4;
        }
        while (v690 != v692);
        v681 = (float *)((char *)v681 + v689);
        ++v688;
        v687 = v691;
      }
      while (v688 != v679 - 1);
LABEL_1107:
      if ((_DWORD)v687 && !v681)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1990:
          abort();
        }
        v681 = 0;
      }
      if ((_DWORD)v687)
      {
        v694 = *(_QWORD *)(v200 + 48);
        v695 = 4 * v687;
        do
        {
          sub_20E9EDF48(v694, v681++);
          v695 -= 4;
        }
        while (v695);
      }
LABEL_1114:
      v696 = v1130;
      v1130 = 0;
      if (v696)
        (*(void (**)(uint64_t))(*(_QWORD *)v696 + 8))(v696);
      v473 = v1118;
      if (!v1118)
        return;
      v697 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v697);
      while (__stlxr(v475 - 1, v697));
      goto LABEL_1975;
    case 29:
      v1116 = &off_24C9C03C0;
      sub_20FF754EC(&v1117, a3);
      v58 = *a2;
      v59 = v1127;
      v60 = v1117;
      if (!v1117)
        goto LABEL_708;
      v61 = v1118;
      if (v1118)
      {
        v62 = (unint64_t *)&v1118->__shared_owners_;
        do
          v63 = __ldxr(v62);
        while (__stxr(v63 + 1, v62));
        do
          v64 = __ldaxr(v62);
        while (__stlxr(v64 - 1, v62));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v61->__on_zero_shared)(v61);
          std::__shared_weak_count::__release_weak(v61);
        }
        v60 = v1117;
        v65 = v1118;
        if (v1118)
        {
          v66 = (unint64_t *)&v1118->__shared_owners_;
          do
            v67 = __ldxr(v66);
          while (__stxr(v67 + 1, v66));
          do
            v68 = __ldaxr(v66);
          while (__stlxr(v68 - 1, v66));
          if (!v68)
          {
            ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
            std::__shared_weak_count::__release_weak(v65);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v60 + 96))(&v1130, v60, 1);
      else
LABEL_708:
        v1130 = 0;
      if (!v1120)
        goto LABEL_736;
      if (!v1121)
        goto LABEL_736;
      v488 = v1122;
      if (!v1122)
        goto LABEL_736;
      v489 = v1126;
      v490 = v1119;
      if (v1128 && v1119)
      {
        v491 = v1117;
        v492 = v1118;
        if (v1118)
        {
          v493 = (unint64_t *)&v1118->__shared_owners_;
          do
            v494 = __ldxr(v493);
          while (__stxr(v494 + 1, v493));
          do
            v495 = __ldaxr(v493);
          while (__stlxr(v495 - 1, v493));
          if (!v495)
          {
            ((void (*)(std::__shared_weak_count *))v492->__on_zero_shared)(v492);
            std::__shared_weak_count::__release_weak(v492);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v491 + 88))(v491, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v490 = v1119;
      }
      v496 = (4 * v59);
      if (v488 == 1)
        goto LABEL_729;
      if (!(_DWORD)v496)
        goto LABEL_736;
      v497 = 0;
      do
      {
        if (!v490
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1979;
        }
        v498 = 0;
        v499 = *(_QWORD *)(v58 + 48);
        do
          sub_20E9ED7B4(v499, &v490[v498++]);
        while (v496 != v498);
        v490 += v489;
        ++v497;
      }
      while (v497 != v488 - 1);
LABEL_729:
      if ((_DWORD)v496 && !v490)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1979:
          abort();
        }
        v490 = 0;
      }
      if ((_DWORD)v496)
      {
        v500 = *(_QWORD *)(v58 + 48);
        do
        {
          sub_20E9ED7B4(v500, v490++);
          --v496;
        }
        while (v496);
      }
LABEL_736:
      v501 = v1130;
      v1130 = 0;
      if (v501)
        (*(void (**)(uint64_t))(*(_QWORD *)v501 + 8))(v501);
      v473 = v1118;
      if (!v1118)
        return;
      v502 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v502);
      while (__stlxr(v475 - 1, v502));
      goto LABEL_1975;
    case 30:
      v1116 = &off_24CA12C68;
      sub_20FF75B98(&v1117, a3);
      v233 = *a2;
      v234 = v1127;
      v235 = v1117;
      if (!v1117)
        goto LABEL_1179;
      v236 = v1118;
      if (v1118)
      {
        v237 = (unint64_t *)&v1118->__shared_owners_;
        do
          v238 = __ldxr(v237);
        while (__stxr(v238 + 1, v237));
        do
          v239 = __ldaxr(v237);
        while (__stlxr(v239 - 1, v237));
        if (!v239)
        {
          ((void (*)(std::__shared_weak_count *))v236->__on_zero_shared)(v236);
          std::__shared_weak_count::__release_weak(v236);
        }
        v235 = v1117;
        v240 = v1118;
        if (v1118)
        {
          v241 = (unint64_t *)&v1118->__shared_owners_;
          do
            v242 = __ldxr(v241);
          while (__stxr(v242 + 1, v241));
          do
            v243 = __ldaxr(v241);
          while (__stlxr(v243 - 1, v241));
          if (!v243)
          {
            ((void (*)(std::__shared_weak_count *))v240->__on_zero_shared)(v240);
            std::__shared_weak_count::__release_weak(v240);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v235 + 96))(&v1130, v235, 1);
      else
LABEL_1179:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1207;
      if (!v1121)
        goto LABEL_1207;
      v728 = v1122;
      if (!v1122)
        goto LABEL_1207;
      v729 = v1126;
      v730 = v1119;
      if (v1128 && v1119)
      {
        v731 = v1117;
        v732 = v1118;
        if (v1118)
        {
          v733 = (unint64_t *)&v1118->__shared_owners_;
          do
            v734 = __ldxr(v733);
          while (__stxr(v734 + 1, v733));
          do
            v735 = __ldaxr(v733);
          while (__stlxr(v735 - 1, v733));
          if (!v735)
          {
            ((void (*)(std::__shared_weak_count *))v732->__on_zero_shared)(v732);
            std::__shared_weak_count::__release_weak(v732);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v731 + 88))(v731, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v730 = v1119;
      }
      v736 = (4 * v234);
      if (v728 == 1)
        goto LABEL_1200;
      if (!(_DWORD)v736)
        goto LABEL_1207;
      v737 = 0;
      v738 = 2 * v729;
      v739 = 2 * v736;
      do
      {
        if (!v730
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1992;
        }
        v740 = v736;
        v741 = 0;
        v742 = *(_QWORD *)(v233 + 48);
        do
        {
          sub_20E9ED948(v742, &v730[v741 / 2]);
          v741 += 2;
        }
        while (v739 != v741);
        v730 = (_WORD *)((char *)v730 + v738);
        ++v737;
        v736 = v740;
      }
      while (v737 != v728 - 1);
LABEL_1200:
      if ((_DWORD)v736 && !v730)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1992:
          abort();
        }
        v730 = 0;
      }
      if ((_DWORD)v736)
      {
        v743 = *(_QWORD *)(v233 + 48);
        v744 = 2 * v736;
        do
        {
          sub_20E9ED948(v743, v730++);
          v744 -= 2;
        }
        while (v744);
      }
LABEL_1207:
      v745 = v1130;
      v1130 = 0;
      if (v745)
        (*(void (**)(uint64_t))(*(_QWORD *)v745 + 8))(v745);
      v473 = v1118;
      if (!v1118)
        return;
      v746 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v746);
      while (__stlxr(v475 - 1, v746));
      goto LABEL_1975;
    case 31:
      v1116 = &off_24CA12D60;
      sub_20FF76450(&v1117, a3);
      v168 = *a2;
      v169 = v1127;
      v170 = v1117;
      if (!v1117)
        goto LABEL_994;
      v171 = v1118;
      if (v1118)
      {
        v172 = (unint64_t *)&v1118->__shared_owners_;
        do
          v173 = __ldxr(v172);
        while (__stxr(v173 + 1, v172));
        do
          v174 = __ldaxr(v172);
        while (__stlxr(v174 - 1, v172));
        if (!v174)
        {
          ((void (*)(std::__shared_weak_count *))v171->__on_zero_shared)(v171);
          std::__shared_weak_count::__release_weak(v171);
        }
        v170 = v1117;
        v175 = v1118;
        if (v1118)
        {
          v176 = (unint64_t *)&v1118->__shared_owners_;
          do
            v177 = __ldxr(v176);
          while (__stxr(v177 + 1, v176));
          do
            v178 = __ldaxr(v176);
          while (__stlxr(v178 - 1, v176));
          if (!v178)
          {
            ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
            std::__shared_weak_count::__release_weak(v175);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v170 + 96))(&v1130, v170, 1);
      else
LABEL_994:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1799;
      if (!v1121)
        goto LABEL_1799;
      v633 = v1122;
      if (!v1122)
        goto LABEL_1799;
      v634 = v1126;
      v635 = v1119;
      if (v1128 && v1119)
      {
        v636 = v1117;
        v637 = v1118;
        if (v1118)
        {
          v638 = (unint64_t *)&v1118->__shared_owners_;
          do
            v639 = __ldxr(v638);
          while (__stxr(v639 + 1, v638));
          do
            v640 = __ldaxr(v638);
          while (__stlxr(v640 - 1, v638));
          if (!v640)
          {
            ((void (*)(std::__shared_weak_count *))v637->__on_zero_shared)(v637);
            std::__shared_weak_count::__release_weak(v637);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v636 + 88))(v636, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v635 = v1119;
      }
      v641 = v633 - 1;
      v1107 = (4 * v169);
      if (!v641)
        goto LABEL_1015;
      if (!(4 * v169))
        goto LABEL_1799;
      for (n = 0; n != v641; ++n)
      {
        if (!v635
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1018;
        }
        v643 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v168 + 48), &v1115);
          v635[v643++] = v1115;
        }
        while (v1107 != v643);
        v635 += v634;
      }
LABEL_1015:
      if (!(_DWORD)v1107 || v635)
      {
        if (!(_DWORD)v1107)
          goto LABEL_1799;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1018:
        abort();
      }
      v1034 = 2 * v1107;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v168 + 48), &v1115);
        *v635++ = v1115;
        v1034 -= 2;
      }
      while (v1034);
LABEL_1799:
      v1035 = v1130;
      v1130 = 0;
      if (v1035)
        (*(void (**)(uint64_t))(*(_QWORD *)v1035 + 8))(v1035);
      v473 = v1118;
      if (!v1118)
        return;
      v1036 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1036);
      while (__stlxr(v475 - 1, v1036));
      goto LABEL_1975;
    case 32:
      v1116 = &off_24C9C0D70;
      sub_20FF76CA0(&v1117, a3);
      v255 = *a2;
      v256 = v1127;
      v257 = v1117;
      if (!v1117)
        goto LABEL_1247;
      v258 = v1118;
      if (v1118)
      {
        v259 = (unint64_t *)&v1118->__shared_owners_;
        do
          v260 = __ldxr(v259);
        while (__stxr(v260 + 1, v259));
        do
          v261 = __ldaxr(v259);
        while (__stlxr(v261 - 1, v259));
        if (!v261)
        {
          ((void (*)(std::__shared_weak_count *))v258->__on_zero_shared)(v258);
          std::__shared_weak_count::__release_weak(v258);
        }
        v257 = v1117;
        v262 = v1118;
        if (v1118)
        {
          v263 = (unint64_t *)&v1118->__shared_owners_;
          do
            v264 = __ldxr(v263);
          while (__stxr(v264 + 1, v263));
          do
            v265 = __ldaxr(v263);
          while (__stlxr(v265 - 1, v263));
          if (!v265)
          {
            ((void (*)(std::__shared_weak_count *))v262->__on_zero_shared)(v262);
            std::__shared_weak_count::__release_weak(v262);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v257 + 96))(&v1130, v257, 1);
      else
LABEL_1247:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1275;
      if (!v1121)
        goto LABEL_1275;
      v766 = v1122;
      if (!v1122)
        goto LABEL_1275;
      v767 = v1126;
      v768 = (float *)v1119;
      if (v1128 && v1119)
      {
        v769 = v1117;
        v770 = v1118;
        if (v1118)
        {
          v771 = (unint64_t *)&v1118->__shared_owners_;
          do
            v772 = __ldxr(v771);
          while (__stxr(v772 + 1, v771));
          do
            v773 = __ldaxr(v771);
          while (__stlxr(v773 - 1, v771));
          if (!v773)
          {
            ((void (*)(std::__shared_weak_count *))v770->__on_zero_shared)(v770);
            std::__shared_weak_count::__release_weak(v770);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v769 + 88))(v769, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v768 = (float *)v1119;
      }
      v774 = (4 * v256);
      if (v766 == 1)
        goto LABEL_1268;
      if (!(_DWORD)v774)
        goto LABEL_1275;
      v775 = 0;
      v776 = 4 * v767;
      v777 = 4 * v774;
      do
      {
        if (!v768
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1994;
        }
        v778 = v774;
        v779 = 0;
        v780 = *(_QWORD *)(v255 + 48);
        do
        {
          sub_20E9EDF48(v780, &v768[v779 / 4]);
          v779 += 4;
        }
        while (v777 != v779);
        v768 = (float *)((char *)v768 + v776);
        ++v775;
        v774 = v778;
      }
      while (v775 != v766 - 1);
LABEL_1268:
      if ((_DWORD)v774 && !v768)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1994:
          abort();
        }
        v768 = 0;
      }
      if ((_DWORD)v774)
      {
        v781 = *(_QWORD *)(v255 + 48);
        v782 = 4 * v774;
        do
        {
          sub_20E9EDF48(v781, v768++);
          v782 -= 4;
        }
        while (v782);
      }
LABEL_1275:
      v783 = v1130;
      v1130 = 0;
      if (v783)
        (*(void (**)(uint64_t))(*(_QWORD *)v783 + 8))(v783);
      v473 = v1118;
      if (!v1118)
        return;
      v784 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v784);
      while (__stlxr(v475 - 1, v784));
      goto LABEL_1975;
    case 33:
      v1116 = &off_24CA12E58;
      sub_20FF7734C(&v1117, a3);
      v362 = *a2;
      v363 = v1127;
      v364 = v1117;
      if (!v1117)
        goto LABEL_1576;
      v365 = v1118;
      if (v1118)
      {
        v366 = (unint64_t *)&v1118->__shared_owners_;
        do
          v367 = __ldxr(v366);
        while (__stxr(v367 + 1, v366));
        do
          v368 = __ldaxr(v366);
        while (__stlxr(v368 - 1, v366));
        if (!v368)
        {
          ((void (*)(std::__shared_weak_count *))v365->__on_zero_shared)(v365);
          std::__shared_weak_count::__release_weak(v365);
        }
        v364 = v1117;
        v369 = v1118;
        if (v1118)
        {
          v370 = (unint64_t *)&v1118->__shared_owners_;
          do
            v371 = __ldxr(v370);
          while (__stxr(v371 + 1, v370));
          do
            v372 = __ldaxr(v370);
          while (__stlxr(v372 - 1, v370));
          if (!v372)
          {
            ((void (*)(std::__shared_weak_count *))v369->__on_zero_shared)(v369);
            std::__shared_weak_count::__release_weak(v369);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v364 + 96))(&v1130, v364, 1);
      else
LABEL_1576:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1604;
      if (!v1121)
        goto LABEL_1604;
      v929 = v1122;
      if (!v1122)
        goto LABEL_1604;
      v930 = v1126;
      v931 = v1119;
      if (v1128 && v1119)
      {
        v932 = v1117;
        v933 = v1118;
        if (v1118)
        {
          v934 = (unint64_t *)&v1118->__shared_owners_;
          do
            v935 = __ldxr(v934);
          while (__stxr(v935 + 1, v934));
          do
            v936 = __ldaxr(v934);
          while (__stlxr(v936 - 1, v934));
          if (!v936)
          {
            ((void (*)(std::__shared_weak_count *))v933->__on_zero_shared)(v933);
            std::__shared_weak_count::__release_weak(v933);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v932 + 88))(v932, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v931 = v1119;
      }
      v937 = (4 * v363);
      if (v929 == 1)
        goto LABEL_1597;
      if (!(_DWORD)v937)
        goto LABEL_1604;
      v938 = 0;
      do
      {
        if (!v931
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_2002;
        }
        v939 = 0;
        v940 = *(_QWORD *)(v362 + 48);
        do
          sub_20E9ED7B4(v940, &v931[v939++]);
        while (v937 != v939);
        v931 += v930;
        ++v938;
      }
      while (v938 != v929 - 1);
LABEL_1597:
      if ((_DWORD)v937 && !v931)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_2002:
          abort();
        }
        v931 = 0;
      }
      if ((_DWORD)v937)
      {
        v941 = *(_QWORD *)(v362 + 48);
        do
        {
          sub_20E9ED7B4(v941, v931++);
          --v937;
        }
        while (v937);
      }
LABEL_1604:
      v942 = v1130;
      v1130 = 0;
      if (v942)
        (*(void (**)(uint64_t))(*(_QWORD *)v942 + 8))(v942);
      v473 = v1118;
      if (!v1118)
        return;
      v943 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v943);
      while (__stlxr(v475 - 1, v943));
      goto LABEL_1975;
    case 34:
      v1116 = &off_24CA12F50;
      sub_20FF77C00((std::string::size_type *)&v1117, a3);
      v244 = *a2;
      v245 = v1127;
      v246 = v1117;
      if (!v1117)
        goto LABEL_1213;
      v247 = v1118;
      if (v1118)
      {
        v248 = (unint64_t *)&v1118->__shared_owners_;
        do
          v249 = __ldxr(v248);
        while (__stxr(v249 + 1, v248));
        do
          v250 = __ldaxr(v248);
        while (__stlxr(v250 - 1, v248));
        if (!v250)
        {
          ((void (*)(std::__shared_weak_count *))v247->__on_zero_shared)(v247);
          std::__shared_weak_count::__release_weak(v247);
        }
        v246 = v1117;
        v251 = v1118;
        if (v1118)
        {
          v252 = (unint64_t *)&v1118->__shared_owners_;
          do
            v253 = __ldxr(v252);
          while (__stxr(v253 + 1, v252));
          do
            v254 = __ldaxr(v252);
          while (__stlxr(v254 - 1, v252));
          if (!v254)
          {
            ((void (*)(std::__shared_weak_count *))v251->__on_zero_shared)(v251);
            std::__shared_weak_count::__release_weak(v251);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v246 + 96))(&v1130, v246, 1);
      else
LABEL_1213:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1241;
      if (!v1121)
        goto LABEL_1241;
      v747 = v1122;
      if (!v1122)
        goto LABEL_1241;
      v748 = v1126;
      v749 = v1119;
      if (v1128 && v1119)
      {
        v750 = v1117;
        v751 = v1118;
        if (v1118)
        {
          v752 = (unint64_t *)&v1118->__shared_owners_;
          do
            v753 = __ldxr(v752);
          while (__stxr(v753 + 1, v752));
          do
            v754 = __ldaxr(v752);
          while (__stlxr(v754 - 1, v752));
          if (!v754)
          {
            ((void (*)(std::__shared_weak_count *))v751->__on_zero_shared)(v751);
            std::__shared_weak_count::__release_weak(v751);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v750 + 88))(v750, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v749 = v1119;
      }
      v755 = (4 * v245);
      if (v747 == 1)
        goto LABEL_1234;
      if (!(_DWORD)v755)
        goto LABEL_1241;
      v756 = 0;
      v757 = 2 * v748;
      v758 = 2 * v755;
      do
      {
        if (!v749
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1993;
        }
        v759 = v755;
        v760 = 0;
        v761 = *(_QWORD *)(v244 + 48);
        do
        {
          sub_20E9ED948(v761, &v749[v760 / 2]);
          v760 += 2;
        }
        while (v758 != v760);
        v749 = (_WORD *)((char *)v749 + v757);
        ++v756;
        v755 = v759;
      }
      while (v756 != v747 - 1);
LABEL_1234:
      if ((_DWORD)v755 && !v749)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1993:
          abort();
        }
        v749 = 0;
      }
      if ((_DWORD)v755)
      {
        v762 = *(_QWORD *)(v244 + 48);
        v763 = 2 * v755;
        do
        {
          sub_20E9ED948(v762, v749++);
          v763 -= 2;
        }
        while (v763);
      }
LABEL_1241:
      v764 = v1130;
      v1130 = 0;
      if (v764)
        (*(void (**)(uint64_t))(*(_QWORD *)v764 + 8))(v764);
      v473 = v1118;
      if (!v1118)
        return;
      v765 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v765);
      while (__stlxr(v475 - 1, v765));
      goto LABEL_1975;
    case 35:
      v1116 = &off_24CA13048;
      sub_20FF78468((std::string::size_type *)&v1117, a3);
      v222 = *a2;
      v223 = v1127;
      v224 = v1117;
      if (!v1117)
        goto LABEL_1154;
      v225 = v1118;
      if (v1118)
      {
        v226 = (unint64_t *)&v1118->__shared_owners_;
        do
          v227 = __ldxr(v226);
        while (__stxr(v227 + 1, v226));
        do
          v228 = __ldaxr(v226);
        while (__stlxr(v228 - 1, v226));
        if (!v228)
        {
          ((void (*)(std::__shared_weak_count *))v225->__on_zero_shared)(v225);
          std::__shared_weak_count::__release_weak(v225);
        }
        v224 = v1117;
        v229 = v1118;
        if (v1118)
        {
          v230 = (unint64_t *)&v1118->__shared_owners_;
          do
            v231 = __ldxr(v230);
          while (__stxr(v231 + 1, v230));
          do
            v232 = __ldaxr(v230);
          while (__stlxr(v232 - 1, v230));
          if (!v232)
          {
            ((void (*)(std::__shared_weak_count *))v229->__on_zero_shared)(v229);
            std::__shared_weak_count::__release_weak(v229);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v224 + 96))(&v1130, v224, 1);
      else
LABEL_1154:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1808;
      if (!v1121)
        goto LABEL_1808;
      v717 = v1122;
      if (!v1122)
        goto LABEL_1808;
      v718 = v1126;
      v719 = v1119;
      if (v1128 && v1119)
      {
        v720 = v1117;
        v721 = v1118;
        if (v1118)
        {
          v722 = (unint64_t *)&v1118->__shared_owners_;
          do
            v723 = __ldxr(v722);
          while (__stxr(v723 + 1, v722));
          do
            v724 = __ldaxr(v722);
          while (__stlxr(v724 - 1, v722));
          if (!v724)
          {
            ((void (*)(std::__shared_weak_count *))v721->__on_zero_shared)(v721);
            std::__shared_weak_count::__release_weak(v721);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v720 + 88))(v720, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v719 = v1119;
      }
      v725 = v717 - 1;
      v1108 = (4 * v223);
      if (!v725)
        goto LABEL_1175;
      if (!(4 * v223))
        goto LABEL_1808;
      for (ii = 0; ii != v725; ++ii)
      {
        if (!v719
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1178;
        }
        v727 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v222 + 48), &v1115);
          v719[v727++] = v1115;
        }
        while (v1108 != v727);
        v719 += v718;
      }
LABEL_1175:
      if (!(_DWORD)v1108 || v719)
      {
        if (!(_DWORD)v1108)
          goto LABEL_1808;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_1178:
        abort();
      }
      v1037 = 2 * v1108;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v222 + 48), &v1115);
        *v719++ = v1115;
        v1037 -= 2;
      }
      while (v1037);
LABEL_1808:
      v1038 = v1130;
      v1130 = 0;
      if (v1038)
        (*(void (**)(uint64_t))(*(_QWORD *)v1038 + 8))(v1038);
      v473 = v1118;
      if (!v1118)
        return;
      v1039 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1039);
      while (__stlxr(v475 - 1, v1039));
      goto LABEL_1975;
    case 36:
      v1116 = &off_24CA13140;
      sub_20FF78CD0((std::string::size_type *)&v1117, a3);
      v211 = *a2;
      v212 = v1127;
      v213 = v1117;
      if (!v1117)
        goto LABEL_1120;
      v214 = v1118;
      if (v1118)
      {
        v215 = (unint64_t *)&v1118->__shared_owners_;
        do
          v216 = __ldxr(v215);
        while (__stxr(v216 + 1, v215));
        do
          v217 = __ldaxr(v215);
        while (__stlxr(v217 - 1, v215));
        if (!v217)
        {
          ((void (*)(std::__shared_weak_count *))v214->__on_zero_shared)(v214);
          std::__shared_weak_count::__release_weak(v214);
        }
        v213 = v1117;
        v218 = v1118;
        if (v1118)
        {
          v219 = (unint64_t *)&v1118->__shared_owners_;
          do
            v220 = __ldxr(v219);
          while (__stxr(v220 + 1, v219));
          do
            v221 = __ldaxr(v219);
          while (__stlxr(v221 - 1, v219));
          if (!v221)
          {
            ((void (*)(std::__shared_weak_count *))v218->__on_zero_shared)(v218);
            std::__shared_weak_count::__release_weak(v218);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v213 + 96))(&v1130, v213, 1);
      else
LABEL_1120:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1148;
      if (!v1121)
        goto LABEL_1148;
      v698 = v1122;
      if (!v1122)
        goto LABEL_1148;
      v699 = v1126;
      v700 = (float *)v1119;
      if (v1128 && v1119)
      {
        v701 = v1117;
        v702 = v1118;
        if (v1118)
        {
          v703 = (unint64_t *)&v1118->__shared_owners_;
          do
            v704 = __ldxr(v703);
          while (__stxr(v704 + 1, v703));
          do
            v705 = __ldaxr(v703);
          while (__stlxr(v705 - 1, v703));
          if (!v705)
          {
            ((void (*)(std::__shared_weak_count *))v702->__on_zero_shared)(v702);
            std::__shared_weak_count::__release_weak(v702);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v701 + 88))(v701, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v700 = (float *)v1119;
      }
      v706 = (4 * v212);
      if (v698 == 1)
        goto LABEL_1141;
      if (!(_DWORD)v706)
        goto LABEL_1148;
      v707 = 0;
      v708 = 4 * v699;
      v709 = 4 * v706;
      do
      {
        if (!v700
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1991;
        }
        v710 = v706;
        v711 = 0;
        v712 = *(_QWORD *)(v211 + 48);
        do
        {
          sub_20E9EDF48(v712, &v700[v711 / 4]);
          v711 += 4;
        }
        while (v709 != v711);
        v700 = (float *)((char *)v700 + v708);
        ++v707;
        v706 = v710;
      }
      while (v707 != v698 - 1);
LABEL_1141:
      if ((_DWORD)v706 && !v700)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1991:
          abort();
        }
        v700 = 0;
      }
      if ((_DWORD)v706)
      {
        v713 = *(_QWORD *)(v211 + 48);
        v714 = 4 * v706;
        do
        {
          sub_20E9EDF48(v713, v700++);
          v714 -= 4;
        }
        while (v714);
      }
LABEL_1148:
      v715 = v1130;
      v1130 = 0;
      if (v715)
        (*(void (**)(uint64_t))(*(_QWORD *)v715 + 8))(v715);
      v473 = v1118;
      if (!v1118)
        return;
      v716 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v716);
      while (__stlxr(v475 - 1, v716));
      goto LABEL_1975;
    case 37:
      v1116 = &off_24CA13238;
      sub_20FF79538(&v1117, a3);
      v330 = *a2;
      v331 = v1127;
      v332 = v1117;
      if (!v1117)
        goto LABEL_1495;
      v333 = v1118;
      if (v1118)
      {
        v334 = (unint64_t *)&v1118->__shared_owners_;
        do
          v335 = __ldxr(v334);
        while (__stxr(v335 + 1, v334));
        do
          v336 = __ldaxr(v334);
        while (__stlxr(v336 - 1, v334));
        if (!v336)
        {
          ((void (*)(std::__shared_weak_count *))v333->__on_zero_shared)(v333);
          std::__shared_weak_count::__release_weak(v333);
        }
        v332 = v1117;
        v337 = v1118;
        if (v1118)
        {
          v338 = (unint64_t *)&v1118->__shared_owners_;
          do
            v339 = __ldxr(v338);
          while (__stxr(v339 + 1, v338));
          do
            v340 = __ldaxr(v338);
          while (__stlxr(v340 - 1, v338));
          if (!v340)
          {
            ((void (*)(std::__shared_weak_count *))v337->__on_zero_shared)(v337);
            std::__shared_weak_count::__release_weak(v337);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v332 + 96))(&v1130, v332, 1);
      else
LABEL_1495:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1523;
      if (!v1121)
        goto LABEL_1523;
      v892 = v1122;
      if (!v1122)
        goto LABEL_1523;
      v893 = v1126;
      v894 = v1119;
      if (v1128 && v1119)
      {
        v895 = v1117;
        v896 = v1118;
        if (v1118)
        {
          v897 = (unint64_t *)&v1118->__shared_owners_;
          do
            v898 = __ldxr(v897);
          while (__stxr(v898 + 1, v897));
          do
            v899 = __ldaxr(v897);
          while (__stlxr(v899 - 1, v897));
          if (!v899)
          {
            ((void (*)(std::__shared_weak_count *))v896->__on_zero_shared)(v896);
            std::__shared_weak_count::__release_weak(v896);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v895 + 88))(v895, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v894 = v1119;
      }
      v900 = (4 * v331);
      if (v892 == 1)
        goto LABEL_1516;
      if (!(_DWORD)v900)
        goto LABEL_1523;
      v901 = 0;
      do
      {
        if (!v894
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_2001;
        }
        v902 = 0;
        v903 = *(_QWORD *)(v330 + 48);
        do
          sub_20E9ED7B4(v903, &v894[v902++]);
        while (v900 != v902);
        v894 += v893;
        ++v901;
      }
      while (v901 != v892 - 1);
LABEL_1516:
      if ((_DWORD)v900 && !v894)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_2001:
          abort();
        }
        v894 = 0;
      }
      if ((_DWORD)v900)
      {
        v904 = *(_QWORD *)(v330 + 48);
        do
        {
          sub_20E9ED7B4(v904, v894++);
          --v900;
        }
        while (v900);
      }
LABEL_1523:
      v905 = v1130;
      v1130 = 0;
      if (v905)
        (*(void (**)(uint64_t))(*(_QWORD *)v905 + 8))(v905);
      v473 = v1118;
      if (!v1118)
        return;
      v906 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v906);
      while (__stlxr(v475 - 1, v906));
      goto LABEL_1975;
    case 38:
      v1116 = &off_24CA13330;
      sub_20FF79DEC(&v1117, a3);
      v384 = *a2;
      v385 = v1127;
      v386 = v1117;
      if (!v1117)
        goto LABEL_1632;
      v387 = v1118;
      if (v1118)
      {
        v388 = (unint64_t *)&v1118->__shared_owners_;
        do
          v389 = __ldxr(v388);
        while (__stxr(v389 + 1, v388));
        do
          v390 = __ldaxr(v388);
        while (__stlxr(v390 - 1, v388));
        if (!v390)
        {
          ((void (*)(std::__shared_weak_count *))v387->__on_zero_shared)(v387);
          std::__shared_weak_count::__release_weak(v387);
        }
        v386 = v1117;
        v391 = v1118;
        if (v1118)
        {
          v392 = (unint64_t *)&v1118->__shared_owners_;
          do
            v393 = __ldxr(v392);
          while (__stxr(v393 + 1, v392));
          do
            v394 = __ldaxr(v392);
          while (__stlxr(v394 - 1, v392));
          if (!v394)
          {
            ((void (*)(std::__shared_weak_count *))v391->__on_zero_shared)(v391);
            std::__shared_weak_count::__release_weak(v391);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v386 + 96))(&v1130, v386, 1);
      else
LABEL_1632:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1660;
      if (!v1121)
        goto LABEL_1660;
      v956 = v1122;
      if (!v1122)
        goto LABEL_1660;
      v957 = v1126;
      v958 = v1119;
      if (v1128 && v1119)
      {
        v959 = v1117;
        v960 = v1118;
        if (v1118)
        {
          v961 = (unint64_t *)&v1118->__shared_owners_;
          do
            v962 = __ldxr(v961);
          while (__stxr(v962 + 1, v961));
          do
            v963 = __ldaxr(v961);
          while (__stlxr(v963 - 1, v961));
          if (!v963)
          {
            ((void (*)(std::__shared_weak_count *))v960->__on_zero_shared)(v960);
            std::__shared_weak_count::__release_weak(v960);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v959 + 88))(v959, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v958 = v1119;
      }
      v964 = (4 * v385);
      if (v956 == 1)
        goto LABEL_1653;
      if (!(_DWORD)v964)
        goto LABEL_1660;
      v965 = 0;
      v966 = 2 * v957;
      v967 = 2 * v964;
      do
      {
        if (!v958
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_2003;
        }
        v968 = v964;
        v969 = 0;
        v970 = *(_QWORD *)(v384 + 48);
        do
        {
          sub_20E9ED948(v970, &v958[v969 / 2]);
          v969 += 2;
        }
        while (v967 != v969);
        v958 = (_WORD *)((char *)v958 + v966);
        ++v965;
        v964 = v968;
      }
      while (v965 != v956 - 1);
LABEL_1653:
      if ((_DWORD)v964 && !v958)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_2003:
          abort();
        }
        v958 = 0;
      }
      if ((_DWORD)v964)
      {
        v971 = *(_QWORD *)(v384 + 48);
        v972 = 2 * v964;
        do
        {
          sub_20E9ED948(v971, v958++);
          v972 -= 2;
        }
        while (v972);
      }
LABEL_1660:
      v973 = v1130;
      v1130 = 0;
      if (v973)
        (*(void (**)(uint64_t))(*(_QWORD *)v973 + 8))(v973);
      v473 = v1118;
      if (!v1118)
        return;
      v974 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v974);
      while (__stlxr(v475 - 1, v974));
      goto LABEL_1975;
    case 39:
      v1116 = &off_24CA13428;
      sub_20FF7A6A4(&v1117, a3);
      v135 = *a2;
      v136 = v1127;
      v137 = v1117;
      if (!v1117)
        goto LABEL_913;
      v138 = v1118;
      if (v1118)
      {
        v139 = (unint64_t *)&v1118->__shared_owners_;
        do
          v140 = __ldxr(v139);
        while (__stxr(v140 + 1, v139));
        do
          v141 = __ldaxr(v139);
        while (__stlxr(v141 - 1, v139));
        if (!v141)
        {
          ((void (*)(std::__shared_weak_count *))v138->__on_zero_shared)(v138);
          std::__shared_weak_count::__release_weak(v138);
        }
        v137 = v1117;
        v142 = v1118;
        if (v1118)
        {
          v143 = (unint64_t *)&v1118->__shared_owners_;
          do
            v144 = __ldxr(v143);
          while (__stxr(v144 + 1, v143));
          do
            v145 = __ldaxr(v143);
          while (__stlxr(v145 - 1, v143));
          if (!v145)
          {
            ((void (*)(std::__shared_weak_count *))v142->__on_zero_shared)(v142);
            std::__shared_weak_count::__release_weak(v142);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v137 + 96))(&v1130, v137, 1);
      else
LABEL_913:
        v1130 = 0;
      if (!v1120)
        goto LABEL_1790;
      if (!v1121)
        goto LABEL_1790;
      v591 = v1122;
      if (!v1122)
        goto LABEL_1790;
      v592 = v1126;
      v593 = v1119;
      if (v1128 && v1119)
      {
        v594 = v1117;
        v595 = v1118;
        if (v1118)
        {
          v596 = (unint64_t *)&v1118->__shared_owners_;
          do
            v597 = __ldxr(v596);
          while (__stxr(v597 + 1, v596));
          do
            v598 = __ldaxr(v596);
          while (__stlxr(v598 - 1, v596));
          if (!v598)
          {
            ((void (*)(std::__shared_weak_count *))v595->__on_zero_shared)(v595);
            std::__shared_weak_count::__release_weak(v595);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v594 + 88))(v594, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v593 = v1119;
      }
      v599 = v591 - 1;
      v1105 = (4 * v136);
      if (!v599)
        goto LABEL_934;
      if (!(4 * v136))
        goto LABEL_1790;
      for (jj = 0; jj != v599; ++jj)
      {
        if (!v593
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_937;
        }
        v601 = 0;
        do
        {
          v1115 = 0;
          sub_20E9ED948(*(_QWORD *)(v135 + 48), &v1115);
          v593[v601++] = v1115;
        }
        while (v1105 != v601);
        v593 += v592;
      }
LABEL_934:
      if (!(_DWORD)v1105 || v593)
      {
        if (!(_DWORD)v1105)
          goto LABEL_1790;
      }
      else if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_937:
        abort();
      }
      v1031 = 2 * v1105;
      do
      {
        v1115 = 0;
        sub_20E9ED948(*(_QWORD *)(v135 + 48), &v1115);
        *v593++ = v1115;
        v1031 -= 2;
      }
      while (v1031);
LABEL_1790:
      v1032 = v1130;
      v1130 = 0;
      if (v1032)
        (*(void (**)(uint64_t))(*(_QWORD *)v1032 + 8))(v1032);
      v473 = v1118;
      if (!v1118)
        return;
      v1033 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v1033);
      while (__stlxr(v475 - 1, v1033));
      goto LABEL_1975;
    case 40:
      v1116 = &off_24CA13520;
      sub_20FF7AF5C(&v1117, a3);
      v102 = *a2;
      v103 = v1127;
      v104 = v1117;
      if (!v1117)
        goto LABEL_832;
      v105 = v1118;
      if (v1118)
      {
        v106 = (unint64_t *)&v1118->__shared_owners_;
        do
          v107 = __ldxr(v106);
        while (__stxr(v107 + 1, v106));
        do
          v108 = __ldaxr(v106);
        while (__stlxr(v108 - 1, v106));
        if (!v108)
        {
          ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
          std::__shared_weak_count::__release_weak(v105);
        }
        v104 = v1117;
        v109 = v1118;
        if (v1118)
        {
          v110 = (unint64_t *)&v1118->__shared_owners_;
          do
            v111 = __ldxr(v110);
          while (__stxr(v111 + 1, v110));
          do
            v112 = __ldaxr(v110);
          while (__stlxr(v112 - 1, v110));
          if (!v112)
          {
            ((void (*)(std::__shared_weak_count *))v109->__on_zero_shared)(v109);
            std::__shared_weak_count::__release_weak(v109);
          }
        }
      }
      if (v1129)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v104 + 96))(&v1130, v104, 1);
      else
LABEL_832:
        v1130 = 0;
      if (!v1120)
        goto LABEL_860;
      if (!v1121)
        goto LABEL_860;
      v549 = v1122;
      if (!v1122)
        goto LABEL_860;
      v550 = v1126;
      v551 = (float *)v1119;
      if (v1128 && v1119)
      {
        v552 = v1117;
        v553 = v1118;
        if (v1118)
        {
          v554 = (unint64_t *)&v1118->__shared_owners_;
          do
            v555 = __ldxr(v554);
          while (__stxr(v555 + 1, v554));
          do
            v556 = __ldaxr(v554);
          while (__stlxr(v556 - 1, v554));
          if (!v556)
          {
            ((void (*)(std::__shared_weak_count *))v553->__on_zero_shared)(v553);
            std::__shared_weak_count::__release_weak(v553);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v552 + 88))(v552, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v551 = (float *)v1119;
      }
      v557 = (4 * v103);
      if (v549 == 1)
        goto LABEL_853;
      if (!(_DWORD)v557)
        goto LABEL_860;
      v558 = 0;
      v559 = 4 * v550;
      v560 = 4 * v557;
      do
      {
        if (!v551
          && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          goto LABEL_1982;
        }
        v561 = v557;
        v562 = 0;
        v563 = *(_QWORD *)(v102 + 48);
        do
        {
          sub_20E9EDF48(v563, &v551[v562 / 4]);
          v562 += 4;
        }
        while (v560 != v562);
        v551 = (float *)((char *)v551 + v559);
        ++v558;
        v557 = v561;
      }
      while (v558 != v549 - 1);
LABEL_853:
      if ((_DWORD)v557 && !v551)
      {
        if (sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
LABEL_1982:
          abort();
        }
        v551 = 0;
      }
      if ((_DWORD)v557)
      {
        v564 = *(_QWORD *)(v102 + 48);
        v565 = 4 * v557;
        do
        {
          sub_20E9EDF48(v564, v551++);
          v565 -= 4;
        }
        while (v565);
      }
LABEL_860:
      v566 = v1130;
      v1130 = 0;
      if (v566)
        (*(void (**)(uint64_t))(*(_QWORD *)v566 + 8))(v566);
      v473 = v1118;
      if (!v1118)
        return;
      v567 = (unint64_t *)&v1118->__shared_owners_;
      do
        v475 = __ldaxr(v567);
      while (__stlxr(v475 - 1, v567));
      goto LABEL_1975;
    default:
      return;
  }
}

void sub_20FF89DC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  unint64_t *p_shared_owners;
  unint64_t v16;

  if (a14)
  {
    p_shared_owners = (unint64_t *)&a14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))a14->__on_zero_shared)(a14);
      std::__shared_weak_count::__release_weak(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_20FF8AA64(int a1, uint64_t **a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t v20;
  std::__shared_weak_count *v21;
  unint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  unint64_t v51;
  std::__shared_weak_count *v52;
  unint64_t *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  std::__shared_weak_count *v73;
  unint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  std::__shared_weak_count *v80;
  unint64_t *v81;
  unint64_t v82;
  unint64_t v83;
  std::__shared_weak_count *v84;
  unint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  std::__shared_weak_count *v91;
  unint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  std::__shared_weak_count *v95;
  unint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  std::__shared_weak_count *v101;
  unint64_t *v102;
  unint64_t v103;
  unint64_t v104;
  std::__shared_weak_count *v105;
  unint64_t *v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  std::__shared_weak_count *v112;
  unint64_t *v113;
  unint64_t v114;
  unint64_t v115;
  std::__shared_weak_count *v116;
  unint64_t *v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  std::__shared_weak_count *v122;
  unint64_t *v123;
  unint64_t v124;
  unint64_t v125;
  std::__shared_weak_count *v126;
  unint64_t *v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  std::__shared_weak_count *v132;
  unint64_t *v133;
  unint64_t v134;
  unint64_t v135;
  std::__shared_weak_count *v136;
  unint64_t *v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  std::__shared_weak_count *v143;
  unint64_t *v144;
  unint64_t v145;
  unint64_t v146;
  std::__shared_weak_count *v147;
  unint64_t *v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  std::__shared_weak_count *v154;
  unint64_t *v155;
  unint64_t v156;
  unint64_t v157;
  std::__shared_weak_count *v158;
  unint64_t *v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  std::__shared_weak_count *v164;
  unint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  std::__shared_weak_count *v168;
  unint64_t *v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  std::__shared_weak_count *v175;
  unint64_t *v176;
  unint64_t v177;
  unint64_t v178;
  std::__shared_weak_count *v179;
  unint64_t *v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  std::__shared_weak_count *v186;
  unint64_t *v187;
  unint64_t v188;
  unint64_t v189;
  std::__shared_weak_count *v190;
  unint64_t *v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  std::__shared_weak_count *v196;
  unint64_t *v197;
  unint64_t v198;
  unint64_t v199;
  std::__shared_weak_count *v200;
  unint64_t *v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  std::__shared_weak_count *v206;
  unint64_t *v207;
  unint64_t v208;
  unint64_t v209;
  std::__shared_weak_count *v210;
  unint64_t *v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  std::__shared_weak_count *v216;
  unint64_t *v217;
  unint64_t v218;
  unint64_t v219;
  std::__shared_weak_count *v220;
  unint64_t *v221;
  unint64_t v222;
  unint64_t v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  std::__shared_weak_count *v227;
  unint64_t *v228;
  unint64_t v229;
  unint64_t v230;
  std::__shared_weak_count *v231;
  unint64_t *v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  std::__shared_weak_count *v238;
  unint64_t *v239;
  unint64_t v240;
  unint64_t v241;
  std::__shared_weak_count *v242;
  unint64_t *v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t *v246;
  uint64_t v247;
  std::__shared_weak_count *v248;
  unint64_t *v249;
  unint64_t v250;
  unint64_t v251;
  std::__shared_weak_count *v252;
  unint64_t *v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t *v256;
  uint64_t v257;
  uint64_t v258;
  std::__shared_weak_count *v259;
  unint64_t *v260;
  unint64_t v261;
  unint64_t v262;
  std::__shared_weak_count *v263;
  unint64_t *v264;
  unint64_t v265;
  unint64_t v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t v269;
  std::__shared_weak_count *v270;
  unint64_t *v271;
  unint64_t v272;
  unint64_t v273;
  std::__shared_weak_count *v274;
  unint64_t *v275;
  unint64_t v276;
  unint64_t v277;
  uint64_t *v278;
  uint64_t v279;
  std::__shared_weak_count *v280;
  unint64_t *v281;
  unint64_t v282;
  unint64_t v283;
  std::__shared_weak_count *v284;
  unint64_t *v285;
  unint64_t v286;
  unint64_t v287;
  uint64_t *v288;
  uint64_t v289;
  std::__shared_weak_count *v290;
  unint64_t *v291;
  unint64_t v292;
  unint64_t v293;
  std::__shared_weak_count *v294;
  unint64_t *v295;
  unint64_t v296;
  unint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  std::__shared_weak_count *v301;
  unint64_t *v302;
  unint64_t v303;
  unint64_t v304;
  std::__shared_weak_count *v305;
  unint64_t *v306;
  unint64_t v307;
  unint64_t v308;
  uint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  std::__shared_weak_count *v312;
  unint64_t *v313;
  unint64_t v314;
  unint64_t v315;
  std::__shared_weak_count *v316;
  unint64_t *v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t *v320;
  uint64_t v321;
  uint64_t v322;
  std::__shared_weak_count *v323;
  unint64_t *v324;
  unint64_t v325;
  unint64_t v326;
  std::__shared_weak_count *v327;
  unint64_t *v328;
  unint64_t v329;
  unint64_t v330;
  uint64_t *v331;
  uint64_t v332;
  std::__shared_weak_count *v333;
  unint64_t *v334;
  unint64_t v335;
  unint64_t v336;
  std::__shared_weak_count *v337;
  unint64_t *v338;
  unint64_t v339;
  unint64_t v340;
  uint64_t *v341;
  uint64_t v342;
  uint64_t v343;
  std::__shared_weak_count *v344;
  unint64_t *v345;
  unint64_t v346;
  unint64_t v347;
  std::__shared_weak_count *v348;
  unint64_t *v349;
  unint64_t v350;
  unint64_t v351;
  uint64_t *v352;
  uint64_t v353;
  uint64_t v354;
  std::__shared_weak_count *v355;
  unint64_t *v356;
  unint64_t v357;
  unint64_t v358;
  std::__shared_weak_count *v359;
  unint64_t *v360;
  unint64_t v361;
  unint64_t v362;
  uint64_t *v363;
  uint64_t v364;
  std::__shared_weak_count *v365;
  unint64_t *v366;
  unint64_t v367;
  unint64_t v368;
  std::__shared_weak_count *v369;
  unint64_t *v370;
  unint64_t v371;
  unint64_t v372;
  uint64_t *v373;
  uint64_t v374;
  uint64_t v375;
  std::__shared_weak_count *v376;
  unint64_t *v377;
  unint64_t v378;
  unint64_t v379;
  std::__shared_weak_count *v380;
  unint64_t *v381;
  unint64_t v382;
  unint64_t v383;
  uint64_t *v384;
  uint64_t v385;
  std::__shared_weak_count *v386;
  unint64_t *v387;
  unint64_t v388;
  unint64_t v389;
  std::__shared_weak_count *v390;
  unint64_t *v391;
  unint64_t v392;
  unint64_t v393;
  uint64_t *v394;
  uint64_t v395;
  uint64_t v396;
  std::__shared_weak_count *v397;
  unint64_t *v398;
  unint64_t v399;
  unint64_t v400;
  std::__shared_weak_count *v401;
  unint64_t *v402;
  unint64_t v403;
  unint64_t v404;
  uint64_t *v405;
  uint64_t v406;
  std::__shared_weak_count *v407;
  unint64_t *v408;
  unint64_t v409;
  unint64_t v410;
  std::__shared_weak_count *v411;
  unint64_t *v412;
  unint64_t v413;
  unint64_t v414;
  uint64_t *v415;
  uint64_t v416;
  uint64_t v417;
  std::__shared_weak_count *v418;
  unint64_t *v419;
  unint64_t v420;
  unint64_t v421;
  std::__shared_weak_count *v422;
  unint64_t *v423;
  unint64_t v424;
  unint64_t v425;
  int v426;
  int v427;
  _WORD *v428;
  uint64_t v429;
  std::__shared_weak_count *v430;
  unint64_t *v431;
  unint64_t v432;
  unint64_t v433;
  int v434;
  uint64_t v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  unint64_t v439;
  unsigned int v440;
  uint64_t v441;
  unint64_t v442;
  int v443;
  int v444;
  _WORD *v445;
  uint64_t v446;
  std::__shared_weak_count *v447;
  unint64_t *v448;
  unint64_t v449;
  unint64_t v450;
  int v451;
  uint64_t v452;
  uint64_t v453;
  int v454;
  uint64_t v455;
  unint64_t v456;
  unsigned int v457;
  uint64_t v458;
  unint64_t v459;
  int v460;
  int v461;
  _WORD *v462;
  uint64_t v463;
  std::__shared_weak_count *v464;
  unint64_t *v465;
  unint64_t v466;
  unint64_t v467;
  int v468;
  int v469;
  uint64_t v470;
  uint64_t v471;
  unsigned int v472;
  uint64_t v473;
  char *v474;
  unsigned int v475;
  uint64_t v476;
  char *v477;
  int v478;
  int v479;
  _WORD *v480;
  uint64_t v481;
  std::__shared_weak_count *v482;
  unint64_t *v483;
  unint64_t v484;
  unint64_t v485;
  int v486;
  uint64_t v487;
  uint64_t v488;
  int v489;
  uint64_t v490;
  unint64_t v491;
  unsigned int v492;
  uint64_t v493;
  unint64_t v494;
  int v495;
  int v496;
  _WORD *v497;
  uint64_t v498;
  std::__shared_weak_count *v499;
  unint64_t *v500;
  unint64_t v501;
  unint64_t v502;
  int v503;
  int v504;
  uint64_t v505;
  uint64_t v506;
  unsigned int v507;
  uint64_t v508;
  char *v509;
  unsigned int v510;
  uint64_t v511;
  char *v512;
  int v513;
  int v514;
  _WORD *v515;
  uint64_t v516;
  std::__shared_weak_count *v517;
  unint64_t *v518;
  unint64_t v519;
  unint64_t v520;
  int v521;
  uint64_t v522;
  uint64_t v523;
  int v524;
  uint64_t v525;
  unint64_t v526;
  unsigned int v527;
  uint64_t v528;
  unint64_t v529;
  int v530;
  int v531;
  _WORD *v532;
  uint64_t v533;
  std::__shared_weak_count *v534;
  unint64_t *v535;
  unint64_t v536;
  unint64_t v537;
  int v538;
  uint64_t v539;
  uint64_t v540;
  int v541;
  uint64_t v542;
  char *v543;
  unsigned int v544;
  uint64_t v545;
  char *v546;
  int v547;
  int v548;
  _WORD *v549;
  uint64_t v550;
  std::__shared_weak_count *v551;
  unint64_t *v552;
  unint64_t v553;
  unint64_t v554;
  int v555;
  int v556;
  uint64_t v557;
  uint64_t v558;
  unsigned int v559;
  uint64_t v560;
  char *v561;
  unsigned int v562;
  uint64_t v563;
  char *v564;
  int v565;
  int v566;
  _WORD *v567;
  uint64_t v568;
  std::__shared_weak_count *v569;
  unint64_t *v570;
  unint64_t v571;
  unint64_t v572;
  int v573;
  uint64_t v574;
  uint64_t v575;
  int v576;
  uint64_t v577;
  unint64_t v578;
  unsigned int v579;
  uint64_t v580;
  unint64_t v581;
  int v582;
  int v583;
  _WORD *v584;
  uint64_t v585;
  std::__shared_weak_count *v586;
  unint64_t *v587;
  unint64_t v588;
  unint64_t v589;
  int v590;
  uint64_t v591;
  uint64_t v592;
  int v593;
  uint64_t v594;
  char *v595;
  unsigned int v596;
  uint64_t v597;
  char *v598;
  int v599;
  int v600;
  _WORD *v601;
  uint64_t v602;
  std::__shared_weak_count *v603;
  unint64_t *v604;
  unint64_t v605;
  unint64_t v606;
  int v607;
  uint64_t v608;
  uint64_t v609;
  int v610;
  uint64_t v611;
  unint64_t v612;
  unsigned int v613;
  uint64_t v614;
  unint64_t v615;
  int v616;
  int v617;
  _WORD *v618;
  uint64_t v619;
  std::__shared_weak_count *v620;
  unint64_t *v621;
  unint64_t v622;
  unint64_t v623;
  int v624;
  uint64_t v625;
  uint64_t v626;
  int v627;
  uint64_t v628;
  unint64_t v629;
  unsigned int v630;
  uint64_t v631;
  unint64_t v632;
  int v633;
  int v634;
  _WORD *v635;
  uint64_t v636;
  std::__shared_weak_count *v637;
  unint64_t *v638;
  unint64_t v639;
  unint64_t v640;
  int v641;
  uint64_t v642;
  uint64_t v643;
  int v644;
  uint64_t v645;
  char *v646;
  unsigned int v647;
  uint64_t v648;
  char *v649;
  int v650;
  int v651;
  _WORD *v652;
  uint64_t v653;
  std::__shared_weak_count *v654;
  unint64_t *v655;
  unint64_t v656;
  unint64_t v657;
  int v658;
  uint64_t v659;
  uint64_t v660;
  int v661;
  uint64_t v662;
  char *v663;
  unsigned int v664;
  uint64_t v665;
  char *v666;
  int v667;
  int v668;
  _WORD *v669;
  uint64_t v670;
  std::__shared_weak_count *v671;
  unint64_t *v672;
  unint64_t v673;
  unint64_t v674;
  int v675;
  uint64_t v676;
  uint64_t v677;
  int v678;
  uint64_t v679;
  unint64_t v680;
  unsigned int v681;
  uint64_t v682;
  unint64_t v683;
  int v684;
  int v685;
  _WORD *v686;
  uint64_t v687;
  std::__shared_weak_count *v688;
  unint64_t *v689;
  unint64_t v690;
  unint64_t v691;
  int v692;
  uint64_t v693;
  uint64_t v694;
  int v695;
  uint64_t v696;
  char *v697;
  unsigned int v698;
  uint64_t v699;
  char *v700;
  int v701;
  uint64_t v702;
  float *v703;
  uint64_t v704;
  std::__shared_weak_count *v705;
  unint64_t *v706;
  unint64_t v707;
  unint64_t v708;
  int v709;
  unint64_t v710;
  int v711;
  int v712;
  _WORD *v713;
  uint64_t v714;
  std::__shared_weak_count *v715;
  unint64_t *v716;
  unint64_t v717;
  unint64_t v718;
  int v719;
  uint64_t v720;
  uint64_t v721;
  int v722;
  uint64_t v723;
  unint64_t v724;
  unsigned int v725;
  uint64_t v726;
  unint64_t v727;
  int v728;
  int v729;
  _WORD *v730;
  uint64_t v731;
  std::__shared_weak_count *v732;
  unint64_t *v733;
  unint64_t v734;
  unint64_t v735;
  int v736;
  uint64_t v737;
  uint64_t v738;
  int v739;
  uint64_t v740;
  unint64_t v741;
  unsigned int v742;
  uint64_t v743;
  unint64_t v744;
  int v745;
  int v746;
  _WORD *v747;
  uint64_t v748;
  std::__shared_weak_count *v749;
  unint64_t *v750;
  unint64_t v751;
  unint64_t v752;
  int v753;
  uint64_t v754;
  uint64_t v755;
  int v756;
  uint64_t v757;
  unint64_t v758;
  unsigned int v759;
  uint64_t v760;
  unint64_t v761;
  int v762;
  int v763;
  _WORD *v764;
  uint64_t v765;
  std::__shared_weak_count *v766;
  unint64_t *v767;
  unint64_t v768;
  unint64_t v769;
  int v770;
  uint64_t v771;
  uint64_t v772;
  int v773;
  uint64_t v774;
  char *v775;
  unsigned int v776;
  uint64_t v777;
  char *v778;
  int v779;
  int v780;
  _WORD *v781;
  uint64_t v782;
  std::__shared_weak_count *v783;
  unint64_t *v784;
  unint64_t v785;
  unint64_t v786;
  int v787;
  uint64_t v788;
  uint64_t v789;
  int v790;
  uint64_t v791;
  char *v792;
  unsigned int v793;
  uint64_t v794;
  char *v795;
  int v796;
  int v797;
  _WORD *v798;
  uint64_t v799;
  std::__shared_weak_count *v800;
  unint64_t *v801;
  unint64_t v802;
  unint64_t v803;
  int v804;
  uint64_t v805;
  uint64_t v806;
  int v807;
  uint64_t v808;
  unint64_t v809;
  unsigned int v810;
  uint64_t v811;
  unint64_t v812;
  int v813;
  int v814;
  _WORD *v815;
  uint64_t v816;
  std::__shared_weak_count *v817;
  unint64_t *v818;
  unint64_t v819;
  unint64_t v820;
  int v821;
  int v822;
  uint64_t v823;
  uint64_t v824;
  unsigned int v825;
  uint64_t v826;
  char *v827;
  unsigned int v828;
  uint64_t v829;
  char *v830;
  int v831;
  int v832;
  _WORD *v833;
  uint64_t v834;
  std::__shared_weak_count *v835;
  unint64_t *v836;
  unint64_t v837;
  unint64_t v838;
  int v839;
  int v840;
  uint64_t v841;
  uint64_t v842;
  unsigned int v843;
  uint64_t v844;
  char *v845;
  unsigned int v846;
  uint64_t v847;
  char *v848;
  int v849;
  int v850;
  _WORD *v851;
  uint64_t v852;
  std::__shared_weak_count *v853;
  unint64_t *v854;
  unint64_t v855;
  unint64_t v856;
  int v857;
  uint64_t v858;
  uint64_t v859;
  int v860;
  uint64_t v861;
  unint64_t v862;
  unsigned int v863;
  uint64_t v864;
  unint64_t v865;
  int v866;
  int v867;
  _WORD *v868;
  uint64_t v869;
  std::__shared_weak_count *v870;
  unint64_t *v871;
  unint64_t v872;
  unint64_t v873;
  int v874;
  uint64_t v875;
  uint64_t v876;
  int v877;
  uint64_t v878;
  unint64_t v879;
  unsigned int v880;
  uint64_t v881;
  unint64_t v882;
  int v883;
  uint64_t v884;
  _WORD *v885;
  uint64_t v886;
  std::__shared_weak_count *v887;
  unint64_t *v888;
  unint64_t v889;
  unint64_t v890;
  int v891;
  unint64_t v892;
  int v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  std::__shared_weak_count *v897;
  unint64_t *v898;
  unint64_t v899;
  unint64_t v900;
  int v901;
  char *v902;
  int v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  std::__shared_weak_count *v907;
  unint64_t *v908;
  unint64_t v909;
  unint64_t v910;
  int v911;
  char *v912;
  char *v913;
  uint64_t v914;
  std::__shared_weak_count *v915;
  unint64_t *v916;
  unint64_t v917;
  int v918;
  int v919;
  _WORD *v920;
  uint64_t v921;
  std::__shared_weak_count *v922;
  unint64_t *v923;
  unint64_t v924;
  unint64_t v925;
  int v926;
  int v927;
  uint64_t v928;
  uint64_t v929;
  unsigned int v930;
  uint64_t v931;
  char *v932;
  unsigned int v933;
  uint64_t v934;
  char *v935;
  int v936;
  int v937;
  _WORD *v938;
  uint64_t v939;
  std::__shared_weak_count *v940;
  unint64_t *v941;
  unint64_t v942;
  unint64_t v943;
  int v944;
  uint64_t v945;
  uint64_t v946;
  int v947;
  uint64_t v948;
  unint64_t v949;
  unsigned int v950;
  uint64_t v951;
  unint64_t v952;
  int v953;
  int v954;
  _WORD *v955;
  uint64_t v956;
  std::__shared_weak_count *v957;
  unint64_t *v958;
  unint64_t v959;
  unint64_t v960;
  int v961;
  uint64_t v962;
  uint64_t v963;
  int v964;
  uint64_t v965;
  char *v966;
  unsigned int v967;
  uint64_t v968;
  char *v969;
  int v970;
  int v971;
  _WORD *v972;
  uint64_t v973;
  std::__shared_weak_count *v974;
  unint64_t *v975;
  unint64_t v976;
  unint64_t v977;
  int v978;
  int v979;
  uint64_t v980;
  uint64_t v981;
  unsigned int v982;
  uint64_t v983;
  char *v984;
  unsigned int v985;
  uint64_t v986;
  char *v987;
  int v988;
  int v989;
  _WORD *v990;
  uint64_t v991;
  std::__shared_weak_count *v992;
  unint64_t *v993;
  unint64_t v994;
  unint64_t v995;
  int v996;
  uint64_t v997;
  uint64_t v998;
  int v999;
  uint64_t v1000;
  unint64_t v1001;
  unsigned int v1002;
  uint64_t v1003;
  unint64_t v1004;
  int v1005;
  int v1006;
  _WORD *v1007;
  uint64_t v1008;
  std::__shared_weak_count *v1009;
  unint64_t *v1010;
  unint64_t v1011;
  unint64_t v1012;
  int v1013;
  uint64_t v1014;
  uint64_t v1015;
  int v1016;
  uint64_t v1017;
  char *v1018;
  unsigned int v1019;
  uint64_t v1020;
  char *v1021;
  int v1022;
  int v1023;
  _WORD *v1024;
  uint64_t v1025;
  std::__shared_weak_count *v1026;
  unint64_t *v1027;
  unint64_t v1028;
  unint64_t v1029;
  int v1030;
  uint64_t v1031;
  uint64_t v1032;
  int v1033;
  uint64_t v1034;
  unint64_t v1035;
  unsigned int v1036;
  uint64_t v1037;
  unint64_t v1038;
  int v1039;
  int v1040;
  _WORD *v1041;
  uint64_t v1042;
  std::__shared_weak_count *v1043;
  unint64_t *v1044;
  unint64_t v1045;
  unint64_t v1046;
  int v1047;
  int v1048;
  uint64_t v1049;
  uint64_t v1050;
  unsigned int v1051;
  uint64_t v1052;
  char *v1053;
  unsigned int v1054;
  uint64_t v1055;
  char *v1056;
  int v1057;
  int v1058;
  _WORD *v1059;
  uint64_t v1060;
  std::__shared_weak_count *v1061;
  unint64_t *v1062;
  unint64_t v1063;
  unint64_t v1064;
  int v1065;
  uint64_t v1066;
  uint64_t v1067;
  int v1068;
  uint64_t v1069;
  unint64_t v1070;
  unsigned int v1071;
  uint64_t v1072;
  unint64_t v1073;
  int v1074;
  int v1075;
  _WORD *v1076;
  uint64_t v1077;
  std::__shared_weak_count *v1078;
  unint64_t *v1079;
  unint64_t v1080;
  unint64_t v1081;
  int v1082;
  int v1083;
  uint64_t v1084;
  uint64_t v1085;
  unsigned int v1086;
  uint64_t v1087;
  char *v1088;
  unsigned int v1089;
  uint64_t v1090;
  char *v1091;
  uint64_t v1092;
  uint64_t v1093;
  int v1094;
  unint64_t v1095;
  uint64_t v1096;
  uint64_t v1097;
  int v1098;
  unint64_t v1099;
  uint64_t v1100;
  uint64_t v1101;
  uint64_t v1102;
  unsigned int v1103;
  char *v1104;
  uint64_t v1105;
  uint64_t v1106;
  int v1107;
  unint64_t v1108;
  uint64_t v1109;
  uint64_t v1110;
  uint64_t v1111;
  unsigned int v1112;
  char *v1113;
  uint64_t v1114;
  uint64_t v1115;
  int v1116;
  unint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  int v1121;
  char *v1122;
  uint64_t v1123;
  uint64_t v1124;
  uint64_t v1125;
  unsigned int v1126;
  char *v1127;
  uint64_t v1128;
  uint64_t v1129;
  int v1130;
  unint64_t v1131;
  uint64_t v1132;
  uint64_t v1133;
  uint64_t v1134;
  int v1135;
  char *v1136;
  uint64_t v1137;
  uint64_t v1138;
  int v1139;
  unint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  int v1143;
  unint64_t v1144;
  uint64_t v1145;
  uint64_t v1146;
  uint64_t v1147;
  int v1148;
  char *v1149;
  uint64_t v1150;
  uint64_t v1151;
  uint64_t v1152;
  int v1153;
  char *v1154;
  uint64_t v1155;
  uint64_t v1156;
  int v1157;
  unint64_t v1158;
  uint64_t v1159;
  uint64_t v1160;
  uint64_t v1161;
  int v1162;
  char *v1163;
  unint64_t v1164;
  uint64_t v1165;
  unint64_t *v1166;
  uint64_t v1167;
  uint64_t v1168;
  int v1169;
  unint64_t v1170;
  uint64_t v1171;
  uint64_t v1172;
  int v1173;
  unint64_t v1174;
  uint64_t v1175;
  uint64_t v1176;
  int v1177;
  unint64_t v1178;
  uint64_t v1179;
  uint64_t v1180;
  uint64_t v1181;
  int v1182;
  char *v1183;
  uint64_t v1184;
  uint64_t v1185;
  uint64_t v1186;
  int v1187;
  char *v1188;
  uint64_t v1189;
  uint64_t v1190;
  int v1191;
  unint64_t v1192;
  uint64_t v1193;
  uint64_t v1194;
  uint64_t v1195;
  unsigned int v1196;
  char *v1197;
  uint64_t v1198;
  uint64_t v1199;
  uint64_t v1200;
  unsigned int v1201;
  char *v1202;
  uint64_t v1203;
  uint64_t v1204;
  int v1205;
  unint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  int v1209;
  unint64_t v1210;
  unint64_t v1211;
  uint64_t v1212;
  unint64_t *v1213;
  char *v1214;
  uint64_t v1215;
  unint64_t *v1216;
  uint64_t v1217;
  uint64_t v1218;
  uint64_t v1219;
  unsigned int v1220;
  char *v1221;
  uint64_t v1222;
  uint64_t v1223;
  int v1224;
  unint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;
  int v1229;
  char *v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;
  unsigned int v1234;
  char *v1235;
  uint64_t v1236;
  uint64_t v1237;
  int v1238;
  unint64_t v1239;
  uint64_t v1240;
  uint64_t v1241;
  uint64_t v1242;
  int v1243;
  char *v1244;
  uint64_t v1245;
  uint64_t v1246;
  int v1247;
  unint64_t v1248;
  uint64_t v1249;
  uint64_t v1250;
  uint64_t v1251;
  unsigned int v1252;
  char *v1253;
  uint64_t v1254;
  uint64_t v1255;
  int v1256;
  unint64_t v1257;
  uint64_t v1258;
  uint64_t v1259;
  uint64_t v1260;
  unsigned int v1261;
  char *v1262;
  unint64_t v1263;
  uint64_t v1264;
  uint64_t v1265;
  uint64_t v1266;
  unint64_t *v1267;
  unint64_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  uint64_t v1271;
  unint64_t *v1272;
  unsigned int v1273;
  char *v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  unint64_t *v1278;
  unint64_t v1279;
  uint64_t v1280;
  uint64_t v1281;
  uint64_t v1282;
  unint64_t *v1283;
  unsigned int v1284;
  char *v1285;
  uint64_t v1286;
  uint64_t v1287;
  uint64_t v1288;
  unint64_t *v1289;
  unint64_t v1290;
  uint64_t v1291;
  uint64_t v1292;
  uint64_t v1293;
  unint64_t *v1294;
  unsigned int v1295;
  char *v1296;
  uint64_t v1297;
  uint64_t v1298;
  uint64_t v1299;
  unint64_t *v1300;
  unsigned int v1301;
  char *v1302;
  uint64_t v1303;
  uint64_t v1304;
  uint64_t v1305;
  unint64_t *v1306;
  unint64_t v1307;
  uint64_t v1308;
  uint64_t v1309;
  uint64_t v1310;
  unint64_t *v1311;
  unsigned int v1312;
  char *v1313;
  uint64_t v1314;
  uint64_t v1315;
  uint64_t v1316;
  unint64_t *v1317;
  unint64_t v1318;
  uint64_t v1319;
  uint64_t v1320;
  uint64_t v1321;
  unint64_t *v1322;
  unint64_t v1323;
  uint64_t v1324;
  uint64_t v1325;
  uint64_t v1326;
  unint64_t *v1327;
  unsigned int v1328;
  char *v1329;
  uint64_t v1330;
  uint64_t v1331;
  uint64_t v1332;
  unint64_t *v1333;
  unsigned int v1334;
  char *v1335;
  uint64_t v1336;
  uint64_t v1337;
  uint64_t v1338;
  unint64_t *v1339;
  unint64_t v1340;
  uint64_t v1341;
  uint64_t v1342;
  uint64_t v1343;
  unint64_t *v1344;
  unsigned int v1345;
  char *v1346;
  uint64_t v1347;
  uint64_t v1348;
  uint64_t v1349;
  unint64_t *v1350;
  unint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  unint64_t *v1355;
  unint64_t v1356;
  uint64_t v1357;
  uint64_t v1358;
  uint64_t v1359;
  unint64_t *v1360;
  unint64_t v1361;
  uint64_t v1362;
  uint64_t v1363;
  uint64_t v1364;
  unint64_t *v1365;
  unsigned int v1366;
  char *v1367;
  uint64_t v1368;
  uint64_t v1369;
  uint64_t v1370;
  unint64_t *v1371;
  unsigned int v1372;
  char *v1373;
  uint64_t v1374;
  uint64_t v1375;
  uint64_t v1376;
  unint64_t *v1377;
  unint64_t v1378;
  uint64_t v1379;
  uint64_t v1380;
  uint64_t v1381;
  unint64_t *v1382;
  unsigned int v1383;
  char *v1384;
  uint64_t v1385;
  uint64_t v1386;
  uint64_t v1387;
  unint64_t *v1388;
  unsigned int v1389;
  char *v1390;
  uint64_t v1391;
  uint64_t v1392;
  uint64_t v1393;
  unint64_t *v1394;
  unint64_t v1395;
  uint64_t v1396;
  uint64_t v1397;
  uint64_t v1398;
  unint64_t *v1399;
  unint64_t v1400;
  uint64_t v1401;
  uint64_t v1402;
  uint64_t v1403;
  unint64_t *v1404;
  unsigned int v1405;
  char *v1406;
  uint64_t v1407;
  uint64_t v1408;
  uint64_t v1409;
  unint64_t *v1410;
  unint64_t v1411;
  uint64_t v1412;
  uint64_t v1413;
  uint64_t v1414;
  unint64_t *v1415;
  unsigned int v1416;
  char *v1417;
  uint64_t v1418;
  uint64_t v1419;
  uint64_t v1420;
  unint64_t *v1421;
  unsigned int v1422;
  char *v1423;
  uint64_t v1424;
  uint64_t v1425;
  uint64_t v1426;
  unint64_t *v1427;
  unint64_t v1428;
  uint64_t v1429;
  uint64_t v1430;
  uint64_t v1431;
  unint64_t *v1432;
  unsigned int v1433;
  char *v1434;
  uint64_t v1435;
  uint64_t v1436;
  uint64_t v1437;
  unint64_t *v1438;
  unint64_t v1439;
  uint64_t v1440;
  uint64_t v1441;
  uint64_t v1442;
  unint64_t *v1443;
  unsigned int v1444;
  char *v1445;
  uint64_t v1446;
  uint64_t v1447;
  uint64_t v1448;
  unint64_t *v1449;
  unint64_t v1450;
  uint64_t v1451;
  uint64_t v1452;
  uint64_t v1453;
  unint64_t *v1454;
  unsigned int v1455;
  char *v1456;
  uint64_t v1457;
  uint64_t v1458;
  uint64_t v1459;
  unint64_t *v1460;
  uint64_t v1461;
  uint64_t v1462;
  uint64_t v1463;
  uint64_t v1464;
  uint64_t v1465;
  uint64_t v1466;
  uint64_t v1467;
  uint64_t v1468;
  uint64_t v1469;
  uint64_t v1470;
  uint64_t v1471;
  uint64_t v1472;
  uint64_t v1473;
  uint64_t v1474;
  uint64_t v1475;
  uint64_t v1476;
  uint64_t v1477;
  uint64_t v1478;
  uint64_t v1479;
  uint64_t v1480;
  uint64_t v1481;
  uint64_t v1482;
  uint64_t v1483;
  uint64_t v1484;
  uint64_t v1485;
  uint64_t v1486;
  uint64_t v1487;
  int v1488;
  int v1489;
  uint64_t v1490;
  int v1491;
  uint64_t v1492;
  int v1493;
  uint64_t v1494;
  int v1495;
  int v1496;
  int v1497;
  int v1498;
  int v1499;
  int v1500;
  int v1501;
  int v1502;
  uint64_t v1503;
  uint64_t v1504;
  int v1505;
  int v1506;
  uint64_t v1507;
  int v1508;
  uint64_t v1509;
  int v1510;
  int v1511;
  uint64_t v1512;
  int v1513;
  uint64_t v1514;
  uint64_t v1515;
  uint64_t v1516;
  uint64_t v1517;
  uint64_t v1518;
  uint64_t v1519;
  uint64_t v1520;
  uint64_t v1521;
  uint64_t v1522;
  uint64_t v1523;
  uint64_t v1524;
  uint64_t v1525;
  uint64_t v1526;
  uint64_t v1527;
  uint64_t v1528;
  uint64_t v1529;
  uint64_t v1530;
  uint64_t v1531;
  uint64_t v1532;
  int v1533;
  int v1534;
  int v1535;
  int v1536;
  int v1537;
  int v1538;
  int v1539;
  int v1540;
  int v1541;
  uint64_t v1542;
  uint64_t v1543;
  uint64_t v1544;
  uint64_t (**v1545)();
  uint64_t v1546;
  std::__shared_weak_count *v1547;
  _WORD *v1548;
  unsigned int v1549;
  int v1550;
  int v1551;
  unsigned int v1552;
  int v1553;
  unsigned int v1554;
  unsigned int v1555;
  char v1556;
  char v1557;

  switch(a1)
  {
    case 0:
      sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/FormatAlgorithm.h", 523, (uint64_t)"", 0, (uint64_t)"Runtime format not in given Formats list", 40, (void (*)(void **))sub_21023DDB0);
      abort();
    case 1:
      v1545 = &off_24C9C05B0;
      sub_20FF68984(&v1546, a3);
      v4 = *a2;
      v5 = v1549;
      v6 = v1546;
      if (!v1546)
        goto LABEL_1306;
      v7 = v1547;
      if (v1547)
      {
        p_shared_owners = (unint64_t *)&v1547->__shared_owners_;
        do
          v9 = __ldxr(p_shared_owners);
        while (__stxr(v9 + 1, p_shared_owners));
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v6 = v1546;
        v11 = v1547;
        if (v1547)
        {
          v12 = (unint64_t *)&v1547->__shared_owners_;
          do
            v13 = __ldxr(v12);
          while (__stxr(v13 + 1, v12));
          do
            v14 = __ldaxr(v12);
          while (__stlxr(v14 - 1, v12));
          if (!v14)
          {
            ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      if (BYTE1(v1553))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(&v1542, v6, 1);
      else
LABEL_1306:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1329;
      v903 = v1550;
      if (!v1550)
        goto LABEL_1329;
      v904 = v1552;
      v905 = (uint64_t)v1548;
      if ((_BYTE)v1553 && v1548)
      {
        v906 = v1546;
        v907 = v1547;
        if (v1547)
        {
          v908 = (unint64_t *)&v1547->__shared_owners_;
          do
            v909 = __ldxr(v908);
          while (__stxr(v909 + 1, v908));
          do
            v910 = __ldaxr(v908);
          while (__stlxr(v910 - 1, v908));
          if (!v910)
          {
            ((void (*)(std::__shared_weak_count *))v907->__on_zero_shared)(v907);
            std::__shared_weak_count::__release_weak(v907);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v906 + 88))(v906, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v905 = (uint64_t)v1548;
      }
      v911 = v903 - 1;
      if (v903 == 1)
        goto LABEL_1325;
      if ((_DWORD)v5)
      {
        while (v905
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = v5;
          v1544 = v905;
          v912 = (char *)sub_2101FF5A0(v4);
          ++v4[14];
          sub_2101FF6B8(v912, (uint64_t)&v1543);
          v905 += v904;
          if (!--v911)
            goto LABEL_1325;
        }
        goto LABEL_2223;
      }
      do
      {
        v1543 = v5;
        v1544 = v905;
        v913 = (char *)sub_2101FF5A0(v4);
        ++v4[14];
        sub_2101FF6B8(v913, (uint64_t)&v1543);
        v905 += v904;
        --v911;
      }
      while (v911);
LABEL_1325:
      if ((_DWORD)v5
        && !v905
        && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_2223:
        abort();
      }
      v1543 = v5;
      v1544 = v905;
      sub_2101FFDDC(v4, (uint64_t)&v1543);
LABEL_1329:
      v914 = v1542;
      v1542 = 0;
      if (v914)
        (*(void (**)(uint64_t))(*(_QWORD *)v914 + 8))(v914);
      v915 = v1547;
      if (!v1547)
        return;
      v916 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v916);
      while (__stlxr(v917 - 1, v916));
      goto LABEL_2184;
    case 2:
      v1545 = &off_24C9F0B30;
      sub_20FF68BA8(&v1546, a3);
      v309 = *a2;
      v310 = v1549;
      v311 = v1546;
      if (!v1546)
        goto LABEL_1288;
      v312 = v1547;
      if (v1547)
      {
        v313 = (unint64_t *)&v1547->__shared_owners_;
        do
          v314 = __ldxr(v313);
        while (__stxr(v314 + 1, v313));
        do
          v315 = __ldaxr(v313);
        while (__stlxr(v315 - 1, v313));
        if (!v315)
        {
          ((void (*)(std::__shared_weak_count *))v312->__on_zero_shared)(v312);
          std::__shared_weak_count::__release_weak(v312);
        }
        v311 = v1546;
        v316 = v1547;
        if (v1547)
        {
          v317 = (unint64_t *)&v1547->__shared_owners_;
          do
            v318 = __ldxr(v317);
          while (__stxr(v318 + 1, v317));
          do
            v319 = __ldaxr(v317);
          while (__stlxr(v319 - 1, v317));
          if (!v319)
          {
            ((void (*)(std::__shared_weak_count *))v316->__on_zero_shared)(v316);
            std::__shared_weak_count::__release_weak(v316);
          }
        }
      }
      if (BYTE1(v1553))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v311 + 96))(&v1542, v311, 1);
      else
LABEL_1288:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1773;
      v893 = v1550;
      if (!v1550)
        goto LABEL_1773;
      v894 = v1552;
      v895 = (uint64_t)v1548;
      if ((_BYTE)v1553 && v1548)
      {
        v896 = v1546;
        v897 = v1547;
        if (v1547)
        {
          v898 = (unint64_t *)&v1547->__shared_owners_;
          do
            v899 = __ldxr(v898);
          while (__stxr(v899 + 1, v898));
          do
            v900 = __ldaxr(v898);
          while (__stlxr(v900 - 1, v898));
          if (!v900)
          {
            ((void (*)(std::__shared_weak_count *))v897->__on_zero_shared)(v897);
            std::__shared_weak_count::__release_weak(v897);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v896 + 88))(v896, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v895 = (uint64_t)v1548;
      }
      v901 = v893 - 1;
      if (v893 == 1)
        goto LABEL_1769;
      if ((_DWORD)v310)
      {
        while (v895
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = v310;
          v1544 = v895;
          v902 = (char *)sub_2101FF5A0(v309);
          ++v309[14];
          sub_2101FFF00(v902, (uint64_t)&v1543);
          v895 += 2 * v894;
          if (!--v901)
            goto LABEL_1769;
        }
        goto LABEL_2226;
      }
      do
      {
        v1543 = v310;
        v1544 = v895;
        v1214 = (char *)sub_2101FF5A0(v309);
        ++v309[14];
        sub_2101FFF00(v1214, (uint64_t)&v1543);
        v895 += 2 * v894;
        --v901;
      }
      while (v901);
LABEL_1769:
      if ((_DWORD)v310
        && !v895
        && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_2226:
        abort();
      }
      v1543 = v310;
      v1544 = v895;
      sub_2101FFECC(v309, (uint64_t)&v1543);
LABEL_1773:
      v1215 = v1542;
      v1542 = 0;
      if (v1215)
        (*(void (**)(uint64_t))(*(_QWORD *)v1215 + 8))(v1215);
      v915 = v1547;
      if (!v1547)
        return;
      v1216 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1216);
      while (__stlxr(v917 - 1, v1216));
      goto LABEL_2184;
    case 3:
      v1545 = &off_24C9C07A0;
      sub_20FF68DCC(&v1546, a3);
      v298 = *a2;
      v299 = v1549;
      v300 = v1546;
      if (!v1546)
        goto LABEL_1270;
      v301 = v1547;
      if (v1547)
      {
        v302 = (unint64_t *)&v1547->__shared_owners_;
        do
          v303 = __ldxr(v302);
        while (__stxr(v303 + 1, v302));
        do
          v304 = __ldaxr(v302);
        while (__stlxr(v304 - 1, v302));
        if (!v304)
        {
          ((void (*)(std::__shared_weak_count *))v301->__on_zero_shared)(v301);
          std::__shared_weak_count::__release_weak(v301);
        }
        v300 = v1546;
        v305 = v1547;
        if (v1547)
        {
          v306 = (unint64_t *)&v1547->__shared_owners_;
          do
            v307 = __ldxr(v306);
          while (__stxr(v307 + 1, v306));
          do
            v308 = __ldaxr(v306);
          while (__stlxr(v308 - 1, v306));
          if (!v308)
          {
            ((void (*)(std::__shared_weak_count *))v305->__on_zero_shared)(v305);
            std::__shared_weak_count::__release_weak(v305);
          }
        }
      }
      if (BYTE1(v1553))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v300 + 96))(&v1542, v300, 1);
      else
LABEL_1270:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1762;
      v883 = v1550;
      if (!v1550)
        goto LABEL_1762;
      v884 = v1552;
      v885 = v1548;
      if ((_BYTE)v1553 && v1548)
      {
        v886 = v1546;
        v887 = v1547;
        if (v1547)
        {
          v888 = (unint64_t *)&v1547->__shared_owners_;
          do
            v889 = __ldxr(v888);
          while (__stxr(v889 + 1, v888));
          do
            v890 = __ldaxr(v888);
          while (__stlxr(v890 - 1, v888));
          if (!v890)
          {
            ((void (*)(std::__shared_weak_count *))v887->__on_zero_shared)(v887);
            std::__shared_weak_count::__release_weak(v887);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v886 + 88))(v886, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v885 = v1548;
      }
      v891 = v883 - 1;
      if (v883 == 1)
        goto LABEL_1758;
      if ((_DWORD)v299)
      {
        while (v885
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v892 = sub_2101FF5A0(v298);
          ++v298[14];
          sub_210200168(v892, v885);
          v885 += v884;
          if (!--v891)
            goto LABEL_1758;
        }
        goto LABEL_2225;
      }
      do
      {
        v1211 = sub_2101FF5A0(v298);
        ++v298[14];
        sub_210200168(v1211, v885);
        v885 += v884;
        --v891;
      }
      while (v891);
LABEL_1758:
      if ((_DWORD)v299
        && !v885
        && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_2225:
        abort();
      }
      v1543 = v299;
      v1544 = (uint64_t)v885;
      sub_210200134(v298, (uint64_t)&v1543);
LABEL_1762:
      v1212 = v1542;
      v1542 = 0;
      if (v1212)
        (*(void (**)(uint64_t))(*(_QWORD *)v1212 + 8))(v1212);
      v915 = v1547;
      if (!v1547)
        return;
      v1213 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1213);
      while (__stlxr(v917 - 1, v1213));
      goto LABEL_2184;
    case 4:
      v1545 = &off_24C9AD6F0;
      sub_20FF69410(&v1546, a3);
      v183 = *a2;
      v184 = v1549;
      v185 = v1546;
      if (!v1546)
        goto LABEL_1002;
      v186 = v1547;
      if (v1547)
      {
        v187 = (unint64_t *)&v1547->__shared_owners_;
        do
          v188 = __ldxr(v187);
        while (__stxr(v188 + 1, v187));
        do
          v189 = __ldaxr(v187);
        while (__stlxr(v189 - 1, v187));
        if (!v189)
        {
          ((void (*)(std::__shared_weak_count *))v186->__on_zero_shared)(v186);
          std::__shared_weak_count::__release_weak(v186);
        }
        v185 = v1546;
        v190 = v1547;
        if (v1547)
        {
          v191 = (unint64_t *)&v1547->__shared_owners_;
          do
            v192 = __ldxr(v191);
          while (__stxr(v192 + 1, v191));
          do
            v193 = __ldaxr(v191);
          while (__stlxr(v193 - 1, v191));
          if (!v193)
          {
            ((void (*)(std::__shared_weak_count *))v190->__on_zero_shared)(v190);
            std::__shared_weak_count::__release_weak(v190);
          }
        }
      }
      if (BYTE1(v1553))
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v185 + 96))(&v1542, v185, 1);
      else
LABEL_1002:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1689;
      v701 = v1550;
      if (!v1550)
        goto LABEL_1689;
      v702 = v1552;
      v703 = (float *)v1548;
      if ((_BYTE)v1553 && v1548)
      {
        v704 = v1546;
        v705 = v1547;
        if (v1547)
        {
          v706 = (unint64_t *)&v1547->__shared_owners_;
          do
            v707 = __ldxr(v706);
          while (__stxr(v707 + 1, v706));
          do
            v708 = __ldaxr(v706);
          while (__stlxr(v708 - 1, v706));
          if (!v708)
          {
            ((void (*)(std::__shared_weak_count *))v705->__on_zero_shared)(v705);
            std::__shared_weak_count::__release_weak(v705);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v704 + 88))(v704, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v703 = (float *)v1548;
      }
      v709 = v701 - 1;
      if (v701 == 1)
        goto LABEL_1685;
      if ((_DWORD)v184)
      {
        while (v703
             || !sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v710 = sub_2101FF5A0(v183);
          ++v183[14];
          sub_2102004AC(v710, v703);
          v703 += v702;
          if (!--v709)
            goto LABEL_1685;
        }
        goto LABEL_2224;
      }
      do
      {
        v1164 = sub_2101FF5A0(v183);
        ++v183[14];
        sub_2102004AC(v1164, v703);
        v703 += v702;
        --v709;
      }
      while (v709);
LABEL_1685:
      if ((_DWORD)v184
        && !v703
        && sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
      {
LABEL_2224:
        abort();
      }
      v1543 = v184;
      v1544 = (uint64_t)v703;
      sub_210200478(v183, (uint64_t)&v1543);
LABEL_1689:
      v1165 = v1542;
      v1542 = 0;
      if (v1165)
        (*(void (**)(uint64_t))(*(_QWORD *)v1165 + 8))(v1165);
      v915 = v1547;
      if (!v1547)
        return;
      v1166 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1166);
      while (__stlxr(v917 - 1, v1166));
      goto LABEL_2184;
    case 5:
      v1545 = &off_24C9C06A8;
      sub_20FF69634((std::string::size_type *)&v1546, a3);
      v267 = *a2;
      v268 = v1555;
      v269 = v1546;
      if (!v1546)
        goto LABEL_1195;
      v270 = v1547;
      if (v1547)
      {
        v271 = (unint64_t *)&v1547->__shared_owners_;
        do
          v272 = __ldxr(v271);
        while (__stxr(v272 + 1, v271));
        do
          v273 = __ldaxr(v271);
        while (__stlxr(v273 - 1, v271));
        if (!v273)
        {
          ((void (*)(std::__shared_weak_count *))v270->__on_zero_shared)(v270);
          std::__shared_weak_count::__release_weak(v270);
        }
        v269 = v1546;
        v274 = v1547;
        if (v1547)
        {
          v275 = (unint64_t *)&v1547->__shared_owners_;
          do
            v276 = __ldxr(v275);
          while (__stxr(v276 + 1, v275));
          do
            v277 = __ldaxr(v275);
          while (__stlxr(v277 - 1, v275));
          if (!v277)
          {
            ((void (*)(std::__shared_weak_count *))v274->__on_zero_shared)(v274);
            std::__shared_weak_count::__release_weak(v274);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v269 + 96))(&v1542, v269, 1);
      else
LABEL_1195:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2065;
      if (!v1550)
        goto LABEL_2065;
      v831 = v1551;
      if (!v1551)
        goto LABEL_2065;
      v832 = v1553;
      v1504 = v1554;
      v833 = v1548;
      if (v1556 && v1548)
      {
        v834 = v1546;
        v835 = v1547;
        if (v1547)
        {
          v836 = (unint64_t *)&v1547->__shared_owners_;
          do
            v837 = __ldxr(v836);
          while (__stxr(v837 + 1, v836));
          do
            v838 = __ldaxr(v836);
          while (__stlxr(v838 - 1, v836));
          if (!v838)
          {
            ((void (*)(std::__shared_weak_count *))v835->__on_zero_shared)(v835);
            std::__shared_weak_count::__release_weak(v835);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v834 + 88))(v834, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v833 = v1548;
      }
      v839 = v831 - 1;
      if (v831 == 1)
        goto LABEL_1740;
      if ((_DWORD)v268)
      {
        v840 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v267);
          if (!v833)
            break;
          v843 = 0;
          v844 = v268;
          do
          {
            v1543 = 2;
            v1544 = (uint64_t)v833 + v843;
            v845 = (char *)sub_2101FF5A0(v267);
            ++v267[14];
            sub_2101FF6B8(v845, (uint64_t)&v1543);
            v843 += v832;
            --v844;
          }
          while (v844);
LABEL_1211:
          v841 = v267[6];
          v267[4] = *(_QWORD *)(v841 - 8);
          v842 = v267[9];
          v267[14] = *(_QWORD *)(v842 - 8);
          v267[6] = v841 - 8;
          v267[9] = v842 - 8;
          v833 = (_WORD *)((char *)v833 + v1504);
          if (++v840 == v831 - 1)
            goto LABEL_1740;
        }
        v846 = 0;
        v847 = v268;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 2;
          v1544 = v846;
          v848 = (char *)sub_2101FF5A0(v267);
          ++v267[14];
          sub_2101FF6B8(v848, (uint64_t)&v1543);
          v846 += v832;
          if (!--v847)
            goto LABEL_1211;
        }
LABEL_2210:
        abort();
      }
      v833 = (_WORD *)((char *)v833 + v1504 + v1504 * (unint64_t)(v831 - 2));
      do
      {
        sub_2101FF2E8((uint64_t)v267);
        v1198 = v267[6];
        v267[4] = *(_QWORD *)(v1198 - 8);
        v1199 = v267[9];
        v267[14] = *(_QWORD *)(v1199 - 8);
        v267[6] = v1198 - 8;
        v267[9] = v1199 - 8;
        --v839;
      }
      while (v839);
LABEL_1740:
      sub_2101FF2E8((uint64_t)v267);
      v1200 = v268;
      if ((_DWORD)v268)
      {
        if (!v833)
        {
          v1389 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 2;
            v1544 = v1389;
            v1390 = (char *)sub_2101FF5A0(v267);
            ++v267[14];
            sub_2101FF6B8(v1390, (uint64_t)&v1543);
            v1389 += v832;
            if (!--v1200)
              goto LABEL_2064;
          }
          goto LABEL_2210;
        }
        v1201 = 0;
        do
        {
          v1543 = 2;
          v1544 = (uint64_t)v833 + v1201;
          v1202 = (char *)sub_2101FF5A0(v267);
          ++v267[14];
          sub_2101FF6B8(v1202, (uint64_t)&v1543);
          v1201 += v832;
          --v1200;
        }
        while (v1200);
      }
LABEL_2064:
      v1391 = v267[6];
      v267[4] = *(_QWORD *)(v1391 - 8);
      v1392 = v267[9];
      v267[14] = *(_QWORD *)(v1392 - 8);
      v267[6] = v1391 - 8;
      v267[9] = v1392 - 8;
LABEL_2065:
      v1393 = v1542;
      v1542 = 0;
      if (v1393)
        (*(void (**)(uint64_t))(*(_QWORD *)v1393 + 8))(v1393);
      v915 = v1547;
      if (!v1547)
        return;
      v1394 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1394);
      while (__stlxr(v917 - 1, v1394));
      goto LABEL_2184;
    case 6:
      v1545 = &off_24CA11908;
      sub_20FF69C90((std::string::size_type *)&v1546, a3);
      v172 = *a2;
      v173 = v1555;
      v174 = v1546;
      if (!v1546)
        goto LABEL_977;
      v175 = v1547;
      if (v1547)
      {
        v176 = (unint64_t *)&v1547->__shared_owners_;
        do
          v177 = __ldxr(v176);
        while (__stxr(v177 + 1, v176));
        do
          v178 = __ldaxr(v176);
        while (__stlxr(v178 - 1, v176));
        if (!v178)
        {
          ((void (*)(std::__shared_weak_count *))v175->__on_zero_shared)(v175);
          std::__shared_weak_count::__release_weak(v175);
        }
        v174 = v1546;
        v179 = v1547;
        if (v1547)
        {
          v180 = (unint64_t *)&v1547->__shared_owners_;
          do
            v181 = __ldxr(v180);
          while (__stxr(v181 + 1, v180));
          do
            v182 = __ldaxr(v180);
          while (__stlxr(v182 - 1, v180));
          if (!v182)
          {
            ((void (*)(std::__shared_weak_count *))v179->__on_zero_shared)(v179);
            std::__shared_weak_count::__release_weak(v179);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v174 + 96))(&v1542, v174, 1);
      else
LABEL_977:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1989;
      if (!v1550)
        goto LABEL_1989;
      v684 = v1551;
      if (!v1551)
        goto LABEL_1989;
      v685 = v1553;
      v1473 = v1554;
      v686 = v1548;
      if (v1556 && v1548)
      {
        v687 = v1546;
        v688 = v1547;
        if (v1547)
        {
          v689 = (unint64_t *)&v1547->__shared_owners_;
          do
            v690 = __ldxr(v689);
          while (__stxr(v690 + 1, v689));
          do
            v691 = __ldaxr(v689);
          while (__stlxr(v691 - 1, v689));
          if (!v691)
          {
            ((void (*)(std::__shared_weak_count *))v688->__on_zero_shared)(v688);
            std::__shared_weak_count::__release_weak(v688);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v687 + 88))(v687, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v686 = v1548;
      }
      v1537 = v684 - 1;
      if (v684 == 1)
        goto LABEL_1679;
      if ((_DWORD)v173)
      {
        v692 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v172);
          if (!v686)
            break;
          v695 = 0;
          v696 = v173;
          do
          {
            v1543 = 2;
            v1544 = (uint64_t)&v686[v695];
            v697 = (char *)sub_2101FF5A0(v172);
            ++v172[14];
            sub_2101FFF00(v697, (uint64_t)&v1543);
            v695 += v685;
            --v696;
          }
          while (v696);
LABEL_993:
          v693 = v172[6];
          v172[4] = *(_QWORD *)(v693 - 8);
          v694 = v172[9];
          v172[14] = *(_QWORD *)(v694 - 8);
          v172[6] = v693 - 8;
          v172[9] = v694 - 8;
          v686 += v1473;
          if (++v692 == v1537)
            goto LABEL_1679;
        }
        v698 = 0;
        v699 = v173;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 2;
          v1544 = 2 * v698;
          v700 = (char *)sub_2101FF5A0(v172);
          ++v172[14];
          sub_2101FFF00(v700, (uint64_t)&v1543);
          v698 += v685;
          if (!--v699)
            goto LABEL_993;
        }
LABEL_2202:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v172);
        v1159 = v172[6];
        v172[4] = *(_QWORD *)(v1159 - 8);
        v1160 = v172[9];
        v172[14] = *(_QWORD *)(v1160 - 8);
        v172[6] = v1159 - 8;
        v172[9] = v1160 - 8;
        v686 += v1473;
        --v1537;
      }
      while (v1537);
LABEL_1679:
      sub_2101FF2E8((uint64_t)v172);
      v1161 = v173;
      if ((_DWORD)v173)
      {
        if (!v686)
        {
          v1345 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 2;
            v1544 = 2 * v1345;
            v1346 = (char *)sub_2101FF5A0(v172);
            ++v172[14];
            sub_2101FFF00(v1346, (uint64_t)&v1543);
            v1345 += v685;
            if (!--v1161)
              goto LABEL_1988;
          }
          goto LABEL_2202;
        }
        v1162 = 0;
        do
        {
          v1543 = 2;
          v1544 = (uint64_t)&v686[v1162];
          v1163 = (char *)sub_2101FF5A0(v172);
          ++v172[14];
          sub_2101FFF00(v1163, (uint64_t)&v1543);
          v1162 += v685;
          --v1161;
        }
        while (v1161);
      }
LABEL_1988:
      v1347 = v172[6];
      v172[4] = *(_QWORD *)(v1347 - 8);
      v1348 = v172[9];
      v172[14] = *(_QWORD *)(v1348 - 8);
      v172[6] = v1347 - 8;
      v172[9] = v1348 - 8;
LABEL_1989:
      v1349 = v1542;
      v1542 = 0;
      if (v1349)
        (*(void (**)(uint64_t))(*(_QWORD *)v1349 + 8))(v1349);
      v915 = v1547;
      if (!v1547)
        return;
      v1350 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1350);
      while (__stlxr(v917 - 1, v1350));
      goto LABEL_2184;
    case 7:
      v1545 = &off_24CA11A00;
      sub_20FF6A4F8((std::string::size_type *)&v1546, a3);
      v120 = *a2;
      v1520 = v1555;
      v121 = v1546;
      if (!v1546)
        goto LABEL_852;
      v122 = v1547;
      if (v1547)
      {
        v123 = (unint64_t *)&v1547->__shared_owners_;
        do
          v124 = __ldxr(v123);
        while (__stxr(v124 + 1, v123));
        do
          v125 = __ldaxr(v123);
        while (__stlxr(v125 - 1, v123));
        if (!v125)
        {
          ((void (*)(std::__shared_weak_count *))v122->__on_zero_shared)(v122);
          std::__shared_weak_count::__release_weak(v122);
        }
        v121 = v1546;
        v126 = v1547;
        if (v1547)
        {
          v127 = (unint64_t *)&v1547->__shared_owners_;
          do
            v128 = __ldxr(v127);
          while (__stxr(v128 + 1, v127));
          do
            v129 = __ldaxr(v127);
          while (__stlxr(v129 - 1, v127));
          if (!v129)
          {
            ((void (*)(std::__shared_weak_count *))v126->__on_zero_shared)(v126);
            std::__shared_weak_count::__release_weak(v126);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v121 + 96))(&v1543, v121, 1);
      else
LABEL_852:
        v1543 = 0;
      if (!v1549)
        goto LABEL_1941;
      if (!v1550)
        goto LABEL_1941;
      v599 = v1551;
      if (!v1551)
        goto LABEL_1941;
      v600 = v1553;
      v1468 = v1554;
      v601 = v1548;
      if (v1556 && v1548)
      {
        v602 = v1546;
        v603 = v1547;
        if (v1547)
        {
          v604 = (unint64_t *)&v1547->__shared_owners_;
          do
            v605 = __ldxr(v604);
          while (__stxr(v605 + 1, v604));
          do
            v606 = __ldaxr(v604);
          while (__stlxr(v606 - 1, v604));
          if (!v606)
          {
            ((void (*)(std::__shared_weak_count *))v603->__on_zero_shared)(v603);
            std::__shared_weak_count::__release_weak(v603);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v602 + 88))(v602, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v601 = v1548;
      }
      v1496 = v599 - 1;
      if (v599 == 1)
        goto LABEL_1649;
      if ((_DWORD)v1520)
      {
        v607 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v120);
          if (!v601)
            break;
          v610 = 0;
          v611 = v1520;
          do
          {
            v612 = sub_2101FF5A0(v120);
            ++v120[14];
            sub_210200168(v612, &v601[v610]);
            v610 += v600;
            --v611;
          }
          while (v611);
LABEL_868:
          v608 = v120[6];
          v120[4] = *(_QWORD *)(v608 - 8);
          v609 = v120[9];
          v120[14] = *(_QWORD *)(v609 - 8);
          v120[6] = v608 - 8;
          v120[9] = v609 - 8;
          v601 += v1468;
          if (++v607 == v1496)
            goto LABEL_1649;
        }
        v613 = 0;
        v614 = v1520;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v615 = sub_2101FF5A0(v120);
          ++v120[14];
          sub_210200168(v615, (_WORD *)(2 * v613));
          v613 += v600;
          if (!--v614)
            goto LABEL_868;
        }
LABEL_2197:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v120);
        v1137 = v120[6];
        v120[4] = *(_QWORD *)(v1137 - 8);
        v1138 = v120[9];
        v120[14] = *(_QWORD *)(v1138 - 8);
        v120[6] = v1137 - 8;
        v120[9] = v1138 - 8;
        v601 += v1468;
        --v1496;
      }
      while (v1496);
LABEL_1649:
      sub_2101FF2E8((uint64_t)v120);
      if ((_DWORD)v1520)
      {
        if (!v601)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1318 = sub_2101FF5A0(v120);
            ++v120[14];
            sub_210200168(v1318, (_WORD *)(2 * v601));
            LODWORD(v601) = (_DWORD)v601 + v600;
            if (!--v1520)
              goto LABEL_1940;
          }
          goto LABEL_2197;
        }
        v1139 = 0;
        do
        {
          v1140 = sub_2101FF5A0(v120);
          ++v120[14];
          sub_210200168(v1140, &v601[v1139]);
          v1139 += v600;
          --v1520;
        }
        while (v1520);
      }
LABEL_1940:
      v1319 = v120[6];
      v120[4] = *(_QWORD *)(v1319 - 8);
      v1320 = v120[9];
      v120[14] = *(_QWORD *)(v1320 - 8);
      v120[6] = v1319 - 8;
      v120[9] = v1320 - 8;
LABEL_1941:
      v1321 = v1543;
      v1543 = 0;
      if (v1321)
        (*(void (**)(uint64_t))(*(_QWORD *)v1321 + 8))(v1321);
      v915 = v1547;
      if (!v1547)
        return;
      v1322 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1322);
      while (__stlxr(v917 - 1, v1322));
      goto LABEL_2184;
    case 8:
      v1545 = &off_24CA11AF8;
      sub_20FF6AD60((std::string::size_type *)&v1546, a3);
      v288 = *a2;
      v1528 = v1555;
      v289 = v1546;
      if (!v1546)
        goto LABEL_1245;
      v290 = v1547;
      if (v1547)
      {
        v291 = (unint64_t *)&v1547->__shared_owners_;
        do
          v292 = __ldxr(v291);
        while (__stxr(v292 + 1, v291));
        do
          v293 = __ldaxr(v291);
        while (__stlxr(v293 - 1, v291));
        if (!v293)
        {
          ((void (*)(std::__shared_weak_count *))v290->__on_zero_shared)(v290);
          std::__shared_weak_count::__release_weak(v290);
        }
        v289 = v1546;
        v294 = v1547;
        if (v1547)
        {
          v295 = (unint64_t *)&v1547->__shared_owners_;
          do
            v296 = __ldxr(v295);
          while (__stxr(v296 + 1, v295));
          do
            v297 = __ldaxr(v295);
          while (__stlxr(v297 - 1, v295));
          if (!v297)
          {
            ((void (*)(std::__shared_weak_count *))v294->__on_zero_shared)(v294);
            std::__shared_weak_count::__release_weak(v294);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v289 + 96))(&v1543, v289, 1);
      else
LABEL_1245:
        v1543 = 0;
      if (!v1549)
        goto LABEL_2083;
      if (!v1550)
        goto LABEL_2083;
      v866 = v1551;
      if (!v1551)
        goto LABEL_2083;
      v867 = v1553;
      v1481 = v1554;
      v868 = v1548;
      if (v1556 && v1548)
      {
        v869 = v1546;
        v870 = v1547;
        if (v1547)
        {
          v871 = (unint64_t *)&v1547->__shared_owners_;
          do
            v872 = __ldxr(v871);
          while (__stxr(v872 + 1, v871));
          do
            v873 = __ldaxr(v871);
          while (__stlxr(v873 - 1, v871));
          if (!v873)
          {
            ((void (*)(std::__shared_weak_count *))v870->__on_zero_shared)(v870);
            std::__shared_weak_count::__release_weak(v870);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v869 + 88))(v869, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v868 = v1548;
      }
      v1506 = v866 - 1;
      if (v866 == 1)
        goto LABEL_1752;
      if ((_DWORD)v1528)
      {
        v874 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v288);
          if (!v868)
            break;
          v877 = 0;
          v878 = v1528;
          do
          {
            v879 = sub_2101FF5A0(v288);
            ++v288[14];
            sub_2102004AC(v879, (float *)&v868[2 * v877]);
            v877 += v867;
            --v878;
          }
          while (v878);
LABEL_1261:
          v875 = v288[6];
          v288[4] = *(_QWORD *)(v875 - 8);
          v876 = v288[9];
          v288[14] = *(_QWORD *)(v876 - 8);
          v288[6] = v875 - 8;
          v288[9] = v876 - 8;
          v868 += 2 * v1481;
          if (++v874 == v1506)
            goto LABEL_1752;
        }
        v880 = 0;
        v881 = v1528;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v882 = sub_2101FF5A0(v288);
          ++v288[14];
          sub_2102004AC(v882, (float *)(4 * v880));
          v880 += v867;
          if (!--v881)
            goto LABEL_1261;
        }
LABEL_2212:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v288);
        v1207 = v288[6];
        v288[4] = *(_QWORD *)(v1207 - 8);
        v1208 = v288[9];
        v288[14] = *(_QWORD *)(v1208 - 8);
        v288[6] = v1207 - 8;
        v288[9] = v1208 - 8;
        v868 += 2 * v1481;
        --v1506;
      }
      while (v1506);
LABEL_1752:
      sub_2101FF2E8((uint64_t)v288);
      if ((_DWORD)v1528)
      {
        if (!v868)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1400 = sub_2101FF5A0(v288);
            ++v288[14];
            sub_2102004AC(v1400, (float *)(4 * v868));
            LODWORD(v868) = (_DWORD)v868 + v867;
            if (!--v1528)
              goto LABEL_2082;
          }
          goto LABEL_2212;
        }
        v1209 = 0;
        do
        {
          v1210 = sub_2101FF5A0(v288);
          ++v288[14];
          sub_2102004AC(v1210, (float *)&v868[2 * v1209]);
          v1209 += v867;
          --v1528;
        }
        while (v1528);
      }
LABEL_2082:
      v1401 = v288[6];
      v288[4] = *(_QWORD *)(v1401 - 8);
      v1402 = v288[9];
      v288[14] = *(_QWORD *)(v1402 - 8);
      v288[6] = v1401 - 8;
      v288[9] = v1402 - 8;
LABEL_2083:
      v1403 = v1543;
      v1543 = 0;
      if (v1403)
        (*(void (**)(uint64_t))(*(_QWORD *)v1403 + 8))(v1403);
      v915 = v1547;
      if (!v1547)
        return;
      v1404 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1404);
      while (__stlxr(v917 - 1, v1404));
      goto LABEL_2184;
    case 9:
      v1545 = &off_24CA11BF0;
      sub_20FF6B5C8((std::string::size_type *)&v1546, a3);
      v256 = *a2;
      v257 = v1555;
      v258 = v1546;
      if (!v1546)
        goto LABEL_1170;
      v259 = v1547;
      if (v1547)
      {
        v260 = (unint64_t *)&v1547->__shared_owners_;
        do
          v261 = __ldxr(v260);
        while (__stxr(v261 + 1, v260));
        do
          v262 = __ldaxr(v260);
        while (__stlxr(v262 - 1, v260));
        if (!v262)
        {
          ((void (*)(std::__shared_weak_count *))v259->__on_zero_shared)(v259);
          std::__shared_weak_count::__release_weak(v259);
        }
        v258 = v1546;
        v263 = v1547;
        if (v1547)
        {
          v264 = (unint64_t *)&v1547->__shared_owners_;
          do
            v265 = __ldxr(v264);
          while (__stxr(v265 + 1, v264));
          do
            v266 = __ldaxr(v264);
          while (__stlxr(v266 - 1, v264));
          if (!v266)
          {
            ((void (*)(std::__shared_weak_count *))v263->__on_zero_shared)(v263);
            std::__shared_weak_count::__release_weak(v263);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v258 + 96))(&v1542, v258, 1);
      else
LABEL_1170:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2055;
      if (!v1550)
        goto LABEL_2055;
      v813 = v1551;
      if (!v1551)
        goto LABEL_2055;
      v814 = v1553;
      v1503 = v1554;
      v815 = v1548;
      if (v1556 && v1548)
      {
        v816 = v1546;
        v817 = v1547;
        if (v1547)
        {
          v818 = (unint64_t *)&v1547->__shared_owners_;
          do
            v819 = __ldxr(v818);
          while (__stxr(v819 + 1, v818));
          do
            v820 = __ldaxr(v818);
          while (__stlxr(v820 - 1, v818));
          if (!v820)
          {
            ((void (*)(std::__shared_weak_count *))v817->__on_zero_shared)(v817);
            std::__shared_weak_count::__release_weak(v817);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v816 + 88))(v816, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v815 = v1548;
      }
      v821 = v813 - 1;
      if (v813 == 1)
        goto LABEL_1733;
      if ((_DWORD)v257)
      {
        v822 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v256);
          if (!v815)
            break;
          v825 = 0;
          v826 = v257;
          do
          {
            v1543 = 3;
            v1544 = (uint64_t)v815 + v825;
            v827 = (char *)sub_2101FF5A0(v256);
            ++v256[14];
            sub_2101FF6B8(v827, (uint64_t)&v1543);
            v825 += v814;
            --v826;
          }
          while (v826);
LABEL_1186:
          v823 = v256[6];
          v256[4] = *(_QWORD *)(v823 - 8);
          v824 = v256[9];
          v256[14] = *(_QWORD *)(v824 - 8);
          v256[6] = v823 - 8;
          v256[9] = v824 - 8;
          v815 = (_WORD *)((char *)v815 + v1503);
          if (++v822 == v813 - 1)
            goto LABEL_1733;
        }
        v828 = 0;
        v829 = v257;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 3;
          v1544 = v828;
          v830 = (char *)sub_2101FF5A0(v256);
          ++v256[14];
          sub_2101FF6B8(v830, (uint64_t)&v1543);
          v828 += v814;
          if (!--v829)
            goto LABEL_1186;
        }
LABEL_2209:
        abort();
      }
      v815 = (_WORD *)((char *)v815 + v1503 + v1503 * (unint64_t)(v813 - 2));
      do
      {
        sub_2101FF2E8((uint64_t)v256);
        v1193 = v256[6];
        v256[4] = *(_QWORD *)(v1193 - 8);
        v1194 = v256[9];
        v256[14] = *(_QWORD *)(v1194 - 8);
        v256[6] = v1193 - 8;
        v256[9] = v1194 - 8;
        --v821;
      }
      while (v821);
LABEL_1733:
      sub_2101FF2E8((uint64_t)v256);
      v1195 = v257;
      if ((_DWORD)v257)
      {
        if (!v815)
        {
          v1383 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 3;
            v1544 = v1383;
            v1384 = (char *)sub_2101FF5A0(v256);
            ++v256[14];
            sub_2101FF6B8(v1384, (uint64_t)&v1543);
            v1383 += v814;
            if (!--v1195)
              goto LABEL_2054;
          }
          goto LABEL_2209;
        }
        v1196 = 0;
        do
        {
          v1543 = 3;
          v1544 = (uint64_t)v815 + v1196;
          v1197 = (char *)sub_2101FF5A0(v256);
          ++v256[14];
          sub_2101FF6B8(v1197, (uint64_t)&v1543);
          v1196 += v814;
          --v1195;
        }
        while (v1195);
      }
LABEL_2054:
      v1385 = v256[6];
      v256[4] = *(_QWORD *)(v1385 - 8);
      v1386 = v256[9];
      v256[14] = *(_QWORD *)(v1386 - 8);
      v256[6] = v1385 - 8;
      v256[9] = v1386 - 8;
LABEL_2055:
      v1387 = v1542;
      v1542 = 0;
      if (v1387)
        (*(void (**)(uint64_t))(*(_QWORD *)v1387 + 8))(v1387);
      v915 = v1547;
      if (!v1547)
        return;
      v1388 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1388);
      while (__stlxr(v917 - 1, v1388));
      goto LABEL_2184;
    case 10:
      v1545 = &off_24CA11CE8;
      sub_20FF6BE2C((std::string::size_type *)&v1546, a3);
      v341 = *a2;
      v342 = v1555;
      v343 = v1546;
      if (!v1546)
        goto LABEL_1385;
      v344 = v1547;
      if (v1547)
      {
        v345 = (unint64_t *)&v1547->__shared_owners_;
        do
          v346 = __ldxr(v345);
        while (__stxr(v346 + 1, v345));
        do
          v347 = __ldaxr(v345);
        while (__stlxr(v347 - 1, v345));
        if (!v347)
        {
          ((void (*)(std::__shared_weak_count *))v344->__on_zero_shared)(v344);
          std::__shared_weak_count::__release_weak(v344);
        }
        v343 = v1546;
        v348 = v1547;
        if (v1547)
        {
          v349 = (unint64_t *)&v1547->__shared_owners_;
          do
            v350 = __ldxr(v349);
          while (__stxr(v350 + 1, v349));
          do
            v351 = __ldaxr(v349);
          while (__stlxr(v351 - 1, v349));
          if (!v351)
          {
            ((void (*)(std::__shared_weak_count *))v348->__on_zero_shared)(v348);
            std::__shared_weak_count::__release_weak(v348);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v343 + 96))(&v1542, v343, 1);
      else
LABEL_1385:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2112;
      if (!v1550)
        goto LABEL_2112;
      v953 = v1551;
      if (!v1551)
        goto LABEL_2112;
      v954 = v1553;
      v1483 = v1554;
      v955 = v1548;
      if (v1556 && v1548)
      {
        v956 = v1546;
        v957 = v1547;
        if (v1547)
        {
          v958 = (unint64_t *)&v1547->__shared_owners_;
          do
            v959 = __ldxr(v958);
          while (__stxr(v959 + 1, v958));
          do
            v960 = __ldaxr(v958);
          while (__stlxr(v960 - 1, v958));
          if (!v960)
          {
            ((void (*)(std::__shared_weak_count *))v957->__on_zero_shared)(v957);
            std::__shared_weak_count::__release_weak(v957);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v956 + 88))(v956, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v955 = v1548;
      }
      v1540 = v953 - 1;
      if (v953 == 1)
        goto LABEL_1793;
      if ((_DWORD)v342)
      {
        v961 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v341);
          if (!v955)
            break;
          v964 = 0;
          v965 = v342;
          do
          {
            v1543 = 3;
            v1544 = (uint64_t)&v955[v964];
            v966 = (char *)sub_2101FF5A0(v341);
            ++v341[14];
            sub_2101FFF00(v966, (uint64_t)&v1543);
            v964 += v954;
            --v965;
          }
          while (v965);
LABEL_1401:
          v962 = v341[6];
          v341[4] = *(_QWORD *)(v962 - 8);
          v963 = v341[9];
          v341[14] = *(_QWORD *)(v963 - 8);
          v341[6] = v962 - 8;
          v341[9] = v963 - 8;
          v955 += v1483;
          if (++v961 == v1540)
            goto LABEL_1793;
        }
        v967 = 0;
        v968 = v342;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 3;
          v1544 = 2 * v967;
          v969 = (char *)sub_2101FF5A0(v341);
          ++v341[14];
          sub_2101FFF00(v969, (uint64_t)&v1543);
          v967 += v954;
          if (!--v968)
            goto LABEL_1401;
        }
LABEL_2215:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v341);
        v1226 = v341[6];
        v341[4] = *(_QWORD *)(v1226 - 8);
        v1227 = v341[9];
        v341[14] = *(_QWORD *)(v1227 - 8);
        v341[6] = v1226 - 8;
        v341[9] = v1227 - 8;
        v955 += v1483;
        --v1540;
      }
      while (v1540);
LABEL_1793:
      sub_2101FF2E8((uint64_t)v341);
      v1228 = v342;
      if ((_DWORD)v342)
      {
        if (!v955)
        {
          v1416 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 3;
            v1544 = 2 * v1416;
            v1417 = (char *)sub_2101FF5A0(v341);
            ++v341[14];
            sub_2101FFF00(v1417, (uint64_t)&v1543);
            v1416 += v954;
            if (!--v1228)
              goto LABEL_2111;
          }
          goto LABEL_2215;
        }
        v1229 = 0;
        do
        {
          v1543 = 3;
          v1544 = (uint64_t)&v955[v1229];
          v1230 = (char *)sub_2101FF5A0(v341);
          ++v341[14];
          sub_2101FFF00(v1230, (uint64_t)&v1543);
          v1229 += v954;
          --v1228;
        }
        while (v1228);
      }
LABEL_2111:
      v1418 = v341[6];
      v341[4] = *(_QWORD *)(v1418 - 8);
      v1419 = v341[9];
      v341[14] = *(_QWORD *)(v1419 - 8);
      v341[6] = v1418 - 8;
      v341[9] = v1419 - 8;
LABEL_2112:
      v1420 = v1542;
      v1542 = 0;
      if (v1420)
        (*(void (**)(uint64_t))(*(_QWORD *)v1420 + 8))(v1420);
      v915 = v1547;
      if (!v1547)
        return;
      v1421 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1421);
      while (__stlxr(v917 - 1, v1421));
      goto LABEL_2184;
    case 11:
      v1545 = &off_24CA11DE0;
      sub_20FF6C694((std::string::size_type *)&v1546, a3);
      v331 = *a2;
      v1529 = v1555;
      v332 = v1546;
      if (!v1546)
        goto LABEL_1360;
      v333 = v1547;
      if (v1547)
      {
        v334 = (unint64_t *)&v1547->__shared_owners_;
        do
          v335 = __ldxr(v334);
        while (__stxr(v335 + 1, v334));
        do
          v336 = __ldaxr(v334);
        while (__stlxr(v336 - 1, v334));
        if (!v336)
        {
          ((void (*)(std::__shared_weak_count *))v333->__on_zero_shared)(v333);
          std::__shared_weak_count::__release_weak(v333);
        }
        v332 = v1546;
        v337 = v1547;
        if (v1547)
        {
          v338 = (unint64_t *)&v1547->__shared_owners_;
          do
            v339 = __ldxr(v338);
          while (__stxr(v339 + 1, v338));
          do
            v340 = __ldaxr(v338);
          while (__stlxr(v340 - 1, v338));
          if (!v340)
          {
            ((void (*)(std::__shared_weak_count *))v337->__on_zero_shared)(v337);
            std::__shared_weak_count::__release_weak(v337);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v332 + 96))(&v1543, v332, 1);
      else
LABEL_1360:
        v1543 = 0;
      if (!v1549)
        goto LABEL_2102;
      if (!v1550)
        goto LABEL_2102;
      v936 = v1551;
      if (!v1551)
        goto LABEL_2102;
      v937 = v1553;
      v1482 = v1554;
      v938 = v1548;
      if (v1556 && v1548)
      {
        v939 = v1546;
        v940 = v1547;
        if (v1547)
        {
          v941 = (unint64_t *)&v1547->__shared_owners_;
          do
            v942 = __ldxr(v941);
          while (__stxr(v942 + 1, v941));
          do
            v943 = __ldaxr(v941);
          while (__stlxr(v943 - 1, v941));
          if (!v943)
          {
            ((void (*)(std::__shared_weak_count *))v940->__on_zero_shared)(v940);
            std::__shared_weak_count::__release_weak(v940);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v939 + 88))(v939, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v938 = v1548;
      }
      v1508 = v936 - 1;
      if (v936 == 1)
        goto LABEL_1787;
      if ((_DWORD)v1529)
      {
        v944 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v331);
          if (!v938)
            break;
          v947 = 0;
          v948 = v1529;
          do
          {
            v949 = sub_2101FF5A0(v331);
            ++v331[14];
            sub_210200168(v949, &v938[v947]);
            v947 += v937;
            --v948;
          }
          while (v948);
LABEL_1376:
          v945 = v331[6];
          v331[4] = *(_QWORD *)(v945 - 8);
          v946 = v331[9];
          v331[14] = *(_QWORD *)(v946 - 8);
          v331[6] = v945 - 8;
          v331[9] = v946 - 8;
          v938 += v1482;
          if (++v944 == v1508)
            goto LABEL_1787;
        }
        v950 = 0;
        v951 = v1529;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v952 = sub_2101FF5A0(v331);
          ++v331[14];
          sub_210200168(v952, (_WORD *)(2 * v950));
          v950 += v937;
          if (!--v951)
            goto LABEL_1376;
        }
LABEL_2214:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v331);
        v1222 = v331[6];
        v331[4] = *(_QWORD *)(v1222 - 8);
        v1223 = v331[9];
        v331[14] = *(_QWORD *)(v1223 - 8);
        v331[6] = v1222 - 8;
        v331[9] = v1223 - 8;
        v938 += v1482;
        --v1508;
      }
      while (v1508);
LABEL_1787:
      sub_2101FF2E8((uint64_t)v331);
      if ((_DWORD)v1529)
      {
        if (!v938)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1411 = sub_2101FF5A0(v331);
            ++v331[14];
            sub_210200168(v1411, (_WORD *)(2 * v938));
            LODWORD(v938) = (_DWORD)v938 + v937;
            if (!--v1529)
              goto LABEL_2101;
          }
          goto LABEL_2214;
        }
        v1224 = 0;
        do
        {
          v1225 = sub_2101FF5A0(v331);
          ++v331[14];
          sub_210200168(v1225, &v938[v1224]);
          v1224 += v937;
          --v1529;
        }
        while (v1529);
      }
LABEL_2101:
      v1412 = v331[6];
      v331[4] = *(_QWORD *)(v1412 - 8);
      v1413 = v331[9];
      v331[14] = *(_QWORD *)(v1413 - 8);
      v331[6] = v1412 - 8;
      v331[9] = v1413 - 8;
LABEL_2102:
      v1414 = v1543;
      v1543 = 0;
      if (v1414)
        (*(void (**)(uint64_t))(*(_QWORD *)v1414 + 8))(v1414);
      v915 = v1547;
      if (!v1547)
        return;
      v1415 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1415);
      while (__stlxr(v917 - 1, v1415));
      goto LABEL_2184;
    case 12:
      v1545 = &off_24CA11ED8;
      sub_20FF6CEFC((std::string::size_type *)&v1546, a3);
      v46 = *a2;
      v1517 = v1555;
      v47 = v1546;
      if (!v1546)
        goto LABEL_677;
      v48 = v1547;
      if (v1547)
      {
        v49 = (unint64_t *)&v1547->__shared_owners_;
        do
          v50 = __ldxr(v49);
        while (__stxr(v50 + 1, v49));
        do
          v51 = __ldaxr(v49);
        while (__stlxr(v51 - 1, v49));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
          std::__shared_weak_count::__release_weak(v48);
        }
        v47 = v1546;
        v52 = v1547;
        if (v1547)
        {
          v53 = (unint64_t *)&v1547->__shared_owners_;
          do
            v54 = __ldxr(v53);
          while (__stxr(v54 + 1, v53));
          do
            v55 = __ldaxr(v53);
          while (__stlxr(v55 - 1, v53));
          if (!v55)
          {
            ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
            std::__shared_weak_count::__release_weak(v52);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v47 + 96))(&v1543, v47, 1);
      else
LABEL_677:
        v1543 = 0;
      if (!v1549)
        goto LABEL_1874;
      if (!v1550)
        goto LABEL_1874;
      v478 = v1551;
      if (!v1551)
        goto LABEL_1874;
      v479 = v1553;
      v1463 = v1554;
      v480 = v1548;
      if (v1556 && v1548)
      {
        v481 = v1546;
        v482 = v1547;
        if (v1547)
        {
          v483 = (unint64_t *)&v1547->__shared_owners_;
          do
            v484 = __ldxr(v483);
          while (__stxr(v484 + 1, v483));
          do
            v485 = __ldaxr(v483);
          while (__stlxr(v485 - 1, v483));
          if (!v485)
          {
            ((void (*)(std::__shared_weak_count *))v482->__on_zero_shared)(v482);
            std::__shared_weak_count::__release_weak(v482);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v481 + 88))(v481, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v480 = v1548;
      }
      v1491 = v478 - 1;
      if (v478 == 1)
        goto LABEL_1605;
      if ((_DWORD)v1517)
      {
        v486 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v46);
          if (!v480)
            break;
          v489 = 0;
          v490 = v1517;
          do
          {
            v491 = sub_2101FF5A0(v46);
            ++v46[14];
            sub_2102004AC(v491, (float *)&v480[2 * v489]);
            v489 += v479;
            --v490;
          }
          while (v490);
LABEL_693:
          v487 = v46[6];
          v46[4] = *(_QWORD *)(v487 - 8);
          v488 = v46[9];
          v46[14] = *(_QWORD *)(v488 - 8);
          v46[6] = v487 - 8;
          v46[9] = v488 - 8;
          v480 += 2 * v1463;
          if (++v486 == v1491)
            goto LABEL_1605;
        }
        v492 = 0;
        v493 = v1517;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v494 = sub_2101FF5A0(v46);
          ++v46[14];
          sub_2102004AC(v494, (float *)(4 * v492));
          v492 += v479;
          if (!--v493)
            goto LABEL_693;
        }
LABEL_2190:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v46);
        v1105 = v46[6];
        v46[4] = *(_QWORD *)(v1105 - 8);
        v1106 = v46[9];
        v46[14] = *(_QWORD *)(v1106 - 8);
        v46[6] = v1105 - 8;
        v46[9] = v1106 - 8;
        v480 += 2 * v1463;
        --v1491;
      }
      while (v1491);
LABEL_1605:
      sub_2101FF2E8((uint64_t)v46);
      if ((_DWORD)v1517)
      {
        if (!v480)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1279 = sub_2101FF5A0(v46);
            ++v46[14];
            sub_2102004AC(v1279, (float *)(4 * v480));
            LODWORD(v480) = (_DWORD)v480 + v479;
            if (!--v1517)
              goto LABEL_1873;
          }
          goto LABEL_2190;
        }
        v1107 = 0;
        do
        {
          v1108 = sub_2101FF5A0(v46);
          ++v46[14];
          sub_2102004AC(v1108, (float *)&v480[2 * v1107]);
          v1107 += v479;
          --v1517;
        }
        while (v1517);
      }
LABEL_1873:
      v1280 = v46[6];
      v46[4] = *(_QWORD *)(v1280 - 8);
      v1281 = v46[9];
      v46[14] = *(_QWORD *)(v1281 - 8);
      v46[6] = v1280 - 8;
      v46[9] = v1281 - 8;
LABEL_1874:
      v1282 = v1543;
      v1543 = 0;
      if (v1282)
        (*(void (**)(uint64_t))(*(_QWORD *)v1282 + 8))(v1282);
      v915 = v1547;
      if (!v1547)
        return;
      v1283 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1283);
      while (__stlxr(v917 - 1, v1283));
      goto LABEL_2184;
    case 13:
      v1545 = &off_24CA11FD0;
      sub_20FF6D764((std::string::size_type *)&v1546, a3);
      v88 = *a2;
      v89 = v1555;
      v90 = v1546;
      if (!v1546)
        goto LABEL_777;
      v91 = v1547;
      if (v1547)
      {
        v92 = (unint64_t *)&v1547->__shared_owners_;
        do
          v93 = __ldxr(v92);
        while (__stxr(v93 + 1, v92));
        do
          v94 = __ldaxr(v92);
        while (__stlxr(v94 - 1, v92));
        if (!v94)
        {
          ((void (*)(std::__shared_weak_count *))v91->__on_zero_shared)(v91);
          std::__shared_weak_count::__release_weak(v91);
        }
        v90 = v1546;
        v95 = v1547;
        if (v1547)
        {
          v96 = (unint64_t *)&v1547->__shared_owners_;
          do
            v97 = __ldxr(v96);
          while (__stxr(v97 + 1, v96));
          do
            v98 = __ldaxr(v96);
          while (__stlxr(v98 - 1, v96));
          if (!v98)
          {
            ((void (*)(std::__shared_weak_count *))v95->__on_zero_shared)(v95);
            std::__shared_weak_count::__release_weak(v95);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v90 + 96))(&v1542, v90, 1);
      else
LABEL_777:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1913;
      if (!v1550)
        goto LABEL_1913;
      v547 = v1551;
      if (!v1551)
        goto LABEL_1913;
      v548 = v1553;
      v1494 = v1554;
      v549 = v1548;
      if (v1556 && v1548)
      {
        v550 = v1546;
        v551 = v1547;
        if (v1547)
        {
          v552 = (unint64_t *)&v1547->__shared_owners_;
          do
            v553 = __ldxr(v552);
          while (__stxr(v553 + 1, v552));
          do
            v554 = __ldaxr(v552);
          while (__stlxr(v554 - 1, v552));
          if (!v554)
          {
            ((void (*)(std::__shared_weak_count *))v551->__on_zero_shared)(v551);
            std::__shared_weak_count::__release_weak(v551);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v550 + 88))(v550, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v549 = v1548;
      }
      v555 = v547 - 1;
      if (v547 == 1)
        goto LABEL_1631;
      if ((_DWORD)v89)
      {
        v556 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v88);
          if (!v549)
            break;
          v559 = 0;
          v560 = v89;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)v549 + v559;
            v561 = (char *)sub_2101FF5A0(v88);
            ++v88[14];
            sub_2101FF6B8(v561, (uint64_t)&v1543);
            v559 += v548;
            --v560;
          }
          while (v560);
LABEL_793:
          v557 = v88[6];
          v88[4] = *(_QWORD *)(v557 - 8);
          v558 = v88[9];
          v88[14] = *(_QWORD *)(v558 - 8);
          v88[6] = v557 - 8;
          v88[9] = v558 - 8;
          v549 = (_WORD *)((char *)v549 + v1494);
          if (++v556 == v547 - 1)
            goto LABEL_1631;
        }
        v562 = 0;
        v563 = v89;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = v562;
          v564 = (char *)sub_2101FF5A0(v88);
          ++v88[14];
          sub_2101FF6B8(v564, (uint64_t)&v1543);
          v562 += v548;
          if (!--v563)
            goto LABEL_793;
        }
LABEL_2194:
        abort();
      }
      v549 = (_WORD *)((char *)v549 + v1494 + v1494 * (unint64_t)(v547 - 2));
      do
      {
        sub_2101FF2E8((uint64_t)v88);
        v1123 = v88[6];
        v88[4] = *(_QWORD *)(v1123 - 8);
        v1124 = v88[9];
        v88[14] = *(_QWORD *)(v1124 - 8);
        v88[6] = v1123 - 8;
        v88[9] = v1124 - 8;
        --v555;
      }
      while (v555);
LABEL_1631:
      sub_2101FF2E8((uint64_t)v88);
      v1125 = v89;
      if ((_DWORD)v89)
      {
        if (!v549)
        {
          v1301 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = v1301;
            v1302 = (char *)sub_2101FF5A0(v88);
            ++v88[14];
            sub_2101FF6B8(v1302, (uint64_t)&v1543);
            v1301 += v548;
            if (!--v1125)
              goto LABEL_1912;
          }
          goto LABEL_2194;
        }
        v1126 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)v549 + v1126;
          v1127 = (char *)sub_2101FF5A0(v88);
          ++v88[14];
          sub_2101FF6B8(v1127, (uint64_t)&v1543);
          v1126 += v548;
          --v1125;
        }
        while (v1125);
      }
LABEL_1912:
      v1303 = v88[6];
      v88[4] = *(_QWORD *)(v1303 - 8);
      v1304 = v88[9];
      v88[14] = *(_QWORD *)(v1304 - 8);
      v88[6] = v1303 - 8;
      v88[9] = v1304 - 8;
LABEL_1913:
      v1305 = v1542;
      v1542 = 0;
      if (v1305)
        (*(void (**)(uint64_t))(*(_QWORD *)v1305 + 8))(v1305);
      v915 = v1547;
      if (!v1547)
        return;
      v1306 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1306);
      while (__stlxr(v917 - 1, v1306));
      goto LABEL_2184;
    case 14:
      v1545 = &off_24CA120C8;
      sub_20FF6DFC8((std::string::size_type *)&v1546, a3);
      v77 = *a2;
      v78 = v1555;
      v79 = v1546;
      if (!v1546)
        goto LABEL_752;
      v80 = v1547;
      if (v1547)
      {
        v81 = (unint64_t *)&v1547->__shared_owners_;
        do
          v82 = __ldxr(v81);
        while (__stxr(v82 + 1, v81));
        do
          v83 = __ldaxr(v81);
        while (__stlxr(v83 - 1, v81));
        if (!v83)
        {
          ((void (*)(std::__shared_weak_count *))v80->__on_zero_shared)(v80);
          std::__shared_weak_count::__release_weak(v80);
        }
        v79 = v1546;
        v84 = v1547;
        if (v1547)
        {
          v85 = (unint64_t *)&v1547->__shared_owners_;
          do
            v86 = __ldxr(v85);
          while (__stxr(v86 + 1, v85));
          do
            v87 = __ldaxr(v85);
          while (__stlxr(v87 - 1, v85));
          if (!v87)
          {
            ((void (*)(std::__shared_weak_count *))v84->__on_zero_shared)(v84);
            std::__shared_weak_count::__release_weak(v84);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v79 + 96))(&v1542, v79, 1);
      else
LABEL_752:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1903;
      if (!v1550)
        goto LABEL_1903;
      v530 = v1551;
      if (!v1551)
        goto LABEL_1903;
      v531 = v1553;
      v1465 = v1554;
      v532 = v1548;
      if (v1556 && v1548)
      {
        v533 = v1546;
        v534 = v1547;
        if (v1547)
        {
          v535 = (unint64_t *)&v1547->__shared_owners_;
          do
            v536 = __ldxr(v535);
          while (__stxr(v536 + 1, v535));
          do
            v537 = __ldaxr(v535);
          while (__stlxr(v537 - 1, v535));
          if (!v537)
          {
            ((void (*)(std::__shared_weak_count *))v534->__on_zero_shared)(v534);
            std::__shared_weak_count::__release_weak(v534);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v533 + 88))(v533, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v532 = v1548;
      }
      v1533 = v530 - 1;
      if (v530 == 1)
        goto LABEL_1624;
      if ((_DWORD)v78)
      {
        v538 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v77);
          if (!v532)
            break;
          v541 = 0;
          v542 = v78;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)&v532[v541];
            v543 = (char *)sub_2101FF5A0(v77);
            ++v77[14];
            sub_2101FFF00(v543, (uint64_t)&v1543);
            v541 += v531;
            --v542;
          }
          while (v542);
LABEL_768:
          v539 = v77[6];
          v77[4] = *(_QWORD *)(v539 - 8);
          v540 = v77[9];
          v77[14] = *(_QWORD *)(v540 - 8);
          v77[6] = v539 - 8;
          v77[9] = v540 - 8;
          v532 += v1465;
          if (++v538 == v1533)
            goto LABEL_1624;
        }
        v544 = 0;
        v545 = v78;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = 2 * v544;
          v546 = (char *)sub_2101FF5A0(v77);
          ++v77[14];
          sub_2101FFF00(v546, (uint64_t)&v1543);
          v544 += v531;
          if (!--v545)
            goto LABEL_768;
        }
LABEL_2193:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v77);
        v1118 = v77[6];
        v77[4] = *(_QWORD *)(v1118 - 8);
        v1119 = v77[9];
        v77[14] = *(_QWORD *)(v1119 - 8);
        v77[6] = v1118 - 8;
        v77[9] = v1119 - 8;
        v532 += v1465;
        --v1533;
      }
      while (v1533);
LABEL_1624:
      sub_2101FF2E8((uint64_t)v77);
      v1120 = v78;
      if ((_DWORD)v78)
      {
        if (!v532)
        {
          v1295 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = 2 * v1295;
            v1296 = (char *)sub_2101FF5A0(v77);
            ++v77[14];
            sub_2101FFF00(v1296, (uint64_t)&v1543);
            v1295 += v531;
            if (!--v1120)
              goto LABEL_1902;
          }
          goto LABEL_2193;
        }
        v1121 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)&v532[v1121];
          v1122 = (char *)sub_2101FF5A0(v77);
          ++v77[14];
          sub_2101FFF00(v1122, (uint64_t)&v1543);
          v1121 += v531;
          --v1120;
        }
        while (v1120);
      }
LABEL_1902:
      v1297 = v77[6];
      v77[4] = *(_QWORD *)(v1297 - 8);
      v1298 = v77[9];
      v77[14] = *(_QWORD *)(v1298 - 8);
      v77[6] = v1297 - 8;
      v77[9] = v1298 - 8;
LABEL_1903:
      v1299 = v1542;
      v1542 = 0;
      if (v1299)
        (*(void (**)(uint64_t))(*(_QWORD *)v1299 + 8))(v1299);
      v915 = v1547;
      if (!v1547)
        return;
      v1300 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1300);
      while (__stlxr(v917 - 1, v1300));
      goto LABEL_2184;
    case 15:
      v1545 = &off_24CA121C0;
      sub_20FF6E830((std::string::size_type *)&v1546, a3);
      v384 = *a2;
      v1531 = v1555;
      v385 = v1546;
      if (!v1546)
        goto LABEL_1485;
      v386 = v1547;
      if (v1547)
      {
        v387 = (unint64_t *)&v1547->__shared_owners_;
        do
          v388 = __ldxr(v387);
        while (__stxr(v388 + 1, v387));
        do
          v389 = __ldaxr(v387);
        while (__stlxr(v389 - 1, v387));
        if (!v389)
        {
          ((void (*)(std::__shared_weak_count *))v386->__on_zero_shared)(v386);
          std::__shared_weak_count::__release_weak(v386);
        }
        v385 = v1546;
        v390 = v1547;
        if (v1547)
        {
          v391 = (unint64_t *)&v1547->__shared_owners_;
          do
            v392 = __ldxr(v391);
          while (__stxr(v392 + 1, v391));
          do
            v393 = __ldaxr(v391);
          while (__stlxr(v393 - 1, v391));
          if (!v393)
          {
            ((void (*)(std::__shared_weak_count *))v390->__on_zero_shared)(v390);
            std::__shared_weak_count::__release_weak(v390);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v385 + 96))(&v1543, v385, 1);
      else
LABEL_1485:
        v1543 = 0;
      if (!v1549)
        goto LABEL_2150;
      if (!v1550)
        goto LABEL_2150;
      v1022 = v1551;
      if (!v1551)
        goto LABEL_2150;
      v1023 = v1553;
      v1486 = v1554;
      v1024 = v1548;
      if (v1556 && v1548)
      {
        v1025 = v1546;
        v1026 = v1547;
        if (v1547)
        {
          v1027 = (unint64_t *)&v1547->__shared_owners_;
          do
            v1028 = __ldxr(v1027);
          while (__stxr(v1028 + 1, v1027));
          do
            v1029 = __ldaxr(v1027);
          while (__stlxr(v1029 - 1, v1027));
          if (!v1029)
          {
            ((void (*)(std::__shared_weak_count *))v1026->__on_zero_shared)(v1026);
            std::__shared_weak_count::__release_weak(v1026);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1025 + 88))(v1025, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1024 = v1548;
      }
      v1511 = v1022 - 1;
      if (v1022 == 1)
        goto LABEL_1818;
      if ((_DWORD)v1531)
      {
        v1030 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v384);
          if (!v1024)
            break;
          v1033 = 0;
          v1034 = v1531;
          do
          {
            v1035 = sub_2101FF5A0(v384);
            ++v384[14];
            sub_210200168(v1035, &v1024[v1033]);
            v1033 += v1023;
            --v1034;
          }
          while (v1034);
LABEL_1501:
          v1031 = v384[6];
          v384[4] = *(_QWORD *)(v1031 - 8);
          v1032 = v384[9];
          v384[14] = *(_QWORD *)(v1032 - 8);
          v384[6] = v1031 - 8;
          v384[9] = v1032 - 8;
          v1024 += v1486;
          if (++v1030 == v1511)
            goto LABEL_1818;
        }
        v1036 = 0;
        v1037 = v1531;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1038 = sub_2101FF5A0(v384);
          ++v384[14];
          sub_210200168(v1038, (_WORD *)(2 * v1036));
          v1036 += v1023;
          if (!--v1037)
            goto LABEL_1501;
        }
LABEL_2219:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v384);
        v1245 = v384[6];
        v384[4] = *(_QWORD *)(v1245 - 8);
        v1246 = v384[9];
        v384[14] = *(_QWORD *)(v1246 - 8);
        v384[6] = v1245 - 8;
        v384[9] = v1246 - 8;
        v1024 += v1486;
        --v1511;
      }
      while (v1511);
LABEL_1818:
      sub_2101FF2E8((uint64_t)v384);
      if ((_DWORD)v1531)
      {
        if (!v1024)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1439 = sub_2101FF5A0(v384);
            ++v384[14];
            sub_210200168(v1439, (_WORD *)(2 * v1024));
            LODWORD(v1024) = (_DWORD)v1024 + v1023;
            if (!--v1531)
              goto LABEL_2149;
          }
          goto LABEL_2219;
        }
        v1247 = 0;
        do
        {
          v1248 = sub_2101FF5A0(v384);
          ++v384[14];
          sub_210200168(v1248, &v1024[v1247]);
          v1247 += v1023;
          --v1531;
        }
        while (v1531);
      }
LABEL_2149:
      v1440 = v384[6];
      v384[4] = *(_QWORD *)(v1440 - 8);
      v1441 = v384[9];
      v384[14] = *(_QWORD *)(v1441 - 8);
      v384[6] = v1440 - 8;
      v384[9] = v1441 - 8;
LABEL_2150:
      v1442 = v1543;
      v1543 = 0;
      if (v1442)
        (*(void (**)(uint64_t))(*(_QWORD *)v1442 + 8))(v1442);
      v915 = v1547;
      if (!v1547)
        return;
      v1443 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1443);
      while (__stlxr(v917 - 1, v1443));
      goto LABEL_2184;
    case 16:
      v1545 = &off_24CA122B8;
      sub_20FF6F098((std::string::size_type *)&v1546, a3);
      v278 = *a2;
      v1527 = v1555;
      v279 = v1546;
      if (!v1546)
        goto LABEL_1220;
      v280 = v1547;
      if (v1547)
      {
        v281 = (unint64_t *)&v1547->__shared_owners_;
        do
          v282 = __ldxr(v281);
        while (__stxr(v282 + 1, v281));
        do
          v283 = __ldaxr(v281);
        while (__stlxr(v283 - 1, v281));
        if (!v283)
        {
          ((void (*)(std::__shared_weak_count *))v280->__on_zero_shared)(v280);
          std::__shared_weak_count::__release_weak(v280);
        }
        v279 = v1546;
        v284 = v1547;
        if (v1547)
        {
          v285 = (unint64_t *)&v1547->__shared_owners_;
          do
            v286 = __ldxr(v285);
          while (__stxr(v286 + 1, v285));
          do
            v287 = __ldaxr(v285);
          while (__stlxr(v287 - 1, v285));
          if (!v287)
          {
            ((void (*)(std::__shared_weak_count *))v284->__on_zero_shared)(v284);
            std::__shared_weak_count::__release_weak(v284);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v279 + 96))(&v1543, v279, 1);
      else
LABEL_1220:
        v1543 = 0;
      if (!v1549)
        goto LABEL_2074;
      if (!v1550)
        goto LABEL_2074;
      v849 = v1551;
      if (!v1551)
        goto LABEL_2074;
      v850 = v1553;
      v1480 = v1554;
      v851 = v1548;
      if (v1556 && v1548)
      {
        v852 = v1546;
        v853 = v1547;
        if (v1547)
        {
          v854 = (unint64_t *)&v1547->__shared_owners_;
          do
            v855 = __ldxr(v854);
          while (__stxr(v855 + 1, v854));
          do
            v856 = __ldaxr(v854);
          while (__stlxr(v856 - 1, v854));
          if (!v856)
          {
            ((void (*)(std::__shared_weak_count *))v853->__on_zero_shared)(v853);
            std::__shared_weak_count::__release_weak(v853);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v852 + 88))(v852, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v851 = v1548;
      }
      v1505 = v849 - 1;
      if (v849 == 1)
        goto LABEL_1746;
      if ((_DWORD)v1527)
      {
        v857 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v278);
          if (!v851)
            break;
          v860 = 0;
          v861 = v1527;
          do
          {
            v862 = sub_2101FF5A0(v278);
            ++v278[14];
            sub_2102004AC(v862, (float *)&v851[2 * v860]);
            v860 += v850;
            --v861;
          }
          while (v861);
LABEL_1236:
          v858 = v278[6];
          v278[4] = *(_QWORD *)(v858 - 8);
          v859 = v278[9];
          v278[14] = *(_QWORD *)(v859 - 8);
          v278[6] = v858 - 8;
          v278[9] = v859 - 8;
          v851 += 2 * v1480;
          if (++v857 == v1505)
            goto LABEL_1746;
        }
        v863 = 0;
        v864 = v1527;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v865 = sub_2101FF5A0(v278);
          ++v278[14];
          sub_2102004AC(v865, (float *)(4 * v863));
          v863 += v850;
          if (!--v864)
            goto LABEL_1236;
        }
LABEL_2211:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v278);
        v1203 = v278[6];
        v278[4] = *(_QWORD *)(v1203 - 8);
        v1204 = v278[9];
        v278[14] = *(_QWORD *)(v1204 - 8);
        v278[6] = v1203 - 8;
        v278[9] = v1204 - 8;
        v851 += 2 * v1480;
        --v1505;
      }
      while (v1505);
LABEL_1746:
      sub_2101FF2E8((uint64_t)v278);
      if ((_DWORD)v1527)
      {
        if (!v851)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1395 = sub_2101FF5A0(v278);
            ++v278[14];
            sub_2102004AC(v1395, (float *)(4 * v851));
            LODWORD(v851) = (_DWORD)v851 + v850;
            if (!--v1527)
              goto LABEL_2073;
          }
          goto LABEL_2211;
        }
        v1205 = 0;
        do
        {
          v1206 = sub_2101FF5A0(v278);
          ++v278[14];
          sub_2102004AC(v1206, (float *)&v851[2 * v1205]);
          v1205 += v850;
          --v1527;
        }
        while (v1527);
      }
LABEL_2073:
      v1396 = v278[6];
      v278[4] = *(_QWORD *)(v1396 - 8);
      v1397 = v278[9];
      v278[14] = *(_QWORD *)(v1397 - 8);
      v278[6] = v1396 - 8;
      v278[9] = v1397 - 8;
LABEL_2074:
      v1398 = v1543;
      v1543 = 0;
      if (v1398)
        (*(void (**)(uint64_t))(*(_QWORD *)v1398 + 8))(v1398);
      v915 = v1547;
      if (!v1547)
        return;
      v1399 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1399);
      while (__stlxr(v917 - 1, v1399));
      goto LABEL_2184;
    case 17:
      v1545 = &off_24CA123B0;
      sub_20FF6F900((std::string::size_type *)&v1546, a3);
      v394 = *a2;
      v395 = v1555;
      v396 = v1546;
      if (!v1546)
        goto LABEL_1510;
      v397 = v1547;
      if (v1547)
      {
        v398 = (unint64_t *)&v1547->__shared_owners_;
        do
          v399 = __ldxr(v398);
        while (__stxr(v399 + 1, v398));
        do
          v400 = __ldaxr(v398);
        while (__stlxr(v400 - 1, v398));
        if (!v400)
        {
          ((void (*)(std::__shared_weak_count *))v397->__on_zero_shared)(v397);
          std::__shared_weak_count::__release_weak(v397);
        }
        v396 = v1546;
        v401 = v1547;
        if (v1547)
        {
          v402 = (unint64_t *)&v1547->__shared_owners_;
          do
            v403 = __ldxr(v402);
          while (__stxr(v403 + 1, v402));
          do
            v404 = __ldaxr(v402);
          while (__stlxr(v404 - 1, v402));
          if (!v404)
          {
            ((void (*)(std::__shared_weak_count *))v401->__on_zero_shared)(v401);
            std::__shared_weak_count::__release_weak(v401);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v396 + 96))(&v1542, v396, 1);
      else
LABEL_1510:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2160;
      if (!v1550)
        goto LABEL_2160;
      v1039 = v1551;
      if (!v1551)
        goto LABEL_2160;
      v1040 = v1553;
      v1512 = v1554;
      v1041 = v1548;
      if (v1556 && v1548)
      {
        v1042 = v1546;
        v1043 = v1547;
        if (v1547)
        {
          v1044 = (unint64_t *)&v1547->__shared_owners_;
          do
            v1045 = __ldxr(v1044);
          while (__stxr(v1045 + 1, v1044));
          do
            v1046 = __ldaxr(v1044);
          while (__stlxr(v1046 - 1, v1044));
          if (!v1046)
          {
            ((void (*)(std::__shared_weak_count *))v1043->__on_zero_shared)(v1043);
            std::__shared_weak_count::__release_weak(v1043);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1042 + 88))(v1042, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1041 = v1548;
      }
      v1047 = v1039 - 1;
      if (v1039 == 1)
        goto LABEL_1825;
      if ((_DWORD)v395)
      {
        v1048 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v394);
          if (!v1041)
            break;
          v1051 = 0;
          v1052 = v395;
          do
          {
            v1543 = 3;
            v1544 = (uint64_t)v1041 + v1051;
            v1053 = (char *)sub_2101FF5A0(v394);
            ++v394[14];
            sub_2101FF6B8(v1053, (uint64_t)&v1543);
            v1051 += v1040;
            --v1052;
          }
          while (v1052);
LABEL_1526:
          v1049 = v394[6];
          v394[4] = *(_QWORD *)(v1049 - 8);
          v1050 = v394[9];
          v394[14] = *(_QWORD *)(v1050 - 8);
          v394[6] = v1049 - 8;
          v394[9] = v1050 - 8;
          v1041 = (_WORD *)((char *)v1041 + v1512);
          if (++v1048 == v1039 - 1)
            goto LABEL_1825;
        }
        v1054 = 0;
        v1055 = v395;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 3;
          v1544 = v1054;
          v1056 = (char *)sub_2101FF5A0(v394);
          ++v394[14];
          sub_2101FF6B8(v1056, (uint64_t)&v1543);
          v1054 += v1040;
          if (!--v1055)
            goto LABEL_1526;
        }
LABEL_2220:
        abort();
      }
      v1041 = (_WORD *)((char *)v1041 + v1512 + v1512 * (unint64_t)(v1039 - 2));
      do
      {
        sub_2101FF2E8((uint64_t)v394);
        v1249 = v394[6];
        v394[4] = *(_QWORD *)(v1249 - 8);
        v1250 = v394[9];
        v394[14] = *(_QWORD *)(v1250 - 8);
        v394[6] = v1249 - 8;
        v394[9] = v1250 - 8;
        --v1047;
      }
      while (v1047);
LABEL_1825:
      sub_2101FF2E8((uint64_t)v394);
      v1251 = v395;
      if ((_DWORD)v395)
      {
        if (!v1041)
        {
          v1444 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 3;
            v1544 = v1444;
            v1445 = (char *)sub_2101FF5A0(v394);
            ++v394[14];
            sub_2101FF6B8(v1445, (uint64_t)&v1543);
            v1444 += v1040;
            if (!--v1251)
              goto LABEL_2159;
          }
          goto LABEL_2220;
        }
        v1252 = 0;
        do
        {
          v1543 = 3;
          v1544 = (uint64_t)v1041 + v1252;
          v1253 = (char *)sub_2101FF5A0(v394);
          ++v394[14];
          sub_2101FF6B8(v1253, (uint64_t)&v1543);
          v1252 += v1040;
          --v1251;
        }
        while (v1251);
      }
LABEL_2159:
      v1446 = v394[6];
      v394[4] = *(_QWORD *)(v1446 - 8);
      v1447 = v394[9];
      v394[14] = *(_QWORD *)(v1447 - 8);
      v394[6] = v1446 - 8;
      v394[9] = v1447 - 8;
LABEL_2160:
      v1448 = v1542;
      v1542 = 0;
      if (v1448)
        (*(void (**)(uint64_t))(*(_QWORD *)v1448 + 8))(v1448);
      v915 = v1547;
      if (!v1547)
        return;
      v1449 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1449);
      while (__stlxr(v917 - 1, v1449));
      goto LABEL_2184;
    case 18:
      v1545 = &off_24CA124A8;
      sub_20FF70164((std::string::size_type *)&v1546, a3);
      v109 = *a2;
      v110 = v1555;
      v111 = v1546;
      if (!v1546)
        goto LABEL_827;
      v112 = v1547;
      if (v1547)
      {
        v113 = (unint64_t *)&v1547->__shared_owners_;
        do
          v114 = __ldxr(v113);
        while (__stxr(v114 + 1, v113));
        do
          v115 = __ldaxr(v113);
        while (__stlxr(v115 - 1, v113));
        if (!v115)
        {
          ((void (*)(std::__shared_weak_count *))v112->__on_zero_shared)(v112);
          std::__shared_weak_count::__release_weak(v112);
        }
        v111 = v1546;
        v116 = v1547;
        if (v1547)
        {
          v117 = (unint64_t *)&v1547->__shared_owners_;
          do
            v118 = __ldxr(v117);
          while (__stxr(v118 + 1, v117));
          do
            v119 = __ldaxr(v117);
          while (__stlxr(v119 - 1, v117));
          if (!v119)
          {
            ((void (*)(std::__shared_weak_count *))v116->__on_zero_shared)(v116);
            std::__shared_weak_count::__release_weak(v116);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v111 + 96))(&v1542, v111, 1);
      else
LABEL_827:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1932;
      if (!v1550)
        goto LABEL_1932;
      v582 = v1551;
      if (!v1551)
        goto LABEL_1932;
      v583 = v1553;
      v1467 = v1554;
      v584 = v1548;
      if (v1556 && v1548)
      {
        v585 = v1546;
        v586 = v1547;
        if (v1547)
        {
          v587 = (unint64_t *)&v1547->__shared_owners_;
          do
            v588 = __ldxr(v587);
          while (__stxr(v588 + 1, v587));
          do
            v589 = __ldaxr(v587);
          while (__stlxr(v589 - 1, v587));
          if (!v589)
          {
            ((void (*)(std::__shared_weak_count *))v586->__on_zero_shared)(v586);
            std::__shared_weak_count::__release_weak(v586);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v585 + 88))(v585, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v584 = v1548;
      }
      v1534 = v582 - 1;
      if (v582 == 1)
        goto LABEL_1643;
      if ((_DWORD)v110)
      {
        v590 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v109);
          if (!v584)
            break;
          v593 = 0;
          v594 = v110;
          do
          {
            v1543 = 3;
            v1544 = (uint64_t)&v584[v593];
            v595 = (char *)sub_2101FF5A0(v109);
            ++v109[14];
            sub_2101FFF00(v595, (uint64_t)&v1543);
            v593 += v583;
            --v594;
          }
          while (v594);
LABEL_843:
          v591 = v109[6];
          v109[4] = *(_QWORD *)(v591 - 8);
          v592 = v109[9];
          v109[14] = *(_QWORD *)(v592 - 8);
          v109[6] = v591 - 8;
          v109[9] = v592 - 8;
          v584 += v1467;
          if (++v590 == v1534)
            goto LABEL_1643;
        }
        v596 = 0;
        v597 = v110;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 3;
          v1544 = 2 * v596;
          v598 = (char *)sub_2101FF5A0(v109);
          ++v109[14];
          sub_2101FFF00(v598, (uint64_t)&v1543);
          v596 += v583;
          if (!--v597)
            goto LABEL_843;
        }
LABEL_2196:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v109);
        v1132 = v109[6];
        v109[4] = *(_QWORD *)(v1132 - 8);
        v1133 = v109[9];
        v109[14] = *(_QWORD *)(v1133 - 8);
        v109[6] = v1132 - 8;
        v109[9] = v1133 - 8;
        v584 += v1467;
        --v1534;
      }
      while (v1534);
LABEL_1643:
      sub_2101FF2E8((uint64_t)v109);
      v1134 = v110;
      if ((_DWORD)v110)
      {
        if (!v584)
        {
          v1312 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 3;
            v1544 = 2 * v1312;
            v1313 = (char *)sub_2101FF5A0(v109);
            ++v109[14];
            sub_2101FFF00(v1313, (uint64_t)&v1543);
            v1312 += v583;
            if (!--v1134)
              goto LABEL_1931;
          }
          goto LABEL_2196;
        }
        v1135 = 0;
        do
        {
          v1543 = 3;
          v1544 = (uint64_t)&v584[v1135];
          v1136 = (char *)sub_2101FF5A0(v109);
          ++v109[14];
          sub_2101FFF00(v1136, (uint64_t)&v1543);
          v1135 += v583;
          --v1134;
        }
        while (v1134);
      }
LABEL_1931:
      v1314 = v109[6];
      v109[4] = *(_QWORD *)(v1314 - 8);
      v1315 = v109[9];
      v109[14] = *(_QWORD *)(v1315 - 8);
      v109[6] = v1314 - 8;
      v109[9] = v1315 - 8;
LABEL_1932:
      v1316 = v1542;
      v1542 = 0;
      if (v1316)
        (*(void (**)(uint64_t))(*(_QWORD *)v1316 + 8))(v1316);
      v915 = v1547;
      if (!v1547)
        return;
      v1317 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1317);
      while (__stlxr(v917 - 1, v1317));
      goto LABEL_2184;
    case 19:
      v1545 = &off_24CA125A0;
      sub_20FF709CC((std::string::size_type *)&v1546, a3);
      v25 = *a2;
      v1516 = v1555;
      v26 = v1546;
      if (!v1546)
        goto LABEL_627;
      v27 = v1547;
      if (v1547)
      {
        v28 = (unint64_t *)&v1547->__shared_owners_;
        do
          v29 = __ldxr(v28);
        while (__stxr(v29 + 1, v28));
        do
          v30 = __ldaxr(v28);
        while (__stlxr(v30 - 1, v28));
        if (!v30)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
        v26 = v1546;
        v31 = v1547;
        if (v1547)
        {
          v32 = (unint64_t *)&v1547->__shared_owners_;
          do
            v33 = __ldxr(v32);
          while (__stxr(v33 + 1, v32));
          do
            v34 = __ldaxr(v32);
          while (__stlxr(v34 - 1, v32));
          if (!v34)
          {
            ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
            std::__shared_weak_count::__release_weak(v31);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v26 + 96))(&v1543, v26, 1);
      else
LABEL_627:
        v1543 = 0;
      if (!v1549)
        goto LABEL_1855;
      if (!v1550)
        goto LABEL_1855;
      v443 = v1551;
      if (!v1551)
        goto LABEL_1855;
      v444 = v1553;
      v1462 = v1554;
      v445 = v1548;
      if (v1556 && v1548)
      {
        v446 = v1546;
        v447 = v1547;
        if (v1547)
        {
          v448 = (unint64_t *)&v1547->__shared_owners_;
          do
            v449 = __ldxr(v448);
          while (__stxr(v449 + 1, v448));
          do
            v450 = __ldaxr(v448);
          while (__stlxr(v450 - 1, v448));
          if (!v450)
          {
            ((void (*)(std::__shared_weak_count *))v447->__on_zero_shared)(v447);
            std::__shared_weak_count::__release_weak(v447);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v446 + 88))(v446, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v445 = v1548;
      }
      v1489 = v443 - 1;
      if (v443 == 1)
        goto LABEL_1592;
      if ((_DWORD)v1516)
      {
        v451 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v25);
          if (!v445)
            break;
          v454 = 0;
          v455 = v1516;
          do
          {
            v456 = sub_2101FF5A0(v25);
            ++v25[14];
            sub_210200168(v456, &v445[v454]);
            v454 += v444;
            --v455;
          }
          while (v455);
LABEL_643:
          v452 = v25[6];
          v25[4] = *(_QWORD *)(v452 - 8);
          v453 = v25[9];
          v25[14] = *(_QWORD *)(v453 - 8);
          v25[6] = v452 - 8;
          v25[9] = v453 - 8;
          v445 += v1462;
          if (++v451 == v1489)
            goto LABEL_1592;
        }
        v457 = 0;
        v458 = v1516;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v459 = sub_2101FF5A0(v25);
          ++v25[14];
          sub_210200168(v459, (_WORD *)(2 * v457));
          v457 += v444;
          if (!--v458)
            goto LABEL_643;
        }
LABEL_2188:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v25);
        v1096 = v25[6];
        v25[4] = *(_QWORD *)(v1096 - 8);
        v1097 = v25[9];
        v25[14] = *(_QWORD *)(v1097 - 8);
        v25[6] = v1096 - 8;
        v25[9] = v1097 - 8;
        v445 += v1462;
        --v1489;
      }
      while (v1489);
LABEL_1592:
      sub_2101FF2E8((uint64_t)v25);
      if ((_DWORD)v1516)
      {
        if (!v445)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1268 = sub_2101FF5A0(v25);
            ++v25[14];
            sub_210200168(v1268, (_WORD *)(2 * v445));
            LODWORD(v445) = (_DWORD)v445 + v444;
            if (!--v1516)
              goto LABEL_1854;
          }
          goto LABEL_2188;
        }
        v1098 = 0;
        do
        {
          v1099 = sub_2101FF5A0(v25);
          ++v25[14];
          sub_210200168(v1099, &v445[v1098]);
          v1098 += v444;
          --v1516;
        }
        while (v1516);
      }
LABEL_1854:
      v1269 = v25[6];
      v25[4] = *(_QWORD *)(v1269 - 8);
      v1270 = v25[9];
      v25[14] = *(_QWORD *)(v1270 - 8);
      v25[6] = v1269 - 8;
      v25[9] = v1270 - 8;
LABEL_1855:
      v1271 = v1543;
      v1543 = 0;
      if (v1271)
        (*(void (**)(uint64_t))(*(_QWORD *)v1271 + 8))(v1271);
      v915 = v1547;
      if (!v1547)
        return;
      v1272 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1272);
      while (__stlxr(v917 - 1, v1272));
      goto LABEL_2184;
    case 20:
      v1545 = &off_24CA12698;
      sub_20FF71234((std::string::size_type *)&v1546, a3);
      v363 = *a2;
      v1530 = v1555;
      v364 = v1546;
      if (!v1546)
        goto LABEL_1435;
      v365 = v1547;
      if (v1547)
      {
        v366 = (unint64_t *)&v1547->__shared_owners_;
        do
          v367 = __ldxr(v366);
        while (__stxr(v367 + 1, v366));
        do
          v368 = __ldaxr(v366);
        while (__stlxr(v368 - 1, v366));
        if (!v368)
        {
          ((void (*)(std::__shared_weak_count *))v365->__on_zero_shared)(v365);
          std::__shared_weak_count::__release_weak(v365);
        }
        v364 = v1546;
        v369 = v1547;
        if (v1547)
        {
          v370 = (unint64_t *)&v1547->__shared_owners_;
          do
            v371 = __ldxr(v370);
          while (__stxr(v371 + 1, v370));
          do
            v372 = __ldaxr(v370);
          while (__stlxr(v372 - 1, v370));
          if (!v372)
          {
            ((void (*)(std::__shared_weak_count *))v369->__on_zero_shared)(v369);
            std::__shared_weak_count::__release_weak(v369);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v364 + 96))(&v1543, v364, 1);
      else
LABEL_1435:
        v1543 = 0;
      if (!v1549)
        goto LABEL_2131;
      if (!v1550)
        goto LABEL_2131;
      v988 = v1551;
      if (!v1551)
        goto LABEL_2131;
      v989 = v1553;
      v1484 = v1554;
      v990 = v1548;
      if (v1556 && v1548)
      {
        v991 = v1546;
        v992 = v1547;
        if (v1547)
        {
          v993 = (unint64_t *)&v1547->__shared_owners_;
          do
            v994 = __ldxr(v993);
          while (__stxr(v994 + 1, v993));
          do
            v995 = __ldaxr(v993);
          while (__stlxr(v995 - 1, v993));
          if (!v995)
          {
            ((void (*)(std::__shared_weak_count *))v992->__on_zero_shared)(v992);
            std::__shared_weak_count::__release_weak(v992);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v991 + 88))(v991, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v990 = v1548;
      }
      v1510 = v988 - 1;
      if (v988 == 1)
        goto LABEL_1806;
      if ((_DWORD)v1530)
      {
        v996 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v363);
          if (!v990)
            break;
          v999 = 0;
          v1000 = v1530;
          do
          {
            v1001 = sub_2101FF5A0(v363);
            ++v363[14];
            sub_2102004AC(v1001, (float *)&v990[2 * v999]);
            v999 += v989;
            --v1000;
          }
          while (v1000);
LABEL_1451:
          v997 = v363[6];
          v363[4] = *(_QWORD *)(v997 - 8);
          v998 = v363[9];
          v363[14] = *(_QWORD *)(v998 - 8);
          v363[6] = v997 - 8;
          v363[9] = v998 - 8;
          v990 += 2 * v1484;
          if (++v996 == v1510)
            goto LABEL_1806;
        }
        v1002 = 0;
        v1003 = v1530;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1004 = sub_2101FF5A0(v363);
          ++v363[14];
          sub_2102004AC(v1004, (float *)(4 * v1002));
          v1002 += v989;
          if (!--v1003)
            goto LABEL_1451;
        }
LABEL_2217:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v363);
        v1236 = v363[6];
        v363[4] = *(_QWORD *)(v1236 - 8);
        v1237 = v363[9];
        v363[14] = *(_QWORD *)(v1237 - 8);
        v363[6] = v1236 - 8;
        v363[9] = v1237 - 8;
        v990 += 2 * v1484;
        --v1510;
      }
      while (v1510);
LABEL_1806:
      sub_2101FF2E8((uint64_t)v363);
      if ((_DWORD)v1530)
      {
        if (!v990)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1428 = sub_2101FF5A0(v363);
            ++v363[14];
            sub_2102004AC(v1428, (float *)(4 * v990));
            LODWORD(v990) = (_DWORD)v990 + v989;
            if (!--v1530)
              goto LABEL_2130;
          }
          goto LABEL_2217;
        }
        v1238 = 0;
        do
        {
          v1239 = sub_2101FF5A0(v363);
          ++v363[14];
          sub_2102004AC(v1239, (float *)&v990[2 * v1238]);
          v1238 += v989;
          --v1530;
        }
        while (v1530);
      }
LABEL_2130:
      v1429 = v363[6];
      v363[4] = *(_QWORD *)(v1429 - 8);
      v1430 = v363[9];
      v363[14] = *(_QWORD *)(v1430 - 8);
      v363[6] = v1429 - 8;
      v363[9] = v1430 - 8;
LABEL_2131:
      v1431 = v1543;
      v1543 = 0;
      if (v1431)
        (*(void (**)(uint64_t))(*(_QWORD *)v1431 + 8))(v1431);
      v915 = v1547;
      if (!v1547)
        return;
      v1432 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1432);
      while (__stlxr(v917 - 1, v1432));
      goto LABEL_2184;
    case 21:
      v1545 = &off_24C9F0FA0;
      sub_20FF71A34(&v1546, a3);
      v415 = *a2;
      v416 = v1555;
      v417 = v1546;
      if (!v1546)
        goto LABEL_1560;
      v418 = v1547;
      if (v1547)
      {
        v419 = (unint64_t *)&v1547->__shared_owners_;
        do
          v420 = __ldxr(v419);
        while (__stxr(v420 + 1, v419));
        do
          v421 = __ldaxr(v419);
        while (__stlxr(v421 - 1, v419));
        if (!v421)
        {
          ((void (*)(std::__shared_weak_count *))v418->__on_zero_shared)(v418);
          std::__shared_weak_count::__release_weak(v418);
        }
        v417 = v1546;
        v422 = v1547;
        if (v1547)
        {
          v423 = (unint64_t *)&v1547->__shared_owners_;
          do
            v424 = __ldxr(v423);
          while (__stxr(v424 + 1, v423));
          do
            v425 = __ldaxr(v423);
          while (__stlxr(v425 - 1, v423));
          if (!v425)
          {
            ((void (*)(std::__shared_weak_count *))v422->__on_zero_shared)(v422);
            std::__shared_weak_count::__release_weak(v422);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v417 + 96))(&v1542, v417, 1);
      else
LABEL_1560:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2179;
      if (!v1550)
        goto LABEL_2179;
      v1074 = v1551;
      if (!v1551)
        goto LABEL_2179;
      v1075 = v1553;
      v1514 = v1554;
      v1076 = v1548;
      if (v1556 && v1548)
      {
        v1077 = v1546;
        v1078 = v1547;
        if (v1547)
        {
          v1079 = (unint64_t *)&v1547->__shared_owners_;
          do
            v1080 = __ldxr(v1079);
          while (__stxr(v1080 + 1, v1079));
          do
            v1081 = __ldaxr(v1079);
          while (__stlxr(v1081 - 1, v1079));
          if (!v1081)
          {
            ((void (*)(std::__shared_weak_count *))v1078->__on_zero_shared)(v1078);
            std::__shared_weak_count::__release_weak(v1078);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1077 + 88))(v1077, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1076 = v1548;
      }
      v1082 = v1074 - 1;
      if (v1074 == 1)
        goto LABEL_1838;
      if ((_DWORD)v416)
      {
        v1083 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v415);
          if (!v1076)
            break;
          v1086 = 0;
          v1087 = v416;
          do
          {
            v1543 = 3;
            v1544 = (uint64_t)v1076 + v1086;
            v1088 = (char *)sub_2101FF5A0(v415);
            ++v415[14];
            sub_2101FF6B8(v1088, (uint64_t)&v1543);
            v1086 += v1075;
            --v1087;
          }
          while (v1087);
LABEL_1576:
          v1084 = v415[6];
          v415[4] = *(_QWORD *)(v1084 - 8);
          v1085 = v415[9];
          v415[14] = *(_QWORD *)(v1085 - 8);
          v415[6] = v1084 - 8;
          v415[9] = v1085 - 8;
          v1076 = (_WORD *)((char *)v1076 + v1514);
          if (++v1083 == v1074 - 1)
            goto LABEL_1838;
        }
        v1089 = 0;
        v1090 = v416;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 3;
          v1544 = v1089;
          v1091 = (char *)sub_2101FF5A0(v415);
          ++v415[14];
          sub_2101FF6B8(v1091, (uint64_t)&v1543);
          v1089 += v1075;
          if (!--v1090)
            goto LABEL_1576;
        }
LABEL_2222:
        abort();
      }
      v1076 = (_WORD *)((char *)v1076 + v1514 + v1514 * (unint64_t)(v1074 - 2));
      do
      {
        sub_2101FF2E8((uint64_t)v415);
        v1258 = v415[6];
        v415[4] = *(_QWORD *)(v1258 - 8);
        v1259 = v415[9];
        v415[14] = *(_QWORD *)(v1259 - 8);
        v415[6] = v1258 - 8;
        v415[9] = v1259 - 8;
        --v1082;
      }
      while (v1082);
LABEL_1838:
      sub_2101FF2E8((uint64_t)v415);
      v1260 = v416;
      if ((_DWORD)v416)
      {
        if (!v1076)
        {
          v1455 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 3;
            v1544 = v1455;
            v1456 = (char *)sub_2101FF5A0(v415);
            ++v415[14];
            sub_2101FF6B8(v1456, (uint64_t)&v1543);
            v1455 += v1075;
            if (!--v1260)
              goto LABEL_2178;
          }
          goto LABEL_2222;
        }
        v1261 = 0;
        do
        {
          v1543 = 3;
          v1544 = (uint64_t)v1076 + v1261;
          v1262 = (char *)sub_2101FF5A0(v415);
          ++v415[14];
          sub_2101FF6B8(v1262, (uint64_t)&v1543);
          v1261 += v1075;
          --v1260;
        }
        while (v1260);
      }
LABEL_2178:
      v1457 = v415[6];
      v415[4] = *(_QWORD *)(v1457 - 8);
      v1458 = v415[9];
      v415[14] = *(_QWORD *)(v1458 - 8);
      v415[6] = v1457 - 8;
      v415[9] = v1458 - 8;
LABEL_2179:
      v1459 = v1542;
      v1542 = 0;
      if (v1459)
        (*(void (**)(uint64_t))(*(_QWORD *)v1459 + 8))(v1459);
      v915 = v1547;
      if (!v1547)
        return;
      v1460 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1460);
      while (__stlxr(v917 - 1, v1460));
      goto LABEL_2184;
    case 22:
      v1545 = &off_24CA12790;
      sub_20FF71E24(&v1546, a3);
      v140 = *a2;
      v141 = v1555;
      v142 = v1546;
      if (!v1546)
        goto LABEL_902;
      v143 = v1547;
      if (v1547)
      {
        v144 = (unint64_t *)&v1547->__shared_owners_;
        do
          v145 = __ldxr(v144);
        while (__stxr(v145 + 1, v144));
        do
          v146 = __ldaxr(v144);
        while (__stlxr(v146 - 1, v144));
        if (!v146)
        {
          ((void (*)(std::__shared_weak_count *))v143->__on_zero_shared)(v143);
          std::__shared_weak_count::__release_weak(v143);
        }
        v142 = v1546;
        v147 = v1547;
        if (v1547)
        {
          v148 = (unint64_t *)&v1547->__shared_owners_;
          do
            v149 = __ldxr(v148);
          while (__stxr(v149 + 1, v148));
          do
            v150 = __ldaxr(v148);
          while (__stlxr(v150 - 1, v148));
          if (!v150)
          {
            ((void (*)(std::__shared_weak_count *))v147->__on_zero_shared)(v147);
            std::__shared_weak_count::__release_weak(v147);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v142 + 96))(&v1542, v142, 1);
      else
LABEL_902:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1960;
      if (!v1550)
        goto LABEL_1960;
      v633 = v1551;
      if (!v1551)
        goto LABEL_1960;
      v634 = v1553;
      v1470 = v1554;
      v635 = v1548;
      if (v1556 && v1548)
      {
        v636 = v1546;
        v637 = v1547;
        if (v1547)
        {
          v638 = (unint64_t *)&v1547->__shared_owners_;
          do
            v639 = __ldxr(v638);
          while (__stxr(v639 + 1, v638));
          do
            v640 = __ldaxr(v638);
          while (__stlxr(v640 - 1, v638));
          if (!v640)
          {
            ((void (*)(std::__shared_weak_count *))v637->__on_zero_shared)(v637);
            std::__shared_weak_count::__release_weak(v637);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v636 + 88))(v636, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v635 = v1548;
      }
      v1535 = v633 - 1;
      if (v633 == 1)
        goto LABEL_1661;
      if ((_DWORD)v141)
      {
        v641 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v140);
          if (!v635)
            break;
          v644 = 0;
          v645 = v141;
          do
          {
            v1543 = 3;
            v1544 = (uint64_t)&v635[v644];
            v646 = (char *)sub_2101FF5A0(v140);
            ++v140[14];
            sub_2101FFF00(v646, (uint64_t)&v1543);
            v644 += v634;
            --v645;
          }
          while (v645);
LABEL_918:
          v642 = v140[6];
          v140[4] = *(_QWORD *)(v642 - 8);
          v643 = v140[9];
          v140[14] = *(_QWORD *)(v643 - 8);
          v140[6] = v642 - 8;
          v140[9] = v643 - 8;
          v635 += v1470;
          if (++v641 == v1535)
            goto LABEL_1661;
        }
        v647 = 0;
        v648 = v141;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 3;
          v1544 = 2 * v647;
          v649 = (char *)sub_2101FF5A0(v140);
          ++v140[14];
          sub_2101FFF00(v649, (uint64_t)&v1543);
          v647 += v634;
          if (!--v648)
            goto LABEL_918;
        }
LABEL_2199:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v140);
        v1145 = v140[6];
        v140[4] = *(_QWORD *)(v1145 - 8);
        v1146 = v140[9];
        v140[14] = *(_QWORD *)(v1146 - 8);
        v140[6] = v1145 - 8;
        v140[9] = v1146 - 8;
        v635 += v1470;
        --v1535;
      }
      while (v1535);
LABEL_1661:
      sub_2101FF2E8((uint64_t)v140);
      v1147 = v141;
      if ((_DWORD)v141)
      {
        if (!v635)
        {
          v1328 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 3;
            v1544 = 2 * v1328;
            v1329 = (char *)sub_2101FF5A0(v140);
            ++v140[14];
            sub_2101FFF00(v1329, (uint64_t)&v1543);
            v1328 += v634;
            if (!--v1147)
              goto LABEL_1959;
          }
          goto LABEL_2199;
        }
        v1148 = 0;
        do
        {
          v1543 = 3;
          v1544 = (uint64_t)&v635[v1148];
          v1149 = (char *)sub_2101FF5A0(v140);
          ++v140[14];
          sub_2101FFF00(v1149, (uint64_t)&v1543);
          v1148 += v634;
          --v1147;
        }
        while (v1147);
      }
LABEL_1959:
      v1330 = v140[6];
      v140[4] = *(_QWORD *)(v1330 - 8);
      v1331 = v140[9];
      v140[14] = *(_QWORD *)(v1331 - 8);
      v140[6] = v1330 - 8;
      v140[9] = v1331 - 8;
LABEL_1960:
      v1332 = v1542;
      v1542 = 0;
      if (v1332)
        (*(void (**)(uint64_t))(*(_QWORD *)v1332 + 8))(v1332);
      v915 = v1547;
      if (!v1547)
        return;
      v1333 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1333);
      while (__stlxr(v917 - 1, v1333));
      goto LABEL_2184;
    case 23:
      v1545 = &off_24CA12888;
      sub_20FF726DC(&v1546, a3);
      v405 = *a2;
      v1532 = v1555;
      v406 = v1546;
      if (!v1546)
        goto LABEL_1535;
      v407 = v1547;
      if (v1547)
      {
        v408 = (unint64_t *)&v1547->__shared_owners_;
        do
          v409 = __ldxr(v408);
        while (__stxr(v409 + 1, v408));
        do
          v410 = __ldaxr(v408);
        while (__stlxr(v410 - 1, v408));
        if (!v410)
        {
          ((void (*)(std::__shared_weak_count *))v407->__on_zero_shared)(v407);
          std::__shared_weak_count::__release_weak(v407);
        }
        v406 = v1546;
        v411 = v1547;
        if (v1547)
        {
          v412 = (unint64_t *)&v1547->__shared_owners_;
          do
            v413 = __ldxr(v412);
          while (__stxr(v413 + 1, v412));
          do
            v414 = __ldaxr(v412);
          while (__stlxr(v414 - 1, v412));
          if (!v414)
          {
            ((void (*)(std::__shared_weak_count *))v411->__on_zero_shared)(v411);
            std::__shared_weak_count::__release_weak(v411);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v406 + 96))(&v1543, v406, 1);
      else
LABEL_1535:
        v1543 = 0;
      if (!v1549)
        goto LABEL_2169;
      if (!v1550)
        goto LABEL_2169;
      v1057 = v1551;
      if (!v1551)
        goto LABEL_2169;
      v1058 = v1553;
      v1487 = v1554;
      v1059 = v1548;
      if (v1556 && v1548)
      {
        v1060 = v1546;
        v1061 = v1547;
        if (v1547)
        {
          v1062 = (unint64_t *)&v1547->__shared_owners_;
          do
            v1063 = __ldxr(v1062);
          while (__stxr(v1063 + 1, v1062));
          do
            v1064 = __ldaxr(v1062);
          while (__stlxr(v1064 - 1, v1062));
          if (!v1064)
          {
            ((void (*)(std::__shared_weak_count *))v1061->__on_zero_shared)(v1061);
            std::__shared_weak_count::__release_weak(v1061);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1060 + 88))(v1060, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1059 = v1548;
      }
      v1513 = v1057 - 1;
      if (v1057 == 1)
        goto LABEL_1831;
      if ((_DWORD)v1532)
      {
        v1065 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v405);
          if (!v1059)
            break;
          v1068 = 0;
          v1069 = v1532;
          do
          {
            v1070 = sub_2101FF5A0(v405);
            ++v405[14];
            sub_210200168(v1070, &v1059[v1068]);
            v1068 += v1058;
            --v1069;
          }
          while (v1069);
LABEL_1551:
          v1066 = v405[6];
          v405[4] = *(_QWORD *)(v1066 - 8);
          v1067 = v405[9];
          v405[14] = *(_QWORD *)(v1067 - 8);
          v405[6] = v1066 - 8;
          v405[9] = v1067 - 8;
          v1059 += v1487;
          if (++v1065 == v1513)
            goto LABEL_1831;
        }
        v1071 = 0;
        v1072 = v1532;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1073 = sub_2101FF5A0(v405);
          ++v405[14];
          sub_210200168(v1073, (_WORD *)(2 * v1071));
          v1071 += v1058;
          if (!--v1072)
            goto LABEL_1551;
        }
LABEL_2221:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v405);
        v1254 = v405[6];
        v405[4] = *(_QWORD *)(v1254 - 8);
        v1255 = v405[9];
        v405[14] = *(_QWORD *)(v1255 - 8);
        v405[6] = v1254 - 8;
        v405[9] = v1255 - 8;
        v1059 += v1487;
        --v1513;
      }
      while (v1513);
LABEL_1831:
      sub_2101FF2E8((uint64_t)v405);
      if ((_DWORD)v1532)
      {
        if (!v1059)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1450 = sub_2101FF5A0(v405);
            ++v405[14];
            sub_210200168(v1450, (_WORD *)(2 * v1059));
            LODWORD(v1059) = (_DWORD)v1059 + v1058;
            if (!--v1532)
              goto LABEL_2168;
          }
          goto LABEL_2221;
        }
        v1256 = 0;
        do
        {
          v1257 = sub_2101FF5A0(v405);
          ++v405[14];
          sub_210200168(v1257, &v1059[v1256]);
          v1256 += v1058;
          --v1532;
        }
        while (v1532);
      }
LABEL_2168:
      v1451 = v405[6];
      v405[4] = *(_QWORD *)(v1451 - 8);
      v1452 = v405[9];
      v405[14] = *(_QWORD *)(v1452 - 8);
      v405[6] = v1451 - 8;
      v405[9] = v1452 - 8;
LABEL_2169:
      v1453 = v1543;
      v1543 = 0;
      if (v1453)
        (*(void (**)(uint64_t))(*(_QWORD *)v1453 + 8))(v1453);
      v915 = v1547;
      if (!v1547)
        return;
      v1454 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1454);
      while (__stlxr(v917 - 1, v1454));
      goto LABEL_2184;
    case 24:
      v1545 = &off_24CA12980;
      sub_20FF72F94(&v1546, a3);
      v67 = *a2;
      v1518 = v1555;
      v68 = v1546;
      if (!v1546)
        goto LABEL_727;
      v69 = v1547;
      if (v1547)
      {
        v70 = (unint64_t *)&v1547->__shared_owners_;
        do
          v71 = __ldxr(v70);
        while (__stxr(v71 + 1, v70));
        do
          v72 = __ldaxr(v70);
        while (__stlxr(v72 - 1, v70));
        if (!v72)
        {
          ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
          std::__shared_weak_count::__release_weak(v69);
        }
        v68 = v1546;
        v73 = v1547;
        if (v1547)
        {
          v74 = (unint64_t *)&v1547->__shared_owners_;
          do
            v75 = __ldxr(v74);
          while (__stxr(v75 + 1, v74));
          do
            v76 = __ldaxr(v74);
          while (__stlxr(v76 - 1, v74));
          if (!v76)
          {
            ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
            std::__shared_weak_count::__release_weak(v73);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v68 + 96))(&v1543, v68, 1);
      else
LABEL_727:
        v1543 = 0;
      if (!v1549)
        goto LABEL_1893;
      if (!v1550)
        goto LABEL_1893;
      v513 = v1551;
      if (!v1551)
        goto LABEL_1893;
      v514 = v1553;
      v1464 = v1554;
      v515 = v1548;
      if (v1556 && v1548)
      {
        v516 = v1546;
        v517 = v1547;
        if (v1547)
        {
          v518 = (unint64_t *)&v1547->__shared_owners_;
          do
            v519 = __ldxr(v518);
          while (__stxr(v519 + 1, v518));
          do
            v520 = __ldaxr(v518);
          while (__stlxr(v520 - 1, v518));
          if (!v520)
          {
            ((void (*)(std::__shared_weak_count *))v517->__on_zero_shared)(v517);
            std::__shared_weak_count::__release_weak(v517);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v516 + 88))(v516, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v515 = v1548;
      }
      v1493 = v513 - 1;
      if (v513 == 1)
        goto LABEL_1618;
      if ((_DWORD)v1518)
      {
        v521 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v67);
          if (!v515)
            break;
          v524 = 0;
          v525 = v1518;
          do
          {
            v526 = sub_2101FF5A0(v67);
            ++v67[14];
            sub_2102004AC(v526, (float *)&v515[2 * v524]);
            v524 += v514;
            --v525;
          }
          while (v525);
LABEL_743:
          v522 = v67[6];
          v67[4] = *(_QWORD *)(v522 - 8);
          v523 = v67[9];
          v67[14] = *(_QWORD *)(v523 - 8);
          v67[6] = v522 - 8;
          v67[9] = v523 - 8;
          v515 += 2 * v1464;
          if (++v521 == v1493)
            goto LABEL_1618;
        }
        v527 = 0;
        v528 = v1518;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v529 = sub_2101FF5A0(v67);
          ++v67[14];
          sub_2102004AC(v529, (float *)(4 * v527));
          v527 += v514;
          if (!--v528)
            goto LABEL_743;
        }
LABEL_2192:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v67);
        v1114 = v67[6];
        v67[4] = *(_QWORD *)(v1114 - 8);
        v1115 = v67[9];
        v67[14] = *(_QWORD *)(v1115 - 8);
        v67[6] = v1114 - 8;
        v67[9] = v1115 - 8;
        v515 += 2 * v1464;
        --v1493;
      }
      while (v1493);
LABEL_1618:
      sub_2101FF2E8((uint64_t)v67);
      if ((_DWORD)v1518)
      {
        if (!v515)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1290 = sub_2101FF5A0(v67);
            ++v67[14];
            sub_2102004AC(v1290, (float *)(4 * v515));
            LODWORD(v515) = (_DWORD)v515 + v514;
            if (!--v1518)
              goto LABEL_1892;
          }
          goto LABEL_2192;
        }
        v1116 = 0;
        do
        {
          v1117 = sub_2101FF5A0(v67);
          ++v67[14];
          sub_2102004AC(v1117, (float *)&v515[2 * v1116]);
          v1116 += v514;
          --v1518;
        }
        while (v1518);
      }
LABEL_1892:
      v1291 = v67[6];
      v67[4] = *(_QWORD *)(v1291 - 8);
      v1292 = v67[9];
      v67[14] = *(_QWORD *)(v1292 - 8);
      v67[6] = v1291 - 8;
      v67[9] = v1292 - 8;
LABEL_1893:
      v1293 = v1543;
      v1543 = 0;
      if (v1293)
        (*(void (**)(uint64_t))(*(_QWORD *)v1293 + 8))(v1293);
      v915 = v1547;
      if (!v1547)
        return;
      v1294 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1294);
      while (__stlxr(v917 - 1, v1294));
      goto LABEL_2184;
    case 25:
      v1545 = &off_24C9C04B8;
      sub_20FF737E4(&v1546, a3);
      v35 = *a2;
      v36 = v1555;
      v37 = v1546;
      if (!v1546)
        goto LABEL_652;
      v38 = v1547;
      if (v1547)
      {
        v39 = (unint64_t *)&v1547->__shared_owners_;
        do
          v40 = __ldxr(v39);
        while (__stxr(v40 + 1, v39));
        do
          v41 = __ldaxr(v39);
        while (__stlxr(v41 - 1, v39));
        if (!v41)
        {
          ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
          std::__shared_weak_count::__release_weak(v38);
        }
        v37 = v1546;
        v42 = v1547;
        if (v1547)
        {
          v43 = (unint64_t *)&v1547->__shared_owners_;
          do
            v44 = __ldxr(v43);
          while (__stxr(v44 + 1, v43));
          do
            v45 = __ldaxr(v43);
          while (__stlxr(v45 - 1, v43));
          if (!v45)
          {
            ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
            std::__shared_weak_count::__release_weak(v42);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v37 + 96))(&v1542, v37, 1);
      else
LABEL_652:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1865;
      if (!v1550)
        goto LABEL_1865;
      v460 = v1551;
      if (!v1551)
        goto LABEL_1865;
      v461 = v1553;
      v1490 = v1554;
      v462 = v1548;
      if (v1556 && v1548)
      {
        v463 = v1546;
        v464 = v1547;
        if (v1547)
        {
          v465 = (unint64_t *)&v1547->__shared_owners_;
          do
            v466 = __ldxr(v465);
          while (__stxr(v466 + 1, v465));
          do
            v467 = __ldaxr(v465);
          while (__stlxr(v467 - 1, v465));
          if (!v467)
          {
            ((void (*)(std::__shared_weak_count *))v464->__on_zero_shared)(v464);
            std::__shared_weak_count::__release_weak(v464);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v463 + 88))(v463, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v462 = v1548;
      }
      v468 = v460 - 1;
      if (v460 == 1)
        goto LABEL_1599;
      if ((_DWORD)v36)
      {
        v469 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v35);
          if (!v462)
            break;
          v472 = 0;
          v473 = v36;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)v462 + v472;
            v474 = (char *)sub_2101FF5A0(v35);
            ++v35[14];
            sub_2101FF6B8(v474, (uint64_t)&v1543);
            v472 += v461;
            --v473;
          }
          while (v473);
LABEL_668:
          v470 = v35[6];
          v35[4] = *(_QWORD *)(v470 - 8);
          v471 = v35[9];
          v35[14] = *(_QWORD *)(v471 - 8);
          v35[6] = v470 - 8;
          v35[9] = v471 - 8;
          v462 = (_WORD *)((char *)v462 + v1490);
          if (++v469 == v460 - 1)
            goto LABEL_1599;
        }
        v475 = 0;
        v476 = v36;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = v475;
          v477 = (char *)sub_2101FF5A0(v35);
          ++v35[14];
          sub_2101FF6B8(v477, (uint64_t)&v1543);
          v475 += v461;
          if (!--v476)
            goto LABEL_668;
        }
LABEL_2189:
        abort();
      }
      v462 = (_WORD *)((char *)v462 + v1490 + v1490 * (unint64_t)(v460 - 2));
      do
      {
        sub_2101FF2E8((uint64_t)v35);
        v1100 = v35[6];
        v35[4] = *(_QWORD *)(v1100 - 8);
        v1101 = v35[9];
        v35[14] = *(_QWORD *)(v1101 - 8);
        v35[6] = v1100 - 8;
        v35[9] = v1101 - 8;
        --v468;
      }
      while (v468);
LABEL_1599:
      sub_2101FF2E8((uint64_t)v35);
      v1102 = v36;
      if ((_DWORD)v36)
      {
        if (!v462)
        {
          v1273 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = v1273;
            v1274 = (char *)sub_2101FF5A0(v35);
            ++v35[14];
            sub_2101FF6B8(v1274, (uint64_t)&v1543);
            v1273 += v461;
            if (!--v1102)
              goto LABEL_1864;
          }
          goto LABEL_2189;
        }
        v1103 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)v462 + v1103;
          v1104 = (char *)sub_2101FF5A0(v35);
          ++v35[14];
          sub_2101FF6B8(v1104, (uint64_t)&v1543);
          v1103 += v461;
          --v1102;
        }
        while (v1102);
      }
LABEL_1864:
      v1275 = v35[6];
      v35[4] = *(_QWORD *)(v1275 - 8);
      v1276 = v35[9];
      v35[14] = *(_QWORD *)(v1276 - 8);
      v35[6] = v1275 - 8;
      v35[9] = v1276 - 8;
LABEL_1865:
      v1277 = v1542;
      v1542 = 0;
      if (v1277)
        (*(void (**)(uint64_t))(*(_QWORD *)v1277 + 8))(v1277);
      v915 = v1547;
      if (!v1547)
        return;
      v1278 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1278);
      while (__stlxr(v917 - 1, v1278));
      goto LABEL_2184;
    case 26:
      v1545 = &off_24CA12A78;
      sub_20FF73E90((std::string::size_type *)&v1546, a3);
      v151 = *a2;
      v152 = v1555;
      v153 = v1546;
      if (!v1546)
        goto LABEL_927;
      v154 = v1547;
      if (v1547)
      {
        v155 = (unint64_t *)&v1547->__shared_owners_;
        do
          v156 = __ldxr(v155);
        while (__stxr(v156 + 1, v155));
        do
          v157 = __ldaxr(v155);
        while (__stlxr(v157 - 1, v155));
        if (!v157)
        {
          ((void (*)(std::__shared_weak_count *))v154->__on_zero_shared)(v154);
          std::__shared_weak_count::__release_weak(v154);
        }
        v153 = v1546;
        v158 = v1547;
        if (v1547)
        {
          v159 = (unint64_t *)&v1547->__shared_owners_;
          do
            v160 = __ldxr(v159);
          while (__stxr(v160 + 1, v159));
          do
            v161 = __ldaxr(v159);
          while (__stlxr(v161 - 1, v159));
          if (!v161)
          {
            ((void (*)(std::__shared_weak_count *))v158->__on_zero_shared)(v158);
            std::__shared_weak_count::__release_weak(v158);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v153 + 96))(&v1542, v153, 1);
      else
LABEL_927:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1970;
      if (!v1550)
        goto LABEL_1970;
      v650 = v1551;
      if (!v1551)
        goto LABEL_1970;
      v651 = v1553;
      v1471 = v1554;
      v652 = v1548;
      if (v1556 && v1548)
      {
        v653 = v1546;
        v654 = v1547;
        if (v1547)
        {
          v655 = (unint64_t *)&v1547->__shared_owners_;
          do
            v656 = __ldxr(v655);
          while (__stxr(v656 + 1, v655));
          do
            v657 = __ldaxr(v655);
          while (__stlxr(v657 - 1, v655));
          if (!v657)
          {
            ((void (*)(std::__shared_weak_count *))v654->__on_zero_shared)(v654);
            std::__shared_weak_count::__release_weak(v654);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v653 + 88))(v653, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v652 = v1548;
      }
      v1536 = v650 - 1;
      if (v650 == 1)
        goto LABEL_1667;
      if ((_DWORD)v152)
      {
        v658 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v151);
          if (!v652)
            break;
          v661 = 0;
          v662 = v152;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)&v652[v661];
            v663 = (char *)sub_2101FF5A0(v151);
            ++v151[14];
            sub_2101FFF00(v663, (uint64_t)&v1543);
            v661 += v651;
            --v662;
          }
          while (v662);
LABEL_943:
          v659 = v151[6];
          v151[4] = *(_QWORD *)(v659 - 8);
          v660 = v151[9];
          v151[14] = *(_QWORD *)(v660 - 8);
          v151[6] = v659 - 8;
          v151[9] = v660 - 8;
          v652 += v1471;
          if (++v658 == v1536)
            goto LABEL_1667;
        }
        v664 = 0;
        v665 = v152;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = 2 * v664;
          v666 = (char *)sub_2101FF5A0(v151);
          ++v151[14];
          sub_2101FFF00(v666, (uint64_t)&v1543);
          v664 += v651;
          if (!--v665)
            goto LABEL_943;
        }
LABEL_2200:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v151);
        v1150 = v151[6];
        v151[4] = *(_QWORD *)(v1150 - 8);
        v1151 = v151[9];
        v151[14] = *(_QWORD *)(v1151 - 8);
        v151[6] = v1150 - 8;
        v151[9] = v1151 - 8;
        v652 += v1471;
        --v1536;
      }
      while (v1536);
LABEL_1667:
      sub_2101FF2E8((uint64_t)v151);
      v1152 = v152;
      if ((_DWORD)v152)
      {
        if (!v652)
        {
          v1334 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = 2 * v1334;
            v1335 = (char *)sub_2101FF5A0(v151);
            ++v151[14];
            sub_2101FFF00(v1335, (uint64_t)&v1543);
            v1334 += v651;
            if (!--v1152)
              goto LABEL_1969;
          }
          goto LABEL_2200;
        }
        v1153 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)&v652[v1153];
          v1154 = (char *)sub_2101FF5A0(v151);
          ++v151[14];
          sub_2101FFF00(v1154, (uint64_t)&v1543);
          v1153 += v651;
          --v1152;
        }
        while (v1152);
      }
LABEL_1969:
      v1336 = v151[6];
      v151[4] = *(_QWORD *)(v1336 - 8);
      v1337 = v151[9];
      v151[14] = *(_QWORD *)(v1337 - 8);
      v151[6] = v1336 - 8;
      v151[9] = v1337 - 8;
LABEL_1970:
      v1338 = v1542;
      v1542 = 0;
      if (v1338)
        (*(void (**)(uint64_t))(*(_QWORD *)v1338 + 8))(v1338);
      v915 = v1547;
      if (!v1547)
        return;
      v1339 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1339);
      while (__stlxr(v917 - 1, v1339));
      goto LABEL_2184;
    case 27:
      v1545 = &off_24CA12B70;
      sub_20FF746F8((std::string::size_type *)&v1546, a3);
      v15 = *a2;
      v1515 = v1555;
      v16 = v1546;
      if (!v1546)
        goto LABEL_602;
      v17 = v1547;
      if (v1547)
      {
        v18 = (unint64_t *)&v1547->__shared_owners_;
        do
          v19 = __ldxr(v18);
        while (__stxr(v19 + 1, v18));
        do
          v20 = __ldaxr(v18);
        while (__stlxr(v20 - 1, v18));
        if (!v20)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
        v16 = v1546;
        v21 = v1547;
        if (v1547)
        {
          v22 = (unint64_t *)&v1547->__shared_owners_;
          do
            v23 = __ldxr(v22);
          while (__stxr(v23 + 1, v22));
          do
            v24 = __ldaxr(v22);
          while (__stlxr(v24 - 1, v22));
          if (!v24)
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v16 + 96))(&v1543, v16, 1);
      else
LABEL_602:
        v1543 = 0;
      if (!v1549)
        goto LABEL_1846;
      if (!v1550)
        goto LABEL_1846;
      v426 = v1551;
      if (!v1551)
        goto LABEL_1846;
      v427 = v1553;
      v1461 = v1554;
      v428 = v1548;
      if (v1556 && v1548)
      {
        v429 = v1546;
        v430 = v1547;
        if (v1547)
        {
          v431 = (unint64_t *)&v1547->__shared_owners_;
          do
            v432 = __ldxr(v431);
          while (__stxr(v432 + 1, v431));
          do
            v433 = __ldaxr(v431);
          while (__stlxr(v433 - 1, v431));
          if (!v433)
          {
            ((void (*)(std::__shared_weak_count *))v430->__on_zero_shared)(v430);
            std::__shared_weak_count::__release_weak(v430);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v429 + 88))(v429, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v428 = v1548;
      }
      v1488 = v426 - 1;
      if (v426 == 1)
        goto LABEL_1586;
      if ((_DWORD)v1515)
      {
        v434 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v15);
          if (!v428)
            break;
          v437 = 0;
          v438 = v1515;
          do
          {
            v439 = sub_2101FF5A0(v15);
            ++v15[14];
            sub_210200168(v439, &v428[v437]);
            v437 += v427;
            --v438;
          }
          while (v438);
LABEL_618:
          v435 = v15[6];
          v15[4] = *(_QWORD *)(v435 - 8);
          v436 = v15[9];
          v15[14] = *(_QWORD *)(v436 - 8);
          v15[6] = v435 - 8;
          v15[9] = v436 - 8;
          v428 += v1461;
          if (++v434 == v1488)
            goto LABEL_1586;
        }
        v440 = 0;
        v441 = v1515;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v442 = sub_2101FF5A0(v15);
          ++v15[14];
          sub_210200168(v442, (_WORD *)(2 * v440));
          v440 += v427;
          if (!--v441)
            goto LABEL_618;
        }
LABEL_2187:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v15);
        v1092 = v15[6];
        v15[4] = *(_QWORD *)(v1092 - 8);
        v1093 = v15[9];
        v15[14] = *(_QWORD *)(v1093 - 8);
        v15[6] = v1092 - 8;
        v15[9] = v1093 - 8;
        v428 += v1461;
        --v1488;
      }
      while (v1488);
LABEL_1586:
      sub_2101FF2E8((uint64_t)v15);
      if ((_DWORD)v1515)
      {
        if (!v428)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1263 = sub_2101FF5A0(v15);
            ++v15[14];
            sub_210200168(v1263, (_WORD *)(2 * v428));
            LODWORD(v428) = (_DWORD)v428 + v427;
            if (!--v1515)
              goto LABEL_1845;
          }
          goto LABEL_2187;
        }
        v1094 = 0;
        do
        {
          v1095 = sub_2101FF5A0(v15);
          ++v15[14];
          sub_210200168(v1095, &v428[v1094]);
          v1094 += v427;
          --v1515;
        }
        while (v1515);
      }
LABEL_1845:
      v1264 = v15[6];
      v15[4] = *(_QWORD *)(v1264 - 8);
      v1265 = v15[9];
      v15[14] = *(_QWORD *)(v1265 - 8);
      v15[6] = v1264 - 8;
      v15[9] = v1265 - 8;
LABEL_1846:
      v1266 = v1543;
      v1543 = 0;
      if (v1266)
        (*(void (**)(uint64_t))(*(_QWORD *)v1266 + 8))(v1266);
      v915 = v1547;
      if (!v1547)
        return;
      v1267 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1267);
      while (__stlxr(v917 - 1, v1267));
      goto LABEL_2184;
    case 28:
      v1545 = &off_24C9C0E68;
      sub_20FF74EF8((std::string::size_type *)&v1546, a3);
      v194 = *a2;
      v1523 = v1555;
      v195 = v1546;
      if (!v1546)
        goto LABEL_1020;
      v196 = v1547;
      if (v1547)
      {
        v197 = (unint64_t *)&v1547->__shared_owners_;
        do
          v198 = __ldxr(v197);
        while (__stxr(v198 + 1, v197));
        do
          v199 = __ldaxr(v197);
        while (__stlxr(v199 - 1, v197));
        if (!v199)
        {
          ((void (*)(std::__shared_weak_count *))v196->__on_zero_shared)(v196);
          std::__shared_weak_count::__release_weak(v196);
        }
        v195 = v1546;
        v200 = v1547;
        if (v1547)
        {
          v201 = (unint64_t *)&v1547->__shared_owners_;
          do
            v202 = __ldxr(v201);
          while (__stxr(v202 + 1, v201));
          do
            v203 = __ldaxr(v201);
          while (__stlxr(v203 - 1, v201));
          if (!v203)
          {
            ((void (*)(std::__shared_weak_count *))v200->__on_zero_shared)(v200);
            std::__shared_weak_count::__release_weak(v200);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v195 + 96))(&v1543, v195, 1);
      else
LABEL_1020:
        v1543 = 0;
      if (!v1549)
        goto LABEL_1998;
      if (!v1550)
        goto LABEL_1998;
      v711 = v1551;
      if (!v1551)
        goto LABEL_1998;
      v712 = v1553;
      v1474 = v1554;
      v713 = v1548;
      if (v1556 && v1548)
      {
        v714 = v1546;
        v715 = v1547;
        if (v1547)
        {
          v716 = (unint64_t *)&v1547->__shared_owners_;
          do
            v717 = __ldxr(v716);
          while (__stxr(v717 + 1, v716));
          do
            v718 = __ldaxr(v716);
          while (__stlxr(v718 - 1, v716));
          if (!v718)
          {
            ((void (*)(std::__shared_weak_count *))v715->__on_zero_shared)(v715);
            std::__shared_weak_count::__release_weak(v715);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v714 + 88))(v714, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v713 = v1548;
      }
      v1499 = v711 - 1;
      if (v711 == 1)
        goto LABEL_1696;
      if ((_DWORD)v1523)
      {
        v719 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v194);
          if (!v713)
            break;
          v722 = 0;
          v723 = v1523;
          do
          {
            v724 = sub_2101FF5A0(v194);
            ++v194[14];
            sub_2102004AC(v724, (float *)&v713[2 * v722]);
            v722 += v712;
            --v723;
          }
          while (v723);
LABEL_1036:
          v720 = v194[6];
          v194[4] = *(_QWORD *)(v720 - 8);
          v721 = v194[9];
          v194[14] = *(_QWORD *)(v721 - 8);
          v194[6] = v720 - 8;
          v194[9] = v721 - 8;
          v713 += 2 * v1474;
          if (++v719 == v1499)
            goto LABEL_1696;
        }
        v725 = 0;
        v726 = v1523;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v727 = sub_2101FF5A0(v194);
          ++v194[14];
          sub_2102004AC(v727, (float *)(4 * v725));
          v725 += v712;
          if (!--v726)
            goto LABEL_1036;
        }
LABEL_2203:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v194);
        v1167 = v194[6];
        v194[4] = *(_QWORD *)(v1167 - 8);
        v1168 = v194[9];
        v194[14] = *(_QWORD *)(v1168 - 8);
        v194[6] = v1167 - 8;
        v194[9] = v1168 - 8;
        v713 += 2 * v1474;
        --v1499;
      }
      while (v1499);
LABEL_1696:
      sub_2101FF2E8((uint64_t)v194);
      if ((_DWORD)v1523)
      {
        if (!v713)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1351 = sub_2101FF5A0(v194);
            ++v194[14];
            sub_2102004AC(v1351, (float *)(4 * v713));
            LODWORD(v713) = (_DWORD)v713 + v712;
            if (!--v1523)
              goto LABEL_1997;
          }
          goto LABEL_2203;
        }
        v1169 = 0;
        do
        {
          v1170 = sub_2101FF5A0(v194);
          ++v194[14];
          sub_2102004AC(v1170, (float *)&v713[2 * v1169]);
          v1169 += v712;
          --v1523;
        }
        while (v1523);
      }
LABEL_1997:
      v1352 = v194[6];
      v194[4] = *(_QWORD *)(v1352 - 8);
      v1353 = v194[9];
      v194[14] = *(_QWORD *)(v1353 - 8);
      v194[6] = v1352 - 8;
      v194[9] = v1353 - 8;
LABEL_1998:
      v1354 = v1543;
      v1543 = 0;
      if (v1354)
        (*(void (**)(uint64_t))(*(_QWORD *)v1354 + 8))(v1354);
      v915 = v1547;
      if (!v1547)
        return;
      v1355 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1355);
      while (__stlxr(v917 - 1, v1355));
      goto LABEL_2184;
    case 29:
      v1545 = &off_24C9C03C0;
      sub_20FF754EC(&v1546, a3);
      v56 = *a2;
      v57 = v1555;
      v58 = v1546;
      if (!v1546)
        goto LABEL_702;
      v59 = v1547;
      if (v1547)
      {
        v60 = (unint64_t *)&v1547->__shared_owners_;
        do
          v61 = __ldxr(v60);
        while (__stxr(v61 + 1, v60));
        do
          v62 = __ldaxr(v60);
        while (__stlxr(v62 - 1, v60));
        if (!v62)
        {
          ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
          std::__shared_weak_count::__release_weak(v59);
        }
        v58 = v1546;
        v63 = v1547;
        if (v1547)
        {
          v64 = (unint64_t *)&v1547->__shared_owners_;
          do
            v65 = __ldxr(v64);
          while (__stxr(v65 + 1, v64));
          do
            v66 = __ldaxr(v64);
          while (__stlxr(v66 - 1, v64));
          if (!v66)
          {
            ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
            std::__shared_weak_count::__release_weak(v63);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v58 + 96))(&v1542, v58, 1);
      else
LABEL_702:
        v1542 = 0;
      if (!v1549)
        goto LABEL_1884;
      if (!v1550)
        goto LABEL_1884;
      v495 = v1551;
      if (!v1551)
        goto LABEL_1884;
      v496 = v1553;
      v1492 = v1554;
      v497 = v1548;
      if (v1556 && v1548)
      {
        v498 = v1546;
        v499 = v1547;
        if (v1547)
        {
          v500 = (unint64_t *)&v1547->__shared_owners_;
          do
            v501 = __ldxr(v500);
          while (__stxr(v501 + 1, v500));
          do
            v502 = __ldaxr(v500);
          while (__stlxr(v502 - 1, v500));
          if (!v502)
          {
            ((void (*)(std::__shared_weak_count *))v499->__on_zero_shared)(v499);
            std::__shared_weak_count::__release_weak(v499);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v498 + 88))(v498, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v497 = v1548;
      }
      v503 = v495 - 1;
      if (v495 == 1)
        goto LABEL_1612;
      if ((_DWORD)v57)
      {
        v504 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v56);
          if (!v497)
            break;
          v507 = 0;
          v508 = v57;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)v497 + v507;
            v509 = (char *)sub_2101FF5A0(v56);
            ++v56[14];
            sub_2101FF6B8(v509, (uint64_t)&v1543);
            v507 += v496;
            --v508;
          }
          while (v508);
LABEL_718:
          v505 = v56[6];
          v56[4] = *(_QWORD *)(v505 - 8);
          v506 = v56[9];
          v56[14] = *(_QWORD *)(v506 - 8);
          v56[6] = v505 - 8;
          v56[9] = v506 - 8;
          v497 = (_WORD *)((char *)v497 + v1492);
          if (++v504 == v495 - 1)
            goto LABEL_1612;
        }
        v510 = 0;
        v511 = v57;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = v510;
          v512 = (char *)sub_2101FF5A0(v56);
          ++v56[14];
          sub_2101FF6B8(v512, (uint64_t)&v1543);
          v510 += v496;
          if (!--v511)
            goto LABEL_718;
        }
LABEL_2191:
        abort();
      }
      v497 = (_WORD *)((char *)v497 + v1492 + v1492 * (unint64_t)(v495 - 2));
      do
      {
        sub_2101FF2E8((uint64_t)v56);
        v1109 = v56[6];
        v56[4] = *(_QWORD *)(v1109 - 8);
        v1110 = v56[9];
        v56[14] = *(_QWORD *)(v1110 - 8);
        v56[6] = v1109 - 8;
        v56[9] = v1110 - 8;
        --v503;
      }
      while (v503);
LABEL_1612:
      sub_2101FF2E8((uint64_t)v56);
      v1111 = v57;
      if ((_DWORD)v57)
      {
        if (!v497)
        {
          v1284 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = v1284;
            v1285 = (char *)sub_2101FF5A0(v56);
            ++v56[14];
            sub_2101FF6B8(v1285, (uint64_t)&v1543);
            v1284 += v496;
            if (!--v1111)
              goto LABEL_1883;
          }
          goto LABEL_2191;
        }
        v1112 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)v497 + v1112;
          v1113 = (char *)sub_2101FF5A0(v56);
          ++v56[14];
          sub_2101FF6B8(v1113, (uint64_t)&v1543);
          v1112 += v496;
          --v1111;
        }
        while (v1111);
      }
LABEL_1883:
      v1286 = v56[6];
      v56[4] = *(_QWORD *)(v1286 - 8);
      v1287 = v56[9];
      v56[14] = *(_QWORD *)(v1287 - 8);
      v56[6] = v1286 - 8;
      v56[9] = v1287 - 8;
LABEL_1884:
      v1288 = v1542;
      v1542 = 0;
      if (v1288)
        (*(void (**)(uint64_t))(*(_QWORD *)v1288 + 8))(v1288);
      v915 = v1547;
      if (!v1547)
        return;
      v1289 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1289);
      while (__stlxr(v917 - 1, v1289));
      goto LABEL_2184;
    case 30:
      v1545 = &off_24CA12C68;
      sub_20FF75B98(&v1546, a3);
      v224 = *a2;
      v225 = v1555;
      v226 = v1546;
      if (!v1546)
        goto LABEL_1095;
      v227 = v1547;
      if (v1547)
      {
        v228 = (unint64_t *)&v1547->__shared_owners_;
        do
          v229 = __ldxr(v228);
        while (__stxr(v229 + 1, v228));
        do
          v230 = __ldaxr(v228);
        while (__stlxr(v230 - 1, v228));
        if (!v230)
        {
          ((void (*)(std::__shared_weak_count *))v227->__on_zero_shared)(v227);
          std::__shared_weak_count::__release_weak(v227);
        }
        v226 = v1546;
        v231 = v1547;
        if (v1547)
        {
          v232 = (unint64_t *)&v1547->__shared_owners_;
          do
            v233 = __ldxr(v232);
          while (__stxr(v233 + 1, v232));
          do
            v234 = __ldaxr(v232);
          while (__stlxr(v234 - 1, v232));
          if (!v234)
          {
            ((void (*)(std::__shared_weak_count *))v231->__on_zero_shared)(v231);
            std::__shared_weak_count::__release_weak(v231);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v226 + 96))(&v1542, v226, 1);
      else
LABEL_1095:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2026;
      if (!v1550)
        goto LABEL_2026;
      v762 = v1551;
      if (!v1551)
        goto LABEL_2026;
      v763 = v1553;
      v1477 = v1554;
      v764 = v1548;
      if (v1556 && v1548)
      {
        v765 = v1546;
        v766 = v1547;
        if (v1547)
        {
          v767 = (unint64_t *)&v1547->__shared_owners_;
          do
            v768 = __ldxr(v767);
          while (__stxr(v768 + 1, v767));
          do
            v769 = __ldaxr(v767);
          while (__stlxr(v769 - 1, v767));
          if (!v769)
          {
            ((void (*)(std::__shared_weak_count *))v766->__on_zero_shared)(v766);
            std::__shared_weak_count::__release_weak(v766);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v765 + 88))(v765, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v764 = v1548;
      }
      v1538 = v762 - 1;
      if (v762 == 1)
        goto LABEL_1714;
      if ((_DWORD)v225)
      {
        v770 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v224);
          if (!v764)
            break;
          v773 = 0;
          v774 = v225;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)&v764[v773];
            v775 = (char *)sub_2101FF5A0(v224);
            ++v224[14];
            sub_2101FFF00(v775, (uint64_t)&v1543);
            v773 += v763;
            --v774;
          }
          while (v774);
LABEL_1111:
          v771 = v224[6];
          v224[4] = *(_QWORD *)(v771 - 8);
          v772 = v224[9];
          v224[14] = *(_QWORD *)(v772 - 8);
          v224[6] = v771 - 8;
          v224[9] = v772 - 8;
          v764 += v1477;
          if (++v770 == v1538)
            goto LABEL_1714;
        }
        v776 = 0;
        v777 = v225;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = 2 * v776;
          v778 = (char *)sub_2101FF5A0(v224);
          ++v224[14];
          sub_2101FFF00(v778, (uint64_t)&v1543);
          v776 += v763;
          if (!--v777)
            goto LABEL_1111;
        }
LABEL_2206:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v224);
        v1179 = v224[6];
        v224[4] = *(_QWORD *)(v1179 - 8);
        v1180 = v224[9];
        v224[14] = *(_QWORD *)(v1180 - 8);
        v224[6] = v1179 - 8;
        v224[9] = v1180 - 8;
        v764 += v1477;
        --v1538;
      }
      while (v1538);
LABEL_1714:
      sub_2101FF2E8((uint64_t)v224);
      v1181 = v225;
      if ((_DWORD)v225)
      {
        if (!v764)
        {
          v1366 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = 2 * v1366;
            v1367 = (char *)sub_2101FF5A0(v224);
            ++v224[14];
            sub_2101FFF00(v1367, (uint64_t)&v1543);
            v1366 += v763;
            if (!--v1181)
              goto LABEL_2025;
          }
          goto LABEL_2206;
        }
        v1182 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)&v764[v1182];
          v1183 = (char *)sub_2101FF5A0(v224);
          ++v224[14];
          sub_2101FFF00(v1183, (uint64_t)&v1543);
          v1182 += v763;
          --v1181;
        }
        while (v1181);
      }
LABEL_2025:
      v1368 = v224[6];
      v224[4] = *(_QWORD *)(v1368 - 8);
      v1369 = v224[9];
      v224[14] = *(_QWORD *)(v1369 - 8);
      v224[6] = v1368 - 8;
      v224[9] = v1369 - 8;
LABEL_2026:
      v1370 = v1542;
      v1542 = 0;
      if (v1370)
        (*(void (**)(uint64_t))(*(_QWORD *)v1370 + 8))(v1370);
      v915 = v1547;
      if (!v1547)
        return;
      v1371 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1371);
      while (__stlxr(v917 - 1, v1371));
      goto LABEL_2184;
    case 31:
      v1545 = &off_24CA12D60;
      sub_20FF76450(&v1546, a3);
      v162 = *a2;
      v1522 = v1555;
      v163 = v1546;
      if (!v1546)
        goto LABEL_952;
      v164 = v1547;
      if (v1547)
      {
        v165 = (unint64_t *)&v1547->__shared_owners_;
        do
          v166 = __ldxr(v165);
        while (__stxr(v166 + 1, v165));
        do
          v167 = __ldaxr(v165);
        while (__stlxr(v167 - 1, v165));
        if (!v167)
        {
          ((void (*)(std::__shared_weak_count *))v164->__on_zero_shared)(v164);
          std::__shared_weak_count::__release_weak(v164);
        }
        v163 = v1546;
        v168 = v1547;
        if (v1547)
        {
          v169 = (unint64_t *)&v1547->__shared_owners_;
          do
            v170 = __ldxr(v169);
          while (__stxr(v170 + 1, v169));
          do
            v171 = __ldaxr(v169);
          while (__stlxr(v171 - 1, v169));
          if (!v171)
          {
            ((void (*)(std::__shared_weak_count *))v168->__on_zero_shared)(v168);
            std::__shared_weak_count::__release_weak(v168);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v163 + 96))(&v1543, v163, 1);
      else
LABEL_952:
        v1543 = 0;
      if (!v1549)
        goto LABEL_1979;
      if (!v1550)
        goto LABEL_1979;
      v667 = v1551;
      if (!v1551)
        goto LABEL_1979;
      v668 = v1553;
      v1472 = v1554;
      v669 = v1548;
      if (v1556 && v1548)
      {
        v670 = v1546;
        v671 = v1547;
        if (v1547)
        {
          v672 = (unint64_t *)&v1547->__shared_owners_;
          do
            v673 = __ldxr(v672);
          while (__stxr(v673 + 1, v672));
          do
            v674 = __ldaxr(v672);
          while (__stlxr(v674 - 1, v672));
          if (!v674)
          {
            ((void (*)(std::__shared_weak_count *))v671->__on_zero_shared)(v671);
            std::__shared_weak_count::__release_weak(v671);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v670 + 88))(v670, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v669 = v1548;
      }
      v1498 = v667 - 1;
      if (v667 == 1)
        goto LABEL_1673;
      if ((_DWORD)v1522)
      {
        v675 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v162);
          if (!v669)
            break;
          v678 = 0;
          v679 = v1522;
          do
          {
            v680 = sub_2101FF5A0(v162);
            ++v162[14];
            sub_210200168(v680, &v669[v678]);
            v678 += v668;
            --v679;
          }
          while (v679);
LABEL_968:
          v676 = v162[6];
          v162[4] = *(_QWORD *)(v676 - 8);
          v677 = v162[9];
          v162[14] = *(_QWORD *)(v677 - 8);
          v162[6] = v676 - 8;
          v162[9] = v677 - 8;
          v669 += v1472;
          if (++v675 == v1498)
            goto LABEL_1673;
        }
        v681 = 0;
        v682 = v1522;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v683 = sub_2101FF5A0(v162);
          ++v162[14];
          sub_210200168(v683, (_WORD *)(2 * v681));
          v681 += v668;
          if (!--v682)
            goto LABEL_968;
        }
LABEL_2201:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v162);
        v1155 = v162[6];
        v162[4] = *(_QWORD *)(v1155 - 8);
        v1156 = v162[9];
        v162[14] = *(_QWORD *)(v1156 - 8);
        v162[6] = v1155 - 8;
        v162[9] = v1156 - 8;
        v669 += v1472;
        --v1498;
      }
      while (v1498);
LABEL_1673:
      sub_2101FF2E8((uint64_t)v162);
      if ((_DWORD)v1522)
      {
        if (!v669)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1340 = sub_2101FF5A0(v162);
            ++v162[14];
            sub_210200168(v1340, (_WORD *)(2 * v669));
            LODWORD(v669) = (_DWORD)v669 + v668;
            if (!--v1522)
              goto LABEL_1978;
          }
          goto LABEL_2201;
        }
        v1157 = 0;
        do
        {
          v1158 = sub_2101FF5A0(v162);
          ++v162[14];
          sub_210200168(v1158, &v669[v1157]);
          v1157 += v668;
          --v1522;
        }
        while (v1522);
      }
LABEL_1978:
      v1341 = v162[6];
      v162[4] = *(_QWORD *)(v1341 - 8);
      v1342 = v162[9];
      v162[14] = *(_QWORD *)(v1342 - 8);
      v162[6] = v1341 - 8;
      v162[9] = v1342 - 8;
LABEL_1979:
      v1343 = v1543;
      v1543 = 0;
      if (v1343)
        (*(void (**)(uint64_t))(*(_QWORD *)v1343 + 8))(v1343);
      v915 = v1547;
      if (!v1547)
        return;
      v1344 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1344);
      while (__stlxr(v917 - 1, v1344));
      goto LABEL_2184;
    case 32:
      v1545 = &off_24C9C0D70;
      sub_20FF76CA0(&v1546, a3);
      v246 = *a2;
      v1526 = v1555;
      v247 = v1546;
      if (!v1546)
        goto LABEL_1145;
      v248 = v1547;
      if (v1547)
      {
        v249 = (unint64_t *)&v1547->__shared_owners_;
        do
          v250 = __ldxr(v249);
        while (__stxr(v250 + 1, v249));
        do
          v251 = __ldaxr(v249);
        while (__stlxr(v251 - 1, v249));
        if (!v251)
        {
          ((void (*)(std::__shared_weak_count *))v248->__on_zero_shared)(v248);
          std::__shared_weak_count::__release_weak(v248);
        }
        v247 = v1546;
        v252 = v1547;
        if (v1547)
        {
          v253 = (unint64_t *)&v1547->__shared_owners_;
          do
            v254 = __ldxr(v253);
          while (__stxr(v254 + 1, v253));
          do
            v255 = __ldaxr(v253);
          while (__stlxr(v255 - 1, v253));
          if (!v255)
          {
            ((void (*)(std::__shared_weak_count *))v252->__on_zero_shared)(v252);
            std::__shared_weak_count::__release_weak(v252);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v247 + 96))(&v1543, v247, 1);
      else
LABEL_1145:
        v1543 = 0;
      if (!v1549)
        goto LABEL_2045;
      if (!v1550)
        goto LABEL_2045;
      v796 = v1551;
      if (!v1551)
        goto LABEL_2045;
      v797 = v1553;
      v1479 = v1554;
      v798 = v1548;
      if (v1556 && v1548)
      {
        v799 = v1546;
        v800 = v1547;
        if (v1547)
        {
          v801 = (unint64_t *)&v1547->__shared_owners_;
          do
            v802 = __ldxr(v801);
          while (__stxr(v802 + 1, v801));
          do
            v803 = __ldaxr(v801);
          while (__stlxr(v803 - 1, v801));
          if (!v803)
          {
            ((void (*)(std::__shared_weak_count *))v800->__on_zero_shared)(v800);
            std::__shared_weak_count::__release_weak(v800);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v799 + 88))(v799, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v798 = v1548;
      }
      v1502 = v796 - 1;
      if (v796 == 1)
        goto LABEL_1726;
      if ((_DWORD)v1526)
      {
        v804 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v246);
          if (!v798)
            break;
          v807 = 0;
          v808 = v1526;
          do
          {
            v809 = sub_2101FF5A0(v246);
            ++v246[14];
            sub_2102004AC(v809, (float *)&v798[2 * v807]);
            v807 += v797;
            --v808;
          }
          while (v808);
LABEL_1161:
          v805 = v246[6];
          v246[4] = *(_QWORD *)(v805 - 8);
          v806 = v246[9];
          v246[14] = *(_QWORD *)(v806 - 8);
          v246[6] = v805 - 8;
          v246[9] = v806 - 8;
          v798 += 2 * v1479;
          if (++v804 == v1502)
            goto LABEL_1726;
        }
        v810 = 0;
        v811 = v1526;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v812 = sub_2101FF5A0(v246);
          ++v246[14];
          sub_2102004AC(v812, (float *)(4 * v810));
          v810 += v797;
          if (!--v811)
            goto LABEL_1161;
        }
LABEL_2208:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v246);
        v1189 = v246[6];
        v246[4] = *(_QWORD *)(v1189 - 8);
        v1190 = v246[9];
        v246[14] = *(_QWORD *)(v1190 - 8);
        v246[6] = v1189 - 8;
        v246[9] = v1190 - 8;
        v798 += 2 * v1479;
        --v1502;
      }
      while (v1502);
LABEL_1726:
      sub_2101FF2E8((uint64_t)v246);
      if ((_DWORD)v1526)
      {
        if (!v798)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1378 = sub_2101FF5A0(v246);
            ++v246[14];
            sub_2102004AC(v1378, (float *)(4 * v798));
            LODWORD(v798) = (_DWORD)v798 + v797;
            if (!--v1526)
              goto LABEL_2044;
          }
          goto LABEL_2208;
        }
        v1191 = 0;
        do
        {
          v1192 = sub_2101FF5A0(v246);
          ++v246[14];
          sub_2102004AC(v1192, (float *)&v798[2 * v1191]);
          v1191 += v797;
          --v1526;
        }
        while (v1526);
      }
LABEL_2044:
      v1379 = v246[6];
      v246[4] = *(_QWORD *)(v1379 - 8);
      v1380 = v246[9];
      v246[14] = *(_QWORD *)(v1380 - 8);
      v246[6] = v1379 - 8;
      v246[9] = v1380 - 8;
LABEL_2045:
      v1381 = v1543;
      v1543 = 0;
      if (v1381)
        (*(void (**)(uint64_t))(*(_QWORD *)v1381 + 8))(v1381);
      v915 = v1547;
      if (!v1547)
        return;
      v1382 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1382);
      while (__stlxr(v917 - 1, v1382));
      goto LABEL_2184;
    case 33:
      v1545 = &off_24CA12E58;
      sub_20FF7734C(&v1546, a3);
      v352 = *a2;
      v353 = v1555;
      v354 = v1546;
      if (!v1546)
        goto LABEL_1410;
      v355 = v1547;
      if (v1547)
      {
        v356 = (unint64_t *)&v1547->__shared_owners_;
        do
          v357 = __ldxr(v356);
        while (__stxr(v357 + 1, v356));
        do
          v358 = __ldaxr(v356);
        while (__stlxr(v358 - 1, v356));
        if (!v358)
        {
          ((void (*)(std::__shared_weak_count *))v355->__on_zero_shared)(v355);
          std::__shared_weak_count::__release_weak(v355);
        }
        v354 = v1546;
        v359 = v1547;
        if (v1547)
        {
          v360 = (unint64_t *)&v1547->__shared_owners_;
          do
            v361 = __ldxr(v360);
          while (__stxr(v361 + 1, v360));
          do
            v362 = __ldaxr(v360);
          while (__stlxr(v362 - 1, v360));
          if (!v362)
          {
            ((void (*)(std::__shared_weak_count *))v359->__on_zero_shared)(v359);
            std::__shared_weak_count::__release_weak(v359);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v354 + 96))(&v1542, v354, 1);
      else
LABEL_1410:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2122;
      if (!v1550)
        goto LABEL_2122;
      v970 = v1551;
      if (!v1551)
        goto LABEL_2122;
      v971 = v1553;
      v1509 = v1554;
      v972 = v1548;
      if (v1556 && v1548)
      {
        v973 = v1546;
        v974 = v1547;
        if (v1547)
        {
          v975 = (unint64_t *)&v1547->__shared_owners_;
          do
            v976 = __ldxr(v975);
          while (__stxr(v976 + 1, v975));
          do
            v977 = __ldaxr(v975);
          while (__stlxr(v977 - 1, v975));
          if (!v977)
          {
            ((void (*)(std::__shared_weak_count *))v974->__on_zero_shared)(v974);
            std::__shared_weak_count::__release_weak(v974);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v973 + 88))(v973, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v972 = v1548;
      }
      v978 = v970 - 1;
      if (v970 == 1)
        goto LABEL_1800;
      if ((_DWORD)v353)
      {
        v979 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v352);
          if (!v972)
            break;
          v982 = 0;
          v983 = v353;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)v972 + v982;
            v984 = (char *)sub_2101FF5A0(v352);
            ++v352[14];
            sub_2101FF6B8(v984, (uint64_t)&v1543);
            v982 += v971;
            --v983;
          }
          while (v983);
LABEL_1426:
          v980 = v352[6];
          v352[4] = *(_QWORD *)(v980 - 8);
          v981 = v352[9];
          v352[14] = *(_QWORD *)(v981 - 8);
          v352[6] = v980 - 8;
          v352[9] = v981 - 8;
          v972 = (_WORD *)((char *)v972 + v1509);
          if (++v979 == v970 - 1)
            goto LABEL_1800;
        }
        v985 = 0;
        v986 = v353;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = v985;
          v987 = (char *)sub_2101FF5A0(v352);
          ++v352[14];
          sub_2101FF6B8(v987, (uint64_t)&v1543);
          v985 += v971;
          if (!--v986)
            goto LABEL_1426;
        }
LABEL_2216:
        abort();
      }
      v972 = (_WORD *)((char *)v972 + v1509 + v1509 * (unint64_t)(v970 - 2));
      do
      {
        sub_2101FF2E8((uint64_t)v352);
        v1231 = v352[6];
        v352[4] = *(_QWORD *)(v1231 - 8);
        v1232 = v352[9];
        v352[14] = *(_QWORD *)(v1232 - 8);
        v352[6] = v1231 - 8;
        v352[9] = v1232 - 8;
        --v978;
      }
      while (v978);
LABEL_1800:
      sub_2101FF2E8((uint64_t)v352);
      v1233 = v353;
      if ((_DWORD)v353)
      {
        if (!v972)
        {
          v1422 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = v1422;
            v1423 = (char *)sub_2101FF5A0(v352);
            ++v352[14];
            sub_2101FF6B8(v1423, (uint64_t)&v1543);
            v1422 += v971;
            if (!--v1233)
              goto LABEL_2121;
          }
          goto LABEL_2216;
        }
        v1234 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)v972 + v1234;
          v1235 = (char *)sub_2101FF5A0(v352);
          ++v352[14];
          sub_2101FF6B8(v1235, (uint64_t)&v1543);
          v1234 += v971;
          --v1233;
        }
        while (v1233);
      }
LABEL_2121:
      v1424 = v352[6];
      v352[4] = *(_QWORD *)(v1424 - 8);
      v1425 = v352[9];
      v352[14] = *(_QWORD *)(v1425 - 8);
      v352[6] = v1424 - 8;
      v352[9] = v1425 - 8;
LABEL_2122:
      v1426 = v1542;
      v1542 = 0;
      if (v1426)
        (*(void (**)(uint64_t))(*(_QWORD *)v1426 + 8))(v1426);
      v915 = v1547;
      if (!v1547)
        return;
      v1427 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1427);
      while (__stlxr(v917 - 1, v1427));
      goto LABEL_2184;
    case 34:
      v1545 = &off_24CA12F50;
      sub_20FF77C00((std::string::size_type *)&v1546, a3);
      v235 = *a2;
      v236 = v1555;
      v237 = v1546;
      if (!v1546)
        goto LABEL_1120;
      v238 = v1547;
      if (v1547)
      {
        v239 = (unint64_t *)&v1547->__shared_owners_;
        do
          v240 = __ldxr(v239);
        while (__stxr(v240 + 1, v239));
        do
          v241 = __ldaxr(v239);
        while (__stlxr(v241 - 1, v239));
        if (!v241)
        {
          ((void (*)(std::__shared_weak_count *))v238->__on_zero_shared)(v238);
          std::__shared_weak_count::__release_weak(v238);
        }
        v237 = v1546;
        v242 = v1547;
        if (v1547)
        {
          v243 = (unint64_t *)&v1547->__shared_owners_;
          do
            v244 = __ldxr(v243);
          while (__stxr(v244 + 1, v243));
          do
            v245 = __ldaxr(v243);
          while (__stlxr(v245 - 1, v243));
          if (!v245)
          {
            ((void (*)(std::__shared_weak_count *))v242->__on_zero_shared)(v242);
            std::__shared_weak_count::__release_weak(v242);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v237 + 96))(&v1542, v237, 1);
      else
LABEL_1120:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2036;
      if (!v1550)
        goto LABEL_2036;
      v779 = v1551;
      if (!v1551)
        goto LABEL_2036;
      v780 = v1553;
      v1478 = v1554;
      v781 = v1548;
      if (v1556 && v1548)
      {
        v782 = v1546;
        v783 = v1547;
        if (v1547)
        {
          v784 = (unint64_t *)&v1547->__shared_owners_;
          do
            v785 = __ldxr(v784);
          while (__stxr(v785 + 1, v784));
          do
            v786 = __ldaxr(v784);
          while (__stlxr(v786 - 1, v784));
          if (!v786)
          {
            ((void (*)(std::__shared_weak_count *))v783->__on_zero_shared)(v783);
            std::__shared_weak_count::__release_weak(v783);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v782 + 88))(v782, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v781 = v1548;
      }
      v1539 = v779 - 1;
      if (v779 == 1)
        goto LABEL_1720;
      if ((_DWORD)v236)
      {
        v787 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v235);
          if (!v781)
            break;
          v790 = 0;
          v791 = v236;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)&v781[v790];
            v792 = (char *)sub_2101FF5A0(v235);
            ++v235[14];
            sub_2101FFF00(v792, (uint64_t)&v1543);
            v790 += v780;
            --v791;
          }
          while (v791);
LABEL_1136:
          v788 = v235[6];
          v235[4] = *(_QWORD *)(v788 - 8);
          v789 = v235[9];
          v235[14] = *(_QWORD *)(v789 - 8);
          v235[6] = v788 - 8;
          v235[9] = v789 - 8;
          v781 += v1478;
          if (++v787 == v1539)
            goto LABEL_1720;
        }
        v793 = 0;
        v794 = v236;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = 2 * v793;
          v795 = (char *)sub_2101FF5A0(v235);
          ++v235[14];
          sub_2101FFF00(v795, (uint64_t)&v1543);
          v793 += v780;
          if (!--v794)
            goto LABEL_1136;
        }
LABEL_2207:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v235);
        v1184 = v235[6];
        v235[4] = *(_QWORD *)(v1184 - 8);
        v1185 = v235[9];
        v235[14] = *(_QWORD *)(v1185 - 8);
        v235[6] = v1184 - 8;
        v235[9] = v1185 - 8;
        v781 += v1478;
        --v1539;
      }
      while (v1539);
LABEL_1720:
      sub_2101FF2E8((uint64_t)v235);
      v1186 = v236;
      if ((_DWORD)v236)
      {
        if (!v781)
        {
          v1372 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = 2 * v1372;
            v1373 = (char *)sub_2101FF5A0(v235);
            ++v235[14];
            sub_2101FFF00(v1373, (uint64_t)&v1543);
            v1372 += v780;
            if (!--v1186)
              goto LABEL_2035;
          }
          goto LABEL_2207;
        }
        v1187 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)&v781[v1187];
          v1188 = (char *)sub_2101FF5A0(v235);
          ++v235[14];
          sub_2101FFF00(v1188, (uint64_t)&v1543);
          v1187 += v780;
          --v1186;
        }
        while (v1186);
      }
LABEL_2035:
      v1374 = v235[6];
      v235[4] = *(_QWORD *)(v1374 - 8);
      v1375 = v235[9];
      v235[14] = *(_QWORD *)(v1375 - 8);
      v235[6] = v1374 - 8;
      v235[9] = v1375 - 8;
LABEL_2036:
      v1376 = v1542;
      v1542 = 0;
      if (v1376)
        (*(void (**)(uint64_t))(*(_QWORD *)v1376 + 8))(v1376);
      v915 = v1547;
      if (!v1547)
        return;
      v1377 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1377);
      while (__stlxr(v917 - 1, v1377));
      goto LABEL_2184;
    case 35:
      v1545 = &off_24CA13048;
      sub_20FF78468((std::string::size_type *)&v1546, a3);
      v214 = *a2;
      v1525 = v1555;
      v215 = v1546;
      if (!v1546)
        goto LABEL_1070;
      v216 = v1547;
      if (v1547)
      {
        v217 = (unint64_t *)&v1547->__shared_owners_;
        do
          v218 = __ldxr(v217);
        while (__stxr(v218 + 1, v217));
        do
          v219 = __ldaxr(v217);
        while (__stlxr(v219 - 1, v217));
        if (!v219)
        {
          ((void (*)(std::__shared_weak_count *))v216->__on_zero_shared)(v216);
          std::__shared_weak_count::__release_weak(v216);
        }
        v215 = v1546;
        v220 = v1547;
        if (v1547)
        {
          v221 = (unint64_t *)&v1547->__shared_owners_;
          do
            v222 = __ldxr(v221);
          while (__stxr(v222 + 1, v221));
          do
            v223 = __ldaxr(v221);
          while (__stlxr(v223 - 1, v221));
          if (!v223)
          {
            ((void (*)(std::__shared_weak_count *))v220->__on_zero_shared)(v220);
            std::__shared_weak_count::__release_weak(v220);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v215 + 96))(&v1543, v215, 1);
      else
LABEL_1070:
        v1543 = 0;
      if (!v1549)
        goto LABEL_2016;
      if (!v1550)
        goto LABEL_2016;
      v745 = v1551;
      if (!v1551)
        goto LABEL_2016;
      v746 = v1553;
      v1476 = v1554;
      v747 = v1548;
      if (v1556 && v1548)
      {
        v748 = v1546;
        v749 = v1547;
        if (v1547)
        {
          v750 = (unint64_t *)&v1547->__shared_owners_;
          do
            v751 = __ldxr(v750);
          while (__stxr(v751 + 1, v750));
          do
            v752 = __ldaxr(v750);
          while (__stlxr(v752 - 1, v750));
          if (!v752)
          {
            ((void (*)(std::__shared_weak_count *))v749->__on_zero_shared)(v749);
            std::__shared_weak_count::__release_weak(v749);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v748 + 88))(v748, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v747 = v1548;
      }
      v1501 = v745 - 1;
      if (v745 == 1)
        goto LABEL_1708;
      if ((_DWORD)v1525)
      {
        v753 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v214);
          if (!v747)
            break;
          v756 = 0;
          v757 = v1525;
          do
          {
            v758 = sub_2101FF5A0(v214);
            ++v214[14];
            sub_210200168(v758, &v747[v756]);
            v756 += v746;
            --v757;
          }
          while (v757);
LABEL_1086:
          v754 = v214[6];
          v214[4] = *(_QWORD *)(v754 - 8);
          v755 = v214[9];
          v214[14] = *(_QWORD *)(v755 - 8);
          v214[6] = v754 - 8;
          v214[9] = v755 - 8;
          v747 += v1476;
          if (++v753 == v1501)
            goto LABEL_1708;
        }
        v759 = 0;
        v760 = v1525;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v761 = sub_2101FF5A0(v214);
          ++v214[14];
          sub_210200168(v761, (_WORD *)(2 * v759));
          v759 += v746;
          if (!--v760)
            goto LABEL_1086;
        }
LABEL_2205:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v214);
        v1175 = v214[6];
        v214[4] = *(_QWORD *)(v1175 - 8);
        v1176 = v214[9];
        v214[14] = *(_QWORD *)(v1176 - 8);
        v214[6] = v1175 - 8;
        v214[9] = v1176 - 8;
        v747 += v1476;
        --v1501;
      }
      while (v1501);
LABEL_1708:
      sub_2101FF2E8((uint64_t)v214);
      if ((_DWORD)v1525)
      {
        if (!v747)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1361 = sub_2101FF5A0(v214);
            ++v214[14];
            sub_210200168(v1361, (_WORD *)(2 * v747));
            LODWORD(v747) = (_DWORD)v747 + v746;
            if (!--v1525)
              goto LABEL_2015;
          }
          goto LABEL_2205;
        }
        v1177 = 0;
        do
        {
          v1178 = sub_2101FF5A0(v214);
          ++v214[14];
          sub_210200168(v1178, &v747[v1177]);
          v1177 += v746;
          --v1525;
        }
        while (v1525);
      }
LABEL_2015:
      v1362 = v214[6];
      v214[4] = *(_QWORD *)(v1362 - 8);
      v1363 = v214[9];
      v214[14] = *(_QWORD *)(v1363 - 8);
      v214[6] = v1362 - 8;
      v214[9] = v1363 - 8;
LABEL_2016:
      v1364 = v1543;
      v1543 = 0;
      if (v1364)
        (*(void (**)(uint64_t))(*(_QWORD *)v1364 + 8))(v1364);
      v915 = v1547;
      if (!v1547)
        return;
      v1365 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1365);
      while (__stlxr(v917 - 1, v1365));
      goto LABEL_2184;
    case 36:
      v1545 = &off_24CA13140;
      sub_20FF78CD0((std::string::size_type *)&v1546, a3);
      v204 = *a2;
      v1524 = v1555;
      v205 = v1546;
      if (!v1546)
        goto LABEL_1045;
      v206 = v1547;
      if (v1547)
      {
        v207 = (unint64_t *)&v1547->__shared_owners_;
        do
          v208 = __ldxr(v207);
        while (__stxr(v208 + 1, v207));
        do
          v209 = __ldaxr(v207);
        while (__stlxr(v209 - 1, v207));
        if (!v209)
        {
          ((void (*)(std::__shared_weak_count *))v206->__on_zero_shared)(v206);
          std::__shared_weak_count::__release_weak(v206);
        }
        v205 = v1546;
        v210 = v1547;
        if (v1547)
        {
          v211 = (unint64_t *)&v1547->__shared_owners_;
          do
            v212 = __ldxr(v211);
          while (__stxr(v212 + 1, v211));
          do
            v213 = __ldaxr(v211);
          while (__stlxr(v213 - 1, v211));
          if (!v213)
          {
            ((void (*)(std::__shared_weak_count *))v210->__on_zero_shared)(v210);
            std::__shared_weak_count::__release_weak(v210);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v205 + 96))(&v1543, v205, 1);
      else
LABEL_1045:
        v1543 = 0;
      if (!v1549)
        goto LABEL_2007;
      if (!v1550)
        goto LABEL_2007;
      v728 = v1551;
      if (!v1551)
        goto LABEL_2007;
      v729 = v1553;
      v1475 = v1554;
      v730 = v1548;
      if (v1556 && v1548)
      {
        v731 = v1546;
        v732 = v1547;
        if (v1547)
        {
          v733 = (unint64_t *)&v1547->__shared_owners_;
          do
            v734 = __ldxr(v733);
          while (__stxr(v734 + 1, v733));
          do
            v735 = __ldaxr(v733);
          while (__stlxr(v735 - 1, v733));
          if (!v735)
          {
            ((void (*)(std::__shared_weak_count *))v732->__on_zero_shared)(v732);
            std::__shared_weak_count::__release_weak(v732);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v731 + 88))(v731, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v730 = v1548;
      }
      v1500 = v728 - 1;
      if (v728 == 1)
        goto LABEL_1702;
      if ((_DWORD)v1524)
      {
        v736 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v204);
          if (!v730)
            break;
          v739 = 0;
          v740 = v1524;
          do
          {
            v741 = sub_2101FF5A0(v204);
            ++v204[14];
            sub_2102004AC(v741, (float *)&v730[2 * v739]);
            v739 += v729;
            --v740;
          }
          while (v740);
LABEL_1061:
          v737 = v204[6];
          v204[4] = *(_QWORD *)(v737 - 8);
          v738 = v204[9];
          v204[14] = *(_QWORD *)(v738 - 8);
          v204[6] = v737 - 8;
          v204[9] = v738 - 8;
          v730 += 2 * v1475;
          if (++v736 == v1500)
            goto LABEL_1702;
        }
        v742 = 0;
        v743 = v1524;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v744 = sub_2101FF5A0(v204);
          ++v204[14];
          sub_2102004AC(v744, (float *)(4 * v742));
          v742 += v729;
          if (!--v743)
            goto LABEL_1061;
        }
LABEL_2204:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v204);
        v1171 = v204[6];
        v204[4] = *(_QWORD *)(v1171 - 8);
        v1172 = v204[9];
        v204[14] = *(_QWORD *)(v1172 - 8);
        v204[6] = v1171 - 8;
        v204[9] = v1172 - 8;
        v730 += 2 * v1475;
        --v1500;
      }
      while (v1500);
LABEL_1702:
      sub_2101FF2E8((uint64_t)v204);
      if ((_DWORD)v1524)
      {
        if (!v730)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1356 = sub_2101FF5A0(v204);
            ++v204[14];
            sub_2102004AC(v1356, (float *)(4 * v730));
            LODWORD(v730) = (_DWORD)v730 + v729;
            if (!--v1524)
              goto LABEL_2006;
          }
          goto LABEL_2204;
        }
        v1173 = 0;
        do
        {
          v1174 = sub_2101FF5A0(v204);
          ++v204[14];
          sub_2102004AC(v1174, (float *)&v730[2 * v1173]);
          v1173 += v729;
          --v1524;
        }
        while (v1524);
      }
LABEL_2006:
      v1357 = v204[6];
      v204[4] = *(_QWORD *)(v1357 - 8);
      v1358 = v204[9];
      v204[14] = *(_QWORD *)(v1358 - 8);
      v204[6] = v1357 - 8;
      v204[9] = v1358 - 8;
LABEL_2007:
      v1359 = v1543;
      v1543 = 0;
      if (v1359)
        (*(void (**)(uint64_t))(*(_QWORD *)v1359 + 8))(v1359);
      v915 = v1547;
      if (!v1547)
        return;
      v1360 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1360);
      while (__stlxr(v917 - 1, v1360));
      goto LABEL_2184;
    case 37:
      v1545 = &off_24CA13238;
      sub_20FF79538(&v1546, a3);
      v320 = *a2;
      v321 = v1555;
      v322 = v1546;
      if (!v1546)
        goto LABEL_1335;
      v323 = v1547;
      if (v1547)
      {
        v324 = (unint64_t *)&v1547->__shared_owners_;
        do
          v325 = __ldxr(v324);
        while (__stxr(v325 + 1, v324));
        do
          v326 = __ldaxr(v324);
        while (__stlxr(v326 - 1, v324));
        if (!v326)
        {
          ((void (*)(std::__shared_weak_count *))v323->__on_zero_shared)(v323);
          std::__shared_weak_count::__release_weak(v323);
        }
        v322 = v1546;
        v327 = v1547;
        if (v1547)
        {
          v328 = (unint64_t *)&v1547->__shared_owners_;
          do
            v329 = __ldxr(v328);
          while (__stxr(v329 + 1, v328));
          do
            v330 = __ldaxr(v328);
          while (__stlxr(v330 - 1, v328));
          if (!v330)
          {
            ((void (*)(std::__shared_weak_count *))v327->__on_zero_shared)(v327);
            std::__shared_weak_count::__release_weak(v327);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v322 + 96))(&v1542, v322, 1);
      else
LABEL_1335:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2093;
      if (!v1550)
        goto LABEL_2093;
      v918 = v1551;
      if (!v1551)
        goto LABEL_2093;
      v919 = v1553;
      v1507 = v1554;
      v920 = v1548;
      if (v1556 && v1548)
      {
        v921 = v1546;
        v922 = v1547;
        if (v1547)
        {
          v923 = (unint64_t *)&v1547->__shared_owners_;
          do
            v924 = __ldxr(v923);
          while (__stxr(v924 + 1, v923));
          do
            v925 = __ldaxr(v923);
          while (__stlxr(v925 - 1, v923));
          if (!v925)
          {
            ((void (*)(std::__shared_weak_count *))v922->__on_zero_shared)(v922);
            std::__shared_weak_count::__release_weak(v922);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v921 + 88))(v921, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v920 = v1548;
      }
      v926 = v918 - 1;
      if (v918 == 1)
        goto LABEL_1781;
      if ((_DWORD)v321)
      {
        v927 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v320);
          if (!v920)
            break;
          v930 = 0;
          v931 = v321;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)v920 + v930;
            v932 = (char *)sub_2101FF5A0(v320);
            ++v320[14];
            sub_2101FF6B8(v932, (uint64_t)&v1543);
            v930 += v919;
            --v931;
          }
          while (v931);
LABEL_1351:
          v928 = v320[6];
          v320[4] = *(_QWORD *)(v928 - 8);
          v929 = v320[9];
          v320[14] = *(_QWORD *)(v929 - 8);
          v320[6] = v928 - 8;
          v320[9] = v929 - 8;
          v920 = (_WORD *)((char *)v920 + v1507);
          if (++v927 == v918 - 1)
            goto LABEL_1781;
        }
        v933 = 0;
        v934 = v321;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = v933;
          v935 = (char *)sub_2101FF5A0(v320);
          ++v320[14];
          sub_2101FF6B8(v935, (uint64_t)&v1543);
          v933 += v919;
          if (!--v934)
            goto LABEL_1351;
        }
LABEL_2213:
        abort();
      }
      v920 = (_WORD *)((char *)v920 + v1507 + v1507 * (unint64_t)(v918 - 2));
      do
      {
        sub_2101FF2E8((uint64_t)v320);
        v1217 = v320[6];
        v320[4] = *(_QWORD *)(v1217 - 8);
        v1218 = v320[9];
        v320[14] = *(_QWORD *)(v1218 - 8);
        v320[6] = v1217 - 8;
        v320[9] = v1218 - 8;
        --v926;
      }
      while (v926);
LABEL_1781:
      sub_2101FF2E8((uint64_t)v320);
      v1219 = v321;
      if ((_DWORD)v321)
      {
        if (!v920)
        {
          v1405 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = v1405;
            v1406 = (char *)sub_2101FF5A0(v320);
            ++v320[14];
            sub_2101FF6B8(v1406, (uint64_t)&v1543);
            v1405 += v919;
            if (!--v1219)
              goto LABEL_2092;
          }
          goto LABEL_2213;
        }
        v1220 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)v920 + v1220;
          v1221 = (char *)sub_2101FF5A0(v320);
          ++v320[14];
          sub_2101FF6B8(v1221, (uint64_t)&v1543);
          v1220 += v919;
          --v1219;
        }
        while (v1219);
      }
LABEL_2092:
      v1407 = v320[6];
      v320[4] = *(_QWORD *)(v1407 - 8);
      v1408 = v320[9];
      v320[14] = *(_QWORD *)(v1408 - 8);
      v320[6] = v1407 - 8;
      v320[9] = v1408 - 8;
LABEL_2093:
      v1409 = v1542;
      v1542 = 0;
      if (v1409)
        (*(void (**)(uint64_t))(*(_QWORD *)v1409 + 8))(v1409);
      v915 = v1547;
      if (!v1547)
        return;
      v1410 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1410);
      while (__stlxr(v917 - 1, v1410));
      goto LABEL_2184;
    case 38:
      v1545 = &off_24CA13330;
      sub_20FF79DEC(&v1546, a3);
      v373 = *a2;
      v374 = v1555;
      v375 = v1546;
      if (!v1546)
        goto LABEL_1460;
      v376 = v1547;
      if (v1547)
      {
        v377 = (unint64_t *)&v1547->__shared_owners_;
        do
          v378 = __ldxr(v377);
        while (__stxr(v378 + 1, v377));
        do
          v379 = __ldaxr(v377);
        while (__stlxr(v379 - 1, v377));
        if (!v379)
        {
          ((void (*)(std::__shared_weak_count *))v376->__on_zero_shared)(v376);
          std::__shared_weak_count::__release_weak(v376);
        }
        v375 = v1546;
        v380 = v1547;
        if (v1547)
        {
          v381 = (unint64_t *)&v1547->__shared_owners_;
          do
            v382 = __ldxr(v381);
          while (__stxr(v382 + 1, v381));
          do
            v383 = __ldaxr(v381);
          while (__stlxr(v383 - 1, v381));
          if (!v383)
          {
            ((void (*)(std::__shared_weak_count *))v380->__on_zero_shared)(v380);
            std::__shared_weak_count::__release_weak(v380);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v375 + 96))(&v1542, v375, 1);
      else
LABEL_1460:
        v1542 = 0;
      if (!v1549)
        goto LABEL_2141;
      if (!v1550)
        goto LABEL_2141;
      v1005 = v1551;
      if (!v1551)
        goto LABEL_2141;
      v1006 = v1553;
      v1485 = v1554;
      v1007 = v1548;
      if (v1556 && v1548)
      {
        v1008 = v1546;
        v1009 = v1547;
        if (v1547)
        {
          v1010 = (unint64_t *)&v1547->__shared_owners_;
          do
            v1011 = __ldxr(v1010);
          while (__stxr(v1011 + 1, v1010));
          do
            v1012 = __ldaxr(v1010);
          while (__stlxr(v1012 - 1, v1010));
          if (!v1012)
          {
            ((void (*)(std::__shared_weak_count *))v1009->__on_zero_shared)(v1009);
            std::__shared_weak_count::__release_weak(v1009);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v1008 + 88))(v1008, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v1007 = v1548;
      }
      v1541 = v1005 - 1;
      if (v1005 == 1)
        goto LABEL_1812;
      if ((_DWORD)v374)
      {
        v1013 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v373);
          if (!v1007)
            break;
          v1016 = 0;
          v1017 = v374;
          do
          {
            v1543 = 4;
            v1544 = (uint64_t)&v1007[v1016];
            v1018 = (char *)sub_2101FF5A0(v373);
            ++v373[14];
            sub_2101FFF00(v1018, (uint64_t)&v1543);
            v1016 += v1006;
            --v1017;
          }
          while (v1017);
LABEL_1476:
          v1014 = v373[6];
          v373[4] = *(_QWORD *)(v1014 - 8);
          v1015 = v373[9];
          v373[14] = *(_QWORD *)(v1015 - 8);
          v373[6] = v1014 - 8;
          v373[9] = v1015 - 8;
          v1007 += v1485;
          if (++v1013 == v1541)
            goto LABEL_1812;
        }
        v1019 = 0;
        v1020 = v374;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v1543 = 4;
          v1544 = 2 * v1019;
          v1021 = (char *)sub_2101FF5A0(v373);
          ++v373[14];
          sub_2101FFF00(v1021, (uint64_t)&v1543);
          v1019 += v1006;
          if (!--v1020)
            goto LABEL_1476;
        }
LABEL_2218:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v373);
        v1240 = v373[6];
        v373[4] = *(_QWORD *)(v1240 - 8);
        v1241 = v373[9];
        v373[14] = *(_QWORD *)(v1241 - 8);
        v373[6] = v1240 - 8;
        v373[9] = v1241 - 8;
        v1007 += v1485;
        --v1541;
      }
      while (v1541);
LABEL_1812:
      sub_2101FF2E8((uint64_t)v373);
      v1242 = v374;
      if ((_DWORD)v374)
      {
        if (!v1007)
        {
          v1433 = 0;
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1543 = 4;
            v1544 = 2 * v1433;
            v1434 = (char *)sub_2101FF5A0(v373);
            ++v373[14];
            sub_2101FFF00(v1434, (uint64_t)&v1543);
            v1433 += v1006;
            if (!--v1242)
              goto LABEL_2140;
          }
          goto LABEL_2218;
        }
        v1243 = 0;
        do
        {
          v1543 = 4;
          v1544 = (uint64_t)&v1007[v1243];
          v1244 = (char *)sub_2101FF5A0(v373);
          ++v373[14];
          sub_2101FFF00(v1244, (uint64_t)&v1543);
          v1243 += v1006;
          --v1242;
        }
        while (v1242);
      }
LABEL_2140:
      v1435 = v373[6];
      v373[4] = *(_QWORD *)(v1435 - 8);
      v1436 = v373[9];
      v373[14] = *(_QWORD *)(v1436 - 8);
      v373[6] = v1435 - 8;
      v373[9] = v1436 - 8;
LABEL_2141:
      v1437 = v1542;
      v1542 = 0;
      if (v1437)
        (*(void (**)(uint64_t))(*(_QWORD *)v1437 + 8))(v1437);
      v915 = v1547;
      if (!v1547)
        return;
      v1438 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1438);
      while (__stlxr(v917 - 1, v1438));
      goto LABEL_2184;
    case 39:
      v1545 = &off_24CA13428;
      sub_20FF7A6A4(&v1546, a3);
      v130 = *a2;
      v1521 = v1555;
      v131 = v1546;
      if (!v1546)
        goto LABEL_877;
      v132 = v1547;
      if (v1547)
      {
        v133 = (unint64_t *)&v1547->__shared_owners_;
        do
          v134 = __ldxr(v133);
        while (__stxr(v134 + 1, v133));
        do
          v135 = __ldaxr(v133);
        while (__stlxr(v135 - 1, v133));
        if (!v135)
        {
          ((void (*)(std::__shared_weak_count *))v132->__on_zero_shared)(v132);
          std::__shared_weak_count::__release_weak(v132);
        }
        v131 = v1546;
        v136 = v1547;
        if (v1547)
        {
          v137 = (unint64_t *)&v1547->__shared_owners_;
          do
            v138 = __ldxr(v137);
          while (__stxr(v138 + 1, v137));
          do
            v139 = __ldaxr(v137);
          while (__stlxr(v139 - 1, v137));
          if (!v139)
          {
            ((void (*)(std::__shared_weak_count *))v136->__on_zero_shared)(v136);
            std::__shared_weak_count::__release_weak(v136);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v131 + 96))(&v1543, v131, 1);
      else
LABEL_877:
        v1543 = 0;
      if (!v1549)
        goto LABEL_1950;
      if (!v1550)
        goto LABEL_1950;
      v616 = v1551;
      if (!v1551)
        goto LABEL_1950;
      v617 = v1553;
      v1469 = v1554;
      v618 = v1548;
      if (v1556 && v1548)
      {
        v619 = v1546;
        v620 = v1547;
        if (v1547)
        {
          v621 = (unint64_t *)&v1547->__shared_owners_;
          do
            v622 = __ldxr(v621);
          while (__stxr(v622 + 1, v621));
          do
            v623 = __ldaxr(v621);
          while (__stlxr(v623 - 1, v621));
          if (!v623)
          {
            ((void (*)(std::__shared_weak_count *))v620->__on_zero_shared)(v620);
            std::__shared_weak_count::__release_weak(v620);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v619 + 88))(v619, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v618 = v1548;
      }
      v1497 = v616 - 1;
      if (v616 == 1)
        goto LABEL_1655;
      if ((_DWORD)v1521)
      {
        v624 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v130);
          if (!v618)
            break;
          v627 = 0;
          v628 = v1521;
          do
          {
            v629 = sub_2101FF5A0(v130);
            ++v130[14];
            sub_210200168(v629, &v618[v627]);
            v627 += v617;
            --v628;
          }
          while (v628);
LABEL_893:
          v625 = v130[6];
          v130[4] = *(_QWORD *)(v625 - 8);
          v626 = v130[9];
          v130[14] = *(_QWORD *)(v626 - 8);
          v130[6] = v625 - 8;
          v130[9] = v626 - 8;
          v618 += v1469;
          if (++v624 == v1497)
            goto LABEL_1655;
        }
        v630 = 0;
        v631 = v1521;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v632 = sub_2101FF5A0(v130);
          ++v130[14];
          sub_210200168(v632, (_WORD *)(2 * v630));
          v630 += v617;
          if (!--v631)
            goto LABEL_893;
        }
LABEL_2198:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v130);
        v1141 = v130[6];
        v130[4] = *(_QWORD *)(v1141 - 8);
        v1142 = v130[9];
        v130[14] = *(_QWORD *)(v1142 - 8);
        v130[6] = v1141 - 8;
        v130[9] = v1142 - 8;
        v618 += v1469;
        --v1497;
      }
      while (v1497);
LABEL_1655:
      sub_2101FF2E8((uint64_t)v130);
      if ((_DWORD)v1521)
      {
        if (!v618)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1323 = sub_2101FF5A0(v130);
            ++v130[14];
            sub_210200168(v1323, (_WORD *)(2 * v618));
            LODWORD(v618) = (_DWORD)v618 + v617;
            if (!--v1521)
              goto LABEL_1949;
          }
          goto LABEL_2198;
        }
        v1143 = 0;
        do
        {
          v1144 = sub_2101FF5A0(v130);
          ++v130[14];
          sub_210200168(v1144, &v618[v1143]);
          v1143 += v617;
          --v1521;
        }
        while (v1521);
      }
LABEL_1949:
      v1324 = v130[6];
      v130[4] = *(_QWORD *)(v1324 - 8);
      v1325 = v130[9];
      v130[14] = *(_QWORD *)(v1325 - 8);
      v130[6] = v1324 - 8;
      v130[9] = v1325 - 8;
LABEL_1950:
      v1326 = v1543;
      v1543 = 0;
      if (v1326)
        (*(void (**)(uint64_t))(*(_QWORD *)v1326 + 8))(v1326);
      v915 = v1547;
      if (!v1547)
        return;
      v1327 = (unint64_t *)&v1547->__shared_owners_;
      do
        v917 = __ldaxr(v1327);
      while (__stlxr(v917 - 1, v1327));
      goto LABEL_2184;
    case 40:
      v1545 = &off_24CA13520;
      sub_20FF7AF5C(&v1546, a3);
      v99 = *a2;
      v1519 = v1555;
      v100 = v1546;
      if (!v1546)
        goto LABEL_802;
      v101 = v1547;
      if (v1547)
      {
        v102 = (unint64_t *)&v1547->__shared_owners_;
        do
          v103 = __ldxr(v102);
        while (__stxr(v103 + 1, v102));
        do
          v104 = __ldaxr(v102);
        while (__stlxr(v104 - 1, v102));
        if (!v104)
        {
          ((void (*)(std::__shared_weak_count *))v101->__on_zero_shared)(v101);
          std::__shared_weak_count::__release_weak(v101);
        }
        v100 = v1546;
        v105 = v1547;
        if (v1547)
        {
          v106 = (unint64_t *)&v1547->__shared_owners_;
          do
            v107 = __ldxr(v106);
          while (__stxr(v107 + 1, v106));
          do
            v108 = __ldaxr(v106);
          while (__stlxr(v108 - 1, v106));
          if (!v108)
          {
            ((void (*)(std::__shared_weak_count *))v105->__on_zero_shared)(v105);
            std::__shared_weak_count::__release_weak(v105);
          }
        }
      }
      if (v1557)
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(_QWORD *)v100 + 96))(&v1543, v100, 1);
      else
LABEL_802:
        v1543 = 0;
      if (!v1549)
        goto LABEL_1922;
      if (!v1550)
        goto LABEL_1922;
      v565 = v1551;
      if (!v1551)
        goto LABEL_1922;
      v566 = v1553;
      v1466 = v1554;
      v567 = v1548;
      if (v1556 && v1548)
      {
        v568 = v1546;
        v569 = v1547;
        if (v1547)
        {
          v570 = (unint64_t *)&v1547->__shared_owners_;
          do
            v571 = __ldxr(v570);
          while (__stxr(v571 + 1, v570));
          do
            v572 = __ldaxr(v570);
          while (__stlxr(v572 - 1, v570));
          if (!v572)
          {
            ((void (*)(std::__shared_weak_count *))v569->__on_zero_shared)(v569);
            std::__shared_weak_count::__release_weak(v569);
          }
        }
        (*(void (**)(uint64_t, uint64_t, const char *))(*(_QWORD *)v568 + 88))(v568, 1, "/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Kit/Image/include/Kit/Image/ImageView.h:1297");
        v567 = v1548;
      }
      v1495 = v565 - 1;
      if (v565 == 1)
        goto LABEL_1637;
      if ((_DWORD)v1519)
      {
        v573 = 0;
        while (1)
        {
          sub_2101FF2E8((uint64_t)v99);
          if (!v567)
            break;
          v576 = 0;
          v577 = v1519;
          do
          {
            v578 = sub_2101FF5A0(v99);
            ++v99[14];
            sub_2102004AC(v578, (float *)&v567[2 * v576]);
            v576 += v566;
            --v577;
          }
          while (v577);
LABEL_818:
          v574 = v99[6];
          v99[4] = *(_QWORD *)(v574 - 8);
          v575 = v99[9];
          v99[14] = *(_QWORD *)(v575 - 8);
          v99[6] = v574 - 8;
          v99[9] = v575 - 8;
          v567 += 2 * v1466;
          if (++v573 == v1495)
            goto LABEL_1637;
        }
        v579 = 0;
        v580 = v1519;
        while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
        {
          v581 = sub_2101FF5A0(v99);
          ++v99[14];
          sub_2102004AC(v581, (float *)(4 * v579));
          v579 += v566;
          if (!--v580)
            goto LABEL_818;
        }
LABEL_2195:
        abort();
      }
      do
      {
        sub_2101FF2E8((uint64_t)v99);
        v1128 = v99[6];
        v99[4] = *(_QWORD *)(v1128 - 8);
        v1129 = v99[9];
        v99[14] = *(_QWORD *)(v1129 - 8);
        v99[6] = v1128 - 8;
        v99[9] = v1129 - 8;
        v567 += 2 * v1466;
        --v1495;
      }
      while (v1495);
LABEL_1637:
      sub_2101FF2E8((uint64_t)v99);
      if ((_DWORD)v1519)
      {
        if (!v567)
        {
          while (!sub_21023D5B4("/Library/Caches/com.apple.xbs/Sources/AppleCV3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_21023DDB0))
          {
            v1307 = sub_2101FF5A0(v99);
            ++v99[14];
            sub_2102004AC(v1307, (float *)(4 * v567));
            LODWORD(v567) = (_DWORD)v567 + v566;
            if (!--v1519)
              goto LABEL_1921;
          }
          goto LABEL_2195;
        }
        v1130 = 0;
        do
        {
          v1131 = sub_2101FF5A0(v99);
          ++v99[14];
          sub_2102004AC(v1131, (float *)&v567[2 * v1130]);
          v1130 += v566;
          --v1519;
        }
        while (v1519);
      }
LABEL_1921:
      v1308 = v99[6];
      v99[4] = *(_QWORD *)(v1308 - 8);
      v1309 = v99[9];
      v99[14] = *(_QWORD *)(v1309 - 8);
      v99[6] = v1308 - 8;
      v99[9] = v1309 - 8;
LABEL_1922:
      v1310 = v1543;
      v1543 = 0;
      if (v1310)
        (*(void (**)(uint64_t))(*(_QWORD *)v1310 + 8))(v1310);
      v915 = v1547;
      if (v1547)
      {
        v1311 = (unint64_t *)&v1547->__shared_owners_;
        do
          v917 = __ldaxr(v1311);
        while (__stlxr(v917 - 1, v1311));
LABEL_2184:
        if (!v917)
        {
          ((void (*)(std::__shared_weak_count *))v915->__on_zero_shared)(v915);
          std::__shared_weak_count::__release_weak(v915);
        }
      }
      return;
    default:
      return;
  }
}

