uint64_t getEnumTagSinglePayload for FileManagerExtendedAttributeKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FileManagerExtendedAttributeKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_18FB1B2BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t CHSIsWidgetExtensionPoint()
{
  return BSEqualObjects();
}

uint64_t sub_18FB1B2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x19400954C](&protocol conformance descriptor for DeviceScopedIdentity<A>, a3);
  return sub_18FBCD7CC();
}

uint64_t sub_18FB1B32C()
{
  MEMORY[0x19400954C](&protocol conformance descriptor for DeviceScopedIdentity<A>);
  return sub_18FBCD238();
}

uint64_t sub_18FB1B37C()
{
  MEMORY[0x19400954C](&protocol conformance descriptor for DeviceScopedIdentity<A>);
  return sub_18FBCD244();
}

uint64_t DeviceScopedIdentity.deviceID.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 60));
  swift_bridgeObjectRetain();
  return v2;
}

void sub_18FB1B44C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB1B4AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB1B50C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB1B56C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

uint64_t CHSExtensionIdentity.tokenString.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v8;

  CHSExtensionIdentity.token.getter(&v8);
  v0 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_18FBD6060;
  v2 = sub_18FB1E0E4();
  v3 = sub_18FB1E3F8(v2);
  v5 = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  swift_bridgeObjectRetain();
  sub_18FB1DFFC((uint64_t)v0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1E9FC((unint64_t *)&qword_1EE18A150, (uint64_t *)&unk_1EE18A140, MEMORY[0x1E0DEAF20]);
  v6 = sub_18FBCD070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

char *sub_18FB1B738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  objc_class *ObjCClassFromObject;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;

  if (a4)
    v11 = a3;
  else
    v11 = 0;
  ObjCClassFromObject = (objc_class *)swift_getObjCClassFromObject();
  swift_getObjectType();
  if (a6)
    v13 = a5;
  else
    v13 = 0;
  v14 = (char *)objc_msgSend(objc_allocWithZone(ObjCClassFromObject), sel_init);
  v15 = &v14[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
  swift_beginAccess();
  *(_QWORD *)v15 = a1;
  *((_QWORD *)v15 + 1) = a2;
  v16 = v14;
  swift_bridgeObjectRelease();
  v17 = &v16[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  *(_QWORD *)v17 = v11;
  *((_QWORD *)v17 + 1) = a4;
  swift_bridgeObjectRelease();
  v18 = &v16[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
  swift_beginAccess();
  *(_QWORD *)v18 = v13;
  *((_QWORD *)v18 + 1) = a6;

  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return v16;
}

void sub_18FB1B934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

char *sub_18FB1B960(char *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;

  v1 = *(_QWORD **)result;
  v2 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v2 == 2)
  {
    v4 = v1[4];
    v3 = v1[5];
    v6 = v1[6];
    v5 = v1[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7 = 0;
    v8 = 0;
LABEL_5:
    v9 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v10 = &v9[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    *(_QWORD *)v10 = v6;
    *((_QWORD *)v10 + 1) = v5;
    v11 = v9;
    swift_bridgeObjectRelease();
    v12 = &v11[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    *(_QWORD *)v12 = v4;
    *((_QWORD *)v12 + 1) = v3;
    swift_bridgeObjectRelease();
    v13 = &v11[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    *(_QWORD *)v13 = v7;
    *((_QWORD *)v13 + 1) = v8;

    swift_bridgeObjectRelease();
    return v11;
  }
  if (v2 == 3)
  {
    v7 = v1[4];
    v8 = v1[5];
    v4 = v1[6];
    v3 = v1[7];
    v6 = v1[8];
    v5 = v1[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FB1BACC()
{
  MEMORY[0x19400954C](&protocol conformance descriptor for TypedIdentifier<A>);
  return sub_18FBCD244();
}

uint64_t CHSExtensionIdentity.partial.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  v5 = *v3;
  v4 = v3[1];
  v6 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  v8 = *v6;
  v7 = v6[1];
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v8;
  a1[3] = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

char *sub_18FB1BBAC(unint64_t a1, unint64_t a2)
{
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  if ((a2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(a2) & 0xF;
  else
    v3 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v3)
    goto LABEL_16;
  swift_bridgeObjectRetain();
  v5 = sub_18FB203E8(a1, a2);
  v7 = v6;
  swift_bridgeObjectRelease();
  v22 = 44230;
  v8 = MEMORY[0x194008298](&v22, 2);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (v5 != v8 || v7 != v9)
  {
    v10 = sub_18FBCD7C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_11;
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  v11 = sub_18FBCD148();
  sub_18FB201A0(v11, a1, a2);
  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_49;
  if ((a2 & 0x2000000000000000) != 0)
  {
    v22 = a1;
    v23 = a2 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
  }
  else
  {
    if ((a1 & 0x1000000000000000) == 0)
      sub_18FBCD580();
    swift_bridgeObjectRetain();
  }
  v13 = sub_18FBCD58C();
  swift_bridgeObjectRelease();
  if (v13)
  {
    while (1)
    {
      v14 = (a1 >> 59) & 1;
      if ((a2 & 0x1000000000000000) == 0)
        LOBYTE(v14) = 1;
      v15 = 4 << v14;
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v16 = sub_18FBCD148();
        if ((v16 & 0xC) == v15 || (v16 & 1) == 0)
          break;
        if (v16 >> 16 >= v3)
          goto LABEL_48;
LABEL_33:
        if ((a2 & 0x1000000000000000) != 0)
        {
          v18 = sub_18FBCD520();
        }
        else
        {
          if ((a2 & 0x2000000000000000) != 0)
          {
            v22 = a1;
            v23 = a2 & 0xFFFFFFFFFFFFFFLL;
            swift_bridgeObjectRetain();
          }
          else
          {
            if ((a1 & 0x1000000000000000) == 0)
              sub_18FBCD580();
            swift_bridgeObjectRetain();
          }
          v18 = sub_18FBCD58C();
          swift_bridgeObjectRelease();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_18FB200A8(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
        v20 = *((_QWORD *)v12 + 2);
        v19 = *((_QWORD *)v12 + 3);
        if (v20 >= v19 >> 1)
          v12 = sub_18FB200A8((char *)(v19 > 1), v20 + 1, 1, v12);
        *((_QWORD *)v12 + 2) = v20 + 1;
        *(_DWORD *)&v12[4 * v20 + 32] = v18;
        if (!--v13)
          goto LABEL_51;
      }
      if ((v16 & 0xC) == v15)
        v16 = sub_18FBAB7A0(v16, a1, a2);
      if (v16 >> 16 < v3)
        break;
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      v13 = sub_18FBCD520();
      if (!v13)
        goto LABEL_50;
    }
    if ((v16 & 1) == 0)
      sub_18FB82BD0(v16, a1, a2);
    goto LABEL_33;
  }
LABEL_50:
  v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_51:
  swift_bridgeObjectRelease();
  return v12;
}

ChronoServices::Token __swiftcall Token.init(rawValue:)(Swift::String rawValue)
{
  char **v1;
  void *object;
  unint64_t countAndFlagsBits;
  char **v4;
  ChronoServices::Token result;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char **v17;
  uint64_t v18;

  object = rawValue._object;
  countAndFlagsBits = rawValue._countAndFlagsBits;
  v4 = v1;
  swift_bridgeObjectRetain();
  result.storage._rawValue = sub_18FB1BBAC(countAndFlagsBits, (unint64_t)object);
  if (!result.storage._rawValue)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
    result.storage._rawValue = (void *)swift_allocObject();
    v8 = (char *)result.storage._rawValue;
    *((_OWORD *)result.storage._rawValue + 1) = xmmword_18FBD6060;
    *((_QWORD *)result.storage._rawValue + 4) = countAndFlagsBits;
    *((_QWORD *)result.storage._rawValue + 5) = object;
    goto LABEL_14;
  }
  v6 = result.storage._rawValue;
  if (!__OFADD__(*((_QWORD *)result.storage._rawValue + 2), 2))
  {
    sub_18FBCD160();
    v18 = v6[2];
    if (v18)
    {
      v17 = v4;
      v7 = 0;
      v8 = (char *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        sub_18FBCD13C();
        v9 = sub_18FBCD160();
        result.storage._rawValue = (void *)sub_18FBCD160();
        if ((unint64_t)result.storage._rawValue >> 14 < v9 >> 14)
          break;
        v10 = sub_18FBCD1F0();
        v11 = MEMORY[0x194008280](v10);
        v13 = v12;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_18FB1EC4C(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
        v15 = *((_QWORD *)v8 + 2);
        v14 = *((_QWORD *)v8 + 3);
        if (v15 >= v14 >> 1)
          v8 = sub_18FB1EC4C((char *)(v14 > 1), v15 + 1, 1, v8);
        ++v7;
        *((_QWORD *)v8 + 2) = v15 + 1;
        v16 = &v8[16 * v15];
        *((_QWORD *)v16 + 4) = v11;
        *((_QWORD *)v16 + 5) = v13;
        if (v18 == v7)
        {
          swift_bridgeObjectRelease();
          result.storage._rawValue = (void *)swift_bridgeObjectRelease();
          v4 = v17;
          goto LABEL_14;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    result.storage._rawValue = (void *)swift_bridgeObjectRelease();
    v8 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_14:
    *v4 = v8;
    return result;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_18FB1C20C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB1C39C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id CHSLogChronoServices()
{
  if (CHSLogChronoServices_onceToken != -1)
    dispatch_once(&CHSLogChronoServices_onceToken, &__block_literal_global_6);
  return (id)CHSLogChronoServices___logObj;
}

void sub_18FB1C5AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB1C624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB1C6C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB1CD60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB1D020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{

  _Unwind_Resume(a1);
}

uint64_t sub_18FB1D070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x19400954C](&protocol conformance descriptor for TypedIdentifier<A>, a3);
  return sub_18FBCD7CC();
}

uint64_t sub_18FB1D0C4(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_18FBCD0C4();
  *a2 = 0;
  return result;
}

uint64_t sub_18FB1D138(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t destroy for DeviceIdentifier()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FB1D180(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_18FBCD0D0();
  *a2 = 0;
  return v3 & 1;
}

void sub_18FB1D3C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB1D460(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB1D4DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB1D784(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB1D864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

void sub_18FB1DAEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB1DC6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t CHSCurrentPlatform()
{
  unsigned int v0;

  v0 = dyld_get_active_platform() - 1;
  if (v0 > 8)
    return 0;
  else
    return qword_18FBD53A8[v0];
}

id CHSExtensionIdentity.copy(with:)@<X0>(_QWORD *a1@<X8>)
{
  id v3;

  a1[3] = type metadata accessor for CHSExtensionIdentity();
  *a1 = v3;
  return v3;
}

id sub_18FB1DD18()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  objc_super v6;

  v1 = &v0[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = &v0[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0xE000000000000000;
  swift_beginAccess();
  *(_OWORD *)v1 = xmmword_18FBD7700;
  v3 = v0;
  swift_bridgeObjectRelease();
  v4 = &v3[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;

  v6.receiver = v3;
  v6.super_class = (Class)CHSExtensionIdentity;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_18FB1DDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for DeviceIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t TypedIdentifier.description.getter()
{
  uint64_t v0;

  v0 = sub_18FB1E748();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_18FB1DE94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = DeviceScopedIdentity.rawValue.getter(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t DeviceScopedIdentity.rawValue.getter(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v9;

  DeviceScopedIdentity.token.getter(a1, &v9);
  v1 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_18FBD6060;
  v3 = sub_18FB1E0E4();
  v4 = sub_18FB1E3F8(v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_18FB1DFFC((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1DFB0();
  v7 = sub_18FBCD070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_18FB1DFB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE18A150;
  if (!qword_1EE18A150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE18A140);
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EE18A150);
  }
  return result;
}

uint64_t sub_18FB1DFFC(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = (uint64_t)sub_18FB1EC4C((char *)result, v10, 1, (char *)v3);
  v3 = result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_18FB1E0E4()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_18FB1E2E4(0, v2, 0);
  v3 = v13;
  swift_bridgeObjectRetain();
  v4 = sub_18FBCD13C();
  if ((v4 & 0x8000000000000000) == 0)
  {
    LODWORD(v5) = v4;
    if (!HIDWORD(v4))
    {
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(v13 + 16);
      v6 = *(_QWORD *)(v13 + 24);
      v8 = v7 + 1;
      if (v7 >= v6 >> 1)
        goto LABEL_17;
      while (1)
      {
        *(_QWORD *)(v3 + 16) = v8;
        v6 = v3 + 4 * v7;
        *(_DWORD *)(v6 + 32) = v5;
        v8 = v2 - 1;
        if (v2 == 1)
          break;
        v7 = v1 + 56;
        while (v8)
        {
          swift_bridgeObjectRetain();
          v10 = sub_18FBCD13C();
          if ((v10 & 0x8000000000000000) != 0)
            goto LABEL_18;
          v2 = v10;
          if (HIDWORD(v10))
            goto LABEL_18;
          swift_bridgeObjectRelease();
          v13 = v3;
          v12 = *(_QWORD *)(v3 + 16);
          v11 = *(_QWORD *)(v3 + 24);
          v5 = v12 + 1;
          if (v12 >= v11 >> 1)
            sub_18FB1E2E4((char *)(v11 > 1), v12 + 1, 1);
          *(_QWORD *)(v3 + 16) = v5;
          v6 = v3 + 4 * v12;
          *(_DWORD *)(v6 + 32) = v2;
          v7 += 16;
          if (!--v8)
            goto LABEL_6;
        }
        __break(1u);
LABEL_17:
        sub_18FB1E2E4((char *)(v6 > 1), v8, 1);
        v3 = v13;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      return v3;
    }
  }
LABEL_18:
  result = sub_18FBCD610();
  __break(1u);
  return result;
}

char *sub_18FB1E2E4(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_18FB1E300(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_18FB1E300(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187F30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

uint64_t sub_18FB1E3F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187F40);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_18FBD6250;
  *(_DWORD *)(result + 32) = 428;
  v3 = *(_QWORD *)(a1 + 16);
  if (HIDWORD(v3))
    goto LABEL_15;
  if (v3 >> 11 != 27)
  {
    if (WORD1(v3) > 0x10u)
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    v4 = result;
    *(_DWORD *)(result + 36) = v3;
    if (!v3)
    {
LABEL_12:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187ED0);
      sub_18FB1E9FC(&qword_1EE187ED8, &qword_1EE187ED0, MEMORY[0x1E0DEAF38]);
      sub_18FBCD118();
      swift_bridgeObjectRelease();
      return 0;
    }
    result = swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = *(_DWORD *)(a1 + 4 * v5 + 32);
      if (v6 >> 11 == 27)
        break;
      if (v6 > 0x10FFFF)
      {
        __break(1u);
        break;
      }
      v7 = *(_QWORD *)(v4 + 24);
      if (v5 + 2 >= v7 >> 1)
      {
        result = (uint64_t)sub_18FB1E584((char *)(v7 > 1), v5 + 3, 1, (char *)v4);
        v4 = result;
      }
      *(_QWORD *)(v4 + 16) = v5 + 3;
      *(_DWORD *)(v4 + 4 * v5++ + 40) = v6;
      if (v3 == v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  return result;
}

char *sub_18FB1E584(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187F40);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t DeviceScopedIdentity.token.getter@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A128);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FBD6250;
  v6 = (uint64_t *)(v2 + *(int *)(a1 + 60));
  v7 = v6[1];
  if (v7)
    v8 = *v6;
  else
    v8 = 0;
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 40) = v7;
  swift_bridgeObjectRetain();
  sub_18FBCD1FC();
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v11;
  return sub_18FB1EB44(inited, a2);
}

uint64_t sub_18FB1E720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_18FB1E748();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FB1E748()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CHSExtensionIdentity.hash.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_18FBCD898();
  swift_beginAccess();
  sub_18FBCD850();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  sub_18FBCD88C();
  swift_bridgeObjectRelease();
  sub_18FBCD85C();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD9D488);
  sub_18FB1E9FC(&qword_1EE189FB0, qword_1ECD9D4F0, (uint64_t)&protocol conformance descriptor for TypedIdentifier<A>);
  sub_18FBCD43C();
  sub_18FBCD85C();
  v1 = v0 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 8);
  sub_18FBCD850();
  sub_18FBCD868();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD130();
  }
  sub_18FBCD88C();
  swift_bridgeObjectRelease();
  sub_18FBCD85C();
  return sub_18FBCD880();
}

uint64_t sub_18FB1E9FC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x19400954C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t CHSExtensionIdentity.token.getter@<X0>(char **a1@<X8>)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A128);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FBD76F0;
  v4 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  v5 = *v4;
  v6 = v4[1];
  if (!v6)
    v5 = 0;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v6;
  v7 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  v8 = v7[1];
  if (v8)
  {
    v9 = *v7;
    v8 = swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = v8;
  v10 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  v11 = *v10;
  v12 = v10[1];
  *(_QWORD *)(inited + 64) = v11;
  *(_QWORD *)(inited + 72) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_18FB1EB44(inited, a1);
}

uint64_t sub_18FB1EB44@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = (uint64_t *)(a1 + 40);
    v6 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v8 = *v5;
      if (*v5)
      {
        v9 = *(v5 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_18FB1EC4C(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
        v11 = *((_QWORD *)v6 + 2);
        v10 = *((_QWORD *)v6 + 3);
        if (v11 >= v10 >> 1)
          v6 = sub_18FB1EC4C((char *)(v10 > 1), v11 + 1, 1, v6);
        *((_QWORD *)v6 + 2) = v11 + 1;
        v7 = &v6[16 * v11];
        *((_QWORD *)v7 + 4) = v9;
        *((_QWORD *)v7 + 5) = v8;
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = (char *)MEMORY[0x1E0DEE9D8];
  }
  result = swift_bridgeObjectRelease();
  *a2 = v6;
  return result;
}

char *sub_18FB1EC4C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t CHSWidgetExtensionContainer.isEqual(_:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  char *v7;
  _BYTE v8[24];
  uint64_t v9;

  v2 = sub_18FB1FA14(a1, (uint64_t)v8);
  if (!v9)
  {
    sub_18FB1F7C4((uint64_t)v8);
    goto LABEL_6;
  }
  type metadata accessor for CHSWidgetExtensionContainer(v2);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    v5 = 0;
    return v5 & 1;
  }
  if (v7 == v1)
  {

    v5 = 1;
  }
  else
  {
    v3 = *(_QWORD *)&v1[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
    v4 = *(_QWORD *)&v7[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_18FB1EEA4(v3, v4);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t type metadata accessor for CHSWidgetExtensionContainer(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE189AD8);
}

id sub_18FB1EEA4(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_18FBCD628();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x1940086C4](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x1940086C4](0, v2);
LABEL_21:
    v14 = v13;
    sub_18FB1F254(0, (unint64_t *)&qword_1EE189E10);
    v15 = sub_18FBCD40C();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x1940086C4](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1940086C4](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_18FBCD40C();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_18FBCD40C();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FB1F254(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_18FB1F28C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE189E20;
  if (!qword_1EE189E20)
  {
    v1 = sub_18FB1F254(255, (unint64_t *)&qword_1EE189E10);
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE189E20);
  }
  return result;
}

uint64_t sub_18FB1F34C(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_18FBCD4C0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_18FB1F254(0, (unint64_t *)&qword_1EE189E10);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_18FBCD4B4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_18FBB4BEC(v7, result + 1, &qword_1EE189A90, (unint64_t *)&qword_1EE189E10, (uint64_t)off_1E2A568B0, (void (*)(unint64_t))sub_18FBB5070);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_18FBB5070();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_18FBB5BFC((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_18FBCD400();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_18FB1F254(0, (unint64_t *)&qword_1EE189E10);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_18FBCD40C();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_18FBCD40C();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_18FB1FA98((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

void sub_18FB1F768(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x194009534]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_18FB1F7C4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A130);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CHSExtensionIdentity.isEqual(_:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  BOOL v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v19;
  _BYTE v20[24];
  uint64_t v21;

  sub_18FB1FA14(a1, (uint64_t)v20);
  if (!v21)
  {
    sub_18FB1F7C4((uint64_t)v20);
    goto LABEL_24;
  }
  type metadata accessor for CHSExtensionIdentity();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    v12 = 0;
    return v12 & 1;
  }
  if (v19 == v1)
  {

    v12 = 1;
  }
  else
  {
    v2 = &v1[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    v3 = *(_QWORD *)v2;
    v4 = *((_QWORD *)v2 + 1);
    v5 = &v19[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    v6 = v3 == *(_QWORD *)v5 && v4 == *((_QWORD *)v5 + 1);
    if (!v6 && (sub_18FBCD7C0() & 1) == 0)
      goto LABEL_23;
    v7 = &v1[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    v8 = *(_QWORD *)v7;
    v9 = *((_QWORD *)v7 + 1);
    v10 = &v19[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    v11 = *((_QWORD *)v10 + 1);
    if (v9)
    {
      if (!v11 || (v8 != *(_QWORD *)v10 || v9 != v11) && (sub_18FBCD7C0() & 1) == 0)
        goto LABEL_23;
    }
    else if (v11)
    {
LABEL_23:

      goto LABEL_24;
    }
    v13 = &v1[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    v14 = *(_QWORD *)v13;
    v15 = *((_QWORD *)v13 + 1);
    v16 = &v19[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    v17 = *((_QWORD *)v16 + 1);
    v12 = v17 == 0;
    if (!v15)
    {

      return v12 & 1;
    }
    if (!v17)
      goto LABEL_23;
    if (v14 == *(_QWORD *)v16 && v15 == v17)
    {

      v12 = 1;
    }
    else
    {
      v12 = sub_18FBCD7C0();

    }
  }
  return v12 & 1;
}

uint64_t sub_18FB1FA14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t type metadata accessor for CHSExtensionIdentity()
{
  unint64_t result;

  result = qword_1ECD9D5D0;
  if (!qword_1ECD9D5D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECD9D5D0);
  }
  return result;
}

void sub_18FB1FA98(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_18FBB5070();
  }
  else
  {
    if (v7 > v6)
    {
      sub_18FBB6640();
      goto LABEL_14;
    }
    sub_18FBB6FE0();
  }
  v8 = *v3;
  v9 = sub_18FBCD400();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_18FB1F254(0, (unint64_t *)&qword_1EE189E10);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_18FBCD40C();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_18FBCD7FC();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_18FBCD40C();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_18FB1FC4C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      if ((v12 + 1) >= 2)
        return v12;
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_18FB1FCC8 + 4 * byte_18FBD9720[v10]))();
  }
}

uint64_t TypedIdentifier.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DeviceScopedIdentity<>.extensionBundleIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *DeviceScopedIdentity<>.init(extensionBundleIdentifier:deviceID:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = result[1];
  *a4 = *result;
  a4[1] = v4;
  a4[2] = a2;
  a4[3] = a3;
  return result;
}

void sub_18FB1FF88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromWidgetFamily(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xD)
    return CFSTR("undefined");
  else
    return off_1E2A5B6E8[a1 - 1];
}

uint64_t CHSWidgetFamilyIsValid(unint64_t a1)
{
  return (a1 < 0xF) & (0x7C7Eu >> a1);
}

char *sub_18FB200A8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187F30);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_18FB201A0(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_18FB82B64(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_18FB82BD0(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

void __swiftcall CHSExtensionIdentity.init(tokenString:)(CHSExtensionIdentity_optional *__return_ptr retstr, Swift::String tokenString)
{
  uint64_t v2;

  Token.init(rawValue:)(tokenString);
  if ((*(_QWORD *)(v2 + 16) & 0x7FFFFFFFFFFFFFFELL) == 2)
    sub_18FB1B960((char *)&v2);
  else
    swift_bridgeObjectRelease();
}

uint64_t sub_18FB20368()
{
  return sub_18FB203A8(&qword_1EE189B48, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_18FBD586C);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE189D28);
}

uint64_t sub_18FB203A8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x19400954C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FB203E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
    return sub_18FBCD1D8();
  else
    return 0;
}

uint64_t sub_18FB20428()
{
  uint64_t v0;

  v0 = sub_18FB1E748();
  swift_bridgeObjectRetain();
  return v0;
}

void sub_18FB205BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_18FB20670(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB206E4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB20B84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB20C98()
{
  JUMPOUT(0x18FB20C84);
}

void sub_18FB20F88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB21168(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2138C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB21434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB215DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB21808(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB21B0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB21B88()
{
  JUMPOUT(0x18FB21B60);
}

void sub_18FB21B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30)
{
  void *v30;

  JUMPOUT(0x18FB21B68);
}

void sub_18FB21BA4()
{
  JUMPOUT(0x18FB21B68);
}

void sub_18FB21BAC()
{
  void *v0;
  uint64_t v1;

  JUMPOUT(0x18FB21B70);
}

void sub_18FB21BC0()
{
  JUMPOUT(0x18FB21B70);
}

void sub_18FB21BC8()
{
  JUMPOUT(0x18FB21B78);
}

void sub_18FB21BD0()
{
  JUMPOUT(0x18FB21B7CLL);
}

void sub_18FB21D8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_18FB21F4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_18FB21F90()
{
  JUMPOUT(0x18FB21F80);
}

void sub_18FB22094(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2217C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB22310(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB224C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB225E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB2269C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB22774(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB22880(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18FB22968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB22B08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB22B80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB22C40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB22D04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB22EE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB22FB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB23064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB23248(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB232B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB23370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB23544(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB239D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  void *v22;

  _Unwind_Resume(a1);
}

void sub_18FB23CF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v6;

  _Unwind_Resume(a1);
}

void sub_18FB23DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB23E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB23E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB23F88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB24084(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB24224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_18FB24338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB243F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  a10.super_class = (Class)CHSWidgetDescriptorProvider;
  -[_Unwind_Exception dealloc](&a10, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_18FB24504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void sub_18FB245BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2463C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB2473C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_18FB2481C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB24918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB24A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_18FB24A74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB24ACC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB24B88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_18FB24C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_18FB24CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB24D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB24EDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB24F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB250C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  id *v18;
  uint64_t v19;

  objc_destroyWeak(v18);
  objc_destroyWeak((id *)(v19 - 56));

  _Unwind_Resume(a1);
}

void sub_18FB252C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_18FB254E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  void *v9;
  va_list va;

  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FB255CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB25748(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB258BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB259B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB25BA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB25D6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB25DBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB25E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB25F20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB25F68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB26028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB2646C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB26550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_18FB2664C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB267E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB26F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_18FB2715C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2728C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FB27384(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB27444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FB274E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB27570(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB276FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB2775C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB277B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB27824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB278F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB27A74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_18FB27B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_18FB27CEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_18FB27F88(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB282C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB283D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_18FB284D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB2855C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB285B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB286A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB28788(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2880C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB289E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB28B40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB28C34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB28CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB292E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB2937C()
{
  JUMPOUT(0x18FB29320);
}

void sub_18FB29384()
{
  JUMPOUT(0x18FB29328);
}

void sub_18FB2938C()
{
  JUMPOUT(0x18FB29330);
}

void sub_18FB29394()
{
  JUMPOUT(0x18FB29338);
}

void sub_18FB2939C()
{
  JUMPOUT(0x18FB29340);
}

void sub_18FB293A4()
{
  JUMPOUT(0x18FB29348);
}

void sub_18FB293AC()
{
  JUMPOUT(0x18FB29350);
}

void sub_18FB293B4()
{
  JUMPOUT(0x18FB29358);
}

void sub_18FB293BC()
{
  JUMPOUT(0x18FB29360);
}

void sub_18FB293C4()
{
  JUMPOUT(0x18FB2936CLL);
}

void sub_18FB293CC()
{
  JUMPOUT(0x18FB29370);
}

void sub_18FB29564(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB296C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB29898(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB299D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB29A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB29AD4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB29BBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_18FB29C90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB29D7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18FB29E68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB29F74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_18FB2A000(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2A120(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2A180(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2A240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB2A35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB2A414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB2A750(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB2A8F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_18FB2A9FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t CHSDefaultTestFamilyMaskSingle()
{
  return 2;
}

uint64_t CHSDefaultTestFamilyMaskMultiple()
{
  return 14;
}

uint64_t CHSDefaultTestFamily()
{
  return 1;
}

BOOL CHSTintFilterStyleSupportsVibrancy(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 2;
}

void sub_18FB2AB6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2AC34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2AF30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB2AFA0()
{
  JUMPOUT(0x18FB2AF6CLL);
}

void sub_18FB2AFA8()
{
  JUMPOUT(0x18FB2AF74);
}

void sub_18FB2AFB0()
{
  JUMPOUT(0x18FB2AF7CLL);
}

void sub_18FB2AFB8()
{
  JUMPOUT(0x18FB2AF84);
}

void sub_18FB2AFC0()
{
  JUMPOUT(0x18FB2AF90);
}

void sub_18FB2AFC8()
{
  JUMPOUT(0x18FB2AF94);
}

void sub_18FB2B0D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2B210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB2B358(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2B464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2B4F0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2B664(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_18FB2B6D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2B750(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2B7F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id __plistableTypes()
{
  if (__plistableTypes_onceToken != -1)
    dispatch_once(&__plistableTypes_onceToken, &__block_literal_global_0);
  return (id)__plistableTypes___plistableTypes;
}

void sub_18FB2B8BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2B93C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2B9E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void ____plistableTypes_block_invoke()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v0 = objc_alloc(MEMORY[0x1E0C99E60]);
  v1 = objc_opt_class();
  v2 = objc_opt_class();
  v3 = objc_opt_class();
  v4 = objc_opt_class();
  v5 = objc_opt_class();
  v6 = objc_msgSend(v0, "initWithObjects:", v1, v2, v3, v4, v5, objc_opt_class(), 0);
  v7 = (void *)__plistableTypes___plistableTypes;
  __plistableTypes___plistableTypes = v6;

}

void sub_18FB2BB60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2BBFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2BC88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2BD28(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2BF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  void *v28;
  void *v29;

  _Unwind_Resume(a1);
}

void sub_18FB2C050(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2C148(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2C1D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromCHSWidgetBackgroundViewPolicy(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Include");
  else
    return off_1E2A5A610[a1 - 1];
}

void sub_18FB2C2E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2C408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  void *v8;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_18FB2C4C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2C560(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2C74C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_18FB2C86C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  a10.super_class = (Class)CHSWidgetExtensionProvider;
  -[_Unwind_Exception dealloc](&a10, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_18FB2C8DC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2CA10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB2CB8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB2CC3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2CCB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2CD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB2CE98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2CF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB2D074(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2D1A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2D30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  void *v15;
  uint64_t v16;
  va_list va;

  va_start(va, a15);

  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v16 - 96), 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void sub_18FB2D3D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB2D484(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2D5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  void *v26;
  void *v27;

  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_18FB2D698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB2D74C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB2D918(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB2D9F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB2DB98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

Class __getUMUserManagerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  if (!UserManagementLibraryCore_frameworkLibrary)
    UserManagementLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!UserManagementLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *UserManagementLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("CHSWidgetExtensionProvider.m"), 21, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("UMUserManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getUMUserManagerClass(void)_block_invoke");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("CHSWidgetExtensionProvider.m"), 22, CFSTR("Unable to find class %s"), "UMUserManager");

LABEL_8:
    __break(1u);
  }
  getUMUserManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18FB2DE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_0(uint64_t result, uint64_t a2, uint64_t a3, float a4)
{
  *(float *)a3 = a4;
  *(_QWORD *)(a3 + 4) = result;
  *(_WORD *)(a3 + 12) = 2114;
  *(_QWORD *)(a3 + 14) = a2;
  return result;
}

void OUTLINED_FUNCTION_1(void *a1@<X0>, const char *a2@<X3>, uint8_t *a3@<X4>, NSObject *a4@<X8>)
{
  _os_log_error_impl(a1, a4, OS_LOG_TYPE_ERROR, a2, a3, 0x16u);
}

const __CFString *NSStringFromCHSWidgetRenderingMode(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("unknown");
  else
    return off_1E2A5A720[a1];
}

void sub_18FB2DED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CHSWidgetEventServicePublisher;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_18FB2E0F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB2E1CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB2E3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  void *v26;
  void *v27;
  void *v28;

  _Block_object_dispose(&a15, 8);
  _Block_object_dispose(&a21, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void sub_18FB2E5D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18FB2E7A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  id *v3;
  id *v4;
  id *v5;
  uint64_t v6;
  id *v7;

  v7 = v4;
  objc_destroyWeak(v7);
  objc_destroyWeak(v5);
  objc_destroyWeak(v3);
  objc_destroyWeak((id *)(v6 - 72));

  _Unwind_Resume(a1);
}

void sub_18FB2E8F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2EA1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_sync_exit(v3);

  _Unwind_Resume(a1);
}

void sub_18FB2EB4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  objc_sync_exit(v2);

  _Unwind_Resume(a1);
}

void sub_18FB2EBE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);

  _Unwind_Resume(a1);
}

void sub_18FB2ED14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2EDCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB2F0BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2F160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB2F328(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB2F4F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2F6BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2F8B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2FAF4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2FC28(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2FDCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB2FE80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3001C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB300AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB302E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB30454(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB30630(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB306CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB30900(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB309A8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB30BDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB30C84(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB30D78(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB30EA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB30F70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3106C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3113C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3127C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

void sub_18FB3135C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB31594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB31658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_2(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x2Au);
}

void CHSFlushPowerlog()
{
  id v0;

  +[CHSChronoServicesConnection sharedInstance](CHSChronoServicesConnection, "sharedInstance");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "flushPowerlog");

}

void sub_18FB31750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

id CHSWidgetEnvironmentDataForBundleIdentifier(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  +[CHSChronoServicesConnection sharedInstance](CHSChronoServicesConnection, "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "widgetEnvironmentDataForBundleIdentifier:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_18FB317BC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB31B6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB31E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  void *v26;
  void *v27;

  _Unwind_Resume(a1);
}

void sub_18FB31F20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB32174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  void *v26;
  void *v27;

  _Unwind_Resume(a1);
}

void sub_18FB3222C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB32358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB32604(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB327FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB32AF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB32BEC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB32C38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB32CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB32DD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB32E20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB32EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB330B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB33108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB33160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB331B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB33210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB33268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB332D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB33364(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB33414(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB33570(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB33608(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB33784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_18FB33870(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB338C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB33968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB339D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB33A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB33C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB33D18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB33DE4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB33E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB33EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB33F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB33F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB33FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB34058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB3418C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB34258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB34334(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB34434(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB344B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB34588(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB3466C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB34788(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB3485C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB34A00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB34B04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB34B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_18FB34C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB34E18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB35170(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB351E4()
{
  JUMPOUT(0x18FB351D0);
}

void sub_18FB351EC()
{
  JUMPOUT(0x18FB351D8);
}

void sub_18FB35308(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB35354(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB35454(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB354B4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB35574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB35678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB35740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB3590C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB35ABC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB35B4C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB35C0C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB35D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB35E00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB35E60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB35F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

const __CFString *CHSScreenshotColorSchemeDescription(uint64_t a1)
{
  if (a1)
    return CFSTR("light");
  else
    return CFSTR("dark");
}

void sub_18FB362CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29)
{
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;

  _Unwind_Resume(a1);
}

void sub_18FB36444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB36560(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB36618(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB366A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_18FB36760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB367E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB36860(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB369E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB36BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB370A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB37138()
{
  JUMPOUT(0x18FB370E4);
}

void sub_18FB37140()
{
  JUMPOUT(0x18FB370ECLL);
}

void sub_18FB37148()
{
  JUMPOUT(0x18FB370F4);
}

void sub_18FB37150()
{
  JUMPOUT(0x18FB370FCLL);
}

void sub_18FB37158()
{
  JUMPOUT(0x18FB37104);
}

void sub_18FB37160()
{
  JUMPOUT(0x18FB3710CLL);
}

void sub_18FB37168()
{
  JUMPOUT(0x18FB37114);
}

void sub_18FB37170()
{
  JUMPOUT(0x18FB3711CLL);
}

void sub_18FB37178()
{
  JUMPOUT(0x18FB37128);
}

void sub_18FB37180()
{
  JUMPOUT(0x18FB3712CLL);
}

void sub_18FB37328(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB374C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB376F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB37934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB37BF8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB37C60()
{
  JUMPOUT(0x18FB37C34);
}

void sub_18FB37C68()
{
  JUMPOUT(0x18FB37C3CLL);
}

void sub_18FB37C70()
{
  JUMPOUT(0x18FB37C44);
}

void sub_18FB37C78()
{
  JUMPOUT(0x18FB37C50);
}

void sub_18FB37C80()
{
  JUMPOUT(0x18FB37C54);
}

void sub_18FB37D70(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB37E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB37FE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB380FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB381B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB382AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  _Unwind_Resume(a1);
}

void sub_18FB38324(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromCHSControlType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Unknown");
  else
    return off_1E2A5AB10[a1 - 1];
}

const __CFString *NSStringFromCHSControlContentType(uint64_t a1)
{
  if (a1 == 1)
    return CFSTR("Preview");
  else
    return CFSTR("Live");
}

const __CFString *NSStringFromCHSControlVisibility(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("NotVisible");
  if (a1 == 2)
    v1 = CFSTR("VisibleSettled");
  if (a1 == 1)
    return CFSTR("VisibleNotSettled");
  else
    return v1;
}

void sub_18FB3848C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB385B0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB38630(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB38734(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB387B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromCHSColorScheme(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("default");
  if (a1 == 1)
    v1 = CFSTR("light");
  if (a1 == 2)
    return CFSTR("dark");
  else
    return v1;
}

BOOL CHSColorSchemesIsValid(char a1)
{
  return (a1 & 3) != 0;
}

id NSStringFromCHSColorSchemes(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD *v4;
  uint8x8_t v5;
  int v6;
  unint64_t v7;
  _QWORD v9[2];
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  id v12;
  _QWORD *v13;
  _QWORD v14[4];
  char v15;

  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v14[3] = 0;
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB37A0]), "initWithString:", CFSTR("["));
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v10 = __NSStringFromCHSColorSchemes_block_invoke;
  v11 = &unk_1E2A5AB30;
  v13 = v14;
  v3 = v2;
  v12 = v3;
  v4 = v9;
  if (a1)
  {
    v15 = 0;
    v5 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v5.i16[0] = vaddlv_u8(v5);
    v6 = v5.i32[0];
    if (v5.i32[0])
    {
      v7 = 0;
      do
      {
        if (((1 << v7) & a1) != 0)
        {
          ((void (*)(_QWORD *))v10)(v4);
          if (v15)
            break;
          --v6;
        }
        if (v7 > 0x3E)
          break;
        ++v7;
      }
      while (v6 > 0);
    }
  }

  objc_msgSend(v3, "appendString:", CFSTR("]"));
  _Block_object_dispose(v14, 8);
  return v3;
}

void sub_18FB3898C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, ...)
{
  void *v8;
  va_list va;

  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromCHSControlSize(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("1x1");
  else
    return off_1E2A5AB50[a1 - 1];
}

void sub_18FB38B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_18FB38D4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB38E10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB38F78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB39010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB39220(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB39300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB394D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB39610(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB39704(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB397D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB398CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB399A0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB39A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_18FB39AF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB39BD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB39C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB39D90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromCHSWidgetHostActivationState(uint64_t a1)
{
  if (a1)
    return CFSTR("activated");
  else
    return CFSTR("deactivated");
}

void sub_18FB39E94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB39F0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB39F90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3A034(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB3A248(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB3A31C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3A3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;

  a9.super_class = (Class)CHSWidgetHost;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_18FB3A530(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3A878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_18FB3A940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB3A9A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB3A9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB3AA4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB3AB6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

uint64_t _CHSRestartChronod()
{
  return +[CHSChronoServicesConnection _debugRestartServer](CHSChronoServicesConnection, "_debugRestartServer");
}

void sub_18FB3AC78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB3ACD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB3AE40(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3B320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40)
{
  void *v40;
  void *v41;

  _Unwind_Resume(a1);
}

void sub_18FB3B4AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CHSChronoServicesConnection;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_18FB3B5F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void sub_18FB3B90C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3BB24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3BDD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3C0A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3C2F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3C438(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3C518(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3C614(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3C79C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3C8D0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3CA5C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3CC18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3CDF0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3CF4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3D104(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3D2CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3D45C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3D5F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3D77C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3D9E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,void *a31)
{
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id *v36;
  void *v37;
  uint64_t v38;

  objc_destroyWeak(v36);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);

  _Block_object_dispose((const void *)(v38 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18FB3DA74()
{
  JUMPOUT(0x18FB3DA48);
}

void sub_18FB3DBD8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB3DF78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB3E15C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB3E35C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3E51C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3E5A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB3E820(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3E9AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3EB44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3ECE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3EDB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3EFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  void *v28;
  void *v29;
  void *v30;

  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void sub_18FB3F130(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3F1A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB3F244(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3F310(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3F3F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3F558(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB3F6A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB3F898(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB3FB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_18FB3FE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36)
{
  void *v36;

  _Unwind_Resume(a1);
}

void sub_18FB40070(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB401B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB40328(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB40470(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB40600(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB40740(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB40858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

  _Unwind_Resume(a1);
}

void sub_18FB4099C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB40BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32)
{
  void *v32;

  _Unwind_Resume(a1);
}

void sub_18FB40DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB40FB8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB41158(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_18FB41270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB41340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB41424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB416E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  id *v17;
  void *v18;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_18FB418D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB41B0C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB41BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_18FB41DF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB41EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_18FB420D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4215C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB4235C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB423E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_4_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_18FB425C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB427DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24)
{
  void *v24;
  void *v25;

  _Unwind_Resume(a1);
}

void sub_18FB428B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB42A08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18FB42B58(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB42CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_18FB42D58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB42DCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB42E64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB42F6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB42FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB43098(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB431B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB43328(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_18FB433C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB43450(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB434DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB43580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB43688(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB43884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB439AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB43AAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB43BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_18FB43C30(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB43D20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB43DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB43E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB43F60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB44130(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB44274(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB44370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_18FB443FC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB4453C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB44614(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB446F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB447D8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB44850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB4496C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB44AA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB44C74(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB44D30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB44E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

void sub_18FB451DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB45254()
{
  JUMPOUT(0x18FB45218);
}

void sub_18FB4525C()
{
  JUMPOUT(0x18FB45220);
}

void sub_18FB45264()
{
  JUMPOUT(0x18FB45228);
}

void sub_18FB4526C()
{
  JUMPOUT(0x18FB45230);
}

void sub_18FB45274()
{
  JUMPOUT(0x18FB45238);
}

void sub_18FB4527C()
{
  JUMPOUT(0x18FB45244);
}

void sub_18FB45284()
{
  JUMPOUT(0x18FB45248);
}

void sub_18FB453EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB45440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB45494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB45508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB455E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB45700(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4587C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB45958(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB45C64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB45D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB45E0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB45E98(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4601C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB46104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_18FB461D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB46310(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB46458(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  MEMORY[0x194008D84](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable(apple::aiml::flatbuffers2::FlatBufferBuilder *this, int a2)
{
  uint64_t v4;
  unint64_t v5;
  void *v6;
  unsigned __int16 v7;
  unsigned __int16 *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int *v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  size_t v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  _DWORD *v22;

  if (!*((_BYTE *)this + 70))
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  v4 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)this, 0);
  if ((unsigned __int16)(*((_WORD *)this + 34) + 2) <= 4u)
    v5 = 4;
  else
    v5 = (unsigned __int16)(*((_WORD *)this + 34) + 2);
  *((_WORD *)this + 34) = v5;
  v6 = (void *)(*((_QWORD *)this + 6) - apple::aiml::flatbuffers2::vector_downward::ensure_space(this, v5));
  *((_QWORD *)this + 6) = v6;
  bzero(v6, v5);
  v7 = v4 - a2;
  if ((v4 - a2) >= 0x10000)
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  v8 = (unsigned __int16 *)*((_QWORD *)this + 6);
  if (!v8)
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  v8[1] = v7;
  *v8 = *((_WORD *)this + 34);
  v9 = *((_QWORD *)this + 7);
  if (!v9)
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  v10 = *((unsigned int *)this + 16);
  v11 = v9 - 8 * v10;
  if ((_DWORD)v10)
  {
    v12 = (int *)(v9 - 8 * v10);
    do
    {
      v13 = *((unsigned __int16 *)v12 + 2);
      if (*(unsigned __int16 *)((char *)v8 + v13))
        apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
      v14 = *v12;
      v12 += 2;
      *(unsigned __int16 *)((char *)v8 + v13) = v4 - v14;
    }
    while ((unint64_t)v12 < v9);
  }
  *((_QWORD *)this + 7) = v11;
  *((_DWORD *)this + 16) = 0;
  *((_WORD *)this + 34) = 0;
  v16 = *((_QWORD *)this + 4);
  v15 = *((_QWORD *)this + 5);
  v17 = v16 - (_DWORD)v8 + v15;
  if (*((_BYTE *)this + 81))
  {
    if (!v15)
      apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
    if (v15 < v11)
    {
      v18 = *v8;
      v19 = v15 + v16;
      v20 = (unsigned int *)*((_QWORD *)this + 5);
      while (1)
      {
        v21 = *v20;
        if ((_DWORD)v18 == *(unsigned __int16 *)(v19 - v21) && !memcmp((const void *)(v19 - v21), v8, v18))
          break;
        if ((unint64_t)++v20 >= v11)
        {
          v17 = v16 - (_DWORD)v8 + v15;
          goto LABEL_21;
        }
      }
      v8 = (unsigned __int16 *)((char *)v8 + (v16 - (_DWORD)v8 + v15 - v4));
      *((_QWORD *)this + 6) = v8;
      v17 = v21;
    }
  }
LABEL_21:
  if (v17 == (_DWORD)v16 + (_DWORD)v15 - (_DWORD)v8)
  {
    apple::aiml::flatbuffers2::vector_downward::ensure_space(this, 4uLL);
    v22 = (_DWORD *)*((_QWORD *)this + 7);
    *v22 = v17;
    *((_QWORD *)this + 7) = v22 + 1;
    v16 = *((_QWORD *)this + 4);
    v15 = *((_QWORD *)this + 5);
  }
  *(_DWORD *)(v15 + v16 - v4) = v17 - v4;
  *((_BYTE *)this + 70) = 0;
  return v4;
}

void sub_18FB46828(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_18FB46A64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB46C94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB46E38(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::CreateVector<apple::aiml::flatbuffers2::Offset<void>>(apple::aiml::flatbuffers2::FlatBufferBuilder *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  _BYTE *v9;
  void *v10;
  uint64_t v11;
  void *__p;
  _BYTE *v14;
  uint64_t v15;

  std::vector<apple::aiml::flatbuffers2::Offset<void>>::vector(&__p, a2);
  if (a2)
  {
    v6 = 0;
    do
    {
      v15 = v6;
      v7 = *(_QWORD *)(a3 + 24);
      if (!v7)
        std::__throw_bad_function_call[abi:ne180100]();
      v8 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(_QWORD *)v7 + 48))(v7, &v15);
      v9 = __p;
      *((_DWORD *)__p + v6++) = v8;
    }
    while (a2 != v6);
  }
  else
  {
    v9 = __p;
  }
  if (v14 == v9)
    v10 = &apple::aiml::flatbuffers2::data<apple::aiml::flatbuffers2::Offset<void>,std::allocator<apple::aiml::flatbuffers2::Offset<void>>>(std::vector<apple::aiml::flatbuffers2::Offset<void>> const&)::t;
  else
    v10 = v9;
  v11 = apple::aiml::flatbuffers2::FlatBufferBuilder::CreateVector<void>(a1, (uint64_t)v10, (v14 - v9) >> 2);
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
  return v11;
}

void sub_18FB4705C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_18FB472CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

double apple::aiml::flatbuffers2::FlatBufferBuilder::Release@<D0>(apple::aiml::flatbuffers2::FlatBufferBuilder *this@<X0>, uint64_t a2@<X8>)
{
  if (!*((_BYTE *)this + 71))
    apple::aiml::flatbuffers2::FlatBufferBuilder::Release();
  return apple::aiml::flatbuffers2::vector_downward::release(this, a2);
}

void sub_18FB47538(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::GetBufferPointer(apple::aiml::flatbuffers2::FlatBufferBuilder *this)
{
  uint64_t result;

  if (!*((_BYTE *)this + 71))
    apple::aiml::flatbuffers2::FlatBufferBuilder::Release();
  result = *((_QWORD *)this + 6);
  if (!result)
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable();
  return result;
}

void sub_18FB47630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB47700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB477B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

__CFString *makeNSString(NSString *a1, AFBBufRef *a2, const char *a3)
{
  NSString *v5;
  AFBBufRef *v6;
  __CFString *v7;
  uint64_t v9;
  id v10;

  v5 = a1;
  v6 = a2;
  -[AFBBufRef retainBuf](v6, "retainBuf");
  v7 = (__CFString *)CFStringCreateWithCStringNoCopy(0, a3, 0x8000100u, (CFAllocatorRef)-[AFBBufRef deallocator](v6, "deallocator"));
  if (!v7)
  {
    -[AFBBufRef releaseBuf](v6, "releaseBuf");
    v9 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithFormat:", CFSTR("%@ unable to decode null-terminated string as UTF-8"), v5);
    objc_msgSend(MEMORY[0x1E0C99DA0], "exceptionWithName:reason:userInfo:", *MEMORY[0x1E0CFCEC0], v9, 0);
    v10 = (id)objc_claimAutoreleasedReturnValue();
    objc_exception_throw(v10);
  }

  return v7;
}

void sub_18FB47898(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB479BC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB47A54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB47B60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB47BF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB47D04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB47D9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB47EA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB48220(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB48398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB48424(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB485A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB487B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB48980(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB48AE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  MEMORY[0x194008D84](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

void sub_18FB48C6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB48E98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB490C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB492F0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB49520(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB496C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB49A78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB49CC8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB49D98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB49E68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB49F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB4A008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB4A128(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4A234(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4A438(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4A800(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB4A8FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB4AA4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB4AB2C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4ACB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4AE08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4AF58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4B134(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB4B288(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  MEMORY[0x194008D84](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

void sub_18FB4B414(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4B640(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4B800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;

  if (a2 == 1)
  {
    v12 = __cxa_begin_catch(exception_object);
    a10 = *MEMORY[0x1E0CB2D50];
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", (*(uint64_t (**)(void *))(*(_QWORD *)v12 + 16))(v12));
    a11 = (uint64_t)v13;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &a11, &a10, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = objc_alloc(MEMORY[0x1E0CB35C8]);
    v16 = (void *)objc_msgSend(v15, "initWithDomain:code:userInfo:", *MEMORY[0x1E0CFCEB0], 3, v14);
    objc_msgSend(*(id *)(v11 + 8), "setError:", v16);

    __cxa_end_catch();
    JUMPOUT(0x18FB4B7D0);
  }
  _Unwind_Resume(exception_object);
}

void sub_18FB4B9A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;

  if (a2 == 1)
  {
    v12 = __cxa_begin_catch(exception_object);
    a10 = *MEMORY[0x1E0CB2D50];
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", (*(uint64_t (**)(void *))(*(_QWORD *)v12 + 16))(v12));
    a11 = (uint64_t)v13;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &a11, &a10, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = objc_alloc(MEMORY[0x1E0CB35C8]);
    v16 = (void *)objc_msgSend(v15, "initWithDomain:code:userInfo:", *MEMORY[0x1E0CFCEB0], 3, v14);
    objc_msgSend(*(id *)(v11 + 8), "setError:", v16);

    __cxa_end_catch();
    JUMPOUT(0x18FB4B970);
  }
  _Unwind_Resume(exception_object);
}

void sub_18FB4BB48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;

  if (a2 == 1)
  {
    v12 = __cxa_begin_catch(exception_object);
    a10 = *MEMORY[0x1E0CB2D50];
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", (*(uint64_t (**)(void *))(*(_QWORD *)v12 + 16))(v12));
    a11 = (uint64_t)v13;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &a11, &a10, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = objc_alloc(MEMORY[0x1E0CB35C8]);
    v16 = (void *)objc_msgSend(v15, "initWithDomain:code:userInfo:", *MEMORY[0x1E0CFCEB0], 3, v14);
    objc_msgSend(*(id *)(v11 + 8), "setError:", v16);

    __cxa_end_catch();
    JUMPOUT(0x18FB4BB14);
  }
  _Unwind_Resume(exception_object);
}

void sub_18FB4BD54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4BF84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4C128(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4C4DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4C72C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4C7FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB4C8CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB4CA08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB4CAC0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4CBCC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4CE6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB4CF14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB4CFA0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4D124(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4D1EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4D274(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4D3AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB4D4F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  MEMORY[0x194008D84](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

void sub_18FB4D680(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4D8AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4DADC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4DC80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4E034(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4E284(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4E354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB4E424(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB4E57C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4E69C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4E818(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4E8F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4EA14(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4EB90(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4EC6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4ED8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4EF08(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4F1D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB4F2F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB4F390(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4F514(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4F608(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB4F7A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB4F8F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  MEMORY[0x194008D84](v3, 0x1020C403A5D3213);

  _Unwind_Resume(a1);
}

void sub_18FB4FA18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;

  if (a2 == 1)
  {
    v12 = __cxa_begin_catch(exception_object);
    a10 = *MEMORY[0x1E0CB2D50];
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", (*(uint64_t (**)(void *))(*(_QWORD *)v12 + 16))(v12));
    a11 = (uint64_t)v13;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &a11, &a10, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    v15 = objc_alloc(MEMORY[0x1E0CB35C8]);
    v16 = (void *)objc_msgSend(v15, "initWithDomain:code:userInfo:", *MEMORY[0x1E0CFCEB0], 3, v14);
    objc_msgSend(*(id *)(v11 + 8), "setError:", v16);

    __cxa_end_catch();
    JUMPOUT(0x18FB4F9E8);
  }
  _Unwind_Resume(exception_object);
}

void sub_18FB4FC24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB4FE50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5007C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB502AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB50450(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB50804(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB50A54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB50B48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB50C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB50CE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested(uint64_t this)
{
  if (*(_BYTE *)(this + 70))
    apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested();
  if (*(_DWORD *)(this + 64))
    apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested();
  return this;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>(uint64_t a1, int a2)
{
  _DWORD *v4;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 4uLL);
  v4 = (_DWORD *)(*(_QWORD *)(a1 + 48)
                - apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)a1, 4uLL));
  *(_QWORD *)(a1 + 48) = v4;
  *v4 = a2;
  return (*(_DWORD *)(a1 + 32) - (_DWORD)v4 + *(_DWORD *)(a1 + 40));
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::Align(apple::aiml::flatbuffers2::FlatBufferBuilder *this, unint64_t a2)
{
  if (*((_QWORD *)this + 9) < a2)
    *((_QWORD *)this + 9) = a2;
  return apple::aiml::flatbuffers2::vector_downward::fill(this, (a2 - 1) & -(uint64_t)(*((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10)));
}

unint64_t apple::aiml::flatbuffers2::vector_downward::fill(apple::aiml::flatbuffers2::vector_downward *this, unint64_t a2)
{
  unint64_t result;
  uint64_t v5;

  result = apple::aiml::flatbuffers2::vector_downward::ensure_space(this, a2);
  *((_QWORD *)this + 6) -= result;
  if (a2)
  {
    v5 = 0;
    do
      *(_BYTE *)(*((_QWORD *)this + 6) + v5++) = 0;
    while (a2 != v5);
  }
  return result;
}

unint64_t apple::aiml::flatbuffers2::vector_downward::ensure_space(apple::aiml::flatbuffers2::vector_downward *this, unint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v5;

  v2 = *((_QWORD *)this + 6);
  v3 = *((_QWORD *)this + 7);
  if (v2 < v3 || (v5 = *((_QWORD *)this + 5), v3 < v5))
    apple::aiml::flatbuffers2::vector_downward::ensure_space();
  if (v2 - v3 < a2)
  {
    apple::aiml::flatbuffers2::vector_downward::reallocate(this, a2);
    v5 = *((_QWORD *)this + 5);
    v2 = *((_QWORD *)this + 6);
  }
  if ((*((_DWORD *)this + 8) - v2 + v5) >= 0x7FFFFFFF)
    apple::aiml::flatbuffers2::vector_downward::ensure_space();
  return a2;
}

uint64_t apple::aiml::flatbuffers2::vector_downward::reallocate(apple::aiml::flatbuffers2::vector_downward *this, unint64_t a2)
{
  unsigned __int8 *v4;
  unint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  void *v13;

  v5 = *((_QWORD *)this + 4);
  v4 = (unsigned __int8 *)*((_QWORD *)this + 5);
  v6 = &v4[v5 - *((_QWORD *)this + 6)];
  v7 = *((_QWORD *)this + 7) - (_QWORD)v4;
  if (v5)
    v8 = v5 >> 1;
  else
    v8 = *((_QWORD *)this + 2);
  if (v8 > a2)
    a2 = v8;
  v9 = (*((_QWORD *)this + 3) + v5 + a2 - 1) & -*((_QWORD *)this + 3);
  *((_QWORD *)this + 4) = v9;
  v10 = *(_QWORD *)this;
  if (v4)
  {
    if (v10)
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
    }
    else
    {
      v13 = &unk_1E2A593F8;
      result = (uint64_t)apple::aiml::flatbuffers2::Allocator::reallocate_downward((apple::aiml::flatbuffers2::Allocator *)&v13, v4, v5, v9, v6, v7);
    }
  }
  else if (v10)
  {
    result = (*(uint64_t (**)(uint64_t, unint64_t))(*(_QWORD *)v10 + 16))(v10, v9);
  }
  else
  {
    result = operator new[]();
  }
  v12 = result + *((_QWORD *)this + 4) - v6;
  *((_QWORD *)this + 5) = result;
  *((_QWORD *)this + 6) = v12;
  *((_QWORD *)this + 7) = result + v7;
  return result;
}

char *apple::aiml::flatbuffers2::Allocator::reallocate_downward(apple::aiml::flatbuffers2::Allocator *this, unsigned __int8 *a2, unint64_t a3, unint64_t a4, size_t a5, size_t a6)
{
  char *v12;

  if (a4 <= a3)
    apple::aiml::flatbuffers2::Allocator::reallocate_downward();
  v12 = (char *)(*(uint64_t (**)(apple::aiml::flatbuffers2::Allocator *, unint64_t))(*(_QWORD *)this + 16))(this, a4);
  memcpy(&v12[a4 - a5], &a2[a3 - a5], a5);
  memcpy(v12, a2, a6);
  (*(void (**)(apple::aiml::flatbuffers2::Allocator *, unsigned __int8 *, unint64_t))(*(_QWORD *)this + 24))(this, a2, a3);
  return v12;
}

void apple::aiml::flatbuffers2::DefaultAllocator::~DefaultAllocator(apple::aiml::flatbuffers2::DefaultAllocator *this)
{
  JUMPOUT(0x194008D84);
}

uint64_t apple::aiml::flatbuffers2::DefaultAllocator::allocate(apple::aiml::flatbuffers2::DefaultAllocator *this)
{
  return operator new[]();
}

void apple::aiml::flatbuffers2::DefaultAllocator::deallocate(apple::aiml::flatbuffers2::DefaultAllocator *this, unsigned __int8 *a2)
{
  if (a2)
    JUMPOUT(0x194008D6CLL);
}

apple::aiml::flatbuffers2::FlatBufferBuilder *apple::aiml::flatbuffers2::FlatBufferBuilder::AddOffset<apple::aiml::flatbuffers2::Vector<unsigned char>>(apple::aiml::flatbuffers2::FlatBufferBuilder *result, uint64_t a2, unsigned int a3)
{
  unint64_t v4;
  int v5;

  if (a3)
  {
    v4 = (unint64_t)result;
    v5 = apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo(result, a3);
    return (apple::aiml::flatbuffers2::FlatBufferBuilder *)apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned int>(v4, a2, v5, 0);
  }
  return result;
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned int>(unint64_t result, uint64_t a2, int a3, int a4)
{
  unint64_t v5;
  unsigned int v6;
  unsigned int v7;

  v5 = result;
  if (a3 != a4 || *(_BYTE *)(result + 80))
  {
    v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>(result, a3);
    result = apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)v5, 8uLL);
    **(_QWORD **)(v5 + 56) = v6 | (unint64_t)(a2 << 32);
    *(_QWORD *)(v5 + 56) += 8;
    ++*(_DWORD *)(v5 + 64);
    v7 = *(unsigned __int16 *)(v5 + 68);
    if (v7 <= a2)
      LOWORD(v7) = a2;
    *(_WORD *)(v5 + 68) = v7;
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo(apple::aiml::flatbuffers2::FlatBufferBuilder *this, unsigned int a2)
{
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align(this, 4uLL);
  if (!a2
    || (v4 = *((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10), v5 = v4 >= a2, v6 = v4 - a2, !v5))
  {
    apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo();
  }
  return v6 + 4;
}

double apple::aiml::flatbuffers2::vector_downward::release@<D0>(apple::aiml::flatbuffers2::vector_downward *this@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v2 = *((unsigned __int8 *)this + 8);
  v3 = *((_QWORD *)this + 4);
  v4 = *((_QWORD *)this + 5);
  v5 = *((_QWORD *)this + 6);
  *(_QWORD *)a2 = *(_QWORD *)this;
  *(_BYTE *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = (v3 + v4 - v5);
  if (v2)
  {
    *(_QWORD *)this = 0;
    *((_BYTE *)this + 8) = 0;
  }
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return result;
}

void apple::aiml::flatbuffers2::DetachedBuffer::~DetachedBuffer(apple::aiml::flatbuffers2::DetachedBuffer *this)
{
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;

  v3 = (_OWORD *)((char *)this + 16);
  v2 = *((_QWORD *)this + 2);
  if (v2)
  {
    v4 = *(_QWORD *)this;
    if (*(_QWORD *)this)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 24))(v4);
    else
      MEMORY[0x194008D6C](v2, 0x1000C8077774924);
  }
  if (*((_BYTE *)this + 8) && *(_QWORD *)this)
    (*(void (**)(_QWORD))(**(_QWORD **)this + 8))(*(_QWORD *)this);
  *(_QWORD *)this = 0;
  *((_BYTE *)this + 8) = 0;
  *v3 = 0u;
  v3[1] = 0u;
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<unsigned char>(unint64_t result, uint64_t a2, int a3, int a4)
{
  unint64_t v5;
  unsigned int v6;
  unsigned int v7;

  v5 = result;
  if (a3 != a4 || *(_BYTE *)(result + 80))
  {
    v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned char>(result, a3);
    result = apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)v5, 8uLL);
    **(_QWORD **)(v5 + 56) = v6 | (unint64_t)(a2 << 32);
    *(_QWORD *)(v5 + 56) += 8;
    ++*(_DWORD *)(v5 + 64);
    v7 = *(unsigned __int16 *)(v5 + 68);
    if (v7 <= a2)
      LOWORD(v7) = a2;
    *(_WORD *)(v5 + 68) = v7;
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<unsigned char>(uint64_t a1, char a2)
{
  _BYTE *v4;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 1uLL);
  v4 = (_BYTE *)(*(_QWORD *)(a1 + 48)
               - apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)a1, 1uLL));
  *(_QWORD *)(a1 + 48) = v4;
  *v4 = a2;
  return (*(_DWORD *)(a1 + 32) - *(_DWORD *)(a1 + 48) + *(_DWORD *)(a1 + 40));
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<double>(unint64_t result, uint64_t a2, double a3, double a4)
{
  unint64_t v5;
  unsigned int v6;
  unsigned int v7;

  v5 = result;
  if (a3 != a4 || *(_BYTE *)(result + 80))
  {
    v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<double>(result, a3);
    result = apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)v5, 8uLL);
    **(_QWORD **)(v5 + 56) = v6 | (unint64_t)(a2 << 32);
    *(_QWORD *)(v5 + 56) += 8;
    ++*(_DWORD *)(v5 + 64);
    v7 = *(unsigned __int16 *)(v5 + 68);
    if (v7 <= a2)
      LOWORD(v7) = a2;
    *(_WORD *)(v5 + 68) = v7;
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<double>(uint64_t a1, double a2)
{
  double *v4;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 8uLL);
  v4 = (double *)(*(_QWORD *)(a1 + 48)
                - apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)a1, 8uLL));
  *(_QWORD *)(a1 + 48) = v4;
  *v4 = a2;
  return (*(_DWORD *)(a1 + 32) - (_DWORD)v4 + *(_DWORD *)(a1 + 40));
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::AddElement<long long>(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  unsigned int v6;
  unsigned int v7;

  v5 = result;
  if (a3 != a4 || *(_BYTE *)(result + 80))
  {
    v6 = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<long long>(result, a3);
    result = apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)v5, 8uLL);
    **(_QWORD **)(v5 + 56) = v6 | (unint64_t)(a2 << 32);
    *(_QWORD *)(v5 + 56) += 8;
    ++*(_DWORD *)(v5 + 64);
    v7 = *(unsigned __int16 *)(v5 + 68);
    if (v7 <= a2)
      LOWORD(v7) = a2;
    *(_WORD *)(v5 + 68) = v7;
  }
  return result;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<long long>(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  apple::aiml::flatbuffers2::FlatBufferBuilder::Align((apple::aiml::flatbuffers2::FlatBufferBuilder *)a1, 8uLL);
  v4 = (_QWORD *)(*(_QWORD *)(a1 + 48)
                - apple::aiml::flatbuffers2::vector_downward::ensure_space((apple::aiml::flatbuffers2::vector_downward *)a1, 8uLL));
  *(_QWORD *)(a1 + 48) = v4;
  *v4 = a2;
  return (*(_DWORD *)(a1 + 32) - (_DWORD)v4 + *(_DWORD *)(a1 + 40));
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<RelevanceCacheBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  unsigned int v5;

  return (!a2 || *((_QWORD *)this + 1) >= 8uLL && !strncmp((const char *)(*(_QWORD *)this + a3 + 4), a2, 4uLL))
      && (v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3)) != 0
      && RelevanceCacheBuf::Verify((RelevanceCacheBuf *)(*(_QWORD *)this + a3 + v5), this);
}

uint64_t apple::aiml::flatbuffers2::Verifier::VerifyOffset(apple::aiml::flatbuffers2::Verifier *this, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;

  if ((a2 & 3) != 0 && *((_BYTE *)this + 40))
    return 0;
  v2 = *((_QWORD *)this + 1);
  if (v2 < 5 || v2 - 4 < a2)
    return 0;
  v4 = *(unsigned int *)(*(_QWORD *)this + a2);
  if ((int)v4 < 1)
    return 0;
  if (v2 - 1 >= v4 + a2)
    return v4;
  return 0;
}

BOOL RelevanceCacheBuf::Verify(RelevanceCacheBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  RelevanceCacheBuf *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  RelevanceCacheBuf *v9;
  uint64_t v10;
  RelevanceCacheBuf *v11;
  uint64_t v12;
  WidgetRelevancePropertiesBuf *v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 4u);
    if (result)
    {
      v5 = &this[-*(int *)this->var0];
      if (*(unsigned __int16 *)v5->var0 < 5u
        || (v6 = *(unsigned __int16 *)v5[4].var0) == 0
        || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v6 + *(unsigned int *)this[v6].var0].var0, 1uLL, 0)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
        if (result)
        {
          v7 = *(int *)this->var0;
          v8 = -v7;
          v9 = &this[-v7];
          if (*(unsigned __int16 *)v9->var0 >= 7u)
          {
            v10 = *(unsigned __int16 *)v9[6].var0;
            if (v10)
            {
              result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v10 + *(unsigned int *)this[v10].var0].var0, 4uLL, 0);
              if (!result)
                return result;
              v8 = -(uint64_t)*(int *)this->var0;
            }
          }
          v11 = &this[v8];
          if (*(unsigned __int16 *)v11->var0 >= 7u && (v12 = *(unsigned __int16 *)v11[6].var0) != 0)
            v13 = (WidgetRelevancePropertiesBuf *)&this[v12 + *(unsigned int *)this[v12].var0];
          else
            v13 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<WidgetRelevancePropertiesBuf>(a2, v13);
          if (result)
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Table::VerifyOffset(apple::aiml::flatbuffers2::Table *this, const apple::aiml::flatbuffers2::Verifier *a2, unsigned int a3)
{
  unsigned __int16 *v3;
  uint64_t v4;

  v3 = (unsigned __int16 *)((char *)this - *(int *)this);
  return *v3 <= a3
      || (v4 = *(unsigned __int16 *)((char *)v3 + a3)) == 0
      || apple::aiml::flatbuffers2::Verifier::VerifyOffset(a2, (unint64_t)this + v4 - *(_QWORD *)a2) != 0;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<WidgetRelevancePropertiesBuf>(apple::aiml::flatbuffers2::Verifier *a1, WidgetRelevancePropertiesBuf *a2)
{
  unint64_t v4;
  WidgetRelevancePropertiesBuf *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*(_DWORD *)a2->var0)
    return 1;
  v4 = 0;
  v5 = a2 + 4;
  do
  {
    result = WidgetRelevancePropertiesBuf::Verify(&v5[*(unsigned int *)v5->var0], a1);
    if (!result)
      break;
    ++v4;
    v5 += 4;
  }
  while (v4 < *(unsigned int *)a2->var0);
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyTableStart(apple::aiml::flatbuffers2::Verifier *this, const unsigned __int8 *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v14;

  v2 = *(_QWORD *)this;
  v3 = (unint64_t)&a2[-*(_QWORD *)this];
  if ((v3 & 3) != 0 && *((_BYTE *)this + 40))
    return 0;
  v4 = *((_QWORD *)this + 1);
  v5 = v4 >= 5 && v4 - 4 >= v3;
  if (!v5)
    return 0;
  v6 = *(int *)a2;
  v7 = *((_DWORD *)this + 5);
  v8 = *((_DWORD *)this + 4) + 1;
  *((_DWORD *)this + 4) = v8;
  v9 = *((_DWORD *)this + 6) + 1;
  *((_DWORD *)this + 6) = v9;
  if (v8 > v7 || v9 > *((_DWORD *)this + 7))
    return 0;
  v10 = v3 - v6;
  if ((v10 & 1) != 0)
  {
    v11 = 0;
    if (*((_BYTE *)this + 40) || v4 - 2 < v10)
      return v11;
  }
  else if (v4 - 2 < v10)
  {
    return 0;
  }
  v12 = *(unsigned __int16 *)(v2 + v10);
  if ((v12 & 1) != 0 && *((_BYTE *)this + 40))
    return 0;
  v5 = v4 >= v12;
  v14 = v4 - v12;
  return v14 != 0 && v5 && v14 >= v10;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(apple::aiml::flatbuffers2::Verifier *this, const unsigned __int8 *a2, unint64_t a3, unint64_t *a4)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  BOOL v9;
  unint64_t v10;

  v4 = (unint64_t)&a2[-*(_QWORD *)this];
  if ((v4 & 3) != 0 && *((_BYTE *)this + 40))
    return 0;
  v5 = *((_QWORD *)this + 1);
  if (v5 < 5 || v5 - 4 < v4)
    return 0;
  v7 = *(unsigned int *)a2;
  if (0x7FFFFFFF / a3 <= v7)
    return 0;
  v8 = v7 * a3 + 4;
  if (a4)
  {
    *a4 = v8 + v4;
    v5 = *((_QWORD *)this + 1);
  }
  v9 = v5 > v8;
  v10 = v5 - v8;
  return v9 && v10 >= v4;
}

BOOL WidgetRelevancePropertiesBuf::Verify(WidgetRelevancePropertiesBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  WidgetRelevancePropertiesBuf *v5;
  uint64_t v6;
  WidgetRelevancePropertiesBuf *v7;
  uint64_t v8;
  WidgetRelevancePropertiesBuf *v9;
  WidgetRelevancePropertiesBuf *v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  WidgetRelevancePropertiesBuf *v18;
  uint64_t v19;
  WidgetRelevancePropertiesBuf *v20;
  uint64_t v21;
  WidgetRelevanceBuf *v22;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 4u);
    if (result)
    {
      v5 = &this[-*(int *)this->var0];
      if (*(unsigned __int16 *)v5->var0 < 5u
        || (v6 = *(unsigned __int16 *)v5[4].var0) == 0
        || (result = ExtensionIdentityBuf::Verify((ExtensionIdentityBuf *)&this[v6 + *(unsigned int *)this[v6].var0], a2)))
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
        if (result)
        {
          v7 = &this[-*(int *)this->var0];
          if (*(unsigned __int16 *)v7->var0 >= 7u && (v8 = *(unsigned __int16 *)v7[6].var0) != 0)
            v9 = &this[v8 + *(unsigned int *)this[v8].var0];
          else
            v9 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v9->var0);
          if (result)
          {
            v10 = &this[-*(int *)this->var0];
            v11 = *(unsigned __int16 *)v10->var0;
            if (v11 < 9
              || (!*(_WORD *)v10[8].var0
               || (result = 0, v12 = *((_QWORD *)a2 + 1), v12 >= 2)
               && v12 - 1 >= (unint64_t)this[*(unsigned __int16 *)v10[8].var0 - *(_QWORD *)a2].var0)
              && (v11 < 0xB
               || (!*(_WORD *)v10[10].var0
                || (result = 0, v13 = *((_QWORD *)a2 + 1), v13 >= 2)
                && v13 - 1 >= (unint64_t)this[*(unsigned __int16 *)v10[10].var0 - *(_QWORD *)a2].var0)
               && (v11 < 0xD
                || (v14 = *(unsigned __int16 *)v10[12].var0) == 0
                || (result = 0, v15 = *((_QWORD *)a2 + 1), v15 >= 9)
                && v15 - 8 >= (unint64_t)this[v14 - *(_QWORD *)a2].var0)))
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 0xEu);
              if (result)
              {
                v16 = *(int *)this->var0;
                v17 = -v16;
                v18 = &this[-v16];
                if (*(unsigned __int16 *)v18->var0 >= 0xFu)
                {
                  v19 = *(unsigned __int16 *)v18[14].var0;
                  if (v19)
                  {
                    result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v19 + *(unsigned int *)this[v19].var0].var0, 4uLL, 0);
                    if (!result)
                      return result;
                    v17 = -(uint64_t)*(int *)this->var0;
                  }
                }
                v20 = &this[v17];
                if (*(unsigned __int16 *)v20->var0 >= 0xFu && (v21 = *(unsigned __int16 *)v20[14].var0) != 0)
                  v22 = (WidgetRelevanceBuf *)&this[v21 + *(unsigned int *)this[v21].var0];
                else
                  v22 = 0;
                result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<WidgetRelevanceBuf>(a2, v22);
                if (result)
                {
                  --*((_DWORD *)a2 + 4);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyString(apple::aiml::flatbuffers2::Verifier *a1, const unsigned __int8 *a2)
{
  _BOOL8 result;
  unint64_t v4;
  unint64_t v6;

  if (!a2)
    return 1;
  v6 = 0;
  result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a1, a2, 1uLL, &v6);
  if (result)
  {
    v4 = *((_QWORD *)a1 + 1);
    return v4 >= 2 && v4 - 1 >= v6 && *(_BYTE *)(*(_QWORD *)a1 + v6) == 0;
  }
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyVectorOfTables<WidgetRelevanceBuf>(apple::aiml::flatbuffers2::Verifier *a1, WidgetRelevanceBuf *a2)
{
  unint64_t v4;
  WidgetRelevanceBuf *v5;
  _BOOL8 result;

  if (!a2)
    return 1;
  if (!*(_DWORD *)a2->var0)
    return 1;
  v4 = 0;
  v5 = a2 + 4;
  do
  {
    result = WidgetRelevanceBuf::Verify(&v5[*(unsigned int *)v5->var0], a1);
    if (!result)
      break;
    ++v4;
    v5 += 4;
  }
  while (v4 < *(unsigned int *)a2->var0);
  return result;
}

BOOL ExtensionIdentityBuf::Verify(ExtensionIdentityBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  ExtensionIdentityBuf *v5;
  uint64_t v6;
  ExtensionIdentityBuf *v7;
  ExtensionIdentityBuf *v8;
  uint64_t v9;
  ExtensionIdentityBuf *v10;
  ExtensionIdentityBuf *v11;
  uint64_t v12;
  ExtensionIdentityBuf *v13;
  ExtensionIdentityBuf *v14;
  uint64_t v15;
  ExtensionIdentityBuf *v16;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 4u);
    if (result)
    {
      v5 = &this[-*(int *)this->var0];
      if (*(unsigned __int16 *)v5->var0 >= 5u && (v6 = *(unsigned __int16 *)v5[4].var0) != 0)
        v7 = &this[v6 + *(unsigned int *)this[v6].var0];
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7->var0);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
        if (result)
        {
          v8 = &this[-*(int *)this->var0];
          if (*(unsigned __int16 *)v8->var0 >= 7u && (v9 = *(unsigned __int16 *)v8[6].var0) != 0)
            v10 = &this[v9 + *(unsigned int *)this[v9].var0];
          else
            v10 = 0;
          result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v10->var0);
          if (result)
          {
            result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 8u);
            if (result)
            {
              v11 = &this[-*(int *)this->var0];
              if (*(unsigned __int16 *)v11->var0 >= 9u && (v12 = *(unsigned __int16 *)v11[8].var0) != 0)
                v13 = &this[v12 + *(unsigned int *)this[v12].var0];
              else
                v13 = 0;
              result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v13->var0);
              if (result)
              {
                result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 0xAu);
                if (result)
                {
                  v14 = &this[-*(int *)this->var0];
                  if (*(unsigned __int16 *)v14->var0 >= 0xBu && (v15 = *(unsigned __int16 *)v14[10].var0) != 0)
                    v16 = &this[v15 + *(unsigned int *)this[v15].var0];
                  else
                    v16 = 0;
                  result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v16->var0);
                  if (result)
                  {
                    --*((_DWORD *)a2 + 4);
                    return 1;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL WidgetRelevanceBuf::Verify(WidgetRelevanceBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  WidgetRelevanceBuf *v5;
  uint64_t v6;
  WidgetRelevanceBuf *v7;
  WidgetRelevanceBuf *v8;
  uint64_t v9;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 4u);
    if (result)
    {
      v5 = &this[-*(int *)this->var0];
      if (*(unsigned __int16 *)v5->var0 >= 5u && (v6 = *(unsigned __int16 *)v5[4].var0) != 0)
        v7 = &this[v6 + *(unsigned int *)this[v6].var0];
      else
        v7 = 0;
      result = apple::aiml::flatbuffers2::Verifier::VerifyString(a2, v7->var0);
      if (result)
      {
        result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
        if (result)
        {
          v8 = &this[-*(int *)this->var0];
          if (*(unsigned __int16 *)v8->var0 < 7u
            || (v9 = *(unsigned __int16 *)v8[6].var0) == 0
            || (result = IntentReferenceBuf::Verify((IntentReferenceBuf *)&this[v9 + *(unsigned int *)this[v9].var0], a2)))
          {
            --*((_DWORD *)a2 + 4);
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL IntentReferenceBuf::Verify(IntentReferenceBuf *this, apple::aiml::flatbuffers2::Verifier *a2)
{
  _BOOL8 result;
  IntentReferenceBuf *v5;
  uint64_t v6;
  unint64_t v7;
  IntentReferenceBuf *v8;
  uint64_t v9;
  IntentReferenceBuf *v10;
  uint64_t v11;
  IntentReferenceBuf *v12;
  uint64_t v13;

  result = apple::aiml::flatbuffers2::Verifier::VerifyTableStart(a2, this->var0);
  if (result)
  {
    v5 = &this[-*(int *)this->var0];
    if (*(unsigned __int16 *)v5->var0 < 5u
      || (v6 = *(unsigned __int16 *)v5[4].var0) == 0
      || (result = 0, v7 = *((_QWORD *)a2 + 1), v7 >= 9) && v7 - 8 >= (unint64_t)this[v6 - *(_QWORD *)a2].var0)
    {
      result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 6u);
      if (result)
      {
        v8 = &this[-*(int *)this->var0];
        if (*(unsigned __int16 *)v8->var0 < 7u
          || (v9 = *(unsigned __int16 *)v8[6].var0) == 0
          || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v9 + *(unsigned int *)this[v9].var0].var0, 1uLL, 0)))
        {
          result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 8u);
          if (result)
          {
            v10 = &this[-*(int *)this->var0];
            if (*(unsigned __int16 *)v10->var0 < 9u
              || (v11 = *(unsigned __int16 *)v10[8].var0) == 0
              || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v11 + *(unsigned int *)this[v11].var0].var0, 1uLL, 0)))
            {
              result = apple::aiml::flatbuffers2::Table::VerifyOffset((apple::aiml::flatbuffers2::Table *)this, a2, 0xAu);
              if (result)
              {
                v12 = &this[-*(int *)this->var0];
                if (*(unsigned __int16 *)v12->var0 < 0xBu
                  || (v13 = *(unsigned __int16 *)v12[10].var0) == 0
                  || (result = apple::aiml::flatbuffers2::Verifier::VerifyVectorOrString(a2, this[v13 + *(unsigned int *)this[v13].var0].var0, 1uLL, 0)))
                {
                  --*((_DWORD *)a2 + 4);
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

_QWORD *std::vector<apple::aiml::flatbuffers2::Offset<void>>::vector(_QWORD *a1, unint64_t a2)
{
  char *v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    std::vector<apple::aiml::flatbuffers2::Offset<void>>::__vallocate[abi:ne180100](a1, a2);
    v4 = (char *)a1[1];
    bzero(v4, 4 * a2);
    a1[1] = &v4[4 * a2];
  }
  return a1;
}

void sub_18FB52028(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<apple::aiml::flatbuffers2::Offset<void>>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    std::vector<apple::aiml::flatbuffers2::Offset<void>>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<apple::aiml::flatbuffers2::Offset<void>>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void std::vector<apple::aiml::flatbuffers2::Offset<void>>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<apple::aiml::flatbuffers2::Offset<void>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(4 * a2);
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E2A56BC0, MEMORY[0x1E0DE42D0]);
}

void sub_18FB52108(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E0DE5020] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E0DE4E98], MEMORY[0x1E0DE4390]);
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x194008D84);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::CreateVector<void>(apple::aiml::flatbuffers2::FlatBufferBuilder *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  apple::aiml::flatbuffers2::FlatBufferBuilder::StartVector(a1, a3, 4uLL);
  if (a3)
  {
    v6 = a2 - 4;
    v7 = a3;
    do
    {
      v8 = v7 - 1;
      v9 = apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo(a1, *(_DWORD *)(v6 + 4 * v7));
      apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)a1, v9);
      v7 = v8;
    }
    while (v8);
  }
  return apple::aiml::flatbuffers2::FlatBufferBuilder::EndVector(a1, a3);
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::StartVector(apple::aiml::flatbuffers2::FlatBufferBuilder *this, uint64_t a2, unint64_t a3)
{
  uint64_t v6;

  apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested((uint64_t)this);
  *((_BYTE *)this + 70) = 1;
  v6 = a3 * a2;
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(this, v6, 4uLL);
  return apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(this, v6, a3);
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::EndVector(apple::aiml::flatbuffers2::FlatBufferBuilder *this, int a2)
{
  if (!*((_BYTE *)this + 70))
    apple::aiml::flatbuffers2::FlatBufferBuilder::EndVector();
  *((_BYTE *)this + 70) = 0;
  return apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)this, a2);
}

unint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(apple::aiml::flatbuffers2::FlatBufferBuilder *this, uint64_t a2, unint64_t a3)
{
  if (*((_QWORD *)this + 9) < a3)
    *((_QWORD *)this + 9) = a3;
  return apple::aiml::flatbuffers2::vector_downward::fill(this, (a3 - 1) & (-a2 - (*((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10))));
}

void sub_18FB52428(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if (v2 == v3)
    return 1;
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3))
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  return 0;
}

uint64_t apple::aiml::flatbuffers2::FlatBufferBuilder::Finish(apple::aiml::flatbuffers2::FlatBufferBuilder *this, unsigned int a2, const char *a3, int a4)
{
  _BOOL4 v8;
  uint64_t v9;
  _DWORD *v10;
  int v11;
  uint64_t result;

  v8 = a3 != 0;
  apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested((uint64_t)this);
  *((_QWORD *)this + 7) = *((_QWORD *)this + 5);
  v9 = 4;
  if (a4)
    v9 = 8;
  apple::aiml::flatbuffers2::FlatBufferBuilder::PreAlign(this, v9 + 4 * v8, *((_QWORD *)this + 9));
  if (a3)
  {
    if (strlen(a3) != 4)
      apple::aiml::flatbuffers2::FlatBufferBuilder::Finish();
    v10 = (_DWORD *)(*((_QWORD *)this + 6) - apple::aiml::flatbuffers2::vector_downward::ensure_space(this, 4uLL));
    *((_QWORD *)this + 6) = v10;
    *v10 = *(_DWORD *)a3;
  }
  v11 = apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo(this, a2);
  result = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)this, v11);
  if (a4)
    result = apple::aiml::flatbuffers2::FlatBufferBuilder::PushElement<int>((uint64_t)this, *((_DWORD *)this + 8) - *((_DWORD *)this + 12) + *((_DWORD *)this + 10));
  *((_BYTE *)this + 71) = 1;
  return result;
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<ExtensionIdentityBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  unsigned int v5;

  return (!a2 || *((_QWORD *)this + 1) >= 8uLL && !strncmp((const char *)(*(_QWORD *)this + a3 + 4), a2, 4uLL))
      && (v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3)) != 0
      && ExtensionIdentityBuf::Verify((ExtensionIdentityBuf *)(*(_QWORD *)this + a3 + v5), this);
}

void sub_18FB5276C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<WidgetRelevancePropertiesBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  unsigned int v5;

  return (!a2 || *((_QWORD *)this + 1) >= 8uLL && !strncmp((const char *)(*(_QWORD *)this + a3 + 4), a2, 4uLL))
      && (v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3)) != 0
      && WidgetRelevancePropertiesBuf::Verify((WidgetRelevancePropertiesBuf *)(*(_QWORD *)this + a3 + v5), this);
}

void sub_18FB52980(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<WidgetRelevanceBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  unsigned int v5;

  return (!a2 || *((_QWORD *)this + 1) >= 8uLL && !strncmp((const char *)(*(_QWORD *)this + a3 + 4), a2, 4uLL))
      && (v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3)) != 0
      && WidgetRelevanceBuf::Verify((WidgetRelevanceBuf *)(*(_QWORD *)this + a3 + v5), this);
}

void sub_18FB52B94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

BOOL apple::aiml::flatbuffers2::Verifier::VerifyBufferFromStart<IntentReferenceBuf>(apple::aiml::flatbuffers2::Verifier *this, const char *a2, unint64_t a3)
{
  unsigned int v5;

  return (!a2 || *((_QWORD *)this + 1) >= 8uLL && !strncmp((const char *)(*(_QWORD *)this + a3 + 4), a2, 4uLL))
      && (v5 = apple::aiml::flatbuffers2::Verifier::VerifyOffset(this, a3)) != 0
      && IntentReferenceBuf::Verify((IntentReferenceBuf *)(*(_QWORD *)this + a3 + v5), this);
}

void sub_18FB52DA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_2(const char *a1, const char *a2, uint64_t a3, const char *a4)
{
  __assert_rtn(a1, a2, 275, a4);
}

void sub_18FB52EFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB52FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB53150(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB53264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB532D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB533AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB53500(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB535F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB53684(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB536FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB53784(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB53904(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB53990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB53C60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB53D48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB53DDC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB53F3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB540D8(_Unwind_Exception *a1)
{
  void *v1;
  id *v2;
  id *v3;
  uint64_t v4;
  id *v5;

  v5 = v3;
  objc_destroyWeak(v5);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v4 - 56));

  _Unwind_Resume(a1);
}

void sub_18FB541F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB542F8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5440C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  objc_destroyWeak((id *)(v3 - 40));

  _Unwind_Resume(a1);
}

void sub_18FB54470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB54594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  void *v17;

  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_18FB545FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB546C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5474C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB547D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  objc_sync_exit(v10);

  _Unwind_Resume(a1);
}

void sub_18FB54864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  objc_sync_exit(v10);

  _Unwind_Resume(a1);
}

void sub_18FB5495C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB549D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB54C28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_18FB54D64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB551A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50)
{
  void *v50;
  void *v51;
  uint64_t v52;

  _Unwind_Resume(a1);
}

void sub_18FB55230()
{
  JUMPOUT(0x18FB551E0);
}

void sub_18FB55238()
{
  JUMPOUT(0x18FB551E8);
}

void sub_18FB55240()
{
  JUMPOUT(0x18FB551F0);
}

void sub_18FB55248()
{
  JUMPOUT(0x18FB551F8);
}

void sub_18FB55250()
{
  JUMPOUT(0x18FB55200);
}

void sub_18FB55258()
{
  JUMPOUT(0x18FB55208);
}

void sub_18FB55260()
{
  JUMPOUT(0x18FB55210);
}

void sub_18FB55268()
{
  void *v0;

  JUMPOUT(0x18FB55220);
}

void sub_18FB55274()
{
  JUMPOUT(0x18FB55220);
}

void sub_18FB5527C()
{
  JUMPOUT(0x18FB55224);
}

void sub_18FB55424(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB55474(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB554CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB55584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB5570C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB55770(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB558C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB55DF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  _Unwind_Resume(a1);
}

void sub_18FB55F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB55FD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FB560C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FB56144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB56330(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB564E0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

Class __getFBDisplayManagerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  if (!FrontBoardLibraryCore_frameworkLibrary)
    FrontBoardLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!FrontBoardLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FrontBoardLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("CHSConfiguredWidgetDescriptor.m"), 23, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("FBDisplayManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFBDisplayManagerClass(void)_block_invoke");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("CHSConfiguredWidgetDescriptor.m"), 24, CFSTR("Unable to find class %s"), "FBDisplayManager");

LABEL_8:
    __break(1u);
  }
  getFBDisplayManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18FB56728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB567D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB56850(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB568D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5694C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB56CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_18FB56E30(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5719C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33)
{
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;

  _Unwind_Resume(a1);
}

void sub_18FB5735C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB573AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB57404(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB574BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB575D4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB576C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB57940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  _Unwind_Resume(a1);
}

void sub_18FB57C04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_3(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void sub_18FB57E10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB57EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void sub_18FB57FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FB580D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB58188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB583D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id a31)
{
  void *v31;
  void *v32;

  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a26, 8);

  _Unwind_Resume(a1);
}

void sub_18FB584D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB5865C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5885C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB58984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  uint64_t v22;

  _Block_object_dispose(&a17, 8);

  _Block_object_dispose((const void *)(v22 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_18FB58DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);

  _Unwind_Resume(a1);
}

void sub_18FB58F6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5919C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB592A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB593B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB5952C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB59800(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB59AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB5A178(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB5A418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A5BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A610(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A778(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A7CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A8C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A91C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5A9C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5AA18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5AA6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5AAC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5AB14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5ADD0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5AEB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5AFD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5B27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12)
{
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB5B414(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB5B560(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB5B894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB5BA68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_18FB5BCB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  void *v9;
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB5BD58(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5BDE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5BF34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB5C120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16)
{
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

id CHSLogClientSnapshots()
{
  if (CHSLogClientSnapshots_onceToken != -1)
    dispatch_once(&CHSLogClientSnapshots_onceToken, &__block_literal_global_3);
  return (id)CHSLogClientSnapshots___logObj;
}

id CHSLogWidgetHosts()
{
  if (CHSLogWidgetHosts_onceToken[0] != -1)
    dispatch_once(CHSLogWidgetHosts_onceToken, &__block_literal_global_5);
  return (id)CHSLogWidgetHosts___logObj;
}

id CHSLogSubscriptions()
{
  if (CHSLogSubscriptions_onceToken != -1)
    dispatch_once(&CHSLogSubscriptions_onceToken, &__block_literal_global_7);
  return (id)CHSLogSubscriptions___logObj;
}

void sub_18FB5C3B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_18FB5C450(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB5C518(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5C638(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5C6CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5C750(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5C864(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB5C8FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5C9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB5CA08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5CA54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5CB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;

  _Unwind_Resume(a1);
}

void sub_18FB5CBA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_18FB5CC38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB5CDA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB5CE58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB5D11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_18FB5D220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB5D308(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB5D3F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB5D4E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB5D600(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5D68C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5D764(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5D848(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5D980(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB5DA94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB5DB80(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5DD98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB5DE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromCHSWidgetClipBehavior(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("client");
  if (a1 == 1)
    v1 = CFSTR("server");
  if (a1 == 2)
    return CFSTR("none");
  else
    return v1;
}

void sub_18FB5E060(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5E124(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5E204(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5E35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id a21)
{
  void *v21;

  _Block_object_dispose(&a16, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void sub_18FB5E438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5E4A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5E684(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5E728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB5E7A8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5E89C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5E914(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5E9B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5EA18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id _genericiseIntent(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  objc_opt_class();
  v2 = v1;
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    INIntentWithTypedIntent();
    v2 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v2;
}

void sub_18FB5EA94(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5EB08(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5ED14(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v7 = v6;

  _Unwind_Resume(a1);
}

id _intentDataFromIntent(uint64_t a1)
{
  void *v1;
  id v2;
  NSObject *v3;
  uint64_t v4;
  id v5;
  id v7;

  v7 = 0;
  +[CHSIntentReference _encodeToOPACK:error:](CHSIntentReference, "_encodeToOPACK:error:", a1, &v7);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v7;
  if (v2)
  {
    CHSLogChronoServices();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      _intentDataFromIntent_cold_1((uint64_t)v2, v3, v4);

    v5 = 0;
  }
  else
  {
    v5 = v1;
  }

  return v5;
}

void sub_18FB5EE34(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5EFDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB5F3A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5F510(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5F600(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5F908(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_18FB5F9E8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB5FA74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{

  _Unwind_Resume(a1);
}

void sub_18FB5FBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

id _unifiedIntentDataIfPossible(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;

  v1 = a1;
  objc_msgSend(v1, "_intentData");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    v4 = v2;
  }
  else if ((objc_msgSend(v1, "_isPartial") & 1) != 0 || !objc_msgSend(v1, "_isSchemaSeparated"))
  {
    v4 = 0;
  }
  else
  {
    objc_msgSend(v1, "intent");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    _intentDataFromIntent((uint64_t)v5);
    v4 = (id)objc_claimAutoreleasedReturnValue();

  }
  return v4;
}

void sub_18FB5FCB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB5FDA0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB5FED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB5FFD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB60154(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB60298(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB60370(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB603D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB60464(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB60568(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB605E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB60650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB606DC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

BOOL CHSWidgetRenderingModesIsValid(char a1)
{
  return (a1 & 7) != 0;
}

id NSStringFromCHSWidgetRenderingModes(uint64_t a1)
{
  void *v2;
  id v3;
  _QWORD *v4;
  uint8x8_t v5;
  int v6;
  unint64_t v7;
  _QWORD v9[2];
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  id v12;
  _QWORD *v13;
  _QWORD v14[4];
  char v15;

  v14[0] = 0;
  v14[1] = v14;
  v14[2] = 0x2020000000;
  v14[3] = 0;
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB37A0]), "initWithString:", CFSTR("["));
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v10 = __NSStringFromCHSWidgetRenderingModes_block_invoke;
  v11 = &unk_1E2A5AB30;
  v13 = v14;
  v3 = v2;
  v12 = v3;
  v4 = v9;
  if (a1)
  {
    v15 = 0;
    v5 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v5.i16[0] = vaddlv_u8(v5);
    v6 = v5.i32[0];
    if (v5.i32[0])
    {
      v7 = 0;
      do
      {
        if (((1 << v7) & a1) != 0)
        {
          ((void (*)(_QWORD *))v10)(v4);
          if (v15)
            break;
          --v6;
        }
        if (v7 > 0x3E)
          break;
        ++v7;
      }
      while (v6 > 0);
    }
  }

  objc_msgSend(v3, "appendString:", CFSTR("]"));
  _Block_object_dispose(v14, 8);
  return v3;
}

void sub_18FB6084C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, ...)
{
  void *v8;
  va_list va;

  va_start(va, a8);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18FB60968(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB609F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB60AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

id getDeviceIDFromBundleID(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = a1;
  objc_msgSend(v1, "stringByRemovingPercentEncoding");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v2, "containsString:", CFSTR("::")))
  {
    objc_msgSend(v2, "componentsSeparatedByString:", CFSTR("::"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "firstObject");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_18FB60B84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB60C68(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB60D00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t CHSWidgetFamilyMaskFromWidgetFamily(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xD)
    return 0;
  else
    return qword_18FBD5318[a1 - 1];
}

void CHSWidgetFamilyMaskEnumerateFamilies(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void (**v5)(void *, uint64_t);
  _QWORD v6[4];
  id v7;
  uint64_t v8;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __CHSWidgetFamilyMaskEnumerateFamilies_block_invoke;
    v6[3] = &unk_1E2A5B678;
    v8 = a1;
    v7 = v3;
    v5 = (void (**)(void *, uint64_t))_Block_copy(v6);
    v5[2](v5, 2);
    v5[2](v5, 4);
    v5[2](v5, 8);
    v5[2](v5, 32);
    v5[2](v5, 0x4000);
    v5[2](v5, 0x2000);
    v5[2](v5, 16);
    v5[2](v5, 64);
    v5[2](v5, 1024);
    v5[2](v5, 2048);
    v5[2](v5, 4096);

  }
}

void sub_18FB60EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

BOOL CHSWidgetFamilyMaskContainsFamily(uint64_t a1, uint64_t a2)
{
  return (CHSWidgetFamilyMaskFromWidgetFamily(a2) & ~a1) == 0;
}

BOOL CHSWidgetFamilyIsAccessory(uint64_t a1)
{
  return (unint64_t)(a1 - 10) < 3;
}

uint64_t CHSWidgetFamilyFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("systemSmall")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("systemMedium")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("systemLarge")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("transparentMedium")) & 1) != 0)
  {
    v2 = 5;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("control1x1")) & 1) != 0)
  {
    v2 = 14;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("platterMedium")) & 1) != 0)
  {
    v2 = 13;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("systemExtraLarge")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("newsLargeTall")) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("accessoryCircular")) & 1) != 0)
  {
    v2 = 10;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("accessoryRectangular")) & 1) != 0)
  {
    v2 = 11;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("accessoryInline")))
  {
    v2 = 12;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void sub_18FB6113C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id CHSWidgetFamilyMaskDescription(uint64_t a1)
{
  id v2;
  _QWORD v4[6];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void (*v13)(uint64_t);
  id v14;

  v9 = 0;
  v10 = &v9;
  v11 = 0x3032000000;
  v12 = __Block_byref_object_copy__5;
  v13 = __Block_byref_object_dispose__5;
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v14 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v10[5], "appendString:", CFSTR("("));
  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v8 = 0;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __CHSWidgetFamilyMaskDescription_block_invoke;
  v4[3] = &unk_1E2A5B6A0;
  v4[4] = &v5;
  v4[5] = &v9;
  CHSWidgetFamilyMaskEnumerateFamilies(a1, v4);
  if (!v6[3])
    objc_msgSend((id)v10[5], "appendString:", CFSTR("undefined"));
  objc_msgSend((id)v10[5], "appendString:", CFSTR(")"));
  v2 = (id)v10[5];
  _Block_object_dispose(&v5, 8);
  _Block_object_dispose(&v9, 8);

  return v2;
}

void sub_18FB6127C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void sub_18FB6136C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

BOOL CHSWidgetFontStyleFromTextSizeAdjustment(_BOOL8 result)
{
  if (result != 2)
    return result == 1;
  return result;
}

uint64_t CHSWidgetTextSizeAdjustmentFromFontStyle(uint64_t a1)
{
  if (a1 == 1)
    return 1;
  else
    return 2 * (a1 == 2);
}

const __CFString *CHSWidgetTextSizeAdjustmentDescription(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("none");
  if (a1 == 1)
    v1 = CFSTR("increment");
  if (a1 == 2)
    return CFSTR("decrement");
  else
    return v1;
}

const __CFString *CHSWidgetFontStyleDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xA)
    return CFSTR("default");
  else
    return off_1E2A5B758[a1 - 1];
}

const __CFString *CHSDescriptionForWidgetVisibility(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("default");
  else
    return off_1E2A5B7B0[a1 - 1];
}

const __CFString *NSStringFromCHSWidgetContentType(uint64_t a1)
{
  if (a1)
    return CFSTR("Preview");
  else
    return CFSTR("Timeline");
}

id NSStringFromCHSWidgetLocationStyleMask(uint64_t a1)
{
  _QWORD *v2;
  uint8x8_t v3;
  int v4;
  unint64_t v5;
  id v6;
  _QWORD v8[2];
  uint64_t (*v9)(uint64_t, uint64_t);
  void *v10;
  _QWORD *v11;
  uint64_t *v12;
  _QWORD v13[4];
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  void (*v18)(uint64_t);
  id v19;
  char v20;

  v14 = 0;
  v15 = &v14;
  v16 = 0x3032000000;
  v17 = __Block_byref_object_copy__5;
  v18 = __Block_byref_object_dispose__5;
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v19 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v15[5], "appendString:", CFSTR("("));
  v13[0] = 0;
  v13[1] = v13;
  v13[2] = 0x2020000000;
  v13[3] = 0;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v9 = __NSStringFromCHSWidgetLocationStyleMask_block_invoke;
  v10 = &unk_1E2A5B6C8;
  v11 = v13;
  v12 = &v14;
  v2 = v8;
  if (a1)
  {
    v20 = 0;
    v3 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v3.i16[0] = vaddlv_u8(v3);
    v4 = v3.i32[0];
    if (v3.i32[0])
    {
      v5 = 0;
      do
      {
        if (((1 << v5) & a1) != 0)
        {
          ((void (*)(_QWORD *))v9)(v2);
          if (v20)
            break;
          --v4;
        }
        if (v5 > 0x3E)
          break;
        ++v5;
      }
      while (v4 > 0);
    }
  }

  objc_msgSend((id)v15[5], "appendString:", CFSTR(")"));
  v6 = (id)v15[5];
  _Block_object_dispose(v13, 8);
  _Block_object_dispose(&v14, 8);

  return v6;
}

void sub_18FB615CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  _Block_object_dispose(&a16, 8);
  _Block_object_dispose(&a20, 8);

  _Unwind_Resume(a1);
}

uint64_t CHSWidgetLocationStyleMaskFromStyle(unint64_t a1)
{
  if (a1 > 3)
    return 0;
  else
    return qword_18FBD5388[a1];
}

uint64_t CHSEdgeInsetsEqualToEdgeInsets()
{
  if (BSFloatEqualToFloat() && BSFloatEqualToFloat() && BSFloatEqualToFloat())
    return BSFloatEqualToFloat();
  else
    return 0;
}

uint64_t CHSEdgeInsetsDescription(double a1, double a2, double a3, double a4)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("{%.*g, %.*g, %.*g, %.*g}"), 17, *(_QWORD *)&a1, 17, *(_QWORD *)&a2, 17, *(_QWORD *)&a3, 17, *(_QWORD *)&a4);
}

uint64_t CHSEdgeInsetsCompare(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v9;

  if (a1 < a5)
    return -1;
  if (a1 > a5)
    return 1;
  if (a2 < a6)
    return -1;
  if (a2 > a6)
    return 1;
  if (a3 < a7)
    return -1;
  v9 = -1;
  if (a4 >= a8)
    v9 = a4 > a8;
  if (a3 <= a7)
    return v9;
  else
    return 1;
}

void sub_18FB6183C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB618C8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB61960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB61A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB61AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromCHSDynamicTextSupport(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Unspecified");
  if (a1 == 2)
    v1 = CFSTR("No");
  if (a1 == 1)
    return CFSTR("Yes");
  else
    return v1;
}

void sub_18FB61C50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB61CE8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB61E24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB61F6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6209C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB62114(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB62180(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB621EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB622D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB62338(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB62694(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB62750(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB62810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB62A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB62C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB62F2C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6300C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB63220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v21 = v20;

  _Unwind_Resume(a1);
}

void sub_18FB632B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6349C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB63740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB638C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB639A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB63AE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

__CFString *_CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  __CFString *v9;
  NSObject *v10;

  if (_CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform___once != -1)
    dispatch_once(&_CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform___once, &__block_literal_global_8);
  v4 = (void *)__sdkVersionPlatformToSystemVersion;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKeyedSubscript:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKeyedSubscript:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v9 = v8;
  }
  else
  {
    CHSLogChronoServices();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      _CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform_cold_1(a1, a2, v10);

    v9 = CFSTR("9999999.0");
  }

  return v9;
}

void sub_18FB63C6C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB63DF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

BOOL _CHSEnablementIsValid(unint64_t a1)
{
  return a1 < 3;
}

void sub_18FB63F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  void *v9;
  void *v10;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_18FB640D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB641C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6422C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB643CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB64548(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB64598(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB64640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB646C0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB64780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB64984(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB64A00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB64B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB65110(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

Class __getNSLocaleClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  if (!IntlPreferencesLibraryCore_frameworkLibrary)
    IntlPreferencesLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!IntlPreferencesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *IntlPreferencesLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("CHSBaseDescriptor.m"), 17, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("NSLocale");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getNSLocaleClass(void)_block_invoke");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("CHSBaseDescriptor.m"), 18, CFSTR("Unable to find class %s"), "NSLocale");

LABEL_8:
    __break(1u);
  }
  getNSLocaleClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_18FB6545C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;

  _Unwind_Resume(a1);
}

void sub_18FB6551C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB65604(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB657AC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_18FB65854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB6596C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB65A50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18FB65B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB65C50(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_18FB65D24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB65EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_18FB65F6C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB66000(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB66070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB661B4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB66368(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_18FB66488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;
  void *v15;
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_18FB66584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB66684(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB66774(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB66888(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB66974(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB66A18(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB66AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB66C60(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB66E00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB67070(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB671C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_18FB673D0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB675B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB67608(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB676B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB677AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB677F8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB678B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB67CD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB67F04(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB68278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  _Unwind_Resume(a1);
}

void sub_18FB68380(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB68504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB68564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB685C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB68650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB686AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB6870C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB6877C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB687DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB68898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

const __CFString *NSStringFromCHSDisplayGamut(uint64_t a1)
{
  if (a1)
    return CFSTR("sRGB");
  else
    return CFSTR("P3");
}

void sub_18FB68A78(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB68AF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB68C8C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB68D5C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB68E00(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB68E88(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB68FFC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB690AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18FB69174(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB69258(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB692E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB69350(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB69400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB69508(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB695B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB697C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB69860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB6992C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

id CHSWidgetRelevanceServiceCacheDirectory()
{
  uint64_t started;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  _BYTE v6[1024];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  started = sysdir_start_search_path_enumeration_private();
  MEMORY[0x1940096FC](started, v6);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCString:encoding:", v6, 4);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "URLByAppendingPathComponent:", CFSTR("com.apple.chrono"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "URLByAppendingPathComponent:", CFSTR("widget-relevance-cache"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_18FB69A80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

const __CFString *CHSWidgetLocationDescription(unint64_t a1)
{
  if (a1 > 8)
    return CFSTR("todayList");
  else
    return off_1E2A5B8A0[a1];
}

const __CFString *NSStringFromWidgetLocation(unint64_t a1)
{
  if (a1 > 8)
    return CFSTR("todayList");
  else
    return off_1E2A5B8A0[a1];
}

void sub_18FB69B54(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB69BCC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB69C84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB69D0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB69E10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_18FB69ED8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB69F98(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6A254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,void *a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;

  _Block_object_dispose(&a25, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void sub_18FB6A344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB6A3F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

void sub_18FB6A4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18FB6A5E0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t CHSPlatformFromDYLDPlatform(int a1)
{
  if ((a1 - 1) > 8)
    return 0;
  else
    return qword_18FBD53A8[a1 - 1];
}

void sub_18FB6A718(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6A77C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6A840(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6A8EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB6A9C4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB6AA1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6AAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  void *v13;

  _Unwind_Resume(a1);
}

void sub_18FB6AB80(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6AC0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB6ACE0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6AD60(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6ADF8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6AEBC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6AF90(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6B0A4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_18FB6B218(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id _CHSUniqueWidgetRateLimitConfigurationName(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@_%@_%@"), a1, a2, a3);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_18FB6B378(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6B410(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6B568(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6B5F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{

  _Unwind_Resume(a1);
}

void sub_18FB6B6E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_18FB6B7C8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

const __CFString *chs_debugDescriptionForErrorCode(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7)
    return &stru_1E2A5F050;
  else
    return off_1E2A5B940[a1 - 1];
}

void sub_18FB6B8FC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6BA10(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB6BB3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB6BC38(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6BD1C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6BE24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6BF44(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_18FB6C050(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6C100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)CHSBezierPath;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void sub_18FB6C1A0(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18FB6C258(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18FB6C740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void ____copyPathByApplying_block_invoke(uint64_t a1, uint64_t a2)
{
  double *v2;
  float v3;
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;

  v2 = *(double **)(a2 + 8);
  switch(*(_DWORD *)a2)
  {
    case 0:
      v3 = *v2;
      v4 = v2[1];
      CGPathMoveToPoint(*(CGMutablePathRef *)(a1 + 32), 0, v3, v4);
      break;
    case 1:
      v5 = *v2;
      v6 = v2[1];
      CGPathAddLineToPoint(*(CGMutablePathRef *)(a1 + 32), 0, v5, v6);
      break;
    case 2:
      v7 = *v2;
      v8 = v2[1];
      v9 = v2[2];
      v10 = v2[3];
      CGPathAddQuadCurveToPoint(*(CGMutablePathRef *)(a1 + 32), 0, v7, v8, v9, v10);
      break;
    case 3:
      v11 = *v2;
      v12 = v2[1];
      v13 = v2[2];
      v14 = v2[3];
      v15 = v2[4];
      v16 = v2[5];
      CGPathAddCurveToPoint(*(CGMutablePathRef *)(a1 + 32), 0, v11, v12, v13, v14, v15, v16);
      break;
    case 4:
      CGPathCloseSubpath(*(CGMutablePathRef *)(a1 + 32));
      break;
    default:
      return;
  }
}

void __encodePathElementIntoData(void *a1, int *a2)
{
  id v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t i;
  float v8;
  float v9;
  float v10;
  float v11;
  unsigned int v12;
  int v13;

  v3 = a1;
  v13 = *a2;
  objc_msgSend(v3, "appendBytes:length:", &v13, 4);
  v4 = *a2;
  if (v4 > 3)
    v5 = 0;
  else
    v5 = dword_18FBD5400[v4];
  v12 = v5;
  objc_msgSend(v3, "appendBytes:length:", &v12, 4);
  if (v12)
  {
    v6 = 0;
    for (i = 0; i < v12; ++i)
    {
      v8 = *(double *)(*((_QWORD *)a2 + 1) + v6);
      v11 = v8;
      objc_msgSend(v3, "appendBytes:length:", &v11, 4);
      v9 = *(double *)(*((_QWORD *)a2 + 1) + v6 + 8);
      v10 = v9;
      objc_msgSend(v3, "appendBytes:length:", &v10, 4);
      v6 += 16;
    }
  }

}

void sub_18FB6CA18(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

uint64_t CHSHostActivationState.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617669746361;
  else
    return 0x6176697463616564;
}

ChronoServices::CHSHostActivationState_optional __swiftcall CHSHostActivationState.init(rawValue:)(Swift::UInt64 rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ChronoServices::CHSHostActivationState_optional)rawValue;
}

uint64_t CHSHostActivationState.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_18FB6CAA0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_18FB6CAB8()
{
  sub_18FBCD850();
  sub_18FBCD874();
  return sub_18FBCD88C();
}

uint64_t sub_18FB6CAFC()
{
  return sub_18FBCD874();
}

uint64_t sub_18FB6CB24()
{
  sub_18FBCD850();
  sub_18FBCD874();
  return sub_18FBCD88C();
}

_QWORD *sub_18FB6CB64@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_18FB6CB84(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_18FB6CB90()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617669746361;
  else
    return 0x6176697463616564;
}

uint64_t sub_18FB6CBD8()
{
  sub_18FB6FA04();
  return sub_18FBCD268();
}

uint64_t sub_18FB6CC34()
{
  sub_18FB6FA04();
  return sub_18FBCD220();
}

void sub_18FB6CD40(void *a1)
{
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  _QWORD v23[3];
  char v24;
  uint64_t v25[3];
  uint64_t v26;
  uint64_t v27;

  v2 = v1;
  v3 = *(void **)&v1[OBJC_IVAR___CHSControlHost_configuration];
  if (a1)
  {
    if (v3)
    {
      v4 = a1;
      type metadata accessor for CHSControlConfiguration(0);
      v5 = v3;
      v6 = v4;
      LOBYTE(v4) = sub_18FBCD40C();

      if ((v4 & 1) != 0)
        return;
    }
  }
  else if (!v3)
  {
    return;
  }
  if (qword_1EE189820 != -1)
    swift_once();
  v7 = sub_18FBCCF5C();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EE1927B8);
  v8 = v2;
  v9 = sub_18FBCCF44();
  v10 = sub_18FBCD394();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v25[0] = v13;
    *(_DWORD *)v11 = 136315394;
    v14 = *(_QWORD *)&v8[OBJC_IVAR___CHSControlHost__loggingIdentifier];
    v15 = *(_QWORD *)&v8[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
    swift_bridgeObjectRetain();
    sub_18FB6ECF4(v14, v15, v25);
    sub_18FBCD454();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2112;
    v23[0] = v8;
    v16 = v8;
    sub_18FBCD454();
    *v12 = v8;

    _os_log_impl(&dword_18FB18000, v9, v10, "[%s]: Configuration changed: %@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
    swift_arrayDestroy();
    MEMORY[0x19400960C](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x19400960C](v13, -1, -1);
    MEMORY[0x19400960C](v11, -1, -1);

  }
  else
  {

  }
  sub_18FB6E65C((uint64_t)&v8[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)v25);
  v17 = v26;
  v18 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v20 = *(_QWORD *)&v8[OBJC_IVAR___CHSControlHost__identifier];
  v19 = *(_QWORD *)&v8[OBJC_IVAR___CHSControlHost__identifier + 8];
  swift_bridgeObjectRetain();
  v21 = objc_msgSend(v8, sel_configuration);
  v22 = v8[OBJC_IVAR___CHSControlHost__activationState];
  v23[0] = v20;
  v23[1] = v19;
  v23[2] = v21;
  v24 = v22;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v23, v17, v18);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
}

void __swiftcall CHSControlHost.init(identifier:)(CHSControlHost *__return_ptr retstr, Swift::String identifier)
{
  id v2;
  void *v3;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v3 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithIdentifier_, v3);

}

id CHSControlHost.init(identifier:)()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithIdentifier_configuration_, v1, 0);

  return v2;
}

void __swiftcall CHSControlHost.init(identifier:configuration:)(CHSControlHost *__return_ptr retstr, Swift::String identifier, CHSControlConfiguration_optional *configuration)
{
  id v4;
  void *v5;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_initWithIdentifier_configuration_, v5, configuration);

}

char *CHSControlHost.init(identifier:configuration:)(uint64_t a1, uint64_t a2, void *a3)
{
  _BYTE *v3;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  void *v31;
  id v32;
  _QWORD v33[3];
  char v34;
  objc_super v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v5 = OBJC_IVAR___CHSControlHost_configuration;
  *(_QWORD *)&v3[OBJC_IVAR___CHSControlHost_configuration] = 0;
  v3[OBJC_IVAR___CHSControlHost__invalid] = 0;
  v6 = &v3[OBJC_IVAR___CHSControlHost__identifier];
  *v6 = a1;
  v6[1] = a2;
  v7 = &v3[OBJC_IVAR___CHSControlHost__loggingIdentifier];
  *v7 = a1;
  v7[1] = a2;
  v3[OBJC_IVAR___CHSControlHost__activationState] = 0;
  v8 = qword_1EE189B28;
  v9 = v3;
  swift_bridgeObjectRetain();
  if (v8 != -1)
    swift_once();
  swift_beginAccess();
  sub_18FB6E65C((uint64_t)&qword_1EE189B00, (uint64_t)&v36);
  sub_18FB6E6A0(&v36, (uint64_t)&v9[OBJC_IVAR___CHSControlHost__serverConnection]);
  v10 = *(void **)&v3[v5];
  *(_QWORD *)&v3[v5] = a3;
  v32 = a3;

  v35.receiver = v9;
  v35.super_class = (Class)CHSControlHost;
  v11 = objc_msgSendSuper2(&v35, sel_init);
  v12 = qword_1EE189820;
  v13 = v11;
  if (v12 != -1)
    swift_once();
  v14 = sub_18FBCCF5C();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EE1927B8);
  v15 = (char *)v13;
  v16 = sub_18FBCCF44();
  v17 = sub_18FBCD394();
  if (!os_log_type_enabled(v16, v17))
  {

    if (a3)
      goto LABEL_7;
LABEL_9:

    return v15;
  }
  v18 = swift_slowAlloc();
  v19 = (_QWORD *)swift_slowAlloc();
  v20 = swift_slowAlloc();
  *(_QWORD *)&v36 = v20;
  *(_DWORD *)v18 = 136315394;
  v31 = a3;
  v22 = *(_QWORD *)&v15[OBJC_IVAR___CHSControlHost__loggingIdentifier];
  v21 = *(_QWORD *)&v15[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
  swift_bridgeObjectRetain();
  sub_18FB6ECF4(v22, v21, (uint64_t *)&v36);
  sub_18FBCD454();

  swift_bridgeObjectRelease();
  *(_WORD *)(v18 + 12) = 2112;
  v33[0] = v15;
  v23 = v15;
  sub_18FBCD454();
  *v19 = v15;

  _os_log_impl(&dword_18FB18000, v16, v17, "[%s]: Created: %@", (uint8_t *)v18, 0x16u);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
  swift_arrayDestroy();
  MEMORY[0x19400960C](v19, -1, -1);
  swift_arrayDestroy();
  MEMORY[0x19400960C](v20, -1, -1);
  MEMORY[0x19400960C](v18, -1, -1);

  if (!v31)
    goto LABEL_9;
LABEL_7:
  sub_18FB6E65C((uint64_t)&v15[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)&v36);
  v24 = v37;
  v25 = v38;
  __swift_project_boxed_opaque_existential_1(&v36, v37);
  v27 = *(_QWORD *)&v15[OBJC_IVAR___CHSControlHost__identifier];
  v26 = *(_QWORD *)&v15[OBJC_IVAR___CHSControlHost__identifier + 8];
  swift_bridgeObjectRetain();
  v28 = objc_msgSend(v15, sel_configuration);
  v29 = v15[OBJC_IVAR___CHSControlHost__activationState];
  v33[0] = v27;
  v33[1] = v26;
  v33[2] = v28;
  v34 = v29;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v33, v24, v25);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v36);
  return v15;
}

Swift::Void __swiftcall CHSControlHost.activate()()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  _QWORD v18[3];
  char v19;
  uint64_t v20[3];
  uint64_t v21;
  uint64_t v22;

  if ((*((_BYTE *)v0 + OBJC_IVAR___CHSControlHost__invalid) & 1) == 0)
  {
    if (qword_1EE18AC58 != -1)
      swift_once();
    v1 = sub_18FBCCF5C();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EE192830);
    v2 = v0;
    v3 = sub_18FBCCF44();
    v4 = sub_18FBCD394();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = (_QWORD *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v20[0] = v7;
      *(_DWORD *)v5 = 136315394;
      v8 = *(_QWORD *)&v2[OBJC_IVAR___CHSControlHost__loggingIdentifier];
      v9 = *(_QWORD *)&v2[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
      swift_bridgeObjectRetain();
      sub_18FB6ECF4(v8, v9, v20);
      sub_18FBCD454();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2112;
      v18[0] = v2;
      v10 = v2;
      sub_18FBCD454();
      *v6 = v2;

      _os_log_impl(&dword_18FB18000, v3, v4, "[%s]: Activated: %@", (uint8_t *)v5, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v6, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v7, -1, -1);
      MEMORY[0x19400960C](v5, -1, -1);

    }
    else
    {

    }
    v11 = OBJC_IVAR___CHSControlHost__activationState;
    v2[OBJC_IVAR___CHSControlHost__activationState] = 1;
    sub_18FB6E65C((uint64_t)&v2[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)v20);
    v12 = v21;
    v13 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    v15 = *(_QWORD *)&v2[OBJC_IVAR___CHSControlHost__identifier];
    v14 = *(_QWORD *)&v2[OBJC_IVAR___CHSControlHost__identifier + 8];
    swift_bridgeObjectRetain();
    v16 = objc_msgSend(v2, sel_configuration);
    v17 = v2[v11];
    v18[0] = v15;
    v18[1] = v14;
    v18[2] = v16;
    v19 = v17;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v18, v12, v13);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
}

Swift::Void __swiftcall CHSControlHost.deactivate()()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  _QWORD v18[3];
  char v19;
  uint64_t v20[3];
  uint64_t v21;
  uint64_t v22;

  if ((*((_BYTE *)v0 + OBJC_IVAR___CHSControlHost__invalid) & 1) == 0)
  {
    if (qword_1EE18AC58 != -1)
      swift_once();
    v1 = sub_18FBCCF5C();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EE192830);
    v2 = v0;
    v3 = sub_18FBCCF44();
    v4 = sub_18FBCD394();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = (_QWORD *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v20[0] = v7;
      *(_DWORD *)v5 = 136315394;
      v8 = *(_QWORD *)&v2[OBJC_IVAR___CHSControlHost__loggingIdentifier];
      v9 = *(_QWORD *)&v2[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
      swift_bridgeObjectRetain();
      sub_18FB6ECF4(v8, v9, v20);
      sub_18FBCD454();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2112;
      v18[0] = v2;
      v10 = v2;
      sub_18FBCD454();
      *v6 = v2;

      _os_log_impl(&dword_18FB18000, v3, v4, "[%s]: Deactivated: %@", (uint8_t *)v5, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v6, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v7, -1, -1);
      MEMORY[0x19400960C](v5, -1, -1);

    }
    else
    {

    }
    v11 = OBJC_IVAR___CHSControlHost__activationState;
    v2[OBJC_IVAR___CHSControlHost__activationState] = 0;
    sub_18FB6E65C((uint64_t)&v2[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)v20);
    v12 = v21;
    v13 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    v15 = *(_QWORD *)&v2[OBJC_IVAR___CHSControlHost__identifier];
    v14 = *(_QWORD *)&v2[OBJC_IVAR___CHSControlHost__identifier + 8];
    swift_bridgeObjectRetain();
    v16 = objc_msgSend(v2, sel_configuration);
    v17 = v2[v11];
    v18[0] = v15;
    v18[1] = v14;
    v18[2] = v16;
    v19 = v17;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 56))(v18, v12, v13);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
}

Swift::Void __swiftcall CHSControlHost.invalidate()()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  _QWORD v19[3];
  char v20;
  uint64_t v21[3];
  uint64_t v22;
  uint64_t v23;

  if ((v0[OBJC_IVAR___CHSControlHost__invalid] & 1) == 0)
  {
    v1 = v0;
    v0[OBJC_IVAR___CHSControlHost__invalid] = 1;
    v2 = OBJC_IVAR___CHSControlHost__activationState;
    v0[OBJC_IVAR___CHSControlHost__activationState] = 0;
    if (qword_1EE18AC58 != -1)
      swift_once();
    v3 = sub_18FBCCF5C();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EE192830);
    v4 = v0;
    v5 = sub_18FBCCF44();
    v6 = sub_18FBCD394();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v21[0] = v18;
      *(_DWORD *)v7 = 136315394;
      v9 = *(_QWORD *)&v4[OBJC_IVAR___CHSControlHost__loggingIdentifier];
      v10 = *(_QWORD *)&v4[OBJC_IVAR___CHSControlHost__loggingIdentifier + 8];
      swift_bridgeObjectRetain();
      sub_18FB6ECF4(v9, v10, v21);
      sub_18FBCD454();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2112;
      v19[0] = v4;
      v11 = v4;
      sub_18FBCD454();
      *v8 = v4;

      _os_log_impl(&dword_18FB18000, v5, v6, "[%s]: Invalidated: %@", (uint8_t *)v7, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v8, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v18, -1, -1);
      MEMORY[0x19400960C](v7, -1, -1);

    }
    else
    {

    }
    sub_18FB6E65C((uint64_t)&v4[OBJC_IVAR___CHSControlHost__serverConnection], (uint64_t)v21);
    v12 = v22;
    v13 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    v15 = *(_QWORD *)&v4[OBJC_IVAR___CHSControlHost__identifier];
    v14 = *(_QWORD *)&v4[OBJC_IVAR___CHSControlHost__identifier + 8];
    swift_bridgeObjectRetain();
    v16 = objc_msgSend(v4, sel_configuration);
    v17 = v1[v2];
    v19[0] = v15;
    v19[1] = v14;
    v19[2] = v16;
    v20 = v17;
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 64))(v19, v12, v13);

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  }
}

id CHSControlHost.description.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id result;
  void *v9;
  uint64_t v10;
  _QWORD v11[6];

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01748]), sel_initWithObject_, v0);
  if (!v1)
    return (id)0xD000000000000018;
  v2 = v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_18FB6F3BC;
  *(_QWORD *)(v4 + 24) = v3;
  v11[4] = sub_18FB6F3D4;
  v11[5] = v4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_18FB6E4C8;
  v11[3] = &block_descriptor;
  v5 = _Block_copy(v11);
  v6 = v0;
  swift_retain();
  v7 = v2;
  swift_release();
  objc_msgSend(v7, sel_appendProem_block_, 0, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = (id)swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(v7, sel_build);
    if (result)
    {
      v9 = result;
      v10 = sub_18FBCD0DC();
      swift_release();

      return (id)v10;
    }
  }
  __break(1u);
  return result;
}

void sub_18FB6E20C(void *a1, void *a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  void *v12;
  void *v13;

  swift_bridgeObjectRetain();
  v4 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v4, v5);

  v6 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v6, v7);

  v8 = objc_msgSend(a2, sel_configuration);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend(v8, sel_controlItems);

    type metadata accessor for CHSControlConfigurationItem(0);
    v11 = sub_18FBCD28C();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_18FBCD628();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_18FBCD7A8();
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  v12 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v12, v13);

}

uint64_t sub_18FB6E4A8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_18FB6E4C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void __swiftcall CHSControlHost.init()(CHSControlHost *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void CHSControlHost.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t _ControlHost.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _ControlHost.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*_ControlHost.identifier.modify())()
{
  return nullsub_1;
}

void *_ControlHost.configuration.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void _ControlHost.configuration.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*_ControlHost.configuration.modify())()
{
  return nullsub_1;
}

void _ControlHost.activationState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

_BYTE *_ControlHost.activationState.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = *result;
  return result;
}

uint64_t (*_ControlHost.activationState.modify())()
{
  return nullsub_1;
}

uint64_t sub_18FB6E65C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_18FB6E6A0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t default argument 1 of static SandboxExtension.issue(url:readonly:)()
{
  return 1;
}

uint64_t sub_18FB6E6FC(uint64_t a1)
{
  MEMORY[0x19400954C](&unk_18FBD5798, a1);
  return sub_18FBCCEB4();
}

uint64_t sub_18FB6E738()
{
  MEMORY[0x19400954C](&unk_18FBD5798);
  return sub_18FBCCEA8();
}

uint64_t sub_18FB6E780(uint64_t a1, uint64_t a2)
{
  sub_18FBCD850();
  MEMORY[0x19400954C](&unk_18FBD5798, a2);
  sub_18FBCCEA8();
  return sub_18FBCD88C();
}

void sub_18FB6E7D8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_18FB6E7E4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_18FB6E7FC()
{
  return sub_18FBCD85C();
}

_QWORD *sub_18FB6E824@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_18FB6E830()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t sub_18FB6E874()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t sub_18FB6E8B4(uint64_t a1, uint64_t a2)
{
  return sub_18FB6E90C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_18FB6E8C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_18FBCD0DC();
  v2 = sub_18FBCD0B8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_18FB6E900(uint64_t a1, uint64_t a2)
{
  return sub_18FB6E90C(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_18FB6E90C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_18FBCD0DC();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_18FB6E948()
{
  sub_18FBCD0DC();
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FB6E988()
{
  uint64_t v0;

  sub_18FBCD0DC();
  sub_18FBCD850();
  sub_18FBCD130();
  v0 = sub_18FBCD88C();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_18FB6E9F8(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_18FB6EA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x19400954C](&unk_18FBD5798, a3);
  return sub_18FBCCE9C();
}

BOOL sub_18FB6EA58(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_18FB6EA6C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_18FB6EA80(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_18FB6EA94(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_18FB6EAA8(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t sub_18FB6EABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_18FBCD0DC();
  v2 = v1;
  if (v0 == sub_18FBCD0DC() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_18FB6EB44(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_18FB6EB50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_18FBCD0B8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_18FB6EB94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_18FBCD0DC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_18FB6EBBC()
{
  sub_18FB203A8((unint64_t *)&qword_1EE18ADB8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_18FBD5A3C);
  sub_18FB203A8(&qword_1EE18ADC0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_18FBD5838);
  return sub_18FBCD67C();
}

uint64_t sub_18FB6EC40(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_18FB6EC50(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_18FB6EC84(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_18FB6ECF4(v6, v7, a3);
  v8 = *a1 + 8;
  sub_18FBCD454();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_18FB6ECF4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_18FB6EDC4(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_18FB6FA48((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_18FB6FA48((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_18FB6EDC4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_18FBCD460();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_18FB6EF7C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_18FBCD580();
  if (!v8)
  {
    sub_18FBCD610();
    __break(1u);
LABEL_17:
    result = sub_18FBCD670();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_18FB6EF7C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_18FB6F010(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_18FB6F184(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_18FB6F184(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_18FB6F010(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_18FBAB73C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_18FBCD538();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_18FBCD610();
      __break(1u);
LABEL_10:
      v2 = sub_18FBCD178();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_18FBCD670();
    __break(1u);
LABEL_14:
    result = sub_18FBCD610();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_18FB6F184(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187F20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_18FBCD670();
  __break(1u);
  return result;
}

_BYTE **sub_18FB6F2D0(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_18FB6F2E0(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_18FBCD454();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_18FB6F390()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18FB6F3BC()
{
  uint64_t v0;

  sub_18FB6E20C(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_18FB6F3C4()
{
  return swift_deallocObject();
}

uint64_t sub_18FB6F3D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_18FB6F410()
{
  unint64_t result;

  result = qword_1EE18ACC0;
  if (!qword_1EE18ACC0)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for CHSHostActivationState, &type metadata for CHSHostActivationState);
    atomic_store(result, (unint64_t *)&qword_1EE18ACC0);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for CHSHostActivationState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CHSHostActivationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18FB6F540 + 4 * byte_18FBD5425[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18FB6F574 + 4 * byte_18FBD5420[v4]))();
}

uint64_t sub_18FB6F574(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB6F57C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FB6F584);
  return result;
}

uint64_t sub_18FB6F590(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FB6F598);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18FB6F59C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB6F5A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB6F5B0(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_18FB6F5B8(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CHSHostActivationState()
{
  return &type metadata for CHSHostActivationState;
}

unint64_t type metadata accessor for CHSControlHost()
{
  unint64_t result;

  result = qword_1EE18ACD0;
  if (!qword_1EE18ACD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE18ACD0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for _ControlHost(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for _ControlHost(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for _ControlHost(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for _ControlHost(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for _ControlHost(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for _ControlHost(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _ControlHost(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _ControlHost()
{
  return &type metadata for _ControlHost;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE187F98);
}

void type metadata accessor for CGImageSource(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AD40);
}

void type metadata accessor for CGImageDestination(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AD48);
}

void type metadata accessor for CGImagePreferredColorConversionMode(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AD50);
}

void type metadata accessor for ASTCBlockSize(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AD58);
}

void type metadata accessor for CHSControlContentType(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AD60);
}

void type metadata accessor for CHSControlType(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AD68);
}

void type metadata accessor for CHSControlSize(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AD70);
}

void type metadata accessor for CHSControlPushPolicy(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AD78);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_18FB6FA98(a1, (unint64_t *)&unk_1EE18AD80);
}

void type metadata accessor for CHSControlVisibility(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AD90);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE187D78);
}

uint64_t sub_18FB6F8FC()
{
  return sub_18FB203A8((unint64_t *)&qword_1EE187DA0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_18FBD5A80);
}

uint64_t sub_18FB6F928()
{
  return sub_18FB203A8(&qword_1EE18AD98, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_18FBD57FC);
}

uint64_t sub_18FB6F954()
{
  return sub_18FB203A8(&qword_1EE18ADA0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_18FBD57D0);
}

uint64_t sub_18FB6F980()
{
  return sub_18FB203A8(&qword_1EE18ADA8, (uint64_t (*)(uint64_t))type metadata accessor for CHSControlPushPolicy, (uint64_t)&unk_18FBD5928);
}

uint64_t sub_18FB6F9AC()
{
  return sub_18FB203A8(&qword_1EE18ADB0, (uint64_t (*)(uint64_t))type metadata accessor for CHSControlContentType, (uint64_t)&unk_18FBD59D4);
}

uint64_t sub_18FB6F9D8()
{
  return sub_18FB203A8(&qword_1EE187DB0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_18FBD576C);
}

unint64_t sub_18FB6FA04()
{
  unint64_t result;

  result = qword_1EE18AEE8;
  if (!qword_1EE18AEE8)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for CHSHostActivationState, &type metadata for CHSHostActivationState);
    atomic_store(result, (unint64_t *)&qword_1EE18AEE8);
  }
  return result;
}

uint64_t sub_18FB6FA48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void type metadata accessor for CHSWidgetRelevanceServiceEventType(uint64_t a1)
{
  sub_18FB6FA98(a1, &qword_1EE18AEF8);
}

void sub_18FB6FA98(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void *sub_18FB6FAEC()
{
  qword_1EE189D80 = (uint64_t)&unk_1EE19DB20;
  return &unk_1EE19DB20;
}

id static ControlsXPCDefinition.clientInterface.getter()
{
  return sub_18FB6FBBC(&qword_1EE189CB0, (id *)&qword_1EE189D80);
}

void *sub_18FB6FB1C()
{
  qword_1EE189D88 = (uint64_t)&unk_1EE1A11D8;
  return &unk_1EE1A11D8;
}

id static ControlsXPCDefinition.serverInterface.getter()
{
  return sub_18FB6FBBC(&qword_1EE189D98, (id *)&qword_1EE189D88);
}

unint64_t static ControlsXPCDefinition.serviceEntitlement.getter()
{
  return 0xD000000000000019;
}

id sub_18FB6FB68()
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  qword_1EE189DA0 = (uint64_t)result;
  return result;
}

id static ControlsXPCDefinition.qos.getter()
{
  return sub_18FB6FBBC(&qword_1EE189DB0, (id *)&qword_1EE189DA0);
}

id sub_18FB6FBBC(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

unint64_t static ControlsXPCDefinition.domain.getter()
{
  return 0xD000000000000010;
}

unint64_t static ControlsXPCDefinition.serviceName.getter()
{
  return 0xD000000000000019;
}

unint64_t static ControlsXPCDefinition.machServiceName.getter()
{
  return 0xD000000000000018;
}

ValueMetadata *type metadata accessor for ControlsXPCDefinition()
{
  return &type metadata for ControlsXPCDefinition;
}

uint64_t HostType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6F72746E6F63;
  else
    return 0x746567646977;
}

ChronoServices::HostType_optional __swiftcall HostType.init(rawValue:)(Swift::UInt rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 2)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == 1)
    v2 = 0;
  *v1 = v2;
  return (ChronoServices::HostType_optional)rawValue;
}

uint64_t HostType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 1;
}

unint64_t sub_18FB6FCC4()
{
  unint64_t result;

  result = qword_1EE18AFC0;
  if (!qword_1EE18AFC0)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for HostType, &type metadata for HostType);
    atomic_store(result, (unint64_t *)&qword_1EE18AFC0);
  }
  return result;
}

uint64_t sub_18FB6FD08()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t sub_18FB6FD54()
{
  return sub_18FBCD85C();
}

uint64_t sub_18FB6FD88()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

_QWORD *sub_18FB6FDD0@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_18FB6FDF0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

uint64_t sub_18FB6FE08()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6F72746E6F63;
  else
    return 0x746567646977;
}

uint64_t storeEnumTagSinglePayload for HostType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18FB6FE8C + 4 * byte_18FBD5B2D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18FB6FEC0 + 4 * asc_18FBD5B28[v4]))();
}

uint64_t sub_18FB6FEC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB6FEC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FB6FED0);
  return result;
}

uint64_t sub_18FB6FEDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FB6FEE4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18FB6FEE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB6FEF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HostType()
{
  return &type metadata for HostType;
}

uint64_t DeviceIdentifier.rawValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a2)
    v2 = a1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t DeviceIdentifier.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  return result;
}

uint64_t DeviceIdentifier.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a2)
    v2 = a1;
  else
    v2 = 0x6C61636F6CLL;
  swift_bridgeObjectRetain();
  return v2;
}

BOOL DeviceIdentifier.isRemote.getter(uint64_t a1, uint64_t a2)
{
  return a2 != 0;
}

uint64_t sub_18FB6FF9C()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t sub_18FB6FFE0()
{
  return sub_18FBCD85C();
}

uint64_t sub_18FB70008()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t sub_18FB70048()
{
  _BYTE *v0;

  if (*v0)
    return 0x65746F6D6572;
  else
    return 0x6C61636F6CLL;
}

uint64_t sub_18FB7007C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_18FB70844(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_18FB700A0()
{
  return 0;
}

void sub_18FB700AC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_18FB700B8()
{
  sub_18FB70538();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB700E0()
{
  sub_18FB70538();
  return sub_18FBCD8C8();
}

uint64_t sub_18FB70108()
{
  return 0;
}

uint64_t sub_18FB70114@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_18FB70140(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_18FB7014C()
{
  sub_18FB705C0();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB70174()
{
  sub_18FB705C0();
  return sub_18FBCD8C8();
}

uint64_t sub_18FB7019C()
{
  return 1;
}

uint64_t sub_18FB701A4()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t sub_18FB701E4()
{
  return sub_18FBCD85C();
}

uint64_t sub_18FB70208()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t sub_18FB70244()
{
  return 12383;
}

uint64_t sub_18FB70250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_18FBCD7C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_18FB702CC()
{
  sub_18FB7057C();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB702F4()
{
  sub_18FB7057C();
  return sub_18FBCD8C8();
}

uint64_t DeviceIdentifier.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v17 = a3;
  v15[1] = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD9D478);
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD9D470);
  v7 = *(_QWORD *)(v15[0] - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD9D468);
  v18 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB70538();
  v13 = v17;
  sub_18FBCD8B0();
  if (v13)
  {
    v20 = 1;
    sub_18FB7057C();
    sub_18FBCD730();
    sub_18FBCD748();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v4);
  }
  else
  {
    v19 = 0;
    sub_18FB705C0();
    sub_18FBCD730();
    (*(void (**)(char *, _QWORD))(v7 + 8))(v9, v15[0]);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v12, v10);
}

unint64_t sub_18FB70538()
{
  unint64_t result;

  result = qword_1ECD9D498;
  if (!qword_1ECD9D498)
  {
    result = MEMORY[0x19400954C](&unk_18FBD6004, &type metadata for DeviceIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECD9D498);
  }
  return result;
}

unint64_t sub_18FB7057C()
{
  unint64_t result;

  result = qword_1EE18AFC8;
  if (!qword_1EE18AFC8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5FB4, &type metadata for DeviceIdentifier.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18AFC8);
  }
  return result;
}

unint64_t sub_18FB705C0()
{
  unint64_t result;

  result = qword_1ECD9D4B0;
  if (!qword_1ECD9D4B0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5F64, &type metadata for DeviceIdentifier.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4B0);
  }
  return result;
}

_QWORD *DeviceIdentifier.init(from:)(_QWORD *a1)
{
  return sub_18FB70924(a1);
}

uint64_t *sub_18FB70618@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result;
  v3 = result[1];
  if (!v3)
    v2 = 0;
  *a2 = v2;
  a2[1] = v3;
  return result;
}

uint64_t sub_18FB7062C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  v2 = v1[1];
  if (!v2)
    v3 = 0;
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_18FB70640@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_18FB70924(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_18FB70668(_QWORD *a1)
{
  uint64_t *v1;

  return DeviceIdentifier.encode(to:)(a1, *v1, v1[1]);
}

uint64_t sub_18FB70680()
{
  uint64_t *v0;
  uint64_t v1;

  if (v0[1])
    v1 = *v0;
  else
    v1 = 0x6C61636F6CLL;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18FB706C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_18FBCD850();
  sub_18FBCD868();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD130();
    swift_bridgeObjectRelease();
  }
  return sub_18FBCD88C();
}

uint64_t sub_18FB70744()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_18FBCD868();
  sub_18FBCD868();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FB707B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_18FBCD850();
  sub_18FBCD868();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD130();
    swift_bridgeObjectRelease();
  }
  return sub_18FBCD88C();
}

uint64_t sub_18FB70830(uint64_t *a1, uint64_t *a2)
{
  return sub_18FBC8610(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_18FB70844(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_18FBCD7C0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_18FBCD7C0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_18FB70924(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  char v29;
  char v30;

  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A060);
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78]();
  v27 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A058);
  v3 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A050);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB70538();
  v11 = (uint64_t)v28;
  sub_18FBCD8A4();
  if (v11)
    goto LABEL_9;
  v12 = v5;
  v13 = v27;
  v23 = v7;
  v28 = a1;
  v14 = sub_18FBCD70C();
  v15 = v14;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_18FBCD574();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18AFE8);
    *v21 = &type metadata for DeviceIdentifier;
    v10 = v9;
    sub_18FBCD6A0();
    sub_18FBCD568();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
    a1 = v28;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return v10;
  }
  if ((*(_BYTE *)(v14 + 32) & 1) != 0)
  {
    v30 = 1;
    sub_18FB7057C();
    sub_18FBCD694();
    v25 = v15;
    v16 = v24;
    v17 = sub_18FBCD6C4();
    v18 = v23;
    v10 = (_QWORD *)v17;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v6);
  }
  else
  {
    v29 = 0;
    sub_18FB705C0();
    sub_18FBCD694();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
    v10 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  return v10;
}

unint64_t sub_18FB70CB4()
{
  unint64_t result;

  result = qword_1EE18AFD0;
  if (!qword_1EE18AFD0)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for DeviceIdentifier, &type metadata for DeviceIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE18AFD0);
  }
  return result;
}

_QWORD *assignWithCopy for DeviceIdentifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DeviceIdentifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceIdentifier(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DeviceIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_18FB70E0C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_18FB70E24(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceIdentifier()
{
  return &type metadata for DeviceIdentifier;
}

uint64_t storeEnumTagSinglePayload for DeviceIdentifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18FB70EA0 + 4 * byte_18FBD5C25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18FB70ED4 + 4 * byte_18FBD5C20[v4]))();
}

uint64_t sub_18FB70ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB70EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FB70EE4);
  return result;
}

uint64_t sub_18FB70EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FB70EF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18FB70EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB70F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceIdentifier.CodingKeys()
{
  return &type metadata for DeviceIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceIdentifier.LocalCodingKeys()
{
  return &type metadata for DeviceIdentifier.LocalCodingKeys;
}

uint64_t getEnumTagSinglePayload for DeviceIdentifier.RemoteCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for DeviceIdentifier.RemoteCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_18FB70FC4 + 4 * byte_18FBD5C2A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_18FB70FE4 + 4 * byte_18FBD5C2F[v4]))();
}

_BYTE *sub_18FB70FC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_18FB70FE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB70FEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB70FF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB70FFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB71004(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_18FB71010()
{
  return 0;
}

ValueMetadata *type metadata accessor for DeviceIdentifier.RemoteCodingKeys()
{
  return &type metadata for DeviceIdentifier.RemoteCodingKeys;
}

unint64_t sub_18FB7102C()
{
  unint64_t result;

  result = qword_1EE18AFD8;
  if (!qword_1EE18AFD8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5E34, &type metadata for DeviceIdentifier.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18AFD8);
  }
  return result;
}

unint64_t sub_18FB71074()
{
  unint64_t result;

  result = qword_1EE18AFE0;
  if (!qword_1EE18AFE0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5F3C, &type metadata for DeviceIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18AFE0);
  }
  return result;
}

unint64_t sub_18FB710BC()
{
  unint64_t result;

  result = qword_1ECD9D4C0;
  if (!qword_1ECD9D4C0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5E5C, &type metadata for DeviceIdentifier.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4C0);
  }
  return result;
}

unint64_t sub_18FB71104()
{
  unint64_t result;

  result = qword_1ECD9D4B8;
  if (!qword_1ECD9D4B8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5E84, &type metadata for DeviceIdentifier.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4B8);
  }
  return result;
}

unint64_t sub_18FB7114C()
{
  unint64_t result;

  result = qword_1ECD9D4D0;
  if (!qword_1ECD9D4D0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5DA4, &type metadata for DeviceIdentifier.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4D0);
  }
  return result;
}

unint64_t sub_18FB71194()
{
  unint64_t result;

  result = qword_1ECD9D4C8;
  if (!qword_1ECD9D4C8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5DCC, &type metadata for DeviceIdentifier.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4C8);
  }
  return result;
}

unint64_t sub_18FB711DC()
{
  unint64_t result;

  result = qword_1ECD9D4A8;
  if (!qword_1ECD9D4A8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5EAC, &type metadata for DeviceIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4A8);
  }
  return result;
}

unint64_t sub_18FB71224()
{
  unint64_t result;

  result = qword_1ECD9D4A0;
  if (!qword_1ECD9D4A0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD5ED4, &type metadata for DeviceIdentifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4A0);
  }
  return result;
}

uint64_t DeviceScopedIdentity<>.hostIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *DeviceScopedIdentity<>.init(hostIdentifier:deviceID:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = result[1];
  *a4 = *result;
  a4[1] = v4;
  a4[2] = a2;
  a4[3] = a3;
  return result;
}

uint64_t DeviceScopedIdentity<>.powerlogHostIdentity.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (v0[3])
  {
    swift_bridgeObjectRetain();
    sub_18FBCD16C();
    swift_bridgeObjectRelease();
    return 0x2D65746F6D6552;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t CHSControlConfiguration.controlItems.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t CHSControlConfiguration.controlItems.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___CHSControlConfiguration_controlItems);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

void sub_18FB7147C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  v4 = sub_18FBCD28C();

  *a2 = v4;
}

void sub_18FB714DC(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  type metadata accessor for CHSControlConfigurationItem(0);
  v3 = (id)sub_18FBCD280();
  objc_msgSend(v2, sel_setControlItems_, v3);

}

void __swiftcall CHSControlConfiguration.init(controlItems:)(CHSControlConfiguration *__return_ptr retstr, Swift::OpaquePointer controlItems)
{
  id v2;
  void *v3;

  v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  type metadata accessor for CHSControlConfigurationItem(0);
  v3 = (void *)sub_18FBCD280();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_initWithControlItems_, v3);

}

id CHSControlConfiguration.init(controlItems:)(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  *(_QWORD *)(v1 + OBJC_IVAR___CHSControlConfiguration_controlItems) = a1;
  v3.super_class = (Class)CHSControlConfiguration;
  return objc_msgSendSuper2(&v3, sel_init);
}

id CHSControlConfiguration.copy(with:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  a2[3] = type metadata accessor for CHSControlConfiguration(a1);
  *a2 = v4;
  return v4;
}

uint64_t type metadata accessor for CHSControlConfiguration(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE187EE0);
}

uint64_t CHSControlConfiguration.isEqual(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  id v5;
  unint64_t v6;
  unsigned __int8 v7;
  void *v9;
  _BYTE v10[24];
  uint64_t v11;

  v2 = sub_18FB1FA14(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_18FB1F7C4((uint64_t)v10);
    goto LABEL_6;
  }
  type metadata accessor for CHSControlConfiguration(v2);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    v7 = 0;
    return v7 & 1;
  }
  if (v9 == v1)
  {

    v7 = 1;
  }
  else
  {
    v3 = objc_msgSend(v1, sel_controlItems);
    type metadata accessor for CHSControlConfigurationItem(0);
    v4 = sub_18FBCD28C();

    v5 = objc_msgSend(v9, sel_controlItems);
    v6 = sub_18FBCD28C();

    v7 = sub_18FB717B8(v4, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7 & 1;
}

id sub_18FB717B8(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  void *v12;
  id v13;
  void *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  unint64_t v24;
  unint64_t v25;
  void **v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;

  v2 = a2;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v30 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    if (v5 == v30)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  swift_bridgeObjectRetain();
  v5 = sub_18FBCD628();
  swift_bridgeObjectRelease();
  v6 = (unint64_t)v2 >> 62;
  if ((unint64_t)v2 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v5 != *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v5)
    goto LABEL_37;
  v7 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0)
    v7 = v3;
  if (!v4)
    v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  v8 = v2 & 0xFFFFFFFFFFFFFF8;
  v9 = (v2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v2 < 0)
    v10 = v2;
  else
    v10 = v2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v31 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v3 + 32); ; result = (id)MEMORY[0x1940086C4](0, v3))
  {
    v12 = result;
    if ((v2 & 0xC000000000000001) == 0)
      break;
    v13 = (id)MEMORY[0x1940086C4](0, v2);
LABEL_21:
    v14 = v13;
    type metadata accessor for CHSControlConfigurationItem(0);
    v15 = sub_18FBCD40C();

    if ((v15 & 1) == 0)
      goto LABEL_48;
    v16 = v5 - 1;
    if (v5 == 1)
      return (id)(v5 & 1);
    if (((v2 | v3) & 0xC000000000000001) != 0)
    {
      v17 = 0;
      v18 = v5 - 2;
      while (v16 != v17)
      {
        v5 = v17 + 1;
        if (v31)
          v19 = (id)MEMORY[0x1940086C4](v17 + 1, v3);
        else
          v19 = *(id *)(v3 + 40 + 8 * v17);
        v20 = v19;
        if ((v2 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1940086C4](v17 + 1, v2);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v8 + 16))
            goto LABEL_53;
          v21 = *(id *)(v2 + 40 + 8 * v17);
        }
        v22 = v21;
        v5 = sub_18FBCD40C();

        if ((v5 & 1) != 0 && v18 != v17++)
          continue;
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v8 + 16);
      if (v24 <= 1)
        v24 = 1;
      v25 = v24 - 1;
      v26 = (void **)(v3 + 40);
      v8 = v2 + 40;
      while (v16)
      {
        if (!v25)
          goto LABEL_52;
        v28 = *v26++;
        v27 = v28;
        v29 = *(void **)v8;
        v8 += 8;
        v2 = v27;
        v3 = v29;
        v5 = sub_18FBCD40C();

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16)
            continue;
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v8 + 16))
  {
    v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t CHSControlConfiguration.hash.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  _OWORD v4[4];
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  sub_18FBCD898();
  v1 = objc_msgSend(v0, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  v2 = sub_18FBCD28C();

  sub_18FB731D0((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  v8 = v4[2];
  v9 = v4[3];
  v10 = v5;
  v6 = v4[0];
  v7 = v4[1];
  return sub_18FBCD880();
}

id CHSControlConfiguration.description.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  void *v5;
  void *v6;
  id result;
  void *v8;
  uint64_t v9;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01748]), sel_initWithObject_, v0);
  if (!v1)
    return (id)0xD000000000000021;
  v2 = v1;
  v3 = objc_msgSend(v0, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  v4 = sub_18FBCD28C();

  sub_18FB71E0C(v4);
  swift_bridgeObjectRelease();
  v5 = (void *)sub_18FBCD280();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_18FBCD0B8();
  objc_msgSend(v2, sel_appendArraySection_withName_skipIfEmpty_, v5, v6, 1);

  result = objc_msgSend(v2, sel_build);
  if (result)
  {
    v8 = result;
    v9 = sub_18FBCD0DC();

    return (id)v9;
  }
  __break(1u);
  return result;
}

char *sub_18FB71E0C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_18FBCD628();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return (char *)v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_18FB7F03C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1940086C4](i, a1);
        type metadata accessor for CHSControlConfigurationItem(0);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_18FB7F03C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_18FB7F03C((char *)(v6 > 1), v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_18FB73714(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      type metadata accessor for CHSControlConfigurationItem(0);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_18FB7F03C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_18FB7F03C((char *)(v10 > 1), v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_18FB73714(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (char *)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FB7203C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_18FB7F03C(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_18FB7F03C(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_18FB7F03C((char *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_18FB73714(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      --v1;
    }
    while (v1);
  }
  return v2;
}

void __swiftcall CHSControlConfiguration.init()(CHSControlConfiguration *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void CHSControlConfiguration.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_18FB721EC()
{
  sub_18FBCD850();
  sub_18FBCD130();
  return sub_18FBCD88C();
}

uint64_t sub_18FB72244()
{
  return sub_18FBCD130();
}

uint64_t sub_18FB72264()
{
  sub_18FBCD850();
  sub_18FBCD130();
  return sub_18FBCD88C();
}

uint64_t sub_18FB722B8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_18FBCD688();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_18FB72308(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "controlItems");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_18FB7232C()
{
  return 0x496C6F72746E6F63;
}

uint64_t sub_18FB7234C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_18FBCD688();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_18FB723A0()
{
  sub_18FB73448();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB723C8()
{
  sub_18FB73448();
  return sub_18FBCD8C8();
}

uint64_t static CHSControlConfiguration.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall CHSControlConfiguration.encode(with:)(NSCoder with)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, sel_controlItems);
  if (!v3)
  {
    type metadata accessor for CHSControlConfigurationItem(0);
    sub_18FBCD28C();
    v3 = (id)sub_18FBCD280();
    swift_bridgeObjectRelease();
  }
  v4 = (id)sub_18FBCD0B8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

}

void __swiftcall CHSControlConfiguration.init(coder:)(CHSControlConfiguration_optional *__return_ptr retstr, NSCoder coder)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, coder.super.isa);

}

id CHSControlConfiguration.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1880D0);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_18FBD6060;
  *(_QWORD *)(v4 + 32) = type metadata accessor for CHSControlConfigurationItem(0);
  v5 = sub_18FBCD3F4();
  swift_bridgeObjectRelease();
  if (v5 && (v6 = sub_18FB726E8(v5), swift_bridgeObjectRelease(), v6))
  {
    v7 = (void *)sub_18FBCD280();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v2, sel_initWithControlItems_, v7);

  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v8;
}

uint64_t sub_18FB726E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_18FBCD5B0();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_18FB6FA48(i, (uint64_t)v5);
    type metadata accessor for CHSControlConfigurationItem(0);
    if (!swift_dynamicCast())
      break;
    sub_18FBCD598();
    sub_18FBCD5BC();
    sub_18FBCD5C8();
    sub_18FBCD5A4();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

uint64_t sub_18FB727E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_18FBCD5B0();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_18FB6FA48(i, (uint64_t)v5);
    sub_18FB1F254(0, &qword_1EE1897F0);
    if (!swift_dynamicCast())
      break;
    sub_18FBCD598();
    sub_18FBCD5BC();
    sub_18FBCD5C8();
    sub_18FBCD5A4();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

Swift::String_optional __swiftcall CHSControlConfiguration.description(withMultilinePrefix:)(Swift::String_optional withMultilinePrefix)
{
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  Swift::String_optional result;

  v2 = v1;
  if (withMultilinePrefix.value._object)
    v3 = (void *)sub_18FBCD0B8();
  else
    v3 = 0;
  v4 = objc_msgSend(v2, sel_descriptionBuilderWithMultilinePrefix_, v3);

  if (v4)
  {
    v7 = objc_msgSend(v4, sel_build);

    if (v7)
    {
      v8 = sub_18FBCD0DC();
      v10 = v9;

    }
    else
    {
      v8 = 0;
      v10 = 0;
    }
    v5 = v8;
    v6 = v10;
  }
  else
  {
    __break(1u);
  }
  result.value._object = v6;
  result.value._countAndFlagsBits = v5;
  return result;
}

Swift::String_optional __swiftcall CHSControlConfiguration.succinctDescription()()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String_optional result;

  v1 = objc_msgSend(v0, sel_succinctDescriptionBuilder);
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(v1, sel_build);

    if (v4)
    {
      v5 = sub_18FBCD0DC();
      v7 = v6;

    }
    else
    {
      v5 = 0;
      v7 = 0;
    }
    v1 = (id)v5;
    v2 = v7;
  }
  else
  {
    __break(1u);
  }
  result.value._object = v2;
  result.value._countAndFlagsBits = (uint64_t)v1;
  return result;
}

id CHSControlConfiguration.succinctDescriptionBuilder()()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01748]), sel_initWithObject_, v0);
  if (result)
  {
    v2 = result;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v0;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_18FB73410;
    *(_QWORD *)(v4 + 24) = v3;
    v9[4] = sub_18FB73428;
    v9[5] = v4;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 1107296256;
    v9[2] = sub_18FB6E4C8;
    v9[3] = &block_descriptor_0;
    v5 = _Block_copy(v9);
    v6 = v2;
    v7 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v6, sel_appendProem_block_, 0, v5);
    _Block_release(v5);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return v6;
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_18FB72D58(void *a1, id a2)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  id v6;

  v3 = objc_msgSend(a2, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  v4 = sub_18FBCD28C();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_18FBCD628();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v6 = (id)sub_18FBCD0B8();

}

uint64_t CHSControlConfiguration.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18AFF8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB73448();
  sub_18FBCD8B0();
  v8 = objc_msgSend(v2, sel_controlItems);
  type metadata accessor for CHSControlConfigurationItem(0);
  v9 = sub_18FBCD28C();

  v11[1] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B008);
  sub_18FB734D0(&qword_1EE18B010, &qword_1EE18B018, (uint64_t)&protocol conformance descriptor for CHSControlConfigurationItem, MEMORY[0x1E0DEAF10]);
  sub_18FBCD76C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

_QWORD *CHSControlConfiguration.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  id v9;
  void *v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B020);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB73448();
  sub_18FBCD8A4();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B008);
    sub_18FB734D0(&qword_1EE18B028, &qword_1EE18B030, (uint64_t)&protocol conformance descriptor for CHSControlConfigurationItem, MEMORY[0x1E0DEAF40]);
    sub_18FBCD6E8();
    v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    type metadata accessor for CHSControlConfigurationItem(0);
    v10 = (void *)sub_18FBCD280();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v9, sel_initWithControlItems_, v10);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

_QWORD *sub_18FB73188@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = CHSControlConfiguration.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_18FB731B0(_QWORD *a1)
{
  return CHSControlConfiguration.encode(to:)(a1);
}

void sub_18FB731D0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void **v5;
  void *v6;
  id v7;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD628();
    swift_bridgeObjectRelease();
    sub_18FBCD85C();
    swift_bridgeObjectRetain();
    v3 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    if (!v3)
      return;
  }
  else
  {
    sub_18FBCD85C();
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return;
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x1940086C4](i, a2);
      sub_18FBCD418();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v5 = (void **)(a2 + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      sub_18FBCD418();

      --v3;
    }
    while (v3);
  }
}

id _sSo23CHSControlConfigurationC14ChronoServicesE18descriptionBuilder19withMultilinePrefixSo013BSDescriptionF0CSgSSSg_tF_0()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  unint64_t v4;
  void *v5;
  void *v6;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01748]), sel_initWithObject_, v0);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(v0, sel_controlItems);
    type metadata accessor for CHSControlConfigurationItem(0);
    v4 = sub_18FBCD28C();

    sub_18FB71E0C(v4);
    swift_bridgeObjectRelease();
    v5 = (void *)sub_18FBCD280();
    swift_bridgeObjectRelease();
    v6 = (void *)sub_18FBCD0B8();
    objc_msgSend(v2, sel_appendArraySection_withName_skipIfEmpty_, v5, v6, 1);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_18FB733E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18FB73410()
{
  uint64_t v0;

  sub_18FB72D58(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_18FB73418()
{
  return swift_deallocObject();
}

uint64_t sub_18FB73428()
{
  uint64_t v0;

  return sub_18FB6E4A8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_18FB73448()
{
  unint64_t result;

  result = qword_1EE18B000;
  if (!qword_1EE18B000)
  {
    result = MEMORY[0x19400954C](&unk_18FBD61F4, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE18B000);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x194009540](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_18FB734D0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE18B008);
    v10 = sub_18FB7354C(a2, a3);
    result = MEMORY[0x19400954C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FB7354C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CHSControlConfigurationItem(255);
    result = MEMORY[0x19400954C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

char *keypath_get_selector_controlItems()
{
  return sel_controlItems;
}

uint64_t _s10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_18FB735E0 + 4 * byte_18FBD6070[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_18FB73600 + 4 * byte_18FBD6075[v4]))();
}

_BYTE *sub_18FB735E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_18FB73600(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB73608(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB73610(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB73618(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB73620(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unint64_t sub_18FB73640()
{
  unint64_t result;

  result = qword_1EE18B038;
  if (!qword_1EE18B038)
  {
    result = MEMORY[0x19400954C](&unk_18FBD61CC, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE18B038);
  }
  return result;
}

unint64_t sub_18FB73688()
{
  unint64_t result;

  result = qword_1EE18B040;
  if (!qword_1EE18B040)
  {
    result = MEMORY[0x19400954C](&unk_18FBD6104, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE18B040);
  }
  return result;
}

unint64_t sub_18FB736D0()
{
  unint64_t result;

  result = qword_1EE18B048;
  if (!qword_1EE18B048)
  {
    result = MEMORY[0x19400954C](&unk_18FBD612C, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE18B048);
  }
  return result;
}

_OWORD *sub_18FB73714(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_18FB73724()
{
  void *v0;
  char v1;

  v0 = (void *)sub_18FBCD0B8();
  v1 = MGGetBoolAnswer();

  byte_1EE192798 = v1;
}

unint64_t sub_18FB73770()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  char v7;
  uint64_t inited;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  void *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  void *v21;
  id v22;
  char v23;
  void *v25;
  id v26;
  char v27;
  void *v28;
  id v29;
  char v30;
  _OWORD v31[2];
  __int128 v32;
  uint64_t v33;

  v2 = *v0;
  v1 = v0[1];
  v3 = *((_DWORD *)v0 + 4);
  v4 = *((unsigned __int8 *)v0 + 20);
  v5 = *((unsigned __int8 *)v0 + 21);
  v6 = *((_DWORD *)v0 + 6);
  v7 = *((_BYTE *)v0 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187DD0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FBD6250;
  v9 = (void *)*MEMORY[0x1E0CBC830];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBC830];
  v10 = MEMORY[0x1E0DEE0F8];
  *(_DWORD *)(inited + 40) = v3;
  v11 = (void *)*MEMORY[0x1E0CBCA18];
  *(_QWORD *)(inited + 64) = v10;
  *(_QWORD *)(inited + 72) = v11;
  v12 = (void *)*MEMORY[0x1E0CBC840];
  type metadata accessor for CFString(0);
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 80) = v12;
  v14 = v9;
  v15 = v11;
  v16 = v12;
  v17 = sub_18FB73A0C(inited);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v18 = (void *)sub_18FBCD0B8();
    v33 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v32 = v2;
    *((_QWORD *)&v32 + 1) = v1;
    sub_18FB73714(&v32, v31);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_18FBAB818(v31, v18, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  v20 = MEMORY[0x1E0DEAFA0];
  if (v4 == 2)
  {
    if (v5 == 2)
      goto LABEL_5;
LABEL_9:
    v28 = (void *)*MEMORY[0x1E0CBD130];
    v33 = v20;
    LOBYTE(v32) = v5 & 1;
    sub_18FB73714(&v32, v31);
    v29 = v28;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    sub_18FBAB818(v31, v29, v30);

    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return v17;
    goto LABEL_6;
  }
  v25 = (void *)*MEMORY[0x1E0CBC858];
  v33 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v32) = v4 & 1;
  sub_18FB73714(&v32, v31);
  v26 = v25;
  v27 = swift_isUniquelyReferenced_nonNull_native();
  sub_18FBAB818(v31, v26, v27);

  swift_bridgeObjectRelease();
  if (v5 != 2)
    goto LABEL_9;
LABEL_5:
  if ((v7 & 1) == 0)
  {
LABEL_6:
    v21 = (void *)*MEMORY[0x1E0CBC800];
    v33 = MEMORY[0x1E0DEE0F8];
    LODWORD(v32) = v6;
    sub_18FB73714(&v32, v31);
    v22 = v21;
    v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_18FBAB818(v31, v22, v23);

    swift_bridgeObjectRelease();
  }
  return v17;
}

unint64_t sub_18FB73A0C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187DC0);
  v2 = sub_18FBCD664();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_18FB748A4(v6, (uint64_t)&v13, &qword_1EE187DB8);
    v7 = v13;
    result = sub_18FB7F774(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_18FB73714(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FB73B38(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE189CA0);
  v2 = (_QWORD *)sub_18FBCD664();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_18FB7F7E4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FB73C48(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B0C8);
  v2 = (_QWORD *)sub_18FBCD664();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_18FB7F878((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FB73D50(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  void *v6;
  char v7;
  id v8;
  id v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188058);
  v2 = (_QWORD *)sub_18FBCD664();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = (void *)*((_QWORD *)v4 - 2);
    v6 = (void *)*((_QWORD *)v4 - 1);
    v7 = *v4;
    v8 = v6;
    v9 = v5;
    result = sub_18FB7F8C4((uint64_t)v9);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v9;
    v12 = v2[7] + 16 * result;
    *(_QWORD *)v12 = v6;
    *(_BYTE *)(v12 + 8) = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 24;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FB73E60(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B0B8);
  v2 = sub_18FBCD664();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_18FB748A4(v6, (uint64_t)&v15, &qword_1EE18B0C0);
    v7 = v15;
    v8 = v16;
    result = sub_18FB7F7E4(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_18FB73714(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FB73F94(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B0B0);
  v2 = (_QWORD *)sub_18FBCD664();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_18FB7F7E4(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t ImageFormat.isSupported.getter()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 28) >> 6)
    return 1;
  if (qword_1EE189448 != -1)
    swift_once();
  return byte_1EE192798;
}

uint64_t ImageFormat.typeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v9;

  v1 = sub_18FBCCF38();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(unsigned __int8 *)(v0 + 28);
  if (!(v5 >> 6))
    return 0x6C7070612E6D6F63;
  if (v5 >> 6 == 1)
    return 0x6A2E63696C627570;
  if ((*(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32)) != 0x8000000000
    || (*(_QWORD *)(v0 + 8) | *(_QWORD *)(v0 + 16) | *(_QWORD *)v0) != 0)
  {
    return 0x702E63696C627570;
  }
  sub_18FBCCF2C();
  v6 = sub_18FBCCF14();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

unint64_t ImageFormat.cgImageDestinationOptions.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t inited;
  void *v5;
  id v6;

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 28);
  if (v2 >> 6 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187DD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FBD6060;
    v5 = (void *)*MEMORY[0x1E0CBCF68];
    *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEF040];
    *(_QWORD *)(inited + 32) = v5;
    *(_QWORD *)(inited + 40) = v1;
    v6 = v5;
    return sub_18FB73A0C(inited);
  }
  else if (v2 >> 6)
  {
    return 0;
  }
  else
  {
    return sub_18FB73770();
  }
}

void sub_18FB74304()
{
  qword_1EE189450 = 0;
  *(_QWORD *)algn_1EE189458 = 0;
  dword_1EE189460 = 68;
  word_1EE189464 = 514;
  dword_1EE189468 = 0;
  byte_1EE18946C = 1;
}

uint64_t static ImageFormat.ASTCOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  int v3;
  __int16 v4;
  int v5;
  char v6;

  if (qword_1EE189470 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EE189458;
  v3 = dword_1EE189460;
  v4 = word_1EE189464;
  v5 = dword_1EE189468;
  v6 = byte_1EE18946C;
  *(_QWORD *)a1 = qword_1EE189450;
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 20) = v4;
  *(_DWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 28) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FB743A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (((a4 >> 38) & 3) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ImageFormat(uint64_t a1)
{
  return sub_18FB743D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32));
}

uint64_t sub_18FB743D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (((a4 >> 38) & 3) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ImageFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  sub_18FB743A4(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithCopy for ImageFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 28);
  v7 = *(unsigned int *)(a2 + 24);
  sub_18FB743A4(*(_QWORD *)a2, v4, v5, v7 | (v6 << 32));
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 28) = v6;
  sub_18FB743D4(v8, v9, v10, v11);
  return a1;
}

__n128 __swift_memcpy29_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ImageFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 28);
  v5 = *(_DWORD *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 28) = v4;
  sub_18FB743D4(v6, v8, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageFormat(uint64_t a1, unsigned int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFD && *(_BYTE *)(a1 + 29))
    return (*(_DWORD *)a1 + 8388606);
  if ((((((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32)) >> 17) >> 21) | (4 * (((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32)) >> 17) & 0x1F0000 | *(unsigned __int16 *)(a1 + 22)))) ^ 0x7FFFFF) >= 0x7FFFFD)
    v3 = -1;
  else
    v3 = ((((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32)) >> 17) >> 21) | (4 * (((*(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int8 *)(a1 + 28) << 32)) >> 17) & 0x1F0000 | *(unsigned __int16 *)(a1 + 22)))) ^ 0x7FFFFF;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageFormat(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7FFFFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 8388606;
    if (a3 >= 0x7FFFFE)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFE)
      *(_BYTE *)(result + 29) = 0;
    if (a2)
    {
      v3 = -a2 >> 2;
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = v3 << 48;
      *(_DWORD *)(result + 24) = 0;
      *(_BYTE *)(result + 28) = (unint64_t)((v3 & 0x1F0000) - (a2 << 21)) >> 15;
    }
  }
  return result;
}

uint64_t sub_18FB74634(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 28) >> 6;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_18FB74650(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;
  unint64_t v3;

  v2 = *(_DWORD *)(a1 + 24);
  result = a1 + 24;
  v3 = v2 | ((unint64_t)*(unsigned __int8 *)(result + 4) << 32);
  *(_DWORD *)result = v2;
  *(_BYTE *)(result + 4) = BYTE4(v3) & 0x3F;
  return result;
}

uint64_t sub_18FB7466C(uint64_t result, uint64_t a2)
{
  int v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *(_DWORD *)(result + 24);
    result += 24;
    v3 = (a2 << 38) | ((unint64_t)(*(_BYTE *)(result + 4) & 1) << 32);
    *(_QWORD *)(result - 8) &= 0xFFFFFFFFFFFFuLL;
    *(_DWORD *)result = v2;
    *(_BYTE *)(result + 4) = BYTE4(v3);
  }
  else
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 2);
    *(_DWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 28) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageFormat()
{
  return &type metadata for ImageFormat;
}

uint64_t initializeWithCopy for ImageFormat.ASTCOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageFormat.ASTCOptions(uint64_t a1, uint64_t a2)
{
  int v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  v4 = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for ImageFormat.ASTCOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_WORD *)(a1 + 20) = *(_WORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageFormat.ASTCOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 29))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageFormat.ASTCOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 29) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 29) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageFormat.ASTCOptions()
{
  return &type metadata for ImageFormat.ASTCOptions;
}

uint64_t sub_18FB748A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t CHSControlPushPolicy.description.getter(uint64_t a1)
{
  unint64_t v1;

  v1 = 0x776F6C6C41746F6ELL;
  if (a1 == 1)
    v1 = 0xD000000000000012;
  if (a1 == 2)
    return 0x6564694672657375;
  else
    return v1;
}

uint64_t sub_18FB74954()
{
  _QWORD *v0;
  unint64_t v1;

  v1 = 0x776F6C6C41746F6ELL;
  if (*v0 == 1)
    v1 = 0xD000000000000012;
  if (*v0 == 2)
    return 0x6564694672657375;
  else
    return v1;
}

uint64_t CHSControlConfigurationItem.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id CHSControlConfigurationItem.controlIdentity.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__controlIdentity);
}

uint64_t CHSControlConfigurationItem.location.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___CHSControlConfigurationItem_location);
}

uint64_t CHSControlConfigurationItem.pushPolicy.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__pushPolicy);
}

id CHSControlConfigurationItem.init(uniqueIdentifier:controlIdentity:location:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v5;

  v5 = sub_18FB76A94(a1, a2, a3, a4);

  return v5;
}

uint64_t CHSControlConfigurationItem.canAppearInSecureEnvironment.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment);
}

uint64_t CHSControlConfigurationItem.supportsLowLuminance.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance);
}

uint64_t CHSControlConfigurationItem.supportedColorSchemes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes);
}

id CHSControlConfigurationItem.copy(with:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  a2[3] = type metadata accessor for CHSControlConfigurationItem(a1);
  *a2 = v4;
  return v4;
}

BOOL CHSControlConfigurationItem.isEqual(_:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  BOOL v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE v14[24];
  uint64_t v15;

  v2 = v1;
  v3 = sub_18FB1FA14(a1, (uint64_t)v14);
  if (v15)
  {
    type metadata accessor for CHSControlConfigurationItem(v3);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (v13 == v1)
      {

        return 1;
      }
      v4 = *(_QWORD *)&v1[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier] == *(_QWORD *)&v13[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier]
        && *(_QWORD *)&v1[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier + 8] == *(_QWORD *)&v13[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier + 8];
      if (v4 || (sub_18FBCD7C0() & 1) != 0)
      {
        v5 = objc_msgSend(v1, sel_location);
        if (v5 == objc_msgSend(v13, sel_location))
        {
          sub_18FB1F254(0, qword_1EE189840);
          v6 = *(void **)&v13[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
          v7 = *(id *)&v2[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
          v8 = v6;
          v9 = sub_18FBCD40C();

          if ((v9 & 1) != 0
            && *(_QWORD *)&v2[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy] == *(_QWORD *)&v13[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy]
            && v2[OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment] == v13[OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment]
            && v2[OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance] == v13[OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance])
          {
            v11 = *(_QWORD *)&v2[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes];
            v12 = *(_QWORD *)&v13[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes];

            return v11 == v12;
          }
        }
      }

    }
  }
  else
  {
    sub_18FB1F7C4((uint64_t)v14);
  }
  return 0;
}

uint64_t CHSControlConfigurationItem.hash.getter()
{
  char *v0;
  void *v1;
  id v2;

  v1 = v0;
  sub_18FBCD898();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  v2 = *(id *)&v0[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
  sub_18FBCD418();

  sub_18FBCD85C();
  objc_msgSend(v1, sel_location);
  sub_18FBCD85C();
  sub_18FBCD868();
  sub_18FBCD868();
  sub_18FBCD85C();
  return sub_18FBCD880();
}

id CHSControlConfigurationItem.description.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id result;
  void *v9;
  uint64_t v10;
  _QWORD v11[6];

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01748]), sel_initWithObject_, v0);
  if (!v1)
    return (id)0xD000000000000025;
  v2 = v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v0;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_18FB76C5C;
  *(_QWORD *)(v4 + 24) = v3;
  v11[4] = sub_18FB73428;
  v11[5] = v4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_18FB6E4C8;
  v11[3] = &block_descriptor_1;
  v5 = _Block_copy(v11);
  v6 = v0;
  swift_retain();
  v7 = v2;
  swift_release();
  objc_msgSend(v7, sel_appendProem_block_, 0, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  result = (id)swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    result = objc_msgSend(v7, sel_build);
    if (result)
    {
      v9 = result;
      v10 = sub_18FBCD0DC();
      swift_release();

      return (id)v10;
    }
  }
  __break(1u);
  return result;
}

void sub_18FB7514C(void *a1, char *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  __CFString *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  swift_bridgeObjectRetain();
  v4 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v4, v5);

  v6 = *(id *)&a2[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
  v7 = (void *)sub_18FBCD0B8();

  v8 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v8, v9);

  v10 = (id)NSStringFromWidgetLocation((unint64_t)objc_msgSend(a2, sel_location));
  if (!v10)
  {
    sub_18FBCD0DC();
    v10 = (__CFString *)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
  }
  v11 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v10, v11);

  v12 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v12, v13);

  v14 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v14, v15);

  v16 = NSStringFromCHSColorSchemes(*(_QWORD *)&a2[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes]);
  if (!v16)
  {
    sub_18FBCD0DC();
    v16 = (id)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
  }
  v17 = (id)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v16, v17);

}

id CHSControlConfigurationItem.init(uniqueIdentifier:controlIdentity:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;

  v5 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithUniqueIdentifier_controlIdentity_location_, v5, a3, 0);

  return v6;
}

void CHSControlConfigurationItem.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_18FB7567C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_18FB756B4 + 4 * byte_18FBD62A0[a1]))(0xD000000000000010, 0x800000018FBE6E90);
}

uint64_t sub_18FB756B4()
{
  return 0x496C6F72746E6F63;
}

uint64_t sub_18FB756D8()
{
  return 0x696C6F5068737570;
}

uint64_t sub_18FB756F4()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_18FB7570C(uint64_t a1)
{
  return a1 + 12;
}

uint64_t sub_18FB75744(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_18FB7577C + 4 * byte_18FBD62A7[a1]))(0xD000000000000010, 0x800000018FBE6E90);
}

uint64_t sub_18FB7577C()
{
  return 0x496C6F72746E6F63;
}

uint64_t sub_18FB757A0()
{
  return 0x696C6F5068737570;
}

uint64_t sub_18FB757BC()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_18FB757D4(uint64_t a1)
{
  return a1 + 12;
}

void sub_18FB7580C(char *a1)
{
  sub_18FBC7B6C(*a1);
}

void sub_18FB75818()
{
  char *v0;

  sub_18FBC8FCC(0, *v0);
}

void sub_18FB75824(uint64_t a1)
{
  char *v1;

  sub_18FBC8A1C(a1, *v1);
}

void sub_18FB7582C(uint64_t a1)
{
  char *v1;

  sub_18FBC8FCC(a1, *v1);
}

uint64_t sub_18FB75834@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB76F70();
  *a1 = result;
  return result;
}

uint64_t sub_18FB75860@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_18FB7567C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_18FB75888()
{
  unsigned __int8 *v0;

  return sub_18FB75744(*v0);
}

uint64_t sub_18FB75890@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB76F70();
  *a1 = result;
  return result;
}

void sub_18FB758B4(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_18FB758C0()
{
  sub_18FB76C8C();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB758E8()
{
  sub_18FB76C8C();
  return sub_18FBCD8C8();
}

uint64_t static CHSControlConfigurationItem.supportsSecureCoding.getter()
{
  return 1;
}

Swift::Void __swiftcall CHSControlConfigurationItem.encode(with:)(NSCoder with)
{
  char *v1;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  id v17;

  swift_bridgeObjectRetain();
  v3 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_18FBCD0B8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  v5 = *(id *)&v1[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
  v6 = (void *)sub_18FBCD0B8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);

  v7 = *(_QWORD *)&v1[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy];
  if (v7 >> 31)
  {
    __break(1u);
    goto LABEL_7;
  }
  v8 = (void *)sub_18FBCD0B8();
  -[objc_class encodeInt32:forKey:](with.super.isa, sel_encodeInt32_forKey_, v7, v8);

  v9 = (uint64_t)objc_msgSend(v1, sel_location);
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v10 = v9;
  if (v9 > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = (void *)sub_18FBCD0B8();
  -[objc_class encodeInt32:forKey:](with.super.isa, sel_encodeInt32_forKey_, v10, v11);

  v12 = v1[OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment];
  v13 = (void *)sub_18FBCD0B8();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v12, v13);

  v14 = v1[OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance];
  v15 = (void *)sub_18FBCD0B8();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v14, v15);

  v16 = *(_QWORD *)&v1[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes];
  if (!(v16 >> 31))
  {
    v17 = (id)sub_18FBCD0B8();
    -[objc_class encodeInt32:forKey:](with.super.isa, sel_encodeInt32_forKey_, v16, v17);

    return;
  }
LABEL_9:
  __break(1u);
}

void __swiftcall CHSControlConfigurationItem.init(coder:)(CHSControlConfigurationItem_optional *__return_ptr retstr, NSCoder coder)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, coder.super.isa);

}

uint64_t CHSControlConfigurationItem.init(coder:)(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t result;

  sub_18FB1F254(0, &qword_1EE188028);
  v2 = (void *)sub_18FBCD3E8();
  if (v2)
  {
    sub_18FBCD0D0();

  }
  sub_18FB1F254(0, (unint64_t *)&qword_1EE189E70);
  v3 = (void *)sub_18FBCD3E8();
  v4 = (void *)sub_18FBCD0B8();
  v5 = objc_msgSend(a1, sel_decodeInt32ForKey_, v4);

  if ((v5 & 0x80000000) != 0)
    goto LABEL_6;
  v6 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_decodeIntegerForKey_, v6);

  v7 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_decodeBoolForKey_, v7);

  v8 = sub_18FBCD0B8();
  objc_msgSend(a1, sel_decodeBoolForKey_, v8);

  v9 = (void *)sub_18FBCD0B8();
  LODWORD(v8) = objc_msgSend(a1, sel_decodeInt32ForKey_, v9);

  if ((v8 & 0x80000000) != 0)
  {
LABEL_6:
    result = sub_18FBCD610();
    __break(1u);
  }
  else
  {

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return result;
}

unint64_t CHSControlConfigurationItem.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t result;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B108);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB76C8C();
  sub_18FBCD8B0();
  v12 = 0;
  swift_bridgeObjectRetain();
  sub_18FBCD748();
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)&v3[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity];
  v10[15] = 1;
  sub_18FB1F254(0, (unint64_t *)&qword_1EE189E70);
  sub_18FB76CD0(&qword_1EE1899E8, (uint64_t)&protocol conformance descriptor for CHSControlIdentity);
  sub_18FBCD76C();
  result = *(_QWORD *)&v3[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy];
  if (result >> 31)
  {
    __break(1u);
  }
  else
  {
    v10[14] = 2;
    sub_18FBCD778();
    objc_msgSend(v3, sel_location);
    v10[13] = 3;
    sub_18FBCD760();
    v10[12] = 4;
    sub_18FBCD754();
    v10[11] = 5;
    sub_18FBCD754();
    result = *(_QWORD *)&v3[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes];
    if (!(result >> 31))
    {
      v10[10] = 6;
      sub_18FBCD778();
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t CHSControlConfigurationItem.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  unsigned int v8;
  uint64_t result;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B120);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB76C8C();
  sub_18FBCD8A4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    return (uint64_t)v7;
  }
  v26 = 0;
  sub_18FBCD6C4();
  sub_18FB1F254(0, (unint64_t *)&qword_1EE189E70);
  v25 = 1;
  sub_18FB76CD0(&qword_1EE189E68, (uint64_t)&protocol conformance descriptor for CHSControlIdentity);
  sub_18FBCD6E8();
  v18 = v19;
  v24 = 2;
  LODWORD(v17) = sub_18FBCD6F4();
  if ((v17 & 0x80000000) == 0)
  {
    v23 = 3;
    v16 = sub_18FBCD6DC();
    v22 = 4;
    v15 = sub_18FBCD6D0();
    v21 = 5;
    v14 = sub_18FBCD6D0();
    v20 = 6;
    v8 = sub_18FBCD6F4();
    if ((v8 & 0x80000000) == 0)
    {
      v13 = v17;
      v17 = v8;
      v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v11 = (void *)sub_18FBCD0B8();
      swift_bridgeObjectRelease();
      v12 = v18;
      v7 = objc_msgSend(v10, sel_initWithUniqueIdentifier_controlIdentity_location_, v11, v18, v16);

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      *(_QWORD *)((char *)v7 + OBJC_IVAR___CHSControlConfigurationItem__pushPolicy) = v13;
      *((_BYTE *)v7 + OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment) = v15 & 1;
      *((_BYTE *)v7 + OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance) = v14 & 1;
      *(_QWORD *)((char *)v7 + OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes) = v17;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
      return (uint64_t)v7;
    }
  }
  result = sub_18FBCD610();
  __break(1u);
  return result;
}

uint64_t sub_18FB765FC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = CHSControlConfigurationItem.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_18FB76624(_QWORD *a1)
{
  return CHSControlConfigurationItem.encode(to:)(a1);
}

uint64_t CHSMutableControlConfigurationItem.pushPolicy.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___CHSControlConfigurationItem__pushPolicy) = result;
  return result;
}

uint64_t CHSMutableControlConfigurationItem.canAppearInSecureEnvironment.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment) = result;
  return result;
}

uint64_t CHSMutableControlConfigurationItem.supportsLowLuminance.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance) = result;
  return result;
}

uint64_t CHSMutableControlConfigurationItem.supportedColorSchemes.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes) = result;
  return result;
}

id _sSo27CHSControlConfigurationItemC14ChronoServicesE16uniqueIdentifier15controlIdentity8locationABSS_So0aI0CSo17CHSWidgetLocationVtcfC_0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  void *v7;
  id v8;

  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithUniqueIdentifier_controlIdentity_location_, v7, a3, a4);

  return v8;
}

id CHSMutableControlConfigurationItem.init(uniqueIdentifier:controlIdentity:location:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void *v4;
  void *v7;
  id v8;
  objc_super v10;

  v7 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v10.receiver = v4;
  v10.super_class = (Class)CHSMutableControlConfigurationItem;
  v8 = objc_msgSendSuper2(&v10, sel_initWithUniqueIdentifier_controlIdentity_location_, v7, a3, a4);

  return v8;
}

id _sSo27CHSControlConfigurationItemC14ChronoServicesE16uniqueIdentifier15controlIdentityABSS_So0aI0CtcfC_0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithUniqueIdentifier_controlIdentity_, v5, a3);

  return v6;
}

id CHSMutableControlConfigurationItem.init(uniqueIdentifier:controlIdentity:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  void *v5;
  id v6;
  objc_super v8;

  v5 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v8.receiver = v3;
  v8.super_class = (Class)CHSMutableControlConfigurationItem;
  v6 = objc_msgSendSuper2(&v8, sel_initWithUniqueIdentifier_controlIdentity_, v5, a3);

  return v6;
}

id _sSo27CHSControlConfigurationItemC14ChronoServicesEABycfC_0()
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id CHSMutableControlConfigurationItem.init()()
{
  objc_super v1;

  v1.super_class = (Class)CHSMutableControlConfigurationItem;
  return objc_msgSendSuper2(&v1, sel_init);
}

id sub_18FB76A94(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  _BYTE *v4;
  char *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  objc_super v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)&v4[OBJC_IVAR___CHSControlConfigurationItem__pushPolicy] = 0;
  v4[OBJC_IVAR___CHSControlConfigurationItem__canAppearInSecureEnvironment] = 0;
  v4[OBJC_IVAR___CHSControlConfigurationItem__supportsLowLuminance] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___CHSControlConfigurationItem__supportedColorSchemes] = 3;
  v7 = v4;
  v8 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_copy);

  sub_18FBCD478();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  v9 = v14;
  v10 = &v7[OBJC_IVAR___CHSControlConfigurationItem__uniqueIdentifier];
  *(_QWORD *)v10 = v13;
  *((_QWORD *)v10 + 1) = v9;
  objc_msgSend(a3, sel_copy);
  sub_18FBCD478();
  swift_unknownObjectRelease();
  sub_18FB1F254(0, (unint64_t *)&qword_1EE189E70);
  swift_dynamicCast();
  *(_QWORD *)&v7[OBJC_IVAR___CHSControlConfigurationItem__controlIdentity] = v13;
  *(_QWORD *)&v7[OBJC_IVAR___CHSControlConfigurationItem_location] = a4;

  v12.receiver = v7;
  v12.super_class = (Class)CHSControlConfigurationItem;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t type metadata accessor for CHSControlConfigurationItem(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE1896E8);
}

uint64_t sub_18FB76C30()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18FB76C5C()
{
  uint64_t v0;

  sub_18FB7514C(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_18FB76C64()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_18FB76C8C()
{
  unint64_t result;

  result = qword_1EE18B110;
  if (!qword_1EE18B110)
  {
    result = MEMORY[0x19400954C](&unk_18FBD645C, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE18B110);
  }
  return result;
}

uint64_t sub_18FB76CD0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_18FB1F254(255, (unint64_t *)&qword_1EE189E70);
    result = MEMORY[0x19400954C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CHSMutableControlConfigurationItem(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE18B198);
}

uint64_t _s10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_18FB76E10 + 4 * byte_18FBD62B3[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_18FB76E44 + 4 * byte_18FBD62AE[v4]))();
}

uint64_t sub_18FB76E44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB76E4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FB76E54);
  return result;
}

uint64_t sub_18FB76E60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FB76E68);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_18FB76E6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB76E74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_18FB76E80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_0()
{
  return &_s10CodingKeysON_0;
}

unint64_t sub_18FB76E9C()
{
  unint64_t result;

  result = qword_1EE18B1A0;
  if (!qword_1EE18B1A0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD6434, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE18B1A0);
  }
  return result;
}

unint64_t sub_18FB76EE4()
{
  unint64_t result;

  result = qword_1EE18B1A8;
  if (!qword_1EE18B1A8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD636C, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE18B1A8);
  }
  return result;
}

unint64_t sub_18FB76F2C()
{
  unint64_t result;

  result = qword_1EE18B1B0;
  if (!qword_1EE18B1B0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD6394, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EE18B1B0);
  }
  return result;
}

uint64_t sub_18FB76F70()
{
  unint64_t v0;

  v0 = sub_18FBCD688();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_18FB76FD8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C90);
  sub_18FB1E9FC(&qword_1EE189A70, &qword_1EE189C90, MEMORY[0x1E0C95F48]);
  return sub_18FBCCFD4();
}

uint64_t sub_18FB77044@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 24);
  return result;
}

uint64_t sub_18FB77084(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 24) = v2;
  return result;
}

uint64_t (*sub_18FB770C0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_18FB77100()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C98);
  sub_18FB1E9FC(&qword_1EE189A78, &qword_1EE189C98, MEMORY[0x1E0C95FB8]);
  return sub_18FBCCFD4();
}

uint64_t sub_18FB7716C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_18FB7719C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 40) = a1;
  return result;
}

uint64_t (*sub_18FB771D8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FixedKeybagStateProvider.__allocating_init(lockState:hasUnlockedSinceBoot:)(_BYTE *a1, char a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  LOBYTE(a1) = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C90);
  swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_18FBCCFB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C98);
  swift_allocObject();
  *(_QWORD *)(v4 + 32) = sub_18FBCCFC8();
  *(_BYTE *)(v4 + 24) = (_BYTE)a1;
  *(_BYTE *)(v4 + 40) = a2;
  return v4;
}

uint64_t FixedKeybagStateProvider.init(lockState:hasUnlockedSinceBoot:)(char *a1, char a2)
{
  uint64_t v2;
  char v4;

  v4 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C90);
  swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_18FBCCFB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C98);
  swift_allocObject();
  *(_QWORD *)(v2 + 32) = sub_18FBCCFC8();
  *(_BYTE *)(v2 + 24) = v4;
  *(_BYTE *)(v2 + 40) = a2;
  return v2;
}

uint64_t FixedKeybagStateProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t FixedKeybagStateProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18FB77398()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C98);
  sub_18FB1E9FC(&qword_1EE189A78, &qword_1EE189C98, MEMORY[0x1E0C95FB8]);
  return sub_18FBCCFD4();
}

uint64_t sub_18FB77408()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C90);
  sub_18FB1E9FC(&qword_1EE189A70, &qword_1EE189C90, MEMORY[0x1E0C95F48]);
  return sub_18FBCCFD4();
}

uint64_t sub_18FB77478@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v3 + 24);
  return result;
}

uint64_t sub_18FB774BC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 40);
}

uint64_t sub_18FB774F8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 24);
  return result;
}

uint64_t sub_18FB7753C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 24) = v2;
  return result;
}

uint64_t sub_18FB7757C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 40);
  return result;
}

uint64_t sub_18FB775C0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 40) = v2;
  return result;
}

uint64_t type metadata accessor for FixedKeybagStateProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for FixedKeybagStateProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.lockStatePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.lockState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.lockState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.lockState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.hasUnlockedSinceBootPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.hasUnlockedSinceBoot.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.hasUnlockedSinceBoot.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.hasUnlockedSinceBoot.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.__allocating_init(lockState:hasUnlockedSinceBoot:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of FixedKeybagStateProvider.update()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t WidgetAutomationService.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  return v0;
}

uint64_t WidgetAutomationService.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  return v0;
}

uint64_t WidgetAutomationService.widgetSceneInfo()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_18FB77748()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0[17] + 16);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_18FB777E0;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_18FB77940;
  v3[3] = &block_descriptor_2;
  v3[4] = v2;
  objc_msgSend(v1, sel_fetchWidgetSceneInfoWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_18FB777E0()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_18FB77840()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  sub_18FBCCF08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B1C8);
  sub_18FB779E0();
  sub_18FBCCEFC();
  sub_18FB77A8C(v1, v2);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 80));
}

uint64_t sub_18FB77904()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FB77940(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE188110);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = a2;
    v9 = sub_18FBCCE78();
    v11 = v10;

    v12 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v12 = v9;
    v12[1] = v11;
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_18FB779E0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EE18B1D0;
  if (!qword_1EE18B1D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE18B1C8);
    v2 = sub_18FB77A44();
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE18B1D0);
  }
  return result;
}

unint64_t sub_18FB77A44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE18B1D8;
  if (!qword_1EE18B1D8)
  {
    v1 = type metadata accessor for WidgetRendererSessionInfo();
    result = MEMORY[0x19400954C](&protocol conformance descriptor for WidgetRendererSessionInfo, v1);
    atomic_store(result, (unint64_t *)&qword_1EE18B1D8);
  }
  return result;
}

uint64_t sub_18FB77A8C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t WidgetAutomationService.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t WidgetAutomationService.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WidgetAutomationService()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetAutomationService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetAutomationService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ControlsClientInterface.liveControlsDidChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ControlsClientInterface.previewControlsDidChangePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlsClientInterface.reloadControls(forExtension:kind:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of ControlsClientInterface.fetchControlDescriptors(forExtensionBundleIdentifier:userInitiated:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 32)
                                                                                              + *(_QWORD *)(a7 + 32));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_18FB78034;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of ControlsClientInterface.controlDescriptor(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_18FB77C7C;
  return v9(a1, a2, a3);
}

uint64_t sub_18FB77C7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of ControlsClientInterface.updateControlHostConfiguration(host:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ControlsClientInterface.updateControlHostActivationState(host:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ControlsClientInterface.invalidateControlHost(host:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of ControlsClientInterface.allControlConfigurationsByHost()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 72) + *(_QWORD *)(a2 + 72));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18FB78034;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ControlsClientInterface.sendPushToken(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 80) + *(_QWORD *)(a3 + 80));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_18FB77DC8;
  return v9(a1, a2, a3);
}

uint64_t sub_18FB77DC8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t dispatch thunk of ControlsClientInterface.sendPushUpdate(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 88) + *(_QWORD *)(a3 + 88));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_18FB78030;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ControlsClientInterface.unsubscribeToPushes(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 96) + *(_QWORD *)(a3 + 96));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_18FB78030;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ControlsClientInterface.subscribeToSession(withRequest:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t dispatch thunk of ControlsClientInterface.unsubscribe(fromSession:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of ControlsClientInterface.setVisiblySettled(_:forSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of ControlsClientInterface.setTaskPriority(_:forSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of ControlsClientInterface.setEnvironmentModifiers(_:forSession:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t dispatch thunk of ControlsClientInterface.setControlState(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 144) + *(_QWORD *)(a4 + 144));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_18FB78030;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ControlsClientInterface.performControlAction(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 152) + *(_QWORD *)(a4 + 152));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_18FB78030;
  return v11(a1, a2, a3, a4);
}

_QWORD *sub_18FB78038()
{
  uint64_t v0;
  _QWORD *result;

  type metadata accessor for DefaultKeybagStateProvider();
  v0 = swift_allocObject();
  result = sub_18FB78928();
  qword_1EE192808 = v0;
  return result;
}

uint64_t sub_18FB78070(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  int v14;
  uint64_t v15;
  NSObject *v16;
  int v17;
  _DWORD *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_18FBCD004();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_18FBCD034();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  result = BSDispatchQueueAssert();
  v14 = *(unsigned __int8 *)(v2 + 24);
  if (v14 != (_DWORD)v12)
  {
    if (qword_1EE189C88 != -1)
      swift_once();
    v27 = v9;
    v15 = sub_18FBCCF5C();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE1927F0);
    v16 = sub_18FBCCF44();
    v17 = sub_18FBCD394();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      v25 = v17;
      v26 = v5;
      v18 = (_DWORD *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      aBlock[0] = v24;
      *v18 = 136446466;
      __asm { BR              X9 }
    }

    v19 = *(void **)(v2 + 56);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v2;
    *(_BYTE *)(v20 + 24) = v14;
    aBlock[4] = sub_18FB7927C;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FB858D4;
    aBlock[3] = &block_descriptor_6;
    v21 = _Block_copy(aBlock);
    v22 = v19;
    swift_retain();
    sub_18FBCD010();
    v28 = MEMORY[0x1E0DEE9D8];
    sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
    sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
    sub_18FBCD484();
    MEMORY[0x194008544](0, v11, v7, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_18FB7860C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_18FBCD004();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18FBCD034();
  v19[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  v9 = *(unsigned __int8 *)(v0 + 40);
  if (qword_1EE189C88 != -1)
    swift_once();
  v10 = sub_18FBCCF5C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EE1927F0);
  v11 = sub_18FBCCF44();
  v12 = sub_18FBCD394();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v13 = 67109120;
    LODWORD(aBlock[0]) = v9;
    sub_18FBCD454();
    _os_log_impl(&dword_18FB18000, v11, v12, "Has unlocked since boot: %{BOOL}d", v13, 8u);
    MEMORY[0x19400960C](v13, -1, -1);
  }

  v14 = *(void **)(v1 + 56);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v1;
  *(_BYTE *)(v15 + 24) = v9;
  aBlock[4] = sub_18FB792B4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_12;
  v16 = _Block_copy(aBlock);
  v17 = v14;
  swift_retain();
  sub_18FBCD010();
  v19[1] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v8, v5, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v19[0] + 8))(v8, v6);
  return swift_release();
}

uint64_t sub_18FB788E8()
{
  swift_retain();
  sub_18FBCCFBC();
  return swift_release();
}

_QWORD *sub_18FB78928()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (_QWORD *)v0;
  v2 = sub_18FBCD3B8();
  v15 = *(_QWORD *)(v2 - 8);
  v10 = v2;
  MEMORY[0x1E0C80A78]();
  v14 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FBCD3A0();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78]();
  sub_18FBCD034();
  MEMORY[0x1E0C80A78]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C90);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_18FBCCFB0();
  *(_BYTE *)(v0 + 24) = 4;
  LOBYTE(v16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189C98);
  swift_allocObject();
  *(_QWORD *)(v0 + 32) = sub_18FBCCFC8();
  *(_BYTE *)(v0 + 40) = 0;
  v13 = sub_18FB792C0();
  sub_18FBCD028();
  v16 = MEMORY[0x1E0DEE9D8];
  v12 = sub_18FB203A8((unint64_t *)&qword_1EE18A190, v4, MEMORY[0x1E0DEF828]);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A170);
  sub_18FB1E9FC((unint64_t *)&qword_1EE18A180, (uint64_t *)&unk_1EE18A170, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  v5 = *MEMORY[0x1E0DEF8D0];
  v6 = v14;
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v7(v14, v5, v2);
  v1[6] = sub_18FBCD3DC();
  sub_18FBCD028();
  v16 = MEMORY[0x1E0DEE9D8];
  sub_18FBCD484();
  v7(v6, v5, v10);
  v1[7] = sub_18FBCD3DC();
  v1[8] = 0;
  sub_18FB78BFC((uint64_t)v1);
  return v1;
}

void sub_18FB78BFC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v2 = *(void **)(a1 + 48);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_18FB79130;
  *(_QWORD *)(v3 + 24) = a1;
  v16 = sub_18FB79338;
  v17 = v3;
  v4 = MEMORY[0x1E0C809B0];
  v12 = MEMORY[0x1E0C809B0];
  v13 = 1107296256;
  v14 = sub_18FB6E4C8;
  v15 = &block_descriptor_20;
  v5 = _Block_copy(&v12);
  v6 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v5);

  _Block_release(v5);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v7 = *(void **)(a1 + 48);
    v8 = swift_allocObject();
    swift_weakInit();
    v16 = sub_18FB79330;
    v17 = v8;
    v12 = v4;
    v13 = 1107296256;
    v14 = sub_18FB791F8;
    v15 = &block_descriptor_26;
    v9 = _Block_copy(&v12);
    v10 = v7;
    swift_release();
    v11 = MKBEventsRegister();
    _Block_release(v9);

    *(_QWORD *)(a1 + 64) = v11;
  }
}

uint64_t sub_18FB78DAC()
{
  uint64_t v0;

  MKBEventsUnregister();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DefaultKeybagStateProvider()
{
  return objc_opt_self();
}

uint64_t sub_18FB78E10()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  NSObject *v4;
  uint64_t result;
  _QWORD v6[6];

  v1 = *(void **)(v0 + 48);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_18FB79130;
  *(_QWORD *)(v2 + 24) = v0;
  v6[4] = sub_18FB73428;
  v6[5] = v2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_18FB6E4C8;
  v6[3] = &block_descriptor_3;
  v3 = _Block_copy(v6);
  v4 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v3);

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_18FB78F24(uint64_t a1)
{
  unsigned __int8 v2;
  unsigned __int8 v4;
  char v5;

  *(_BYTE *)(a1 + 40) = MKBDeviceUnlockedSinceBoot() == 1;
  sub_18FB7860C();
  sub_18FB78FD4(&v5);
  v2 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  v4 = v2;
  return sub_18FB78070(&v4);
}

uint64_t sub_18FB78F7C()
{
  uint64_t v0;
  uint64_t result;

  sub_18FB73B38((uint64_t)&unk_1E2A585E8);
  v0 = sub_18FBCD040();
  result = swift_bridgeObjectRelease();
  qword_1EE189C70 = v0;
  return result;
}

uint64_t sub_18FB78FD4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  if (qword_1EE189C80 != -1)
    swift_once();
  result = MKBGetDeviceLockState();
  if (result < 8)
    v3 = result + 1;
  else
    v3 = 0;
  *a1 = v3;
  return result;
}

void sub_18FB79030()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 48);
  sub_18FBCD3C4();

}

uint64_t sub_18FB79098()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v3;

  v1 = *(id *)(*(_QWORD *)v0 + 48);
  sub_18FBCD3C4();

  return v3;
}

uint64_t sub_18FB790F8()
{
  return sub_18FB78E10();
}

void sub_18FB79118(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

void sub_18FB79124(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t sub_18FB79130()
{
  uint64_t v0;

  return sub_18FB78F24(v0);
}

uint64_t sub_18FB79138()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_18FB79160(int a1)
{
  uint64_t result;
  uint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  char v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    BSDispatchQueueAssert();
    if (a1)
    {
      if (a1 == 1)
      {
        sub_18FB78FD4(&v6);
        v4 = *(_BYTE *)(v3 + 24);
        *(_BYTE *)(v3 + 24) = v6;
        v5 = v4;
        sub_18FB78070(&v5);
      }
    }
    else
    {
      *(_BYTE *)(v3 + 40) = 1;
      sub_18FB7860C();
    }
    return swift_release();
  }
  return result;
}

void sub_18FB791F8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_18FB79258()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FB7927C()
{
  return sub_18FBCCFA4();
}

uint64_t sub_18FB792B4()
{
  return sub_18FB788E8();
}

unint64_t sub_18FB792C0()
{
  unint64_t result;

  result = qword_1EE18A1A0;
  if (!qword_1EE18A1A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE18A1A0);
  }
  return result;
}

uint64_t sub_18FB792FC()
{
  return swift_deallocObject();
}

uint64_t sub_18FB7930C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FB79330(int a1)
{
  return sub_18FB79160(a1);
}

uint64_t sub_18FB79360()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SecureArchiver()
{
  return objc_opt_self();
}

uint64_t sub_18FB793A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
  *(_QWORD *)(v1 + 32) = 0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v1 + 40) = MEMORY[0x1E0DEE9D8];
  if ((v3 & 0xC000000000000000) != 0 && sub_18FBCD628())
    sub_18FBB1788(MEMORY[0x1E0DEE9D8]);
  else
    v4 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v1 + 48) = v4;
  *(_BYTE *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_18FB79438()
{
  uint64_t v0;

  sub_18FB7AE3C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RelevanceCacheWriter()
{
  return objc_opt_self();
}

void sub_18FB794D8(uint64_t a1, char a2)
{
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  char v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v44;
  id v45;

  v3 = objc_msgSend(*(id *)(a1 + 16), sel_groups);
  if (v3)
  {
    v4 = v3;
    sub_18FB1F254(0, (unint64_t *)&unk_1EE187FF0);
    v5 = sub_18FBCD28C();

    if (!(v5 >> 62))
      goto LABEL_3;
LABEL_36:
    swift_bridgeObjectRetain();
    v6 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_37:
    swift_bridgeObjectRelease();
    return;
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (MEMORY[0x1E0DEE9D8] >> 62)
    goto LABEL_36;
LABEL_3:
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
    goto LABEL_37;
LABEL_4:
  if (v6 >= 1)
  {
    swift_beginAccess();
    v7 = 0;
    v42 = a2;
    v41 = v6;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
        v8 = (_QWORD *)MEMORY[0x1940086C4](v7, v5);
      else
        v8 = *(id *)(v5 + 8 * v7 + 32);
      v9 = v8;
      v10 = (void *)MEMORY[0x194008E20]();
      if ((a2 & 1) != 0 && objc_msgSend(v9, sel_isDeletion))
      {
        v11 = objc_msgSend(v9, sel_kind);
        if (v11)
        {
          v12 = v11;
          sub_18FBCD0DC();
          v14 = v13;

        }
        else
        {
          v14 = 0;
        }
        v27 = objc_msgSend(v9, sel_extensionIdentity);
        if (v27)
        {
          v28 = v27;
          v21 = sub_18FBB87B0();

          if (v21)
          {
            if (v14)
            {
              v29 = objc_allocWithZone((Class)CHSWidgetRelevanceKey);
              v30 = (void *)sub_18FBCD0B8();
              swift_bridgeObjectRelease();
              v31 = objc_msgSend(v29, sel_initWithExtensionIdentity_kind_, v21, v30);

              if (v31)
              {
                swift_beginAccess();
                v32 = v31;
                sub_18FBB4150(&v45, v32);
                swift_endAccess();

              }
              goto LABEL_7;
            }
            goto LABEL_30;
          }
        }
      }
      else
      {
        v15 = objc_msgSend(v9, sel_kind);
        if (v15)
        {
          v16 = v15;
          sub_18FBCD0DC();
          v18 = v17;

        }
        else
        {
          v18 = 0;
        }
        v19 = objc_msgSend(v9, sel_extensionIdentity);
        if (v19)
        {
          v20 = v19;
          v21 = sub_18FBB87B0();

          if (v21)
          {
            if (v18)
            {
              v22 = objc_allocWithZone((Class)CHSWidgetRelevanceKey);
              v23 = (void *)sub_18FBCD0B8();
              swift_bridgeObjectRelease();
              v24 = objc_msgSend(v22, sel_initWithExtensionIdentity_kind_, v21, v23);

              if (v24)
              {
                v25 = *(_QWORD *)(v44 + 48);
                swift_bridgeObjectRetain();
                v26 = sub_18FB874BC(v24, v25);
                swift_bridgeObjectRelease();
                if ((v26 & 1) != 0)
                {

                }
                else
                {
                  swift_beginAccess();
                  v33 = v24;
                  sub_18FBB4150(&v45, v33);
                  swift_endAccess();

                  v34 = *(id *)(v44 + 16);
                  v35 = objc_msgSend(v33, sel_kind);
                  sub_18FBCD0DC();

                  v36 = (void *)sub_18FBCD0B8();
                  swift_bridgeObjectRelease();
                  v37 = objc_msgSend(v34, sel_createString_, v36);

                  v38 = objc_msgSend(v33, sel_extensionIdentity);
                  v39 = sub_18FB7BA60(v38);

                  sub_18FB7A348((uint64_t)v37, v39, v9, v44, a1);
                  v40 = swift_beginAccess();
                  MEMORY[0x1940083E8](v40);
                  if (*(_QWORD *)((*(_QWORD *)(v44 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v44 + 40) & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                    sub_18FBCD2B0();
                  sub_18FBCD2C8();
                  sub_18FBCD2A4();
                  swift_endAccess();

                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  a2 = v42;
                  v6 = v41;
                }
              }
              goto LABEL_7;
            }
LABEL_30:

            goto LABEL_7;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_7:
      ++v7;
      objc_autoreleasePoolPop(v10);

      if (v6 == v7)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  __break(1u);
}

void sub_18FB79A2C(unint64_t a1, _QWORD *a2, void *a3, char a4, unint64_t a5)
{
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  unint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void *v45;
  id v46;
  id v47;
  _BYTE *v48;
  unint64_t v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  unint64_t v66;
  id v67;
  _QWORD *v68;
  id *v69;
  id v70;
  id *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD v75[6];
  __int128 aBlock;
  __int128 v77;
  __int128 v78;
  char v79;

  if ((a4 & 1) != 0)
  {
    v24 = *(void **)(a5 + 16);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = a1;
    *(_QWORD *)(v25 + 24) = a2;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = sub_18FB7C5D0;
    *(_QWORD *)(v26 + 24) = v25;
    *(_QWORD *)&v78 = sub_18FB7CB8C;
    *((_QWORD *)&v78 + 1) = v26;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v77 = sub_18FB7CB88;
    *((_QWORD *)&v77 + 1) = &block_descriptor_51;
    v27 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    v8 = v24;
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend((id)v8, sel__chsCreateWidgetRelevancePropertiesBufUsingBlock_, v27);

    _Block_release(v27);
    LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v27 & 1) != 0)
    {
      __break(1u);
      goto LABEL_14;
    }
    return;
  }
  v73 = a5;
  v67 = a3;
  v7 = objc_msgSend(v67, sel_relevances);
  sub_18FB1F254(0, (unint64_t *)&unk_1EE187FA0);
  v8 = sub_18FBCD28C();

  v9 = v8 >> 62;
  v68 = a2;
  if (v8 >> 62)
    goto LABEL_62;
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v77 = 0u;
    v78 = 0u;
    aBlock = 0u;
    v79 = 1;
    a2 = (_QWORD *)sub_18FB7C340((uint64_t)&aBlock, v10);
    if (v9)
    {
LABEL_14:
      swift_bridgeObjectRetain();
      v11 = sub_18FBCD628();
      if (!v11)
      {
LABEL_15:
        swift_bridgeObjectRelease_n();
LABEL_54:
        v8 = sub_18FB7B3A4((uint64_t)a2);
        swift_bridgeObjectRelease();
        v62 = *(void **)(v73 + 16);
        v63 = (_QWORD *)swift_allocObject();
        v63[2] = a1;
        v63[3] = v68;
        v63[4] = v67;
        v63[5] = v8;
        v64 = swift_allocObject();
        *(_QWORD *)(v64 + 16) = sub_18FB7CB4C;
        *(_QWORD *)(v64 + 24) = v63;
        v75[4] = sub_18FB7CB8C;
        v75[5] = v64;
        v75[0] = MEMORY[0x1E0C809B0];
        v75[1] = 1107296256;
        v75[2] = sub_18FB7CB88;
        v75[3] = &block_descriptor_61;
        v65 = _Block_copy(v75);
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        swift_retain();
        a2 = v67;
        v11 = v62;
        swift_unknownObjectRetain();
        swift_release();
        objc_msgSend((id)v11, sel__chsCreateWidgetRelevancePropertiesBufUsingBlock_, v65);
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        _Block_release(v65);

        LOBYTE(v65) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if ((v65 & 1) == 0)
          return;
        __break(1u);
        goto LABEL_64;
      }
    }
    else
    {
      v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v11)
        goto LABEL_15;
    }
    v74 = v8 & 0xC000000000000001;
    if ((v8 & 0xC000000000000001) == 0)
      break;
LABEL_64:
    v12 = (id)MEMORY[0x1940086C4](0, v8);
LABEL_9:
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v13, sel_intentReference);

    v71 = (id *)v8;
    if (v14)
    {
      v15 = objc_msgSend(v14, sel__partialSchemaData);
      if (v15)
      {
        v16 = v15;
        v17 = sub_18FBCCE78();
        v19 = v18;

        v20 = *(id *)(v73 + 16);
        v21 = a1;
        v22 = (void *)sub_18FBCCE60();
        v23 = objc_msgSend(v20, sel_createVectorOfUInt8WithData_alignment_, v22, 8);

        a1 = v21;
        sub_18FB77A8C(v17, v19);
        goto LABEL_18;
      }

    }
    v23 = 0;
LABEL_18:
    if (v11 < 1)
      goto LABEL_66;
    v66 = a1;
    v69 = (id *)(v8 + 32);
    v70 = v23;
    swift_bridgeObjectRetain();
    a1 = 0;
    v9 = 80;
    v72 = v11;
    do
    {
      if (v74)
        v29 = (id)MEMORY[0x1940086C4](a1, v8);
      else
        v29 = v69[a1];
      v30 = v29;
      v31 = objc_msgSend(v29, sel_intentReference);
      if (v31)
      {
        v28 = v31;
        v32 = objc_msgSend(v31, sel__partialConfigData);
        if (v32)
        {
          v33 = v32;
          v34 = sub_18FBCCE78();
          v36 = v35;

          v8 = (unint64_t)*(id *)(v73 + 16);
          v37 = (void *)sub_18FBCCE60();
          v38 = objc_msgSend((id)v8, sel_createVectorOfUInt8WithData_alignment_, v37, 8);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            a2 = sub_18FB8B8AC((uint64_t)a2);
          if (a1 >= a2[2])
            goto LABEL_59;
          v8 = (unint64_t)a2 + v9;
          *(_QWORD *)((char *)a2 + v9 - 16) = v38;
          swift_unknownObjectRelease();
          v39 = a2[2];
          swift_unknownObjectRetain();
          if (a1 >= v39)
            goto LABEL_60;
          *(_QWORD *)(v8 - 24) = v70;
          swift_unknownObjectRelease();
          sub_18FB77A8C(v34, v36);
          v11 = v72;
        }
        v40 = objc_msgSend(v28, sel__intentData);
        if (v40)
        {
          v41 = v40;
          v42 = sub_18FBCCE78();
          v44 = v43;

          v8 = (unint64_t)*(id *)(v73 + 16);
          v45 = (void *)sub_18FBCCE60();
          v46 = objc_msgSend((id)v8, sel_createVectorOfUInt8WithData_alignment_, v45, 8);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            a2 = sub_18FB8B8AC((uint64_t)a2);
          v11 = v72;
          if (a1 >= a2[2])
            goto LABEL_61;
          *(_QWORD *)((char *)a2 + v9 - 32) = v46;
          swift_unknownObjectRelease();
          sub_18FB77A8C(v42, v44);
        }
        v47 = objc_msgSend(v28, sel_stableHash);
        v8 = (unint64_t)v71;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          a2 = sub_18FB8B8AC((uint64_t)a2);
        if (a1 >= a2[2])
          goto LABEL_57;
        v48 = (char *)a2 + v9;
        *((_QWORD *)v48 - 1) = v47;
        *v48 = 0;

      }
      else
      {
        v28 = v30;
      }
      ++a1;

      v9 += 56;
    }
    while (v11 != a1);
    swift_bridgeObjectRelease();
    v49 = 0;
    v9 = 32;
    a1 = v73;
    while (1)
    {
      v50 = v74 ? (id)MEMORY[0x1940086C4](v49, v8) : *(id *)(v8 + 8 * v49 + 32);
      v51 = v50;
      v52 = objc_msgSend(v50, sel_attribute);
      if (v52)
      {
        v53 = v52;
        v75[0] = *(_QWORD *)(v73 + 32);
        sub_18FB7C588();
        v54 = v53;
        sub_18FBCD1CC();
        v8 = (unint64_t)*(id *)(v73 + 24);
        v55 = (void *)sub_18FBCD0B8();
        objc_msgSend((id)v8, sel_encodeObject_forKey_, v54, v55);

        v56 = *(_QWORD *)(v73 + 32);
        v57 = __OFADD__(v56, 1);
        v58 = v56 + 1;
        if (v57)
          goto LABEL_58;
        *(_QWORD *)(v73 + 32) = v58;
        v59 = *(id *)(v73 + 16);
        v60 = (void *)sub_18FBCD0B8();
        swift_bridgeObjectRelease();
        v61 = objc_msgSend(v59, sel_createString_, v60);

        v8 = (unint64_t)v71;
        v11 = v72;
      }
      else
      {
        v61 = 0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a2 = sub_18FB8B8AC((uint64_t)a2);
      if (v49 >= a2[2])
        break;
      ++v49;
      *(_QWORD *)((char *)a2 + v9) = v61;

      swift_unknownObjectRelease();
      v9 += 56;
      if (v11 == v49)
      {
        swift_bridgeObjectRelease();
        a1 = v66;
        goto LABEL_54;
      }
    }
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    swift_bridgeObjectRetain();
    v10 = sub_18FBCD628();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v8 + 32);
    goto LABEL_9;
  }
  __break(1u);
LABEL_66:
  __break(1u);
}

void sub_18FB7A348(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v6;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t isEscapingClosureAtFileLocation;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  id v43;
  uint64_t v44;
  char *v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  char isUniquelyReferenced_nonNull_native;
  _BYTE *v57;
  unint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_unfair_lock_s *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  void *v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  _QWORD *v87;
  _QWORD v88[7];
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  id *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  id *v98;
  id v99;
  unint64_t v100;
  uint64_t v101[6];
  __int128 aBlock;
  __int128 v103;
  __int128 v104;
  char v105;

  v94 = a5;
  v6 = a3;
  if (objc_msgSend(a3, sel_isDeletion))
  {
    v9 = *(void **)(a4 + 16);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = a1;
    v6[3] = a2;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_18FB7C5D0;
    *(_QWORD *)(v10 + 24) = v6;
    *(_QWORD *)&v104 = sub_18FB7CB8C;
    *((_QWORD *)&v104 + 1) = v10;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v103 = sub_18FB7CB88;
    *((_QWORD *)&v103 + 1) = &block_descriptor_40;
    v11 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    v12 = v9;
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v12, sel__chsCreateWidgetRelevancePropertiesBufUsingBlock_, v11);

    _Block_release(v11);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v11 & 1) == 0)
      return;
    __break(1u);
  }
  v90 = v6;
  v13 = objc_msgSend(v6, sel_relevances);
  v91 = a2;
  if (v13)
  {
    v14 = v13;
    sub_18FB1F254(0, &qword_1EE187FD0);
    v15 = sub_18FBCD28C();

  }
  else
  {
    v15 = MEMORY[0x1E0DEE9D8];
  }
  v16 = v15 >> 62;
  v89 = a1;
  if (v15 >> 62)
    goto LABEL_68;
  v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v103 = 0u;
    v104 = 0u;
    aBlock = 0u;
    v105 = 1;
    v18 = (_QWORD *)sub_18FB7C340((uint64_t)&aBlock, v17);
    if (v16)
    {
      swift_bridgeObjectRetain();
      isEscapingClosureAtFileLocation = sub_18FBCD628();
      if (!isEscapingClosureAtFileLocation)
      {
LABEL_18:
        swift_bridgeObjectRelease_n();
        v93 = 0;
LABEL_60:
        v80 = v89;
        v81 = sub_18FB7B3A4((uint64_t)v18);
        swift_bridgeObjectRelease();
        v82 = *(void **)(a4 + 16);
        v83 = (_QWORD *)swift_allocObject();
        v84 = v91;
        v83[2] = v80;
        v83[3] = v84;
        v18 = v90;
        v83[4] = v90;
        v83[5] = v81;
        v85 = swift_allocObject();
        *(_QWORD *)(v85 + 16) = sub_18FB7C52C;
        *(_QWORD *)(v85 + 24) = v83;
        v101[4] = (uint64_t)sub_18FB7CB8C;
        v101[5] = v85;
        v101[0] = MEMORY[0x1E0C809B0];
        v101[1] = 1107296256;
        v101[2] = (uint64_t)sub_18FB7CB88;
        v101[3] = (uint64_t)&block_descriptor_30;
        v86 = _Block_copy(v101);
        swift_unknownObjectRetain();
        v15 = v82;
        v87 = v18;
        swift_unknownObjectRetain();
        swift_retain();
        swift_unknownObjectRetain();
        swift_release();
        objc_msgSend((id)v15, sel__chsCreateWidgetRelevancePropertiesBufUsingBlock_, v86);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        _Block_release(v86);

        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0)
          return;
        __break(1u);
        goto LABEL_70;
      }
    }
    else
    {
      isEscapingClosureAtFileLocation = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!isEscapingClosureAtFileLocation)
        goto LABEL_18;
    }
    v100 = v15 & 0xC000000000000001;
    if ((v15 & 0xC000000000000001) == 0)
      break;
LABEL_70:
    v20 = (id)MEMORY[0x1940086C4](0, v15);
LABEL_14:
    v21 = v20;
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(v21, sel_intentReference);

    v96 = isEscapingClosureAtFileLocation;
    if (v22)
    {
      v23 = objc_msgSend(v22, sel_schemaDataAsData);
      if (v23)
      {
        v24 = v23;
        v25 = sub_18FBCCE78();
        v27 = v26;

        v28 = *(id *)(a4 + 16);
        v29 = (void *)sub_18FBCCE60();
        v30 = objc_msgSend(v28, sel_createVectorOfUInt8WithData_alignment_, v29, 8);

        v31 = v25;
        isEscapingClosureAtFileLocation = v96;
        sub_18FB77A8C(v31, v27);
        goto LABEL_21;
      }

    }
    v30 = 0;
LABEL_21:
    if (isEscapingClosureAtFileLocation < 1)
      goto LABEL_72;
    v92 = (id *)(v15 + 32);
    swift_bridgeObjectRetain();
    v16 = 0;
    v32 = 10;
    v97 = 0;
    v98 = (id *)v15;
    v95 = a4;
    v93 = v30;
    do
    {
      if (v100)
        v34 = (id)MEMORY[0x1940086C4](v16, v15);
      else
        v34 = v92[v16];
      v35 = v34;
      v36 = objc_msgSend(v34, sel_intentReference);
      if (v36)
      {
        v33 = v36;
        v99 = v35;
        v37 = objc_msgSend(v36, sel_partialIntentDataAsData);
        if (v37)
        {
          v38 = v37;
          v39 = sub_18FBCCE78();
          v41 = v40;

          v42 = (char *)v18;
          v43 = *(id *)(a4 + 16);
          a4 = sub_18FBCCE60();
          v15 = (unint64_t)objc_msgSend(v43, sel_createVectorOfUInt8WithData_alignment_, a4, 8);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v42 = sub_18FB8B8AC((uint64_t)v42);
          v44 = v95;
          if (v16 >= *((_QWORD *)v42 + 2))
            goto LABEL_64;
          v45 = &v42[v32 * 8];
          *(_QWORD *)&v42[v32 * 8 - 16] = v15;
          swift_unknownObjectRelease();
          a4 = (uint64_t)v42;
          v15 = *((_QWORD *)v42 + 2);
          v46 = v93;
          swift_unknownObjectRetain();
          if (v16 >= v15)
            goto LABEL_65;
          *((_QWORD *)v45 - 3) = v46;
          swift_unknownObjectRelease();
          sub_18FB77A8C(v39, v41);
          v18 = (_QWORD *)a4;
          a4 = v44;
          isEscapingClosureAtFileLocation = v96;
        }
        v47 = objc_msgSend(v33, sel_intentDataAsData);
        if (v47)
        {
          v48 = v47;
          v49 = sub_18FBCCE78();
          v51 = v50;

          v52 = (uint64_t)v18;
          v53 = *(id *)(a4 + 16);
          v54 = (void *)sub_18FBCCE60();
          v15 = (unint64_t)objc_msgSend(v53, sel_createVectorOfUInt8WithData_alignment_, v54, 8);

          v18 = (_QWORD *)v52;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v18 = sub_18FB8B8AC(v52);
          a4 = v95;
          if (v16 >= v18[2])
            goto LABEL_66;
          v18[v32 - 4] = v15;
          swift_unknownObjectRelease();
          sub_18FB77A8C(v49, v51);
        }
        v55 = objc_msgSend(v33, sel_stableHash);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v15 = (unint64_t)v98;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v18 = sub_18FB8B8AC((uint64_t)v18);
        if (v16 >= v18[2])
          goto LABEL_63;
        v57 = &v18[v32];
        *((_QWORD *)v57 - 1) = v55;
        *v57 = 0;

      }
      else
      {
        v33 = v35;
      }
      ++v16;

      v32 += 7;
    }
    while (isEscapingClosureAtFileLocation != v16);
    swift_bridgeObjectRelease();
    v58 = 0;
    v59 = 4;
    while (1)
    {
      v99 = v18;
      v60 = v100 ? (id)MEMORY[0x1940086C4](v58, v15) : *(id *)(v15 + 8 * v58 + 32);
      v61 = v60;
      v62 = objc_msgSend(v60, sel_attributeKey);
      if (v62)
      {
        v63 = v62;
        v64 = sub_18FBCD0DC();
        v66 = v65;

        v67 = *(os_unfair_lock_s **)(v94 + 24);
        MEMORY[0x1E0C80A78](v68);
        v16 = (unint64_t)v88;
        v88[2] = v69;
        v88[3] = v64;
        v88[4] = v66;
        swift_retain();
        os_unfair_lock_lock(v67 + 4);
        v70 = v97;
        sub_18FB7C558(v101);
        if (v70)
        {
          os_unfair_lock_unlock(v67 + 4);
          swift_release();

          swift_bridgeObjectRelease();
          v71 = 0;
          v97 = 0;
        }
        else
        {
          v72 = (void *)v101[0];
          os_unfair_lock_unlock(v67 + 4);
          swift_release();
          v101[0] = *(_QWORD *)(a4 + 32);
          sub_18FB7C588();
          v16 = v72;
          v15 = sub_18FBCD1CC();
          v73 = *(id *)(a4 + 24);
          v74 = (void *)sub_18FBCD0B8();
          objc_msgSend(v73, sel_encodeObject_forKey_, v16, v74);

          a4 = v95;
          v75 = *(_QWORD *)(v95 + 32);
          v76 = __OFADD__(v75, 1);
          v77 = v75 + 1;
          if (v76)
            goto LABEL_67;
          v97 = 0;
          *(_QWORD *)(v95 + 32) = v77;
          v78 = *(id *)(a4 + 16);
          v79 = (void *)sub_18FBCD0B8();
          swift_bridgeObjectRelease();
          v71 = objc_msgSend(v78, sel_createString_, v79);
          swift_bridgeObjectRelease();

        }
        v15 = (unint64_t)v98;
        isEscapingClosureAtFileLocation = v96;
      }
      else
      {
        v71 = 0;
      }
      v18 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_18FB8B8AC((uint64_t)v18);
      if (v58 >= v18[2])
        break;
      ++v58;
      v18[v59] = v71;

      swift_unknownObjectRelease();
      v59 += 7;
      if (isEscapingClosureAtFileLocation == v58)
      {
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    swift_bridgeObjectRetain();
    v17 = sub_18FBCD628();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v20 = *(id *)(v15 + 32);
    goto LABEL_14;
  }
  __break(1u);
LABEL_72:
  __break(1u);
}

id sub_18FB7AD90(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  objc_msgSend(a1, sel_setKind_, a2);
  if (a3)
    objc_msgSend(a1, sel_setExtensionIdentity_, a3);
  objc_msgSend(a4, sel_lastRelevanceUpdate);
  objc_msgSend(a1, sel_setLastRelevanceUpdate_);
  objc_msgSend(a1, sel_setSupportsBackgroundRefresh_, objc_msgSend(a4, sel_supportsBackgroundRefresh));
  return objc_msgSend(a1, sel_setRelevances_, a5);
}

void sub_18FB7AE3C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  unint64_t v25;
  id aBlock[10];

  aBlock[9] = *(id *)MEMORY[0x1E0C80C00];
  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
  {
    *(_BYTE *)(v0 + 56) = 1;
    v1 = *(void **)(v0 + 16);
    swift_beginAccess();
    v2 = v1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE188018);
    v3 = (void *)sub_18FBCD280();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v2, sel__chsCreateVectorOfWidgetRelevancePropertiesBufWithOffsets_, v3);

    v5 = objc_msgSend(*(id *)(v0 + 24), sel_encodedData);
    v6 = sub_18FBCCE78();
    v8 = v7;

    v9 = *(id *)(v0 + 16);
    v25 = v8;
    v10 = (void *)sub_18FBCCE60();
    v11 = objc_msgSend(v9, sel_createVectorOfUInt8WithData_alignment_, v10, 8);

    v12 = *(void **)(v0 + 16);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v4;
    *(_QWORD *)(v13 + 24) = v11;
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = sub_18FB7C838;
    v14[3] = v13;
    aBlock[4] = sub_18FB6F3D4;
    aBlock[5] = v14;
    aBlock[0] = (id)MEMORY[0x1E0C809B0];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_18FB7B194;
    aBlock[3] = &block_descriptor_70;
    v15 = _Block_copy(aBlock);
    v16 = v12;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    v17 = objc_msgSend(v16, sel__chsCreateRelevanceCacheBufUsingBlock_, v15);

    _Block_release(v15);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v15 & 1) != 0)
      __break(1u);
    v18 = *(void **)(v0 + 16);
    aBlock[0] = 0;
    v19 = objc_msgSend(v18, sel__chsFinishedBufferWithRootRelevanceCacheBufOfs_error_, v17, aBlock);
    v20 = aBlock[0];
    if (v19)
    {
      v21 = sub_18FBCCE78();
      v23 = v22;
      sub_18FB77A8C(v6, v25);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_18FB77A8C(v21, v23);
      swift_release();

    }
    else
    {
      v24 = v20;
      sub_18FBCCD70();

      swift_willThrow();
      sub_18FB77A8C(v6, v25);
      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
  }
}

void sub_18FB7B194(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

uint64_t sub_18FB7B1C8(void *a1, void (*a2)(id, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t result;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v3 = v2;
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  v7 = sub_18FB874BC(a1, v6);
  result = swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    swift_beginAccess();
    v9 = a1;
    sub_18FBB4150(&v16, v9);
    swift_endAccess();

    v10 = *(id *)(v2 + 16);
    v11 = objc_msgSend(v9, sel_kind);
    if (!v11)
    {
      sub_18FBCD0DC();
      v11 = (id)sub_18FBCD0B8();
      swift_bridgeObjectRelease();
    }
    v12 = objc_msgSend(v10, sel_createString_, v11);

    v13 = objc_msgSend(v9, sel_extensionIdentity);
    v14 = sub_18FB7BA60(v13);

    a2(v12, v14);
    v15 = swift_beginAccess();
    MEMORY[0x1940083E8](v15);
    if (*(_QWORD *)((*(_QWORD *)(v3 + 40) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v3 + 40) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_18FBCD2B0();
    sub_18FBCD2C8();
    sub_18FBCD2A4();
    swift_endAccess();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_18FB7B3A4(uint64_t a1)
{
  id (*v1)(void *);
  id (*v2)(void *);
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t result;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  id (*v30)(void *);
  uint64_t v31;
  id (*v32)(void *);
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock;
  uint64_t v38;
  void (*v39)(uint64_t, void *);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;
  id v43;
  uint64_t v44;
  char v45;

  v44 = MEMORY[0x1E0DEE9D8];
  v1 = *(id (**)(void *))(a1 + 16);
  if (v1)
  {
    v30 = 0;
    v2 = 0;
    v3 = (_BYTE *)(swift_bridgeObjectRetain() + 80);
    while (1)
    {
      v35 = (uint64_t)v2;
      v32 = v1;
      v5 = *((_QWORD *)v3 - 6);
      v4 = *((_QWORD *)v3 - 5);
      v6 = *((_QWORD *)v3 - 4);
      v7 = *((_QWORD *)v3 - 3);
      v9 = *((_QWORD *)v3 - 2);
      v8 = *((_QWORD *)v3 - 1);
      v45 = *v3;
      v43 = 0;
      v36 = v4;
      v34 = v8;
      if (v6 || v7 | v9)
      {
        v12 = *(void **)(v31 + 16);
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = v5;
        *(_QWORD *)(v13 + 24) = v4;
        *(_QWORD *)(v13 + 32) = v6;
        *(_QWORD *)(v13 + 40) = v7;
        *(_QWORD *)(v13 + 48) = v9;
        *(_QWORD *)(v13 + 56) = v8;
        v33 = v45;
        *(_BYTE *)(v13 + 64) = v45;
        swift_unknownObjectRetain_n();
        swift_unknownObjectRetain_n();
        swift_unknownObjectRetain_n();
        swift_unknownObjectRetain_n();
        swift_unknownObjectRetain_n();
        v14 = v12;
        sub_18FB7C270((uint64_t)v30);
        v15 = swift_allocObject();
        v10 = v9;
        v11 = v7;
        *(_QWORD *)(v15 + 16) = sub_18FB7C2C4;
        *(_QWORD *)(v15 + 24) = v13;
        v41 = sub_18FB7CB8C;
        v42 = v15;
        aBlock = MEMORY[0x1E0C809B0];
        v38 = 1107296256;
        v39 = sub_18FB7CB88;
        v40 = &block_descriptor_21;
        v16 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v17 = objc_msgSend(v14, sel__chsCreateIntentReferenceBufUsingBlock_, v16);

        _Block_release(v16);
        LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
        result = swift_release();
        if ((v16 & 1) != 0)
          goto LABEL_16;
        v43 = v17;
        swift_unknownObjectRelease();
        v30 = sub_18FB7C2C4;
      }
      else
      {
        swift_unknownObjectRetain();
        v33 = v45;
        swift_unknownObjectRetain();
        v10 = v9;
        v11 = v7;
      }
      v19 = *(void **)(v31 + 16);
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = &v43;
      *(_QWORD *)(v20 + 24) = v5;
      *(_QWORD *)(v20 + 32) = v36;
      *(_QWORD *)(v20 + 40) = v6;
      *(_QWORD *)(v20 + 48) = v11;
      *(_QWORD *)(v20 + 56) = v10;
      *(_QWORD *)(v20 + 64) = v34;
      *(_BYTE *)(v20 + 72) = v33;
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      v21 = v19;
      sub_18FB7C270(v35);
      v22 = swift_allocObject();
      v2 = sub_18FB7C254;
      *(_QWORD *)(v22 + 16) = sub_18FB7C254;
      *(_QWORD *)(v22 + 24) = v20;
      v41 = sub_18FB7CB8C;
      v42 = v22;
      aBlock = MEMORY[0x1E0C809B0];
      v38 = 1107296256;
      v39 = sub_18FB7CB88;
      v40 = &block_descriptor_12_0;
      v23 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v24 = objc_msgSend(v21, sel__chsCreateWidgetRelevanceBufUsingBlock_, v23);

      _Block_release(v23);
      LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
      result = swift_release();
      if ((v21 & 1) != 0)
        break;
      v25 = swift_unknownObjectRetain();
      MEMORY[0x1940083E8](v25);
      if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_18FBCD2B0();
      sub_18FBCD2C8();
      sub_18FBCD2A4();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v3 += 56;
      v1 = (id (*)(void *))((char *)v32 - 1);
      if (v32 == (id (*)(void *))1)
      {
        swift_bridgeObjectRelease();
        v1 = sub_18FB7C254;
        v26 = (uint64_t)v30;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
    v26 = 0;
LABEL_14:
    v27 = *(id *)(v31 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188000);
    v28 = (void *)sub_18FBCD280();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v27, sel__chsCreateVectorOfWidgetRelevanceBufWithOffsets_, v28);

    sub_18FB7C270(v26);
    sub_18FB7C270((uint64_t)v1);
    return (uint64_t)v29;
  }
  return result;
}

id sub_18FB7B8B4(void *a1, uint64_t a2)
{
  id result;
  _BYTE v5[16];
  _BYTE v6[8];
  _BYTE v7[8];
  _BYTE v8[8];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  sub_18FB7C6E4(a2 + 16, (uint64_t)v8, &qword_1EE187FE8);
  sub_18FB7C6E4((uint64_t)v8, (uint64_t)&v9, &qword_1EE187FE8);
  if (v9)
    objc_msgSend(a1, sel_setIntentData_);
  sub_18FB7C6E4(a2 + 32, (uint64_t)v7, &qword_1EE187FE8);
  sub_18FB7C6E4((uint64_t)v7, (uint64_t)&v10, &qword_1EE187FE8);
  if (v10)
    objc_msgSend(a1, sel_setPartialIntentData_);
  sub_18FB7C6E4(a2 + 24, (uint64_t)v6, &qword_1EE187FE8);
  sub_18FB7C6E4((uint64_t)v6, (uint64_t)&v11, &qword_1EE187FE8);
  if (v11)
    objc_msgSend(a1, sel_setSchemaData_);
  sub_18FB7C6E4(a2 + 40, (uint64_t)v5, &qword_1EE18B2E0);
  result = (id)sub_18FB7C6E4((uint64_t)v5, (uint64_t)&v12, &qword_1EE18B2E0);
  if ((v13 & 1) == 0)
    return objc_msgSend(a1, sel_setStableHash_, v12);
  return result;
}

id sub_18FB7B9D8(id a1, _QWORD *a2, uint64_t a3)
{
  id result;
  uint64_t v6;
  uint64_t v7;

  if (*a2)
    objc_msgSend(a1, sel_setIntentReference_);
  sub_18FB7C6E4(a3, (uint64_t)&v6, (uint64_t *)&unk_1EE189338);
  result = (id)sub_18FB7C6E4((uint64_t)&v6, (uint64_t)&v7, (uint64_t *)&unk_1EE189338);
  if (v7)
    return objc_msgSend(a1, sel_setAttributeKey_);
  return result;
}

uint64_t sub_18FB7BA60(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t result;
  uint64_t v26;
  _QWORD v27[6];

  if (!a1)
    return 0;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRetain();
  v4 = a1;
  v5 = (id)sub_18FB7BE04(v4, v3);
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_12:

    return (uint64_t)v5;
  }
  swift_beginAccess();
  v6 = *(void **)(v1 + 16);
  swift_bridgeObjectRetain();
  v7 = v6;
  v8 = (void *)sub_18FBCD0B8();
  v9 = objc_msgSend(v7, sel_createString_, v8);
  swift_bridgeObjectRelease();

  v10 = &v4[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  if (*((_QWORD *)v10 + 1))
  {
    v11 = *(void **)(v1 + 16);
    swift_bridgeObjectRetain();
    v12 = v11;
    v13 = (void *)sub_18FBCD0B8();
    v14 = objc_msgSend(v12, sel_createString_, v13);
    swift_bridgeObjectRelease();

  }
  else
  {
    v14 = 0;
  }
  v15 = &v4[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
  swift_beginAccess();
  if (*((_QWORD *)v15 + 1))
  {
    v16 = *(void **)(v1 + 16);
    swift_bridgeObjectRetain();
    v17 = v16;
    v18 = (void *)sub_18FBCD0B8();
    v19 = objc_msgSend(v17, sel_createString_, v18);
    swift_bridgeObjectRelease();

  }
  else
  {
    v19 = 0;
  }
  v20 = *(void **)(v1 + 16);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v9;
  v21[3] = v14;
  v21[4] = v19;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = sub_18FB7C058;
  *(_QWORD *)(v22 + 24) = v21;
  v27[4] = sub_18FB7CB8C;
  v27[5] = v22;
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 1107296256;
  v27[2] = sub_18FB7CB88;
  v27[3] = &block_descriptor_4;
  v23 = _Block_copy(v27);
  swift_unknownObjectRetain();
  swift_retain();
  v24 = v20;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_release();
  v5 = objc_msgSend(v24, sel__chsCreateExtensionIdentityBufUsingBlock_, v23);

  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v23 & 1) == 0)
  {
    swift_beginAccess();
    v4 = v4;
    v26 = swift_unknownObjectRetain();
    sub_18FBA2C68(v26, v4);
    swift_endAccess();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FB7BE04(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v9;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_18FB7F848((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v6);
        swift_unknownObjectRetain();
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_18FBCD5F8();

  if (!v4)
    return 0;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B0);
  swift_dynamicCast();
  v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_18FB7BECC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v8;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v5 = sub_18FB7F910(a1);
      if ((v6 & 1) != 0)
      {
        v4 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v5);
        swift_retain();
        return v4;
      }
    }
    return 0;
  }
  swift_retain();
  v3 = sub_18FBCD5F8();
  swift_release();
  if (!v3)
    return 0;
  type metadata accessor for ControlSessionSubscriptionRequest();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v4 = v8;
  swift_unknownObjectRelease();
  return v4;
}

id sub_18FB7BFA4(id result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;

  v6 = result;
  if (a2)
    result = objc_msgSend(result, sel_setExtensionBundleIdentifier_, a2);
  if (a3)
    result = objc_msgSend(v6, sel_setContainerBundleIdentifier_, a3);
  if (a4)
    return objc_msgSend(v6, sel_setDeviceIdentifier_, a4);
  return result;
}

uint64_t sub_18FB7C024()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_18FB7C058(void *a1)
{
  uint64_t *v1;

  return sub_18FB7BFA4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_18FB7C064()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_18FB7C08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  void *v18;
  _QWORD *v19;
  _QWORD *v20;

  v7 = sub_18FB1F254(0, &qword_1EE189348);
  v8 = *(void **)(a1 + 32);
  if (!v8)
  {
    v11 = objc_msgSend(*(id *)(a1 + 16), sel_archivedObjectsAsData);
    if (v11)
    {
      v12 = v11;
      v13 = sub_18FBCCE78();
      v15 = v14;

      v16 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
      v17 = sub_18FB7C628();
      sub_18FB77A8C(v13, v15);
      if (v3)
        return v7;
      v18 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = v17;

    }
    v8 = *(void **)(a1 + 32);
    if (!v8)
    {
      sub_18FB7C5E4();
      swift_allocError();
      *v19 = a2;
      v19[1] = a3;
      swift_bridgeObjectRetain();
      swift_willThrow();
      return v7;
    }
  }
  v9 = v8;
  v10 = sub_18FBCD3E8();
  if (v10)
  {
    v7 = v10;
  }
  else
  {
    sub_18FB7C5E4();
    swift_allocError();
    *v20 = a2;
    v20[1] = a3;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }

  return v7;
}

uint64_t sub_18FB7C210()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_18FB7C254(void *a1)
{
  uint64_t v1;

  return sub_18FB7B9D8(a1, *(_QWORD **)(v1 + 16), v1 + 24);
}

uint64_t sub_18FB7C260()
{
  return swift_deallocObject();
}

uint64_t sub_18FB7C270(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_18FB7C280()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_18FB7C2C4(void *a1)
{
  uint64_t v1;

  return sub_18FB7B8B4(a1, v1 + 16);
}

uint64_t sub_18FB7C2CC()
{
  return swift_deallocObject();
}

uint64_t sub_18FB7C2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_18FB7C08C(a1, a2, a3);
  if (!v4)
    *a4 = result;
  return result;
}

_QWORD *sub_18FB7C304@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = a1(&v5);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_18FB7C340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t result;
  _BYTE v17[8];
  _BYTE v18[8];
  _BYTE v19[8];
  _BYTE v20[8];
  _BYTE v21[8];

  if (a2 < 0)
  {
    result = sub_18FBCD610();
    __break(1u);
  }
  else
  {
    if (!a2)
      return MEMORY[0x1E0DEE9D8];
    v4 = sub_18FBCD2BC();
    *(_QWORD *)(v4 + 16) = a2;
    sub_18FB7C6E4(a1, (uint64_t)v21, (uint64_t *)&unk_1EE189338);
    sub_18FB7C6E4(a1 + 8, (uint64_t)v20, (uint64_t *)&unk_1EE188008);
    sub_18FB7C6E4(a1 + 16, (uint64_t)v19, &qword_1EE187FE8);
    sub_18FB7C6E4(a1 + 24, (uint64_t)v18, &qword_1EE187FE8);
    sub_18FB7C6E4(a1 + 32, (uint64_t)v17, &qword_1EE187FE8);
    v6 = *(_OWORD *)(a1 + 16);
    v5 = *(_OWORD *)(a1 + 32);
    v7 = *(_OWORD *)a1;
    *(_BYTE *)(v4 + 80) = *(_BYTE *)(a1 + 48);
    *(_OWORD *)(v4 + 48) = v6;
    *(_OWORD *)(v4 + 64) = v5;
    *(_OWORD *)(v4 + 32) = v7;
    if (a2 != 1)
    {
      v8 = *(_OWORD *)a1;
      v9 = *(_OWORD *)(a1 + 16);
      v10 = *(_OWORD *)(a1 + 32);
      *(_BYTE *)(v4 + 136) = *(_BYTE *)(a1 + 48);
      *(_OWORD *)(v4 + 120) = v10;
      *(_OWORD *)(v4 + 104) = v9;
      *(_OWORD *)(v4 + 88) = v8;
      v11 = a2 - 2;
      if (v11)
      {
        v12 = v4 + 144;
        do
        {
          sub_18FB7C728((uint64_t)v21);
          sub_18FB7C728((uint64_t)v20);
          sub_18FB7C728((uint64_t)v19);
          sub_18FB7C728((uint64_t)v18);
          sub_18FB7C728((uint64_t)v17);
          v14 = *(_OWORD *)(a1 + 16);
          v13 = *(_OWORD *)(a1 + 32);
          v15 = *(_OWORD *)a1;
          *(_BYTE *)(v12 + 48) = *(_BYTE *)(a1 + 48);
          *(_OWORD *)(v12 + 16) = v14;
          *(_OWORD *)(v12 + 32) = v13;
          *(_OWORD *)v12 = v15;
          v12 += 56;
          --v11;
        }
        while (v11);
      }
      sub_18FB7C728((uint64_t)v21);
      sub_18FB7C728((uint64_t)v20);
      sub_18FB7C728((uint64_t)v19);
      sub_18FB7C728((uint64_t)v18);
      sub_18FB7C728((uint64_t)v17);
    }
    sub_18FB7C728((uint64_t)v21);
    sub_18FB7C728((uint64_t)v20);
    sub_18FB7C728((uint64_t)v19);
    sub_18FB7C728((uint64_t)v18);
    sub_18FB7C728((uint64_t)v17);
    return v4;
  }
  return result;
}

id sub_18FB7C52C(void *a1)
{
  uint64_t v1;

  return sub_18FB7AD90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_18FB7C548()
{
  return swift_deallocObject();
}

uint64_t sub_18FB7C558@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  result = sub_18FB7C08C(v1[2], v1[3], v1[4]);
  if (!v2)
    *a1 = result;
  return result;
}

unint64_t sub_18FB7C588()
{
  unint64_t result;

  result = qword_1EE189328;
  if (!qword_1EE189328)
  {
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EE189328);
  }
  return result;
}

uint64_t sub_18FB7C5D4()
{
  return swift_deallocObject();
}

unint64_t sub_18FB7C5E4()
{
  unint64_t result;

  result = qword_1EE18B350;
  if (!qword_1EE18B350)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for RelevanceCacheError, &type metadata for RelevanceCacheError);
    atomic_store(result, (unint64_t *)&qword_1EE18B350);
  }
  return result;
}

id sub_18FB7C628()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_18FBCCE60();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_18FBCCD70();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_18FB7C6E4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_18FB7C728(uint64_t a1)
{
  swift_unknownObjectRetain();
  return a1;
}

id sub_18FB7C754(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  objc_msgSend(a1, sel_setKind_, v3);
  if (v4)
    objc_msgSend(a1, sel_setExtensionIdentity_, v4);
  return objc_msgSend(a1, sel_setIsDeletion_, 1);
}

uint64_t sub_18FB7C7A8()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18FB7C7F8()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_32Tm()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

id sub_18FB7C838(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  objc_msgSend(a1, sel_setGroups_, v3);
  return objc_msgSend(a1, sel_setArchivedObjects_, v4);
}

uint64_t sub_18FB7C874()
{
  return swift_deallocObject();
}

uint64_t destroy for WidgetRelevanceOffsets()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for WidgetRelevanceOffsets(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetRelevanceOffsets(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WidgetRelevanceOffsets(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetRelevanceOffsets(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 49))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetRelevanceOffsets(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetRelevanceOffsets()
{
  return &type metadata for WidgetRelevanceOffsets;
}

uint64_t sub_18FB7CB90()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  unsigned __int8 v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v13 = OBJC_IVAR___CHSWidgetExtensionContainer_storage;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  if (v1 >> 62)
    goto LABEL_19;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; v2 = sub_18FBCD628())
  {
    v3 = 4;
    while (1)
    {
      v4 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1940086C4](v3 - 4, v1) : *(id *)(v1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_identity);
      v8 = objc_msgSend(v7, sel_isRemote);

      if ((v8 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_10;
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain_n();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  v9 = *(_QWORD *)(v14 + v13);
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_12;
LABEL_22:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  result = sub_18FBCD628();
  if (!result)
    goto LABEL_22;
LABEL_12:
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_23:
    v12 = (id)MEMORY[0x1940086C4](0, v9);
    goto LABEL_15;
  }
  if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return result;
  }
  v12 = *(id *)(v9 + 32);
LABEL_15:
  v5 = v12;
LABEL_17:
  swift_bridgeObjectRelease();
  return (uint64_t)v5;
}

uint64_t CHSWidgetExtensionContainer.containerBundleIdentifier.getter()
{
  void *v0;
  char *v1;
  char *v2;
  uint64_t result;
  uint64_t v4;

  v0 = (void *)sub_18FB7CB90();
  v1 = (char *)objc_msgSend(v0, sel_identity);

  v2 = &v1[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  result = swift_beginAccess();
  if (*((_QWORD *)v2 + 1))
  {
    v4 = *(_QWORD *)v2;
    swift_bridgeObjectRetain();

    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CHSWidgetExtensionContainer.localizedContainerDisplayName.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)sub_18FB7CB90();
  v1 = objc_msgSend(v0, sel_containerBundleLocalizedDisplayName);

  v2 = sub_18FBCD0DC();
  return v2;
}

uint64_t CHSWidgetExtensionContainer.allExtensions.getter()
{
  unint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_18FB820D8(v0, (unint64_t *)&qword_1EE189E10, (uint64_t)off_1E2A568B0, (unint64_t *)&qword_1EE189E20, (void (*)(id *, uint64_t))sub_18FB1F34C);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t CHSWidgetExtensionContainer.localExtensions.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;
  id v7;
  unsigned __int8 v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  v9 = MEMORY[0x1E0DEE9D8];
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  result = sub_18FBCD628();
  v2 = result;
  if (!result)
    goto LABEL_14;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x1940086C4](i, v1);
      else
        v5 = *(id *)(v1 + 8 * i + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, sel_identity);
      v8 = objc_msgSend(v7, sel_isRemote);

      if ((v8 & 1) != 0)
      {

      }
      else
      {
        sub_18FBCD598();
        sub_18FBCD5BC();
        sub_18FBCD5C8();
        sub_18FBCD5A4();
      }
    }
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t CHSWidgetExtensionContainer.remoteExtensionsByDeviceIdentifier.getter()
{
  uint64_t v0;
  char **v1;
  uint64_t v2;
  char **v3;
  uint64_t *v4;
  uint64_t i;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  __int128 v39;
  char **v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char **v45;
  _QWORD *v46;

  v1 = *(char ***)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  v45 = (char **)MEMORY[0x1E0DEE9D8];
  if ((unint64_t)v1 >> 62)
    goto LABEL_39;
  v2 = *(_QWORD *)(((unint64_t)v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  v3 = &selRef__queue_notifyTimelineEntryRelevanceDidChange_;
  v4 = &OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier;
  if (v2)
  {
    if (v2 < 1)
    {
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      result = sub_18FBCD808();
      __break(1u);
      return result;
    }
    for (i = 0; i != v2; ++i)
    {
      if (((unint64_t)v1 & 0xC000000000000001) != 0)
        v6 = (char *)MEMORY[0x1940086C4](i, v1);
      else
        v6 = v1[i + 4];
      v7 = v6;
      v8 = (char *)objc_msgSend(v6, sel_identity, v39);
      v9 = &v8[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
      swift_beginAccess();
      v10 = *((_QWORD *)v9 + 1);

      if (v10)
      {
        sub_18FBCD598();
        sub_18FBCD5BC();
        sub_18FBCD5C8();
        sub_18FBCD5A4();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v1 = v45;
  }
  else
  {
    swift_bridgeObjectRelease();
    v1 = (char **)MEMORY[0x1E0DEE9D8];
  }
  v46 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if (((unint64_t)v1 & 0x8000000000000000) != 0 || ((unint64_t)v1 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v11 = sub_18FBCD628();
    swift_release();
    if (v11)
      goto LABEL_18;
  }
  else
  {
    v11 = (uint64_t)v1[2];
    if (v11)
    {
LABEL_18:
      v42 = (unint64_t)v1 & 0xC000000000000001;
      v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v13 = 4;
      v39 = xmmword_18FBD6750;
      v40 = v1;
      v41 = v11;
      while (1)
      {
        v16 = v13 - 4;
        if (v42)
        {
          v17 = (char *)MEMORY[0x1940086C4](v13 - 4, v1);
          v18 = v13 - 3;
          if (__OFADD__(v16, 1))
            goto LABEL_36;
        }
        else
        {
          v17 = v1[v13];
          v18 = v13 - 3;
          if (__OFADD__(v16, 1))
          {
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            swift_bridgeObjectRetain();
            v2 = sub_18FBCD628();
            goto LABEL_3;
          }
        }
        v43 = v18;
        v1 = v3;
        v19 = v17;
        v20 = (char *)objc_msgSend(v17, v3[286], v39);
        v21 = v4;
        v22 = (uint64_t *)&v20[*v4];
        swift_beginAccess();
        v24 = *v22;
        v23 = v22[1];
        swift_bridgeObjectRetain();

        if (!v23)
          goto LABEL_44;
        v26 = sub_18FB7F7E4(v24, v23);
        v27 = v12[2];
        v28 = (v25 & 1) == 0;
        v29 = v27 + v28;
        if (__OFADD__(v27, v28))
          goto LABEL_37;
        v30 = v25;
        if (v12[3] < v29)
        {
          sub_18FB80078(v29, 1);
          v12 = v46;
          v31 = sub_18FB7F7E4(v24, v23);
          if ((v30 & 1) != (v32 & 1))
            goto LABEL_45;
          v26 = v31;
        }
        if ((v30 & 1) != 0)
        {
          v14 = swift_bridgeObjectRelease();
          v15 = (_QWORD *)(v12[7] + 8 * v26);
          MEMORY[0x1940083E8](v14);
          v3 = v1;
          if (*(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_18FBCD2B0();
          sub_18FBCD2C8();
          sub_18FBCD2A4();
        }
        else
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE189AA0);
          v33 = swift_allocObject();
          *(_OWORD *)(v33 + 16) = v39;
          *(_QWORD *)(v33 + 32) = v19;
          v44 = v33;
          sub_18FBCD2A4();
          v12[(v26 >> 6) + 8] |= 1 << v26;
          v34 = (uint64_t *)(v12[6] + 16 * v26);
          *v34 = v24;
          v34[1] = v23;
          *(_QWORD *)(v12[7] + 8 * v26) = v44;
          v35 = v12[2];
          v36 = __OFADD__(v35, 1);
          v37 = v35 + 1;
          if (v36)
            goto LABEL_38;
          v12[2] = v37;
          v3 = v1;
        }
        v4 = v21;
        v1 = v40;
        ++v13;
        if (v43 == v41)
          goto LABEL_42;
      }
    }
  }
  v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_42:
  swift_release();
  return (uint64_t)v12;
}

uint64_t CHSWidgetExtensionContainer.iconVersion.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  v1 = *(void **)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_iconResolver);
  swift_unknownObjectRetain();
  v2 = (void *)sub_18FB7CB90();
  v3 = objc_msgSend(v2, sel_identity);

  v4 = objc_msgSend(v1, sel_resolveIconVersionForExtensionIdentity_, v3);
  swift_unknownObjectRelease();
  if (!v4)
    return 0;
  v5 = sub_18FBCD0DC();

  return v5;
}

void CHSWidgetExtensionContainer.getIcon(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[6];

  v5 = (void *)sub_18FB7CB90();
  v6 = (char *)objc_msgSend(v5, sel_identity);

  v7 = (uint64_t *)&v6[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  v8 = v7[1];
  if (v8)
  {
    v9 = *v7;
    v10 = (uint64_t *)&v6[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    v12 = *v10;
    v11 = v10[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    v13 = *(void **)(v2 + OBJC_IVAR___CHSWidgetExtensionContainer_iconResolver);
    swift_unknownObjectRetain();
    sub_18FB7D954(v9, v8, v12, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = (void *)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
    v16[4] = a1;
    v16[5] = a2;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_18FB7DAA4;
    v16[3] = &block_descriptor_5;
    v15 = _Block_copy(v16);
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_resolveIconForContainerIdentity_completion_, v14, v15);
    _Block_release(v15);
    swift_unknownObjectRelease();

  }
  else
  {

    __break(1u);
  }
}

uint64_t sub_18FB7D954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A128);
  inited = swift_initStackObject();
  v9 = inited;
  *(_OWORD *)(inited + 16) = xmmword_18FBD6250;
  if (a4)
    v10 = a3;
  else
    v10 = 0;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = a4;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FB1EB44(v9, &v19);
  v11 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_18FBD6060;
  v13 = sub_18FB1E0E4();
  v14 = sub_18FB1E3F8(v13);
  v16 = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v16;
  swift_bridgeObjectRetain();
  sub_18FB1DFFC((uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1DFB0();
  v17 = sub_18FBCD070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_18FB7DAA4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void __swiftcall CHSWidgetExtensionContainer.extension(for:)(CHSWidgetExtension_optional *__return_ptr retstr, CHSExtensionIdentity *a2)
{
  CHSExtensionIdentity *v2;
  unint64_t v3;

  v2 = a2;
  v3 = swift_bridgeObjectRetain();
  sub_18FB81F44(v3);
  swift_bridgeObjectRelease();

}

void CHSWidgetExtensionContainer.description.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = _sSo27CHSWidgetExtensionContainerC14ChronoServicesE18descriptionBuilder19withMultilinePrefixSo013BSDescriptionG0CSgSSSg_tF_0();
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_build);

    if (v2)
    {
      sub_18FBCD0DC();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::String_optional __swiftcall CHSWidgetExtensionContainer.description(withMultilinePrefix:)(Swift::String_optional withMultilinePrefix)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String_optional result;

  v1 = _sSo27CHSWidgetExtensionContainerC14ChronoServicesE18descriptionBuilder19withMultilinePrefixSo013BSDescriptionG0CSgSSSg_tF_0();
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(v1, sel_build);

    if (v4)
    {
      v5 = sub_18FBCD0DC();
      v7 = v6;

    }
    else
    {
      v5 = 0;
      v7 = 0;
    }
    v1 = (id)v5;
    v2 = v7;
  }
  else
  {
    __break(1u);
  }
  result.value._object = v2;
  result.value._countAndFlagsBits = (uint64_t)v1;
  return result;
}

void sub_18FB7DDEC(void *a1, id a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;

  v4 = objc_msgSend(a2, sel_containerBundleIdentifier);
  if (!v4)
  {
    sub_18FBCD0DC();
    v4 = (id)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
  }
  v5 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v4, v5);

  v6 = objc_msgSend(a2, sel_localizedContainerDisplayName);
  if (!v6)
  {
    sub_18FBCD0DC();
    v6 = (id)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
  }
  v7 = (id)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v6, v7);

}

Swift::String_optional __swiftcall CHSWidgetExtensionContainer.succinctDescription()()
{
  id v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String_optional result;

  v0 = CHSWidgetExtensionContainer.succinctDescriptionBuilder()();
  v1 = objc_msgSend(v0, sel_build);

  if (v1)
  {
    v2 = sub_18FBCD0DC();
    v4 = v3;

  }
  else
  {
    v2 = 0;
    v4 = 0;
  }
  v5 = v2;
  v6 = v4;
  result.value._object = v6;
  result.value._countAndFlagsBits = v5;
  return result;
}

id CHSWidgetExtensionContainer.succinctDescriptionBuilder()()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01748]), sel_initWithObject_, v0);
  if (result)
  {
    v2 = result;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v0;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_18FB82640;
    *(_QWORD *)(v4 + 24) = v3;
    v9[4] = sub_18FB73428;
    v9[5] = v4;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 1107296256;
    v9[2] = sub_18FB6E4C8;
    v9[3] = &block_descriptor_6_0;
    v5 = _Block_copy(v9);
    v6 = v2;
    v7 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v6, sel_appendProem_block_, 0, v5);
    _Block_release(v5);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return v6;
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_18FB7E0E0(void *a1, char *a2)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;

  v4 = objc_msgSend(a2, sel_containerBundleIdentifier);
  if (!v4)
  {
    sub_18FBCD0DC();
    v4 = (id)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
  }
  v5 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v4, v5);

  v6 = objc_msgSend(a2, sel_localizedContainerDisplayName);
  if (!v6)
  {
    sub_18FBCD0DC();
    v6 = (id)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
  }
  v7 = (void *)sub_18FBCD0B8();
  objc_msgSend(a1, sel_appendString_withName_, v6, v7);

  v8 = *(_QWORD *)&a2[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_18FBCD628();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = (id)sub_18FBCD0B8();

}

unint64_t sub_18FB7E294(unint64_t result, uint64_t a2)
{
  void *v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;
  void *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;

  v4 = result;
  v5 = result >> 62;
  if (!(result >> 62))
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
      goto LABEL_3;
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  result = sub_18FBCD628();
  v6 = result;
  if (!result)
    goto LABEL_21;
LABEL_3:
  if (v6 < 1)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v23 = v5;
  v22 = a2;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((v4 & 0xC000000000000001) != 0)
      v10 = (id)MEMORY[0x1940086C4](v7, v4);
    else
      v10 = *(id *)(v4 + 8 * v7 + 32);
    v11 = v10;
    v12 = (char *)objc_msgSend(v10, sel_identity, v22);
    v13 = &v12[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    v15 = *(_QWORD *)v13;
    v14 = *((_QWORD *)v13 + 1);
    swift_bridgeObjectRetain();

    if (v14)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_18FB7E9B8(0, v8[2] + 1, 1, v8);
      v17 = v8[2];
      v16 = v8[3];
      if (v17 >= v16 >> 1)
        v8 = sub_18FB7E9B8((_QWORD *)(v16 > 1), v17 + 1, 1, v8);
      v8[2] = v17 + 1;
      v9 = &v8[2 * v17];
      v9[4] = v15;
      v9[5] = v14;
    }
    ++v7;
  }
  while (v6 != v7);
  swift_bridgeObjectRelease();
  v18 = v8[2];
  swift_bridgeObjectRelease();
  if (v23)
  {
    swift_bridgeObjectRetain();
    v19 = sub_18FBCD628();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = (unint64_t)v2;
  if (v18 == v19)
  {
    v20 = (char *)objc_msgSend(v2, sel_init);
    *(_QWORD *)&v20[OBJC_IVAR___CHSWidgetExtensionContainer_storage] = v4;
    v21 = v20;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v21[OBJC_IVAR___CHSWidgetExtensionContainer_iconResolver] = v22;

    swift_unknownObjectRelease();
    return (unint64_t)v21;
  }
LABEL_23:
  __break(1u);
  return result;
}

_QWORD *CHSWidgetExtensionContainer.extensionBundleIdentifiers.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v2 = sub_18FBCD628();
  if (!v2)
    goto LABEL_13;
LABEL_3:
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_18FB7F074(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v15;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1940086C4](v4, v1);
      else
        v6 = *(id *)(v1 + 8 * v4 + 32);
      v7 = v6;
      v8 = (char *)objc_msgSend(v6, sel_identity);
      v9 = &v8[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
      swift_beginAccess();
      v11 = *(_QWORD *)v9;
      v10 = *((_QWORD *)v9 + 1);
      swift_bridgeObjectRetain();

      v13 = *(_QWORD *)(v15 + 16);
      v12 = *(_QWORD *)(v15 + 24);
      if (v13 >= v12 >> 1)
        sub_18FB7F074((_QWORD *)(v12 > 1), v13 + 1, 1);
      ++v4;
      *(_QWORD *)(v15 + 16) = v13 + 1;
      v14 = v15 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
    return (_QWORD *)v5;
  }
  __break(1u);
  return result;
}

uint64_t CHSWidgetExtensionContainer.containerBundleIdentifiers.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  id v7;
  void *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetExtensionContainer_storage);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v2)
      goto LABEL_3;
LABEL_16:
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_17:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain_n();
  result = sub_18FBCD628();
  v2 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1940086C4](v4, v1);
      else
        v7 = *(id *)(v1 + 8 * v4 + 32);
      v8 = v7;
      v9 = (char *)objc_msgSend(v7, sel_identity);
      v10 = &v9[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
      swift_beginAccess();
      v12 = *(_QWORD *)v10;
      v11 = *((_QWORD *)v10 + 1);
      swift_bridgeObjectRetain();

      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v5 = sub_18FB7E9B8(0, v5[2] + 1, 1, v5);
        v14 = v5[2];
        v13 = v5[3];
        if (v14 >= v13 >> 1)
          v5 = sub_18FB7E9B8((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
        v5[2] = v14 + 1;
        v6 = &v5[2 * v14];
        v6[4] = v12;
        v6[5] = v11;
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

char *sub_18FB7E8A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B3E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8])
      memmove(v12, v13, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_18FB7E9B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189AF8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ECD9D4F0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18FB7EAD8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B408);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18FB7EBEC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188090);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18FB7ECEC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE188098);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_18FB7EE04(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1880B8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B3F0);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18FB7EF24(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187F18);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18FB7F03C(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_18FB7F0E4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_18FB7F058(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_18FB7F1E8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_18FB7F074(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_18FB7F2E8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_18FB7F090(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_18FB7F408(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_18FB7F0AC(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_18FB7F53C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_18FB7F0C8(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_18FB7F65C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_18FB7F0E4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B418);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_18FB7F1E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

_QWORD *sub_18FB7F2E8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187F58);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[2 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD9D490);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

_QWORD *sub_18FB7F408(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1880A8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187F80);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

_QWORD *sub_18FB7F53C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187F08);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[4 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187E60);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_18FB7F65C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187F18);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

unint64_t sub_18FB7F774(uint64_t a1)
{
  uint64_t v2;

  sub_18FBCD850();
  type metadata accessor for CFString(0);
  sub_18FB82764();
  sub_18FBCCEA8();
  v2 = sub_18FBCD88C();
  return sub_18FB816B0(a1, v2);
}

unint64_t sub_18FB7F7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_18FBCD850();
  sub_18FBCD130();
  v4 = sub_18FBCD88C();
  return sub_18FB817D8(a1, a2, v4);
}

unint64_t sub_18FB7F848(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_18FBCD400();
  return sub_18FB818B8(a1, v2);
}

unint64_t sub_18FB7F878(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_18FBCD400();
  return sub_18FB819C0(a1, v2, &qword_1EE18B400);
}

unint64_t sub_18FB7F8C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_18FBCD400();
  return sub_18FB819C0(a1, v2, (unint64_t *)&unk_1EE187FB0);
}

unint64_t sub_18FB7F910(uint64_t a1)
{
  id v2;
  uint64_t v3;

  sub_18FBCD850();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v2 = *(id *)(a1 + 32);
  sub_18FBCD418();

  v3 = sub_18FBCD88C();
  return sub_18FB81AD0(a1, v3);
}

unint64_t sub_18FB7F9CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_18FBCD844();
  return sub_18FB81C54(a1, v2);
}

unint64_t sub_18FB7F9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_18FBCD850();
  sub_18FB7D954(a1, a2, a3, a4);
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  v8 = sub_18FBCD88C();
  return sub_18FB81CF0(a1, a2, a3, a4, v8);
}

uint64_t sub_18FB7FA9C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187DC0);
  v6 = sub_18FBCD64C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v34 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          v3 = v33;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v34 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
    {
      sub_18FB73714(v23, v35);
    }
    else
    {
      sub_18FB6FA48((uint64_t)v23, (uint64_t)v35);
      v24 = v22;
    }
    sub_18FBCD850();
    type metadata accessor for CFString(0);
    sub_18FB82764();
    sub_18FBCCEA8();
    result = sub_18FBCD88C();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = (uint64_t)sub_18FB73714(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v33;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FB7FDA4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188050);
  v6 = sub_18FBCD64C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      swift_unknownObjectRetain();
    }
    result = sub_18FBCD400();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FB80078(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B420);
  v36 = a2;
  v6 = sub_18FBCD64C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_18FBCD850();
    sub_18FBCD130();
    result = sub_18FBCD88C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FB8038C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  char v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188058);
  v39 = a2;
  v6 = sub_18FBCD64C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v2;
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v37;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
    v31 = *(_QWORD *)(v5 + 56) + 16 * v21;
    v32 = *(void **)v31;
    v33 = *(_BYTE *)(v31 + 8);
    if ((v39 & 1) == 0)
    {
      v34 = v32;
      v35 = v30;
    }
    result = sub_18FBCD400();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v30;
    v19 = *(_QWORD *)(v7 + 56) + 16 * v18;
    *(_QWORD *)v19 = v32;
    *(_BYTE *)(v19 + 8) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FB80674(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  __int128 v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE188040);
  v39 = a2;
  v6 = sub_18FBCD64C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 24 * v21;
    v34 = *(_QWORD *)v33;
    v40 = *(_OWORD *)(v33 + 8);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_18FBCD850();
    sub_18FBCD130();
    result = sub_18FBCD88C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
    *(_QWORD *)v19 = v34;
    *(_OWORD *)(v19 + 8) = v40;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FB809B4(uint64_t a1, char a2)
{
  return sub_18FB809CC(a1, a2, (uint64_t *)&unk_1EE1896F0);
}

uint64_t sub_18FB809C0(uint64_t a1, char a2)
{
  return sub_18FB809CC(a1, a2, &qword_1EE189700);
}

uint64_t sub_18FB809CC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_18FBCD64C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v35)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v36 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v35)
        goto LABEL_33;
      v25 = *(_QWORD *)(v36 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v36 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v25 = *(_QWORD *)(v36 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v31);
    if ((v37 & 1) == 0)
    {
      swift_retain();
      swift_retain();
    }
    sub_18FBCD850();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_18FBCD130();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v15 = *(id *)(v32 + 32);
    sub_18FBCD418();

    result = sub_18FBCD88C();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v24 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v24, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_18FB80D30(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t i;
  char v43;
  char v44;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187F48);
  v43 = a2;
  v6 = sub_18FBCD64C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_33;
      v24 = v41[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v24 = v41[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 8);
    v36 = *(void **)(v33 + 16);
    v44 = *(_BYTE *)(v33 + 24);
    if ((v43 & 1) == 0)
    {
      v37 = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_18FBCD850();
    sub_18FBCD130();
    result = sub_18FBCD88C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v17;
    *(_QWORD *)v19 = v34;
    *(_QWORD *)(v19 + 8) = v35;
    *(_QWORD *)(v19 + 16) = v36;
    *(_BYTE *)(v19 + 24) = v44;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FB81070(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189AF0);
  result = sub_18FBCD64C();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_18FBCD844();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_18FB81324(uint64_t a1, int a2)
{
  return sub_18FB8134C(a1, a2, type metadata accessor for IconStore.FileVersionUpdateMigration, &qword_1EE187F00);
}

uint64_t sub_18FB81338(uint64_t a1, int a2)
{
  return sub_18FB8134C(a1, a2, type metadata accessor for IconStore.FileRenameMigration, &qword_1EE18B3E8);
}

uint64_t sub_18FB8134C(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t (*v21)(_QWORD);
  _QWORD *v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  _QWORD *v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  int v51;
  int64_t v52;

  v6 = v4;
  v9 = a3(0);
  v49 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v43 - v10;
  v12 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v51 = a2;
  v13 = sub_18FBCD64C();
  v14 = v13;
  if (*(_QWORD *)(v12 + 16))
  {
    v15 = 1 << *(_BYTE *)(v12 + 32);
    v16 = *(_QWORD *)(v12 + 64);
    v45 = (_QWORD *)(v12 + 64);
    if (v15 < 64)
      v17 = ~(-1 << v15);
    else
      v17 = -1;
    v18 = v17 & v16;
    v43 = v4;
    v44 = (unint64_t)(v15 + 63) >> 6;
    v50 = (_QWORD *)v13;
    v47 = v13 + 64;
    result = swift_retain();
    v20 = 0;
    v21 = a3;
    v46 = v11;
    v48 = v12;
    v22 = v50;
    while (1)
    {
      if (v18)
      {
        v27 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v28 = v27 | (v20 << 6);
      }
      else
      {
        v29 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        v30 = v45;
        if (v29 >= v44)
          goto LABEL_24;
        v31 = v45[v29];
        ++v20;
        if (!v31)
        {
          v20 = v29 + 1;
          if (v29 + 1 >= v44)
            goto LABEL_24;
          v31 = v45[v20];
          if (!v31)
          {
            v32 = v29 + 2;
            if (v32 >= v44)
            {
LABEL_24:
              swift_release();
              if ((v51 & 1) == 0)
              {
                result = swift_release();
                v6 = v43;
                v14 = (uint64_t)v50;
                goto LABEL_31;
              }
              v42 = 1 << *(_BYTE *)(v12 + 32);
              if (v42 >= 64)
                bzero(v30, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v30 = -1 << v42;
              v6 = v43;
              v14 = (uint64_t)v50;
              *(_QWORD *)(v12 + 16) = 0;
              break;
            }
            v31 = v45[v32];
            if (!v31)
            {
              while (1)
              {
                v20 = v32 + 1;
                if (__OFADD__(v32, 1))
                  goto LABEL_33;
                if (v20 >= v44)
                  goto LABEL_24;
                v31 = v45[v20];
                ++v32;
                if (v31)
                  goto LABEL_21;
              }
            }
            v20 = v32;
          }
        }
LABEL_21:
        v18 = (v31 - 1) & v31;
        v28 = __clz(__rbit64(v31)) + (v20 << 6);
      }
      v33 = *(_QWORD *)(v12 + 56);
      v34 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 32 * v28);
      v35 = *v34;
      v36 = v34[1];
      v37 = v34[2];
      v38 = v34[3];
      v39 = *(_QWORD *)(v49 + 72);
      v40 = v33 + v39 * v28;
      v52 = v20;
      v41 = (uint64_t)v46;
      if ((v51 & 1) != 0)
      {
        sub_18FB826C8(v40, (uint64_t)v46, v21);
      }
      else
      {
        sub_18FB82684(v40, (uint64_t)v46, v21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v23 = v21;
      sub_18FBCD850();
      sub_18FB7D954(v35, v36, v37, v38);
      sub_18FBCD130();
      swift_bridgeObjectRelease();
      sub_18FBCD88C();
      v24 = v47;
      v25 = sub_18FBCD49C();
      *(_QWORD *)(v24 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      v26 = (uint64_t *)(v22[6] + 32 * v25);
      *v26 = v35;
      v26[1] = v36;
      v26[2] = v37;
      v26[3] = v38;
      result = sub_18FB826C8(v41, v22[7] + v39 * v25, v23);
      ++v22[2];
      v12 = v48;
      v21 = v23;
      v20 = v52;
    }
  }
  result = swift_release();
LABEL_31:
  *v6 = v14;
  return result;
}

unint64_t sub_18FB816B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_18FB82764();
    v7 = v6;
    v8 = sub_18FBCCE9C();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_18FBCCE9C();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_18FB817D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_18FBCD7C0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_18FBCD7C0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_18FB818B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CHSExtensionIdentity();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_18FBCD40C();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_18FBCD40C();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_18FB819C0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_18FB1F254(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_18FBCD40C();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_18FBCD40C();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_18FB81AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void **v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  _QWORD *v15;
  BOOL v16;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = v2;
    v8 = ~v4;
    v9 = (void **)(a1 + 32);
    swift_beginAccess();
    swift_beginAccess();
    do
    {
      v15 = *(_QWORD **)(*(_QWORD *)(v6 + 48) + 8 * v5);
      swift_beginAccess();
      v16 = v15[2] == *(_QWORD *)(a1 + 16) && v15[3] == *(_QWORD *)(a1 + 24);
      if (v16 || (sub_18FBCD7C0() & 1) != 0)
      {
        sub_18FB1F254(0, qword_1EE189840);
        swift_beginAccess();
        v10 = (void *)v15[4];
        v11 = *v9;
        swift_retain();
        v12 = v10;
        v13 = v11;
        v14 = sub_18FBCD40C();
        swift_release();

        if ((v14 & 1) != 0)
          break;
      }
      v5 = (v5 + 1) & v8;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_18FB81C54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_18FB81CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v6 = a5 & ~(-1 << *(_BYTE *)(v5 + 32));
  v36 = v5 + 64;
  if (((*(_QWORD *)(v5 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v33 = -1 << *(_BYTE *)(v5 + 32);
    v9 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v6);
    v10 = *v9;
    v11 = v9[1];
    v13 = v9[2];
    v12 = v9[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_18FB7D954(v10, v11, v13, v12);
    v17 = v16;
    if (v15 == sub_18FB7D954(a1, a2, a3, a4) && v17 == v18)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return v6;
    }
    v20 = sub_18FBCD7C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      v34 = ~v33;
      v6 = (v6 + 1) & v34;
      if (((*(_QWORD *)(v36 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
      {
        while (1)
        {
          v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 32 * v6);
          v22 = *v21;
          v23 = v21[1];
          v25 = v21[2];
          v24 = v21[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v26 = sub_18FB7D954(v22, v23, v25, v24);
          v28 = v27;
          if (v26 == sub_18FB7D954(a1, a2, a3, a4) && v28 == v29)
            break;
          v31 = sub_18FBCD7C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v31 & 1) == 0)
          {
            v6 = (v6 + 1) & v34;
            if (((*(_QWORD *)(v36 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
              continue;
          }
          return v6;
        }
        goto LABEL_16;
      }
    }
  }
  return v6;
}

void *sub_18FB81F44(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  char v8;

  if (a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_18FBCD628())
  {
    sub_18FB1F254(0, qword_1EE189840);
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1940086C4](v3 - 4, a1) : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, sel_identity);
      v8 = sub_18FBCD40C();

      if ((v8 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_14;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_18FB820B4(unint64_t a1)
{
  return sub_18FB820D8(a1, (unint64_t *)&unk_1EE187FB0, (uint64_t)off_1E2A56938, (unint64_t *)&unk_1EE187FC0, (void (*)(id *, uint64_t))sub_18FBB4150);
}

uint64_t sub_18FB820D8(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD628();
    swift_bridgeObjectRelease();
  }
  sub_18FB1F254(0, a2);
  sub_18FB8270C(a4, a2);
  result = sub_18FBCD334();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_18FBCD628();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x1940086C4](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FB82254(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_18FBCD334();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_18FBB440C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

id _sSo27CHSWidgetExtensionContainerC14ChronoServicesE18descriptionBuilder19withMultilinePrefixSo013BSDescriptionG0CSgSSSg_tF_0()
{
  char *v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  id result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  char isEscapingClosureAtFileLocation;
  void *v23;
  void *v24;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_18FBCD628();
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
    goto LABEL_14;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  result = sub_18FB7F058(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v5 = 0;
  v6 = aBlock[0];
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x1940086C4](v5, v2);
    else
      v7 = *(id *)(v2 + 8 * v5 + 32);
    v8 = v7;
    v9 = objc_msgSend(v7, sel_succinctDescriptionWithBundleIDWithoutFullIdentity);
    v10 = sub_18FBCD0DC();
    v12 = v11;

    aBlock[0] = v6;
    v14 = *(_QWORD *)(v6 + 16);
    v13 = *(_QWORD *)(v6 + 24);
    if (v14 >= v13 >> 1)
    {
      sub_18FB7F058((char *)(v13 > 1), v14 + 1, 1);
      v6 = aBlock[0];
    }
    ++v5;
    *(_QWORD *)(v6 + 16) = v14 + 1;
    v15 = v6 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v10;
    *(_QWORD *)(v15 + 40) = v12;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
LABEL_14:
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01748]), sel_initWithObject_, v1);
  if (result)
  {
    v16 = result;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = v1;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_18FB8274C;
    *(_QWORD *)(v18 + 24) = v17;
    aBlock[4] = sub_18FB79338;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FB6E4C8;
    aBlock[3] = &block_descriptor_20_0;
    v19 = _Block_copy(aBlock);
    v20 = v16;
    v21 = v1;
    swift_retain();
    swift_release();
    objc_msgSend(v20, sel_appendProem_block_, 0, v19);
    _Block_release(v19);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      sub_18FB7203C(v6);
      swift_bridgeObjectRelease();
      v23 = (void *)sub_18FBCD280();
      swift_bridgeObjectRelease();
      v24 = (void *)sub_18FBCD0B8();
      objc_msgSend(v20, sel_appendArraySection_withName_skipIfEmpty_, v23, v24, 0);
      swift_release();

      return v20;
    }
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_18FB82614()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18FB82640()
{
  uint64_t v0;

  sub_18FB7E0E0(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_18FB82648()
{
  return swift_deallocObject();
}

uint64_t sub_18FB82658()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_18FB8267C(uint64_t a1)
{
  uint64_t v1;

  return sub_18FBCACA0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_18FB82684(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_18FB826C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_18FB8270C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_18FB1F254(255, a2);
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

void sub_18FB8274C()
{
  uint64_t v0;

  sub_18FB7DDEC(*(void **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_18FB82754()
{
  return swift_deallocObject();
}

unint64_t sub_18FB82764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE187D90;
  if (!qword_1EE187D90)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x19400954C](&unk_18FBD5798, v1);
    atomic_store(result, (unint64_t *)&qword_1EE187D90);
  }
  return result;
}

uint64_t dispatch thunk of ImageIOPrimitives.makeImageDestination(at:typeIdentifier:numberOfImages:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of ImageIOPrimitives.addImage(_:to:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ImageIOPrimitives.finalizeImageDestination(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of ImageIOPrimitives.makeImageSource(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ImageIOPrimitives.getImage(index:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t static Token.marker.getter()
{
  return 428;
}

uint64_t static Token.separator.getter()
{
  return 14906;
}

uint64_t Token.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t Token.description.getter()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1E9FC((unint64_t *)&qword_1EE18A150, (uint64_t *)&unk_1EE18A140, MEMORY[0x1E0DEAF20]);
  v0 = sub_18FBCD070();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Token.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_18FBD6060;
  v3 = sub_18FB1E0E4();
  v4 = sub_18FB1E3F8(v3);
  v6 = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = v4;
  *(_QWORD *)(v2 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_18FB1DFFC(v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1E9FC((unint64_t *)&qword_1EE18A150, (uint64_t *)&unk_1EE18A140, MEMORY[0x1E0DEAF20]);
  v7 = sub_18FBCD070();
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t Token.subscript.getter(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v1 + 16) > result)
  {
    v2 = *(_QWORD *)(*(_QWORD *)v1 + 16 * result + 32);
    swift_bridgeObjectRetain();
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FB82A18(uint64_t *a1, uint64_t *a2)
{
  return sub_18FBC80B8(*a1, *a2);
}

ChronoServices::Token sub_18FB82A24@<X0>(Swift::String *a1@<X0>, _QWORD *a2@<X8>)
{
  ChronoServices::Token result;
  uint64_t v4;

  result.storage._rawValue = Token.init(rawValue:)(*a1).storage._rawValue;
  *a2 = v4;
  return result;
}

uint64_t sub_18FB82A60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Token.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_18FB82A84()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1E9FC((unint64_t *)&qword_1EE18A150, (uint64_t *)&unk_1EE18A140, MEMORY[0x1E0DEAF20]);
  v0 = sub_18FBCD070();
  swift_bridgeObjectRelease();
  return v0;
}

ChronoServices::Token __swiftcall Token.init(stringLiteral:)(Swift::String stringLiteral)
{
  _QWORD *v1;
  _QWORD *v2;
  ChronoServices::Token result;
  uint64_t v4;

  v2 = v1;
  result.storage._rawValue = Token.init(rawValue:)(stringLiteral).storage._rawValue;
  *v2 = v4;
  return result;
}

uint64_t sub_18FB82B50()
{
  return sub_18FBCD7E4();
}

unint64_t sub_18FB82B64(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_18FBAB7A0(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_18FB82BD0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_18FBCD580();
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return sub_18FBCD514();
  }
  return result;
}

unint64_t sub_18FB82CE4()
{
  unint64_t result;

  result = qword_1EE18B428;
  if (!qword_1EE18B428)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for Token, &type metadata for Token);
    atomic_store(result, (unint64_t *)&qword_1EE18B428);
  }
  return result;
}

uint64_t sub_18FB82D28()
{
  return MEMORY[0x1E0DEA9F0];
}

unint64_t sub_18FB82D38()
{
  unint64_t result;

  result = qword_1EE18B430;
  if (!qword_1EE18B430)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for Token, &type metadata for Token);
    atomic_store(result, (unint64_t *)&qword_1EE18B430);
  }
  return result;
}

uint64_t sub_18FB82D7C()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t sub_18FB82D88()
{
  return MEMORY[0x1E0DEA9F8];
}

unint64_t sub_18FB82D98()
{
  unint64_t result;

  result = qword_1EE18B438;
  if (!qword_1EE18B438)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for Token, &type metadata for Token);
    atomic_store(result, (unint64_t *)&qword_1EE18B438);
  }
  return result;
}

uint64_t sub_18FB82DDC()
{
  return MEMORY[0x1E0DED580];
}

uint64_t sub_18FB82DE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_18FB82DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for Token()
{
  return &type metadata for Token;
}

uint64_t isChronod.getter()
{
  swift_beginAccess();
  return byte_1EE187D80;
}

uint64_t isChronod.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE187D80 = a1;
  return result;
}

uint64_t (*isChronod.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ChronoLibraryPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  unsigned int v13;
  uint64_t (*v14)(char *, uint64_t);
  id v15;
  id v17;
  void (*v18)(uint64_t, uint64_t);
  id v20[5];

  v20[4] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_18FBCCE24();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (id)BSCurrentUserDirectory();
  if (!v6)
    __break(1u);
  v7 = v6;
  v8 = (void *)sub_18FBCD0DC();
  v10 = v9;

  v20[1] = v8;
  v20[2] = v10;
  sub_18FBCD16C();
  sub_18FBCCD88();
  swift_bridgeObjectRelease();
  sub_18FBCCDAC();
  swift_beginAccess();
  if (byte_1EE187D80 != 1)
  {
    v14 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    return v14(v5, v2);
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v12 = (void *)sub_18FBCCD94();
  v20[0] = 0;
  v13 = objc_msgSend(v11, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v12, 1, 0, v20);

  if (v13)
  {
    v14 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
    v15 = v20[0];
    return v14(v5, v2);
  }
  v17 = v20[0];
  sub_18FBCCD70();

  swift_willThrow();
  v18 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v18(a1, v2);
  return ((uint64_t (*)(char *, uint64_t))v18)(v5, v2);
}

uint64_t sub_18FB830E4(uint64_t a1)
{
  return sub_18FB831E4(a1, qword_1EE189DE8, 0x736E6F6369, 0xE500000000000000, 38);
}

uint64_t IconsFolderURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_18FB834A0(&qword_1EE189CB8, (uint64_t)qword_1EE189DE8, a1);
}

uint64_t IconsFolderURL.setter(uint64_t a1)
{
  return sub_18FB83544(a1, &qword_1EE189CB8, (uint64_t)qword_1EE189DE8);
}

uint64_t (*IconsFolderURL.modify())()
{
  uint64_t v0;

  if (qword_1EE189CB8 != -1)
    swift_once();
  v0 = sub_18FBCCE24();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE189DE8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_18FB831B4(uint64_t a1)
{
  return sub_18FB831E4(a1, qword_1EE187E20, 0x724165746F6D6572, 0xEE00736576696863, 49);
}

uint64_t sub_18FB831E4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;

  v9 = sub_18FBCCE24();
  __swift_allocate_value_buffer(v9, a2);
  v10 = __swift_project_value_buffer(v9, (uint64_t)a2);
  return sub_18FB83250(a3, a4, a5, v10);
}

uint64_t sub_18FB83250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  _QWORD v17[6];

  v17[1] = a3;
  v17[2] = a4;
  v6 = sub_18FBCCD7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189DE0);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_18FBCCE24();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78]();
  v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ChronoLibraryPath.getter((uint64_t)v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_18FB836A0((uint64_t)v11);
    result = sub_18FBCD61C();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v17[3] = a1;
    v17[4] = a2;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CAFD60], v6);
    sub_18FB836E0();
    sub_18FBCCE18();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return result;
}

uint64_t RemoteArchivesURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_18FB834A0(&qword_1EE187E40, (uint64_t)qword_1EE187E20, a1);
}

uint64_t sub_18FB834A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_18FBCCE24();
  v6 = __swift_project_value_buffer(v5, a2);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t RemoteArchivesURL.setter(uint64_t a1)
{
  return sub_18FB83544(a1, &qword_1EE187E40, (uint64_t)qword_1EE187E20);
}

uint64_t sub_18FB83544(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (*a2 != -1)
    swift_once();
  v5 = sub_18FBCCE24();
  v6 = __swift_project_value_buffer(v5, a3);
  swift_beginAccess();
  v7 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v6, a1, v5);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v5);
}

uint64_t (*RemoteArchivesURL.modify())()
{
  uint64_t v0;

  if (qword_1EE187E40 != -1)
    swift_once();
  v0 = sub_18FBCCE24();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE187E20);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_18FB836A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189DE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_18FB836E0()
{
  unint64_t result;

  result = qword_1ECD9D418;
  if (!qword_1ECD9D418)
  {
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ECD9D418);
  }
  return result;
}

uint64_t sub_18FB83724()
{
  uint64_t result;

  sub_18FB83948();
  result = sub_18FBCD424();
  qword_1EE192810 = result;
  return result;
}

uint64_t sub_18FB83784()
{
  uint64_t v0;
  id v1;

  v0 = sub_18FBCCF5C();
  __swift_allocate_value_buffer(v0, qword_1EE192818);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE192818);
  if (qword_1EE18AC48 != -1)
    swift_once();
  v1 = (id)qword_1EE192810;
  return sub_18FBCCF68();
}

uint64_t sub_18FB83804(uint64_t a1)
{
  return sub_18FB838D4(a1, qword_1EE192760);
}

uint64_t sub_18FB83820(uint64_t a1)
{
  return sub_18FB838D4(a1, qword_1EE1927B8);
}

uint64_t sub_18FB83840(uint64_t a1)
{
  return sub_18FB838D4(a1, qword_1EE192830);
}

uint64_t sub_18FB83868(uint64_t a1)
{
  return sub_18FB838D4(a1, qword_1EE1927D8);
}

uint64_t sub_18FB83894(uint64_t a1)
{
  return sub_18FB838D4(a1, qword_1EE1927F0);
}

uint64_t sub_18FB838B0(uint64_t a1)
{
  return sub_18FB838D4(a1, qword_1EE192778);
}

uint64_t sub_18FB838D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_18FBCCF5C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_18FBCCF50();
}

unint64_t sub_18FB83948()
{
  unint64_t result;

  result = qword_1EE18B440;
  if (!qword_1EE18B440)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE18B440);
  }
  return result;
}

uint64_t CHSFrozenIntent.stableHash.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CHSFrozenIntent.init(_:_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = a5;
  a6[1] = result;
  a6[2] = a2;
  a6[3] = a3;
  a6[4] = a4;
  return result;
}

uint64_t CHSFrozenIntent.init(reference:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t result;

  v4 = objc_msgSend(a1, sel_stableHash);
  v5 = sub_18FB83B28();
  if (v6 >> 60 == 15)
  {
    v9 = objc_msgSend(a1, sel_intent);
    v14 = sub_18FB83C20();
    v16 = v15;
    sub_18FB8409C((uint64_t)v14, v15);
    v17 = sub_18FB83EA8();
    v19 = v18;

    sub_18FB77A8C((uint64_t)v14, v16);
    sub_18FB77A8C((uint64_t)v14, v16);
    result = sub_18FB840E0(v17, v19);
    *a2 = 0;
    a2[1] = 0;
    a2[3] = 0;
    a2[4] = 0;
    a2[2] = 0xF000000000000000;
  }
  else
  {
    v10 = v5;
    v11 = v6;
    v12 = v7;
    v13 = v8;

    sub_18FB8409C(v10, v11);
    sub_18FB840F4(v12, v13);
    sub_18FB840E0(v12, v13);
    sub_18FB8409C(v10, v11);
    sub_18FB840F4(v12, v13);
    sub_18FB77A8C(v10, v11);
    *a2 = v4;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
    a2[4] = v13;
    sub_18FB77A8C(v10, v11);
    return sub_18FB840E0(v12, v13);
  }
  return result;
}

uint64_t sub_18FB83B28()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;

  v1 = v0;
  v2 = objc_msgSend(v0, sel__partialConfigData);
  if (v2)
  {
    v3 = v2;
    v4 = sub_18FBCCE78();
    v6 = v5;

    v7 = objc_msgSend(v1, sel__partialSchemaData);
    if (v7)
    {
      v8 = v7;
      sub_18FBCCE78();

      return v4;
    }
    sub_18FB77A8C(v4, v6);
  }
  v9 = objc_msgSend(v1, sel__intentData);
  if (!v9)
    return 0;
  v4 = sub_18FBCCE78();

  return v4;
}

id sub_18FB83C20()
{
  void *v0;
  void *v1;
  id v2;
  id result;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id NSData;
  id v9;
  id v10;
  void *v11;
  _OWORD *v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  objc_opt_self();
  v1 = (void *)swift_dynamicCastObjCClass();
  v2 = v0;
  if (!v1)
    goto LABEL_10;
  result = (id)INIntentWithTypedIntent();
  if (!result)
  {
    __break(1u);
    goto LABEL_19;
  }
  v4 = result;

  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    v2 = v4;
LABEL_10:
    v10 = objc_msgSend(v2, sel__backingStoreData);
    if (v10)
    {
      v11 = v10;
      sub_18FBCD058();

      LODWORD(v13[0]) = sub_18FBCCF98();
      v1 = (void *)sub_18FBCD040();
      swift_bridgeObjectRelease();
      NSData = OPACKEncoderCreateNSData(v1);

      if (NSData)
      {
        v1 = (void *)sub_18FBCCE78();
        goto LABEL_13;
      }
    }
    sub_18FB7C5E4();
    swift_allocError();
    *v12 = xmmword_18FBD6980;
    swift_willThrow();
LABEL_16:

    return v1;
  }
  objc_opt_self();
  v5 = swift_dynamicCastObjCClass();
  v6 = v2;
  v2 = v4;
  if (!v5)
  {
LABEL_7:
    v13[0] = 0;
    NSData = objc_msgSend((id)objc_opt_self(), sel__encodeToOPACK_error_, v6, v13);

    v9 = v13[0];
    if (NSData)
    {
      v1 = (void *)sub_18FBCCE78();

LABEL_13:
      return v1;
    }
    v1 = v9;
    sub_18FBCCD70();

    swift_willThrow();
    goto LABEL_16;
  }
  result = (id)INIntentWithTypedIntent();
  if (result)
  {
    v7 = result;

    v6 = v7;
    goto LABEL_7;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_18FB83EA8()
{
  void *v0;
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id NSData;
  unint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  int v15;
  int v16;
  id v17[2];

  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  objc_opt_self();
  if (!swift_dynamicCastObjCClass())
  {
    v17[0] = 0;
    v3 = objc_msgSend(v0, sel__copyWithoutBackingStoreData_, v17);
    if (v3)
    {
      if (v17[0])
      {

      }
      else
      {
        v17[0] = 0;
        v4 = v3;
        v5 = objc_msgSend(v4, sel_widgetPlistableRepresentation_, v17);
        v6 = v17[0];
        if (v5)
        {
          v7 = v5;
          sub_18FBCD058();
          v8 = v6;

          LODWORD(v17[0]) = sub_18FBCCF98();
          v9 = (void *)sub_18FBCD040();
          swift_bridgeObjectRelease();
          NSData = OPACKEncoderCreateNSData(v9);

          if (NSData)
          {
            v1 = sub_18FBCCE78();
            v12 = v11;

          }
          else
          {
            v1 = 0;
            v12 = 0xF000000000000000;
          }
          v15 = (int)v17[0];
          v16 = sub_18FBCCF98();

          if (v15 == v16)
          {
            if (v12 >> 60 != 15)
              return v1;
          }
          else
          {
            sub_18FB840E0(v1, v12);
          }
        }
        else
        {
          v13 = v17[0];
          v14 = (void *)sub_18FBCCD70();

          swift_willThrow();
        }
      }
    }
  }
  return 0;
}

uint64_t sub_18FB8409C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_18FB840E0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_18FB77A8C(a1, a2);
  return a1;
}

uint64_t sub_18FB840F4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_18FB8409C(a1, a2);
  return a1;
}

uint64_t CHSFrozenIntent.init(intent:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v4 = objc_msgSend(a1, sel__indexingHash);
  v5 = sub_18FB83C20();
  v7 = v6;
  sub_18FB8409C((uint64_t)v5, v6);
  v8 = sub_18FB83EA8();
  v10 = v9;

  sub_18FB8409C((uint64_t)v5, v7);
  sub_18FB840F4(v8, v10);
  sub_18FB77A8C((uint64_t)v5, v7);
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v10;
  sub_18FB77A8C((uint64_t)v5, v7);
  return sub_18FB840E0(v8, v10);
}

id CHSFrozenIntent.intent.getter()
{
  __int128 *v0;
  void *v1;
  void *v2;
  id v3;
  __int128 v5;
  __int128 v6;
  CHSIntentReference *v7;

  v5 = *v0;
  v6 = v0[1];
  v7 = (CHSIntentReference *)*((_QWORD *)v0 + 4);
  CHSFrozenIntent.referenceForRealization()(v7);
  v2 = v1;
  v3 = objc_msgSend(v1, sel_intent, v5, v6, v7);

  return v3;
}

void __swiftcall CHSFrozenIntent.referenceForRealization()(CHSIntentReference *__return_ptr retstr)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[4];
  if (v5 >> 60 == 15)
  {
    v6 = objc_allocWithZone((Class)CHSIntentReference);
    sub_18FB8409C(v3, v4);
    v7 = (void *)sub_18FBCCE60();
    sub_18FB77A8C(v3, v4);
    objc_msgSend(v6, sel_initWithIntentData_configData_schemaData_stableHash_, v7, 0, 0, v2);
  }
  else
  {
    v8 = v1[3];
    v9 = objc_allocWithZone((Class)CHSIntentReference);
    sub_18FB840F4(v8, v5);
    sub_18FB8409C(v3, v4);
    v10 = (void *)sub_18FBCCE60();
    sub_18FB77A8C(v3, v4);
    v7 = (void *)sub_18FBCCE60();
    sub_18FB840E0(v8, v5);
    objc_msgSend(v9, sel_initWithIntentData_configData_schemaData_stableHash_, 0, v10, v7, v2);

  }
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CHSFrozenIntent.referenceForSerialization()(CHSIntentReference *__return_ptr retstr)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  CHSIntentReference *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[4];
  if (v5 >> 60 == 15)
  {
    v6 = objc_allocWithZone((Class)CHSIntentReference);
    sub_18FB8409C(v3, v4);
    v7 = (void *)sub_18FBCCE60();
    sub_18FB77A8C(v3, v4);
    objc_msgSend(v6, sel_initWithIntentData_configData_schemaData_stableHash_, v7, 0, 0, v2);

  }
  else
  {
    v8 = v1[3];
    v9 = (void *)objc_opt_self();
    sub_18FB840F4(v8, v5);
    sub_18FB8409C(v3, v4);
    sub_18FB840F4(v8, v5);
    CHSFrozenIntent.referenceForRealization()(v10);
    v12 = v11;
    v13 = objc_msgSend(v11, sel_intent, v2, v3, v4, v8, v5, v23);

    sub_18FB77A8C(v3, v4);
    sub_18FB840E0(v8, v5);
    v22 = 0;
    v14 = objc_msgSend(v9, sel__encodeToOPACK_error_, v13, &v22);

    v15 = v22;
    if (v14)
    {
      v16 = sub_18FBCCE78();
      v18 = v17;

      v19 = objc_allocWithZone((Class)CHSIntentReference);
      v20 = (void *)sub_18FBCCE60();
      sub_18FB77A8C(v16, v18);
      objc_msgSend(v19, sel_initWithIntentData_configData_schemaData_stableHash_, v20, 0, 0, v2);

    }
    else
    {
      v21 = v15;
      sub_18FBCCD70();

      swift_willThrow();
    }
    sub_18FB840E0(v8, v5);
  }
}

void CHSFrozenIntent.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_18FBCD874();
  __asm { BR              X10 }
}

uint64_t sub_18FB84624()
{
  unint64_t v0;

  sub_18FBCD85C();
  if (v0 >> 60 != 15)
    __asm { BR              X10 }
  return sub_18FBCD868();
}

uint64_t CHSFrozenIntent.hashValue.getter()
{
  sub_18FBCD850();
  CHSFrozenIntent.hash(into:)();
  return sub_18FBCD88C();
}

id sub_18FB84758()
{
  __int128 *v0;
  void *v1;
  void *v2;
  id v3;
  __int128 v5;
  __int128 v6;
  CHSIntentReference *v7;

  v5 = *v0;
  v6 = v0[1];
  v7 = (CHSIntentReference *)*((_QWORD *)v0 + 4);
  CHSFrozenIntent.referenceForRealization()(v7);
  v2 = v1;
  v3 = objc_msgSend(v1, sel_intent, v5, v6, v7);

  return v3;
}

uint64_t sub_18FB847B4()
{
  sub_18FBCD850();
  CHSFrozenIntent.hash(into:)();
  return sub_18FBCD88C();
}

uint64_t sub_18FB84808()
{
  sub_18FBCD850();
  CHSFrozenIntent.hash(into:)();
  return sub_18FBCD88C();
}

uint64_t freezeHomogeneousIntents(intents:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  id v6;
  id v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;

  v2 = v1;
  v3 = a1;
  if (a1 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v4)
  {
    do
    {
      v26 = v3 & 0xC000000000000001;
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x1940086C4](0, v3);
      }
      else
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        v6 = *(id *)(v3 + 32);
      }
      v7 = v6;
      swift_bridgeObjectRelease();
      v24 = v7;
      v28 = sub_18FB83EA8();
      v29 = v8;
      swift_bridgeObjectRetain();
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      v10 = 4;
      v25 = v3;
      while (1)
      {
        v27 = v9;
        v9 = (char *)(v10 - 4);
        v11 = v26 ? (id)MEMORY[0x1940086C4](v10 - 4, v3) : *(id *)(v3 + 8 * v10);
        v12 = v11;
        v13 = v10 - 3;
        if (__OFADD__(v9, 1))
          break;
        v14 = sub_18FB83C20();
        if (v2)
        {

          sub_18FB840E0(v28, v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v9;
        }
        v16 = v14;
        v17 = v15;
        sub_18FB840F4(v28, v29);
        v18 = objc_msgSend(v12, sel__indexingHash);
        v19 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v19 = sub_18FB7EAD8(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
        v21 = *((_QWORD *)v19 + 2);
        v20 = *((_QWORD *)v19 + 3);
        v22 = v19;
        if (v21 >= v20 >> 1)
          v22 = sub_18FB7EAD8((char *)(v20 > 1), v21 + 1, 1, v19);
        *((_QWORD *)v22 + 2) = v21 + 1;
        v9 = v22;
        v23 = &v22[40 * v21];
        *((_QWORD *)v23 + 4) = v18;
        *((_QWORD *)v23 + 5) = v16;
        *((_QWORD *)v23 + 6) = v17;
        *((_QWORD *)v23 + 7) = v28;
        *((_QWORD *)v23 + 8) = v29;

        ++v10;
        v2 = 0;
        v3 = v25;
        if (v13 == v4)
        {
          swift_bridgeObjectRelease();
          sub_18FB840E0(v28, v29);

          return (uint64_t)v9;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      result = sub_18FBCD628();
      v4 = result;
    }
    while (result);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void freezeHomegeneousIntents(references:)(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  void *v32;
  unint64_t v33;
  id v34;
  void *v35;
  unint64_t v36;
  id v37;
  void *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  id v47;
  id v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  _QWORD v67[2];
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;

  v2 = v1;
  v3 = a1;
  v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_49:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_48:
  swift_bridgeObjectRetain();
  v5 = sub_18FBCD628();
  if (!v5)
    goto LABEL_49;
LABEL_3:
  v60 = (void *)v2;
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x1940086C4](0, v3);
  }
  else
  {
    if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    v6 = *(id *)(v3 + 32);
  }
  v7 = v6;
  swift_bridgeObjectRelease();
  v61 = v7;
  CHSFrozenIntent.init(reference:)(v61, v67);
  if (v68 >> 60 == 15)
  {
    sub_18FB7C5E4();
    swift_allocError();
    *v8 = xmmword_18FBD6980;
    swift_willThrow();
    goto LABEL_8;
  }
  v10 = v67[0];
  v9 = v67[1];
  v11 = v69;
  v12 = v70;
  v59 = v68;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B408);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_18FBD6060;
  v57 = v10;
  v58 = v9;
  *(_QWORD *)(v13 + 32) = v10;
  *(_QWORD *)(v13 + 40) = v9;
  *(_QWORD *)(v13 + 48) = v59;
  *(_QWORD *)(v13 + 56) = v11;
  *(_QWORD *)(v13 + 64) = v12;
  if (v5 < 1)
    goto LABEL_52;
  v71 = (char *)v13;
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_18FB85348(v10, v9, v59, v11, v12);
    if (sub_18FBCD628() < 1)
    {
LABEL_55:
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    v2 = sub_18FBCD628();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    swift_bridgeObjectRetain();
    sub_18FB85348(v10, v58, v59, v11, v12);
  }
  if ((uint64_t)v2 < v5)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if ((v3 & 0xC000000000000001) != 0 && v5 != 1)
  {
    v2 = sub_18FB8538C();
    v14 = 1;
    do
    {
      v15 = v14 + 1;
      sub_18FBCD544();
      v14 = v15;
    }
    while (v5 != v15);
  }
  if (!v4)
  {
    v56 = v3 & 0xFFFFFFFFFFFFFF8;
    v64 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
    v16 = 1;
    if (v5 != 1)
      goto LABEL_25;
LABEL_24:

    swift_unknownObjectRelease();
    sub_18FB853C8(v57, v58, v59, v11, v12);
    return;
  }
  swift_bridgeObjectRetain();
  v56 = sub_18FBCD634();
  v64 = v17;
  v16 = v18;
  v2 = v19;
  swift_bridgeObjectRelease_n();
  v5 = v2 >> 1;
  if (v16 == v2 >> 1)
    goto LABEL_24;
LABEL_25:
  v62 = v5;
  v63 = v12 >> 60;
  while (1)
  {
    if (v16 >= v5)
    {
      __break(1u);
      goto LABEL_48;
    }
    v20 = *(id *)(v64 + 8 * v16);
    v21 = v20;
    v66 = v20;
    if (v63 > 0xE)
    {
      v22 = v20;
      goto LABEL_32;
    }
    sub_18FB840F4(v11, v12);
    v23 = v21;
    sub_18FB840F4(v11, v12);
    v24 = objc_msgSend(v23, sel__partialConfigData);
    if (!v24)
      break;
    v25 = v24;
    v2 = sub_18FBCCE78();
    v27 = v26;

    v65 = objc_msgSend(v23, sel_stableHash);
    v28 = v11;
    v29 = v12;
LABEL_39:
    v3 = v11;
    v40 = v11;
    v41 = v12;
    sub_18FB840E0(v40, v12);
    sub_18FB8409C(v2, v27);
    sub_18FB840F4(v28, v29);
    v42 = v71;
    v44 = *((_QWORD *)v71 + 2);
    v43 = *((_QWORD *)v71 + 3);
    v4 = v44 + 1;
    if (v44 >= v43 >> 1)
      v42 = sub_18FB7EAD8((char *)(v43 > 1), v44 + 1, 1, v71);
    ++v16;
    *((_QWORD *)v42 + 2) = v4;
    v71 = v42;
    v45 = &v42[40 * v44];
    *((_QWORD *)v45 + 4) = v65;
    *((_QWORD *)v45 + 5) = v2;
    *((_QWORD *)v45 + 6) = v27;
    *((_QWORD *)v45 + 7) = v28;
    *((_QWORD *)v45 + 8) = v29;

    sub_18FB77A8C(v2, v27);
    sub_18FB840E0(v28, v29);
    v5 = v62;
    v12 = v41;
    v11 = v3;
    if (v62 == v16)
      goto LABEL_24;
  }
  sub_18FB840E0(v11, v12);
LABEL_32:
  v30 = objc_msgSend(v21, sel_stableHash, v56);
  v31 = objc_msgSend(v21, sel__partialConfigData);
  v65 = v30;
  if (v31)
  {
    v32 = v31;
    v2 = sub_18FBCCE78();
    v27 = v33;

    v34 = objc_msgSend(v21, sel__partialSchemaData);
    if (v34)
    {
      v35 = v34;
      v28 = sub_18FBCCE78();
      v29 = v36;

LABEL_38:
      sub_18FB8540C(v2, v27, v28, v29);
      sub_18FB840E0(v28, v29);
      sub_18FB77A8C(v2, v27);
      goto LABEL_39;
    }
    sub_18FB77A8C(v2, v27);
  }
  v37 = objc_msgSend(v21, sel__intentData);
  if (v37)
  {
    v38 = v37;
    v2 = sub_18FBCCE78();
    v27 = v39;

    v28 = 0;
    v29 = 0xF000000000000000;
    goto LABEL_38;
  }
  v46 = v11;
  v47 = objc_msgSend(v21, sel_intent);
  v48 = sub_18FB83C20();
  if (v60)
  {

  }
  else
  {
    v50 = (uint64_t)v48;
    v51 = v49;
    sub_18FB8409C((uint64_t)v48, v49);
    v52 = sub_18FB83EA8();
    v54 = v53;

    sub_18FB77A8C(v50, v51);
    sub_18FB77A8C(v50, v51);
    sub_18FB840E0(v52, v54);
  }
  sub_18FB840E0(v46, v12);
  swift_bridgeObjectRelease();
  sub_18FB7C5E4();
  swift_allocError();
  *v55 = xmmword_18FBD6980;
  swift_willThrow();

  sub_18FB853C8(v57, v58, v59, v46, v12);
  swift_unknownObjectRelease();
LABEL_8:

}

uint64_t _s14ChronoServices15CHSFrozenIntentV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    __asm { BR              X17 }
  return 0;
}

void sub_18FB85290(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_18FB840E0(a1, v1);
  if (v2 <= 0xE && v3 == BYTE6(v1))
    JUMPOUT(0x18FB852E4);
  JUMPOUT(0x18FB85264);
}

uint64_t sub_18FB85348(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;

  if (a3 >> 60 != 15)
  {
    sub_18FB8409C(a2, a3);
    return sub_18FB840F4(a4, a5);
  }
  return result;
}

unint64_t sub_18FB8538C()
{
  unint64_t result;

  result = qword_1EE1898E8;
  if (!qword_1EE1898E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE1898E8);
  }
  return result;
}

uint64_t sub_18FB853C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result;

  if (a3 >> 60 != 15)
  {
    sub_18FB77A8C(a2, a3);
    return sub_18FB840E0(a4, a5);
  }
  return result;
}

uint64_t sub_18FB8540C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_18FB8409C(result, a2);
    return sub_18FB840F4(a3, a4);
  }
  return result;
}

unint64_t sub_18FB8544C()
{
  unint64_t result;

  result = qword_1EE18B448;
  if (!qword_1EE18B448)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for CHSFrozenIntent, &type metadata for CHSFrozenIntent);
    atomic_store(result, (unint64_t *)&qword_1EE18B448);
  }
  return result;
}

uint64_t dispatch thunk of CHSIntentFactory.intent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for CHSFrozenIntent(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;

  result = sub_18FB77A8C(a1[1], a1[2]);
  v3 = a1[4];
  if (v3 >> 60 != 15)
    return sub_18FB77A8C(a1[3], v3);
  return result;
}

uint64_t initializeWithCopy for CHSFrozenIntent(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  v5 = a2[2];
  sub_18FB8409C(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a2 + 3;
  v7 = a2[4];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_18FB8409C(*v6, v7);
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v7;
  }
  return a1;
}

_QWORD *assignWithCopy for CHSFrozenIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_18FB8409C(v4, v5);
  v6 = a1[1];
  v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_18FB77A8C(v6, v7);
  v8 = a2 + 3;
  v9 = a2[4];
  if (a1[4] >> 60 != 15)
  {
    if (v9 >> 60 != 15)
    {
      v11 = *v8;
      sub_18FB8409C(*v8, v9);
      v12 = a1[3];
      v13 = a1[4];
      a1[3] = v11;
      a1[4] = v9;
      sub_18FB77A8C(v12, v13);
      return a1;
    }
    sub_18FB8562C((uint64_t)(a1 + 3));
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)v8;
    return a1;
  }
  v10 = *v8;
  sub_18FB8409C(*v8, v9);
  a1[3] = v10;
  a1[4] = v9;
  return a1;
}

uint64_t sub_18FB8562C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for CHSFrozenIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  sub_18FB77A8C(v5, v6);
  v7 = (_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  if (v8 >> 60 != 15)
  {
    v9 = *(_QWORD *)(a2 + 32);
    if (v9 >> 60 != 15)
    {
      v10 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v7;
      *(_QWORD *)(a1 + 32) = v9;
      sub_18FB77A8C(v10, v8);
      return a1;
    }
    sub_18FB8562C(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for CHSFrozenIntent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 16) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 16) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CHSFrozenIntent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CHSFrozenIntent()
{
  return &type metadata for CHSFrozenIntent;
}

id OPACKEncoderCreateNSData(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  v2 = (id)MEMORY[0x194008D00]();

  return v2;
}

uint64_t CHSExtensionIdentity.containerIdentity.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  if (v4)
  {
    v5 = *v3;
    v6 = (uint64_t *)(v1 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
    swift_beginAccess();
    v7 = *v6;
    v8 = swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
    v7 = 0;
    v8 = 0;
  }
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v7;
  a1[3] = v8;
  return swift_bridgeObjectRetain();
}

uint64_t DeviceScopedIdentity<>.containerBundleIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *DeviceScopedIdentity<>.init(containerBundleIdentifier:deviceID:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = result[1];
  *a4 = *result;
  a4[1] = v4;
  a4[2] = a2;
  a4[3] = a3;
  return result;
}

uint64_t sub_18FB858D4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void __swiftcall CHSActivityService.init()(CHSActivityService *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id CHSActivityService.init()()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v2 = objc_msgSend(v0, sel_initWithConnection_, v1);

  return v2;
}

char *sub_18FB859E0(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t (**v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];
  objc_super v35;

  v30 = sub_18FBCD004();
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78]();
  v28 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FBCD3A0();
  MEMORY[0x1E0C80A78]();
  v31 = sub_18FBCD034();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18FBCD3B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v1[OBJC_IVAR___CHSActivityService_queue_activityServiceAssertion] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___CHSActivityService_connection] = a1;
  v10 = (void *)objc_opt_self();
  v11 = v1;
  v27 = a1;
  v12 = objc_msgSend(v10, sel_weakObjectsHashTable);
  *(_QWORD *)&v11[OBJC_IVAR___CHSActivityService_queue_subscriptions] = v12;
  *(_QWORD *)&v11[OBJC_IVAR___CHSActivityService_connectionClient] = objc_msgSend(objc_allocWithZone((Class)_s16ConnectionClientCMa()), sel_init);
  sub_18FB1F254(0, (unint64_t *)&qword_1EE18A1A0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D8], v6);
  sub_18FBCD010();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&qword_1EE18A190, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A170);
  sub_18FB87300((unint64_t *)&qword_1EE18A180, (uint64_t *)&unk_1EE18A170);
  sub_18FBCD484();
  *(_QWORD *)&v11[OBJC_IVAR___CHSActivityService_queue] = sub_18FBCD3DC();
  v11[OBJC_IVAR___CHSActivityService_queue_invalidated] = 0;

  v35.receiver = v11;
  v35.super_class = (Class)CHSActivityService;
  v13 = (char *)objc_msgSendSuper2(&v35, sel_init);
  v14 = *(_QWORD *)&v13[OBJC_IVAR___CHSActivityService_connectionClient];
  v15 = v13;
  v16 = v27;
  objc_msgSend(v27, sel_addClient_, v14);
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14
                                                                    + OBJC_IVAR____TtCE14ChronoServicesCSo18CHSActivityService16ConnectionClient_activityPayloadUpdateHandler);
  v19 = *(_QWORD *)(v14
                  + OBJC_IVAR____TtCE14ChronoServicesCSo18CHSActivityService16ConnectionClient_activityPayloadUpdateHandler);
  *v18 = sub_18FB873D8;
  v18[1] = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17;
  sub_18FB7C270(v19);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v15;
  aBlock[4] = sub_18FB873E0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_27;
  v21 = _Block_copy(aBlock);
  v22 = v15;
  sub_18FBCD010();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB87300((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0);
  v23 = v28;
  v24 = v30;
  sub_18FBCD484();
  MEMORY[0x194008544](0, v5, v23, v21);

  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v24);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v31);
  swift_release();
  return v22;
}

uint64_t sub_18FB85E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  void *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v10 = sub_18FBCD004();
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_18FBCD034();
  v13 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78]();
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1940096B4](a5 + 16);
  if (result)
  {
    v17 = (void *)result;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v17;
    v18[3] = a1;
    v18[4] = a2;
    v18[5] = a3;
    v18[6] = a4;
    aBlock[4] = sub_18FB8741C;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FB858D4;
    aBlock[3] = &block_descriptor_33;
    v19 = _Block_copy(aBlock);
    v20 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FBCD010();
    v23 = MEMORY[0x1E0DEE9D8];
    sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
    sub_18FB87300((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0);
    sub_18FBCD484();
    MEMORY[0x194008544](0, v15, v12, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);

    return swift_release();
  }
  return result;
}

uint64_t sub_18FB8609C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v20 = a3;
  v8 = sub_18FBCD004();
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_18FBCD034();
  v11 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78]();
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  v14 = objc_msgSend(*(id *)(v4 + OBJC_IVAR___CHSActivityService_queue_subscriptions), sel_allObjects);
  type metadata accessor for CHSActivitySubscription();
  v15 = sub_18FBCD28C();

  if (qword_1EE18AC68 != -1)
    swift_once();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a1;
  v17 = v20;
  v16[4] = a2;
  v16[5] = v17;
  v16[6] = a4;
  aBlock[4] = sub_18FB8747C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_39;
  v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FBCD010();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB87300((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v13, v10, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  return swift_release();
}

uint64_t sub_18FB8631C(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  _QWORD v7[2];

  v7[1] = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssert();
  v2 = *(void **)(a1 + OBJC_IVAR___CHSActivityService_connection);
  v7[0] = 0;
  v3 = objc_msgSend(v2, sel_subscribeToActivityPayloadUpdates_, v7);
  v4 = (void *)v7[0];
  *(_QWORD *)(a1 + OBJC_IVAR___CHSActivityService_queue_activityServiceAssertion) = v3;
  v5 = v4;
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall CHSActivityService.invalidate()()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = sub_18FBCD004();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18FBCD034();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)&v0[OBJC_IVAR___CHSActivityService_queue];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_18FB86724;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_6;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  sub_18FBCD010();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB87300((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
}

uint64_t sub_18FB866A0(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  *(_BYTE *)(a1 + OBJC_IVAR___CHSActivityService_queue_invalidated) = 1;
  BSDispatchQueueAssert();
  v2 = OBJC_IVAR___CHSActivityService_queue_activityServiceAssertion;
  v3 = *(void **)(a1 + OBJC_IVAR___CHSActivityService_queue_activityServiceAssertion);
  if (v3)
    objc_msgSend(v3, sel_invalidate);
  *(_QWORD *)(a1 + v2) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_18FB86700()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18FB86724()
{
  uint64_t v0;

  return sub_18FB866A0(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

id CHSActivityService.subscribe(toActivityID:withHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  _BYTE *v16;
  _QWORD *v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];
  objc_super v30;

  v9 = sub_18FBCD004();
  v27 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_18FBCD034();
  v12 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78]();
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (objc_class *)type metadata accessor for CHSActivitySubscription();
  v16 = objc_allocWithZone(v15);
  v17 = &v16[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_activityID];
  *v17 = a1;
  v17[1] = a2;
  v18 = &v16[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_payloadHandler];
  *v18 = a3;
  v18[1] = a4;
  v16[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_calloutQueue_invalidated] = 0;
  v30.receiver = v16;
  v30.super_class = v15;
  swift_bridgeObjectRetain();
  swift_retain();
  v19 = objc_msgSendSuper2(&v30, sel_init);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v4;
  *(_QWORD *)(v20 + 24) = v19;
  aBlock[4] = sub_18FB86A2C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_6_1;
  v21 = _Block_copy(aBlock);
  v22 = v4;
  v23 = v19;
  sub_18FBCD010();
  v28 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB87300((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v14, v11, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
  swift_release();
  return v23;
}

uint64_t type metadata accessor for CHSActivitySubscription()
{
  return objc_opt_self();
}

uint64_t sub_18FB86A00()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_18FB86A2C()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = *(_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v1 + OBJC_IVAR___CHSActivityService_queue_invalidated) & 1) == 0)
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR___CHSActivityService_queue_subscriptions), sel_addObject_, *(_QWORD *)(v0 + 24));
  return result;
}

uint64_t type metadata accessor for CHSActivityService(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE18B4A8);
}

uint64_t sub_18FB86B18()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD v6[2];

  sub_18FBCD3A0();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78]();
  sub_18FBCD034();
  MEMORY[0x1E0C80A78]();
  v1 = sub_18FBCD3B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FB1F254(0, (unint64_t *)&qword_1EE18A1A0);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D8], v1);
  sub_18FBCD010();
  v6[1] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&qword_1EE18A190, v0, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A170);
  sub_18FB87300((unint64_t *)&qword_1EE18A180, (uint64_t *)&unk_1EE18A170);
  sub_18FBCD484();
  result = sub_18FBCD3DC();
  qword_1EE192848 = result;
  return result;
}

id sub_18FB86DF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s16ConnectionClientCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s16ConnectionClientCMa()
{
  return objc_opt_self();
}

uint64_t sub_18FB86E58(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  BOOL v14;

  if (!(a1 >> 62))
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_18FBCD628();
  v8 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v8 >= 1)
  {
    v10 = 0;
    v11 = a1 & 0xC000000000000001;
    do
    {
      if (v11)
        v12 = (_BYTE *)MEMORY[0x1940086C4](v10, a1);
      else
        v12 = *(id *)(a1 + 8 * v10 + 32);
      v13 = v12;
      if (qword_1EE18AC68 != -1)
        swift_once();
      BSDispatchQueueAssert();
      if (v13[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_calloutQueue_invalidated] != 1)
      {
        v14 = *(_QWORD *)&v13[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_activityID] == a2
           && *(_QWORD *)&v13[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_activityID
                            + 8] == a3;
        if (v14 || (sub_18FBCD7C0() & 1) != 0)
        {
          (*(void (**)(uint64_t, uint64_t))&v13[OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_payloadHandler])(a4, a5);
          v11 = a1 & 0xC000000000000001;
        }
      }
      ++v10;

    }
    while (v8 != v10);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_18FB8700C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v12[2];
  _QWORD aBlock[6];

  v1 = sub_18FBCD004();
  v12[0] = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_18FBCD034();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE18AC68 != -1)
    swift_once();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v0;
  aBlock[4] = sub_18FB872E8;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_15;
  v9 = _Block_copy(aBlock);
  v10 = v0;
  sub_18FBCD010();
  v12[1] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB87300((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v7, v3, v9);
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v12[0] + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

id sub_18FB87274()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_18FB872E8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16)
           + OBJC_IVAR____TtC14ChronoServicesP33_94FD4DB1545722BE3BD737A60553872423CHSActivitySubscription_calloutQueue_invalidated) = 1;
}

uint64_t sub_18FB87300(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FB87340(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_18FB87350()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_18FB87374()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_18FBCD0B8();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

uint64_t sub_18FB873B4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FB873D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18FB85E5C(a1, a2, a3, a4, v4);
}

uint64_t sub_18FB873E0()
{
  uint64_t v0;

  return sub_18FB8631C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_18FB873E8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18FB8741C()
{
  uint64_t *v0;

  return sub_18FB8609C(v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_18FB87448()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18FB8747C()
{
  uint64_t v0;

  return sub_18FB86E58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_18FB874BC(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_18FBCD4D8();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_18FBCD400(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_18FB1F254(0, (unint64_t *)&unk_1EE187FB0);
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_18FBCD40C();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_18FBCD40C();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_18FB87618(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_18FBCD4D8();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_18FBCD400(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  type metadata accessor for CHSExtensionIdentity();
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_18FBCD40C();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_18FBCD40C();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

uint64_t sub_18FB87764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  if (*(_QWORD *)(a5 + 16))
  {
    sub_18FBCD850();
    sub_18FB7D954(a1, a2, a3, a4);
    sub_18FBCD130();
    swift_bridgeObjectRelease();
    v39 = a4;
    v10 = sub_18FBCD88C() & ~(-1 << *(_BYTE *)(a5 + 32));
    if (((*(_QWORD *)(a5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
    {
      v37 = -1 << *(_BYTE *)(a5 + 32);
      v11 = (uint64_t *)(*(_QWORD *)(a5 + 48) + 32 * v10);
      v13 = *v11;
      v12 = v11[1];
      v14 = a2;
      v15 = a3;
      v17 = v11[2];
      v16 = v11[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = sub_18FB7D954(v13, v12, v17, v16);
      v20 = v19;
      if (v18 == sub_18FB7D954(a1, v14, v15, v39) && v20 == v21)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v23 = sub_18FBCD7C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
LABEL_18:
        v35 = 1;
        return v35 & 1;
      }
      v38 = ~v37;
      v24 = (v10 + 1) & v38;
      if (((*(_QWORD *)(a5 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
      {
        while (1)
        {
          v25 = (uint64_t *)(*(_QWORD *)(a5 + 48) + 32 * v24);
          v27 = *v25;
          v26 = v25[1];
          v29 = v25[2];
          v28 = v25[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v30 = sub_18FB7D954(v27, v26, v29, v28);
          v32 = v31;
          if (v30 == sub_18FB7D954(a1, v14, v15, v39) && v32 == v33)
            break;
          v35 = sub_18FBCD7C0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v35 & 1) == 0)
          {
            v24 = (v24 + 1) & v38;
            if (((*(_QWORD *)(a5 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) != 0)
              continue;
          }
          return v35 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v35 = 0;
  return v35 & 1;
}

id CHSWidgetRelevanceService.init(options:)(uint64_t a1)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithOptions_, a1);
}

{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v13;

  v2 = v1;
  v4 = sub_18FBCCE24();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v9 = CHSWidgetRelevanceServiceCacheDirectory();
  sub_18FBCCDE8();

  v10 = (void *)sub_18FBCCD94();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = objc_msgSend(v2, sel_initWithConnection_cacheURL_options_, v8, v10, a1);

  return v11;
}

char *sub_18FB87C2C(void *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (**v34)(uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (**v39)(void *);
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  _QWORD aBlock[6];
  objc_super v84;

  v74 = a3;
  v81 = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE188120);
  MEMORY[0x1E0C80A78]();
  v69 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189368);
  v71 = *(_QWORD *)(v6 - 8);
  v72 = v6;
  MEMORY[0x1E0C80A78]();
  v70 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_18FBCD004();
  v79 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  MEMORY[0x1E0C80A78]();
  v78 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FBCD3A0();
  MEMORY[0x1E0C80A78]();
  v73 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_18FBCD034();
  v76 = *(_QWORD *)(v11 - 8);
  v77 = v11;
  MEMORY[0x1E0C80A78]();
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_18FBCD3B8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78]();
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR___CHSWidgetRelevanceService_finishLaunchingToken] = 0;
  v3[OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion] = 0;
  v18 = OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevances;
  v19 = v3;
  v20 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[v18] = sub_18FB73C48(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v19[OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___CHSWidgetRelevanceService_queue_cachedWidgetRelevanceProperties] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___CHSWidgetRelevanceService_connection] = a1;
  v21 = objc_allocWithZone((Class)_s16ConnectionClientCMa_0());
  v75 = a1;
  v22 = objc_msgSend(v21, sel_init);
  *(_QWORD *)&v19[OBJC_IVAR___CHSWidgetRelevanceService_connectionClient] = v22;
  *(_QWORD *)&v19[OBJC_IVAR___CHSWidgetRelevanceService_options] = v74;
  v23 = sub_18FBCCDF4();
  v24 = (uint64_t *)&v19[OBJC_IVAR___CHSWidgetRelevanceService_cachePath];
  *v24 = v23;
  v24[1] = v25;
  v26 = sub_18FB1F254(0, (unint64_t *)&qword_1EE18A1A0);
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF8D8], v14);
  sub_18FBCD010();
  aBlock[0] = v20;
  sub_18FB203A8((unint64_t *)&qword_1EE18A190, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A170);
  sub_18FB1E9FC((unint64_t *)&qword_1EE18A180, (uint64_t *)&unk_1EE18A170, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  v27 = v13;
  v74 = v26;
  *(_QWORD *)&v19[OBJC_IVAR___CHSWidgetRelevanceService_queue] = sub_18FBCD3DC();
  *(_QWORD *)&v19[OBJC_IVAR___CHSWidgetRelevanceService_queue_observers] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  if (qword_1EE189C68 != -1)
    swift_once();
  v28 = qword_1EE192808;
  v29 = (uint64_t *)&v19[OBJC_IVAR___CHSWidgetRelevanceService_keybagStateProvider];
  v29[3] = type metadata accessor for DefaultKeybagStateProvider();
  v29[4] = (uint64_t)&off_1E2A58620;
  *v29 = v28;
  swift_retain();

  v84.receiver = v19;
  v84.super_class = (Class)CHSWidgetRelevanceService;
  v30 = (char *)objc_msgSendSuper2(&v84, sel_init);
  v31 = OBJC_IVAR___CHSWidgetRelevanceService_connectionClient;
  v32 = *(_QWORD *)&v30[OBJC_IVAR___CHSWidgetRelevanceService_connectionClient];
  v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v34 = (uint64_t (**)(uint64_t))(v32
                                         + OBJC_IVAR____TtCE14ChronoServicesCSo25CHSWidgetRelevanceService16ConnectionClient_timelineRelevanceDidChangeHandler);
  v35 = *(_QWORD *)(v32
                  + OBJC_IVAR____TtCE14ChronoServicesCSo25CHSWidgetRelevanceService16ConnectionClient_timelineRelevanceDidChangeHandler);
  *v34 = sub_18FB8B5F0;
  v34[1] = (uint64_t (*)(uint64_t))v33;
  v36 = v30;
  sub_18FB7C270(v35);
  v37 = *(_QWORD *)&v30[v31];
  v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v39 = (uint64_t (**)(void *))(v37
                                        + OBJC_IVAR____TtCE14ChronoServicesCSo25CHSWidgetRelevanceService16ConnectionClient_widgetRelevanceEventHandler);
  v40 = *(_QWORD *)(v37
                  + OBJC_IVAR____TtCE14ChronoServicesCSo25CHSWidgetRelevanceService16ConnectionClient_widgetRelevanceEventHandler);
  *v39 = sub_18FB8B5F8;
  v39[1] = (uint64_t (*)(void *))v38;
  sub_18FB7C270(v40);
  v41 = v75;
  objc_msgSend(v75, sel_addClient_, *(_QWORD *)&v30[v31]);
  v68 = OBJC_IVAR___CHSWidgetRelevanceService_queue;
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v36;
  aBlock[4] = sub_18FB8B600;
  aBlock[5] = v42;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_67;
  v43 = _Block_copy(aBlock);
  v73 = v36;
  v44 = v36;
  sub_18FBCD010();
  v82 = (id)MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  v45 = v78;
  v46 = v80;
  sub_18FBCD484();
  MEMORY[0x194008544](0, v27, v45, v43);
  _Block_release(v43);
  v47 = v45;
  v48 = v44;
  (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v46);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v27, v77);
  swift_release();
  v49 = &v44[OBJC_IVAR___CHSWidgetRelevanceService_keybagStateProvider];
  v50 = *((_QWORD *)v49 + 3);
  v51 = *((_QWORD *)v49 + 4);
  __swift_project_boxed_opaque_existential_1(v49, v50);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v51 + 32))(v50, v51) & 1) != 0)
  {

    v52 = sub_18FBCCE24();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v81, v52);
  }
  else
  {
    if (qword_1EE1880E0 != -1)
      swift_once();
    v53 = sub_18FBCCF5C();
    __swift_project_value_buffer(v53, (uint64_t)qword_1EE192778);
    v54 = sub_18FBCCF44();
    v55 = sub_18FBCD394();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_18FB18000, v54, v55, "CHSWidgetRelevanceService started before first unlock registering for notifications", v56, 2u);
      MEMORY[0x19400960C](v56, -1, -1);
    }

    v57 = *((_QWORD *)v49 + 3);
    v58 = *((_QWORD *)v49 + 4);
    __swift_project_boxed_opaque_existential_1(v49, v57);
    aBlock[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
    v82 = *(id *)&v73[v68];
    v59 = v82;
    v60 = sub_18FBCD3AC();
    v61 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v69, 1, 1, v60);
    v62 = v59;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B690);
    sub_18FB1E9FC(&qword_1EE18B698, &qword_1EE18B690, MEMORY[0x1E0C95D90]);
    sub_18FB8B558(&qword_1EE18B6A0, (unint64_t *)&qword_1EE18A1A0, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v63 = v70;
    sub_18FBCCFEC();
    sub_18FB8B620(v61);

    swift_release();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_18FB1E9FC((unint64_t *)&unk_1EE18B6A8, &qword_1EE189368, MEMORY[0x1E0C95CB8]);
    v64 = v72;
    v65 = sub_18FBCCFF8();

    swift_release();
    v66 = sub_18FBCCE24();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v81, v66);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v64);
    *(_QWORD *)&v48[OBJC_IVAR___CHSWidgetRelevanceService_finishLaunchingToken] = v65;
    swift_release();
  }
  return v48;
}

uint64_t sub_18FB88530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17[3];
  _QWORD aBlock[6];

  v4 = sub_18FBCD004();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_18FBCD034();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1940096B4](a2 + 16);
  if (result)
  {
    v13 = (void *)result;
    v17[1] = *(id *)(result + OBJC_IVAR___CHSWidgetRelevanceService_queue);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = a1;
    aBlock[4] = sub_18FB8C790;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FB858D4;
    aBlock[3] = &block_descriptor_92;
    v15 = v5;
    v16 = _Block_copy(aBlock);
    v17[0] = v13;
    swift_bridgeObjectRetain();
    sub_18FBCD010();
    v17[2] = (id)MEMORY[0x1E0DEE9D8];
    sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
    sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
    sub_18FBCD484();
    MEMORY[0x194008544](0, v11, v7, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    return swift_release();
  }
  return result;
}

uint64_t sub_18FB88764(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevances) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_18FB8A908((uint64_t)&unk_1E2A5C960, (uint64_t)sub_18FB8C6DC, (uint64_t)&block_descriptor_80);
}

uint64_t sub_18FB887BC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18[3];
  _QWORD aBlock[6];

  v4 = sub_18FBCD004();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_18FBCD034();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1940096B4](a2 + 16);
  if (result)
  {
    v13 = (void *)result;
    v18[1] = *(id *)(result + OBJC_IVAR___CHSWidgetRelevanceService_queue);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = a1;
    aBlock[4] = sub_18FB8C728;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FB858D4;
    aBlock[3] = &block_descriptor_86;
    v15 = v5;
    v16 = _Block_copy(aBlock);
    v18[0] = v13;
    v17 = a1;
    sub_18FBCD010();
    v18[2] = (id)MEMORY[0x1E0DEE9D8];
    sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
    sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
    sub_18FBCD484();
    MEMORY[0x194008544](0, v11, v7, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

    return swift_release();
  }
  return result;
}

uint64_t sub_18FB889EC(void *a1)
{
  uint64_t v1;
  id v3;
  _QWORD *v4;
  unint64_t *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = objc_msgSend(a1, sel_eventType);
  if ((unint64_t)v3 < 2)
  {
    v4 = (_QWORD *)(v1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_cachedWidgetRelevanceProperties);
    swift_beginAccess();
    *v4 = 0;
    swift_bridgeObjectRelease();
    sub_18FB8AC64();
    return sub_18FB8A908((uint64_t)&unk_1E2A5C910, (uint64_t)sub_18FB8C68C, (uint64_t)&block_descriptor_74);
  }
  if (v3 == (id)2)
  {
    v5 = (unint64_t *)(v1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_cachedWidgetRelevanceProperties);
    swift_beginAccess();
    if (!*v5)
    {
LABEL_8:
      swift_endAccess();
      return sub_18FB8A908((uint64_t)&unk_1E2A5C910, (uint64_t)sub_18FB8C68C, (uint64_t)&block_descriptor_74);
    }
    v6 = a1;
    v7 = sub_18FB8BFB4(v5, v6);

    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_18FBCD628();
      swift_bridgeObjectRelease();
      v8 = v10;
      if (v10 >= v7)
        goto LABEL_7;
    }
    else
    {
      v8 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= v7)
      {
LABEL_7:
        sub_18FB8C36C(v7, v8);
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  type metadata accessor for CHSWidgetRelevanceServiceEventType(0);
  result = sub_18FBCD7F0();
  __break(1u);
  return result;
}

void sub_18FB88B68()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssert();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_options);
  if ((v1 & 1) != 0)
  {
    v2 = *(void **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_connection);
    v14[0] = 0;
    v3 = objc_msgSend(v2, sel_subscribeToWidgetRelevanceEvents_, v14);
    v4 = (void *)v14[0];
    *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion) = v3;
    v5 = v4;
    swift_unknownObjectRelease();
    sub_18FB8A908((uint64_t)&unk_1E2A5C910, (uint64_t)sub_18FB8C68C, (uint64_t)&block_descriptor_74);
  }
  if ((v1 & 2) != 0)
  {
    v6 = *(void **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_connection);
    v13 = 0;
    v14[0] = 0;
    v7 = objc_msgSend(v6, sel_subscribeToTimelineEntryRelevance_outTimelineEntryRelevance_, v14, &v13);
    v9 = v13;
    v8 = (void *)v14[0];
    *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion) = v7;
    v10 = v8;
    v11 = v9;
    swift_unknownObjectRelease();
    if (v11)
    {
      v14[0] = 0;
      sub_18FB1F254(0, &qword_1EE18B400);
      v12 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B678);
      sub_18FB8B558((unint64_t *)&unk_1EE18B680, &qword_1EE18B400, (uint64_t)off_1E2A568E8, MEMORY[0x1E0DEFCF8]);
      sub_18FBCD04C();

      if (v14[0])
      {
        *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevances) = v14[0];
        swift_bridgeObjectRelease();
        sub_18FB8A908((uint64_t)&unk_1E2A5C960, (uint64_t)sub_18FB8C6DC, (uint64_t)&block_descriptor_80);
      }

    }
  }
}

void sub_18FB88D54(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1940096B4](v3);
  if (v4)
  {
    v5 = (void *)v4;
    if (v2)
    {
      if (qword_1EE1880E0 != -1)
        swift_once();
      v6 = sub_18FBCCF5C();
      __swift_project_value_buffer(v6, (uint64_t)qword_1EE192778);
      v7 = sub_18FBCCF44();
      v8 = sub_18FBCD394();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_18FB18000, v7, v8, "First unlock event received so do a reload. Observers will be notified afterward", v9, 2u);
        MEMORY[0x19400960C](v9, -1, -1);
      }

      v10 = objc_msgSend((id)objc_opt_self(), sel_reloadEvent);
      sub_18FB889EC(v10);

      v5 = v10;
    }

  }
}

id sub_18FB88F20()
{
  char *v0;
  void *v1;
  void *v2;
  objc_super v4;

  v1 = *(void **)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion];
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  v2 = *(void **)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion];
  if (v2)
    objc_msgSend(v2, sel_invalidate);
  v4.receiver = v0;
  v4.super_class = (Class)CHSWidgetRelevanceService;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_18FB89090()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD v6[2];

  sub_18FBCD3A0();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78]();
  sub_18FBCD034();
  MEMORY[0x1E0C80A78]();
  v1 = sub_18FBCD3B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FB1F254(0, (unint64_t *)&qword_1EE18A1A0);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D8], v1);
  sub_18FBCD010();
  v6[1] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&qword_1EE18A190, v0, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A170);
  sub_18FB1E9FC((unint64_t *)&qword_1EE18A180, (uint64_t *)&unk_1EE18A170, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  result = sub_18FBCD3DC();
  qword_1EE192790 = result;
  return result;
}

Swift::Void __swiftcall CHSWidgetRelevanceService.invalidate()()
{
  char *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = sub_18FBCD004();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18FBCD034();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_18FB8946C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_7;
  v11 = _Block_copy(aBlock);
  v12 = v0;
  sub_18FBCD010();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, v2, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v9, v5, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release();
}

uint64_t sub_18FB89448()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18FB8946C()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated) = 1;
  return sub_18FB894B4();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_18FB894B4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;

  BSDispatchQueueAssert();
  v1 = OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion;
  v2 = *(void **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevanceAssertion);
  if (v2)
    objc_msgSend(v2, sel_invalidate);
  *(_QWORD *)(v0 + v1) = 0;
  swift_unknownObjectRelease();
  v3 = OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion;
  v4 = *(void **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceAssertion);
  if (v4)
    objc_msgSend(v4, sel_invalidate);
  *(_QWORD *)(v0 + v3) = 0;
  return swift_unknownObjectRelease();
}

uint64_t CHSWidgetRelevanceService.timelineEntryRelevances.getter()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  unint64_t v8;
  _QWORD aBlock[6];
  unint64_t v10;

  v10 = sub_18FB73C48(MEMORY[0x1E0DEE9D8]);
  v1 = *(NSObject **)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v10;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_18FB89754;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_18FB73428;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB6E4C8;
  aBlock[3] = &block_descriptor_9;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_18FB89754()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                     + OBJC_IVAR___CHSWidgetRelevanceService_queue_timelineEntryRelevances);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FB8978C()
{
  return swift_deallocObject();
}

uint64_t CHSWidgetRelevanceService.widgetRelevanceProperties.getter()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t v8;
  _QWORD aBlock[6];
  uint64_t v10;

  v10 = MEMORY[0x1E0DEE9D8];
  v1 = *(NSObject **)&v0[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v10;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_18FB89A04;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_18FB79338;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB6E4C8;
  aBlock[3] = &block_descriptor_19;
  v4 = _Block_copy(aBlock);
  v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = v10;
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_18FB8993C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;

  BSDispatchQueueAssert();
  v4 = (uint64_t *)(a2 + OBJC_IVAR___CHSWidgetRelevanceService_queue_cachedWidgetRelevanceProperties);
  swift_beginAccess();
  if (*v4)
  {
    v5 = *v4;
  }
  else
  {
    v5 = sub_18FB8B668();
    *v4 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FB899E0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18FB89A04()
{
  uint64_t v0;

  return sub_18FB8993C(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_18FB89A0C()
{
  return swift_deallocObject();
}

uint64_t CHSWidgetRelevanceService.registerObserver(_:)(uint64_t a1)
{
  return sub_18FB89A78(a1, (uint64_t)&unk_1E2A5C7A8, (uint64_t)sub_18FB89A44, (uint64_t)&block_descriptor_25);
}

uint64_t sub_18FB89A38()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

SEL *sub_18FB89A44()
{
  return sub_18FB89C84((SEL *)&selRef_addObject_);
}

uint64_t CHSWidgetRelevanceService.unregisterObserver(_:)(uint64_t a1)
{
  return sub_18FB89A78(a1, (uint64_t)&unk_1E2A5C7D0, (uint64_t)sub_18FB89C78, (uint64_t)&block_descriptor_31);
}

uint64_t sub_18FB89A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v8 = sub_18FBCD004();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_18FBCD034();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78]();
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)&v4[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v4;
  *(_QWORD *)(v15 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = a4;
  v16 = _Block_copy(aBlock);
  v17 = v4;
  swift_unknownObjectRetain();
  sub_18FBCD010();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_18FB89C6C()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

SEL *sub_18FB89C78()
{
  return sub_18FB89C84((SEL *)&selRef_removeObject_);
}

SEL *sub_18FB89C84(SEL *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  if ((*(_BYTE *)(v2 + OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated) & 1) == 0)
    return (SEL *)objc_msgSend(*(id *)(v2 + OBJC_IVAR___CHSWidgetRelevanceService_queue_observers), *result, *(_QWORD *)(v1 + 24));
  return result;
}

void sub_18FB89CC4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain();
  v7 = a1;
  a4(a3);
  swift_unknownObjectRelease();

}

uint64_t CHSWidgetRelevanceService.reloadWidgetRelevance(for:kind:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  void *v18;
  char *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v11 = sub_18FBCD004();
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78]();
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_18FBCD034();
  v14 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78]();
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)&v5[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v5;
  v17[3] = a4;
  v17[4] = a5;
  v17[5] = a1;
  v17[6] = a2;
  v17[7] = a3;
  aBlock[4] = sub_18FB8A170;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_37;
  v18 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v19 = v5;
  swift_retain();
  v20 = a1;
  sub_18FBCD010();
  v25 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v16, v13, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
  return swift_release();
}

void sub_18FB89F44(uint64_t a1, void (*a2)(id), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t inited;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v16;
  void *v17;
  _QWORD aBlock[6];

  if ((*(_BYTE *)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated) & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FBD6060;
    *(_QWORD *)(inited + 32) = sub_18FBCD0DC();
    *(_QWORD *)(inited + 40) = v9;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 0xD00000000000002ELL;
    *(_QWORD *)(inited + 56) = 0x800000018FBE8570;
    sub_18FB73E60(inited);
    v10 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v11 = (void *)sub_18FBCD0B8();
    v12 = (void *)sub_18FBCD040();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v10, sel_initWithDomain_code_userInfo_, v11, 1, v12);

    v14 = v13;
    a2(v13);

  }
  else
  {
    v16 = *(void **)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_connection);
    if (a6)
      v14 = (id)sub_18FBCD0B8();
    else
      v14 = 0;
    aBlock[4] = a2;
    aBlock[5] = a3;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FBC4E30;
    aBlock[3] = &block_descriptor_101;
    v17 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_reloadWidgetRelevanceForExtensionIdentity_kind_completion_, a4, v14, v17);
    _Block_release(v17);
  }

}

uint64_t sub_18FB8A134()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_18FB8A170()
{
  uint64_t v0;

  sub_18FB89F44(*(_QWORD *)(v0 + 16), *(void (**)(id))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t CHSWidgetRelevanceService.acquireWidgetLifetimeAssertion(for:metrics:completion:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  char *v18;
  id v19;
  id v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v9 = sub_18FBCD004();
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_18FBCD034();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78]();
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(_QWORD *)&v4[OBJC_IVAR___CHSWidgetRelevanceService_queue];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a3;
  v16[4] = a4;
  v16[5] = a1;
  v16[6] = a2;
  aBlock[4] = sub_18FB8A690;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_43;
  v17 = _Block_copy(aBlock);
  v18 = v4;
  swift_retain();
  v19 = a1;
  v20 = a2;
  sub_18FBCD010();
  v24 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void sub_18FB8A450(uint64_t a1, void (*a2)(_QWORD, id), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t inited;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v16;
  uint64_t v17;
  void *v18;
  _QWORD aBlock[6];

  if ((*(_BYTE *)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_queue_invalidated) & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6C8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FBD6060;
    *(_QWORD *)(inited + 32) = sub_18FBCD0DC();
    *(_QWORD *)(inited + 40) = v8;
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = 0xD000000000000042;
    *(_QWORD *)(inited + 56) = 0x800000018FBE8500;
    sub_18FB73E60(inited);
    v9 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    v10 = (void *)sub_18FBCD0B8();
    v11 = (void *)sub_18FBCD040();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v9, sel_initWithDomain_code_userInfo_, v10, 1, v11);

    v13 = v12;
    a2(0, v12);

  }
  else
  {
    v16 = *(void **)(a1 + OBJC_IVAR___CHSWidgetRelevanceService_connection);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a2;
    *(_QWORD *)(v17 + 24) = a3;
    aBlock[4] = sub_18FB8C7BC;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FB8A6FC;
    aBlock[3] = &block_descriptor_98;
    v18 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v16, sel_acquireLifetimeAssertionForWidget_metrics_completion_, a4, a5, v18);
    _Block_release(v18);
  }
}

uint64_t sub_18FB8A654()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

void sub_18FB8A690()
{
  uint64_t v0;

  sub_18FB8A450(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD, id))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_18FB8A6A0(int a1, id a2, void (*a3)(void))
{
  id v5;

  if (a2)
  {
    v5 = a2;
    ((void (*)(_QWORD, id))a3)(0, a2);

  }
  else
  {
    a3();
  }
}

void sub_18FB8A6FC(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_18FB8A80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_18FBCCD64();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void __swiftcall CHSWidgetRelevanceService.init()(CHSWidgetRelevanceService *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void CHSWidgetRelevanceService.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CHSWidgetRelevanceService.register(_:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_registerObserver_, a1);
}

uint64_t type metadata accessor for CHSWidgetRelevanceService(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE18B660);
}

uint64_t sub_18FB8A908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v6 = sub_18FBCD004();
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_18FBCD034();
  v9 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  v12 = objc_msgSend(*(id *)&v3[OBJC_IVAR___CHSWidgetRelevanceService_queue_observers], sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE188100);
  v13 = sub_18FBCD28C();

  if (qword_1EE1880F0 != -1)
    swift_once();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v3;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = a3;
  v15 = _Block_copy(aBlock);
  v16 = v3;
  sub_18FBCD010();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v11, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  return swift_release();
}

uint64_t sub_18FB8AB64(unint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  void *v9;

  if (!(a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_18FBCD628();
  v6 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v9 = (void *)MEMORY[0x1940086C4](i, a1);
      }
      else
      {
        v9 = *(void **)(a1 + 8 * i + 32);
        swift_unknownObjectRetain();
      }
      if ((objc_msgSend(v9, sel_respondsToSelector_, *a3) & 1) != 0)
        objc_msgSend(v9, *a3, a2);
      swift_unknownObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_18FB8AC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;

  v1 = OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache;
  if (*(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache))
  {
    swift_retain();
    sub_18FBA9120();
    if (qword_1EE1880E0 != -1)
      swift_once();
    v2 = sub_18FBCCF5C();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EE192778);
    v3 = sub_18FBCCF44();
    v4 = sub_18FBCD394();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_18FB18000, v3, v4, "Reloaded RelevanceCache", v5, 2u);
      MEMORY[0x19400960C](v5, -1, -1);
    }

    swift_release();
  }
  else
  {
    v6 = v0;
    v8 = *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_cachePath);
    v7 = *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_cachePath + 8);
    type metadata accessor for RelevanceCache();
    v9 = (_QWORD *)swift_allocObject();
    swift_bridgeObjectRetain();
    v10 = MEMORY[0x1E0DEE9D8];
    v9[2] = sub_18FB73D50(MEMORY[0x1E0DEE9D8]);
    v9[3] = v10;
    v9[4] = 0;
    v9[5] = v8;
    v9[6] = v7;
    sub_18FBA9120();
    *(_QWORD *)(v6 + v1) = v9;
    swift_release();
    if (qword_1EE1880E0 != -1)
      swift_once();
    v11 = sub_18FBCCF5C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EE192778);
    oslog = sub_18FBCCF44();
    v12 = sub_18FBCD394();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_18FB18000, oslog, v12, "Loaded RelevanceCache", v13, 2u);
      MEMORY[0x19400960C](v13, -1, -1);
    }

  }
}

uint64_t sub_18FB8B160()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  NSObject *v4;
  void *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  void *v10;
  uint64_t (*v11)();
  uint64_t v12;

  v1 = *(NSObject **)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue);
  v11 = nullsub_1;
  v12 = 0;
  v2 = MEMORY[0x1E0C809B0];
  v7 = MEMORY[0x1E0C809B0];
  v8 = 1107296256;
  v9 = sub_18FB6E4C8;
  v10 = &block_descriptor_48;
  v3 = _Block_copy(&v7);
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
  }
  else if (qword_1EE1880F0 == -1)
  {
    goto LABEL_3;
  }
  swift_once();
LABEL_3:
  v4 = qword_1EE192790;
  v11 = nullsub_1;
  v12 = 0;
  v7 = v2;
  v8 = 1107296256;
  v9 = sub_18FB6E4C8;
  v10 = &block_descriptor_51_0;
  v5 = _Block_copy(&v7);
  swift_release();
  dispatch_sync(v4, v5);
  _Block_release(v5);
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    __break(1u);
  return result;
}

id sub_18FB8B4C8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s16ConnectionClientCMa_0();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s16ConnectionClientCMa_0()
{
  return objc_opt_self();
}

uint64_t sub_18FB8B558(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_18FB1F254(255, a2);
    result = MEMORY[0x19400954C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FB8B598()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_18FB8B5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_18FB8A80C(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_18FB8B5C4(uint64_t a1)
{
  uint64_t v1;

  sub_18FBC7750(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_18FB8B5CC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18FB8B5F0(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB88530(a1, v1);
}

uint64_t sub_18FB8B5F8(void *a1)
{
  uint64_t v1;

  return sub_18FB887BC(a1, v1);
}

void sub_18FB8B600()
{
  sub_18FB88B68();
}

uint64_t sub_18FB8B620(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EE188120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_18FB8B660(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_18FB88D54(a1, v1);
}

uint64_t sub_18FB8B668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  BSDispatchQueueAssert();
  v1 = OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___CHSWidgetRelevanceService_queue_widgetRelevanceCache);
  if (v2 || (sub_18FB8AC64(), (v2 = *(_QWORD *)(v0 + v1)) != 0))
  {
    swift_beginAccess();
    swift_retain();
    v3 = swift_bridgeObjectRetain();
    v4 = sub_18FBA822C(v3);
    swift_bridgeObjectRelease();
    v5 = sub_18FB820B4((unint64_t)v4);
    swift_bridgeObjectRelease();
    swift_retain();
    sub_18FB8B93C(v5, v2);
    v7 = v6;
    swift_bridgeObjectRelease();
    swift_release();
    if (qword_1EE1880E0 != -1)
      swift_once();
    v8 = sub_18FBCCF5C();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EE192778);
    v9 = sub_18FBCCF44();
    v10 = sub_18FBCD394();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_18FB18000, v9, v10, "Loaded relevance properties", v11, 2u);
      MEMORY[0x19400960C](v11, -1, -1);
    }

    swift_release();
  }
  else
  {
    if (qword_1EE1880E0 != -1)
      swift_once();
    v13 = sub_18FBCCF5C();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EE192778);
    v14 = sub_18FBCCF44();
    v15 = sub_18FBCD37C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_18FB18000, v14, v15, "Read from WidgetRelevanceCache while its unavailable, giving no results", v16, 2u);
      MEMORY[0x19400960C](v16, -1, -1);
    }

    return MEMORY[0x1E0DEE9D8];
  }
  return v7;
}

char *sub_18FB8B8AC(uint64_t a1)
{
  return sub_18FB7E8A0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_18FB8B8C0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD628();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1940086D0);
}

_QWORD *sub_18FB8B928(_QWORD *a1)
{
  return sub_18FB7EE04(0, a1[2], 0, a1);
}

void sub_18FB8B93C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v3 = a1;
  v33 = MEMORY[0x1E0DEE9D8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD4A8();
    sub_18FB1F254(0, (unint64_t *)&unk_1EE187FB0);
    sub_18FB8B558((unint64_t *)&unk_1EE187FC0, (unint64_t *)&unk_1EE187FB0, (uint64_t)off_1E2A56938, MEMORY[0x1E0DEFCF8]);
    sub_18FBCD340();
    v3 = v28;
    v26 = v29;
    v4 = v30;
    v5 = v31;
    v6 = v32;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v26 = a1 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v10 = (unint64_t)(v4 + 64) >> 6;
  v11 = (uint64_t *)(a2 + 16);
  while (v3 < 0)
  {
    if (!sub_18FBCD4CC())
      goto LABEL_41;
    sub_18FB1F254(0, (unint64_t *)&unk_1EE187FB0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v15 = v27;
    swift_unknownObjectRelease();
    v14 = v5;
    v12 = v6;
    if (!v27)
      goto LABEL_41;
LABEL_33:
    swift_beginAccess();
    v19 = *v11;
    if (*(_QWORD *)(*v11 + 16))
    {
      v20 = v15;
      swift_bridgeObjectRetain();
      v21 = sub_18FB7F8C4((uint64_t)v20);
      if ((v22 & 1) != 0)
      {
        v23 = *(_QWORD *)(v19 + 56) + 16 * v21;
        v24 = *(_BYTE *)(v23 + 8);
        v25 = *(id *)v23;

        swift_bridgeObjectRelease();
        if ((v24 & 1) != 0)
        {

        }
        else
        {
          MEMORY[0x1940083E8]();
          if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_18FBCD2B0();
          sub_18FBCD2C8();
          sub_18FBCD2A4();
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
    }
    else
    {

    }
    v5 = v14;
    v6 = v12;
  }
  if (v6)
  {
    v12 = (v6 - 1) & v6;
    v13 = __clz(__rbit64(v6)) | (v5 << 6);
    v14 = v5;
LABEL_32:
    v15 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
    if (!v15)
      goto LABEL_41;
    goto LABEL_33;
  }
  v16 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v16 >= v10)
      goto LABEL_41;
    v17 = *(_QWORD *)(v26 + 8 * v16);
    v14 = v5 + 1;
    if (!v17)
    {
      v14 = v5 + 2;
      if (v5 + 2 >= v10)
        goto LABEL_41;
      v17 = *(_QWORD *)(v26 + 8 * v14);
      if (!v17)
      {
        v14 = v5 + 3;
        if (v5 + 3 >= v10)
          goto LABEL_41;
        v17 = *(_QWORD *)(v26 + 8 * v14);
        if (!v17)
        {
          v14 = v5 + 4;
          if (v5 + 4 >= v10)
            goto LABEL_41;
          v17 = *(_QWORD *)(v26 + 8 * v14);
          if (!v17)
          {
            v14 = v5 + 5;
            if (v5 + 5 >= v10)
              goto LABEL_41;
            v17 = *(_QWORD *)(v26 + 8 * v14);
            if (!v17)
            {
              v18 = v5 + 6;
              while (v10 != v18)
              {
                v17 = *(_QWORD *)(v26 + 8 * v18++);
                if (v17)
                {
                  v14 = v18 - 1;
                  goto LABEL_31;
                }
              }
LABEL_41:
              sub_18FB8C7C4();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v12 = (v17 - 1) & v17;
    v13 = __clz(__rbit64(v17)) + (v14 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_18FB8BCE4(unint64_t a1, void *a2)
{
  id v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  char v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  unint64_t v29;

  v4 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
    return 0;
  }
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v5)
    return 0;
LABEL_3:
  v6 = 0;
  v29 = v4 & 0xC000000000000001;
  v27 = v4 + 32;
  v25 = v4;
  v26 = a2;
  v24 = v5;
  while (1)
  {
    if (v29)
      v7 = (id)MEMORY[0x1940086C4](v6, v4);
    else
      v7 = *(id *)(v27 + 8 * v6);
    v8 = v7;
    v9 = objc_msgSend(a2, sel_extensionIdentities, v24, v25, v26);
    if (!v9)
    {

      v14 = __OFADD__(v6++, 1);
      if (v14)
        goto LABEL_27;
      goto LABEL_23;
    }
    v10 = v9;
    type metadata accessor for CHSExtensionIdentity();
    sub_18FB203A8((unint64_t *)&unk_1EE18B6B8, (uint64_t (*)(uint64_t))type metadata accessor for CHSExtensionIdentity, MEMORY[0x1E0DEFCF8]);
    v11 = sub_18FBCD31C();

    v12 = objc_msgSend(v8, sel_extensionIdentity);
    v2 = v12;
    if ((v11 & 0xC000000000000001) != 0)
    {
      v2 = v12;
      v13 = sub_18FBCD4D8();

      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        return v6;
      goto LABEL_22;
    }
    v28 = v8;
    if (!*(_QWORD *)(v11 + 16))
      break;
    v15 = sub_18FBCD400();
    v16 = -1 << *(_BYTE *)(v11 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(v11 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
    {
      v18 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v17);
      v19 = sub_18FBCD40C();

      if ((v19 & 1) != 0)
        goto LABEL_28;
      v20 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v20;
        if (((*(_QWORD *)(v11 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v21 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v17);
        v22 = sub_18FBCD40C();

        if ((v22 & 1) != 0)
          goto LABEL_28;
      }
    }

    swift_bridgeObjectRelease();
    v4 = v25;
    a2 = v26;
    v5 = v24;
LABEL_22:
    v14 = __OFADD__(v6++, 1);
    if (v14)
      goto LABEL_27;
LABEL_23:
    if (v6 == v5)
      return 0;
  }

  swift_bridgeObjectRelease();
  v14 = __OFADD__(v6++, 1);
  if (!v14)
    goto LABEL_23;
LABEL_27:
  __break(1u);
LABEL_28:

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_18FB8BFB4(unint64_t *a1, void *a2)
{
  uint64_t v2;
  unint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  unint64_t i;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  char v18;
  unint64_t v19;
  id v20;
  id v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  void *v27;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v5 = swift_bridgeObjectRetain();
  v6 = sub_18FB8BCE4(v5, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if (v2)
    return v6;
  if ((v8 & 1) == 0)
  {
    i = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_57;
    if (*a1 >> 62)
    {
LABEL_58:
      swift_bridgeObjectRetain();
      v33 = sub_18FBCD628();
      swift_bridgeObjectRelease();
      if (i != v33)
        goto LABEL_6;
    }
    else if (i != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (i = v6 + 5; ; ++i)
      {
        v10 = i - 4;
        v11 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v12 = (id)MEMORY[0x1940086C4](i - 4);
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v10 >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_48;
          v12 = *(id *)(v11 + 8 * i);
        }
        v13 = v12;
        v14 = objc_msgSend(a2, sel_extensionIdentities);
        if (!v14)
          break;
        v15 = v14;
        type metadata accessor for CHSExtensionIdentity();
        sub_18FB203A8((unint64_t *)&unk_1EE18B6B8, (uint64_t (*)(uint64_t))type metadata accessor for CHSExtensionIdentity, MEMORY[0x1E0DEFCF8]);
        v16 = sub_18FBCD31C();

        v17 = objc_msgSend(v13, sel_extensionIdentity);
        v18 = sub_18FB87618(v17, v16);

        swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_35;
        if (v10 != v6)
          goto LABEL_16;
LABEL_34:
        if (__OFADD__(v6++, 1))
          goto LABEL_50;
LABEL_35:
        v29 = i - 3;
        if (__OFADD__(v10, 1))
          goto LABEL_49;
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v30 = sub_18FBCD628();
          swift_bridgeObjectRelease();
        }
        else
        {
          v30 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        if (v29 == v30)
          return v6;
      }

      if (v10 == v6)
        goto LABEL_34;
LABEL_16:
      v19 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v20 = (id)MEMORY[0x1940086C4](v6, *a1);
        v19 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_20:
          if ((v10 & 0x8000000000000000) != 0)
            goto LABEL_53;
          if (v10 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_54;
          v21 = *(id *)(v19 + 8 * i);
          goto LABEL_23;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_51;
        if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_52;
        v20 = *(id *)(v19 + 8 * v6 + 32);
        if ((v19 & 0xC000000000000001) == 0)
          goto LABEL_20;
      }
      v21 = (id)MEMORY[0x1940086C4](i - 4, v19);
      v19 = *a1;
LABEL_23:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v19;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v19 & 0x8000000000000000) != 0
        || (v19 & 0x4000000000000000) != 0)
      {
        sub_18FB8B8C0(v19);
      }
      v23 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
      *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v21;

      sub_18FBCD2A4();
      v24 = *a1;
      v25 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v24;
      if (!v25 || (v24 & 0x8000000000000000) != 0 || (v24 & 0x4000000000000000) != 0)
        sub_18FB8B8C0(v24);
      if ((v10 & 0x8000000000000000) != 0)
        goto LABEL_55;
      v26 = v24 & 0xFFFFFFFFFFFFFF8;
      if (v10 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_56;
      v27 = *(void **)(v26 + 8 * i);
      *(_QWORD *)(v26 + 8 * i) = v20;

      sub_18FBCD2A4();
      goto LABEL_34;
    }
    return v6;
  }
  v31 = *a1;
  if (!(v31 >> 62))
    return *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v34 = sub_18FBCD628();
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_18FB8C36C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_18FBCD628();
  swift_bridgeObjectRelease();
  if (v21 < v2)
    goto LABEL_31;
LABEL_4:
  v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v7 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62)
    goto LABEL_34;
  v7 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 - v6;
  if (__OFADD__(v7, v5))
    goto LABEL_36;
LABEL_8:
  v9 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v9;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v7 = 1;
  }
  if (v9 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8)
    v12 = v8;
  swift_bridgeObjectRetain();
  *v3 = MEMORY[0x1940086D0](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = v11 + 32;
  v14 = (char *)(v11 + 32 + 8 * v4);
  sub_18FB1F254(0, &qword_1EE1880F8);
  swift_arrayDestroy();
  if (!v5)
    return sub_18FBCD2A4();
  if (!(*v3 >> 62))
  {
    v15 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_18FBCD628();
  swift_bridgeObjectRelease();
  v16 = v22 - v2;
  if (__OFSUB__(v22, v2))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)(v13 + 8 * v2);
    if (v4 != v2 || v14 >= &v17[8 * v16])
      memmove(v14, v17, 8 * v16);
    if (!(*v3 >> 62))
    {
      v18 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v19 = v18 + v5;
      if (!__OFADD__(v18, v5))
      {
LABEL_27:
        *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10) = v19;
        return sub_18FBCD2A4();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    v19 = v23 + v5;
    if (!__OFADD__(v23, v5))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_18FBCD670();
  __break(1u);
  return result;
}

uint64_t sub_18FB8C674(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 5)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_18FB8C68C()
{
  uint64_t v0;

  return sub_18FB8AB64(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_widgetRelevancesDidChangeForRelevanceService_);
}

uint64_t objectdestroy_70Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_18FB8C6DC()
{
  uint64_t v0;

  return sub_18FB8AB64(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), (SEL *)&selRef_timelineEntryRelevancesDidChangeForRelevanceService_);
}

uint64_t sub_18FB8C6FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18FB8C728()
{
  uint64_t v0;

  return sub_18FB889EC(*(void **)(v0 + 24));
}

uint64_t sub_18FB8C74C()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_21Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t sub_18FB8C790()
{
  uint64_t v0;

  return sub_18FB88764(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_18FB8C798()
{
  swift_release();
  return swift_deallocObject();
}

void sub_18FB8C7BC(int a1, void *a2)
{
  uint64_t v2;

  sub_18FB8A6A0(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_18FB8C7C4()
{
  return swift_release();
}

uint64_t CHSControlState.value.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CHSControlState.__allocating_init(value:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t CHSControlState.init(value:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t CHSControlState.copyWithNewState(_:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

BOOL static CHSControlState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t CHSControlState.hash(into:)()
{
  return sub_18FBCD85C();
}

unint64_t CHSControlState.description.getter()
{
  sub_18FBCD52C();
  swift_bridgeObjectRelease();
  sub_18FBCD7A8();
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  return 0xD000000000000018;
}

uint64_t sub_18FB8C9A4()
{
  return 0x65756C6176;
}

uint64_t sub_18FB8C9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_18FBCD7C0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_18FB8CA44()
{
  sub_18FB8CB8C();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB8CA6C()
{
  sub_18FB8CB8C();
  return sub_18FBCD8C8();
}

uint64_t CHSControlState.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t CHSControlState.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t CHSControlState.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB8CB8C();
  sub_18FBCD8B0();
  sub_18FBCD760();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_18FB8CB8C()
{
  unint64_t result;

  result = qword_1EE18A070;
  if (!qword_1EE18A070)
  {
    result = MEMORY[0x19400954C](&unk_18FBD6CDC, &type metadata for CHSControlState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18A070);
  }
  return result;
}

uint64_t CHSControlState.hashValue.getter()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t CHSControlState.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CHSControlState.init(from:)(a1);
  return v2;
}

_QWORD *CHSControlState.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  v3 = v1;
  v11[1] = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE189A10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB8CB8C();
  sub_18FBCD8A4();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v9 = sub_18FBCD6DC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v3[2] = v9;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

uint64_t sub_18FB8CD84()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t sub_18FB8CDC8()
{
  return sub_18FBCD85C();
}

uint64_t sub_18FB8CDF4()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

unint64_t sub_18FB8CE38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE18B6D0;
  if (!qword_1EE18B6D0)
  {
    v1 = type metadata accessor for CHSControlState();
    result = MEMORY[0x19400954C](&protocol conformance descriptor for CHSControlState, v1);
    atomic_store(result, (unint64_t *)&qword_1EE18B6D0);
  }
  return result;
}

uint64_t type metadata accessor for CHSControlState()
{
  return objc_opt_self();
}

unint64_t sub_18FB8CE9C()
{
  return CHSControlState.description.getter();
}

_QWORD *sub_18FB8CEBC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = CHSControlState.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_18FB8CF10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB8CB8C();
  sub_18FBCD8B0();
  sub_18FBCD760();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL sub_18FB8CFF8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16);
}

uint64_t method lookup function for CHSControlState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CHSControlState.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CHSControlState.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for CHSControlState.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_18FB8D080 + 4 * asc_18FBD6AE8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_18FB8D0A0 + 4 * byte_18FBD6AED[v4]))();
}

_BYTE *sub_18FB8D080(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_18FB8D0A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB8D0A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB8D0B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB8D0B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB8D0C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CHSControlState.CodingKeys()
{
  return &type metadata for CHSControlState.CodingKeys;
}

unint64_t sub_18FB8D0E0()
{
  unint64_t result;

  result = qword_1EE18B6D8;
  if (!qword_1EE18B6D8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD6CB4, &type metadata for CHSControlState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18B6D8);
  }
  return result;
}

unint64_t sub_18FB8D128()
{
  unint64_t result;

  result = qword_1EE18A080;
  if (!qword_1EE18A080)
  {
    result = MEMORY[0x19400954C](&unk_18FBD6C24, &type metadata for CHSControlState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18A080);
  }
  return result;
}

unint64_t sub_18FB8D170()
{
  unint64_t result;

  result = qword_1EE18A078;
  if (!qword_1EE18A078)
  {
    result = MEMORY[0x19400954C](&unk_18FBD6C4C, &type metadata for CHSControlState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18A078);
  }
  return result;
}

BOOL static ConcreteImageIOPrimitives.ImageIOError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ConcreteImageIOPrimitives.ImageIOError.hash(into:)()
{
  return sub_18FBCD85C();
}

uint64_t ConcreteImageIOPrimitives.ImageIOError.hashValue.getter()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

BOOL sub_18FB8D234(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ConcreteImageIOPrimitives.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ConcreteImageIOPrimitives.init()()
{
  uint64_t v0;

  return v0;
}

void ConcreteImageIOPrimitives.makeImageDestination(at:typeIdentifier:numberOfImages:)(size_t a1@<X3>, CGImageDestinationRef *a2@<X8>)
{
  const __CFURL *v4;
  __CFString *v5;
  CGImageDestinationRef v6;
  _BYTE *v7;

  v4 = (const __CFURL *)sub_18FBCCD94();
  v5 = (__CFString *)sub_18FBCD0B8();
  v6 = CGImageDestinationCreateWithURL(v4, v5, a1, 0);

  if (v6)
  {
    *a2 = v6;
  }
  else
  {
    sub_18FB8D32C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
  }
}

unint64_t sub_18FB8D32C()
{
  unint64_t result;

  result = qword_1EE187E68;
  if (!qword_1EE187E68)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for ConcreteImageIOPrimitives.ImageIOError, &type metadata for ConcreteImageIOPrimitives.ImageIOError);
    atomic_store(result, (unint64_t *)&qword_1EE187E68);
  }
  return result;
}

void ConcreteImageIOPrimitives.addImage(_:to:options:)(CGImageRef image, CGImageDestination **a2, const __CFDictionary *a3)
{
  CGImageDestination *v4;
  const __CFDictionary *v5;

  v4 = *a2;
  if (a3)
  {
    type metadata accessor for CFString(0);
    sub_18FB8D3EC();
    a3 = (const __CFDictionary *)sub_18FBCD040();
  }
  v5 = a3;
  CGImageDestinationAddImage(v4, image, a3);

}

unint64_t sub_18FB8D3EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE187DA0;
  if (!qword_1EE187DA0)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x19400954C](&unk_18FBD5A80, v1);
    atomic_store(result, (unint64_t *)&qword_1EE187DA0);
  }
  return result;
}

uint64_t ConcreteImageIOPrimitives.finalizeImageDestination(_:)(CGImageDestinationRef *a1)
{
  uint64_t result;
  _BYTE *v2;

  result = CGImageDestinationFinalize(*a1);
  if (!(_DWORD)result)
  {
    sub_18FB8D32C();
    swift_allocError();
    *v2 = 1;
    return swift_willThrow();
  }
  return result;
}

void ConcreteImageIOPrimitives.makeImageSource(at:)(CGImageSourceRef *a1@<X8>)
{
  const __CFURL *v2;
  CGImageSourceRef v3;
  _BYTE *v4;

  v2 = (const __CFURL *)sub_18FBCCD94();
  v3 = CGImageSourceCreateWithURL(v2, 0);

  if (v3)
  {
    *a1 = v3;
  }
  else
  {
    sub_18FB8D32C();
    swift_allocError();
    *v4 = 2;
    swift_willThrow();
  }
}

CGImageRef ConcreteImageIOPrimitives.getImage(index:from:)(size_t index, CGImageSourceRef *a2)
{
  return CGImageSourceCreateImageAtIndex(*a2, index, 0);
}

uint64_t ConcreteImageIOPrimitives.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ConcreteImageIOPrimitives.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_18FB8D544()
{
  unint64_t result;

  result = qword_1EE18B6E0;
  if (!qword_1EE18B6E0)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for ConcreteImageIOPrimitives.ImageIOError, &type metadata for ConcreteImageIOPrimitives.ImageIOError);
    atomic_store(result, (unint64_t *)&qword_1EE18B6E0);
  }
  return result;
}

void sub_18FB8D588(size_t a1@<X3>, CGImageDestinationRef *a2@<X8>)
{
  const __CFURL *v4;
  __CFString *v5;
  CGImageDestinationRef v6;
  _BYTE *v7;

  v4 = (const __CFURL *)sub_18FBCCD94();
  v5 = (__CFString *)sub_18FBCD0B8();
  v6 = CGImageDestinationCreateWithURL(v4, v5, a1, 0);

  if (v6)
  {
    *a2 = v6;
  }
  else
  {
    sub_18FB8D32C();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
  }
}

void sub_18FB8D644(CGImageRef image, CGImageDestination **a2, const __CFDictionary *a3)
{
  CGImageDestination *v4;
  const __CFDictionary *v5;

  v4 = *a2;
  if (a3)
  {
    type metadata accessor for CFString(0);
    sub_18FB8D3EC();
    a3 = (const __CFDictionary *)sub_18FBCD040();
  }
  v5 = a3;
  CGImageDestinationAddImage(v4, image, a3);

}

uint64_t sub_18FB8D6C0(CGImageDestinationRef *a1)
{
  uint64_t result;
  _BYTE *v2;

  result = CGImageDestinationFinalize(*a1);
  if (!(_DWORD)result)
  {
    sub_18FB8D32C();
    swift_allocError();
    *v2 = 1;
    return swift_willThrow();
  }
  return result;
}

void sub_18FB8D71C(CGImageSourceRef *a1@<X8>)
{
  const __CFURL *v2;
  CGImageSourceRef v3;
  _BYTE *v4;

  v2 = (const __CFURL *)sub_18FBCCD94();
  v3 = CGImageSourceCreateWithURL(v2, 0);

  if (v3)
  {
    *a1 = v3;
  }
  else
  {
    sub_18FB8D32C();
    swift_allocError();
    *v4 = 2;
    swift_willThrow();
  }
}

CGImageRef sub_18FB8D7A0(size_t index, CGImageSourceRef *a2)
{
  return CGImageSourceCreateImageAtIndex(*a2, index, 0);
}

uint64_t type metadata accessor for ConcreteImageIOPrimitives()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConcreteImageIOPrimitives()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConcreteImageIOPrimitives.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t getEnumTagSinglePayload for ConcreteImageIOPrimitives.ImageIOError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ConcreteImageIOPrimitives.ImageIOError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_18FB8D8C4 + 4 * byte_18FBD6D35[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18FB8D8F8 + 4 * byte_18FBD6D30[v4]))();
}

uint64_t sub_18FB8D8F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB8D900(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FB8D908);
  return result;
}

uint64_t sub_18FB8D914(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FB8D91CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_18FB8D920(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB8D928(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConcreteImageIOPrimitives.ImageIOError()
{
  return &type metadata for ConcreteImageIOPrimitives.ImageIOError;
}

ValueMetadata *type metadata accessor for ConcreteImageIOPrimitives.ImageDestination()
{
  return &type metadata for ConcreteImageIOPrimitives.ImageDestination;
}

ValueMetadata *type metadata accessor for ConcreteImageIOPrimitives.ImageSource()
{
  return &type metadata for ConcreteImageIOPrimitives.ImageSource;
}

const __CFString *CHSControlSize.debugDescription.getter(uint64_t a1)
{
  const __CFString *result;
  __CFString *v2;
  uint64_t v3;

  result = (id)NSStringFromCHSControlSize(a1);
  if (result)
  {
    v2 = (__CFString *)result;
    v3 = sub_18FBCD0DC();

    return (const __CFString *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

const __CFString *sub_18FB8D9B4()
{
  uint64_t *v0;
  const __CFString *result;
  __CFString *v2;
  uint64_t v3;

  result = (id)NSStringFromCHSControlSize(*v0);
  if (result)
  {
    v2 = (__CFString *)result;
    v3 = sub_18FBCD0DC();

    return (const __CFString *)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TypedIdentifier.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TypedIdentifier.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t sub_18FB8DA4C()
{
  MEMORY[0x19400954C](&protocol conformance descriptor for TypedIdentifier<A>);
  return sub_18FBCD250();
}

uint64_t sub_18FB8DAB0()
{
  MEMORY[0x19400954C](&protocol conformance descriptor for TypedIdentifier<A>);
  return sub_18FBCD208();
}

uint64_t sub_18FB8DB04(uint64_t a1)
{
  MEMORY[0x19400954C](&protocol conformance descriptor for TypedIdentifier<A>, a1);
  return sub_18FBCD22C();
}

uint64_t sub_18FB8DB50()
{
  MEMORY[0x19400954C](&protocol conformance descriptor for TypedIdentifier<A>);
  return sub_18FBCD238();
}

uint64_t sub_18FB8DBA0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return TypedIdentifier.init(rawValue:)(*a1, a1[1], a2);
}

uint64_t sub_18FB8DBAC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  _QWORD v5[2];

  result = TypedIdentifier.init(rawValue:)(*a1, a1[1], v5);
  v4 = v5[1];
  *a2 = v5[0];
  a2[1] = v4;
  return result;
}

uint64_t static TypedIdentifier.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_18FBCD7C0();
}

uint64_t TypedIdentifier.init(stringLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_18FB8DC30@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return TypedIdentifier.init(stringLiteral:)(*a1, a1[1], a2);
}

void sub_18FB8DC3C()
{
  JUMPOUT(0x19400954CLL);
}

uint64_t sub_18FB8DC4C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x19400954C](&protocol conformance descriptor for TypedIdentifier<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_18FB8DC78()
{
  JUMPOUT(0x19400954CLL);
}

void sub_18FB8DC88()
{
  JUMPOUT(0x19400954CLL);
}

void sub_18FB8DC98()
{
  JUMPOUT(0x19400954CLL);
}

uint64_t dispatch thunk of RawRepresentableIdentity.init(rawValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for IdentifierType()
{
  return &type metadata for IdentifierType;
}

ValueMetadata *type metadata accessor for IdentifierType.Bundle()
{
  return &type metadata for IdentifierType.Bundle;
}

ValueMetadata *type metadata accessor for IdentifierType.Bundle.Container()
{
  return &type metadata for IdentifierType.Bundle.Container;
}

ValueMetadata *type metadata accessor for IdentifierType.Bundle.Extension()
{
  return &type metadata for IdentifierType.Bundle.Extension;
}

ValueMetadata *type metadata accessor for IdentifierType.WidgetHost()
{
  return &type metadata for IdentifierType.WidgetHost;
}

uint64_t sub_18FB8DD00()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for TypedIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TypedIdentifier);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1940094E0](a1, v6, a5);
}

unint64_t sub_18FB8DD44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD v12[2];
  unint64_t v13;
  unint64_t v14;

  v1 = v0;
  v2 = sub_18FBCCC80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s22ExtendedAttributeErrorOMa();
  MEMORY[0x1E0C80A78]();
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FB8FB00(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = *((_QWORD *)v7 + 2);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v7[*(int *)(v9 + 64)], v2);
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_18FBCD52C();
    sub_18FBCD16C();
    sub_18FBCD16C();
    swift_bridgeObjectRelease();
    sub_18FBCD16C();
    v12[1] = v8;
    sub_18FBCD7A8();
    sub_18FBCD16C();
    swift_bridgeObjectRelease();
    sub_18FBCD16C();
    sub_18FBCD5D4();
    v10 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_18FBCD52C();
    swift_bridgeObjectRelease();
    v13 = 0xD000000000000019;
    v14 = 0x800000018FBE8690;
    sub_18FBCD16C();
    swift_bridgeObjectRelease();
    sub_18FBCD16C();
    return v13;
  }
  return v10;
}

uint64_t sub_18FB8DFB4(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t result;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);

  v6 = sub_18FBCD100();
  v7 = removexattr(a1, (const char *)(v6 + 32), 0);
  result = swift_release();
  if (v7 < 0)
  {
    MEMORY[0x194008100](result);
    result = sub_18FBCCF74();
    if ((result & 0x100000000) != 0)
    {
      __break(1u);
    }
    else
    {
      sub_18FBCCC74();
      v9 = sub_18FBCCF80();
      result = sub_18FBCCF80();
      if (v9 != (_DWORD)result)
      {
        _s22ExtendedAttributeErrorOMa();
        sub_18FB203A8(&qword_1EE187DD8, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_18FBD7270);
        swift_allocError();
        v11 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8);
        *v11 = a2;
        v11[1] = a3;
        v11[2] = v7;
        sub_18FBCCC80();
        v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
        swift_bridgeObjectRetain();
        sub_18FB8EADC(MEMORY[0x1E0DEE9D8]);
        sub_18FB203A8(&qword_1EE18B6F0, v12, MEMORY[0x1E0CADE88]);
        sub_18FBCCD58();
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
    }
  }
  return result;
}

void sub_18FB8E148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_18FB8E1AC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t value, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t result;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t (*v39)(uint64_t);
  int v40;
  char v41;
  char v42;
  char v43;
  char v44;
  __int16 v45;
  char v46;
  char v47;
  char v48;
  char v49;

  LOWORD(v40) = v29;
  BYTE2(v40) = BYTE2(v29);
  HIBYTE(v40) = BYTE3(v29);
  v41 = BYTE4(v29);
  v42 = BYTE5(v29);
  v43 = BYTE6(v29);
  v44 = HIBYTE(v29);
  v45 = v30;
  v46 = BYTE2(v30);
  v47 = BYTE3(v30);
  v48 = BYTE4(v30);
  v49 = BYTE5(v30);
  v31 = sub_18FBCD100();
  v32 = setxattr(v28, (const char *)(v31 + 32), &v40, BYTE6(v30), 0, 0);
  result = swift_release();
  if (v32 < 0)
  {
    _s22ExtendedAttributeErrorOMa();
    sub_18FB203A8(&qword_1EE187DD8, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_18FBD7270);
    v34 = (void *)swift_allocError();
    *v35 = v27;
    v35[1] = v26;
    v35[2] = v32;
    v36 = swift_bridgeObjectRetain();
    MEMORY[0x194008100](v36);
    v37 = sub_18FBCCF74();
    if ((v37 & 0x100000000) != 0)
    {

      __break(1u);
      JUMPOUT(0x18FB8E53CLL);
    }
    v38 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8);
    sub_18FBCCC80();
    v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
    v40 = v38;
    sub_18FB8EADC(MEMORY[0x1E0DEE9D8]);
    sub_18FB203A8(&qword_1EE18B6F0, v39, MEMORY[0x1E0CADE88]);
    sub_18FBCCD58();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_18FB8E54C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD v13[2];

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v8);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v10 = v13[0];
    v11 = v13[1];
  }
  else
  {
    sub_18FBCCD40();
    swift_allocObject();
    sub_18FBCCD34();
    sub_18FBCCD1C();
    v10 = sub_18FBCCD28();
    v11 = v12;
    result = swift_release();
    if (v2)
      return result;
  }
  MEMORY[0x1E0C80A78](result);
  v13[-4] = v10;
  v13[-3] = v11;
  v13[-2] = a1;
  v13[-1] = a2;
  sub_18FBCCDDC();
  return sub_18FB77A8C(v10, v11);
}

uint64_t sub_18FB8E6BC@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  ssize_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;

  v9 = sub_18FBCD100();
  v10 = getxattr(a1, (const char *)(v9 + 32), 0, 0, 0, 0);
  swift_release();
  if (v10 < 1)
  {
    _s22ExtendedAttributeErrorOMa();
    sub_18FB203A8(&qword_1EE187DD8, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_18FBD7270);
    swift_allocError();
    *v14 = a2;
    v14[1] = a3;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v15 = sub_18FB8F49C(v10);
    v16 = v11;
    swift_bridgeObjectRetain();
    sub_18FB8EDAC((uint64_t)&v15);
    result = v15;
    v13 = v16;
    if (v4)
    {
      return sub_18FB77A8C(v15, v16);
    }
    else
    {
      *a4 = v15;
      a4[1] = v13;
    }
  }
  return result;
}

void sub_18FB8E7FC(void *a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, size_t a6)
{
  uint64_t v11;
  ssize_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);

  v11 = sub_18FBCD100();
  v12 = getxattr(a3, (const char *)(v11 + 32), a1, a6, 0, 0);
  swift_release();
  if (v12 < 1)
  {
    _s22ExtendedAttributeErrorOMa();
    sub_18FB203A8(&qword_1EE187DD8, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_18FBD7270);
    v13 = (void *)swift_allocError();
    *v14 = a4;
    v14[1] = a5;
    v14[2] = v12;
    v15 = swift_bridgeObjectRetain();
    MEMORY[0x194008100](v15);
    if ((sub_18FBCCF74() & 0x100000000) != 0)
    {

      __break(1u);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8);
      sub_18FBCCC80();
      v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
      sub_18FB8EADC(MEMORY[0x1E0DEE9D8]);
      sub_18FB203A8(&qword_1EE18B6F0, v16, MEMORY[0x1E0CADE88]);
      sub_18FBCCD58();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

uint64_t sub_18FB8E980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;

  v5 = MEMORY[0x1E0CB0338];
  result = sub_18FBCCDDC();
  if (!v3)
  {
    if (a3 == v5)
    {
      return swift_dynamicCast();
    }
    else
    {
      sub_18FBCCD10();
      swift_allocObject();
      sub_18FBCCD04();
      sub_18FBCCCF8();
      swift_release();
      return sub_18FB77A8C(v7, v8);
    }
  }
  return result;
}

uint64_t sub_18FB8EA88@<X0>(const char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_18FB8E6BC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t _s22ExtendedAttributeErrorOMa()
{
  uint64_t result;

  result = qword_1EE187DE0;
  if (!qword_1EE187DE0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_18FB8EADC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B0B8);
  v2 = sub_18FBCD664();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_18FB8F538(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_18FB8EC04(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_18FB73714(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_18FB8EC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_18FBCD850();
  sub_18FBCD130();
  v4 = sub_18FBCD88C();
  return sub_18FB8EC68(a1, a2, v4);
}

unint64_t sub_18FB8EC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_18FBCD7C0() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_18FBCD7C0() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_18FBCD7C0() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void sub_18FB8EDAC(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_18FB8EE14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  size_t v3;
  _QWORD *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unsigned int v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;

  v13 = v1;
  LOWORD(v14) = a1;
  BYTE2(v14) = BYTE2(a1);
  HIBYTE(v14) = BYTE3(a1);
  v15 = BYTE4(a1);
  v16 = BYTE5(a1);
  v17 = BYTE6(a1);
  sub_18FB8E7FC(&v13, (uint64_t)&v13 + BYTE6(a1), v6, v5, v2, v3);
  v7 = v13;
  v8 = v14;
  v9 = v15;
  v10 = v16;
  v11 = v17;
  result = swift_bridgeObjectRelease();
  *v4 = v7;
  v4[1] = v8 | (v9 << 32) | (v10 << 40) | (v11 << 48);
  return result;
}

uint64_t sub_18FB8F048(int *a1, const char *a2, uint64_t a3, uint64_t a4, size_t a5)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;

  result = sub_18FBCCE48();
  v12 = *a1;
  v11 = a1[1];
  if ((int)v11 < (int)v12)
  {
    __break(1u);
    goto LABEL_9;
  }
  v18 = a4;
  v19 = a2;
  result = sub_18FBCCC98();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v13 = result;
  result = sub_18FBCCCBC();
  v14 = v12 - result;
  if (__OFSUB__(v12, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = v11 - v12;
  v16 = sub_18FBCCCB0();
  if (v16 >= v15)
    v17 = v15;
  else
    v17 = v16;
  sub_18FB8E7FC((void *)(v13 + v14), v13 + v14 + v17, v19, a3, v18, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FB8F12C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  char v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a2;
  v3 = sub_18FBCCC80();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v44 - v8;
  v10 = _s22ExtendedAttributeErrorOMa();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v44 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6F8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v19[*(int *)(v17 + 48)];
  sub_18FB8FB00(a1, (uint64_t)v19);
  sub_18FB8FB00(v49, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_18FB8FB00((uint64_t)v19, (uint64_t)v15);
    v36 = *v15;
    v37 = v15[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v36 == *(_QWORD *)v20 && v37 == *((_QWORD *)v20 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v39 = sub_18FBCD7C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
LABEL_22:
          sub_18FB8F864((uint64_t)v19);
          goto LABEL_23;
        }
      }
      sub_18FB8F864((uint64_t)v19);
      v40 = 1;
      return v40 & 1;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_18FB8FB44((uint64_t)v19);
LABEL_23:
    v40 = 0;
    return v40 & 1;
  }
  v48 = v3;
  v49 = v4;
  v47 = v9;
  sub_18FB8FB00((uint64_t)v19, (uint64_t)v13);
  v21 = *(_QWORD *)v13;
  v22 = *((_QWORD *)v13 + 1);
  v23 = *((_QWORD *)v13 + 2);
  v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8) + 64);
  v25 = &v13[v24];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(&v13[v24], v48);
    goto LABEL_17;
  }
  v27 = *(_QWORD *)v20;
  v26 = *((_QWORD *)v20 + 1);
  v45 = *((_QWORD *)v20 + 2);
  v46 = v23;
  v28 = &v20[v24];
  v29 = v48;
  v30 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  v30(v47, v25, v48);
  v31 = v7;
  v30(v7, v28, v29);
  if (v21 == v27 && v22 == v26)
  {
    swift_bridgeObjectRelease_n();
    v34 = v47;
    v35 = v49;
  }
  else
  {
    v33 = sub_18FBCD7C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v47;
    v35 = v49;
    if ((v33 & 1) == 0)
      goto LABEL_21;
  }
  if (v46 != v45)
  {
LABEL_21:
    v42 = *(void (**)(char *, uint64_t))(v35 + 8);
    v42(v31, v29);
    v42(v34, v29);
    goto LABEL_22;
  }
  sub_18FB203A8(&qword_1EE18B6F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90], MEMORY[0x1E0CADE88]);
  v40 = sub_18FBCCD4C();
  v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  v41(v31, v29);
  v41(v34, v29);
  sub_18FB8F864((uint64_t)v19);
  return v40 & 1;
}

uint64_t sub_18FB8F49C(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_18FBCCCC8();
      swift_allocObject();
      sub_18FBCCCA4();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_18FBCCE54();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_18FB8F538(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_18FB8F580(uint64_t a1)
{
  uint64_t v1;

  sub_18FB8E148(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t *sub_18FB8F59C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8) + 64);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_18FBCCC80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_18FB8F680(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8) + 64);
    v5 = sub_18FBCCC80();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_QWORD *sub_18FB8F6EC(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8) + 64);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_18FBCCC80();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_18FB8F79C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_18FB8F864((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8) + 64);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_18FBCCC80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_18FB8F864(uint64_t a1)
{
  uint64_t v2;

  v2 = _s22ExtendedAttributeErrorOMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_18FB8F8A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8) + 64);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_18FBCCC80();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_18FB8F954(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_18FB8F864((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6E8) + 64);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_18FBCCC80();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_18FB8FA18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_18FB8FA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_18FB8FA34()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_18FB8FA44()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = &unk_18FBD71E8;
  result = sub_18FBCCC80();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_18FB8FAD4()
{
  return sub_18FB203A8(&qword_1EE187DD8, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_18FBD7270);
}

uint64_t sub_18FB8FB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s22ExtendedAttributeErrorOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FB8FB44(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B6F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Encodable.toOPACKData()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v6;
  uint64_t v8[5];

  sub_18FBCCEF0();
  v8[3] = a1;
  v8[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v2, a1);
  v6 = sub_18FBCCEE4();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v6;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t static Decodable.fromOPACKData(_:)()
{
  sub_18FBCCEF0();
  return sub_18FBCCED8();
}

uint64_t NSSecureCoding<>.toOPACKData()()
{
  sub_18FBCCEF0();
  return sub_18FBCCECC();
}

uint64_t static NSSecureCoding<>.fromOPACKData(_:)()
{
  sub_18FBCCEF0();
  return sub_18FBCCEC0();
}

void NSCoder.chsEncodeCodable(_:forKey:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  id v10;

  v2 = v1;
  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  v5 = Encodable.toOPACKData()(v3, v4);
  v7 = v6;
  v8 = (void *)sub_18FBCCE60();
  sub_18FB77A8C(v5, v7);
  v9 = v8;
  v10 = (id)sub_18FBCD0B8();
  objc_msgSend(v2, sel_encodeObject_forKey_, v9, v10);

}

uint64_t NSCoder.chsDecodeCodable<A>(of:forKey:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  void *v13;

  v3 = v2;
  sub_18FB904CC();
  v6 = sub_18FBCD3E8();
  if (v6)
  {
    v7 = (void *)v6;
    sub_18FBCCE6C();

  }
  if (qword_1EE189820 != -1)
    swift_once();
  v8 = sub_18FBCCF5C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EE1927B8);
  v9 = sub_18FBCCF44();
  v10 = sub_18FBCD37C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_18FB18000, v9, v10, "Unable to decode boxed codable = missing data", v11, 2u);
    MEMORY[0x19400960C](v11, -1, -1);
  }

  v12 = objc_msgSend((id)objc_opt_self(), sel_chs_initWithErrorCode_, 8);
  v13 = (void *)sub_18FBCCD64();

  objc_msgSend(v3, sel_failWithError_, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1, a1);
}

uint64_t sub_18FB904AC(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

unint64_t sub_18FB904CC()
{
  unint64_t result;

  result = qword_1EE18B708;
  if (!qword_1EE18B708)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE18B708);
  }
  return result;
}

uint64_t sub_18FB90508(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_18FBC7FC4(*a1, *a2);
}

uint64_t sub_18FB90514()
{
  return sub_18FBC8668();
}

uint64_t sub_18FB9051C()
{
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FB90594()
{
  return sub_18FBC8DBC();
}

uint64_t sub_18FB9059C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB90F1C();
  *a1 = result;
  return result;
}

void sub_18FB905C8(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = 0xD000000000000011;
  v3 = 0xE400000000000000;
  v4 = 1684957547;
  if (*v1 != 1)
  {
    v4 = 0xD000000000000013;
    v3 = 0x800000018FBE6F70;
  }
  if (*v1)
  {
    v2 = v4;
    v5 = v3;
  }
  else
  {
    v5 = 0x800000018FBE6F50;
  }
  *a1 = v2;
  a1[1] = v5;
}

unint64_t sub_18FB90624()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 1684957547;
  if (*v0 != 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_18FB9067C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB90F1C();
  *a1 = result;
  return result;
}

void sub_18FB906A0(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_18FB906AC()
{
  sub_18FB909B0();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB906D4()
{
  sub_18FB909B0();
  return sub_18FBCD8C8();
}

id CHSControlIdentity.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  char v27;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189E80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB909B0();
  sub_18FBCD8A4();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    type metadata accessor for CHSExtensionIdentity();
    v27 = 0;
    sub_18FB90CAC(&qword_1EE189E78, (uint64_t)&protocol conformance descriptor for CHSExtensionIdentity);
    sub_18FBCD6E8();
    v9 = v25;
    LOBYTE(v25) = 1;
    v23 = sub_18FBCD6C4();
    v24 = v11;
    LOBYTE(v25) = 2;
    v12 = sub_18FBCD718();
    if ((v12 & 1) != 0)
    {
      v27 = 2;
      sub_18FB909F4();
      sub_18FBCD6E8();
      v13 = (uint64_t)v25;
      v14 = v26;
      v20[1] = sub_18FBCCEF0();
      sub_18FB8538C();
      v21 = v13;
      v22 = v14;
      v15 = sub_18FBCCEC0();
      v19 = (unint64_t)v22;
      v22 = (void *)v15;
      sub_18FB77A8C(v21, v19);
    }
    else
    {
      v22 = 0;
    }
    v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v17 = (void *)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
    v18 = v22;
    v3 = objc_msgSend(v16, sel_initWithExtensionIdentity_kind_intentReference_, v9, v17, v22);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v3;
}

unint64_t sub_18FB909B0()
{
  unint64_t result;

  result = qword_1EE18A158;
  if (!qword_1EE18A158)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7440, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1EE18A158);
  }
  return result;
}

unint64_t sub_18FB909F4()
{
  unint64_t result;

  result = qword_1EE1898E0;
  if (!qword_1EE1898E0)
  {
    result = MEMORY[0x19400954C](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE1898E0);
  }
  return result;
}

void CHSControlIdentity.encode(to:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A090);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB909B0();
  sub_18FBCD8B0();
  v9 = objc_msgSend(v3, sel_extensionIdentity);
  v17 = (uint64_t)v9;
  v19 = 0;
  type metadata accessor for CHSExtensionIdentity();
  sub_18FB90CAC(&qword_1EE18A088, (uint64_t)&protocol conformance descriptor for CHSExtensionIdentity);
  sub_18FBCD76C();

  if (v2
    || (v10 = objc_msgSend(v3, sel_kind),
        sub_18FBCD0DC(),
        v10,
        LOBYTE(v17) = 1,
        sub_18FBCD748(),
        swift_bridgeObjectRelease(),
        (v11 = objc_msgSend(v3, sel_intentReference)) == 0))
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v12 = v11;
    sub_18FBCCEF0();
    v13 = sub_18FBCCECC();
    v15 = v14;
    v17 = v13;
    v18 = v14;
    v19 = 2;
    sub_18FB90CEC();
    sub_18FBCD76C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    sub_18FB77A8C(v13, v15);
  }
}

uint64_t sub_18FB90CAC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CHSExtensionIdentity();
    result = MEMORY[0x19400954C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18FB90CEC()
{
  unint64_t result;

  result = qword_1EE189E40;
  if (!qword_1EE189E40)
  {
    result = MEMORY[0x19400954C](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE189E40);
  }
  return result;
}

id sub_18FB90D30@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = CHSControlIdentity.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_18FB90D58(_QWORD *a1)
{
  CHSControlIdentity.encode(to:)(a1);
}

uint64_t _s10CodingKeysOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_18FB90DC4 + 4 * byte_18FBD72C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18FB90DF8 + 4 * byte_18FBD72C0[v4]))();
}

uint64_t sub_18FB90DF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB90E00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FB90E08);
  return result;
}

uint64_t sub_18FB90E14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FB90E1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_18FB90E20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB90E28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_1()
{
  return &_s10CodingKeysON_1;
}

unint64_t sub_18FB90E48()
{
  unint64_t result;

  result = qword_1EE18B710;
  if (!qword_1EE18B710)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7418, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1EE18B710);
  }
  return result;
}

unint64_t sub_18FB90E90()
{
  unint64_t result;

  result = qword_1EE18A168;
  if (!qword_1EE18A168)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7350, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1EE18A168);
  }
  return result;
}

unint64_t sub_18FB90ED8()
{
  unint64_t result;

  result = qword_1EE18A160;
  if (!qword_1EE18A160)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7378, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1EE18A160);
  }
  return result;
}

uint64_t sub_18FB90F1C()
{
  unint64_t v0;

  v0 = sub_18FBCD688();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

void *CHSWidgetExtensionProviderOptions.controlsPredicate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___CHSWidgetExtensionProviderOptions_controlsPredicate);
  v2 = v1;
  return v1;
}

void *CHSWidgetExtensionProviderOptions.widgetsPredicate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___CHSWidgetExtensionProviderOptions_widgetsPredicate);
  v2 = v1;
  return v1;
}

uint64_t CHSWidgetExtensionProviderOptions.includeIntents.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSWidgetExtensionProviderOptions_includeIntents);
}

void sub_18FB90FFC()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_visible);
  v1 = objc_msgSend((id)objc_opt_self(), "all");
  v2 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_includeIntents_, v0, v1, 1);

  qword_1EE189350 = (uint64_t)v2;
}

id static CHSWidgetExtensionProviderOptions.widgets.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_visible);
  v1 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_, v0, 0);

  return v1;
}

id static CHSWidgetExtensionProviderOptions.visibleControls.getter()
{
  return sub_18FB917B4((SEL *)&selRef_visible);
}

id static CHSWidgetExtensionProviderOptions.allControls.getter()
{
  return sub_18FB917B4((SEL *)&selRef_all);
}

uint64_t CHSWidgetExtensionProviderOptions.hash.getter()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;

  v1 = v0;
  sub_18FBCD898();
  v2 = objc_msgSend(v0, sel_widgetsPredicate);
  if (v2)
  {
    v3 = v2;
    sub_18FBCD868();
    v4 = v3;
    sub_18FBCD418();

  }
  else
  {
    sub_18FBCD868();
  }
  v5 = objc_msgSend(v1, sel_controlsPredicate);
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, sel_includeVisible);

    sub_18FBCD868();
  }
  sub_18FBCD868();
  v7 = objc_msgSend(v1, sel_controlsPredicate);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_includeHidden);

    sub_18FBCD868();
  }
  sub_18FBCD868();
  objc_msgSend(v1, sel_includeIntents);
  sub_18FBCD868();
  return sub_18FBCD880();
}

uint64_t CHSWidgetExtensionProviderOptions.isEqual(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  unsigned __int8 v3;
  void *v5;
  _BYTE v6[24];
  uint64_t v7;

  v2 = sub_18FB1FA14(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_18FB1F7C4((uint64_t)v6);
    goto LABEL_6;
  }
  type metadata accessor for CHSWidgetExtensionProviderOptions(v2);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    v3 = 0;
    return v3 & 1;
  }
  if (v5 == v1)
  {

    v3 = 1;
  }
  else
  {
    v3 = sub_18FB926E4(v1, v5);

  }
  return v3 & 1;
}

uint64_t type metadata accessor for CHSWidgetExtensionProviderOptions(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE189838);
}

uint64_t CHSWidgetExtensionProviderOptions.description.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  sub_18FBCD52C();
  sub_18FBCD16C();
  sub_18FBCD5D4();
  sub_18FBCD16C();
  objc_msgSend(v0, sel_includeIntents);
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();

  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  v1 = objc_msgSend(v0, sel_controlsPredicate);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_description);

    sub_18FBCD0DC();
  }
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  return 0;
}

id sub_18FB91740(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3;
  id v4;

  v3 = objc_msgSend((id)objc_opt_self(), *a3);
  v4 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_, 0, v3);

  return v4;
}

id static CHSWidgetExtensionProviderOptions.controls.getter()
{
  return sub_18FB917B4((SEL *)&selRef_visible);
}

id sub_18FB917B4(SEL *a1)
{
  id v1;
  id v2;

  v1 = objc_msgSend((id)objc_opt_self(), *a1);
  v2 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_, 0, v1);

  return v2;
}

void __swiftcall CHSWidgetExtensionProviderOptions.init()(CHSWidgetExtensionProviderOptions *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void CHSWidgetExtensionProviderOptions.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t CHSWidgetExtensionProviderOptions.matchesEverything.getter()
{
  void *v0;
  id v1;
  unsigned __int8 v2;

  if (qword_1EE189358 != -1)
    swift_once();
  v1 = (id)qword_1EE189350;
  v2 = sub_18FB926E4(v0, v1);

  return v2 & 1;
}

void __swiftcall CHSWidgetExtensionProviderOptions.merged(with:)(CHSWidgetExtensionProviderOptions *__return_ptr retstr, CHSWidgetExtensionProviderOptions *with)
{
  void *v2;
  id v3;
  CHSWidgetExtensionProviderOptions *v4;
  CHSWidgetDescriptorsPredicate *v5;
  CHSControlDescriptorsPredicate *v6;
  CHSWidgetDescriptorsPredicate *v7;
  _BOOL8 v8;
  CHSWidgetDescriptorsPredicate *v9;
  _BOOL4 v10;
  CHSWidgetDescriptorsPredicate *v11;
  CHSControlDescriptorsPredicate *v12;
  CHSControlDescriptorsPredicate *v13;
  unsigned __int8 v14;
  uint64_t v15;
  CHSControlDescriptorsPredicate *v16;
  CHSControlDescriptorsPredicate *v17;
  CHSControlDescriptorsPredicate *v18;
  CHSControlDescriptorsPredicate *v19;
  unsigned int v20;
  uint64_t v21;
  id v22;
  CHSControlDescriptorsPredicate *v23;
  CHSControlDescriptorsPredicate *v24;
  id v25;
  CHSWidgetExtensionProviderOptions *v26;
  CHSWidgetExtensionProviderOptions *v27;
  CHSWidgetExtensionProviderOptions *v29;

  v3 = objc_msgSend(v2, sel_controlsPredicate);

  v4 = with;
  if (!v3)
  {
    v5 = -[CHSWidgetExtensionProviderOptions widgetsPredicate](v29, sel_widgetsPredicate);
    if (!v5)
    {
      v26 = with;
      goto LABEL_34;
    }

    v4 = with;
  }
  v6 = -[CHSWidgetExtensionProviderOptions controlsPredicate](v4, sel_controlsPredicate);

  if (v6)
    goto LABEL_7;
  v7 = -[CHSWidgetExtensionProviderOptions widgetsPredicate](with, sel_widgetsPredicate);
  if (v7)
  {

LABEL_7:
    v8 = -[CHSWidgetExtensionProviderOptions includeIntents](v29, sel_includeIntents)
      || -[CHSWidgetExtensionProviderOptions includeIntents](with, sel_includeIntents);
    v9 = -[CHSWidgetExtensionProviderOptions widgetsPredicate](v29, sel_widgetsPredicate);

    if (v9)
    {
      v10 = 1;
    }
    else
    {
      v11 = -[CHSWidgetExtensionProviderOptions widgetsPredicate](with, sel_widgetsPredicate);

      v10 = v11 != 0;
    }
    v12 = -[CHSWidgetExtensionProviderOptions controlsPredicate](v29, sel_controlsPredicate);
    if (v12
      && (v13 = v12,
          v14 = -[CHSControlDescriptorsPredicate includeVisible](v12, sel_includeVisible),
          v13,
          (v14 & 1) != 0))
    {
      v15 = 1;
    }
    else
    {
      v16 = -[CHSWidgetExtensionProviderOptions controlsPredicate](with, sel_controlsPredicate);
      if (v16)
      {
        v17 = v16;
        v15 = -[CHSControlDescriptorsPredicate includeVisible](v16, sel_includeVisible);

      }
      else
      {
        v15 = 0;
      }
    }
    v18 = -[CHSWidgetExtensionProviderOptions controlsPredicate](v29, sel_controlsPredicate);
    if (v18)
    {
      v19 = v18;
      v20 = -[CHSControlDescriptorsPredicate includeHidden](v18, sel_includeHidden);

      if (v20)
      {
        v21 = 1;
        if (!v10)
        {
          v22 = 0;
          goto LABEL_29;
        }
        goto LABEL_25;
      }
    }
    v23 = -[CHSWidgetExtensionProviderOptions controlsPredicate](with, sel_controlsPredicate);
    if (v23)
    {
      v24 = v23;
      v21 = -[CHSControlDescriptorsPredicate includeHidden](v23, sel_includeHidden);

      if (v10)
      {
LABEL_25:
        v22 = objc_msgSend(objc_allocWithZone((Class)CHSWidgetDescriptorsPredicate), sel_init);
        goto LABEL_28;
      }
    }
    else
    {
      v21 = 0;
      if (v10)
        goto LABEL_25;
    }
    v22 = 0;
LABEL_28:
    if ((v15 | v21) != 1)
    {
      v25 = 0;
      goto LABEL_31;
    }
LABEL_29:
    v25 = objc_msgSend(objc_allocWithZone((Class)CHSControlDescriptorsPredicate), sel_initIncludingVisible_hidden_, v15, v21);
LABEL_31:
    objc_msgSend(objc_allocWithZone((Class)CHSWidgetExtensionProviderOptions), sel_initWithWidgetsPredicate_controlsPredicate_includeIntents_, v22, v25, v8);

    return;
  }
  v26 = v29;
LABEL_34:
  v27 = v26;
}

Swift::Bool __swiftcall CHSWidgetExtensionProviderOptions.matches(extension:)(CHSWidgetExtension *extension)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  unint64_t v6;
  id v7;
  unsigned __int8 v8;
  uint64_t v9;
  id v10;
  NSArray *v11;
  NSArray *v12;
  unint64_t v13;
  id v14;
  uint64_t v15;

  v3 = objc_msgSend(v1, sel_widgetsPredicate);
  if (!v3
    || (v3,
        (v4 = -[CHSWidgetExtension orderedDescriptors](extension, sel_orderedDescriptors)) == 0))
  {
LABEL_8:
    v10 = objc_msgSend(v1, sel_controlsPredicate);

    if (v10)
    {
      v11 = -[CHSWidgetExtension orderedControlDescriptors](extension, sel_orderedControlDescriptors);
      if (v11)
      {
        v12 = v11;
        sub_18FB1F254(0, &qword_1EE1897F0);
        v13 = sub_18FBCD28C();

        if (v13 >> 62)
        {
          swift_bridgeObjectRetain();
          v15 = sub_18FBCD628();
          swift_bridgeObjectRelease();
          if (v15)
            goto LABEL_12;
        }
        else if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_12:
          v14 = v1;
          v8 = sub_18FB92878(v13, v14, (SEL *)&selRef_matchesControlDescriptor_);
          swift_bridgeObjectRelease();

          return v8 & 1;
        }
        swift_bridgeObjectRelease();
      }
    }
    v8 = 0;
    return v8 & 1;
  }
  v5 = v4;
  sub_18FB1F254(0, (unint64_t *)&unk_1EE189B38);
  v6 = sub_18FBCD28C();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_5;
    goto LABEL_7;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_5:
  v7 = v1;
  v8 = sub_18FB92878(v6, v7, (SEL *)&selRef_matchesWidgetDescriptor_);
  swift_bridgeObjectRelease();

  return v8 & 1;
}

Swift::Bool __swiftcall CHSWidgetExtensionProviderOptions.matches(widgetDescriptor:)(CHSWidgetDescriptor *widgetDescriptor)
{
  void *v1;
  id v2;
  id v3;

  v2 = objc_msgSend(v1, sel_widgetsPredicate);
  v3 = v2;
  if (v2)

  return v3 != 0;
}

Swift::Bool __swiftcall CHSWidgetExtensionProviderOptions.matches(controlDescriptor:)(CHSControlDescriptor *controlDescriptor)
{
  void *v1;
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = objc_msgSend(v1, sel_controlsPredicate);
  if (!v3)
    return 0;
  v4 = v3;
  if (!objc_msgSend(v3, sel_includeVisible)
    || -[CHSControlDescriptor hiddenControl](controlDescriptor, sel_hiddenControl))
  {
    if (objc_msgSend(v4, sel_includeHidden))
    {
      v5 = -[CHSControlDescriptor hiddenControl](controlDescriptor, sel_hiddenControl);

      if ((v5 & 1) != 0)
        return 1;
    }
    else
    {

    }
    return 0;
  }

  return 1;
}

Swift::Bool __swiftcall CHSWidgetExtensionProviderOptions.isSubset(of:)(CHSWidgetExtensionProviderOptions *of)
{
  void *v1;
  id v3;
  CHSWidgetDescriptorsPredicate *v4;
  id v5;
  CHSControlDescriptorsPredicate *v6;
  _BOOL4 v7;
  id v8;
  void *v9;
  CHSControlDescriptorsPredicate *v10;
  CHSControlDescriptorsPredicate *v11;
  unsigned __int8 v12;

  v3 = objc_msgSend(v1, sel_widgetsPredicate);

  if (v3)
  {
    v4 = -[CHSWidgetExtensionProviderOptions widgetsPredicate](of, sel_widgetsPredicate);

    if (!v4)
      goto LABEL_13;
  }
  v5 = objc_msgSend(v1, sel_controlsPredicate);

  if (v5)
  {
    v6 = -[CHSWidgetExtensionProviderOptions controlsPredicate](of, sel_controlsPredicate);

    if (!v6)
      goto LABEL_13;
  }
  if (!objc_msgSend(v1, sel_includeIntents)
    || (v7 = -[CHSWidgetExtensionProviderOptions includeIntents](of, sel_includeIntents)))
  {
    v8 = objc_msgSend(v1, sel_controlsPredicate);
    if (!v8)
      goto LABEL_16;
    v9 = v8;
    v10 = -[CHSWidgetExtensionProviderOptions controlsPredicate](of, sel_controlsPredicate);
    if (v10)
    {
      v11 = v10;
      if (objc_msgSend(v9, sel_includeVisible)
        && !-[CHSControlDescriptorsPredicate includeVisible](v11, sel_includeVisible))
      {

        LOBYTE(v7) = 0;
        return v7;
      }
      if (objc_msgSend(v9, sel_includeHidden))
      {
        v12 = -[CHSControlDescriptorsPredicate includeHidden](v11, sel_includeHidden);

        if ((v12 & 1) == 0)
        {
LABEL_13:
          LOBYTE(v7) = 0;
          return v7;
        }
LABEL_16:
        LOBYTE(v7) = 1;
        return v7;
      }

    }
    goto LABEL_16;
  }
  return v7;
}

uint64_t static CHSWidgetExtensionProviderOptions.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE18B718;
}

uint64_t static CHSWidgetExtensionProviderOptions.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE18B718 = a1;
  return result;
}

uint64_t (*static CHSWidgetExtensionProviderOptions.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall CHSWidgetExtensionProviderOptions.encode(with:)(NSCoder with)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v3 = objc_msgSend(v1, sel_controlsPredicate);
  v4 = (void *)sub_18FBCD0B8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v4);

  v5 = objc_msgSend(v1, sel_widgetsPredicate);
  v6 = (void *)sub_18FBCD0B8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v5, v6);

  v7 = objc_msgSend(v1, sel_includeIntents);
  v8 = (id)sub_18FBCD0B8();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v7, v8);

}

void __swiftcall CHSWidgetExtensionProviderOptions.init(coder:)(CHSWidgetExtensionProviderOptions_optional *__return_ptr retstr, NSCoder coder)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, coder.super.isa);

}

id CHSWidgetExtensionProviderOptions.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v2 = v1;
  type metadata accessor for CHSControlDescriptorsPredicate(0);
  v4 = (void *)sub_18FBCD3E8();
  type metadata accessor for CHSWidgetDescriptorsPredicate(0);
  v5 = (void *)sub_18FBCD3E8();
  v6 = (void *)sub_18FBCD0B8();
  v7 = objc_msgSend(a1, sel_decodeBoolForKey_, v6);

  v8 = objc_msgSend(v2, sel_initWithWidgetsPredicate_controlsPredicate_includeIntents_, v5, v4, v7);
  return v8;
}

id sub_18FB926E4(void *a1, void *a2)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  char v8;
  id v9;
  id v10;
  id v11;
  id result;
  void *v13;
  id v14;
  unsigned int v15;
  unsigned int v16;

  v4 = objc_msgSend(a1, sel_widgetsPredicate);
  v5 = objc_msgSend(a2, sel_widgetsPredicate);
  v6 = v5;
  if (v4)
  {
    if (v5)
    {
      type metadata accessor for CHSWidgetDescriptorsPredicate(0);
      v7 = v4;
      v8 = sub_18FBCD40C();

      if ((v8 & 1) == 0)
        return 0;
LABEL_7:
      v9 = objc_msgSend(a1, sel_controlsPredicate);
      v10 = objc_msgSend(a2, sel_controlsPredicate);
      v11 = v10;
      if (v9)
      {

        if (v11)
        {

          if (v9 == v11)
            goto LABEL_16;
        }
      }
      else
      {
        if (!v10)
          goto LABEL_16;

      }
      result = objc_msgSend(a1, sel_controlsPredicate);
      if (!result)
        return result;
      v13 = result;
      v14 = objc_msgSend(a2, sel_controlsPredicate);
      v15 = objc_msgSend(v13, sel_isEqual_, v14);

      if (!v15)
        return 0;
LABEL_16:
      v16 = objc_msgSend(a1, sel_includeIntents);
      return (id)(v16 ^ objc_msgSend(a2, sel_includeIntents) ^ 1);
    }

  }
  else
  {
    if (!v5)
      goto LABEL_7;

  }
  return 0;
}

id sub_18FB92878(unint64_t a1, void *a2, SEL *a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;

  if (a1 >> 62)
    goto LABEL_12;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_18FBCD628())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1940086C4](v7 - 4, a1) : *(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = objc_msgSend(a2, *a3, v8);

      if ((v11 & 1) == 0)
      {
        ++v7;
        if (v10 != v6)
          continue;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  v11 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t WidgetRendererSessionInfo.rendererBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetRendererSessionInfo.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

id WidgetRendererSessionInfo.widget.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

uint64_t WidgetRendererSessionInfo.isForeground.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t WidgetRendererSessionInfo.__allocating_init(rendererBundleIdentifier:sessionIdentifier:widget:isForeground:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_BYTE *)(result + 56) = a6;
  return result;
}

uint64_t WidgetRendererSessionInfo.init(rendererBundleIdentifier:sessionIdentifier:widget:isForeground:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a5;
  *(_BYTE *)(v6 + 56) = a6;
  return v6;
}

uint64_t WidgetRendererSessionInfo.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  WidgetRendererSessionInfo.init(from:)(a1);
  return v2;
}

_QWORD *WidgetRendererSessionInfo.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v14;
  _QWORD v15[2];
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B738);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB92D50();
  sub_18FBCD8A4();
  if (v2)
  {
    type metadata accessor for WidgetRendererSessionInfo();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v15[0]) = 0;
    v1[2] = sub_18FBCD6C4();
    v1[3] = v9;
    LOBYTE(v15[0]) = 1;
    v1[4] = sub_18FBCD6C4();
    v1[5] = v10;
    v16 = 2;
    sub_18FB909F4();
    sub_18FBCD6E8();
    v12 = v15[0];
    v11 = v15[1];
    sub_18FBCCEF0();
    sub_18FB1F254(0, &qword_1EE18B748);
    v1[6] = sub_18FBCCEC0();
    LOBYTE(v15[0]) = 3;
    v14 = sub_18FBCD6D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_18FB77A8C(v12, v11);
    *((_BYTE *)v3 + 56) = v14 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

unint64_t sub_18FB92D50()
{
  unint64_t result;

  result = qword_1EE18B740;
  if (!qword_1EE18B740)
  {
    result = MEMORY[0x19400954C](&unk_18FBD769C, &type metadata for WidgetRendererSessionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18B740);
  }
  return result;
}

uint64_t type metadata accessor for WidgetRendererSessionInfo()
{
  return objc_opt_self();
}

uint64_t sub_18FB92DB4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  unint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B750);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB92D50();
  sub_18FBCD8B0();
  LOBYTE(v12) = 0;
  sub_18FBCD748();
  if (v1)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  LOBYTE(v12) = 1;
  sub_18FBCD748();
  LOBYTE(v12) = 3;
  sub_18FBCD754();
  sub_18FBCCEF0();
  v7 = sub_18FBCCECC();
  v9 = v8;
  v12 = v7;
  v13 = v8;
  v11[15] = 2;
  sub_18FB90CEC();
  sub_18FBCD76C();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  return sub_18FB77A8C(v7, v9);
}

void sub_18FB92F74(char *a1)
{
  sub_18FBC83FC(*a1);
}

void sub_18FB92F80()
{
  char *v0;

  sub_18FBC8708(*v0);
}

void sub_18FB92F88(uint64_t a1)
{
  char *v1;

  sub_18FBC8B80(a1, *v1);
}

void sub_18FB92F90(uint64_t a1)
{
  char *v1;

  sub_18FBC8C2C(a1, *v1);
}

uint64_t sub_18FB92F98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB9357C();
  *a1 = result;
  return result;
}

uint64_t sub_18FB92FC4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_18FB92FFC + 4 * byte_18FBD74A0[*v0]))();
}

void sub_18FB92FFC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x800000018FBE6FB0;
}

void sub_18FB9301C(_QWORD *a1@<X8>)
{
  *a1 = 0x746567646977;
  a1[1] = 0xE600000000000000;
}

void sub_18FB93034(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "isForeground");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_18FB93058()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_18FB93090 + 4 * byte_18FBD74A4[*v0]))(0xD000000000000018, 0x800000018FBE6F90);
}

unint64_t sub_18FB93090()
{
  return 0xD000000000000011;
}

uint64_t sub_18FB930AC()
{
  return 0x746567646977;
}

uint64_t sub_18FB930C0()
{
  return 0x726765726F467369;
}

uint64_t sub_18FB930E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB9357C();
  *a1 = result;
  return result;
}

void sub_18FB93104(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_18FB93110()
{
  sub_18FB92D50();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB93138()
{
  sub_18FB92D50();
  return sub_18FBCD8C8();
}

uint64_t WidgetRendererSessionInfo.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t WidgetRendererSessionInfo.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

_QWORD *sub_18FB931C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  type metadata accessor for WidgetRendererSessionInfo();
  v5 = swift_allocObject();
  result = WidgetRendererSessionInfo.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_18FB93214(_QWORD *a1)
{
  return sub_18FB92DB4(a1);
}

uint64_t sub_18FB93238(uint64_t *a1, uint64_t *a2)
{
  return _s14ChronoServices25WidgetRendererSessionInfoC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s14ChronoServices25WidgetRendererSessionInfoC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  char v6;
  BOOL v7;
  char v8;

  v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v4 || (v5 = sub_18FBCD7C0(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v7 || (v8 = sub_18FBCD7C0(), v6 = 0, (v8 & 1) != 0))
    {
      sub_18FB1F254(0, qword_1EE189840);
      if ((sub_18FBCD40C() & 1) != 0)
        v6 = *(_BYTE *)(a1 + 56) ^ *(_BYTE *)(a2 + 56) ^ 1;
      else
        v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t method lookup function for WidgetRendererSessionInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetRendererSessionInfo.__allocating_init(rendererBundleIdentifier:sessionIdentifier:widget:isForeground:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of WidgetRendererSessionInfo.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of WidgetRendererSessionInfo.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t getEnumTagSinglePayload for WidgetRendererSessionInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetRendererSessionInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_18FB93424 + 4 * byte_18FBD74AD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_18FB93458 + 4 * byte_18FBD74A8[v4]))();
}

uint64_t sub_18FB93458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB93460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FB93468);
  return result;
}

uint64_t sub_18FB93474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FB9347CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_18FB93480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB93488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetRendererSessionInfo.CodingKeys()
{
  return &type metadata for WidgetRendererSessionInfo.CodingKeys;
}

unint64_t sub_18FB934A8()
{
  unint64_t result;

  result = qword_1EE18B758;
  if (!qword_1EE18B758)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7674, &type metadata for WidgetRendererSessionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18B758);
  }
  return result;
}

unint64_t sub_18FB934F0()
{
  unint64_t result;

  result = qword_1EE18B760;
  if (!qword_1EE18B760)
  {
    result = MEMORY[0x19400954C](&unk_18FBD75AC, &type metadata for WidgetRendererSessionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18B760);
  }
  return result;
}

unint64_t sub_18FB93538()
{
  unint64_t result;

  result = qword_1EE18B768;
  if (!qword_1EE18B768)
  {
    result = MEMORY[0x19400954C](&unk_18FBD75D4, &type metadata for WidgetRendererSessionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18B768);
  }
  return result;
}

uint64_t sub_18FB9357C()
{
  unint64_t v0;

  v0 = sub_18FBCD688();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t CHSExtensionIdentity.__extensionBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSExtensionIdentity.extensionBundleIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t CHSExtensionIdentity.extensionBundleIdentifier.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(v1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  *v4 = v2;
  v4[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t (*CHSExtensionIdentity.extensionBundleIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t CHSExtensionIdentity.__containerBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  if (!v1[1])
    return 0;
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSExtensionIdentity.containerBundleIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t CHSExtensionIdentity.containerBundleIdentifier.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(v1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  *v4 = v2;
  v4[1] = v3;
  return swift_bridgeObjectRelease();
}

uint64_t (*CHSExtensionIdentity.containerBundleIdentifier.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t CHSExtensionIdentity.__deviceIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  if (v1[1])
    v2 = *v1;
  else
    v2 = 0;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSExtensionIdentity.deviceIdentifier.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSExtensionIdentity.deviceIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*CHSExtensionIdentity.deviceIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL CHSExtensionIdentity.isRemote.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier;
  swift_beginAccess();
  return *(_QWORD *)(v1 + 8) != 0;
}

char *CHSExtensionIdentity.init(extensionBundleIdentifier:containerBundleIdentifier:deviceIdentifier:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;

  v6 = *a1;
  v7 = a1[1];
  v8 = *a2;
  v9 = a2[1];
  v10 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v11 = &v10[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
  swift_beginAccess();
  *(_QWORD *)v11 = v6;
  *((_QWORD *)v11 + 1) = v7;
  v12 = v10;
  swift_bridgeObjectRelease();
  v13 = &v12[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  *(_QWORD *)v13 = v8;
  *((_QWORD *)v13 + 1) = v9;
  swift_bridgeObjectRelease();
  v14 = &v12[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
  swift_beginAccess();
  *(_QWORD *)v14 = a3;
  *((_QWORD *)v14 + 1) = a4;

  swift_bridgeObjectRelease();
  return v12;
}

uint64_t CHSExtensionIdentity.description.getter()
{
  uint64_t v0;
  char *v2;

  CHSExtensionIdentity.token.getter(&v2);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1E9FC((unint64_t *)&qword_1EE18A150, (uint64_t *)&unk_1EE18A140, MEMORY[0x1E0DEAF20]);
  v0 = sub_18FBCD070();
  swift_bridgeObjectRelease_n();
  return v0;
}

unint64_t sub_18FB93C8C(unsigned __int8 a1)
{
  unint64_t result;

  result = 0xD000000000000019;
  if (a1 >= 2u)
    return 0xD000000000000010;
  return result;
}

uint64_t sub_18FB93CE8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_18FBC7ED0(*a1, *a2);
}

uint64_t sub_18FB93CF4()
{
  return sub_18FBC87D8();
}

uint64_t sub_18FB93CFC()
{
  return sub_18FBC8B04();
}

uint64_t sub_18FB93D04()
{
  return sub_18FBC8E58();
}

uint64_t sub_18FB93D0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB9482C();
  *a1 = result;
  return result;
}

unint64_t sub_18FB93D38@<X0>(unint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_18FB93C8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_18FB93D60()
{
  unsigned __int8 *v0;

  return sub_18FB93C8C(*v0);
}

uint64_t sub_18FB93D68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB9482C();
  *a1 = result;
  return result;
}

uint64_t sub_18FB93D8C()
{
  sub_18FB944F8();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB93DB4()
{
  sub_18FB944F8();
  return sub_18FBCD8C8();
}

uint64_t CHSExtensionIdentity.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 *v11;
  __int128 *v12;
  _BYTE v14[16];
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD9D480);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB944F8();
  sub_18FBCD8B0();
  v9 = (uint64_t *)(v3 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  v10 = v9[1];
  v17 = *v9;
  v18 = v10;
  LOBYTE(v16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD9D490);
  sub_18FB1E9FC(&qword_1ECD9D458, &qword_1ECD9D490, (uint64_t)&protocol conformance descriptor for TypedIdentifier<A>);
  sub_18FBCD76C();
  if (!v2)
  {
    v11 = (__int128 *)(v3 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
    swift_beginAccess();
    v16 = *v11;
    LOBYTE(v15) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD9D488);
    sub_18FB9453C();
    sub_18FBCD76C();
    v12 = (__int128 *)(v3 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
    swift_beginAccess();
    v15 = *v12;
    v14[15] = 2;
    sub_18FB945B8();
    sub_18FBCD76C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

char *CHSExtensionIdentity.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A068);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB944F8();
  sub_18FBCD8A4();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD9D490);
    v23 = 0;
    sub_18FB1E9FC(&qword_1EE18A040, &qword_1ECD9D490, (uint64_t)&protocol conformance descriptor for TypedIdentifier<A>);
    sub_18FBCD6E8();
    v8 = v25;
    v26 = v24;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ECD9D4F0);
    v23 = 1;
    sub_18FB1E9FC(&qword_1EE18A038, qword_1ECD9D4F0, (uint64_t)&protocol conformance descriptor for TypedIdentifier<A>);
    sub_18FBCD6B8();
    v22 = v8;
    v10 = v24;
    v9 = v25;
    v23 = 2;
    sub_18FB945FC();
    sub_18FBCD6E8();
    v20 = v25;
    v21 = v24;
    v12 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    v13 = &v12[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    v19 = v10;
    v14 = v22;
    *(_QWORD *)v13 = v26;
    *((_QWORD *)v13 + 1) = v14;
    v7 = v12;
    swift_bridgeObjectRelease();
    v15 = &v7[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    *(_QWORD *)v15 = v19;
    *((_QWORD *)v15 + 1) = v9;
    swift_bridgeObjectRelease();
    v16 = &v7[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    v17 = v20;
    *(_QWORD *)v16 = v21;
    *((_QWORD *)v16 + 1) = v17;

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

char *sub_18FB94310@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = CHSExtensionIdentity.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_18FB94338(_QWORD *a1)
{
  return CHSExtensionIdentity.encode(to:)(a1);
}

uint64_t static CHSExtensionIdentity.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v8;

  v3 = (uint64_t *)(a1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = (_QWORD *)(a2 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  if (v4 == *v6 && v5 == v6[1])
    v8 = 0;
  else
    v8 = sub_18FBCD7C0();
  return v8 & 1;
}

uint64_t sub_18FB943F0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v8;

  v2 = *a2;
  v3 = (uint64_t *)(*a1 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  v6 = (_QWORD *)(v2 + OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier);
  swift_beginAccess();
  if (v4 == *v6 && v5 == v6[1])
    v8 = 0;
  else
    v8 = sub_18FBCD7C0();
  return v8 & 1;
}

BOOL CHSExtensionIdentity.isContainerIdentifierValid.getter()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)(v0 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  v2 = v1[1];
  if (!v2)
    return 0;
  if ((v2 & 0x2000000000000000) != 0)
    v3 = HIBYTE(v2) & 0xF;
  else
    v3 = *v1 & 0xFFFFFFFFFFFFLL;
  return v3 != 0;
}

unint64_t sub_18FB944F8()
{
  unint64_t result;

  result = qword_1ECD9D4D8;
  if (!qword_1ECD9D4D8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD78E0, &_s10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4D8);
  }
  return result;
}

unint64_t sub_18FB9453C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ECD9D450;
  if (!qword_1ECD9D450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ECD9D488);
    v2 = sub_18FB1E9FC(&qword_1ECD9D448, qword_1ECD9D4F0, (uint64_t)&protocol conformance descriptor for TypedIdentifier<A>);
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ECD9D450);
  }
  return result;
}

unint64_t sub_18FB945B8()
{
  unint64_t result;

  result = qword_1ECD9D460;
  if (!qword_1ECD9D460)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for DeviceIdentifier, &type metadata for DeviceIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ECD9D460);
  }
  return result;
}

unint64_t sub_18FB945FC()
{
  unint64_t result;

  result = qword_1EE18A048;
  if (!qword_1EE18A048)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for DeviceIdentifier, &type metadata for DeviceIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EE18A048);
  }
  return result;
}

unint64_t sub_18FB94644()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EE18B788;
  if (!qword_1EE18B788)
  {
    v1 = type metadata accessor for CHSExtensionIdentity();
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&qword_1EE18B788);
  }
  return result;
}

uint64_t _s10CodingKeysOwst_2(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_18FB946D4 + 4 * byte_18FBD7715[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18FB94708 + 4 * byte_18FBD7710[v4]))();
}

uint64_t sub_18FB94708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB94710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FB94718);
  return result;
}

uint64_t sub_18FB94724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FB9472CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_18FB94730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB94738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_2()
{
  return &_s10CodingKeysON_2;
}

unint64_t sub_18FB94758()
{
  unint64_t result;

  result = qword_1EE18B790;
  if (!qword_1EE18B790)
  {
    result = MEMORY[0x19400954C](&unk_18FBD78B8, &_s10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1EE18B790);
  }
  return result;
}

unint64_t sub_18FB947A0()
{
  unint64_t result;

  result = qword_1ECD9D4E8;
  if (!qword_1ECD9D4E8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD77F0, &_s10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4E8);
  }
  return result;
}

unint64_t sub_18FB947E8()
{
  unint64_t result;

  result = qword_1ECD9D4E0;
  if (!qword_1ECD9D4E0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7818, &_s10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1ECD9D4E0);
  }
  return result;
}

uint64_t sub_18FB9482C()
{
  unint64_t v0;

  v0 = sub_18FBCD688();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t TaskPriority.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_18FB948AC + 4 * byte_18FBD7930[*v0]))(0xD000000000000019, 0x800000018FBE89E0);
}

unint64_t sub_18FB948AC()
{
  return 0xD000000000000017;
}

void sub_18FB948EC()
{
  qword_1EE187E08 = (uint64_t)&unk_1E2A57678;
}

uint64_t static TaskPriority.all.getter()
{
  if (qword_1EE187E10 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

ChronoServices::TaskPriority_optional __swiftcall TaskPriority.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if ((unint64_t)rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (ChronoServices::TaskPriority_optional)rawValue;
}

uint64_t TaskPriority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_18FB94960()
{
  unint64_t result;

  result = qword_1EE187E18;
  if (!qword_1EE187E18)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for TaskPriority, &type metadata for TaskPriority);
    atomic_store(result, (unint64_t *)&qword_1EE187E18);
  }
  return result;
}

ChronoServices::TaskPriority_optional sub_18FB949A4(Swift::Int *a1)
{
  return TaskPriority.init(rawValue:)(*a1);
}

uint64_t sub_18FB949B0()
{
  sub_18FB94B24();
  return sub_18FBCD25C();
}

uint64_t sub_18FB94A0C()
{
  sub_18FB94B24();
  return sub_18FBCD214();
}

uint64_t storeEnumTagSinglePayload for TaskPriority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_18FB94AA4 + 4 * byte_18FBD7939[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_18FB94AD8 + 4 * byte_18FBD7934[v4]))();
}

uint64_t sub_18FB94AD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB94AE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FB94AE8);
  return result;
}

uint64_t sub_18FB94AF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FB94AFCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_18FB94B00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FB94B08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TaskPriority()
{
  return &type metadata for TaskPriority;
}

unint64_t sub_18FB94B24()
{
  unint64_t result;

  result = qword_1EE189A98;
  if (!qword_1EE189A98)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for TaskPriority, &type metadata for TaskPriority);
    atomic_store(result, (unint64_t *)&qword_1EE189A98);
  }
  return result;
}

uint64_t sub_18FB94B68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_18FB94B70(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_18FB94B78(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_18FB94B80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_18FB94B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t sub_18FB94BA0()
{
  uint64_t v0;

  MEMORY[0x19400960C](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

id CHSRemoteActivityLaunchController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CHSRemoteActivityLaunchController.init()()
{
  id v0;
  objc_class *v1;
  char *v2;
  id v3;
  objc_super v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v1 = (objc_class *)type metadata accessor for CHSRemoteActivityLaunchController();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC14ChronoServices33CHSRemoteActivityLaunchController_connection] = v0;
  v5.receiver = v2;
  v5.super_class = v1;
  v3 = objc_msgSendSuper2(&v5, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t type metadata accessor for CHSRemoteActivityLaunchController()
{
  return objc_opt_self();
}

void sub_18FB94D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189DE0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(id *)(v5 + OBJC_IVAR____TtC14ChronoServices33CHSRemoteActivityLaunchController_connection);
  v11 = (void *)sub_18FBCD0B8();
  v12 = (void *)sub_18FBCD0B8();
  sub_18FB94EA0(a5, (uint64_t)v9);
  v13 = sub_18FBCCE24();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) != 1)
  {
    v15 = (void *)sub_18FBCCD94();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
  }
  objc_msgSend(v10, sel_launchLiveActivityWithID_deviceID_url_, v11, v12, v15);

}

uint64_t sub_18FB94EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id CHSRemoteActivityLaunchController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CHSRemoteActivityLaunchController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for CHSRemoteActivityLaunchController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CHSRemoteActivityLaunchController.launchAppOnRemoteDevice(_:with:url:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

ChronoServices::ControlsDidChangeXPCData __swiftcall ControlsDidChangeXPCData.init(modifiedControls:)(ChronoServices::ControlsDidChangeXPCData modifiedControls)
{
  ChronoServices::ControlsDidChangeXPCData *v1;

  v1->modifiedControls._rawValue = modifiedControls.modifiedControls._rawValue;
  return modifiedControls;
}

unint64_t sub_18FB94F58()
{
  return 0xD000000000000010;
}

uint64_t sub_18FB94F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_18FB95544(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_18FB94F9C()
{
  sub_18FB95114();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB94FC4()
{
  sub_18FB95114();
  return sub_18FBCD8C8();
}

uint64_t ControlsDidChangeXPCData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188080);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB95114();
  sub_18FBCD8B0();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189E60);
  sub_18FB952DC((unint64_t *)&unk_1EE187F88, &qword_1EE1899E8, (uint64_t)&protocol conformance descriptor for CHSControlIdentity, MEMORY[0x1E0DEAF10]);
  sub_18FBCD76C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_18FB95114()
{
  unint64_t result;

  result = qword_1EE189E48;
  if (!qword_1EE189E48)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7C6C, &type metadata for ControlsDidChangeXPCData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE189E48);
  }
  return result;
}

unint64_t sub_18FB95158()
{
  unint64_t result;

  result = qword_1EE189E70;
  if (!qword_1EE189E70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE189E70);
  }
  return result;
}

uint64_t ControlsDidChangeXPCData.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189B68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB95114();
  sub_18FBCD8A4();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189E60);
    sub_18FB952DC(&qword_1EE189B60, &qword_1EE189E68, (uint64_t)&protocol conformance descriptor for CHSControlIdentity, MEMORY[0x1E0DEAF40]);
    sub_18FBCD6E8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_18FB952DC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE189E60);
    v10 = sub_18FB95358(a2, a3);
    result = MEMORY[0x19400954C](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FB95358(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_18FB95158();
    result = MEMORY[0x19400954C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FB95398@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return ControlsDidChangeXPCData.init(from:)(a1, a2);
}

uint64_t sub_18FB953AC(_QWORD *a1)
{
  return ControlsDidChangeXPCData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for ControlsDidChangeXPCData()
{
  return &type metadata for ControlsDidChangeXPCData;
}

uint64_t storeEnumTagSinglePayload for ControlsDidChangeXPCData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_18FB95410 + 4 * byte_18FBD7B20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_18FB95430 + 4 * byte_18FBD7B25[v4]))();
}

_BYTE *sub_18FB95410(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_18FB95430(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB95438(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB95440(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB95448(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB95450(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ControlsDidChangeXPCData.CodingKeys()
{
  return &type metadata for ControlsDidChangeXPCData.CodingKeys;
}

unint64_t sub_18FB95470()
{
  unint64_t result;

  result = qword_1EE18B7A0;
  if (!qword_1EE18B7A0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7C44, &type metadata for ControlsDidChangeXPCData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18B7A0);
  }
  return result;
}

unint64_t sub_18FB954B8()
{
  unint64_t result;

  result = qword_1EE189E58;
  if (!qword_1EE189E58)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7BB4, &type metadata for ControlsDidChangeXPCData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE189E58);
  }
  return result;
}

unint64_t sub_18FB95500()
{
  unint64_t result;

  result = qword_1EE189E50;
  if (!qword_1EE189E50)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7BDC, &type metadata for ControlsDidChangeXPCData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE189E50);
  }
  return result;
}

uint64_t sub_18FB95544(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000010 && a2 == 0x800000018FBE8A80)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_18FBCD7C0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_18FB955C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_18FB95624()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_18FB95658(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_18FB9569C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ControlSessionSubscriptionResponse.__allocating_init(archiveSandboxExtension:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  swift_release();
  return v2;
}

uint64_t ControlSessionSubscriptionResponse.init(archiveSandboxExtension:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = 0;
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  swift_release();
  return v1;
}

unint64_t sub_18FB9579C()
{
  return 0xD000000000000017;
}

uint64_t sub_18FB957B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_18FB95EB0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_18FB957E0()
{
  sub_18FB95998();
  return sub_18FBCD8BC();
}

uint64_t sub_18FB95808()
{
  sub_18FB95998();
  return sub_18FBCD8C8();
}

uint64_t ControlSessionSubscriptionResponse.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ControlSessionSubscriptionResponse.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_18FB95870(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188088);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB95998();
  sub_18FBCD8B0();
  swift_beginAccess();
  v9 = *(_QWORD *)(v2 + 16);
  type metadata accessor for SandboxExtension();
  sub_18FB95BB0(&qword_1EE187F68, (uint64_t)&protocol conformance descriptor for SandboxExtension);
  sub_18FBCD73C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_18FB95998()
{
  unint64_t result;

  result = qword_1EE1899C8;
  if (!qword_1EE1899C8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7E3C, &type metadata for ControlSessionSubscriptionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1899C8);
  }
  return result;
}

uint64_t ControlSessionSubscriptionResponse.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ControlSessionSubscriptionResponse.init(from:)(a1);
  return v2;
}

uint64_t ControlSessionSubscriptionResponse.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD v12[6];

  v3 = v1;
  v12[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189710);
  v5 = *(_QWORD *)(v12[0] - 8);
  MEMORY[0x1E0C80A78](v12[0]);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = 0;
  v8 = (_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FB95998();
  sub_18FBCD8A4();
  if (!v2)
  {
    type metadata accessor for SandboxExtension();
    sub_18FB95BB0((unint64_t *)&unk_1EE1896B8, (uint64_t)&protocol conformance descriptor for SandboxExtension);
    v9 = v12[0];
    sub_18FBCD6B8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v9);
    v11 = v12[5];
    swift_beginAccess();
    *v8 = v11;
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

uint64_t sub_18FB95BB0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SandboxExtension();
    result = MEMORY[0x19400954C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18FB95BF0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for ControlSessionSubscriptionResponse();
  v5 = swift_allocObject();
  result = ControlSessionSubscriptionResponse.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_18FB95C44(_QWORD *a1)
{
  return sub_18FB95870(a1);
}

uint64_t sub_18FB95C64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_retain();
}

uint64_t type metadata accessor for ControlSessionSubscriptionResponse()
{
  return objc_opt_self();
}

uint64_t method lookup function for ControlSessionSubscriptionResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.archiveSandboxExtension.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.archiveSandboxExtension.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.archiveSandboxExtension.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.__allocating_init(archiveSandboxExtension:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionResponse.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for ControlSessionSubscriptionResponse.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_18FB95D7C + 4 * byte_18FBD7CC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_18FB95D9C + 4 * byte_18FBD7CC5[v4]))();
}

_BYTE *sub_18FB95D7C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_18FB95D9C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB95DA4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB95DAC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FB95DB4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FB95DBC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ControlSessionSubscriptionResponse.CodingKeys()
{
  return &type metadata for ControlSessionSubscriptionResponse.CodingKeys;
}

unint64_t sub_18FB95DDC()
{
  unint64_t result;

  result = qword_1EE18B7A8;
  if (!qword_1EE18B7A8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7E14, &type metadata for ControlSessionSubscriptionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18B7A8);
  }
  return result;
}

unint64_t sub_18FB95E24()
{
  unint64_t result;

  result = qword_1EE1899D8;
  if (!qword_1EE1899D8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7D84, &type metadata for ControlSessionSubscriptionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1899D8);
  }
  return result;
}

unint64_t sub_18FB95E6C()
{
  unint64_t result;

  result = qword_1EE1899D0;
  if (!qword_1EE1899D0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD7DAC, &type metadata for ControlSessionSubscriptionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1899D0);
  }
  return result;
}

uint64_t sub_18FB95EB0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000017 && a2 == 0x800000018FBE8AE0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_18FBCD7C0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t CHSWidgetDescriptorsPredicate.hash.getter()
{
  sub_18FBCD898();
  return sub_18FBCD880();
}

uint64_t CHSWidgetDescriptorsPredicate.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE v4[24];
  uint64_t v5;

  v1 = sub_18FB1FA14(a1, (uint64_t)v4);
  if (v5)
  {
    type metadata accessor for CHSWidgetDescriptorsPredicate(v1);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return 1;
    }
  }
  else
  {
    sub_18FB1F7C4((uint64_t)v4);
  }
  return 0;
}

uint64_t type metadata accessor for CHSWidgetDescriptorsPredicate(uint64_t a1)
{
  return sub_18FB1F254(a1, (unint64_t *)&unk_1EE189E28);
}

id CHSWidgetDescriptorsPredicate.init()()
{
  objc_super v1;

  v1.super_class = (Class)CHSWidgetDescriptorsPredicate;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t static CHSWidgetDescriptorsPredicate.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE18B7B0;
}

uint64_t static CHSWidgetDescriptorsPredicate.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE18B7B0 = a1;
  return result;
}

uint64_t (*static CHSWidgetDescriptorsPredicate.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id CHSWidgetDescriptorsPredicate.init(coder:)(void *a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_init);

  return v3;
}

uint64_t CHSControlDescriptorsPredicate.includeHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSControlDescriptorsPredicate_includeHidden);
}

uint64_t CHSControlDescriptorsPredicate.includeVisible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CHSControlDescriptorsPredicate_includeVisible);
}

void __swiftcall CHSControlDescriptorsPredicate.init(includingVisible:hidden:)(CHSControlDescriptorsPredicate *__return_ptr retstr, Swift::Bool includingVisible, Swift::Bool hidden)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initIncludingVisible_hidden_, includingVisible, hidden);
}

id CHSControlDescriptorsPredicate.init(includingVisible:hidden:)(char a1, char a2)
{
  uint64_t v2;
  objc_super v4;

  *(_BYTE *)(v2 + OBJC_IVAR___CHSControlDescriptorsPredicate_includeVisible) = a1;
  *(_BYTE *)(v2 + OBJC_IVAR___CHSControlDescriptorsPredicate_includeHidden) = a2;
  v4.super_class = (Class)CHSControlDescriptorsPredicate;
  return objc_msgSendSuper2(&v4, sel_init);
}

id CHSControlDescriptorsPredicate.init(includingVisible:hidden:extensionIdentities:)(char a1, char a2)
{
  swift_bridgeObjectRelease();
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initIncludingVisible_hidden_, a1 & 1, a2 & 1);
}

id CHSControlDescriptorsPredicate.copy(with:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  a2[3] = type metadata accessor for CHSControlDescriptorsPredicate(a1);
  *a2 = v4;
  return v4;
}

uint64_t type metadata accessor for CHSControlDescriptorsPredicate(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE189E38);
}

uint64_t CHSControlDescriptorsPredicate.hash.getter()
{
  void *v0;

  sub_18FBCD898();
  objc_msgSend(v0, sel_includeHidden);
  sub_18FBCD868();
  objc_msgSend(v0, sel_includeVisible);
  sub_18FBCD868();
  return sub_18FBCD880();
}

uint64_t CHSControlDescriptorsPredicate.isEqual(_:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v5;
  unsigned int v6;
  void *v7;
  _BYTE v8[24];
  uint64_t v9;

  v2 = sub_18FB1FA14(a1, (uint64_t)v8);
  if (v9)
  {
    type metadata accessor for CHSControlDescriptorsPredicate(v2);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if (v7 == v1)
      {

        return 1;
      }
      v3 = objc_msgSend(v1, sel_includeHidden);
      if (v3 == objc_msgSend(v7, sel_includeHidden))
      {
        v5 = objc_msgSend(v1, sel_includeVisible);
        v6 = objc_msgSend(v7, sel_includeVisible);

        return v5 ^ v6 ^ 1;
      }

    }
  }
  else
  {
    sub_18FB1F7C4((uint64_t)v8);
  }
  return 0;
}

void CHSControlDescriptorsPredicate.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t static CHSControlDescriptorsPredicate.supportsSecureCoding.getter()
{
  swift_beginAccess();
  return byte_1EE18B7B1;
}

uint64_t static CHSControlDescriptorsPredicate.supportsSecureCoding.setter(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EE18B7B1 = a1;
  return result;
}

uint64_t (*static CHSControlDescriptorsPredicate.supportsSecureCoding.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall CHSControlDescriptorsPredicate.encode(with:)(NSCoder with)
{
  void *v1;
  id v3;
  void *v4;
  id v5;
  id v6;

  v3 = objc_msgSend(v1, sel_includeVisible);
  v4 = (void *)sub_18FBCD0B8();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v3, v4);

  v5 = objc_msgSend(v1, sel_includeHidden);
  v6 = (id)sub_18FBCD0B8();
  -[objc_class encodeBool:forKey:](with.super.isa, sel_encodeBool_forKey_, v5, v6);

}

id _sSo29CHSWidgetDescriptorsPredicateC14ChronoServicesE5coderABSgSo7NSCoderC_tcfC_0(void *a1)
{
  id v2;

  v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, a1);

  return v2;
}

id CHSControlDescriptorsPredicate.init(coder:)(void *a1)
{
  void *v1;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v3 = (void *)sub_18FBCD0B8();
  v4 = objc_msgSend(a1, sel_decodeBoolForKey_, v3);

  v5 = (void *)sub_18FBCD0B8();
  v6 = objc_msgSend(a1, sel_decodeBoolForKey_, v5);

  v7 = objc_msgSend(v1, sel_initIncludingVisible_hidden_, v4, v6);
  return v7;
}

uint64_t CHSControlDescriptorsPredicate.description.getter()
{
  void *v0;

  sub_18FBCD52C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_includeVisible);
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  objc_msgSend(v0, sel_includeHidden);
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  return 0x656C62697369765BLL;
}

uint64_t static KeybagStateProviderFactory.newKeybagStateProvider()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  if (qword_1EE189C68 != -1)
    swift_once();
  v2 = qword_1EE192808;
  a1[3] = type metadata accessor for DefaultKeybagStateProvider();
  a1[4] = (uint64_t)&off_1E2A58620;
  *a1 = v2;
  return swift_retain();
}

uint64_t KeybagStateProviderFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t KeybagStateProviderFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeybagStateProviderFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for KeybagStateProviderFactory()
{
  return swift_lookUpClassMethod();
}

id sub_18FB96F00()
{
  objc_class *v0;
  id result;

  v0 = (objc_class *)type metadata accessor for ControlsClient();
  result = objc_msgSend(objc_allocWithZone(v0), sel_init);
  qword_1EE189B18 = (uint64_t)v0;
  unk_1EE189B20 = &protocol witness table for ControlsClient;
  qword_1EE189B00 = (uint64_t)result;
  return result;
}

id ControlsClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t static ControlsClientFactory.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EE189B28 != -1)
    swift_once();
  swift_beginAccess();
  return sub_18FB6E65C((uint64_t)&qword_1EE189B00, a1);
}

uint64_t static ControlsClientFactory.shared.setter(uint64_t *a1)
{
  if (qword_1EE189B28 != -1)
    swift_once();
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(&qword_1EE189B00, a1);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t (*static ControlsClientFactory.shared.modify())()
{
  if (qword_1EE189B28 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ControlsClientFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ControlsClientFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id ControlsClient._calloutQueue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue);
}

uint64_t sub_18FB9725C()
{
  return sub_18FB972DC(&OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher);
}

uint64_t sub_18FB97270(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher) = a1;
  return swift_release();
}

uint64_t (*sub_18FB97288(uint64_t *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_18FB9725C();
  return sub_18FB972BC;
}

uint64_t sub_18FB972BC(_QWORD *a1, uint64_t a2)
{
  return sub_18FB973E0(a1, a2, &OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher);
}

uint64_t sub_18FB972C8()
{
  return sub_18FB972DC(&OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher);
}

uint64_t sub_18FB972DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + *a1);
  if (v3)
  {
    v4 = v3;
  }
  else
  {
    v5 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189A80);
    sub_18FB1E9FC((unint64_t *)&unk_1EE189828, &qword_1EE189A80, MEMORY[0x1E0C95F48]);
    v4 = sub_18FBCCFD4();
    *(_QWORD *)(v5 + v2) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_18FB97388(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher) = a1;
  return swift_release();
}

uint64_t (*sub_18FB973A0(uint64_t *a1))(_QWORD *a1, uint64_t a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_18FB972C8();
  return sub_18FB973D4;
}

uint64_t sub_18FB973D4(_QWORD *a1, uint64_t a2)
{
  return sub_18FB973E0(a1, a2, &OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher);
}

uint64_t sub_18FB973E0(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  *(_QWORD *)(a1[1] + *a3) = *a1;
  return swift_release();
}

char *ControlsClient.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  objc_class *v19;
  char *v20;
  const char *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  NSObject *v26;
  _QWORD v28[5];
  uint64_t v29;
  _QWORD aBlock[6];
  objc_super v31;

  v1 = sub_18FBCD3B8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = v1;
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18FBCD3A0();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_18FBCD034();
  MEMORY[0x1E0C80A78](v8);
  v29 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue;
  v28[3] = sub_18FB1F254(0, (unint64_t *)&qword_1EE18A1A0);
  v9 = v0;
  sub_18FBCD01C();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  v28[1] = sub_18FB203A8((unint64_t *)&qword_1EE18A190, v7, MEMORY[0x1E0DEF828]);
  v28[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A170);
  v28[2] = sub_18FB1E9FC((unint64_t *)&qword_1EE18A180, (uint64_t *)&unk_1EE18A170, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  v10 = *MEMORY[0x1E0DEF8D8];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v11(v5, v10, v3);
  *(_QWORD *)(v28[4] + v29) = sub_18FBCD3DC();
  v29 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue;
  sub_18FBCD01C();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_18FBCD484();
  v11(v5, v10, v3);
  *(_QWORD *)&v9[v29] = sub_18FBCD3DC();
  *(_QWORD *)&v9[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection] = 0;
  v12 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v9[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_controlHosts] = MEMORY[0x1E0DEE9E0];
  v13 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock;
  type metadata accessor for UnfairLock();
  v14 = swift_allocObject();
  v15 = (_DWORD *)swift_slowAlloc();
  *v15 = 0;
  *(_QWORD *)(v14 + 16) = v15;
  *(_QWORD *)&v9[v13] = v14;
  *(_QWORD *)&v9[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions] = v12;
  *(_QWORD *)&v9[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_sandboxExtensions] = v12;
  *(_OWORD *)&v9[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData] = xmmword_18FBD72B0;
  v16 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue_liveControlsDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189A80);
  swift_allocObject();
  *(_QWORD *)&v9[v16] = sub_18FBCCFB0();
  *(_QWORD *)&v9[OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher] = 0;
  v17 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue_previewControlsDidChangePublisher;
  swift_allocObject();
  *(_QWORD *)&v9[v17] = sub_18FBCCFB0();
  *(_QWORD *)&v9[OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher] = 0;
  v18 = &v9[OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;

  v19 = (objc_class *)type metadata accessor for ControlsClient();
  v31.receiver = v9;
  v31.super_class = v19;
  v20 = (char *)objc_msgSendSuper2(&v31, sel_init);
  v21 = CHSChronodStartupNotification;
  v22 = *(void **)&v20[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v20;
  aBlock[4] = sub_18FB97FDC;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB983AC;
  aBlock[3] = &block_descriptor_8;
  v24 = _Block_copy(aBlock);
  v25 = v20;
  v26 = v22;
  swift_release();
  swift_beginAccess();
  notify_register_dispatch(v21, (int *)&unk_1EE1927D0, v26, v24);
  swift_endAccess();

  _Block_release(v24);
  return v25;
}

uint64_t type metadata accessor for ControlsClient()
{
  return objc_opt_self();
}

uint64_t sub_18FB978BC(uint64_t a1, char *a2)
{
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  __int128 aBlock;
  __int128 v50;
  void (*v51)();
  uint64_t v52;
  unint64_t v53;

  v3 = (char *)sub_18FBCD004();
  v46 = *((_QWORD *)v3 - 1);
  MEMORY[0x1E0C80A78](v3);
  v5 = (unint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18FBCD034();
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  if (qword_1EE189B30 == -1)
    goto LABEL_2;
  while (1)
  {
    swift_once();
LABEL_2:
    v9 = sub_18FBCCF5C();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EE1927D8);
    v10 = sub_18FBCCF44();
    v11 = sub_18FBCD370();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_18FB18000, v10, v11, "Detected chronod relaunch.", v12, 2u);
      MEMORY[0x19400960C](v12, -1, -1);
    }

    v53 = MEMORY[0x1E0DEE9E0];
    v13 = *(_QWORD *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock];
    v14 = *(os_unfair_lock_s **)(v13 + 16);
    swift_retain();
    os_unfair_lock_lock(v14);
    sub_18FB97FE4((uint64_t)a2, &v53);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
    swift_release();
    BSDispatchQueueAssert();
    sub_18FBA0368();
    v15 = *(void **)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection];
    if (v15)
    {
      v16 = v15;
      if (objc_msgSend(v16, sel_remoteTarget))
      {
        sub_18FBCD478();
        swift_unknownObjectRelease();

        sub_18FB1F7C4((uint64_t)&aBlock);
      }
      else
      {
        aBlock = 0u;
        v50 = 0u;
        sub_18FB1F7C4((uint64_t)&aBlock);
        objc_msgSend(v16, sel_activate);

      }
    }
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a2;
    v51 = sub_18FBA48F0;
    v52 = v17;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v50 = sub_18FB858D4;
    *((_QWORD *)&v50 + 1) = &block_descriptor_316;
    v18 = _Block_copy(&aBlock);
    v19 = a2;
    sub_18FBCD010();
    v48 = (char *)MEMORY[0x1E0DEE9D8];
    a2 = (char *)sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
    sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
    sub_18FBCD484();
    MEMORY[0x194008544](0, v8, v5, v18);
    _Block_release(v18);
    (*(void (**)(unint64_t, char *))(v46 + 8))(v5, v3);
    (*(void (**)(char *, int64_t))(v44 + 8))(v8, v45);
    swift_release();
    v3 = v19;
    v20 = sub_18FBCCF44();
    v21 = sub_18FBCD370();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v22 = 134217984;
      v23 = (uint64_t *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions];
      swift_beginAccess();
      v24 = *v23;
      if ((v24 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v8 = (char *)sub_18FBCD4B4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v8 = *(char **)(v24 + 16);
      }
      v48 = v8;
      sub_18FBCD454();

      _os_log_impl(&dword_18FB18000, v20, v21, "Resubscribing to %ld active sessions.", v22, 0xCu);
      MEMORY[0x19400960C](v22, -1, -1);
    }
    else
    {

    }
    if ((v53 & 0xC000000000000001) != 0)
    {
      v25 = sub_18FBCD5E0();
      v46 = 0;
      v44 = 0;
      v5 = 0;
      v26 = v25 | 0x8000000000000000;
    }
    else
    {
      v27 = -1;
      v28 = -1 << *(_BYTE *)(v53 + 32);
      v44 = ~v28;
      v29 = *(_QWORD *)(v53 + 64);
      v46 = v53 + 64;
      v30 = -v28;
      if (v30 < 64)
        v27 = ~(-1 << v30);
      v5 = v27 & v29;
      v26 = v53;
    }
    v45 = (unint64_t)(v44 + 64) >> 6;
    swift_bridgeObjectRetain();
    v31 = 0;
    if ((v26 & 0x8000000000000000) != 0)
      break;
LABEL_20:
    if (v5)
    {
      v8 = (char *)((v5 - 1) & v5);
      v32 = __clz(__rbit64(v5)) | (v31 << 6);
      v33 = v31;
      goto LABEL_39;
    }
    v38 = v31 + 1;
    if (!__OFADD__(v31, 1))
    {
      if (v38 >= v45)
        goto LABEL_42;
      v39 = *(_QWORD *)(v46 + 8 * v38);
      v33 = v31 + 1;
      if (!v39)
      {
        v33 = v31 + 2;
        if (v31 + 2 >= v45)
          goto LABEL_42;
        v39 = *(_QWORD *)(v46 + 8 * v33);
        if (!v39)
        {
          v33 = v31 + 3;
          if (v31 + 3 >= v45)
            goto LABEL_42;
          v39 = *(_QWORD *)(v46 + 8 * v33);
          if (!v39)
          {
            v33 = v31 + 4;
            if (v31 + 4 >= v45)
              goto LABEL_42;
            v39 = *(_QWORD *)(v46 + 8 * v33);
            if (!v39)
            {
              v40 = v31 + 5;
              while (v45 != v40)
              {
                v39 = *(_QWORD *)(v46 + 8 * v40++);
                if (v39)
                {
                  v33 = v40 - 1;
                  goto LABEL_38;
                }
              }
              goto LABEL_42;
            }
          }
        }
      }
LABEL_38:
      v8 = (char *)((v39 - 1) & v39);
      v32 = __clz(__rbit64(v39)) + (v33 << 6);
LABEL_39:
      v41 = 8 * v32;
      a2 = *(char **)(*(_QWORD *)(v26 + 48) + v41);
      v37 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + v41);
      swift_retain();
      swift_retain();
      if (a2)
        goto LABEL_40;
      goto LABEL_42;
    }
    __break(1u);
  }
  while (1)
  {
    v34 = sub_18FBCD604();
    if (!v34)
      break;
    v36 = v35;
    v47 = v34;
    type metadata accessor for ControlSessionKey();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    a2 = v48;
    swift_unknownObjectRelease();
    v47 = v36;
    type metadata accessor for ControlSessionSubscriptionRequest();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v37 = (uint64_t)v48;
    swift_unknownObjectRelease();
    v33 = v31;
    v8 = (char *)v5;
    if (!a2)
      break;
LABEL_40:
    swift_release();
    sub_18FB9EC38(v37, v3);
    swift_release();
    v31 = v33;
    v5 = (unint64_t)v8;
    if ((v26 & 0x8000000000000000) == 0)
      goto LABEL_20;
  }
LABEL_42:
  sub_18FB8C7C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FB97FB8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18FB97FDC(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB978BC(a1, *(char **)(v1 + 16));
}

void sub_18FB97FE4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v3 = a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions;
  swift_beginAccess();
  if ((*(_QWORD *)v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = sub_18FBCD4B4();
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_3:
      *a2 = *(_QWORD *)v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else if (*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    goto LABEL_3;
  }
  if (qword_1EE189B30 != -1)
    swift_once();
  v5 = sub_18FBCCF5C();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE1927D8);
  v6 = sub_18FBCCF44();
  v7 = sub_18FBCD370();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_18FB18000, v6, v7, "No active sessions - not reconnecting.", v8, 2u);
    MEMORY[0x19400960C](v8, -1, -1);
  }

}

void sub_18FB98148(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  void *v7;
  void *v8;
  id v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;

  v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_controlHosts);
  swift_beginAccess();
  v2 = *v1;
  v19 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v20 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  if (v5)
    goto LABEL_6;
LABEL_7:
  v12 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v12 < v20)
    {
      v13 = *(_QWORD *)(v19 + 8 * v12);
      ++v6;
      if (v13)
        goto LABEL_20;
      v6 = v12 + 1;
      if (v12 + 1 >= v20)
        goto LABEL_24;
      v13 = *(_QWORD *)(v19 + 8 * v6);
      if (v13)
        goto LABEL_20;
      v6 = v12 + 2;
      if (v12 + 2 >= v20)
        goto LABEL_24;
      v13 = *(_QWORD *)(v19 + 8 * v6);
      if (v13)
      {
LABEL_20:
        v5 = (v13 - 1) & v13;
        for (i = __clz(__rbit64(v13)) + (v6 << 6); ; i = v10 | (v6 << 6))
        {
          v15 = *(_QWORD *)(v2 + 56) + 32 * i;
          v16 = *(unsigned __int8 *)(v15 + 24);
          v17 = *(id *)(v15 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v18 = sub_18FBA009C();
          if (v18)
          {
            v7 = (void *)v18;
            v8 = (void *)sub_18FBCD0B8();
            swift_bridgeObjectRelease();
            v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, v16);
            objc_msgSend(v7, sel_updateControlHost_configuration_activationState_, v8, v17, v9);
            swift_unknownObjectRelease();

            swift_bridgeObjectRelease();
            if (!v5)
              goto LABEL_7;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if (!v5)
              goto LABEL_7;
          }
LABEL_6:
          v10 = __clz(__rbit64(v5));
          v5 &= v5 - 1;
        }
      }
      v14 = v12 + 3;
      if (v14 < v20)
      {
        v13 = *(_QWORD *)(v19 + 8 * v14);
        if (v13)
        {
          v6 = v14;
          goto LABEL_20;
        }
        while (1)
        {
          v6 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_26;
          if (v6 >= v20)
            break;
          v13 = *(_QWORD *)(v19 + 8 * v6);
          ++v14;
          if (v13)
            goto LABEL_20;
        }
      }
    }
LABEL_24:
    swift_release();
    return;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_18FB983AC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

Swift::Void __swiftcall ControlsClient.start()()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char isEscapingClosureAtFileLocation;
  _QWORD v7[6];

  v1 = *(NSObject **)&v0[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_18FB985F8;
  *(_QWORD *)(v3 + 24) = v2;
  v7[4] = sub_18FB73428;
  v7[5] = v3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 1107296256;
  v7[2] = sub_18FB6E4C8;
  v7[3] = &block_descriptor_9_0;
  v4 = _Block_copy(v7);
  v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_18FB98548(uint64_t a1)
{
  void *v2;
  id v3;
  _OWORD v4[2];

  BSDispatchQueueAssert();
  sub_18FBA0368();
  v2 = *(void **)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection);
  if (v2)
  {
    v3 = v2;
    if (objc_msgSend(v3, sel_remoteTarget))
    {
      sub_18FBCD478();

      swift_unknownObjectRelease();
      sub_18FB1F7C4((uint64_t)v4);
    }
    else
    {
      memset(v4, 0, sizeof(v4));
      sub_18FB1F7C4((uint64_t)v4);
      objc_msgSend(v3, sel_activate);

    }
  }
}

void sub_18FB985F8()
{
  uint64_t v0;

  sub_18FB98548(*(_QWORD *)(v0 + 16));
}

uint64_t sub_18FB98600()
{
  return swift_deallocObject();
}

uint64_t ControlsClient.subscribeToSession(withRequest:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  char *v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v7 = sub_18FBCD004();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_18FBCD034();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(_QWORD *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_18FB9884C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_15_0;
  v16 = _Block_copy(aBlock);
  v17 = v3;
  swift_retain();
  swift_retain();
  sub_18FBCD010();
  v19[1] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_18FB98818()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FB9884C()
{
  uint64_t *v0;

  sub_18FB9F07C(v0[3], v0[4], v0[5]);
}

uint64_t ControlsClient.unsubscribe(fromSession:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v3 = sub_18FBCD004();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_18FBCD034();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(_QWORD *)&v1[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_18FB98D68;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_21_0;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  swift_retain();
  sub_18FBCD010();
  v16[1] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, v4, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v11, v7, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t sub_18FB98A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  _QWORD v13[6];
  char v14;

  v14 = 0;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_18FB98D70(a1, a2, &v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  result = swift_release();
  if (v14 == 1)
  {
    sub_18FBCCEF0();
    v13[3] = type metadata accessor for ControlSessionKey();
    v13[4] = sub_18FB203A8(&qword_1EE1896C8, (uint64_t (*)(uint64_t))type metadata accessor for ControlSessionKey, (uint64_t)&protocol conformance descriptor for ControlSessionKey);
    v13[0] = a2;
    swift_retain();
    v7 = sub_18FBCCEE4();
    v9 = v8;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    v10 = sub_18FBA009C();
    if (v10)
    {
      v11 = (void *)v10;
      v12 = (void *)sub_18FBCCE60();
      objc_msgSend(v11, sel_unsubscribeFromSession_, v12);
      sub_18FB77A8C(v7, v9);

      return swift_unknownObjectRelease();
    }
    else
    {
      return sub_18FB77A8C(v7, v9);
    }
  }
  return result;
}

uint64_t sub_18FB98D5C()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_18FB98D68()
{
  uint64_t v0;

  return sub_18FB98A6C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_18FB98D70(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  const __CFString *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20[8];

  swift_beginAccess();
  v6 = swift_retain();
  sub_18FBA2834(v6, (void (*)(void))sub_18FBACA9C, &qword_1EE189700, (void (*)(_QWORD))type metadata accessor for SandboxExtension, (void (*)(unint64_t, uint64_t))sub_18FB809C0);
  swift_endAccess();
  swift_release();
  swift_release();
  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions);
  swift_beginAccess();
  v8 = *v7;
  swift_retain();
  swift_bridgeObjectRetain();
  v9 = sub_18FB7BECC(a2, v8);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (v9)
  {
    if (qword_1EE189B30 != -1)
      swift_once();
    v11 = sub_18FBCCF5C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EE1927D8);
    swift_retain_n();
    v12 = sub_18FBCCF44();
    v13 = sub_18FBCD394();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v20[0] = v15;
      *(_DWORD *)v14 = 136315138;
      swift_retain();
      v16 = sub_18FBA6490();
      v18 = v17;
      swift_release();
      v20[7] = sub_18FB6ECF4((uint64_t)v16, v18, v20);
      sub_18FBCD454();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18FB18000, v12, v13, "Unsubscribing from session: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v15, -1, -1);
      MEMORY[0x19400960C](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    v19 = swift_retain();
    sub_18FBA2834(v19, (void (*)(void))sub_18FBACA90, (uint64_t *)&unk_1EE1896F0, (void (*)(_QWORD))type metadata accessor for ControlSessionSubscriptionRequest, (void (*)(unint64_t, uint64_t))sub_18FB809B4);
    swift_endAccess();
    swift_release();
    result = swift_release();
    *a3 = 1;
  }
  return result;
}

uint64_t ControlsClient.setVisiblySettled(_:forSession:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[3];
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  v18 = a1;
  v4 = sub_18FBCD004();
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_18FBCD034();
  v7 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FBCCEF0();
  v22 = (void *)type metadata accessor for ControlSessionKey();
  v23 = sub_18FB203A8(&qword_1EE1896C8, (uint64_t (*)(uint64_t))type metadata accessor for ControlSessionKey, (uint64_t)&protocol conformance descriptor for ControlSessionKey);
  aBlock[0] = a2;
  swift_retain();
  v10 = sub_18FBCCEE4();
  v12 = v11;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v18;
  v13[3] = a2;
  v13[4] = v2;
  v13[5] = v10;
  v13[6] = v12;
  v23 = (uint64_t)sub_18FBA254C;
  v24 = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  v22 = &block_descriptor_27_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = v2;
  sub_18FB8409C(v10, v12);
  sub_18FBCD010();
  v25 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v9, v6, v14);
  _Block_release(v14);
  sub_18FB77A8C(v10, v12);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_18FB994A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  const __CFString *v18;
  __CFString *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  const __CFString *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];

  v42 = a3;
  v9 = sub_18FBCCF5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE189B30 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v9, (uint64_t)qword_1EE1927D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v9);
  swift_retain_n();
  v14 = sub_18FBCCF44();
  v15 = sub_18FBCD370();
  if (os_log_type_enabled(v14, v15))
  {
    v38 = v10;
    v40 = a4;
    v41 = a5;
    v16 = a1;
    v17 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v44[0] = v37;
    *(_DWORD *)v17 = 136446466;
    v39 = v16;
    v18 = (id)NSStringFromCHSControlVisibility(v16);
    if (!v18)
    {
      result = swift_release();
      __break(1u);
      return result;
    }
    v19 = (__CFString *)v18;
    v20 = sub_18FBCD0DC();
    v22 = v21;

    v43 = sub_18FB6ECF4(v20, v22, v44);
    sub_18FBCD454();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    swift_retain();
    v23 = sub_18FBA6490();
    v25 = v24;
    swift_release();
    v43 = sub_18FB6ECF4((uint64_t)v23, v25, v44);
    sub_18FBCD454();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FB18000, v14, v15, "Set visibly %{public}s for session: %{public}s", (uint8_t *)v17, 0x16u);
    v26 = v37;
    swift_arrayDestroy();
    MEMORY[0x19400960C](v26, -1, -1);
    MEMORY[0x19400960C](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v9);
    a1 = v39;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v27 = v42;
  v28 = *(_QWORD *)(v42 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  v29 = *(os_unfair_lock_s **)(v28 + 16);
  swift_retain();
  os_unfair_lock_lock(v29);
  v30 = (uint64_t *)(v27 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions);
  swift_beginAccess();
  v31 = *v30;
  swift_retain();
  swift_bridgeObjectRetain();
  v32 = sub_18FB7BECC(a2, v31);
  swift_release();
  swift_bridgeObjectRelease();
  if (v32)
  {
    swift_beginAccess();
    *(_QWORD *)(v32 + 32) = a1;
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
  swift_release();
  result = sub_18FBA009C();
  if (result)
  {
    v34 = (void *)result;
    v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedInteger_, a1);
    v36 = (void *)sub_18FBCCE60();
    objc_msgSend(v34, sel_setVisibility_forSession_, v35, v36);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t ControlsClient.setTaskPriority(_:forSession:)(char *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[3];
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = sub_18FBCD004();
  v23 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_18FBCD034();
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  sub_18FBCCEF0();
  v25 = (void *)type metadata accessor for ControlSessionKey();
  v26 = sub_18FB203A8(&qword_1EE1896C8, (uint64_t (*)(uint64_t))type metadata accessor for ControlSessionKey, (uint64_t)&protocol conformance descriptor for ControlSessionKey);
  aBlock[0] = a2;
  swift_retain();
  v13 = sub_18FBCCEE4();
  v15 = v14;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  v20 = *(_QWORD *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = v12;
  *(_QWORD *)(v16 + 24) = a2;
  *(_QWORD *)(v16 + 32) = v3;
  *(_QWORD *)(v16 + 40) = v13;
  *(_QWORD *)(v16 + 48) = v15;
  v26 = (uint64_t)sub_18FBA2594;
  v27 = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  v25 = &block_descriptor_33_0;
  v17 = _Block_copy(aBlock);
  swift_retain();
  v18 = v3;
  sub_18FB8409C(v13, v15);
  sub_18FBCD010();
  v28 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v11, v8, v17);
  _Block_release(v17);
  sub_18FB77A8C(v13, v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
  return swift_release();
}

void sub_18FB99C9C(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _DWORD *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;

  if (qword_1EE189B30 != -1)
    swift_once();
  v6 = sub_18FBCCF5C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1927D8);
  swift_retain_n();
  v7 = sub_18FBCCF44();
  v8 = sub_18FBCD370();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v9 = 136446466;
    __asm { BR              X10 }
  }

  swift_release_n();
  v10 = *(_QWORD *)(a3 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  v11 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain();
  os_unfair_lock_lock(v11);
  v12 = (uint64_t *)(a3 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions);
  swift_beginAccess();
  v13 = *v12;
  swift_retain();
  swift_bridgeObjectRetain();
  v14 = sub_18FB7BECC(a2, v13);
  swift_release();
  swift_bridgeObjectRelease();
  if (v14)
  {
    swift_beginAccess();
    *(_BYTE *)(v14 + 24) = a1;
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  swift_release();
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  v16 = sub_18FBA009C();
  if (v16)
  {
    v17 = (void *)v16;
    v18 = (void *)sub_18FBCCE60();
    objc_msgSend(v17, sel_setTaskPriority_forSession_, v15, v18);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

uint64_t ControlsClient.setEnvironmentModifiers(_:forSession:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[3];
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;

  v4 = v3;
  v23 = a1;
  v24 = a2;
  v6 = sub_18FBCD004();
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_18FBCD034();
  v9 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18FBCCEF0();
  v28 = (void *)type metadata accessor for ControlSessionKey();
  v29 = sub_18FB203A8(&qword_1EE1896C8, (uint64_t (*)(uint64_t))type metadata accessor for ControlSessionKey, (uint64_t)&protocol conformance descriptor for ControlSessionKey);
  aBlock[0] = a3;
  swift_retain();
  v12 = sub_18FBCCEE4();
  v14 = v13;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = v3;
  v22 = v9;
  v17 = v23;
  v16 = v24;
  v15[4] = v23;
  v15[5] = v16;
  v15[6] = v12;
  v15[7] = v14;
  v29 = (uint64_t)sub_18FBA25E0;
  v30 = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  v28 = &block_descriptor_39_0;
  v18 = _Block_copy(aBlock);
  swift_retain();
  v19 = v4;
  sub_18FB8409C(v17, v16);
  sub_18FB8409C(v12, v14);
  sub_18FBCD010();
  v31 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v11, v8, v18);
  _Block_release(v18);
  sub_18FB77A8C(v12, v14);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v25);
  return swift_release();
}

uint64_t sub_18FB9A480(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  const __CFString *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v27[3];

  if (qword_1EE189B30 != -1)
    swift_once();
  v6 = sub_18FBCCF5C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1927D8);
  swift_retain_n();
  v7 = sub_18FBCCF44();
  v8 = sub_18FBCD370();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v27[0] = v10;
    *(_DWORD *)v9 = 136446210;
    swift_retain();
    v11 = sub_18FBA6490();
    v13 = v12;
    swift_release();
    sub_18FB6ECF4((uint64_t)v11, v13, v27);
    sub_18FBCD454();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FB18000, v7, v8, "Set environment modifiers for session: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400960C](v10, -1, -1);
    MEMORY[0x19400960C](v9, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  v15 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v15);
  v16 = (uint64_t *)(a2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions);
  swift_beginAccess();
  v17 = *v16;
  swift_retain();
  swift_bridgeObjectRetain();
  v18 = sub_18FB7BECC(a1, v17);
  swift_release();
  swift_bridgeObjectRelease();
  if (v18)
  {
    swift_beginAccess();
    v19 = *(_QWORD *)(v18 + 40);
    v20 = *(_QWORD *)(v18 + 48);
    *(_QWORD *)(v18 + 40) = a3;
    *(_QWORD *)(v18 + 48) = a4;
    sub_18FB8409C(a3, a4);
    sub_18FB840E0(v19, v20);
    swift_release();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  result = sub_18FBA009C();
  if (result)
  {
    v22 = (void *)result;
    v23 = (void *)sub_18FBCCE60();
    v24 = (void *)sub_18FBCCE60();
    objc_msgSend(v22, sel_setEnvironmentModifiers_forSession_, v23, v24);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_18FB9A788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_18FB9A7A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_18FB9A84C;
  return sub_18FBCD7D8();
}

uint64_t sub_18FB9A84C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FB9A8B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FB9A8C4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FB9A8F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint8_t *v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD v28[2];
  _QWORD aBlock[6];

  v28[1] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE189B30 != -1)
    swift_once();
  v10 = sub_18FBCCF5C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EE1927D8);
  v11 = sub_18FBCCF44();
  v12 = sub_18FBCD370();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v28[0] = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v14 = a4;
    v15 = v13;
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_18FB18000, v11, v12, "xpc: setControlState", v13, 2u);
    v16 = v15;
    a4 = v14;
    v9 = (char *)v28[0];
    MEMORY[0x19400960C](v16, -1, -1);
  }

  v17 = sub_18FBA009C();
  if (v17)
  {
    v18 = (void *)v17;
    v19 = (void *)sub_18FBCCE60();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a4, v6);
    v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, v6);
    aBlock[4] = sub_18FBA4858;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FBC4E30;
    aBlock[3] = &block_descriptor_304;
    v22 = _Block_copy(aBlock);
    v23 = a1;
    swift_release();
    objc_msgSend(v18, sel_setControlState_completion_, v19, v22);
    _Block_release(v22);

    return swift_unknownObjectRelease();
  }
  else
  {
    v25 = sub_18FBCCF44();
    v26 = sub_18FBCD370();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_18FB18000, v25, v26, "xpc error: setControlState - unable to obtain the remote target", v27, 2u);
      MEMORY[0x19400960C](v27, -1, -1);
    }

    aBlock[0] = objc_msgSend((id)objc_opt_self(), sel_serverUnavailable);
    return sub_18FBCD2E0();
  }
}

uint64_t sub_18FB9ABFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_18FB9AC18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_18FB9ACC0;
  return sub_18FBCD7D8();
}

uint64_t sub_18FB9ACC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FB9AD2C(uint64_t a1, char *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v29 = a6;
  v30 = a7;
  v28 = a4;
  v32 = sub_18FBCD004();
  v35 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_18FBCD034();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(_QWORD *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  v19 = (*(unsigned __int8 *)(v16 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = a2;
  *((_QWORD *)v20 + 3) = a3;
  v21 = a3;
  v22 = v28;
  *((_QWORD *)v20 + 4) = v28;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v20[v19], v18, v15);
  aBlock[4] = v29;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = v30;
  v23 = _Block_copy(aBlock);
  v24 = a2;
  sub_18FB8409C(v21, v22);
  sub_18FBCD010();
  v36 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  v25 = v32;
  sub_18FBCD484();
  MEMORY[0x194008544](0, v14, v11, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v25);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  return swift_release();
}

uint64_t sub_18FB9AFB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint8_t *v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD v28[2];
  _QWORD aBlock[6];

  v28[1] = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE189B30 != -1)
    swift_once();
  v10 = sub_18FBCCF5C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EE1927D8);
  v11 = sub_18FBCCF44();
  v12 = sub_18FBCD370();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v28[0] = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v14 = a4;
    v15 = v13;
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_18FB18000, v11, v12, "xpc: performControlAction", v13, 2u);
    v16 = v15;
    a4 = v14;
    v9 = (char *)v28[0];
    MEMORY[0x19400960C](v16, -1, -1);
  }

  v17 = sub_18FBA009C();
  if (v17)
  {
    v18 = (void *)v17;
    v19 = (void *)sub_18FBCCE60();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a4, v6);
    v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, v6);
    aBlock[4] = sub_18FBA46E4;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FBC4E30;
    aBlock[3] = &block_descriptor_286;
    v22 = _Block_copy(aBlock);
    v23 = a1;
    swift_release();
    objc_msgSend(v18, sel_performControlAction_completion_, v19, v22);
    _Block_release(v22);

    return swift_unknownObjectRelease();
  }
  else
  {
    v25 = sub_18FBCCF44();
    v26 = sub_18FBCD370();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_18FB18000, v25, v26, "xpc error: performControlAction - unable to obtain the remote target", v27, 2u);
      MEMORY[0x19400960C](v27, -1, -1);
    }

    aBlock[0] = objc_msgSend((id)objc_opt_self(), sel_serverUnavailable);
    return sub_18FBCD2E0();
  }
}

Swift::Void __swiftcall ControlsClient.reloadControls(forExtension:kind:reason:)(Swift::String forExtension, Swift::String_optional kind, Swift::String reason)
{
  char *v3;
  void *object;
  uint64_t countAndFlagsBits;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  char *v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  object = reason._object;
  countAndFlagsBits = reason._countAndFlagsBits;
  v6 = kind.value._object;
  v7 = kind.value._countAndFlagsBits;
  v8 = forExtension._object;
  v9 = forExtension._countAndFlagsBits;
  v10 = sub_18FBCD004();
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_18FBCD034();
  v20 = *(_QWORD *)(v13 - 8);
  v21 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = *(_QWORD *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v3;
  v16[3] = v9;
  v16[4] = v8;
  v16[5] = v7;
  v16[6] = v6;
  v16[7] = countAndFlagsBits;
  v16[8] = object;
  aBlock[4] = sub_18FBA2694;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_49;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v3;
  swift_bridgeObjectRetain();
  sub_18FBCD010();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v15, v12, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v21);
  swift_release();
}

void sub_18FB9B4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *oslog;

  if (qword_1EE189B30 != -1)
    swift_once();
  v6 = sub_18FBCCF5C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE1927D8);
  v7 = sub_18FBCCF44();
  v8 = sub_18FBCD370();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_18FB18000, v7, v8, "xpc: reloadControls(forExtension:kind:reason)", v9, 2u);
    MEMORY[0x19400960C](v9, -1, -1);
  }

  v10 = sub_18FBA009C();
  if (v10)
  {
    v11 = (void *)v10;
    v12 = (void *)sub_18FBCD0B8();
    if (a5)
      a5 = (void *)sub_18FBCD0B8();
    oslog = sub_18FBCD0B8();
    objc_msgSend(v11, sel_reloadControlsForExtension_kind_reason_, v12, a5);
    swift_unknownObjectRelease();

  }
  else
  {
    oslog = sub_18FBCCF44();
    v13 = sub_18FBCD370();
    if (os_log_type_enabled(oslog, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_18FB18000, oslog, v13, "xpc error: reloadControls(forExtension:kind:reason) - unable to obtain the remote target", v14, 2u);
      MEMORY[0x19400960C](v14, -1, -1);
    }
  }

}

uint64_t ControlsClient.updateControlHostConfiguration(host:)(uint64_t *a1)
{
  return sub_18FB9B9C0(a1, (uint64_t)&unk_1E2A5D438, (uint64_t)sub_18FBA26AC, (uint64_t)&block_descriptor_55);
}

void sub_18FB9B72C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t *v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  void *v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;

  v9 = a5 & 1;
  if (qword_1EE189B30 != -1)
    swift_once();
  v10 = sub_18FBCCF5C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EE1927D8);
  v11 = sub_18FBCCF44();
  v12 = sub_18FBCD370();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_18FB18000, v11, v12, "xpc: updateControlHostConfiguration", v13, 2u);
    MEMORY[0x19400960C](v13, -1, -1);
  }

  v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_controlHosts);
  swift_beginAccess();
  v15 = a4;
  swift_bridgeObjectRetain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v14;
  *v14 = 0x8000000000000000;
  sub_18FBABDA4(a2, a3, (uint64_t)a4, v9, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v17 = sub_18FBA009C();
  if (v17)
  {
    v18 = (void *)v17;
    v19 = (void *)sub_18FBCD0B8();
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, v9);
    objc_msgSend(v18, sel_updateControlHost_configuration_activationState_, v19, v15, v20);
    swift_unknownObjectRelease();

  }
  else
  {
    v20 = sub_18FBCCF44();
    v21 = sub_18FBCD370();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_18FB18000, v20, v21, "xpc error: updateControlHostConfiguration - unable to obtain the remote target", v22, 2u);
      MEMORY[0x19400960C](v22, -1, -1);
    }
  }

}

uint64_t ControlsClient.updateControlHostActivationState(host:)(uint64_t *a1)
{
  return sub_18FB9B9C0(a1, (uint64_t)&unk_1E2A5D460, (uint64_t)sub_18FBA26BC, (uint64_t)&block_descriptor_61_0);
}

uint64_t sub_18FB9B9C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  id v18;
  char *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v21[0] = a4;
  v7 = sub_18FBCD004();
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_18FBCD034();
  v22 = *(_QWORD *)(v10 - 8);
  v23 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = a1[1];
  v15 = (void *)a1[2];
  LOBYTE(a1) = *((_BYTE *)a1 + 24);
  v21[1] = *(_QWORD *)&v4[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v4;
  *(_QWORD *)(v16 + 24) = v13;
  *(_QWORD *)(v16 + 32) = v14;
  *(_QWORD *)(v16 + 40) = v15;
  *(_BYTE *)(v16 + 48) = (_BYTE)a1;
  aBlock[4] = a3;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = v21[0];
  v17 = _Block_copy(aBlock);
  v18 = v15;
  v19 = v4;
  swift_bridgeObjectRetain();
  sub_18FBCD010();
  v25 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v12, v9, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
  return swift_release();
}

void sub_18FB9BBD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t *v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  void *v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;

  v9 = a5 & 1;
  if (qword_1EE189B30 != -1)
    swift_once();
  v10 = sub_18FBCCF5C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EE1927D8);
  v11 = sub_18FBCCF44();
  v12 = sub_18FBCD370();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_18FB18000, v11, v12, "xpc: updateControlHostActivationState", v13, 2u);
    MEMORY[0x19400960C](v13, -1, -1);
  }

  v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_controlHosts);
  swift_beginAccess();
  v15 = a4;
  swift_bridgeObjectRetain_n();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v14;
  *v14 = 0x8000000000000000;
  sub_18FBABDA4(a2, a3, (uint64_t)a4, v9, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v17 = sub_18FBA009C();
  if (v17)
  {
    v18 = (void *)v17;
    v19 = (void *)sub_18FBCD0B8();
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithUnsignedLongLong_, v9);
    objc_msgSend(v18, sel_updateControlHost_activationState_, v19, v20);
    swift_unknownObjectRelease();

  }
  else
  {
    v20 = sub_18FBCCF44();
    v21 = sub_18FBCD370();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_18FB18000, v20, v21, "xpc error: updateControlHostActivationState - unable to obtain the remote target", v22, 2u);
      MEMORY[0x19400960C](v22, -1, -1);
    }
  }

}

uint64_t ControlsClient.invalidateControlHost(host:)(uint64_t *a1)
{
  return sub_18FB9B9C0(a1, (uint64_t)&unk_1E2A5D4B0, (uint64_t)sub_18FBA2700, (uint64_t)&block_descriptor_67_0);
}

void sub_18FB9BE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14[3];

  if (qword_1EE189B30 != -1)
    swift_once();
  v5 = sub_18FBCCF5C();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE1927D8);
  v6 = sub_18FBCCF44();
  v7 = sub_18FBCD370();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_18FB18000, v6, v7, "xpc: invalidateControlHost", v8, 2u);
    MEMORY[0x19400960C](v8, -1, -1);
  }

  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_18FBA29E0(a2, a3, (uint64_t)v14);
  swift_bridgeObjectRelease();
  sub_18FBA4698(v14[0], v14[1], (void *)v14[2]);
  swift_endAccess();
  v9 = sub_18FBA009C();
  if (v9)
  {
    v10 = (void *)v9;
    v11 = sub_18FBCD0B8();
    objc_msgSend(v10, sel_invalidateControlHost_, v11);
    swift_unknownObjectRelease();
  }
  else
  {
    v11 = sub_18FBCCF44();
    v12 = sub_18FBCD370();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_18FB18000, v11, v12, "xpc error: invalidateControlHost - unable to obtain the remote target", v13, 2u);
      MEMORY[0x19400960C](v13, -1, -1);
    }
  }

}

uint64_t ControlsClient.allControlConfigurationsByHost()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_18FB9C070()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B858);
  *v3 = v0;
  v3[1] = sub_18FB9C120;
  return sub_18FBCD7D8();
}

uint64_t sub_18FB9C120()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FB9C18C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_18FB9C198()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FB9C1CC(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v4 = sub_18FBCD004();
  v21 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_18FBCD034();
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B9D0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v18[1] = *(_QWORD *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_18FBA44EC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_262;
  v15 = _Block_copy(aBlock);
  v16 = a2;
  sub_18FBCD010();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v9, v6, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  return swift_release();
}

uint64_t sub_18FB9C438(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B9D0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  if (qword_1EE189B30 != -1)
    swift_once();
  v7 = sub_18FBCCF5C();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EE1927D8);
  v8 = sub_18FBCCF44();
  v9 = sub_18FBCD370();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_18FB18000, v8, v9, "xpc: allControlConfigurationsByHost", v10, 2u);
    MEMORY[0x19400960C](v10, -1, -1);
  }

  v11 = sub_18FBA009C();
  if (v11)
  {
    v12 = (void *)v11;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
    v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_18FBA452C;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FB9CA70;
    aBlock[3] = &block_descriptor_268;
    v15 = _Block_copy(aBlock);
    v16 = a1;
    swift_release();
    objc_msgSend(v12, sel_allControlConfigurationsByHostWithCompletion_, v15);
    _Block_release(v15);
    return swift_unknownObjectRelease();
  }
  else
  {
    v18 = sub_18FBCCF44();
    v19 = sub_18FBCD370();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_18FB18000, v18, v19, "xpc error: allControlConfigurationsByHost - unable to obtain the remote target", v20, 2u);
      MEMORY[0x19400960C](v20, -1, -1);
    }

    objc_msgSend((id)objc_opt_self(), sel_serverUnavailable);
    return sub_18FBCD2E0();
  }
}

uint64_t sub_18FB9C6EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v25[0] = a2;
  v7 = sub_18FBCD004();
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_18FBCD034();
  v26 = *(_QWORD *)(v10 - 8);
  v27 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B9D0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = *(_QWORD *)(a3 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v17, v16, v13);
  v20 = (void *)v25[0];
  *(_QWORD *)(v19 + v18) = v25[0];
  aBlock[4] = sub_18FBA4634;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_274;
  v21 = _Block_copy(aBlock);
  v22 = a1;
  v23 = v20;
  sub_18FBCD010();
  v29 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v12, v9, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
  return swift_release();
}

void sub_18FB9C97C(void *a1, int a2, id a3)
{
  id v3;
  id v4;
  id v5;

  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v3, sel_configurationsByHost);
    type metadata accessor for CHSControlConfiguration(0);
    sub_18FBCD058();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B9D0);
    sub_18FBCD2EC();

  }
  else if (a3)
  {
    v5 = a3;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B9D0);
    sub_18FBCD2E0();
  }
  else
  {
    sub_18FB73F94(MEMORY[0x1E0DEE9D8]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B9D0);
    sub_18FBCD2EC();
  }
}

uint64_t ControlsClient.fetchControlDescriptors(forExtensionBundleIdentifier:userInitiated:reason:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a4;
  *(_BYTE *)(v6 + 88) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_18FB9CA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v7;
  *(_QWORD *)(v7 + 16) = v1;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = v4;
  *(_BYTE *)(v7 + 40) = v5;
  *(_QWORD *)(v7 + 48) = v3;
  *(_QWORD *)(v7 + 56) = v2;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B868);
  *v8 = v0;
  v8[1] = sub_18FB9CB70;
  return sub_18FBCD7D8();
}

uint64_t sub_18FB9CB70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FB9CBDC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FB9CC10(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE v26[4];
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v28 = a6;
  v29 = a7;
  v27 = a5;
  v32 = sub_18FBCD004();
  v35 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v31 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_18FBCD034();
  v33 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = &v26[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v30 = *(_QWORD *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16))(&v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v15);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  *(_QWORD *)(v19 + 32) = a4;
  *(_BYTE *)(v19 + 40) = v27;
  v20 = v29;
  *(_QWORD *)(v19 + 48) = v28;
  *(_QWORD *)(v19 + 56) = v20;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v16 + 32))(v19 + v18, &v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)], v15);
  aBlock[4] = sub_18FBA43D8;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_244;
  v21 = _Block_copy(aBlock);
  v22 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FBCD010();
  v36 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  v24 = v31;
  v23 = v32;
  sub_18FBCD484();
  MEMORY[0x194008544](0, v14, v24, v21);
  _Block_release(v21);
  (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v24, v23);
  (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v14, v34);
  return swift_release();
}

void sub_18FB9CEBC(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  char v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _QWORD v32[5];
  uint64_t v33;
  _QWORD aBlock[6];

  v32[4] = a6;
  v33 = a7;
  v32[2] = a2;
  v32[3] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE189B30 != -1)
    swift_once();
  v13 = sub_18FBCCF5C();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EE1927D8);
  v14 = sub_18FBCCF44();
  v15 = sub_18FBCD370();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v32[1] = v11;
    v17 = a4;
    v18 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_18FB18000, v14, v15, "xpc: fetchControlDescriptors", v16, 2u);
    v19 = v18;
    a4 = v17;
    MEMORY[0x19400960C](v19, -1, -1);
  }

  v20 = sub_18FBA009C();
  if (v20)
  {
    v21 = (void *)v20;
    v22 = (void *)sub_18FBCD0B8();
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a4 & 1);
    v24 = (void *)sub_18FBCD0B8();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v33, v9);
    v25 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v26 + v25, v12, v9);
    aBlock[4] = sub_18FBA4424;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FB9D52C;
    aBlock[3] = &block_descriptor_250;
    v27 = _Block_copy(aBlock);
    v28 = a1;
    swift_release();
    objc_msgSend(v21, sel_fetchControlDescriptorsForExtensionBundleIdentifier_userInitiated_reason_completion_, v22, v23, v24, v27);
    _Block_release(v27);
    swift_unknownObjectRelease();

  }
  else
  {
    v29 = sub_18FBCCF44();
    v30 = sub_18FBCD370();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_18FB18000, v29, v30, "xpc error: fetchControlDescriptors - unable to obtain the remote target", v31, 2u);
      MEMORY[0x19400960C](v31, -1, -1);
    }

    aBlock[0] = objc_msgSend((id)objc_opt_self(), sel_serverUnavailable);
    sub_18FBCD2E0();
  }
}

uint64_t sub_18FB9D208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  v24[0] = a2;
  v7 = sub_18FBCD004();
  v27 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_18FBCD034();
  v25 = *(_QWORD *)(v10 - 8);
  v26 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C8);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = *(_QWORD *)(a3 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v17, v16, v13);
  v20 = (void *)v24[0];
  *(_QWORD *)(v19 + v18) = v24[0];
  aBlock[4] = sub_18FBA44CC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_256;
  v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v22 = v20;
  sub_18FBCD010();
  v28 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v12, v9, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v26);
  return swift_release();
}

uint64_t sub_18FB9D49C(uint64_t a1, int a2, id a3)
{
  id v4;

  if (a1)
  {
    sub_18FB727E0(a1);
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C8);
    return sub_18FBCD2EC();
  }
  if (!a3)
    goto LABEL_3;
  v4 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C8);
  return sub_18FBCD2E0();
}

uint64_t sub_18FB9D52C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_18FBCD28C();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t ControlsClient.controlDescriptor(matching:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_18FB9D5C8()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B878);
  *v2 = v0;
  v2[1] = sub_18FB9D67C;
  return sub_18FBCD7D8();
}

uint64_t sub_18FB9D67C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FB9D6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  char *v28;
  _QWORD aBlock[6];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE189B30 != -1)
    swift_once();
  v9 = sub_18FBCCF5C();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EE1927D8);
  v10 = sub_18FBCCF44();
  v11 = sub_18FBCD370();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v28 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v13 = v5;
    v14 = a3;
    v15 = a2;
    v16 = v12;
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_18FB18000, v10, v11, "xpc: controlDescriptor(matching:)", v12, 2u);
    v17 = v16;
    a2 = v15;
    a3 = v14;
    v5 = v13;
    v8 = v28;
    MEMORY[0x19400960C](v17, -1, -1);
  }

  v18 = sub_18FBA009C();
  if (v18)
  {
    v19 = (void *)v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
    v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v21 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v21 + v20, v8, v5);
    aBlock[4] = sub_18FBA4300;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FB9CA70;
    aBlock[3] = &block_descriptor_238;
    v22 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v19, sel_controlDescriptorMatching_completion_, a2, v22);
    _Block_release(v22);
    return swift_unknownObjectRelease();
  }
  else
  {
    v24 = sub_18FBCCF44();
    v25 = sub_18FBCD370();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_18FB18000, v24, v25, "xpc error: controlDescriptor(matching:) - unable to obtain the remote target", v26, 2u);
      MEMORY[0x19400960C](v26, -1, -1);
    }

    aBlock[0] = objc_msgSend((id)objc_opt_self(), sel_serverUnavailable);
    return sub_18FBCD2E0();
  }
}

uint64_t sub_18FB9D9C0(void *a1, id a2)
{
  id v2;
  id v4;

  if (a1)
  {
    v2 = a1;
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C0);
    return sub_18FBCD2EC();
  }
  if (!a2)
    goto LABEL_3;
  v4 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C0);
  return sub_18FBCD2E0();
}

uint64_t ControlsClient.unsubscribeToPushes(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_18FB9DA54()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_18FB9DAF0;
  return sub_18FBCD7D8();
}

uint64_t sub_18FB9DAF0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FB9DB5C(uint64_t a1, char *a2, void *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  char *v24;
  id v25;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v28 = a6;
  v29 = a7;
  v27 = a3;
  v10 = sub_18FBCD004();
  v33 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_18FBCD034();
  v31 = *(_QWORD *)(v13 - 8);
  v32 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *(_QWORD *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue];
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  v20 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v21 = swift_allocObject();
  v22 = v27;
  *(_QWORD *)(v21 + 16) = a2;
  *(_QWORD *)(v21 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v21 + v20, v19, v16);
  aBlock[4] = v28;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = v29;
  v23 = _Block_copy(aBlock);
  v24 = a2;
  v25 = v22;
  sub_18FBCD010();
  v34 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v15, v12, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
  return swift_release();
}

uint64_t sub_18FB9DDD0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_18FBA009C();
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
    v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    aBlock[4] = sub_18FBA41A8;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FBC4E30;
    aBlock[3] = &block_descriptor_220;
    v13 = _Block_copy(aBlock);
    v14 = a1;
    swift_release();
    objc_msgSend(v10, sel_unsubscribeToPushes_completion_, a2, v13);
    _Block_release(v13);
    return swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EE189B30 != -1)
      swift_once();
    v16 = sub_18FBCCF5C();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EE1927D8);
    v17 = sub_18FBCCF44();
    v18 = sub_18FBCD370();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_18FB18000, v17, v18, "xpc error: unsubscribeToPushes - unable to obtain the remote target", v19, 2u);
      MEMORY[0x19400960C](v19, -1, -1);
    }

    objc_msgSend((id)objc_opt_self(), sel_serverUnavailable);
    return sub_18FBCD2E0();
  }
}

uint64_t ControlsClient.sendPushToken(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_18FB9E02C()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_18FB9E0C8;
  return sub_18FBCD7D8();
}

uint64_t sub_18FB9E0C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FB9E134(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_18FBA009C();
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
    v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    aBlock[4] = sub_18FBA40B4;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FBC4E30;
    aBlock[3] = &block_descriptor_202;
    v13 = _Block_copy(aBlock);
    v14 = a1;
    swift_release();
    objc_msgSend(v10, sel_sendPushToken_completion_, a2, v13);
    _Block_release(v13);
    return swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EE189B30 != -1)
      swift_once();
    v16 = sub_18FBCCF5C();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EE1927D8);
    v17 = sub_18FBCCF44();
    v18 = sub_18FBCD370();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_18FB18000, v17, v18, "xpc error: sendPushToken - unable to obtain the remote target", v19, 2u);
      MEMORY[0x19400960C](v19, -1, -1);
    }

    objc_msgSend((id)objc_opt_self(), sel_serverUnavailable);
    return sub_18FBCD2E0();
  }
}

uint64_t ControlsClient.sendPushUpdate(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_18FB9E390()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_18FB9DAF0;
  return sub_18FBCD7D8();
}

uint64_t sub_18FB9E42C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_18FBA009C();
  if (v9)
  {
    v10 = (void *)v9;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
    v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    aBlock[4] = sub_18FBA4064;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18FBC4E30;
    aBlock[3] = &block_descriptor_184;
    v13 = _Block_copy(aBlock);
    v14 = a1;
    swift_release();
    objc_msgSend(v10, sel_sendPushUpdate_completion_, a2, v13);
    _Block_release(v13);
    return swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1EE189B30 != -1)
      swift_once();
    v16 = sub_18FBCCF5C();
    __swift_project_value_buffer(v16, (uint64_t)qword_1EE1927D8);
    v17 = sub_18FBCCF44();
    v18 = sub_18FBCD370();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_18FB18000, v17, v18, "xpc error: sendPushUpdate - unable to obtain the remote target", v19, 2u);
      MEMORY[0x19400960C](v19, -1, -1);
    }

    objc_msgSend((id)objc_opt_self(), sel_serverUnavailable);
    return sub_18FBCD2E0();
  }
}

uint64_t sub_18FB9E670(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v26 = a6;
  v23 = a4;
  v24 = a5;
  v9 = sub_18FBCD004();
  v29 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_18FBCD034();
  v27 = *(_QWORD *)(v12 - 8);
  v28 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v25 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__calloutQueue);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v15);
  v18 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v19 + v18, (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  aBlock[4] = v24;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = v26;
  v20 = _Block_copy(aBlock);
  v21 = a1;
  sub_18FBCD010();
  v30 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v14, v11, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
  return swift_release();
}

uint64_t sub_18FB9E8E0(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
    return sub_18FBCD2E0();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
    return sub_18FBCD2EC();
  }
}

uint64_t sub_18FB9E940@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_18FBA3F9C;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_18FB87340(v4);
}

uint64_t sub_18FB9E9D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_18FBA3F6C;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_18FB87340(v1);
  sub_18FBA3A28((uint64_t)v4, v3);
  return sub_18FB7C270((uint64_t)v4);
}

uint64_t sub_18FB9EA5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange);
  swift_beginAccess();
  v2 = *v1;
  sub_18FB87340(*v1);
  return v2;
}

uint64_t sub_18FB9EAB4(uint64_t a1, uint64_t a2)
{
  sub_18FBA3A28(a1, a2);
  return sub_18FB7C270(a1);
}

void (*sub_18FB9EAE8(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_18FB9EB40;
}

void sub_18FB9EB40(_QWORD **a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(uint64_t, unint64_t);
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  unint64_t v9;
  os_unfair_lock_s *v10;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void (**)(uint64_t, unint64_t))(v4 + v3[4]);
    if (v5)
    {
      v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
      v7 = *(os_unfair_lock_s **)(v6 + 16);
      swift_retain();
      sub_18FB87340((uint64_t)v5);
      os_unfair_lock_lock(v7);
      v8 = *(_QWORD *)(v4 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData);
      v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData + 8);
      v10 = *(os_unfair_lock_s **)(v6 + 16);
      sub_18FB840F4(v8, v9);
      os_unfair_lock_unlock(v10);
      swift_release();
      if (v9 >> 60 == 15)
      {
        sub_18FB7C270((uint64_t)v5);
      }
      else
      {
        v5(v8, v9);
        sub_18FB7C270((uint64_t)v5);
        sub_18FB840E0(v8, v9);
      }
    }
  }
  free(v3);
}

void sub_18FB9EC38(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  const __CFString *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t aBlock[3];
  void *v28;
  uint64_t (*v29)();
  _QWORD *v30;

  BSDispatchQueueAssert();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock];
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  swift_retain();
  v7 = swift_retain();
  sub_18FBA2D08(v7, v4, (void (*)(uint64_t, uint64_t, uint64_t))sub_18FBABC14, (uint64_t *)&unk_1EE1896F0, (void (*)(_QWORD))type metadata accessor for ControlSessionSubscriptionRequest, (void (*)(unint64_t, uint64_t))sub_18FB809B4);
  swift_endAccess();
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();
  sub_18FBCCEF0();
  v28 = (void *)type metadata accessor for ControlSessionSubscriptionRequest();
  v29 = (uint64_t (*)())sub_18FB203A8(&qword_1EE1896D0, (uint64_t (*)(uint64_t))type metadata accessor for ControlSessionSubscriptionRequest, (uint64_t)&protocol conformance descriptor for ControlSessionSubscriptionRequest);
  aBlock[0] = a1;
  swift_retain();
  v8 = sub_18FBCCEE4();
  v10 = v9;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  if (qword_1EE189B30 != -1)
    swift_once();
  v11 = sub_18FBCCF5C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EE1927D8);
  swift_retain_n();
  v12 = sub_18FBCCF44();
  v13 = sub_18FBCD394();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v26 = v8;
    v15 = swift_slowAlloc();
    aBlock[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_retain();
    v16 = sub_18FBA6490();
    v18 = v17;
    swift_release();
    sub_18FB6ECF4((uint64_t)v16, v18, aBlock);
    sub_18FBCD454();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_18FB18000, v12, v13, "Subscribing to session: %s", v14, 0xCu);
    swift_arrayDestroy();
    v19 = v15;
    v8 = v26;
    MEMORY[0x19400960C](v19, -1, -1);
    MEMORY[0x19400960C](v14, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v20 = sub_18FBA009C();
  if (v20)
  {
    v21 = (void *)v20;
    v22 = (void *)sub_18FBCCE60();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a2;
    v23[3] = v4;
    v23[4] = a1;
    v23[5] = nullsub_1;
    v23[6] = 0;
    v29 = sub_18FBA3F44;
    v30 = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_18FBA0008;
    v28 = &block_descriptor_323;
    v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v25 = a2;
    swift_release();
    objc_msgSend(v21, sel_subscribeToSessionWithRequest_completion_, v22, v24);
    sub_18FB77A8C(v8, v10);
    swift_unknownObjectRelease();
    _Block_release(v24);

  }
  else
  {
    sub_18FB77A8C(v8, v10);
  }
}

void sub_18FB9F07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  const __CFString *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock[3];
  void *v36;
  uint64_t (*v37)();
  _QWORD *v38;

  v4 = v3;
  BSDispatchQueueAssert();
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)&v3[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock];
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  swift_beginAccess();
  swift_retain();
  v11 = swift_retain();
  sub_18FBA2D08(v11, v8, (void (*)(uint64_t, uint64_t, uint64_t))sub_18FBABC14, (uint64_t *)&unk_1EE1896F0, (void (*)(_QWORD))type metadata accessor for ControlSessionSubscriptionRequest, (void (*)(unint64_t, uint64_t))sub_18FB809B4);
  swift_endAccess();
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  sub_18FBCCEF0();
  v36 = (void *)type metadata accessor for ControlSessionSubscriptionRequest();
  v37 = (uint64_t (*)())sub_18FB203A8(&qword_1EE1896D0, (uint64_t (*)(uint64_t))type metadata accessor for ControlSessionSubscriptionRequest, (uint64_t)&protocol conformance descriptor for ControlSessionSubscriptionRequest);
  aBlock[0] = a1;
  swift_retain();
  v12 = sub_18FBCCEE4();
  v14 = v13;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
  if (qword_1EE189B30 != -1)
    swift_once();
  v15 = sub_18FBCCF5C();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EE1927D8);
  swift_retain_n();
  v16 = sub_18FBCCF44();
  v17 = sub_18FBCD394();
  if (os_log_type_enabled(v16, v17))
  {
    v34 = a3;
    v18 = (uint8_t *)swift_slowAlloc();
    v32 = v12;
    v19 = swift_slowAlloc();
    aBlock[0] = v19;
    *(_DWORD *)v18 = 136315138;
    swift_retain();
    v20 = sub_18FBA6490();
    v33 = a2;
    v22 = v21;
    swift_release();
    sub_18FB6ECF4((uint64_t)v20, v22, aBlock);
    sub_18FBCD454();
    a2 = v33;
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_18FB18000, v16, v17, "Subscribing to session: %s", v18, 0xCu);
    swift_arrayDestroy();
    v23 = v19;
    v12 = v32;
    MEMORY[0x19400960C](v23, -1, -1);
    v24 = v18;
    a3 = v34;
    MEMORY[0x19400960C](v24, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v25 = sub_18FBA009C();
  if (v25)
  {
    v26 = (void *)v25;
    v27 = (void *)sub_18FBCCE60();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = v4;
    v28[3] = v8;
    v28[4] = a1;
    v28[5] = a2;
    v28[6] = a3;
    v37 = sub_18FBA3F44;
    v38 = v28;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_18FBA0008;
    v36 = &block_descriptor_130;
    v29 = v12;
    v30 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v31 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v26, sel_subscribeToSessionWithRequest_completion_, v27, v30);
    sub_18FB77A8C(v29, v14);
    swift_unknownObjectRelease();
    _Block_release(v30);

  }
  else
  {
    sub_18FB77A8C(v12, v14);
  }
}

void sub_18FB9F4EC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, void *))
{
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  const __CFString *v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  const __CFString *v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  id v40;
  id v41;
  NSObject *v42;
  uint64_t v43;
  const __CFString *v44;
  unint64_t v45;
  unint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  os_unfair_lock_s *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  const __CFString *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  NSObject *log;
  _QWORD *v64;
  uint64_t v65;
  os_log_type_t type;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70[3];
  uint64_t v71[4];

  BSDispatchQueueAssertNot();
  if (a2 >> 60 == 15)
  {
    if (!a3)
    {
      if (qword_1EE189B30 != -1)
        swift_once();
      v13 = sub_18FBCCF5C();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EE1927D8);
      swift_retain_n();
      v14 = sub_18FBCCF44();
      v15 = sub_18FBCD37C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        v71[0] = v17;
        *(_DWORD *)v16 = 136446210;
        swift_retain();
        v18 = sub_18FBA6490();
        v20 = v19;
        swift_release();
        v70[0] = sub_18FB6ECF4((uint64_t)v18, v20, v71);
        sub_18FBCD454();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_18FB18000, v14, v15, "Error subscribing to session %{public}s: unknown response", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v17, -1, -1);
        MEMORY[0x19400960C](v16, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      a7(0, 0);
      return;
    }
    goto LABEL_8;
  }
  if (a3)
  {
LABEL_8:
    v21 = a3;
    v22 = a3;
    if (qword_1EE189B30 != -1)
      swift_once();
    v23 = sub_18FBCCF5C();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE1927D8);
    swift_retain();
    v24 = a3;
    swift_retain();
    v25 = a3;
    v26 = sub_18FBCCF44();
    v27 = sub_18FBCD37C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v71[0] = v30;
      *(_DWORD *)v28 = 136446466;
      swift_retain();
      v31 = sub_18FBA6490();
      v33 = v32;
      swift_release();
      sub_18FB6ECF4((uint64_t)v31, v33, v71);
      sub_18FBCD454();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v28 + 12) = 2112;
      v34 = a3;
      v70[0] = _swift_stdlib_bridgeErrorToNSError();
      sub_18FBCD454();
      *v29 = v70[0];

      _os_log_impl(&dword_18FB18000, v26, v27, "Error subscribing to session %{public}s: %@", (uint8_t *)v28, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v30, -1, -1);
      MEMORY[0x19400960C](v28, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    v35 = a3;
    a7(0, a3);

    return;
  }
  sub_18FBCCEF0();
  type metadata accessor for ControlSessionSubscriptionResponse();
  sub_18FB8409C(a1, a2);
  sub_18FB203A8(&qword_1EE1896D8, (uint64_t (*)(uint64_t))type metadata accessor for ControlSessionSubscriptionResponse, (uint64_t)&protocol conformance descriptor for ControlSessionSubscriptionResponse);
  sub_18FBCCED8();
  swift_beginAccess();
  v36 = *(_QWORD *)(v71[0] + 16);
  if (v36)
  {
    swift_retain_n();
    SandboxExtension.consume()();
    if (v37)
    {
      swift_release();
      v38 = &unk_1EE189000;
      if (qword_1EE189B30 != -1)
        swift_once();
      v39 = sub_18FBCCF5C();
      __swift_project_value_buffer(v39, (uint64_t)qword_1EE1927D8);
      swift_retain();
      v40 = v37;
      swift_retain();
      v41 = v37;
      v42 = sub_18FBCCF44();
      type = sub_18FBCD37C();
      if (os_log_type_enabled(v42, type))
      {
        v43 = swift_slowAlloc();
        v64 = (_QWORD *)swift_slowAlloc();
        v65 = swift_slowAlloc();
        v70[0] = v65;
        *(_DWORD *)v43 = 136446466;
        swift_retain();
        log = v42;
        v44 = sub_18FBA6490();
        v46 = v45;
        swift_release();
        sub_18FB6ECF4((uint64_t)v44, v46, v70);
        sub_18FBCD454();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v43 + 12) = 2114;
        v47 = v37;
        v69 = _swift_stdlib_bridgeErrorToNSError();
        sub_18FBCD454();
        *v64 = v69;

        _os_log_impl(&dword_18FB18000, log, type, "[%{public}s] Failed consuming sandbox extension: %{public}@.", (uint8_t *)v43, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v64, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v65, -1, -1);
        v48 = v43;
        v38 = (_QWORD *)&unk_1EE189000;
        MEMORY[0x19400960C](v48, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      goto LABEL_29;
    }
    swift_release();
  }
  v49 = *(_QWORD *)(a4 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
  v50 = *(os_unfair_lock_s **)(v49 + 16);
  swift_retain();
  os_unfair_lock_lock(v50);
  swift_beginAccess();
  if (v36)
  {
    swift_retain();
    swift_retain();
    sub_18FBA2D08(v36, a5, (void (*)(uint64_t, uint64_t, uint64_t))sub_18FBABC28, &qword_1EE189700, (void (*)(_QWORD))type metadata accessor for SandboxExtension, (void (*)(unint64_t, uint64_t))sub_18FB809C0);
  }
  else
  {
    v51 = swift_retain();
    sub_18FBA2834(v51, (void (*)(void))sub_18FBACA9C, &qword_1EE189700, (void (*)(_QWORD))type metadata accessor for SandboxExtension, (void (*)(unint64_t, uint64_t))sub_18FB809C0);
    swift_release();
  }
  v38 = (_QWORD *)&unk_1EE189000;
  swift_release();
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 16));
  swift_release();
LABEL_29:
  v52 = *(_QWORD *)(a6 + 16);
  swift_beginAccess();
  v53 = objc_msgSend(*(id *)(v52 + 32), sel_contentType);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE189AA0);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_18FBD6750;
  *(_QWORD *)(v54 + 32) = objc_msgSend(*(id *)(v52 + 32), sel_control);
  v69 = v54;
  sub_18FBCD2A4();
  if (v53 == (id)1)
    sub_18FBA13C4(v54);
  else
    sub_18FBA13A8(v54);
  swift_bridgeObjectRelease();
  if (v38[358] != -1)
    swift_once();
  v55 = sub_18FBCCF5C();
  __swift_project_value_buffer(v55, (uint64_t)qword_1EE1927D8);
  swift_retain_n();
  v56 = sub_18FBCCF44();
  v57 = sub_18FBCD370();
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc();
    v67 = swift_slowAlloc();
    v69 = v67;
    *(_DWORD *)v58 = 136446210;
    swift_retain();
    v59 = sub_18FBA6490();
    v61 = v60;
    swift_release();
    sub_18FB6ECF4((uint64_t)v59, v61, &v69);
    sub_18FBCD454();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_18FB18000, v56, v57, "Successfully subscribed to session: %{public}s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400960C](v67, -1, -1);
    MEMORY[0x19400960C](v58, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v62 = swift_retain();
  a7(v62, 0);
  sub_18FB840E0(a1, a2);
  swift_release_n();
  swift_release();
}

uint64_t sub_18FBA0008(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_18FBCCE78();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_18FB840E0((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_18FBA009C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  _OWORD v16[2];
  __int128 v17;
  __int128 v18;

  BSDispatchQueueAssert();
  BSDispatchQueueAssert();
  sub_18FBA0368();
  v1 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection);
  if (!v2)
    goto LABEL_7;
  v3 = v2;
  if (!objc_msgSend(v3, sel_remoteTarget))
  {
    v17 = 0u;
    v18 = 0u;
    sub_18FB1F7C4((uint64_t)&v17);
    objc_msgSend(v3, sel_activate);

    v4 = *(void **)(v0 + v1);
    if (v4)
      goto LABEL_4;
LABEL_7:
    if (qword_1EE189B30 != -1)
      swift_once();
    v6 = sub_18FBCCF5C();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EE1927D8);
    v7 = sub_18FBCCF44();
    v8 = sub_18FBCD388();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_18FB18000, v7, v8, "Failed to establish a connection", v9, 2u);
      MEMORY[0x19400960C](v9, -1, -1);
    }

    return 0;
  }
  sub_18FBCD478();
  swift_unknownObjectRelease();

  sub_18FB1F7C4((uint64_t)&v17);
  v4 = *(void **)(v0 + v1);
  if (!v4)
    goto LABEL_7;
LABEL_4:
  v5 = v4;
  if (objc_msgSend(v5, sel_remoteTarget))
  {
    sub_18FBCD478();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  sub_18FBA3EF8((uint64_t)v16, (uint64_t)&v17);
  if (*((_QWORD *)&v18 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189A88);
    if ((swift_dynamicCast() & 1) != 0)
    {

      return v15;
    }
  }
  else
  {
    sub_18FB1F7C4((uint64_t)&v17);
  }
  if (qword_1EE189B30 != -1)
    swift_once();
  v11 = sub_18FBCCF5C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EE1927D8);
  v12 = sub_18FBCCF44();
  v13 = sub_18FBCD388();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_18FB18000, v12, v13, "Failed to cast connection to server interface protocol", v14, 2u);
    MEMORY[0x19400960C](v14, -1, -1);
  }

  return 0;
}

void sub_18FBA0368()
{
  char *v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char isEscapingClosureAtFileLocation;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t aBlock[5];
  const char *v19;
  uint64_t v20;

  BSDispatchQueueAssert();
  v1 = OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection])
  {
    v2 = (unint64_t)"com.apple.chrono";
    v3 = (void *)sub_18FBCD0B8();
    v4 = (void *)sub_18FBCD0B8();
    v17 = objc_msgSend((id)objc_opt_self(), sel_endpointForMachName_service_instance_, v3, v4, 0);

    if (v17)
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_connectionWithEndpoint_, v17);
      if (!v5)
      {
LABEL_11:

        return;
      }
      v6 = *(void **)&v0[v1];
      *(_QWORD *)&v0[v1] = v5;
      v7 = v5;

      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v0;
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = sub_18FBA3ED0;
      *(_QWORD *)(v9 + 24) = v8;
      aBlock[4] = (uint64_t)sub_18FB6F3D4;
      v19 = (const char *)v9;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_18FBA0FE4;
      aBlock[3] = (uint64_t)&block_descriptor_106;
      v10 = _Block_copy(aBlock);
      v2 = (unint64_t)v19;
      v11 = v0;
      swift_retain();
      swift_release();
      objc_msgSend(v7, sel_configureConnection_, v10);

      _Block_release(v10);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return;
      __break(1u);
    }
    if (qword_1EE189B30 != -1)
      swift_once();
    v13 = sub_18FBCCF5C();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EE1927D8);
    v17 = sub_18FBCCF44();
    v14 = sub_18FBCD388();
    if (os_log_type_enabled(v17, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      aBlock[0] = v16;
      *(_DWORD *)v15 = 136446210;
      v20 = sub_18FB6ECF4(0xD000000000000018, v2 | 0x8000000000000000, aBlock);
      sub_18FBCD454();
      _os_log_impl(&dword_18FB18000, v17, v14, "Unable to get endpoint for mach-service: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v16, -1, -1);
      MEMORY[0x19400960C](v15, -1, -1);

      return;
    }
    goto LABEL_11;
  }
}

void sub_18FBA06C8(void *a1, void *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, void *);
  void *v19;
  void *v20;
  uint64_t v21;

  v4 = (void *)sub_18FBCD0B8();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  if (qword_1EE189CB0 != -1)
    swift_once();
  v6 = qword_1EE189D80;
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_protocolForProtocol_, v6);
  objc_msgSend(v5, sel_setClient_, v8);

  if (qword_1EE189D98 != -1)
    swift_once();
  v9 = objc_msgSend(v7, sel_protocolForProtocol_, qword_1EE189D88);
  objc_msgSend(v5, sel_setServer_, v9);

  if (qword_1EE189DB0 != -1)
    swift_once();
  objc_msgSend(a1, sel_setServiceQuality_, qword_1EE189DA0);
  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  v20 = sub_18FBA09B4;
  v21 = 0;
  v10 = MEMORY[0x1E0C809B0];
  v16 = MEMORY[0x1E0C809B0];
  v17 = 1107296256;
  v18 = sub_18FB7DAA4;
  v19 = &block_descriptor_109;
  v11 = _Block_copy(&v16);
  objc_msgSend(a1, sel_setActivationHandler_, v11);
  _Block_release(v11);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  v20 = sub_18FBA3EE8;
  v21 = v12;
  v16 = v10;
  v17 = 1107296256;
  v18 = sub_18FB7DAA4;
  v19 = &block_descriptor_115;
  v13 = _Block_copy(&v16);
  v14 = a2;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v13);
  _Block_release(v13);
  v20 = sub_18FBA0F04;
  v21 = 0;
  v16 = v10;
  v17 = 1107296256;
  v18 = sub_18FB7DAA4;
  v19 = &block_descriptor_118;
  v15 = _Block_copy(&v16);
  objc_msgSend(a1, sel_setInvalidationHandler_, v15);
  _Block_release(v15);

}

void sub_18FBA09B4(uint64_t a1)
{
  sub_18FBA0F10(a1, "Connection Activated");
}

uint64_t sub_18FBA09C0(uint64_t a1, char *a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;

  if (qword_1EE189B30 != -1)
    swift_once();
  v3 = sub_18FBCCF5C();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE1927D8);
  v4 = sub_18FBCCF44();
  v5 = sub_18FBCD394();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_18FB18000, v4, v5, "Connection Interrupted", v6, 2u);
    MEMORY[0x19400960C](v6, -1, -1);
  }

  v7 = *(_QWORD *)&a2[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock];
  v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  sub_18FBA0AD0(a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  return swift_release();
}

uint64_t sub_18FBA0AD0(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[11];

  v3 = sub_18FBCD004();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_18FBCD034();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &a1[OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_subscriptions];
  result = swift_beginAccess();
  if ((*(_QWORD *)v10 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v12 = sub_18FBCD4B4();
    result = swift_bridgeObjectRelease();
    if (!v12)
      return result;
  }
  else if (!*(_QWORD *)(*(_QWORD *)v10 + 16))
  {
    return result;
  }
  v24 = v4;
  v25 = v1;
  if (qword_1EE189B30 != -1)
    swift_once();
  v13 = sub_18FBCCF5C();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EE1927D8);
  v14 = a1;
  v15 = sub_18FBCCF44();
  v16 = sub_18FBCD394();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v17 = 134217984;
    v18 = *(_QWORD *)v10;
    if ((v18 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v19 = sub_18FBCD4B4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *(_QWORD *)(v18 + 16);
    }
    aBlock[0] = v19;
    sub_18FBCD454();

    _os_log_impl(&dword_18FB18000, v15, v16, "Reconnecting because we had %ld subscriptions active.", v17, 0xCu);
    MEMORY[0x19400960C](v17, -1, -1);
  }
  else
  {

  }
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v14;
  aBlock[4] = sub_18FBA3EF0;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_124;
  v21 = _Block_copy(aBlock);
  v22 = v14;
  sub_18FBCD010();
  aBlock[10] = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v9, v6, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v27);
  return swift_release();
}

void sub_18FBA0E54(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  _OWORD v5[2];

  v2 = BSDispatchQueueAssert();
  sub_18FBA0368(v2);
  v3 = *(void **)(a1 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__queue_connection);
  if (v3)
  {
    v4 = v3;
    if (objc_msgSend(v4, sel_remoteTarget))
    {
      sub_18FBCD478();
      swift_unknownObjectRelease();

      sub_18FB1F7C4((uint64_t)v5);
    }
    else
    {
      memset(v5, 0, sizeof(v5));
      sub_18FB1F7C4((uint64_t)v5);
      objc_msgSend(v4, sel_activate);

    }
  }
}

void sub_18FBA0F04(uint64_t a1)
{
  sub_18FBA0F10(a1, "Connection Invalidated");
}

void sub_18FBA0F10(uint64_t a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_1EE189B30 != -1)
    swift_once();
  v3 = sub_18FBCCF5C();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE1927D8);
  oslog = sub_18FBCCF44();
  v4 = sub_18FBCD394();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_18FB18000, oslog, v4, a2, v5, 2u);
    MEMORY[0x19400960C](v5, -1, -1);
  }

}

uint64_t sub_18FBA0FE4(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_18FBA1020(unint64_t a1)
{
  return sub_18FBA1068(a1, "Notifying of %ld live controls changed.", (uint64_t)&unk_1E2A5D560, (uint64_t)sub_18FBA3E8C, (uint64_t)&block_descriptor_97);
}

uint64_t sub_18FBA1044(unint64_t a1)
{
  return sub_18FBA1068(a1, "Notifying of %ld preview controls changed.", (uint64_t)&unk_1E2A5D538, (uint64_t)sub_18FBA3E74, (uint64_t)&block_descriptor_91);
}

uint64_t sub_18FBA1068(unint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v29 = a3;
  v30 = a4;
  v28 = a2;
  v7 = v5;
  v9 = sub_18FBCD004();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_18FBCD034();
  v13 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssert();
  if (qword_1EE189B30 != -1)
    swift_once();
  v16 = sub_18FBCCF5C();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EE1927D8);
  swift_bridgeObjectRetain_n();
  v17 = sub_18FBCCF44();
  v18 = sub_18FBCD394();
  if (os_log_type_enabled(v17, v18))
  {
    v26 = a5;
    v27 = v10;
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 134217984;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v20 = sub_18FBCD628();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    aBlock[0] = v20;
    sub_18FBCD454();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FB18000, v17, v18, v28, v19, 0xCu);
    MEMORY[0x19400960C](v19, -1, -1);

    a5 = v26;
    v10 = v27;
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v7;
  *(_QWORD *)(v21 + 24) = a1;
  aBlock[4] = v30;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = a5;
  v22 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v23 = v7;
  sub_18FBCD010();
  v32 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v15, v12, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v31);
  return swift_release();
}

uint64_t sub_18FBA13A8(uint64_t a1)
{
  return sub_18FBA13E0(a1, (uint64_t)&unk_1E2A5D7B8, (uint64_t)sub_18FBA4014, (uint64_t)&block_descriptor_172);
}

uint64_t sub_18FBA13C4(uint64_t a1)
{
  return sub_18FBA13E0(a1, (uint64_t)&unk_1E2A5D768, (uint64_t)sub_18FBA3FE4, (uint64_t)&block_descriptor_166);
}

uint64_t sub_18FBA13E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];

  v8 = sub_18FBCD004();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_18FBCD034();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertNot();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v4;
  *(_QWORD *)(v14 + 24) = a1;
  aBlock[4] = a3;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = a4;
  v15 = _Block_copy(aBlock);
  v16 = v4;
  swift_bridgeObjectRetain();
  sub_18FBCD010();
  v21 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v13, v10, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  return swift_release();
}

id ControlsClient.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ControlsClient();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18FBA16F8()
{
  return sub_18FB9725C();
}

uint64_t sub_18FBA1718()
{
  return sub_18FB972C8();
}

void sub_18FBA1738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  ControlsClient.reloadControls(forExtension:kind:reason:)(*(Swift::String *)&a1, *(Swift::String_optional *)&a3, *(Swift::String *)&a5);
}

uint64_t sub_18FBA1758(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 48) = a5;
  *(_BYTE *)(v6 + 88) = a3;
  *(_QWORD *)(v6 + 24) = a1;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 56) = *v5;
  return swift_task_switch();
}

uint64_t sub_18FBA1780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v7;
  *(_QWORD *)(v7 + 16) = v1;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = v4;
  *(_BYTE *)(v7 + 40) = v5;
  *(_QWORD *)(v7 + 48) = v3;
  *(_QWORD *)(v7 + 56) = v2;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B868);
  *v8 = v0;
  v8[1] = sub_18FBA1858;
  return sub_18FBCD7D8();
}

uint64_t sub_18FBA1858()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FBA18C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v3;
  return swift_task_switch();
}

uint64_t sub_18FBA18E0()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B878);
  *v2 = v0;
  v2[1] = sub_18FB9D67C;
  return sub_18FBCD7D8();
}

uint64_t sub_18FBA1994(uint64_t *a1)
{
  return ControlsClient.updateControlHostConfiguration(host:)(a1);
}

uint64_t sub_18FBA19B4(uint64_t *a1)
{
  return ControlsClient.updateControlHostActivationState(host:)(a1);
}

uint64_t sub_18FBA19D4(uint64_t *a1)
{
  return ControlsClient.invalidateControlHost(host:)(a1);
}

uint64_t sub_18FBA19F4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = *v0;
  return swift_task_switch();
}

uint64_t sub_18FBA1A10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[3];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B858);
  *v3 = v0;
  v3[1] = sub_18FBA1AC0;
  return sub_18FBCD7D8();
}

uint64_t sub_18FBA1AC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FBA1B2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_18FBA1B48()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_18FB9E0C8;
  return sub_18FBCD7D8();
}

uint64_t sub_18FBA1BE4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_18FBA1C00()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_18FB9DAF0;
  return sub_18FBCD7D8();
}

uint64_t sub_18FBA1C9C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_18FBA1CB8()
{
  int8x16_t *v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *v2 = v0;
  v2[1] = sub_18FB9DAF0;
  return sub_18FBCD7D8();
}

uint64_t sub_18FBA1D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ControlsClient.subscribeToSession(withRequest:completion:)(a1, a2, a3);
}

uint64_t sub_18FBA1D74(uint64_t a1)
{
  return ControlsClient.unsubscribe(fromSession:)(a1);
}

uint64_t sub_18FBA1D94(uint64_t a1, uint64_t a2)
{
  return ControlsClient.setVisiblySettled(_:forSession:)(a1, a2);
}

uint64_t sub_18FBA1DB4(char *a1, uint64_t a2)
{
  return ControlsClient.setTaskPriority(_:forSession:)(a1, a2);
}

uint64_t sub_18FBA1DD4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return ControlsClient.setEnvironmentModifiers(_:forSession:)(a1, a2, a3);
}

uint64_t sub_18FBA1DF4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_18FBA1E14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_18FBA1EBC;
  return sub_18FBCD7D8();
}

uint64_t sub_18FBA1EBC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_18FBA1F28(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_18FBA1F48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[3];
  v1 = v0[4];
  v3 = v0[2];
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_18FB9ACC0;
  return sub_18FBCD7D8();
}

uint64_t ControlsClient.systemEnvironmentDidChange(_:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  void (**v8)(uint64_t, unint64_t);
  uint64_t result;
  void (*v10)(uint64_t, unint64_t);

  BSDispatchQueueAssertNot();
  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData);
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData + 8);
  *v5 = a1;
  v5[1] = a2;
  sub_18FB8409C(a1, a2);
  sub_18FB840E0(v6, v7);
  v8 = (void (**)(uint64_t, unint64_t))(v2
                                                       + OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange);
  result = swift_beginAccess();
  v10 = *v8;
  if (*v8)
  {
    swift_retain();
    v10(a1, a2);
    return sub_18FB7C270((uint64_t)v10);
  }
  return result;
}

uint64_t ControlsClient.liveControlsDidChange(_:)(uint64_t a1, uint64_t a2)
{
  return sub_18FBA2180(a1, a2, "Received live control info did change: %{public}s", (void (*)(uint64_t))sub_18FBA13A8);
}

void sub_18FBA20E4(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t, unint64_t))
{
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;

  v6 = a3;
  v10 = a1;
  v7 = sub_18FBCCE78();
  v9 = v8;

  a4(v7, v9);
  sub_18FB77A8C(v7, v9);

}

uint64_t ControlsClient.previewControlsDidChange(_:)(uint64_t a1, uint64_t a2)
{
  return sub_18FBA2180(a1, a2, "Received preview control info did change: %{public}s", (void (*)(uint64_t))sub_18FBA13C4);
}

uint64_t sub_18FBA2180(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  BSDispatchQueueAssertNot();
  sub_18FBCCEF0();
  sub_18FBA3B4C();
  sub_18FBCCED8();
  v6 = v16;
  if (qword_1EE189B30 != -1)
    swift_once();
  v7 = sub_18FBCCF5C();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EE1927D8);
  swift_bridgeObjectRetain_n();
  v8 = sub_18FBCCF44();
  v9 = sub_18FBCD394();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v16 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_18FB1F254(0, (unint64_t *)&qword_1EE189E70);
    v13 = MEMORY[0x19400840C](v6, v12);
    sub_18FB6ECF4(v13, v14, &v16);
    sub_18FBCD454();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FB18000, v8, v9, a3, v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400960C](v11, -1, -1);
    MEMORY[0x19400960C](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  a4(v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBA254C()
{
  uint64_t *v0;

  return sub_18FB994A4(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t objectdestroy_23Tm_0()
{
  uint64_t v0;

  swift_release();

  sub_18FB77A8C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocObject();
}

void sub_18FBA2594()
{
  uint64_t v0;

  sub_18FB99C9C(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_18FBA25A4()
{
  uint64_t v0;

  swift_release();

  sub_18FB77A8C(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  sub_18FB77A8C(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_18FBA25E0()
{
  uint64_t v0;

  return sub_18FB9A480(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_18FBA25F0(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB9AD2C(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_1E2A5DB00, (uint64_t)sub_18FBA4788, (uint64_t)&block_descriptor_298);
}

uint64_t sub_18FBA2624(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB9AD2C(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (uint64_t)&unk_1E2A5DA88, (uint64_t)sub_18FBA46CC, (uint64_t)&block_descriptor_280);
}

uint64_t sub_18FBA2658()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_18FBA2694()
{
  uint64_t v0;

  sub_18FB9B4E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_18FBA26AC()
{
  return sub_18FBA270C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18FB9B72C);
}

uint64_t sub_18FBA26BC()
{
  return sub_18FBA270C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18FB9BBD0);
}

uint64_t objectdestroy_51Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18FBA2700()
{
  return sub_18FBA270C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_18FB9BE5C);
}

uint64_t sub_18FBA270C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_18FBA2720(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB9C1CC(a1, *(char **)(v1 + 16));
}

uint64_t sub_18FBA272C(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB9DB5C(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), &qword_1EE18B9C0, (uint64_t)&unk_1E2A5D948, (uint64_t)sub_18FBA424C, (uint64_t)&block_descriptor_232);
}

uint64_t sub_18FBA2764(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB9DB5C(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), &qword_1EE18B9B8, (uint64_t)&unk_1E2A5D8D0, (uint64_t)sub_18FBA4188, (uint64_t)&block_descriptor_214);
}

uint64_t sub_18FBA279C(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB9DB5C(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), &qword_1EE18B9B8, (uint64_t)&unk_1E2A5D858, (uint64_t)sub_18FBA4094, (uint64_t)&block_descriptor_196);
}

uint64_t sub_18FBA27D4(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB9DB5C(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), &qword_1EE18B9B8, (uint64_t)&unk_1E2A5D7E0, (uint64_t)sub_18FBA4044, (uint64_t)&block_descriptor_178);
}

uint64_t sub_18FBA280C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_18FBA2834(uint64_t a1, void (*a2)(void), uint64_t *a3, void (*a4)(_QWORD), void (*a5)(unint64_t, uint64_t))
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v8;
  void (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v25;

  v6 = v5;
  v8 = *v6;
  if ((*v6 & 0xC000000000000001) == 0)
  {
    v12 = a2;
    swift_bridgeObjectRetain();
    v15 = sub_18FB7F910(a1);
    v21 = v20;
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = *v6;
      v25 = *v6;
      *v6 = 0x8000000000000000;
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_10:
        swift_release();
        v19 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v15);
        sub_18FBA32A4(v15, v23);
        *v6 = v23;
        goto LABEL_11;
      }
LABEL_16:
      v12();
      v23 = v25;
      goto LABEL_10;
    }
    return 0;
  }
  if (v8 < 0)
    v12 = (void (*)(void))*v6;
  else
    v12 = (void (*)(void))(v8 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_retain();
  v13 = sub_18FBCD5F8();
  swift_release();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v14 = sub_18FBCD4B4();
  v15 = sub_18FBA3004((uint64_t)v12, v14, a3, a4, a5);
  swift_retain();
  v16 = sub_18FB7F910(a1);
  v18 = v17;
  swift_release();
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  swift_release();
  v19 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  sub_18FBA32A4(v16, v15);
  *v6 = v15;
LABEL_11:
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_18FBA29E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_18FB7F7E4(a1, a2);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    v16 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_18FBACC48();
      v12 = v16;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56) + 32 * v8;
    v14 = *(_OWORD *)v13;
    v15 = *(_QWORD *)(v13 + 16);
    LOBYTE(v13) = *(_BYTE *)(v13 + 24);
    *(_OWORD *)a3 = v14;
    *(_QWORD *)(a3 + 16) = v15;
    *(_BYTE *)(a3 + 24) = v13;
    sub_18FBA34D0(v8, v12);
    *v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_BYTE *)(a3 + 24) = 0;
    *(_QWORD *)(a3 + 16) = 0;
  }
  return result;
}

uint64_t sub_18FBA2AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_18FBA2B0C(a1, a2, a3, a4, type metadata accessor for IconStore.FileVersionUpdateMigration, (void (*)(void))sub_18FBACFC4, a5);
}

uint64_t sub_18FBA2AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_18FBA2B0C(a1, a2, a3, a4, type metadata accessor for IconStore.FileRenameMigration, (void (*)(void))sub_18FBACFD8, a5);
}

uint64_t sub_18FBA2B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD)@<X4>, void (*a6)(void)@<X5>, uint64_t a7@<X8>)
{
  uint64_t *v7;
  uint64_t *v10;
  unint64_t v16;
  char v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v10 = v7;
  swift_bridgeObjectRetain();
  v16 = sub_18FB7F9FC(a1, a2, a3, a4);
  LOBYTE(a4) = v17;
  swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v10;
    v25 = *v10;
    *v10 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a6();
      v19 = v25;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(v19 + 56);
    v21 = a5(0);
    v22 = *(_QWORD *)(v21 - 8);
    sub_18FB826C8(v20 + *(_QWORD *)(v22 + 72) * v16, a7, a5);
    sub_18FBA36AC(v16, v19, a5);
    *v10 = v19;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(a7, 0, 1, v21);
  }
  else
  {
    v24 = a5(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a7, 1, 1, v24);
  }
}

uint64_t sub_18FBA2C68(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = sub_18FBCD4B4();
  if (!__OFADD__(result, 1))
  {
    *v3 = sub_18FBA2DD4(v7, result + 1);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_18FBAB938(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_18FBA2D08(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t *a4, void (*a5)(_QWORD), void (*a6)(unint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t *v8;
  uint64_t v11;
  uint64_t v15;
  uint64_t result;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v18;

  v8 = v6;
  v11 = *v6;
  if ((*v6 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v11 < 0)
    v15 = *v6;
  else
    v15 = v11 & 0xFFFFFFFFFFFFFF8;
  result = sub_18FBCD4B4();
  if (!__OFADD__(result, 1))
  {
    *v8 = sub_18FBA3004(v15, result + 1, a4, a5, a6);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v8;
    *v8 = 0x8000000000000000;
    a3(a1, a2, isUniquelyReferenced_nonNull_native);
    *v8 = v18;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_18FBA2DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188050);
    v2 = sub_18FBCD658();
    v18 = v2;
    sub_18FBCD5E0();
    v3 = sub_18FBCD604();
    if (v3)
    {
      v4 = v3;
      type metadata accessor for CHSExtensionIdentity();
      do
      {
        swift_dynamicCast();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B0);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_18FB7FDA4(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_18FBCD400();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_18FBCD604();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_18FBA3004(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD), void (*a5)(unint64_t, uint64_t))
{
  uint64_t v6;
  id v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_18FBCD658();
    v23 = v6;
    sub_18FBCD5E0();
    if (sub_18FBCD604())
    {
      type metadata accessor for ControlSessionKey();
      do
      {
        swift_dynamicCast();
        a4(0);
        swift_dynamicCast();
        v6 = v23;
        v15 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v15)
        {
          a5(v15 + 1, 1);
          v6 = v23;
        }
        sub_18FBCD850();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_18FBCD130();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v7 = *(id *)(v22 + 32);
        sub_18FBCD418();

        result = sub_18FBCD88C();
        v9 = v6 + 64;
        v10 = -1 << *(_BYTE *)(v6 + 32);
        v11 = result & ~v10;
        v12 = v11 >> 6;
        if (((-1 << v11) & ~*(_QWORD *)(v6 + 64 + 8 * (v11 >> 6))) != 0)
        {
          v13 = __clz(__rbit64((-1 << v11) & ~*(_QWORD *)(v6 + 64 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v10) >> 6;
          do
          {
            if (++v12 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v12 == v17;
            if (v12 == v17)
              v12 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v9 + 8 * v12);
          }
          while (v19 == -1);
          v13 = __clz(__rbit64(~v19)) + (v12 << 6);
        }
        *(_QWORD *)(v9 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        v14 = 8 * v13;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + v14) = v22;
        *(_QWORD *)(*(_QWORD *)(v6 + 56) + v14) = v21;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_18FBCD604());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v6;
}

unint64_t sub_18FBA32A4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_18FBCD490();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_18FBCD850();
        swift_beginAccess();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_18FBCD130();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v10 = *(id *)(v9 + 32);
        sub_18FBCD418();

        v11 = sub_18FBCD88C();
        result = swift_release();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v3);
          v18 = (_QWORD *)(v16 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18FBA34D0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_18FBCD490();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_18FBCD850();
        swift_bridgeObjectRetain();
        sub_18FBCD130();
        v10 = sub_18FBCD88C();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (32 * v3 != 32 * v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_18FBA36AC(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;

  v3 = a2;
  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v8 = ~v6;
    result = sub_18FBCD490();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v40 = v3;
      v41 = v5;
      v42 = (result + 1) & v8;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 32 * v7);
        v10 = *v9;
        v11 = v9[1];
        v12 = v8;
        v13 = v9[2];
        v14 = v9[3];
        sub_18FBCD850();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A128);
        inited = swift_initStackObject();
        v16 = inited;
        *(_OWORD *)(inited + 16) = xmmword_18FBD6250;
        if (v14)
          v17 = v13;
        else
          v17 = 0;
        *(_QWORD *)(inited + 32) = v17;
        *(_QWORD *)(inited + 40) = v14;
        *(_QWORD *)(inited + 48) = v10;
        *(_QWORD *)(inited + 56) = v11;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_18FB1EB44(v16, &v43);
        v18 = v43;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
        v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_18FBD6060;
        v20 = sub_18FB1E0E4();
        v21 = sub_18FB1E3F8(v20);
        v23 = v22;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 32) = v21;
        *(_QWORD *)(v19 + 40) = v23;
        swift_bridgeObjectRetain();
        sub_18FB1DFFC((uint64_t)v18);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
        sub_18FB1E9FC((unint64_t *)&qword_1EE18A150, (uint64_t *)&unk_1EE18A140, MEMORY[0x1E0DEAF20]);
        sub_18FBCD070();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_18FBCD130();
        swift_bridgeObjectRelease();
        v24 = sub_18FBCD88C();
        v8 = v12;
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v25 = v24 & v12;
        if (v4 >= (uint64_t)v42)
        {
          if (v25 < v42)
          {
            v3 = v40;
            v5 = v41;
            goto LABEL_6;
          }
          v3 = v40;
          v5 = v41;
          if (v4 < (uint64_t)v25)
            goto LABEL_6;
        }
        else
        {
          v3 = v40;
          v5 = v41;
          if (v25 < v42 && v4 < (uint64_t)v25)
            goto LABEL_6;
        }
        v26 = *(_QWORD *)(v3 + 48);
        v27 = (_OWORD *)(v26 + 32 * v4);
        v28 = (_OWORD *)(v26 + 32 * v7);
        if (v4 != v7 || v27 >= v28 + 2)
        {
          v29 = v28[1];
          *v27 = *v28;
          v27[1] = v29;
        }
        v30 = *(_QWORD *)(v3 + 56);
        v31 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v32 = v31 * v4;
        result = v30 + v31 * v4;
        if (v31 * v4 < (uint64_t)(v31 * v7) || result >= v30 + v31 * v7 + v31)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v32 == v31 * v7)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v12;
      }
      while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    v33 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v34 = *v33;
    v35 = (-1 << v4) - 1;
  }
  else
  {
    v33 = (uint64_t *)(v5 + 8 * (result >> 6));
    v35 = *v33;
    v34 = (-1 << result) - 1;
  }
  *v33 = v35 & v34;
  v36 = *(_QWORD *)(v3 + 16);
  v37 = __OFSUB__(v36, 1);
  v38 = v36 - 1;
  if (v37)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v38;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_18FBA3A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, unint64_t);
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  unint64_t v12;
  os_unfair_lock_s *v13;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient_handleSystemEnvironmentDidChange);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  sub_18FB87340(a1);
  result = sub_18FB7C270(v6);
  v8 = (void (*)(uint64_t, unint64_t))*v5;
  if (*v5)
  {
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock);
    v10 = *(os_unfair_lock_s **)(v9 + 16);
    swift_retain();
    sub_18FB87340((uint64_t)v8);
    os_unfair_lock_lock(v10);
    v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData);
    v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14ChronoServices14ControlsClient__lock_environmentData + 8);
    v13 = *(os_unfair_lock_s **)(v9 + 16);
    sub_18FB840F4(v11, v12);
    os_unfair_lock_unlock(v13);
    swift_release();
    if (v12 >> 60 == 15)
    {
      return sub_18FB7C270((uint64_t)v8);
    }
    else
    {
      v8(v11, v12);
      sub_18FB7C270((uint64_t)v8);
      return sub_18FB840E0(v11, v12);
    }
  }
  return result;
}

unint64_t sub_18FBA3B4C()
{
  unint64_t result;

  result = qword_1EE189B58;
  if (!qword_1EE189B58)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for ControlsDidChangeXPCData, &type metadata for ControlsDidChangeXPCData);
    atomic_store(result, (unint64_t *)&qword_1EE189B58);
  }
  return result;
}

uint64_t sub_18FBA3B90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB9725C();
  *a1 = result;
  return result;
}

uint64_t sub_18FBA3BB8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___liveControlsDidChangePublisher);
}

uint64_t sub_18FBA3BC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB972C8();
  *a1 = result;
  return result;
}

uint64_t sub_18FBA3BEC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC14ChronoServices14ControlsClient____lazy_storage___previewControlsDidChangePublisher);
}

uint64_t keypath_setTm(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  *(_QWORD *)(*a2 + *a5) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for ControlsClientFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for ControlsClientFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for ControlsClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlsClient.liveControlsDidChangePublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ControlsClient.liveControlsDidChangePublisher.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ControlsClient.liveControlsDidChangePublisher.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ControlsClient.previewControlsDidChangePublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ControlsClient.previewControlsDidChangePublisher.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ControlsClient.previewControlsDidChangePublisher.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ControlsClient.setControlState(request:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x160);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_18FB77DC8;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ControlsClient.performControlAction(request:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x168);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_18FB78030;
  return v9(a1, a2);
}

uint64_t dispatch thunk of ControlsClient.handleSystemEnvironmentDidChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ControlsClient.handleSystemEnvironmentDidChange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ControlsClient.handleSystemEnvironmentDidChange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t sub_18FBA3E68()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_18FBA3E74()
{
  return sub_18FBA3E98();
}

uint64_t sub_18FBA3E80()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_18FBA3E8C()
{
  return sub_18FBA3E98();
}

uint64_t sub_18FBA3E98()
{
  return sub_18FBCCFA4();
}

void sub_18FBA3ED0(void *a1)
{
  uint64_t v1;

  sub_18FBA06C8(a1, *(void **)(v1 + 16));
}

uint64_t sub_18FBA3ED8()
{
  return swift_deallocObject();
}

uint64_t sub_18FBA3EE8(uint64_t a1)
{
  uint64_t v1;

  return sub_18FBA09C0(a1, *(char **)(v1 + 16));
}

void sub_18FBA3EF0()
{
  uint64_t v0;

  sub_18FBA0E54(*(_QWORD *)(v0 + 16));
}

uint64_t sub_18FBA3EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FBA3F48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FBA3F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_18FBA3F9C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_18FBA3FC4(uint64_t a1)
{
  uint64_t v1;

  return sub_18FB9CC10(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_18FBA3FD8()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_18FBA3FE4()
{
  uint64_t v0;

  return sub_18FBA1044(*(_QWORD *)(v0 + 24));
}

uint64_t sub_18FBA4008()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_18FBA4014()
{
  uint64_t v0;

  return sub_18FBA1020(*(_QWORD *)(v0 + 24));
}

uint64_t sub_18FBA4038()
{
  return objectdestroy_174Tm(&qword_1EE18B9B8);
}

uint64_t sub_18FBA4044()
{
  return sub_18FBA4260(&qword_1EE18B9B8, (uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_18FB9E42C);
}

uint64_t sub_18FBA4058()
{
  return objectdestroy_180Tm(&qword_1EE18B9B8);
}

uint64_t sub_18FBA4064(void *a1)
{
  return sub_18FBA40D0(a1, (uint64_t)&unk_1E2A5D830, (uint64_t)sub_18FBA4084, (uint64_t)&block_descriptor_190);
}

uint64_t sub_18FBA4088()
{
  return objectdestroy_174Tm(&qword_1EE18B9B8);
}

uint64_t sub_18FBA4094()
{
  return sub_18FBA4260(&qword_1EE18B9B8, (uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_18FB9E134);
}

uint64_t sub_18FBA40A8()
{
  return objectdestroy_180Tm(&qword_1EE18B9B8);
}

uint64_t sub_18FBA40B4(void *a1)
{
  return sub_18FBA40D0(a1, (uint64_t)&unk_1E2A5D8A8, (uint64_t)sub_18FBA4084, (uint64_t)&block_descriptor_208);
}

uint64_t sub_18FBA40D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8) - 8) + 80);
  return sub_18FB9E670(a1, *(_QWORD *)(v4 + 16), v4 + ((v9 + 24) & ~v9), a2, a3, a4);
}

uint64_t sub_18FBA4144()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  return sub_18FB9E8E0(*(void **)(v0 + 16));
}

uint64_t sub_18FBA417C()
{
  return objectdestroy_174Tm(&qword_1EE18B9B8);
}

uint64_t sub_18FBA4188()
{
  return sub_18FBA4260(&qword_1EE18B9B8, (uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_18FB9DDD0);
}

uint64_t sub_18FBA419C()
{
  return objectdestroy_180Tm(&qword_1EE18B9B8);
}

uint64_t sub_18FBA41A8(void *a1)
{
  return sub_18FBA40D0(a1, (uint64_t)&unk_1E2A5D920, (uint64_t)sub_18FBA4084, (uint64_t)&block_descriptor_226);
}

uint64_t sub_18FBA41C8()
{
  return objectdestroy_174Tm(&qword_1EE18B9C0);
}

uint64_t objectdestroy_174Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_18FBA424C()
{
  return sub_18FBA4260(&qword_1EE18B9C0, sub_18FB9D6E8);
}

uint64_t sub_18FBA4260(uint64_t *a1, uint64_t (*a2)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v3 + 32) & ~v3));
}

uint64_t sub_18FBA429C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_18FBA4300(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C0);
  return sub_18FB9D9C0(a1, a2);
}

uint64_t sub_18FBA4350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_18FBA43D8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C8) - 8) + 80);
  sub_18FB9CEBC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v0 + ((v1 + 64) & ~v1));
}

uint64_t sub_18FBA4418()
{
  return objectdestroy_180Tm(&qword_1EE18B9C8);
}

uint64_t sub_18FBA4424(uint64_t a1, uint64_t a2)
{
  return sub_18FBA4540(a1, a2, &qword_1EE18B9C8, sub_18FB9D208);
}

uint64_t sub_18FBA4438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9C8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_18FBA44CC()
{
  return sub_18FBA4648(&qword_1EE18B9C8, (uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_18FB9D49C);
}

uint64_t sub_18FBA44E0()
{
  return objectdestroy_180Tm((uint64_t *)&unk_1EE18B9D0);
}

uint64_t sub_18FBA44EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B9D0) - 8)
                          + 80);
  return sub_18FB9C438(*(void **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_18FBA4520()
{
  return objectdestroy_180Tm((uint64_t *)&unk_1EE18B9D0);
}

uint64_t sub_18FBA452C(uint64_t a1, uint64_t a2)
{
  return sub_18FBA4540(a1, a2, (uint64_t *)&unk_1EE18B9D0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_18FB9C6EC);
}

uint64_t sub_18FBA4540(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return a4(a1, a2, *(_QWORD *)(v4 + 16), v4 + ((v7 + 24) & ~v7));
}

uint64_t sub_18FBA45A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18B9D0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_18FBA4634()
{
  return sub_18FBA4648((uint64_t *)&unk_1EE18B9D0, (uint64_t (*)(_QWORD, unint64_t, _QWORD))sub_18FB9C97C);
}

uint64_t sub_18FBA4648(uint64_t *a1, uint64_t (*a2)(_QWORD, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + v4, *(_QWORD *)(v2 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_18FBA4698(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_18FBA46CC()
{
  return sub_18FBA4794((uint64_t (*)(_QWORD, _QWORD, _QWORD, char *))sub_18FB9AFB8);
}

uint64_t sub_18FBA46D8()
{
  return objectdestroy_180Tm(&qword_1EE18B9B8);
}

uint64_t sub_18FBA46E4(void *a1)
{
  return sub_18FBA40D0(a1, (uint64_t)&unk_1E2A5DAD8, (uint64_t)sub_18FBA4084, (uint64_t)&block_descriptor_292);
}

uint64_t objectdestroy_276Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  sub_18FB77A8C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_18FBA4788()
{
  return sub_18FBA4794((uint64_t (*)(_QWORD, _QWORD, _QWORD, char *))sub_18FB9A8F8);
}

uint64_t sub_18FBA4794(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, char *))
{
  char *v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8) - 8) + 80);
  return a1(*((_QWORD *)v1 + 2), *((_QWORD *)v1 + 3), *((_QWORD *)v1 + 4), &v1[(v2 + 40) & ~v2]);
}

uint64_t sub_18FBA47DC()
{
  return objectdestroy_180Tm(&qword_1EE18B9B8);
}

uint64_t objectdestroy_180Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_18FBA4858(void *a1)
{
  return sub_18FBA40D0(a1, (uint64_t)&unk_1E2A5DB50, (uint64_t)sub_18FBA4084, (uint64_t)&block_descriptor_310);
}

uint64_t objectdestroy_186Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18B9B8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_18FBA48F0()
{
  uint64_t v0;

  sub_18FB98148(*(_QWORD *)(v0 + 16));
}

uint64_t objectdestroy_126Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FBA4938(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_18FB9F4EC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(void (**)(uint64_t, void *))(v3 + 40));
}

uint64_t sub_18FBA4B94()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConcreteCategoriesPrimitives()
{
  return objc_opt_self();
}

uint64_t sub_18FBA4BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;

  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedCategories);
  v7 = *MEMORY[0x1E0D0D500];
  v8 = *MEMORY[0x1E0D0D4F8];
  if (a4)
    v9 = (void *)*MEMORY[0x1E0D0D4F8];
  else
    v9 = (void *)*MEMORY[0x1E0D0D500];
  v10 = v9;
  v11 = (void *)sub_18FBCD0B8();
  if (a3)
    v12 = v8;
  else
    v12 = v7;
  v13 = objc_msgSend(v6, sel_bundleIDForPlatform_fromBundleID_platform_, v10, v11, v12);

  if (!v13)
    return 0;
  v14 = sub_18FBCD0DC();

  return v14;
}

uint64_t IconInfo.containerIdentity.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t IconInfo.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 IconInfo.init(containerIdentity:version:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  unint64_t v4;
  __n128 result;

  v4 = a1->n128_u64[1];
  a4->n128_u64[0] = a1->n128_u64[0];
  a4->n128_u64[1] = v4;
  result = a1[1];
  a4[1] = result;
  a4[2].n128_u64[0] = a2;
  a4[2].n128_u64[1] = a3;
  return result;
}

uint64_t IconInfo.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_18FBA51C0(v1, v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  swift_bridgeObjectRetain();
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t IconInfo.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FB7D954(v1, v2, v3, v4);
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
    return sub_18FBCD868();
  sub_18FBCD868();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

uint64_t IconInfo.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[5];
  sub_18FBCD850();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FB7D954(v1, v2, v3, v4);
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18FBCD868();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD130();
    swift_bridgeObjectRelease();
  }
  return sub_18FBCD88C();
}

uint64_t sub_18FBA4FF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FB7D954(v1, v2, v3, v4);
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
    return sub_18FBCD868();
  sub_18FBCD868();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBA50D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[5];
  sub_18FBCD850();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FB7D954(v1, v2, v3, v4);
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18FBCD868();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD130();
    swift_bridgeObjectRelease();
  }
  return sub_18FBCD88C();
}

uint64_t sub_18FBA51C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A128);
  inited = swift_initStackObject();
  v9 = inited;
  *(_OWORD *)(inited + 16) = xmmword_18FBD6250;
  if (a4)
    v10 = a3;
  else
    v10 = 0;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = a4;
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FB1EB44(v9, &v13);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1DFB0();
  v11 = sub_18FBCD070();
  swift_bridgeObjectRelease_n();
  return v11;
}

BOOL _s14ChronoServices8IconInfoV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  _BOOL8 result;
  uint64_t v19;
  uint64_t v20;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[5];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[5];
  v19 = a2[4];
  v20 = a1[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_18FB7D954(v2, v3, v5, v4);
  v14 = v13;
  if (v12 == sub_18FB7D954(v8, v7, v9, v10) && v14 == v15)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    if (v6)
      return v11 && (v20 == v19 && v6 == v11 || (sub_18FBCD7C0() & 1) != 0);
  }
  else
  {
    v17 = sub_18FBCD7C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v17 & 1) == 0)
      return result;
    if (v6)
      return v11 && (v20 == v19 && v6 == v11 || (sub_18FBCD7C0() & 1) != 0);
  }
  return !v11;
}

unint64_t sub_18FBA542C()
{
  unint64_t result;

  result = qword_1EE18BA40;
  if (!qword_1EE18BA40)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for IconInfo, &type metadata for IconInfo);
    atomic_store(result, (unint64_t *)&qword_1EE18BA40);
  }
  return result;
}

uint64_t destroy for IconInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for IconInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IconInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for IconInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IconInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IconInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IconInfo()
{
  return &type metadata for IconInfo;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.sha256()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD, uint64_t);
  uint64_t v8;
  char *v9;
  unint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 *v19;
  Swift::String result;
  _QWORD v22[6];
  unsigned __int8 *v23;
  id v24;
  uint64_t data;
  unint64_t v26;
  CC_SHA256_CTX c;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v2 = sub_18FBCCE84();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_18FBCCE24();
  v7 = *(void (***)(char *, _QWORD, uint64_t))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_18FBA5D40();
  v7[2](v9, v0, v6);
  v11 = sub_18FBA5D7C((uint64_t)v9);
  if (!v1)
  {
    v12 = v11;
    v22[5] = v5;
    v23 = (unsigned __int8 *)swift_slowAlloc();
    memset(&c, 0, sizeof(c));
    v13 = CC_SHA256_Init(&c);
    v14 = (void *)MEMORY[0x194008E20](v13);
    sub_18FBCD358();
    v18 = v17;
    v22[3] = v3;
    v22[4] = v2;
    v24 = v12;
    sub_18FB840E0(0, 0xF000000000000000);
    if (v18 >> 60 != 15)
      __asm { BR              X9 }
    objc_autoreleasePoolPop(v14);
    v19 = v23;
    CC_SHA256_Final(v23, &c);
    sub_18FBA601C(v19, 32);
    data = 0;
    v26 = 0xE000000000000000;
    __asm { BR              X10 }
  }
  v15 = v10;
  v16 = v7;
  result._object = v16;
  result._countAndFlagsBits = v15;
  return result;
}

unint64_t sub_18FBA5D40()
{
  unint64_t result;

  result = qword_1EE18BA48;
  if (!qword_1EE18BA48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE18BA48);
  }
  return result;
}

id sub_18FBA5D7C(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_18FBCCD94();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_18FBCCE24();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_18FBCCD70();

    swift_willThrow();
    v9 = sub_18FBCCE24();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

void sub_18FBA5E90(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x1E0C80C00];
  v4[0] = 0;
  if (objc_msgSend(a1, sel_closeAndReturnError_, v4))
  {
    v1 = v4[0];
  }
  else
  {
    v2 = v4[0];
    v3 = (void *)sub_18FBCCD70();

    swift_willThrow();
  }
}

uint64_t sub_18FBA5F5C(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_18FBA601C(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_18FBA5F5C(__src, &__src[a2]);
  sub_18FBCCCC8();
  swift_allocObject();
  sub_18FBCCC8C();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_18FBCCE54();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

unint64_t sub_18FBA60C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE18BA50;
  if (!qword_1EE18BA50)
  {
    v1 = sub_18FBCCE84();
    result = MEMORY[0x19400954C](MEMORY[0x1E0CB02D0], v1);
    atomic_store(result, (unint64_t *)&qword_1EE18BA50);
  }
  return result;
}

uint64_t sub_18FBA6110(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBA616C()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18FBA61B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

void sub_18FBA6204(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 32);
  *(_QWORD *)(v3 + 32) = v2;
  v5 = v2;

}

id sub_18FBA6258()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 32);
}

void sub_18FBA6288(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;

}

uint64_t (*sub_18FBA62CC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_18FBA6308()
{
  uint64_t v0;

  swift_beginAccess();
  return objc_msgSend(*(id *)(v0 + 32), sel_control);
}

uint64_t ControlSessionKey.loggingIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

const __CFString *ControlSessionKey.__allocating_init(identifier:identity:)(uint64_t a1, uint64_t a2, void *a3)
{
  const __CFString *v6;

  swift_allocObject();
  v6 = sub_18FBA6EB8(a1, a2, a3);

  return v6;
}

const __CFString *ControlSessionKey.init(identifier:identity:)(uint64_t a1, uint64_t a2, void *a3)
{
  const __CFString *v4;

  v4 = sub_18FBA6EB8(a1, a2, a3);

  return v4;
}

void sub_18FBA63FC()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v1 = *(id *)(v0 + 32);
  sub_18FBCD418();

}

const __CFString *sub_18FBA6490()
{
  uint64_t v0;
  uint64_t v1;
  const __CFString *result;
  __CFString *v3;
  id v4;
  id v5;

  v1 = v0;
  sub_18FBCD52C();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  result = (id)NSStringFromCHSControlContentType((uint64_t)objc_msgSend(*(id *)(v0 + 32), sel_contentType));
  if (result)
  {
    v3 = (__CFString *)result;
    sub_18FBCD0DC();

    sub_18FBCD16C();
    swift_bridgeObjectRelease();
    sub_18FBCD16C();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_18FBCD16C();
    swift_bridgeObjectRelease();
    sub_18FBCD16C();
    v4 = objc_msgSend(*(id *)(v1 + 32), sel_control);
    v5 = objc_msgSend(v4, sel__loggingIdentifier);

    sub_18FBCD0DC();
    sub_18FBCD16C();
    swift_bridgeObjectRelease();
    sub_18FBCD16C();
    return (const __CFString *)0xD000000000000013;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_18FBA6640(char *a1, char *a2)
{
  return sub_18FBC8568(*a1, *a2);
}

uint64_t sub_18FBA664C()
{
  sub_18FBCD850();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

uint64_t sub_18FBA66D0()
{
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBA6730()
{
  sub_18FBCD850();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

uint64_t sub_18FBA67B0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_18FBCD688();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_18FBA680C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x696669746E656469;
  if (*v1)
    v2 = 0x797469746E656469;
  v3 = 0xEA00000000007265;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_18FBA6850()
{
  _BYTE *v0;

  if (*v0)
    return 0x797469746E656469;
  else
    return 0x696669746E656469;
}

uint64_t sub_18FBA6890@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_18FBCD688();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_18FBA68F0()
{
  sub_18FBA71D4();
  return sub_18FBCD8BC();
}

uint64_t sub_18FBA6918()
{
  sub_18FBA71D4();
  return sub_18FBCD8C8();
}

const __CFString *ControlSessionKey.__allocating_init(from:)(_QWORD *a1)
{
  return sub_18FBA6FFC(a1);
}

uint64_t sub_18FBA6954(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189718);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBA71D4();
  sub_18FBCD8B0();
  swift_beginAccess();
  v12 = 0;
  swift_bridgeObjectRetain();
  sub_18FBCD748();
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v11 = *(_QWORD *)(v3 + 32);
    v10[7] = 1;
    type metadata accessor for CHSControlInstanceIdentity(0);
    sub_18FBA755C(&qword_1EE1896E0, 255, type metadata accessor for CHSControlInstanceIdentity, (uint64_t)&protocol conformance descriptor for CHSControlInstanceIdentity);
    sub_18FBCD76C();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t ControlSessionKey.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ControlSessionKey.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_18FBA6B60()
{
  uint64_t v0;
  id v1;

  sub_18FBCD850();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v1 = *(id *)(v0 + 32);
  sub_18FBCD418();

  return sub_18FBCD88C();
}

const __CFString *sub_18FBA6C00@<X0>(_QWORD *a1@<X0>, const __CFString **a2@<X8>)
{
  uint64_t v2;
  const __CFString *result;

  result = sub_18FBA6FFC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_18FBA6C28(_QWORD *a1)
{
  return sub_18FBA6954(a1);
}

uint64_t sub_18FBA6C48()
{
  return sub_18FBA6B60();
}

void sub_18FBA6C68()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  v1 = *v0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v2 = *(id *)(v1 + 32);
  sub_18FBCD418();

}

uint64_t sub_18FBA6CFC()
{
  uint64_t *v0;
  uint64_t v1;
  id v2;

  sub_18FBCD850();
  v1 = *v0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v2 = *(id *)(v1 + 32);
  sub_18FBCD418();

  return sub_18FBCD88C();
}

const __CFString *sub_18FBA6D9C()
{
  return sub_18FBA6490();
}

uint64_t sub_18FBA6DBC(_QWORD **a1, _QWORD **a2)
{
  return _s14ChronoServices17ControlSessionKeyC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s14ChronoServices17ControlSessionKeyC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = 0, (sub_18FBCD7C0() & 1) != 0))
  {
    sub_18FBA759C();
    swift_beginAccess();
    v8 = (void *)a1[4];
    swift_beginAccess();
    v9 = (void *)a2[4];
    v10 = v8;
    v11 = v9;
    v7 = sub_18FBCD40C();

  }
  return v7 & 1;
}

const __CFString *sub_18FBA6EB8(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  id v6;
  id v7;
  const __CFString *result;
  __CFString *v9;

  v4 = v3;
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  v5 = a3;
  swift_bridgeObjectRetain();
  sub_18FBCD16C();
  v6 = objc_msgSend(v5, sel_control);
  v7 = objc_msgSend(v6, sel__loggingIdentifier);

  sub_18FBCD0DC();
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  result = (id)NSStringFromCHSControlContentType((uint64_t)objc_msgSend(v5, sel_contentType));
  if (result)
  {
    v9 = (__CFString *)result;
    sub_18FBCD0DC();

    sub_18FBCD16C();
    swift_bridgeObjectRelease();
    sub_18FBCD16C();
    v4[5] = a1;
    v4[6] = a2;
    return (const __CFString *)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

const __CFString *sub_18FBA6FFC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  const __CFString *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v12;
  _QWORD v13[2];
  char v14;
  char v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188060);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (const __CFString *)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBA71D4();
  sub_18FBCD8A4();
  if (!v1)
  {
    v15 = 0;
    v8 = sub_18FBCD6C4();
    v10 = v9;
    type metadata accessor for CHSControlInstanceIdentity(0);
    v14 = 1;
    sub_18FBA755C((unint64_t *)&unk_1EE187FD8, 255, type metadata accessor for CHSControlInstanceIdentity, (uint64_t)&protocol conformance descriptor for CHSControlInstanceIdentity);
    sub_18FBCD6E8();
    v12 = (void *)v13[1];
    type metadata accessor for ControlSessionKey();
    swift_allocObject();
    v7 = sub_18FBA6EB8(v8, v10, v12);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

unint64_t sub_18FBA71D4()
{
  unint64_t result;

  result = qword_1EE189990;
  if (!qword_1EE189990)
  {
    result = MEMORY[0x19400954C](&unk_18FBD82A4, &type metadata for ControlSessionKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE189990);
  }
  return result;
}

uint64_t sub_18FBA7218(uint64_t a1, uint64_t a2)
{
  return sub_18FBA755C(&qword_1EE1899A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ControlSessionKey, (uint64_t)&protocol conformance descriptor for ControlSessionKey);
}

uint64_t type metadata accessor for ControlSessionKey()
{
  return objc_opt_self();
}

uint64_t sub_18FBA7264@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_18FBA72B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 32);
  *a2 = v4;
  return v4;
}

uint64_t method lookup function for ControlSessionKey()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlSessionKey.identifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ControlSessionKey.identifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ControlSessionKey.identifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ControlSessionKey.identity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ControlSessionKey.identity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ControlSessionKey.identity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ControlSessionKey.control.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ControlSessionKey.__allocating_init(identifier:identity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of ControlSessionKey.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ControlSessionKey.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ControlSessionKey.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of ControlSessionKey.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ControlSessionKey.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t storeEnumTagSinglePayload for ControlSessionKey.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18FBA7404 + 4 * byte_18FBD8065[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18FBA7438 + 4 * asc_18FBD8060[v4]))();
}

uint64_t sub_18FBA7438(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBA7440(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FBA7448);
  return result;
}

uint64_t sub_18FBA7454(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FBA745CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18FBA7460(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBA7468(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlSessionKey.CodingKeys()
{
  return &type metadata for ControlSessionKey.CodingKeys;
}

unint64_t sub_18FBA7488()
{
  unint64_t result;

  result = qword_1EE18BA58;
  if (!qword_1EE18BA58)
  {
    result = MEMORY[0x19400954C](&unk_18FBD827C, &type metadata for ControlSessionKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18BA58);
  }
  return result;
}

unint64_t sub_18FBA74D0()
{
  unint64_t result;

  result = qword_1EE1899A0;
  if (!qword_1EE1899A0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD81B4, &type metadata for ControlSessionKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1899A0);
  }
  return result;
}

unint64_t sub_18FBA7518()
{
  unint64_t result;

  result = qword_1EE189998;
  if (!qword_1EE189998)
  {
    result = MEMORY[0x19400954C](&unk_18FBD81DC, &type metadata for ControlSessionKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE189998);
  }
  return result;
}

uint64_t sub_18FBA755C(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x19400954C](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18FBA759C()
{
  unint64_t result;

  result = qword_1EE189840[0];
  if (!qword_1EE189840[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1EE189840);
  }
  return result;
}

uint64_t static AppIntent.descriptorStringTypeIdentifier.getter()
{
  sub_18FBCCC68();
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  return 0x6E65746E69707061;
}

uint64_t static AppIntent.asCHSControlActionMetadata(allowedAsLauncher:)(unsigned __int8 a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;

  v3 = objc_msgSend(objc_allocWithZone((Class)CHSMutableControlActionMetadata), sel_init);
  static AppIntent.descriptorStringTypeIdentifier.getter();
  v4 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setIntentType_, v4);

  if (swift_conformsToProtocol2())
    v5 = v1;
  else
    v5 = 0;
  if (v5)
    v6 = 1;
  else
    v6 = sub_18FBCCC5C();
  objc_msgSend(v3, sel_setIsLauncher_, a1 & v6 & 1);
  if (swift_conformsToProtocol2())
    v7 = v1;
  else
    v7 = 0;
  objc_msgSend(v3, sel_setIsCameraCapture_, a1 & (v7 != 0));
  objc_msgSend(v3, sel_copy);
  sub_18FBCD478();

  swift_unknownObjectRelease();
  sub_18FBA77A0();
  swift_dynamicCast();
  return v9;
}

unint64_t sub_18FBA77A0()
{
  unint64_t result;

  result = qword_1EE18BA60;
  if (!qword_1EE18BA60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE18BA60);
  }
  return result;
}

uint64_t PrimitiveBox.wrapped.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t PrimitiveBox.wrapped.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*PrimitiveBox.wrapped.modify())()
{
  return nullsub_1;
}

uint64_t PrimitiveBox.init(wrapped:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_18FBA7838(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x64657070617277 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_18FBCD7C0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_18FBA78BC()
{
  return 0x64657070617277;
}

uint64_t sub_18FBA78D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_18FBA7838(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_18FBA7908@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FB7019C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_18FBA793C(uint64_t a1)
{
  MEMORY[0x19400954C](&unk_18FBD8470, a1);
  return sub_18FBCD8BC();
}

uint64_t sub_18FBA7970(uint64_t a1)
{
  MEMORY[0x19400954C](&unk_18FBD8470, a1);
  return sub_18FBCD8C8();
}

uint64_t PrimitiveBox.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = a2[3];
  v10 = a2[2];
  v4 = type metadata accessor for PrimitiveBox.CodingKeys(255, v10, v3, a2[4]);
  MEMORY[0x19400954C](&unk_18FBD8470, v4);
  v5 = sub_18FBCD790();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBCD8B0();
  sub_18FBCD76C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for PrimitiveBox.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PrimitiveBox.CodingKeys);
}

uint64_t PrimitiveBox.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v28 = a5;
  v33 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v34 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PrimitiveBox.CodingKeys(255, v10, v11, v12);
  MEMORY[0x19400954C](&unk_18FBD8470, v13);
  v35 = sub_18FBCD724();
  v29 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v15 = (char *)&v26 - v14;
  v31 = a2;
  v32 = a3;
  v27 = type metadata accessor for PrimitiveBox(0, a2, a3, a4);
  v16 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v18 = (char *)&v26 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v30 = v15;
  v19 = v36;
  sub_18FBCD8A4();
  if (!v19)
  {
    v36 = v16;
    v20 = v29;
    v21 = v30;
    v22 = v33;
    v23 = v34;
    v24 = v31;
    sub_18FBCD6E8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v35);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v18, v23, v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v28, v18, v27);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t type metadata accessor for PrimitiveBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PrimitiveBox);
}

uint64_t sub_18FBA7CD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return PrimitiveBox.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_18FBA7CF0(_QWORD *a1, _QWORD *a2)
{
  return PrimitiveBox.encode(to:)(a1, a2);
}

uint64_t sub_18FBA7D04()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_18FBA7D0C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_18FBA7D78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_18FBA7DE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_18FBA7DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_18FBA7E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_18FBA7E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_18FBA7E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_18FBA7EB8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_18FBA7F68 + 4 * byte_18FBD82F8[(v7 - 1)]))();
}

void sub_18FBA7FB8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_18FBA8168()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_18FBA8170(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_18FBA81B0 + 4 * byte_18FBD8306[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_18FBA81D0 + 4 * byte_18FBD830B[v4]))();
}

_BYTE *sub_18FBA81B0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_18FBA81D0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FBA81D8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FBA81E0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FBA81E8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FBA81F0(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_18FBA81FC()
{
  JUMPOUT(0x19400954CLL);
}

void sub_18FBA820C()
{
  JUMPOUT(0x19400954CLL);
}

void sub_18FBA821C()
{
  JUMPOUT(0x19400954CLL);
}

id sub_18FBA822C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  id result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = (id)swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v8 >= v6)
      goto LABEL_28;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    if (!v12)
      break;
LABEL_18:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_19:
    v14 = *(_QWORD *)(a1 + 56) + 16 * v10;
    if ((*(_BYTE *)(v14 + 8) & 1) == 0)
    {
      result = objc_msgSend(*(id *)v14, "key");
      if (result)
      {
        MEMORY[0x1940083E8]();
        if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_18FBCD2B0();
        sub_18FBCD2C8();
        result = (id)sub_18FBCD2A4();
      }
    }
  }
  v13 = v8 + 1;
  if (v8 + 1 >= v6)
    goto LABEL_28;
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v8 + 2;
  if (v8 + 2 >= v6)
    goto LABEL_28;
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v8 + 3;
  if (v8 + 3 >= v6)
    goto LABEL_28;
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
    goto LABEL_17;
  v13 = v8 + 4;
  if (v8 + 4 >= v6)
  {
LABEL_28:
    swift_release();
    return (id)v15;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
LABEL_17:
    v8 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_28;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_18FBA840C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_22:
    v14 = *(_QWORD *)(a1 + 56) + 16 * v10;
    if ((*(_BYTE *)(v14 + 8) & 1) == 0)
    {
      v15 = *(id *)v14;
      MEMORY[0x1940083E8]();
      if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_18FBCD2B0();
      sub_18FBCD2C8();
      result = sub_18FBCD2A4();
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_21;
  v8 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release();
    return v16;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_26;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

_QWORD *RelevanceCache.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;

  v5 = (_QWORD *)swift_allocObject();
  v6 = MEMORY[0x1E0DEE9D8];
  v5[2] = sub_18FB73D50(MEMORY[0x1E0DEE9D8]);
  v5[3] = v6;
  v5[4] = 0;
  v5[5] = a1;
  v5[6] = a2;
  sub_18FBA9120();
  if (v2)
    swift_release();
  return v5;
}

uint64_t CacheFile.filename.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CacheFile.filename.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CacheFile.filename.modify())()
{
  return nullsub_1;
}

uint64_t CacheFile.size.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(_QWORD))((char *)&loc_18FBA86E4
                                         + *((int *)qword_18FBA8728 + (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 48) >> 62))))(0);
}

uint64_t sub_18FBA86F4()
{
  uint64_t v0;

  return BYTE6(v0);
}

uint64_t CacheFile.relevances.getter@<X0>(char **a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v5;
  unint64_t v6;
  char *v7;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  a1[3] = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE18BA70);
  a1[4] = (char *)sub_18FB1E9FC((unint64_t *)&unk_1EE18BA78, &qword_1EE18BA70, MEMORY[0x1E0DEAF50]);
  v4 = objc_msgSend(*(id *)(v3 + 16), sel_groups);
  if (v4)
  {
    v5 = v4;
    sub_18FB1F254(0, (unint64_t *)&unk_1EE187FF0);
    v6 = sub_18FBCD28C();

  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  v7 = sub_18FBAF294(v6, v3);
  swift_bridgeObjectRelease();
  result = swift_release();
  *a1 = v7;
  return result;
}

uint64_t sub_18FBA8820()
{
  uint64_t v0;

  v0 = sub_18FBCCF5C();
  __swift_allocate_value_buffer(v0, qword_1EE1927A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE1927A0);
  return sub_18FBCCF50();
}

uint64_t sub_18FBA88A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 48) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBA88FC()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18FBA8944(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_18FBA8994())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *RelevanceCache.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2[2] = sub_18FB73D50(MEMORY[0x1E0DEE9D8]);
  v2[3] = v6;
  v2[4] = 0;
  v2[5] = a1;
  v2[6] = a2;
  sub_18FBA9120();
  if (v3)
    swift_release();
  return v2;
}

uint64_t sub_18FBA8A38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(v1 + 16))
    return ((uint64_t (*)(_QWORD))((char *)&loc_18FBA8A64
                                           + *((int *)qword_18FBA8AC8 + (*(_QWORD *)(*(_QWORD *)(v1 + 48) + 48) >> 62))))(0);
  else
    return 0;
}

uint64_t sub_18FBA8AD8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_18FBAACF0();
  if (!v0)
  {
    v4 = (uint64_t)v2;
    v5 = v3;
    type metadata accessor for RelevanceCacheTransaction();
    v1 = swift_allocObject();
    v6 = swift_retain();
    sub_18FBAB294(v6, v4, v5, 0x8000);
  }
  return v1;
}

void sub_18FBA8B58(void (*a1)(uint64_t))
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (void *)MEMORY[0x194008E20]();
  v4 = sub_18FBAACF0();
  if (!v1)
  {
    v6 = (uint64_t)v4;
    v7 = v5;
    type metadata accessor for RelevanceCacheTransaction();
    v8 = swift_allocObject();
    v9 = swift_retain();
    sub_18FBAB294(v9, v6, v7, 0x8000);
    a1(v8);
    if ((*(_BYTE *)(v8 + 48) & 1) == 0)
    {
      swift_retain();
      sub_18FB7AE3C();
      swift_release();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_18FBAAF70();
      sub_18FBA9120();
      sub_18FBAA26C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v8 + 48) = 1;
    }
    swift_release();
  }
  objc_autoreleasePoolPop(v3);
}

void sub_18FBA8CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char **v4;
  char **i;
  id v6;
  void *v7;
  id v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  unsigned int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  char *v25[5];

  v2 = v1;
  v25[4] = *(char **)MEMORY[0x1E0C80C00];
  v3 = (void *)objc_opt_self();
  swift_beginAccess();
  v4 = &selRef__queue_notifyTimelineEntryRelevanceDidChange_;
  for (i = &selRef_setAllowsMixedLocalizations_; ; i = &selRef_setAllowsMixedLocalizations_)
  {
    v6 = objc_msgSend(v3, v4[190], v22, v23);
    swift_bridgeObjectRetain();
    v7 = (void *)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
    v25[0] = 0;
    v8 = objc_msgSend(v6, i[192], v7, v25);

    v9 = v25[0];
    if (!v8)
    {
      v21 = v25[0];
LABEL_14:
      sub_18FBCCD70();

      swift_willThrow();
      return;
    }
    v10 = sub_18FBCD28C();
    v11 = v9;

    v25[0] = (char *)v10;
    swift_bridgeObjectRetain();
    sub_18FBAD268(v25);
    if (v2)
      break;
    v12 = v25[0];
    v13 = *((_QWORD *)v25[0] + 2);
    if (v13)
    {
      v22 = 0;
      v23 = v3;
      v24 = v10;
      v14 = &v25[0][16 * v13 + 24];
      while (1)
      {
        swift_bridgeObjectRetain();
        v15 = (void *)sub_18FBCD0B8();
        swift_bridgeObjectRelease();
        v25[0] = 0;
        v16 = objc_msgSend(v6, sel_removeItemAtPath_error_, v15, v25);

        if (!v16)
          break;
        if (v13 == 1)
        {
          v19 = v25[0];
          v3 = v23;
          v10 = v24;
          goto LABEL_11;
        }
        --v13;
        v14 -= 16;
        v17 = *((_QWORD *)v12 + 2);
        v18 = v25[0];
        if (v13 > v17)
        {
          __break(1u);
          swift_bridgeObjectRelease();
          return;
        }
      }
      v21 = v25[0];
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_14;
    }
LABEL_11:
    swift_release();
    sub_18FBA9120();
    v2 = 0;

    v20 = *(_QWORD *)(v10 + 16);
    swift_bridgeObjectRelease();
    v4 = &selRef__queue_notifyTimelineEntryRelevanceDidChange_;
    if (!v20)
    {
      *(_QWORD *)(v0 + 32) = 0;
      return;
    }
  }
  swift_release();
  __break(1u);
}

id sub_18FBA8F50(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  int v9;
  id v10;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  v4 = a1;
  swift_bridgeObjectRetain();
  v5 = sub_18FB7F8C4((uint64_t)v4);
  if ((v6 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  v7 = *(_QWORD *)(v3 + 56) + 16 * v5;
  v8 = *(id *)v7;
  v9 = *(unsigned __int8 *)(v7 + 8);
  v10 = *(id *)v7;

  swift_bridgeObjectRelease();
  if (v9 == 1)
  {

    return 0;
  }
  return v8;
}

uint64_t sub_18FBA9008@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FBA904C()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_18FBA840C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_18FBA90AC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_18FBA822C(v0);
  swift_bridgeObjectRelease();
  v2 = sub_18FB820B4((unint64_t)v1);
  swift_bridgeObjectRelease();
  return v2;
}

void sub_18FBA9120()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *v30;
  char *v31;
  char **v32;
  __int128 v33;
  char *v34;
  void *v35;
  id v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  __int16 v51;
  unsigned __int8 *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unsigned __int8 *v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  char *v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  char *v79;
  char v80;
  uint64_t v81;
  char *v82;
  char v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  void *v91;
  unsigned __int8 v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  char *v96;
  char *v97;
  char *v98;
  id v99;
  void *v100;
  unsigned int v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  _QWORD v116[2];
  id v117;
  uint64_t v118;
  __int128 v119;
  char *v120;
  unsigned int v121;
  unint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  char *v129;
  uint64_t v130;
  _QWORD *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t *v135;
  __int128 v136;
  uint64_t v137;
  char v138;
  char *v139;
  unint64_t v140;
  uint64_t v141[4];

  v1 = v0;
  v141[3] = *MEMORY[0x1E0C80C00];
  v126 = sub_18FBCCD7C();
  v125 = *(_QWORD *)(v126 - 8);
  MEMORY[0x1E0C80A78]();
  v124 = (char *)v116 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189DE0);
  MEMORY[0x1E0C80A78]();
  v123 = (char *)v116 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_18FBCCE24();
  v4 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78]();
  v129 = (char *)v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE1897B0 != -1)
LABEL_87:
    swift_once();
  v6 = sub_18FBCCF5C();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EE1927A0);
  swift_retain();
  v127 = v7;
  v8 = sub_18FBCCF44();
  v9 = sub_18FBCD394();
  v10 = os_log_type_enabled(v8, v9);
  v131 = v1;
  v122 = v4;
  if (v10)
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v141[0] = v12;
    *(_DWORD *)v11 = 136315138;
    swift_beginAccess();
    v13 = v131[5];
    v14 = v131[6];
    swift_bridgeObjectRetain();
    v139 = (char *)sub_18FB6ECF4(v13, v14, v141);
    v1 = v131;
    sub_18FBCD454();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FB18000, v8, v9, "Scanning for cache updates in %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400960C](v12, -1, -1);
    MEMORY[0x19400960C](v11, -1, -1);

  }
  else
  {

    swift_release();
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v16 = v1[3];
  v17 = *(_QWORD *)(v16 + 16);
  v117 = v15;
  if (v17)
  {
    v141[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_18FB7F090(0, v17, 0);
    v18 = v141[0];
    v134 = (char *)v16;
    v19 = (_OWORD *)(v16 + 40);
    do
    {
      v20 = *((_QWORD *)v19 - 1);
      v136 = *v19;
      v141[0] = v18;
      v22 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v18 + 24);
      v23 = v136;
      swift_bridgeObjectRetain_n();
      swift_retain();
      if (v22 >= v21 >> 1)
      {
        sub_18FB7F090((_QWORD *)(v21 > 1), v22 + 1, 1);
        v18 = v141[0];
      }
      v19 = (_OWORD *)((char *)v19 + 24);
      *(_QWORD *)(v18 + 16) = v22 + 1;
      v24 = v18 + 40 * v22;
      *(_QWORD *)(v24 + 32) = v20;
      *(_QWORD *)(v24 + 40) = v23;
      *(_QWORD *)(v24 + 48) = v20;
      *(_OWORD *)(v24 + 56) = v136;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v25 = v117;
    if (*(_QWORD *)(v18 + 16))
      goto LABEL_11;
  }
  else
  {
    v25 = v15;
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_11:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE188040);
      v26 = sub_18FBCD664();
      goto LABEL_14;
    }
  }
  v26 = MEMORY[0x1E0DEE9E0];
LABEL_14:
  v27 = v131;
  v141[0] = v26;
  v28 = swift_bridgeObjectRetain();
  v29 = v135;
  sub_18FBAE1D0(v28, 1, v141);
  v30 = v29;
  if (!v29)
  {
    swift_bridgeObjectRelease();
    v133 = v141[0];
    swift_beginAccess();
    v120 = &v138;
    v121 = *MEMORY[0x1E0CAFD78];
    v31 = (char *)MEMORY[0x1E0DEE9D8];
    v32 = &selRef_setAllowsMixedLocalizations_;
    *(_QWORD *)&v33 = 136315138;
    v119 = v33;
    v118 = MEMORY[0x1E0DEE9B8] + 8;
    v34 = (char *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      swift_bridgeObjectRetain();
      v35 = (void *)sub_18FBCD0B8();
      swift_bridgeObjectRelease();
      v139 = 0;
      v36 = objc_msgSend(v25, v32[192], v35, &v139);

      v37 = v139;
      if (!v36)
      {
        v97 = v139;
        swift_bridgeObjectRelease();
        sub_18FBCCD70();

LABEL_84:
        swift_willThrow();
        swift_bridgeObjectRelease();

        return;
      }
      v38 = (char *)sub_18FBCD28C();
      v39 = v37;

      v139 = v38;
      swift_bridgeObjectRetain();
      sub_18FBAD268(&v139);
      v135 = 0;
      swift_bridgeObjectRelease();
      v1 = (_QWORD *)*((_QWORD *)v139 + 2);
      v116[1] = v139;
      if (!v1)
      {
        v134 = v31;
LABEL_66:
        v98 = v34;
        swift_release();
        v99 = v117;
        if (!*(_QWORD *)(v27[3] + 16)
          || (swift_bridgeObjectRetain(),
              v100 = (void *)sub_18FBCD0B8(),
              swift_bridgeObjectRelease(),
              v101 = objc_msgSend(v99, sel_fileExistsAtPath_, v100),
              v100,
              !v101))
        {
          v108 = v134;
          v109 = *((_QWORD *)v134 + 2);
          if (v109)
          {
            v139 = (char *)MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            sub_18FBCD5B0();
            v110 = 48;
            do
            {
              swift_retain();
              sub_18FBCD598();
              sub_18FBCD5BC();
              sub_18FBCD5C8();
              sub_18FBCD5A4();
              v110 += 24;
              --v109;
            }
            while (v109);
            v111 = v139;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            v111 = (char *)MEMORY[0x1E0DEE9D8];
          }
          v112 = sub_18FBAFC08((unint64_t)v111);
          swift_bridgeObjectRelease();
          swift_beginAccess();
          v27[2] = v112;
          swift_bridgeObjectRelease();
          goto LABEL_80;
        }
        v102 = *((_QWORD *)v98 + 2);
        v103 = (char *)MEMORY[0x1E0DEE9D8];
        if (v102)
        {
          v139 = (char *)MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          sub_18FBCD5B0();
          v104 = 48;
          do
          {
            swift_retain();
            sub_18FBCD598();
            sub_18FBCD5BC();
            sub_18FBCD5C8();
            sub_18FBCD5A4();
            v104 += 24;
            --v102;
          }
          while (v102);
          v103 = v139;
          swift_bridgeObjectRelease();
        }
        v105 = sub_18FBAFC08((unint64_t)v103);
        swift_bridgeObjectRelease();
        v30 = v27 + 2;
        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v137 = v27[2];
        v27[2] = 0x8000000000000000;
        v107 = v135;
        sub_18FBADED0(v105, (uint64_t)sub_18FBAEE24, 0, isUniquelyReferenced_nonNull_native, &v137);
        v108 = v134;
        if (!v107)
        {
          *v30 = v137;
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_bridgeObjectRelease();
LABEL_80:
          v27[3] = v108;
          swift_bridgeObjectRelease();
          v113 = sub_18FBCCF44();
          v114 = sub_18FBCD394();
          if (os_log_type_enabled(v113, v114))
          {
            v115 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v115 = 0;
            _os_log_impl(&dword_18FB18000, v113, v114, "Done scanning for cache changes", v115, 2u);
            MEMORY[0x19400960C](v115, -1, -1);
          }

          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_89;
      }
      v40 = v139 + 40;
      v134 = v31;
      while (1)
      {
        v41 = v27[6];
        v139 = (char *)v27[5];
        v140 = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18FBCD16C();
        v4 = v140;
        swift_bridgeObjectRetain();
        sub_18FBCD16C();
        swift_bridgeObjectRelease();
        v42 = v140;
        *(_QWORD *)&v136 = v139;
        if ((sub_18FBCD1C0() & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_20:
        v40 += 16;
        v1 = (_QWORD *)((char *)v1 - 1);
        if (!v1)
          goto LABEL_66;
      }
      if (sub_18FBCD13C() < 0)
      {
        __break(1u);
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
      v132 = v34;
      sub_18FBCD154();
      v43 = sub_18FBCD1F0();
      v45 = v44;
      v4 = v46;
      v48 = v47;
      swift_bridgeObjectRelease();
      if (!((v43 ^ v45) >> 14))
        break;
      v49 = v135;
      v50 = sub_18FBAF1B0(v43, v45, v4, v48, 10);
      v135 = v49;
      if ((v51 & 0x100) != 0)
      {
        v52 = sub_18FBAE5FC(v43, v45, v4, v48, 10);
        v4 = v56;
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          v27 = v131;
          v54 = v133;
          v55 = v136;
LABEL_29:
          v57 = v52 + 1;
          if (__OFADD__(v52, 1))
            goto LABEL_86;
          if (v27[4] > (uint64_t)v57)
            v57 = (unsigned __int8 *)v27[4];
          v27[4] = v57;
          if (!*(_QWORD *)(v54 + 16))
            goto LABEL_45;
          goto LABEL_38;
        }
        v27 = v131;
        goto LABEL_37;
      }
      v52 = (unsigned __int8 *)v50;
      v53 = v51;
      swift_bridgeObjectRelease();
      v54 = v133;
      v55 = v136;
      if ((v53 & 1) == 0)
      {
        v27 = v131;
        goto LABEL_29;
      }
      v27 = v131;
      if (!*(_QWORD *)(v133 + 16))
        goto LABEL_45;
LABEL_38:
      swift_bridgeObjectRetain();
      v58 = sub_18FB7F7E4(v55, v42);
      if ((v59 & 1) != 0)
      {
        v60 = *(_QWORD *)(v54 + 56) + 24 * v58;
        v61 = *(_QWORD *)v60;
        v136 = *(_OWORD *)(v60 + 8);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        swift_bridgeObjectRelease_n();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v134 = sub_18FB7ECEC(0, *((_QWORD *)v134 + 2) + 1, 1, v134);
        v63 = *((_QWORD *)v134 + 2);
        v62 = *((_QWORD *)v134 + 3);
        if (v63 >= v62 >> 1)
          v134 = sub_18FB7ECEC((char *)(v62 > 1), v63 + 1, 1, v134);
        v64 = v134;
        *((_QWORD *)v134 + 2) = v63 + 1;
        v65 = &v64[24 * v63];
        *((_QWORD *)v65 + 4) = v61;
        *(_OWORD *)(v65 + 40) = v136;
        swift_release();
        swift_bridgeObjectRelease();
        v34 = v132;
        goto LABEL_20;
      }
      swift_bridgeObjectRelease();
LABEL_45:
      v128 = v1;
      swift_bridgeObjectRetain_n();
      v66 = sub_18FBCCF44();
      v67 = sub_18FBCD394();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        v69 = (char *)swift_slowAlloc();
        v139 = v69;
        *(_DWORD *)v68 = v119;
        swift_bridgeObjectRetain();
        v137 = sub_18FB6ECF4(v136, v42, (uint64_t *)&v139);
        v27 = v131;
        sub_18FBCD454();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_18FB18000, v66, v67, "Discovered new cache file: %s", v68, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v69, -1, -1);
        MEMORY[0x19400960C](v68, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v70 = v122;
      v34 = v132;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v123, 1, 1, v130);
      (*(void (**)(char *, _QWORD, uint64_t))(v125 + 104))(v124, v121, v126);
      swift_bridgeObjectRetain();
      sub_18FBCCE0C();
      v71 = v135;
      v72 = sub_18FBCCE3C();
      if (!v71)
      {
        v74 = v72;
        v75 = v73;
        type metadata accessor for RelevanceCacheReader();
        swift_allocObject();
        v76 = sub_18FBB8684(v74, v75);
        v77 = *(void (**)(char *, uint64_t))(v70 + 8);
        v135 = 0;
        v78 = v76;
        v77(v129, v130);
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        v79 = (char *)v133;
        v80 = swift_isUniquelyReferenced_nonNull_native();
        v139 = v79;
        v81 = v136;
        sub_18FBABA88(v136, v42, v78, v136, v42, v80);
        v82 = v139;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        swift_retain();
        v83 = swift_isUniquelyReferenced_nonNull_native();
        v133 = (uint64_t)v82;
        if ((v83 & 1) == 0)
          v134 = sub_18FB7ECEC(0, *((_QWORD *)v134 + 2) + 1, 1, v134);
        v1 = v128;
        v85 = *((_QWORD *)v134 + 2);
        v84 = *((_QWORD *)v134 + 3);
        if (v85 >= v84 >> 1)
          v134 = sub_18FB7ECEC((char *)(v84 > 1), v85 + 1, 1, v134);
        v86 = v134;
        *((_QWORD *)v134 + 2) = v85 + 1;
        v87 = &v86[24 * v85];
        *((_QWORD *)v87 + 4) = v81;
        *((_QWORD *)v87 + 5) = v42;
        *((_QWORD *)v87 + 6) = v78;
        swift_bridgeObjectRetain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v34 = sub_18FB7ECEC(0, *((_QWORD *)v34 + 2) + 1, 1, v34);
        v89 = *((_QWORD *)v34 + 2);
        v88 = *((_QWORD *)v34 + 3);
        if (v89 >= v88 >> 1)
          v34 = sub_18FB7ECEC((char *)(v88 > 1), v89 + 1, 1, v34);
        *((_QWORD *)v34 + 2) = v89 + 1;
        v90 = &v34[24 * v89];
        *((_QWORD *)v90 + 4) = v81;
        *((_QWORD *)v90 + 5) = v42;
        *((_QWORD *)v90 + 6) = v78;
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v129, v130);
      swift_release();
      v91 = (void *)sub_18FBCD0B8();
      v25 = v117;
      v92 = objc_msgSend(v117, sel_fileExistsAtPath_, v91);

      if ((v92 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_84;
      }
      swift_bridgeObjectRetain();
      v93 = sub_18FBCCF44();
      v94 = sub_18FBCD394();
      if (os_log_type_enabled(v93, v94))
      {
        v95 = (uint8_t *)swift_slowAlloc();
        v96 = (char *)swift_slowAlloc();
        v139 = v96;
        *(_DWORD *)v95 = v119;
        swift_bridgeObjectRetain();
        v137 = sub_18FB6ECF4(v136, v42, (uint64_t *)&v139);
        v27 = v131;
        v34 = v132;
        sub_18FBCD454();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_18FB18000, v93, v94, "Need to retry. File deleted before we could read it: %s", v95, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v96, -1, -1);
        MEMORY[0x19400960C](v95, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      swift_bridgeObjectRelease();
      v31 = (char *)MEMORY[0x1E0DEE9D8];
      v32 = &selRef_setAllowsMixedLocalizations_;
    }
    swift_bridgeObjectRelease();
LABEL_37:
    v54 = v133;
    v55 = v136;
    if (!*(_QWORD *)(v133 + 16))
      goto LABEL_45;
    goto LABEL_38;
  }
  swift_unexpectedError();
  __break(1u);
LABEL_89:
  *v30 = v137;
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_18FBAA264()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_18FBAA26C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_18FBAAB70(v0);
  if (*(_QWORD *)(v1 + 16))
    __asm { BR              X17 }
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBAAB70(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (_QWORD *)sub_18FBAEE58(a1);
  v2 = v1[2];
  result = swift_bridgeObjectRelease();
  if (v2 < 2)
    return (uint64_t)v1;
  v4 = 0;
  v5 = v2 >> 1;
  v6 = v2 - 1;
  v7 = 4 * v2;
  v8 = 7;
  v17 = v2 >> 1;
  while (1)
  {
    if (v4 == v6)
      goto LABEL_4;
    v9 = v1[2];
    if (v4 >= v9)
      break;
    if (v6 >= v9)
      goto LABEL_13;
    v10 = v1[v8 - 3];
    v11 = v1[v8 - 2];
    v12 = v1[v8];
    v13 = v1[v7 + 2];
    v20 = v1[v7 + 1];
    v21 = v1[v7];
    v14 = v1[v7 + 3];
    v18 = v1[v8 - 1];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v19 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_18FB8B928(v1);
    v15 = &v1[v8];
    swift_release();
    result = swift_bridgeObjectRelease();
    *(v15 - 3) = v21;
    *(v15 - 2) = v20;
    *(v15 - 1) = v13;
    *v15 = v14;
    if (v6 >= v1[2])
      goto LABEL_14;
    v16 = &v1[v7];
    swift_release();
    result = swift_bridgeObjectRelease();
    *v16 = v19;
    v16[1] = v11;
    v16[2] = v18;
    v16[3] = v12;
    v5 = v17;
LABEL_4:
    ++v4;
    v8 += 4;
    --v6;
    v7 -= 4;
    if (v5 == v4)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

id sub_18FBAACF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void (*v18)(char *, uint64_t);
  id v21[5];

  v21[4] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_18FBCCE24();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v21[-1] - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21[-1] - v8;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_18FBCCD88();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v11 = (void *)sub_18FBCCD94();
  v21[0] = 0;
  v12 = objc_msgSend(v10, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v11, 1, v21);

  v13 = v21[0];
  if (v12)
  {
    sub_18FBCCDE8();
    v14 = v13;

    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3898]), sel_init);
    v16 = objc_msgSend(v15, sel_globallyUniqueString);

    sub_18FBCD0DC();
    sub_18FBCCDB8();
    swift_bridgeObjectRelease();
    v17 = (id)sub_18FBCCE00();
    v18 = *(void (**)(char *, uint64_t))(v1 + 8);
    v18(v4, v0);
    v18(v7, v0);
    v18(v9, v0);
  }
  else
  {
    v17 = v21[0];
    sub_18FBCCD70();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
  }
  return v17;
}

void sub_18FBAAF70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  unsigned int v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v19 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  swift_beginAccess();
  v18 = v0;
  while (1)
  {
    v1 = v0[4];
    v2 = v0[6];
    v20 = (id)v0[5];
    v21 = v2;
    swift_bridgeObjectRetain();
    sub_18FBCD16C();
    v3 = v20;
    v4 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE1880C0);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_18FBD6060;
    *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEDC60];
    *(_QWORD *)(v5 + 64) = MEMORY[0x1E0DEDCD8];
    *(_QWORD *)(v5 + 32) = v1;
    sub_18FBCD0E8();
    v20 = v3;
    v21 = v4;
    swift_bridgeObjectRetain();
    sub_18FBCD16C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = (void *)sub_18FBCD0B8();
    v7 = (void *)sub_18FBCD0B8();
    v20 = 0;
    LOBYTE(v1) = objc_msgSend(v19, sel_moveItemAtPath_toPath_error_, v6, v7, &v20);

    if ((v1 & 1) != 0)
    {
      v17 = v20;

      swift_bridgeObjectRelease();
      return;
    }
    v8 = v20;
    v9 = (void *)sub_18FBCCD70();

    swift_willThrow();
    v10 = (void *)sub_18FBCD0B8();
    v11 = objc_msgSend(v19, sel_fileExistsAtPath_, v10);

    if (!v11)
      break;
    v12 = (void *)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v19, sel_fileExistsAtPath_, v12);

    if ((v13 & 1) == 0)
      goto LABEL_9;
    v0 = v18;
    v14 = v18[4];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      __break(1u);
    v18[4] = v16;

  }
  swift_bridgeObjectRelease();
LABEL_9:
  swift_willThrow();

}

uint64_t RelevanceCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RelevanceCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_18FBAB294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v6 = v4;
  *(_BYTE *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 24) = a1;
  v10 = (void *)*MEMORY[0x1E0CB2AC0];
  objc_allocWithZone(MEMORY[0x1E0CFCED8]);
  swift_retain();
  swift_bridgeObjectRetain();
  v11 = v10;
  v12 = sub_18FBB0874(a2, a3, (uint64_t)v11, a4);
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    type metadata accessor for RelevanceCacheTransaction();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v13 = (uint64_t)v12;

    type metadata accessor for RelevanceCacheWriter();
    swift_allocObject();
    v14 = sub_18FB793A4(v13);
    swift_release();
    *(_QWORD *)(v6 + 16) = v14;
    *(_QWORD *)(v6 + 32) = a2;
    *(_QWORD *)(v6 + 40) = a3;
  }
  return v6;
}

void sub_18FBAB3BC(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  void *v5;
  _OWORD *v6;

  if (*(_BYTE *)(v1 + 48) == 1)
  {
    sub_18FB7C5E4();
    swift_allocError();
    *v6 = xmmword_18FBD84D0;
    swift_willThrow();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_retain();
    v3 = a1;
    v4 = objc_msgSend(v3, "key");
    v5 = (void *)MEMORY[0x1E0C80A78](v4);
    sub_18FB7B1C8(v5, (void (*)(id, uint64_t))sub_18FBB0424);

    swift_release();
  }
}

uint64_t sub_18FBAB4B8(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t result;
  _OWORD *v5;

  if (*(_BYTE *)(v1 + 48) == 1)
  {
    sub_18FB7C5E4();
    swift_allocError();
    *v5 = xmmword_18FBD84D0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    swift_retain();
    v3 = a1;
    sub_18FB7B1C8(v3, (void (*)(id, uint64_t))sub_18FBB0984);

    return swift_release();
  }
  return result;
}

uint64_t sub_18FBAB5A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 48) & 1) == 0)
  {
    swift_retain();
    sub_18FB7AE3C();
    result = swift_release();
    if (!v1)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_18FBAAF70();
      sub_18FBA9120();
      sub_18FBAA26C();
      swift_release();
      result = swift_bridgeObjectRelease();
      *(_BYTE *)(v0 + 48) = 1;
    }
  }
  return result;
}

uint64_t RelevanceCacheTransaction.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RelevanceCacheTransaction.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_18FBAB6D4(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  sub_18FB1F254(0, (unint64_t *)&unk_1EE187FA0);
  v3 = (void *)sub_18FBCD280();
  swift_bridgeObjectRelease();
  return v3;
}

_QWORD *sub_18FBAB73C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187F20);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_18FBAB7A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_18FBCD1B4();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x194008304](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

_OWORD *sub_18FBAB818(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_18FB7F774((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        return sub_18FB73714(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_18FBAC388();
      goto LABEL_7;
    }
    sub_18FB7FA9C(v12, a3 & 1);
    v18 = sub_18FB7F774((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_18FBAC288(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for CFString(0);
  result = (_OWORD *)sub_18FBCD808();
  __break(1u);
  return result;
}

id sub_18FBAB938(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_18FB7F848((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_18FBAC54C();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_unknownObjectRelease();
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_18FB7FDA4(v12, a3 & 1);
  v18 = sub_18FB7F848((uint64_t)a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for CHSExtensionIdentity();
  result = (id)sub_18FBCD808();
  __break(1u);
  return result;
}

uint64_t sub_18FBABA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t result;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v7 = v6;
  v14 = *v6;
  v16 = sub_18FB7F7E4(a4, a5);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_18FBAC8AC();
LABEL_7:
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (_QWORD *)(v22[7] + 24 * v16);
      swift_release();
      result = swift_bridgeObjectRelease();
      *v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v27 = (uint64_t *)(v22[6] + 16 * v16);
    *v27 = a4;
    v27[1] = a5;
    v28 = (_QWORD *)(v22[7] + 24 * v16);
    *v28 = a1;
    v28[1] = a2;
    v28[2] = a3;
    v29 = v22[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v22[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_18FB80674(v19, a6 & 1);
  v25 = sub_18FB7F7E4(a4, a5);
  if ((v20 & 1) == (v26 & 1))
  {
    v16 = v25;
    v22 = (_QWORD *)*v7;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_18FBCD808();
  __break(1u);
  return result;
}

uint64_t sub_18FBABC14(uint64_t a1, uint64_t a2, char a3)
{
  return sub_18FBABC3C(a1, a2, a3, (uint64_t *)&unk_1EE1896F0, (void (*)(void))sub_18FB809B4);
}

uint64_t sub_18FBABC28(uint64_t a1, uint64_t a2, char a3)
{
  return sub_18FBABC3C(a1, a2, a3, &qword_1EE189700, (void (*)(void))sub_18FB809C0);
}

uint64_t sub_18FBABC3C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v8 = v5;
  v12 = *v5;
  v14 = sub_18FB7F910(a2);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_18FBACAA8(a4);
LABEL_7:
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = 8 * v14;
    *(_QWORD *)(v20[6] + v25) = a2;
    *(_QWORD *)(v20[7] + v25) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return swift_retain();
    }
    goto LABEL_14;
  }
  a5();
  v23 = sub_18FB7F910(a2);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v8;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for ControlSessionKey();
  result = sub_18FBCD808();
  __break(1u);
  return result;
}

void sub_18FBABDA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;

  v8 = v7;
  v15 = *v7;
  v17 = sub_18FB7F7E4(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0)
  {
LABEL_9:
    v25 = a4 & 1;
    v26 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
      v27 = v26[7] + 32 * v17;
      v28 = *(void **)(v27 + 16);
      swift_bridgeObjectRelease();

      *(_QWORD *)v27 = a1;
      *(_QWORD *)(v27 + 8) = a2;
      *(_QWORD *)(v27 + 16) = a3;
      *(_BYTE *)(v27 + 24) = v25;
      return;
    }
    v26[(v17 >> 6) + 8] |= 1 << v17;
    v29 = (uint64_t *)(v26[6] + 16 * v17);
    *v29 = a5;
    v29[1] = a6;
    v30 = v26[7] + 32 * v17;
    *(_QWORD *)v30 = a1;
    *(_QWORD *)(v30 + 8) = a2;
    *(_QWORD *)(v30 + 16) = a3;
    *(_BYTE *)(v30 + 24) = v25;
    v31 = v26[2];
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (!v32)
    {
      v26[2] = v33;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_18FBACC48();
    goto LABEL_9;
  }
  sub_18FB80D30(v20, a7 & 1);
  v23 = sub_18FB7F7E4(a5, a6);
  if ((v21 & 1) == (v24 & 1))
  {
    v17 = v23;
    goto LABEL_9;
  }
LABEL_15:
  sub_18FBCD808();
  __break(1u);
}

uint64_t sub_18FBABF44(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_18FB7F9CC(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_18FBACE24();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_18FB81070(result, a3 & 1);
  result = sub_18FB7F9CC(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_18FBCD808();
  __break(1u);
  return result;
}

uint64_t sub_18FBAC07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_18FBAC0EC(a1, a2, a3, a4, a5, a6, type metadata accessor for IconStore.FileVersionUpdateMigration, &qword_1EE187F00, (void (*)(void))sub_18FB81324);
}

uint64_t sub_18FBAC0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_18FBAC0EC(a1, a2, a3, a4, a5, a6, type metadata accessor for IconStore.FileRenameMigration, &qword_1EE18B3E8, (void (*)(void))sub_18FB81338);
}

uint64_t sub_18FBAC0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(_QWORD), uint64_t *a8, void (*a9)(void))
{
  _QWORD *v9;
  _QWORD **v11;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  unint64_t v29;
  char v30;

  v11 = (_QWORD **)v9;
  v17 = (_QWORD *)*v9;
  v19 = sub_18FB7F9FC(a2, a3, a4, a5);
  v20 = v17[2];
  v21 = (v18 & 1) == 0;
  v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
  }
  else
  {
    v23 = v18;
    v24 = v17[3];
    if (v24 >= v22 && (a6 & 1) != 0)
    {
LABEL_7:
      v25 = *v11;
      if ((v23 & 1) != 0)
      {
LABEL_8:
        v26 = v25[7];
        v27 = a7(0);
        return sub_18FBB07C8(a1, v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v19, a7);
      }
      goto LABEL_11;
    }
    if (v24 >= v22 && (a6 & 1) == 0)
    {
      sub_18FBACFEC(a7, a8);
      goto LABEL_7;
    }
    a9();
    v29 = sub_18FB7F9FC(a2, a3, a4, a5);
    if ((v23 & 1) == (v30 & 1))
    {
      v19 = v29;
      v25 = *v11;
      if ((v23 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_18FBAC2EC(v19, a2, a3, a4, a5, a1, v25, a7);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187E60);
  result = sub_18FBCD808();
  __break(1u);
  return result;
}

_OWORD *sub_18FBAC288(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_18FB73714(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_18FBAC2EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, uint64_t (*a8)(_QWORD))
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v12 = (_QWORD *)(a7[6] + 32 * a1);
  *v12 = a2;
  v12[1] = a3;
  v12[2] = a4;
  v12[3] = a5;
  v13 = a7[7];
  v14 = a8(0);
  result = sub_18FB826C8(a6, v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * a1, a8);
  v16 = a7[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a7[2] = v18;
  return result;
}

id sub_18FBAC388()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187DC0);
  v2 = *v0;
  v3 = sub_18FBCD640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_18FB6FA48(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_18FB73714(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FBAC54C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188050);
  v2 = *v0;
  v3 = sub_18FBCD640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_unknownObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_18FBAC6F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188058);
  v2 = *v0;
  v3 = sub_18FBCD640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(void **)v19;
    LOBYTE(v19) = *(_BYTE *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v21 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v21 = v20;
    *(_BYTE *)(v21 + 8) = v19;
    v22 = v20;
    result = v17;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FBAC8AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE188040);
  v2 = *v0;
  v3 = sub_18FBCD640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v24 = *(_OWORD *)(v21 + 8);
    *v23 = v19;
    v23[1] = v18;
    v25 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v25 = v22;
    *(_OWORD *)(v25 + 8) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FBACA90()
{
  return sub_18FBACAA8((uint64_t *)&unk_1EE1896F0);
}

void *sub_18FBACA9C()
{
  return sub_18FBACAA8(&qword_1EE189700);
}

void *sub_18FBACAA8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_18FBCD640();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_retain();
    result = (void *)swift_retain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FBACC48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187F48);
  v2 = *v0;
  v3 = sub_18FBCD640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 32 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(void **)(v21 + 16);
    LOBYTE(v21) = *(_BYTE *)(v21 + 24);
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v18;
    v25[1] = v19;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_QWORD *)(v26 + 16) = v24;
    *(_BYTE *)(v26 + 24) = v21;
    v27 = v24;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18FBACE24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189AF0);
  v2 = *v0;
  v3 = sub_18FBCD640();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_18FBACFC4()
{
  return sub_18FBACFEC(type metadata accessor for IconStore.FileVersionUpdateMigration, &qword_1EE187F00);
}

uint64_t sub_18FBACFD8()
{
  return sub_18FBACFEC(type metadata accessor for IconStore.FileRenameMigration, &qword_1EE18B3E8);
}

uint64_t sub_18FBACFEC(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  unint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = a1(0);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v36 - v5;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v36 = v2;
  v6 = *v2;
  v7 = sub_18FBCD640();
  v8 = *(_QWORD *)(v6 + 16);
  v43 = v7;
  if (!v8)
  {
    result = swift_release();
    v35 = v43;
    v34 = v36;
LABEL_28:
    *v34 = v35;
    return result;
  }
  v9 = v7;
  v10 = (void *)(v7 + 64);
  v11 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v6 || (unint64_t)v10 >= v6 + 64 + 8 * v11)
  {
    memmove(v10, (const void *)(v6 + 64), 8 * v11);
    v9 = v43;
  }
  v37 = v6 + 64;
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v42 = v6;
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v38 = (unint64_t)(v14 + 63) >> 6;
  v17 = (uint64_t)v39;
  v18 = v41;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v13 << 6);
      result = v42;
      goto LABEL_12;
    }
    v31 = v13 + 1;
    result = v42;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v31 >= v38)
      goto LABEL_26;
    v32 = *(_QWORD *)(v37 + 8 * v31);
    ++v13;
    if (!v32)
    {
      v13 = v31 + 1;
      if (v31 + 1 >= v38)
        goto LABEL_26;
      v32 = *(_QWORD *)(v37 + 8 * v13);
      if (!v32)
        break;
    }
LABEL_25:
    v16 = (v32 - 1) & v32;
    v20 = __clz(__rbit64(v32)) + (v13 << 6);
LABEL_12:
    v22 = 32 * v20;
    v23 = (uint64_t *)(*(_QWORD *)(result + 48) + 32 * v20);
    v25 = *v23;
    v24 = v23[1];
    v26 = v23[2];
    v27 = v23[3];
    v28 = *(_QWORD *)(v40 + 72) * v20;
    sub_18FB82684(*(_QWORD *)(result + 56) + v28, v17, v18);
    v29 = v43;
    v30 = (_QWORD *)(*(_QWORD *)(v43 + 48) + v22);
    *v30 = v25;
    v30[1] = v24;
    v30[2] = v26;
    v30[3] = v27;
    sub_18FB826C8(v17, *(_QWORD *)(v29 + 56) + v28, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v33 = v31 + 2;
  if (v33 >= v38)
  {
LABEL_26:
    result = swift_release();
    v34 = v36;
    v35 = v43;
    goto LABEL_28;
  }
  v32 = *(_QWORD *)(v37 + 8 * v33);
  if (v32)
  {
    v13 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v13 >= v38)
      goto LABEL_26;
    v32 = *(_QWORD *)(v37 + 8 * v13);
    ++v33;
    if (v32)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_18FBAD268(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_18FBAF280((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  result = sub_18FBAD2D0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_18FBAD2D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_18FBCD79C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_18FBAD9B8(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_18FBADA84((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_18FBADEBC((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_18FBCD2BC();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_18FBCD7C0();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_18FBCD7C0()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_18FBADD1C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_18FBADD1C((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_18FBADA84((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_18FBCD7C0() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_18FBCD610();
  __break(1u);
  return result;
}

uint64_t sub_18FBAD9B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_18FBCD7C0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_18FBADA84(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_18FBCD7C0() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_18FBCD7C0() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_18FBADE14((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_18FBCD670();
  __break(1u);
  return result;
}

char *sub_18FBADD1C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18BB10);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_18FBADE14(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_18FBCD670();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_18FBADEBC(uint64_t a1)
{
  return sub_18FBADD1C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_18FBADED0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *i;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  void *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v51 = a1;
  v52 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v53 = v8;
  v54 = 0;
  v55 = v11 & v9;
  v56 = a2;
  v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_18FBAF010((uint64_t)&v48);
  v12 = v48;
  if (!v48)
    goto LABEL_27;
  v13 = v49;
  v14 = v50;
  v15 = (_QWORD *)*a5;
  v17 = sub_18FB7F8C4((uint64_t)v48);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v21 = v16;
  if (v15[3] >= v20)
  {
    if ((a4 & 1) != 0)
    {
      v24 = (_QWORD *)*a5;
      if ((v16 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_18FBAC6F4();
      v24 = (_QWORD *)*a5;
      if ((v21 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    *(_QWORD *)(v24[6] + 8 * v17) = v12;
    v26 = v24[7] + 16 * v17;
    *(_QWORD *)v26 = v13;
    *(_BYTE *)(v26 + 8) = v14;
    v27 = v24[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v29;
LABEL_16:
    sub_18FBAF010((uint64_t)&v48);
    for (i = v48; v48; i = v48)
    {
      v32 = v49;
      v33 = v50;
      v34 = (_QWORD *)*a5;
      v36 = sub_18FB7F8C4((uint64_t)i);
      v37 = v34[2];
      v38 = (v35 & 1) == 0;
      v39 = v37 + v38;
      if (__OFADD__(v37, v38))
        goto LABEL_28;
      v40 = v35;
      if (v34[3] < v39)
      {
        sub_18FB8038C(v39, 1);
        v41 = sub_18FB7F8C4((uint64_t)i);
        if ((v40 & 1) != (v42 & 1))
          goto LABEL_30;
        v36 = v41;
      }
      v43 = (_QWORD *)*a5;
      if ((v40 & 1) != 0)
      {

        v31 = v43[7] + 16 * v36;
        *(_QWORD *)v31 = v32;
        *(_BYTE *)(v31 + 8) = v33;
      }
      else
      {
        v43[(v36 >> 6) + 8] |= 1 << v36;
        *(_QWORD *)(v43[6] + 8 * v36) = i;
        v44 = v43[7] + 16 * v36;
        *(_QWORD *)v44 = v32;
        *(_BYTE *)(v44 + 8) = v33;
        v45 = v43[2];
        v28 = __OFADD__(v45, 1);
        v46 = v45 + 1;
        if (v28)
          goto LABEL_29;
        v43[2] = v46;
      }
      sub_18FBAF010((uint64_t)&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_18FB8C7C4();
    return swift_release();
  }
  sub_18FB8038C(v20, a4 & 1);
  v22 = sub_18FB7F8C4((uint64_t)v12);
  if ((v21 & 1) == (v23 & 1))
  {
    v17 = v22;
    v24 = (_QWORD *)*a5;
    if ((v21 & 1) == 0)
      goto LABEL_14;
LABEL_12:

    v25 = v24[7] + 16 * v17;
    *(_QWORD *)v25 = v13;
    *(_BYTE *)(v25 + 8) = v14;
    goto LABEL_16;
  }
LABEL_30:
  sub_18FB1F254(0, (unint64_t *)&unk_1EE187FB0);
  result = sub_18FBCD808();
  __break(1u);
  return result;
}

void sub_18FBAE1D0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _OWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;

  v4 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v45 = v5;
  if (v5)
  {
    if (!*(_QWORD *)(v4 + 16))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v46 = *(_OWORD *)(v4 + 56);
    v7 = *(_QWORD *)(v4 + 40);
    v6 = *(_QWORD *)(v4 + 48);
    v8 = *(_QWORD *)(v4 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v7)
    {
      v44 = v4;
      v9 = (_QWORD *)*a3;
      v11 = sub_18FB7F7E4(v8, v7);
      v12 = v9[2];
      v13 = (v10 & 1) == 0;
      v14 = v12 + v13;
      if (__OFADD__(v12, v13))
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      v15 = v10;
      if (v9[3] >= v14)
      {
        if ((a2 & 1) != 0)
        {
          if ((v10 & 1) == 0)
            goto LABEL_14;
        }
        else
        {
          sub_18FBAC8AC();
          if ((v15 & 1) == 0)
            goto LABEL_14;
        }
      }
      else
      {
        sub_18FB80674(v14, a2 & 1);
        v16 = sub_18FB7F7E4(v8, v7);
        if ((v15 & 1) != (v17 & 1))
        {
LABEL_30:
          sub_18FBCD808();
          __break(1u);
LABEL_31:
          sub_18FBCD52C();
          sub_18FBCD16C();
          sub_18FBCD5D4();
          sub_18FBCD16C();
          sub_18FBCD61C();
          __break(1u);
          return;
        }
        v11 = v16;
        if ((v15 & 1) == 0)
        {
LABEL_14:
          v20 = (_QWORD *)*a3;
          *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
          v21 = (uint64_t *)(v20[6] + 16 * v11);
          *v21 = v8;
          v21[1] = v7;
          v22 = v20[7] + 24 * v11;
          *(_QWORD *)v22 = v6;
          *(_OWORD *)(v22 + 8) = v46;
          v23 = v20[2];
          v24 = __OFADD__(v23, 1);
          v25 = v23 + 1;
          if (v24)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          v20[2] = v25;
          if (v45 != 1)
          {
            v26 = (_OWORD *)(v4 + 96);
            v27 = 1;
            while (v27 < *(_QWORD *)(v4 + 16))
            {
              v47 = *v26;
              v29 = *((_QWORD *)v26 - 2);
              v28 = *((_QWORD *)v26 - 1);
              v30 = *((_QWORD *)v26 - 3);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              if (!v29)
                goto LABEL_25;
              v31 = (_QWORD *)*a3;
              v32 = sub_18FB7F7E4(v30, v29);
              v34 = v31[2];
              v35 = (v33 & 1) == 0;
              v24 = __OFADD__(v34, v35);
              v36 = v34 + v35;
              if (v24)
                goto LABEL_28;
              v37 = v33;
              if (v31[3] < v36)
              {
                sub_18FB80674(v36, 1);
                v32 = sub_18FB7F7E4(v30, v29);
                if ((v37 & 1) != (v38 & 1))
                  goto LABEL_30;
              }
              if ((v37 & 1) != 0)
                goto LABEL_11;
              v39 = (_QWORD *)*a3;
              *(_QWORD *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
              v40 = (uint64_t *)(v39[6] + 16 * v32);
              *v40 = v30;
              v40[1] = v29;
              v41 = v39[7] + 24 * v32;
              *(_QWORD *)v41 = v28;
              *(_OWORD *)(v41 + 8) = v47;
              v42 = v39[2];
              v24 = __OFADD__(v42, 1);
              v43 = v42 + 1;
              if (v24)
                goto LABEL_29;
              ++v27;
              v39[2] = v43;
              v26 = (_OWORD *)((char *)v26 + 40);
              v4 = v44;
              if (v45 == v27)
                goto LABEL_25;
            }
            goto LABEL_27;
          }
          goto LABEL_25;
        }
      }
LABEL_11:
      v18 = (void *)swift_allocError();
      swift_willThrow();
      v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE188110);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();

        return;
      }
      goto LABEL_31;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
}

unsigned __int8 *sub_18FBAE5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_18FBB080C();
  swift_bridgeObjectRetain();
  v7 = sub_18FBCD1E4();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_18FBAE968();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_18FBCD580();
  }
LABEL_7:
  v13 = sub_18FBAE6EC(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_18FBAE6EC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_18FBAE968()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_18FBCD1F0();
  v4 = sub_18FBAE9E4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_18FBAE9E4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_18FBAEB28(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_18FBAB73C(v9, 0);
      v12 = sub_18FBAEC14((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x194008298](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x194008298);
LABEL_9:
      sub_18FBCD580();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x194008298]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_18FBAEB28(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_18FBAB7A0(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_18FBAB7A0(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_18FBCD19C();
  }
  __break(1u);
  return result;
}

unint64_t sub_18FBAEC14(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_18FBAB7A0(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_18FBCD1A8();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_18FBCD580();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_18FBAB7A0(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_18FBCD184();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_18FBAEE24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v2;
  void *v3;
  id v4;
  id v6;

  v3 = *(void **)(a1 + 8);
  v6 = *(id *)a1;
  v2 = *(id *)a1;
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a2 = v2;
  *(_QWORD *)(a2 + 8) = v3;
  v4 = v3;
  return v6;
}

uint64_t sub_18FBAEE58(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(result + 16);
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    result = swift_bridgeObjectRetain();
    v3 = 0;
    v4 = 0;
    v5 = v2 + 4;
    v6 = (uint64_t *)(result + 48);
    while (1)
    {
      v8 = *(v6 - 2);
      v7 = *(v6 - 1);
      v9 = *v6;
      if (v3)
      {
        swift_bridgeObjectRetain();
        result = swift_retain();
        v10 = __OFSUB__(v3--, 1);
        if (v10)
          goto LABEL_30;
      }
      else
      {
        v11 = v2[3];
        if ((uint64_t)((v11 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_31;
        v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
        if (v12 <= 1)
          v13 = 1;
        else
          v13 = v12;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1880B8);
        v14 = (_QWORD *)swift_allocObject();
        v15 = _swift_stdlib_malloc_size(v14);
        v16 = v15 - 32;
        if (v15 < 32)
          v16 = v15 - 1;
        v17 = v16 >> 5;
        v14[2] = v13;
        v14[3] = 2 * (v16 >> 5);
        v18 = v14 + 4;
        v19 = v2[3] >> 1;
        v5 = &v14[4 * v19 + 4];
        v20 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        if (v2[2])
        {
          if (v14 != v2 || v18 >= &v2[4 * v19 + 4])
            memmove(v18, v2 + 4, 32 * v19);
          swift_bridgeObjectRetain();
          swift_retain();
          v2[2] = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_retain();
        }
        result = swift_release();
        v2 = v14;
        v10 = __OFSUB__(v20, 1);
        v3 = v20 - 1;
        if (v10)
        {
LABEL_30:
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
      }
      *v5 = v4;
      v5[1] = v8;
      v5[2] = v7;
      v5[3] = v9;
      v5 += 4;
      v6 += 3;
      if (v1 == ++v4)
      {
        result = swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  v3 = 0;
LABEL_26:
  v22 = v2[3];
  if (v22 >= 2)
  {
    v23 = v22 >> 1;
    v10 = __OFSUB__(v23, v3);
    v24 = v23 - v3;
    if (v10)
      goto LABEL_32;
    v2[2] = v24;
  }
  return (uint64_t)v2;
}

void sub_18FBAF010(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void (*v12)(_QWORD *);
  id v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  id v20;
  _QWORD v21[2];
  char v22;

  v3 = *v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v5;
  if (v4)
  {
    v7 = (v4 - 1) & v4;
    v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    v9 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v8);
    v10 = *(_QWORD *)(v3 + 56) + 16 * v8;
    v11 = *(void **)v10;
    LOBYTE(v10) = *(_BYTE *)(v10 + 8);
    v1[3] = v6;
    v1[4] = v7;
    v12 = (void (*)(_QWORD *))v1[5];
    v21[0] = v9;
    v21[1] = v11;
    v22 = v10;
    v13 = v11;
    v20 = v9;
    v12(v21);

    return;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    v15 = (unint64_t)(v1[2] + 64) >> 6;
    if (v14 < v15)
    {
      v16 = v1[1];
      v17 = *(_QWORD *)(v16 + 8 * v14);
      if (v17)
      {
LABEL_7:
        v7 = (v17 - 1) & v17;
        v8 = __clz(__rbit64(v17)) + (v14 << 6);
        v6 = v14;
        goto LABEL_3;
      }
      v18 = v5 + 2;
      v6 = v5 + 1;
      if (v5 + 2 < v15)
      {
        v17 = *(_QWORD *)(v16 + 8 * v18);
        if (v17)
        {
LABEL_10:
          v14 = v18;
          goto LABEL_7;
        }
        v6 = v5 + 2;
        if (v5 + 3 < v15)
        {
          v17 = *(_QWORD *)(v16 + 8 * (v5 + 3));
          if (v17)
          {
            v14 = v5 + 3;
            goto LABEL_7;
          }
          v18 = v5 + 4;
          v6 = v5 + 3;
          if (v5 + 4 < v15)
          {
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (v17)
              goto LABEL_10;
            v14 = v5 + 5;
            v6 = v5 + 4;
            if (v5 + 5 < v15)
            {
              v17 = *(_QWORD *)(v16 + 8 * v14);
              if (v17)
                goto LABEL_7;
              v6 = v15 - 1;
              v19 = v5 + 6;
              while (v15 != v19)
              {
                v17 = *(_QWORD *)(v16 + 8 * v19++);
                if (v17)
                {
                  v14 = v19 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
}

uint64_t sub_18FBAF1B0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_18FBCD580();
  }
  result = sub_18FBAF7E4((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

char *sub_18FBAF280(uint64_t a1)
{
  return sub_18FB7F1E8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_18FBAF294(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  char *v30;
  uint64_t *v31;
  char *v32;
  id v33;
  void *v34;
  id v35;
  char *v36;
  void *v37;
  id v38;
  char *v39;
  double v40;
  double v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  unsigned int v59;
  char *v60;
  _QWORD aBlock[6];
  uint64_t v62;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_35;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_18FBCD628())
  {
    v4 = v2 & 0xC000000000000001;
    v5 = (char *)MEMORY[0x1E0DEE9D8];
    v6 = 4;
    v52 = v2;
    v53 = v3;
    v54 = v2 & 0xC000000000000001;
    while (1)
    {
      v7 = v4 ? (id)MEMORY[0x1940086C4](v6 - 4, v2) : *(id *)(v2 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, sel_extensionIdentity);
      if (v10)
      {
        v11 = v10;
        v62 = v6 - 3;
        v60 = v5;
        v12 = objc_msgSend(v10, sel_deviceIdentifier);
        if (v12)
        {
          v13 = v12;
          v14 = sub_18FBCD0DC();
          v16 = v15;

        }
        else
        {
          v14 = 0;
          v16 = 0;
        }
        v17 = objc_msgSend(v11, sel_extensionBundleIdentifier);
        if (v17)
        {
          v18 = v17;
          v19 = sub_18FBCD0DC();
          v21 = v20;

          v22 = objc_msgSend(v11, sel_containerBundleIdentifier);
          if (v22)
          {
            v23 = v22;
            v24 = v19;
            v25 = sub_18FBCD0DC();
            v55 = v26;
            v56 = v25;

          }
          else
          {
            v24 = v19;
            v55 = 0;
            v56 = 0;
          }
          if (v16)
            v27 = v14;
          else
            v27 = 0;
          v58 = v27;
          v28 = (char *)objc_msgSend(objc_allocWithZone((Class)CHSExtensionIdentity), sel_init);
          v29 = (uint64_t *)&v28[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
          swift_beginAccess();
          *v29 = v24;
          v29[1] = v21;
          v30 = v28;
          swift_bridgeObjectRelease();
          v31 = (uint64_t *)&v30[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
          swift_beginAccess();
          *v31 = v56;
          v31[1] = v55;
          swift_bridgeObjectRelease();
          v32 = &v30[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
          swift_beginAccess();
          *(_QWORD *)v32 = v58;
          *((_QWORD *)v32 + 1) = v16;

          swift_bridgeObjectRelease();
          v33 = objc_msgSend(v8, sel_kind);
          if (v33)
          {
            v34 = v33;
            sub_18FBCD0DC();

          }
          v59 = objc_msgSend(v8, sel_isDeletion);
          if (v59)
          {
            v35 = objc_allocWithZone((Class)CHSWidgetRelevanceKey);
            v36 = v30;
            v37 = (void *)sub_18FBCD0B8();
            swift_bridgeObjectRelease();
            v38 = objc_msgSend(v35, sel_initWithExtensionIdentity_kind_, v36, v37);

          }
          else
          {
            v39 = v30;
            v57 = objc_msgSend(v8, sel_supportsBackgroundRefresh);
            objc_msgSend(v8, sel_lastRelevanceUpdate);
            v41 = v40;
            v42 = swift_allocObject();
            *(_QWORD *)(v42 + 16) = v8;
            *(_QWORD *)(v42 + 24) = a2;
            v43 = objc_allocWithZone((Class)CHSWidgetRelevanceProperties);
            v44 = v8;
            swift_retain();
            v45 = (void *)sub_18FBCD0B8();
            swift_bridgeObjectRelease();
            aBlock[4] = sub_18FBB0988;
            aBlock[5] = v42;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_18FBAB6D4;
            aBlock[3] = &block_descriptor_9_1;
            v46 = _Block_copy(aBlock);
            v38 = objc_msgSend(v43, sel_initWithWidgetExtensionIdentity_kind_supportsBackgroundRefresh_lastRelevanceUpdate_relevanceFunction_, v39, v45, v57, v46, v41);

            _Block_release(v46);
            swift_release();
          }
          v5 = v60;
          v3 = v53;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v5 = sub_18FB7EBEC(0, *((_QWORD *)v60 + 2) + 1, 1, v60);
          v2 = v52;
          v48 = *((_QWORD *)v5 + 2);
          v47 = *((_QWORD *)v5 + 3);
          if (v48 >= v47 >> 1)
            v5 = sub_18FB7EBEC((char *)(v47 > 1), v48 + 1, 1, v5);
          *((_QWORD *)v5 + 2) = v48 + 1;
          v49 = &v5[16 * v48];
          *((_QWORD *)v49 + 4) = v38;
          v49[40] = v59;
          v4 = v54;
        }
        else
        {

          swift_bridgeObjectRelease();
          v5 = v60;
        }
        v9 = v62;
      }
      else
      {

      }
      ++v6;
      if (v9 == v3)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_35:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (char *)MEMORY[0x1E0DEE9D8];
}

uint64_t type metadata accessor for RelevanceCacheTransaction()
{
  return objc_opt_self();
}

uint64_t sub_18FBAF7E4(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_18FBAB7A0(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = sub_18FBCD19C();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_18FBAB7A0(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_18FBAB7A0(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = sub_18FBCD19C();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_18FBAFC08(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  BOOL v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t *v34;
  char *v35;
  uint64_t *v36;
  char *v37;
  id v38;
  void *v39;
  unsigned int v40;
  char v41;
  id v42;
  char *v43;
  void *v44;
  id v45;
  char *v46;
  id v47;
  double v48;
  double v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  void *v61;
  char v62;
  uint64_t v63;
  id v64;
  char v65;
  char v66;
  id v67;
  id v68;
  char isUniquelyReferenced_nonNull_native;
  char v70;
  unint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  char v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t result;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  _QWORD aBlock[6];

  if (a1 >> 62)
    goto LABEL_78;
  v1 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = v1;
  if (!v1)
  {
LABEL_79:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
LABEL_3:
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v4 = __OFSUB__(v2, 1);
    v5 = v2 - 1;
    if (v4)
    {
LABEL_72:
      __break(1u);
LABEL_73:
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
    v85 = v5;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v6 = MEMORY[0x1940086C4]();
    }
    else
    {
      if ((v5 & 0x8000000000000000) != 0)
        goto LABEL_76;
      if (v5 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_77;
      v6 = swift_retain();
    }
    v87 = v6;
    v7 = objc_msgSend(*(id *)(v6 + 16), sel_groups);
    if (v7)
    {
      v8 = v7;
      sub_18FB1F254(0, (unint64_t *)&unk_1EE187FF0);
      v9 = sub_18FBCD28C();

    }
    else
    {
      v9 = MEMORY[0x1E0DEE9D8];
    }
    v86 = v3;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_18FBCD628();
      if (!v10)
      {
LABEL_47:
        v13 = (char *)MEMORY[0x1E0DEE9D8];
        goto LABEL_48;
      }
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10)
        goto LABEL_47;
    }
    if (v10 < 1)
    {
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      swift_bridgeObjectRetain();
      v2 = sub_18FBCD628();
      if (!v2)
        goto LABEL_79;
      goto LABEL_3;
    }
    v11 = 0;
    v12 = v9 & 0xC000000000000001;
    v13 = (char *)MEMORY[0x1E0DEE9D8];
    v89 = v10;
    v90 = v9;
    v88 = v9 & 0xC000000000000001;
    do
    {
      if (v12)
        v14 = (id)MEMORY[0x1940086C4](v11, v9);
      else
        v14 = *(id *)(v9 + 8 * v11 + 32);
      v15 = v14;
      v16 = objc_msgSend(v14, sel_extensionIdentity);
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v16, sel_deviceIdentifier);
        v93 = v13;
        if (v18)
        {
          v19 = v18;
          v20 = sub_18FBCD0DC();
          v22 = v21;

        }
        else
        {
          v20 = 0;
          v22 = 0;
        }
        v23 = objc_msgSend(v17, sel_extensionBundleIdentifier);
        if (v23)
        {
          v24 = v23;
          v25 = sub_18FBCD0DC();
          v27 = v26;

          v28 = objc_msgSend(v17, sel_containerBundleIdentifier);
          if (v28)
          {
            v29 = v28;
            v92 = sub_18FBCD0DC();
            v31 = v30;

          }
          else
          {
            v92 = 0;
            v31 = 0;
          }
          if (v22)
            v32 = v20;
          else
            v32 = 0;
          v91 = v32;
          v33 = (char *)objc_msgSend(objc_allocWithZone((Class)CHSExtensionIdentity), sel_init);
          v34 = (uint64_t *)&v33[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
          swift_beginAccess();
          *v34 = v25;
          v34[1] = v27;
          v35 = v33;
          swift_bridgeObjectRelease();
          v36 = (uint64_t *)&v35[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
          swift_beginAccess();
          *v36 = v92;
          v36[1] = v31;
          swift_bridgeObjectRelease();
          v37 = &v35[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
          swift_beginAccess();
          *(_QWORD *)v37 = v91;
          *((_QWORD *)v37 + 1) = v22;

          swift_bridgeObjectRelease();
          v38 = objc_msgSend(v15, sel_kind);
          if (v38)
          {
            v39 = v38;
            sub_18FBCD0DC();

          }
          v40 = objc_msgSend(v15, sel_isDeletion);
          v41 = v40;
          if (v40)
          {
            v42 = objc_allocWithZone((Class)CHSWidgetRelevanceKey);
            v43 = v35;
            v44 = (void *)sub_18FBCD0B8();
            swift_bridgeObjectRelease();
            v45 = objc_msgSend(v42, sel_initWithExtensionIdentity_kind_, v43, v44);

          }
          else
          {
            v46 = v35;
            v47 = objc_msgSend(v15, sel_supportsBackgroundRefresh);
            objc_msgSend(v15, sel_lastRelevanceUpdate);
            v49 = v48;
            v50 = swift_allocObject();
            *(_QWORD *)(v50 + 16) = v15;
            *(_QWORD *)(v50 + 24) = v87;
            v51 = objc_allocWithZone((Class)CHSWidgetRelevanceProperties);
            v52 = v15;
            swift_retain();
            v53 = (void *)sub_18FBCD0B8();
            swift_bridgeObjectRelease();
            aBlock[4] = sub_18FBB0854;
            aBlock[5] = v50;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_18FBAB6D4;
            aBlock[3] = &block_descriptor_9;
            v54 = _Block_copy(aBlock);
            v45 = objc_msgSend(v51, sel_initWithWidgetExtensionIdentity_kind_supportsBackgroundRefresh_lastRelevanceUpdate_relevanceFunction_, v46, v53, v47, v54, v49);

            _Block_release(v54);
            swift_release();
          }
          v13 = v93;
          v10 = v89;
          v9 = v90;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v13 = sub_18FB7EBEC(0, *((_QWORD *)v93 + 2) + 1, 1, v93);
          v56 = *((_QWORD *)v13 + 2);
          v55 = *((_QWORD *)v13 + 3);
          if (v56 >= v55 >> 1)
            v13 = sub_18FB7EBEC((char *)(v55 > 1), v56 + 1, 1, v13);
          *((_QWORD *)v13 + 2) = v56 + 1;
          v57 = &v13[16 * v56];
          *((_QWORD *)v57 + 4) = v45;
          v57[40] = v41;
          v12 = v88;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {

      }
      ++v11;
    }
    while (v10 != v11);
LABEL_48:
    swift_bridgeObjectRelease_n();
    v58 = *((_QWORD *)v13 + 2);
    if (v58)
      break;
    v3 = v86;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_release();
    v2 = v85;
    if (!v85)
      goto LABEL_73;
  }
  v59 = v13 + 40;
  v3 = v86;
  while (1)
  {
    v61 = (void *)*((_QWORD *)v59 - 1);
    v62 = *v59;
    if ((*v59 & 1) != 0)
    {
      v63 = v3[2];
      v64 = v61;
      if (!v63)
        goto LABEL_59;
    }
    else
    {
      v64 = objc_msgSend(v61, "key");
      if (!v3[2])
        goto LABEL_59;
    }
    v64 = v64;
    sub_18FB7F8C4((uint64_t)v64);
    v66 = v65;

    if ((v66 & 1) != 0)
    {

      goto LABEL_52;
    }
LABEL_59:
    v67 = v61;
    v68 = v64;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v3;
    v71 = sub_18FB7F8C4((uint64_t)v68);
    v72 = v3[2];
    v73 = (v70 & 1) == 0;
    v74 = v72 + v73;
    if (__OFADD__(v72, v73))
    {
      __break(1u);
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    v75 = v70;
    if (v3[3] < v74)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v78 = (_QWORD *)aBlock[0];
      if ((v70 & 1) == 0)
        goto LABEL_66;
    }
    else
    {
      v3 = aBlock;
      sub_18FBAC6F4();
      v78 = (_QWORD *)aBlock[0];
      if ((v75 & 1) == 0)
      {
LABEL_66:
        v78[(v71 >> 6) + 8] |= 1 << v71;
        *(_QWORD *)(v78[6] + 8 * v71) = v68;
        v79 = v78[7] + 16 * v71;
        *(_QWORD *)v79 = v61;
        *(_BYTE *)(v79 + 8) = v62;
        v80 = v78[2];
        v4 = __OFADD__(v80, 1);
        v81 = v80 + 1;
        if (v4)
          goto LABEL_71;
        v3 = v78;
        v78[2] = v81;
        v82 = v68;
        goto LABEL_51;
      }
    }
LABEL_50:
    v60 = v78[7] + 16 * v71;

    *(_QWORD *)v60 = v61;
    *(_BYTE *)(v60 + 8) = v62;
    v3 = v78;
LABEL_51:

    swift_bridgeObjectRelease();
LABEL_52:
    v59 += 16;
    if (!--v58)
      goto LABEL_5;
  }
  sub_18FB8038C(v74, isUniquelyReferenced_nonNull_native);
  v3 = (_QWORD *)aBlock[0];
  v76 = sub_18FB7F8C4((uint64_t)v68);
  if ((v75 & 1) == (v77 & 1))
  {
    v71 = v76;
    v78 = (_QWORD *)aBlock[0];
    if ((v75 & 1) == 0)
      goto LABEL_66;
    goto LABEL_50;
  }
  sub_18FB1F254(0, (unint64_t *)&unk_1EE187FB0);
  result = sub_18FBCD808();
  __break(1u);
  return result;
}

void sub_18FBB0424(unint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  sub_18FB79A2C(a1, a2, *(void **)(v2 + 16), *(_BYTE *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_18FBB0434@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 48);
  *a2 = *(_QWORD *)(v3 + 40);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for CacheFile()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *_s14ChronoServices9CacheFileVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for CacheFile(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CacheFile(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CacheFile(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CacheFile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CacheFile()
{
  return &type metadata for CacheFile;
}

uint64_t type metadata accessor for RelevanceCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for RelevanceCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RelevanceCache.location.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of RelevanceCache.location.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of RelevanceCache.location.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of RelevanceCache.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of RelevanceCache.size.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of RelevanceCache.startTransaction()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of RelevanceCache.edit(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of RelevanceCache.clear()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of RelevanceCache.lookup(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of RelevanceCache.entries.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of RelevanceCache.relevances.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of RelevanceCache.keys.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of RelevanceCache.reload()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of RelevanceCache.parts.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t method lookup function for RelevanceCacheTransaction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RelevanceCacheTransaction.add(wrp:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of RelevanceCacheTransaction.remove(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of RelevanceCacheTransaction.commit()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t sub_18FBB079C()
{
  return sub_18FB1E9FC(&qword_1EE18BA88, (uint64_t *)&unk_1EE18BA90, MEMORY[0x1E0DE9FA0]);
}

uint64_t sub_18FBB07C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_18FBB080C()
{
  unint64_t result;

  result = qword_1EE18BB00;
  if (!qword_1EE18BB00)
  {
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EE18BB00);
  }
  return result;
}

uint64_t sub_18FBB0854()
{
  uint64_t v0;

  return sub_18FBB8978(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

id sub_18FBB0874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  v8 = objc_msgSend(v4, sel_initWithFileAtPath_protection_capacity_error_, v7, a3, a4, v12);

  if (v8)
  {
    v9 = v12[0];
  }
  else
  {
    v10 = v12[0];
    sub_18FBCCD70();

    swift_willThrow();
  }
  return v8;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FBB0994()
{
  uint64_t v0;

  v0 = sub_18FBCCF5C();
  __swift_allocate_value_buffer(v0, qword_1EE18BB18);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE18BB18);
  return sub_18FBCCF50();
}

id sub_18FBB0B38()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  v1 = OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver;
  *(_QWORD *)&v0[OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver] = 0;
  v2 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR___CHSWidgetExtensionSet_widgetExtensionContainers] = MEMORY[0x1E0DEE9D8];
  v3 = v0;
  if ((v2 & 0xC000000000000000) != 0 && sub_18FBCD628())
    sub_18FBB24B8(MEMORY[0x1E0DEE9D8], &qword_1EE189A90, (unint64_t *)&qword_1EE189E10);
  else
    v4 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v3[OBJC_IVAR___CHSWidgetExtensionSet_allExtensions] = v4;
  *(_QWORD *)&v0[v1] = objc_msgSend((id)objc_opt_self(), sel_defaultResolver);
  swift_unknownObjectRelease();
  v5 = objc_msgSend(objc_allocWithZone((Class)CHSIconResolver), sel_init);
  *(_QWORD *)&v3[OBJC_IVAR___CHSWidgetExtensionSet_iconResolver] = v5;

  v7.receiver = v3;
  v7.super_class = (Class)CHSWidgetExtensionSet;
  return objc_msgSendSuper2(&v7, sel_init);
}

char *sub_18FBB0C6C(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  char *v8;
  char *v9;
  char *v10;
  id v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v8 = (char *)objc_msgSend(v4, sel_init);
  v9 = v8;
  if (a2)
  {
    v10 = v8;
    v11 = a2;
  }
  else
  {
    v12 = (void *)objc_opt_self();
    v13 = v9;
    v11 = objc_msgSend(v12, sel_defaultResolver);
  }
  *(_QWORD *)&v9[OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver] = v11;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)&v9[OBJC_IVAR___CHSWidgetExtensionSet_iconResolver] = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)&v9[OBJC_IVAR___CHSWidgetExtensionSet_allExtensions] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  sub_18FBB21B0(MEMORY[0x1E0DEE9E0], a1, v11);
  v15 = v14;
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();
  v16 = sub_18FBB1F50(v15, a3);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  *(_QWORD *)&v9[OBJC_IVAR___CHSWidgetExtensionSet_widgetExtensionContainers] = v16;

  swift_bridgeObjectRelease();
  return v9;
}

id sub_18FBB0EAC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;

  v6 = sub_18FBCD0DC();
  v8 = v7;
  v9 = a1;
  v10 = objc_msgSend(v9, sel_widgetExtensionContainers);
  type metadata accessor for CHSWidgetExtensionContainer(0);
  v11 = sub_18FBCD28C();

  swift_bridgeObjectRetain();
  v12 = (void *)a4(v11, v6, v8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v12;
}

uint64_t sub_18FBB0F6C@<X0>(_QWORD *a1@<X8>)
{
  char *v1;
  char *v2;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  objc_super v19;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_widgetExtensionContainers);
  type metadata accessor for CHSWidgetExtensionContainer(0);
  v5 = sub_18FBCD28C();

  v6 = objc_msgSend(v2, sel_allExtensions);
  sub_18FB1F254(0, (unint64_t *)&qword_1EE189E10);
  sub_18FB1F28C();
  v7 = sub_18FBCD31C();

  v8 = *(void **)&v2[OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver];
  v9 = *(_QWORD *)&v2[OBJC_IVAR___CHSWidgetExtensionSet_iconResolver];
  v10 = (char *)objc_allocWithZone((Class)CHSWidgetExtensionSet);
  v11 = OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver;
  *(_QWORD *)&v10[OBJC_IVAR___CHSWidgetExtensionSet_equivalentBundleIdentifierResolver] = 0;
  if (v8)
  {
    swift_unknownObjectRetain();
    v12 = v10;
    v13 = v8;
  }
  else
  {
    v14 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v15 = v10;
    v13 = objc_msgSend(v14, sel_defaultResolver);
  }
  *(_QWORD *)&v10[v11] = v13;
  swift_unknownObjectRetain_n();
  swift_unknownObjectRelease();
  *(_QWORD *)&v10[OBJC_IVAR___CHSWidgetExtensionSet_allExtensions] = v7;
  *(_QWORD *)&v10[OBJC_IVAR___CHSWidgetExtensionSet_iconResolver] = v9;
  *(_QWORD *)&v10[OBJC_IVAR___CHSWidgetExtensionSet_widgetExtensionContainers] = v5;
  swift_unknownObjectRetain();

  v19.receiver = v10;
  v19.super_class = (Class)CHSWidgetExtensionSet;
  v16 = objc_msgSendSuper2(&v19, sel_init);
  swift_unknownObjectRelease();
  v17 = swift_unknownObjectRelease();
  result = type metadata accessor for CHSWidgetExtensionSet(v17);
  a1[3] = result;
  *a1 = v16;
  return result;
}

void sub_18FBB1208(void *a1, void *a2, uint64_t *a3)
{
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  uint64_t v25;
  _OWORD v26[4];
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v6 = (char *)objc_msgSend(a1, sel_identity);
  v7 = &v6[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
  swift_beginAccess();
  v8 = *((_QWORD *)v7 + 1);
  swift_bridgeObjectRetain();

  if (v8)
  {
    v9 = (void *)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(a2, sel_equivalentBundleIdentifiersForBundleIdentifier_, v9);

    v11 = sub_18FBCD31C();
    sub_18FBCD898();
    sub_18FBB15F4((uint64_t)v26, v11);
    swift_bridgeObjectRelease();
    v30 = v26[2];
    v31 = v26[3];
    v32 = v27;
    v28 = v26[0];
    v29 = v26[1];
    v12 = sub_18FBCD880();
    v13 = v12;
    if (*(_QWORD *)(*a3 + 16) && (sub_18FB7F9CC(v12), (v14 & 1) != 0))
      v15 = swift_bridgeObjectRetain();
    else
      v15 = MEMORY[0x1E0DEE9D8];
    v33 = v15;
    v16 = a1;
    MEMORY[0x1940083E8]();
    if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_18FBCD2B0();
    sub_18FBCD2C8();
    sub_18FBCD2A4();
    v17 = v33;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *a3;
    *a3 = 0x8000000000000000;
    sub_18FBABF44(v17, v13, isUniquelyReferenced_nonNull_native);
    *a3 = v25;
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EE18AC78 != -1)
      swift_once();
    v19 = sub_18FBCCF5C();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE18BB18);
    v20 = a1;
    v21 = sub_18FBCCF44();
    v22 = sub_18FBCD37C();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      *(_QWORD *)&v28 = objc_msgSend(v20, sel_identity);
      sub_18FBCD454();
      *v24 = v28;

      _os_log_impl(&dword_18FB18000, v21, v22, "Dropping extension %@: missing container bundle identifier", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v24, -1, -1);
      MEMORY[0x19400960C](v23, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t type metadata accessor for CHSWidgetExtensionSet(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE189B50);
}

uint64_t sub_18FBB156C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_18FBB15F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  int64_t v14;

  sub_18FBCD88C();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_18FBCD85C();
    }
    v13 = *(_QWORD *)(v3 + 8 * v10);
    if (!v13)
      break;
LABEL_16:
    v6 = (v13 - 1) & v13;
LABEL_5:
    sub_18FBCD850();
    swift_bridgeObjectRetain();
    sub_18FBCD130();
    v11 = sub_18FBCD88C();
    result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  v14 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v13 = *(_QWORD *)(v3 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void sub_18FBB1788(unint64_t a1)
{
  sub_18FBB24B8(a1, &qword_1EE188030, (unint64_t *)&unk_1EE187FB0);
}

uint64_t sub_18FBB17A4(unint64_t a1, id a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  id v18;
  void *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  BOOL v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;

  v5 = a1;
  if (!(a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_40:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_39:
  swift_bridgeObjectRetain();
  v6 = sub_18FBCD628();
  if (!v6)
    goto LABEL_40;
LABEL_3:
  v7 = 0;
  v8 = v5 & 0xC000000000000001;
  v28 = v5 + 32;
  v29 = v5 & 0xC000000000000001;
  v32 = v5;
  v30 = a2;
  v31 = a3;
  while (1)
  {
    if (v8)
      v9 = (char *)MEMORY[0x1940086C4](v7, v5);
    else
      v9 = (char *)*(id *)(v28 + 8 * v7);
    a2 = v9;
    v10 = __OFADD__(v7, 1);
    v11 = v7 + 1;
    if (v10)
    {
      __break(1u);
      goto LABEL_39;
    }
    v12 = *(_QWORD *)&v9[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_18FBCD628();
      v13 = result;
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
    }
    v33 = v11;
    v34 = a2;
    if (v13)
    {
      if (v13 < 1)
      {
        __break(1u);
        return result;
      }
      v15 = 0;
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        if ((v12 & 0xC000000000000001) != 0)
          v18 = (id)MEMORY[0x1940086C4](v15, v12);
        else
          v18 = *(id *)(v12 + 8 * v15 + 32);
        v19 = v18;
        v20 = (char *)objc_msgSend(v18, sel_identity);
        v21 = &v20[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
        swift_beginAccess();
        v22 = *(_QWORD *)v21;
        v23 = *((_QWORD *)v21 + 1);
        swift_bridgeObjectRetain();

        if (v23)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v16 = sub_18FB7E9B8(0, v16[2] + 1, 1, v16);
          v25 = v16[2];
          v24 = v16[3];
          if (v25 >= v24 >> 1)
            v16 = sub_18FB7E9B8((_QWORD *)(v24 > 1), v25 + 1, 1, v16);
          v16[2] = v25 + 1;
          v17 = &v16[2 * v25];
          v17[4] = v22;
          v17[5] = v23;
        }
        ++v15;
      }
      while (v13 != v15);
    }
    else
    {
      v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease_n();
    a3 = v16[2];
    if (a3)
      break;

    swift_bridgeObjectRelease();
    v5 = v32;
LABEL_34:
    v7 = v33;
    v8 = v29;
    if (v33 == v6)
      goto LABEL_40;
  }
  v26 = v16 + 5;
  v5 = v32;
  while (1)
  {
    v27 = (id)*(v26 - 1) == v30 && *v26 == v31;
    if (v27 || (sub_18FBCD7C0() & 1) != 0)
      break;
    v26 += 2;
    if (!--a3)
    {

      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v34;
}

_QWORD *sub_18FBB1AA8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *result;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  BOOL v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_18FBCD628();
    if (v8)
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRelease();
    return 0;
  }
  v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
    goto LABEL_35;
LABEL_3:
  v9 = 0;
  v10 = v7 & 0xC000000000000001;
  v31 = v7 + 32;
  v32 = v7 & 0xC000000000000001;
  v35 = v7;
  v36 = v4;
  v33 = v8;
  v34 = a3;
  v37 = a2;
  while (1)
  {
    if (v10)
    {
      v11 = (char *)MEMORY[0x1940086C4](v9, v7);
      v12 = __OFADD__(v9, 1);
      v13 = v9 + 1;
      if (v12)
        goto LABEL_33;
    }
    else
    {
      v11 = (char *)*(id *)(v31 + 8 * v9);
      v12 = __OFADD__(v9, 1);
      v13 = v9 + 1;
      if (v12)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
    }
    v39 = v11;
    v14 = *(_QWORD *)&v11[OBJC_IVAR___CHSWidgetExtensionContainer_storage];
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_18FBCD628();
      v38 = v13;
      if (!v15)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        v18 = MEMORY[0x1E0DEE9D8];
        goto LABEL_23;
      }
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v38 = v13;
      if (!v15)
        goto LABEL_22;
    }
    v40 = MEMORY[0x1E0DEE9D8];
    result = sub_18FB7F074(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0)
    {
      __break(1u);
      return result;
    }
    v17 = 0;
    v18 = v40;
    do
    {
      if ((v14 & 0xC000000000000001) != 0)
        v19 = (id)MEMORY[0x1940086C4](v17, v14);
      else
        v19 = *(id *)(v14 + 8 * v17 + 32);
      v20 = v19;
      v21 = (char *)objc_msgSend(v19, sel_identity, v31);
      v22 = &v21[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
      swift_beginAccess();
      v23 = *(_QWORD *)v22;
      v24 = *((_QWORD *)v22 + 1);
      swift_bridgeObjectRetain();

      v26 = *(_QWORD *)(v40 + 16);
      v25 = *(_QWORD *)(v40 + 24);
      if (v26 >= v25 >> 1)
        sub_18FB7F074((_QWORD *)(v25 > 1), v26 + 1, 1);
      ++v17;
      *(_QWORD *)(v40 + 16) = v26 + 1;
      v27 = v40 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v23;
      *(_QWORD *)(v27 + 40) = v24;
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();
    v7 = v35;
    v4 = v36;
    a3 = v34;
LABEL_23:
    v28 = *(_QWORD *)(v18 + 16);
    a2 = v37;
    if (v28)
      break;
LABEL_4:

    swift_bridgeObjectRelease();
    v10 = v32;
    v9 = v38;
    if (v38 == v33)
      goto LABEL_35;
  }
  v29 = (_QWORD *)(v18 + 40);
  while (1)
  {
    v30 = *(v29 - 1) == v37 && *v29 == a3;
    if (v30 || (sub_18FBCD7C0() & 1) != 0)
      break;
    v29 += 2;
    if (!--v28)
      goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v39;
}

void *sub_18FBB1D8C(unint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  if (a1 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_18FBCD628())
  {
    a2 = (_QWORD *)((char *)a2 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
    swift_beginAccess();
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1940086C4](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = objc_msgSend(v6, sel_containerBundleIdentifier);
      v10 = sub_18FBCD0DC();
      v12 = v11;

      v13 = a2[1];
      if (v13)
      {
        if (v10 == *a2 && v12 == v13)
        {
          swift_bridgeObjectRelease();
LABEL_19:
          swift_bridgeObjectRelease();
          return v7;
        }
        v15 = sub_18FBCD7C0();
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
          goto LABEL_19;

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v5;
      if (v8 == v4)
        goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_18FBB1F50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v21;
  uint64_t v22;

  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_18FBCD5B0();
    result = sub_18FBB156C(a1);
    v6 = result;
    v7 = 0;
    v8 = a1 + 64;
    v18 = v3;
    v19 = v5;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
    {
      v10 = (unint64_t)v6 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(a1 + 36) != v5)
        goto LABEL_23;
      v21 = v7;
      v11 = objc_allocWithZone((Class)CHSWidgetExtensionContainer);
      sub_18FB1F254(0, (unint64_t *)&qword_1EE189E10);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v12 = (void *)sub_18FBCD280();
      objc_msgSend(v11, sel_initWithExtensions_iconResolver_, v12, a2);
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      sub_18FBCD598();
      sub_18FBCD5BC();
      sub_18FBCD5C8();
      result = sub_18FBCD5A4();
      v9 = 1 << *(_BYTE *)(a1 + 32);
      if (v6 >= v9)
        goto LABEL_24;
      v13 = *(_QWORD *)(v8 + 8 * v10);
      if ((v13 & (1 << v6)) == 0)
        goto LABEL_25;
      v5 = v19;
      if (*(_DWORD *)(a1 + 36) != v19)
        goto LABEL_26;
      v14 = v13 & (-2 << (v6 & 0x3F));
      if (v14)
      {
        v9 = __clz(__rbit64(v14)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v15 = v10 + 1;
        v16 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v16)
        {
          v17 = *(_QWORD *)(v8 + 8 * v15);
          if (v17)
          {
LABEL_18:
            v9 = __clz(__rbit64(v17)) + (v15 << 6);
          }
          else
          {
            while (v16 - 2 != v10)
            {
              v17 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v17)
              {
                v15 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v21 + 1;
      v6 = v9;
      if (v21 + 1 == v18)
        return v22;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

void sub_18FBB21B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;

  v5 = v3;
  v6 = a2;
  v31 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_18FBCD4A8();
    sub_18FB1F254(0, (unint64_t *)&qword_1EE189E10);
    sub_18FB1F28C();
    sub_18FBCD340();
    v6 = v26;
    v23 = v27;
    v7 = v28;
    v8 = v29;
    v9 = v30;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a2 + 32);
    v23 = a2 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v6 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_18FBCD4CC())
    goto LABEL_34;
  sub_18FB1F254(0, (unint64_t *)&qword_1EE189E10);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v14 = v25;
  v15 = (id)swift_unknownObjectRelease();
  v16 = v8;
  v17 = v9;
  if (!v25)
    goto LABEL_34;
  while (1)
  {
    v4 = (void *)MEMORY[0x194008E20](v15);
    sub_18FBB1208(v14, a3, &v31);
    if (v5)
      goto LABEL_36;
    v5 = 0;
    objc_autoreleasePoolPop(v4);

    v8 = v16;
    v9 = v17;
    if (v6 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v9)
      break;
    v17 = (v9 - 1) & v9;
    v18 = __clz(__rbit64(v9)) | (v8 << 6);
    v16 = v8;
LABEL_24:
    v15 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v18);
    v14 = v15;
    if (!v15)
      goto LABEL_34;
  }
  v16 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_36:
    objc_autoreleasePoolPop(v4);
    __break(1u);
    return;
  }
  if (v16 >= v22)
    goto LABEL_34;
  v19 = *(_QWORD *)(v23 + 8 * v16);
  if (v19)
  {
LABEL_23:
    v17 = (v19 - 1) & v19;
    v18 = __clz(__rbit64(v19)) + (v16 << 6);
    goto LABEL_24;
  }
  v20 = v8 + 2;
  if (v8 + 2 >= v22)
    goto LABEL_34;
  v19 = *(_QWORD *)(v23 + 8 * v20);
  if (v19)
    goto LABEL_22;
  v20 = v8 + 3;
  if (v8 + 3 >= v22)
    goto LABEL_34;
  v19 = *(_QWORD *)(v23 + 8 * v20);
  if (v19)
    goto LABEL_22;
  v20 = v8 + 4;
  if (v8 + 4 >= v22)
    goto LABEL_34;
  v19 = *(_QWORD *)(v23 + 8 * v20);
  if (v19)
  {
LABEL_22:
    v16 = v20;
    goto LABEL_23;
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v22)
    goto LABEL_34;
  v19 = *(_QWORD *)(v23 + 8 * v16);
  if (v19)
    goto LABEL_23;
  v21 = v8 + 6;
  while (v22 != v21)
  {
    v19 = *(_QWORD *)(v23 + 8 * v21++);
    if (v19)
    {
      v16 = v21 - 1;
      goto LABEL_23;
    }
  }
LABEL_34:
  sub_18FB8C7C4();
}

void sub_18FBB24B8(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;

  v4 = a1;
  v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v6 = sub_18FBCD508();
      if (!v5)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v7 = sub_18FBCD628();
      swift_bridgeObjectRelease();
      if (!v7)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v6 = MEMORY[0x1E0DEE9E8];
  if (v5)
    goto LABEL_8;
LABEL_4:
  v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    return;
LABEL_9:
  v9 = v6 + 56;
  v45 = v7;
  if ((v4 & 0xC000000000000001) != 0)
  {
    v10 = 0;
    v42 = v4;
    while (1)
    {
      v11 = MEMORY[0x1940086C4](v10, v4);
      v12 = __OFADD__(v10++, 1);
      if (v12)
      {
        __break(1u);
        goto LABEL_37;
      }
      v13 = v11;
      v14 = sub_18FBCD400();
      v15 = -1 << *(_BYTE *)(v6 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        sub_18FB1F254(0, a3);
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = sub_18FBCD40C();

        if ((v21 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v4 = v42;
          goto LABEL_12;
        }
        v22 = ~v15;
        while (1)
        {
          v16 = (v16 + 1) & v22;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            break;
          v23 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
          v24 = sub_18FBCD40C();

          if ((v24 & 1) != 0)
            goto LABEL_11;
        }
        v4 = v42;
      }
      *(_QWORD *)(v9 + 8 * v17) = v19 | v18;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v16) = v13;
      v25 = *(_QWORD *)(v6 + 16);
      v12 = __OFADD__(v25, 1);
      v26 = v25 + 1;
      if (v12)
        goto LABEL_38;
      *(_QWORD *)(v6 + 16) = v26;
LABEL_12:
      if (v10 == v45)
        return;
    }
  }
  v27 = 0;
  v43 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v27 != v43)
  {
    v28 = *(id *)(v4 + 32 + 8 * v27);
    v29 = sub_18FBCD400();
    v30 = -1 << *(_BYTE *)(v6 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_18FB1F254(0, a3);
      v35 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
      v36 = sub_18FBCD40C();

      if ((v36 & 1) != 0)
        goto LABEL_24;
      v37 = ~v30;
      v31 = (v31 + 1) & v37;
      v32 = v31 >> 6;
      v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
      v34 = 1 << v31;
      if ((v33 & (1 << v31)) != 0)
      {
        while (1)
        {
          v38 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
          v39 = sub_18FBCD40C();

          if ((v39 & 1) != 0)
            break;
          v31 = (v31 + 1) & v37;
          v32 = v31 >> 6;
          v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
          v34 = 1 << v31;
          if ((v33 & (1 << v31)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v7 = v45;
        goto LABEL_25;
      }
LABEL_32:
      v7 = v45;
    }
    *(_QWORD *)(v9 + 8 * v32) = v34 | v33;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v31) = v28;
    v40 = *(_QWORD *)(v6 + 16);
    v12 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v12)
      goto LABEL_39;
    *(_QWORD *)(v6 + 16) = v41;
LABEL_25:
    if (++v27 == v7)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

id CHSControlInstanceIdentity.control.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___CHSControlInstanceIdentity_control);
}

uint64_t CHSControlInstanceIdentity.hostIdentifier.getter()
{
  return sub_18FBB28C4(&OBJC_IVAR___CHSControlInstanceIdentity_hostIdentifier);
}

id sub_18FBB2860(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;

  if (*(_QWORD *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    v3 = (void *)sub_18FBCD0B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

uint64_t CHSControlInstanceIdentity.configurationIdentifier.getter()
{
  return sub_18FBB28C4(&OBJC_IVAR___CHSControlInstanceIdentity_configurationIdentifier);
}

uint64_t sub_18FBB28C4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CHSControlInstanceIdentity.contentType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___CHSControlInstanceIdentity_contentType);
}

id CHSControlInstanceIdentity.init(control:contentType:hostIdentifier:configurationIdentifier:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v9;
  void *v10;
  id v11;

  if (!a4)
  {
    v9 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v10 = 0;
    goto LABEL_6;
  }
  v9 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v10 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
LABEL_6:
  v11 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithControl_contentType_hostIdentifier_configurationIdentifier_, a1, a2, v9, v10);

  return v11;
}

id CHSControlInstanceIdentity.init(control:contentType:hostIdentifier:configurationIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  objc_super v10;

  *(_QWORD *)(v6 + OBJC_IVAR___CHSControlInstanceIdentity_control) = a1;
  *(_QWORD *)(v6 + OBJC_IVAR___CHSControlInstanceIdentity_contentType) = a2;
  v7 = (_QWORD *)(v6 + OBJC_IVAR___CHSControlInstanceIdentity_hostIdentifier);
  *v7 = a3;
  v7[1] = a4;
  v8 = (_QWORD *)(v6 + OBJC_IVAR___CHSControlInstanceIdentity_configurationIdentifier);
  *v8 = a5;
  v8[1] = a6;
  v10.super_class = (Class)CHSControlInstanceIdentity;
  return objc_msgSendSuper2(&v10, sel_init);
}

void __swiftcall CHSControlInstanceIdentity.init()(CHSControlInstanceIdentity *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void CHSControlInstanceIdentity.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t CHSControlInstanceIdentity.hash.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;

  v1 = v0;
  sub_18FBCD898();
  v2 = objc_msgSend(v0, sel_control);
  sub_18FBCD418();

  objc_msgSend(v1, sel_contentType);
  sub_18FBCD85C();
  v3 = objc_msgSend(v1, sel_hostIdentifier);
  if (v3)
  {
    v4 = v3;
    sub_18FBCD0DC();

    sub_18FBCD868();
    swift_bridgeObjectRetain();
    sub_18FBCD130();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_18FBCD868();
  }
  v5 = objc_msgSend(v1, sel_configurationIdentifier);
  if (v5)
  {
    v6 = v5;
    sub_18FBCD0DC();

    sub_18FBCD868();
    swift_bridgeObjectRetain();
    sub_18FBCD130();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_18FBCD868();
  }
  return sub_18FBCD880();
}

uint64_t CHSControlInstanceIdentity.isEqual(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  char v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BYTE v32[24];
  uint64_t v33;

  v2 = v1;
  v3 = sub_18FB1FA14(a1, (uint64_t)v32);
  if (!v33)
  {
    sub_18FB1F7C4((uint64_t)v32);
    goto LABEL_25;
  }
  type metadata accessor for CHSControlInstanceIdentity(v3);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    v13 = 0;
    return v13 & 1;
  }
  if (v31 == v1)
  {

    v13 = 1;
    return v13 & 1;
  }
  sub_18FB1F254(0, qword_1EE189840);
  v4 = objc_msgSend(v1, sel_control);
  v5 = objc_msgSend(v31, sel_control);
  v6 = sub_18FBCD40C();

  if ((v6 & 1) == 0)
    goto LABEL_24;
  v7 = objc_msgSend(v2, sel_contentType);
  if (v7 != objc_msgSend(v31, sel_contentType))
    goto LABEL_24;
  v8 = objc_msgSend(v2, sel_hostIdentifier);
  if (v8)
  {
    v9 = v8;
    v10 = sub_18FBCD0DC();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  v14 = objc_msgSend(v31, sel_hostIdentifier);
  if (!v14)
  {
    if (!v12)
      goto LABEL_22;
LABEL_20:

    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v15 = v14;
  v16 = sub_18FBCD0DC();
  v18 = v17;

  if (!v12)
  {
    if (!v18)
      goto LABEL_22;
    goto LABEL_20;
  }
  if (!v18)
    goto LABEL_20;
  if (v10 == v16 && v12 == v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v19 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
LABEL_24:

    goto LABEL_25;
  }
LABEL_22:
  v20 = objc_msgSend(v2, sel_configurationIdentifier);
  if (v20)
  {
    v21 = v20;
    v22 = sub_18FBCD0DC();
    v24 = v23;

  }
  else
  {
    v22 = 0;
    v24 = 0;
  }
  v26 = objc_msgSend(v31, sel_configurationIdentifier);
  if (!v26)
  {
    if (!v24)
    {

      v13 = 1;
      return v13 & 1;
    }
    goto LABEL_20;
  }
  v27 = v26;
  v28 = sub_18FBCD0DC();
  v30 = v29;

  if (!v24)
  {

    if (!v30)
    {
      v13 = 1;
      return v13 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  if (!v30)
    goto LABEL_20;
  if (v22 == v28 && v24 == v30)
    v13 = 1;
  else
    v13 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v13 & 1;
}

void sub_18FBB3118(char *a1)
{
  sub_18FBC7D44(*a1);
}

void sub_18FBB3124()
{
  char *v0;

  sub_18FBC887C(*v0);
}

void sub_18FBB312C()
{
  __asm { BR              X10 }
}

uint64_t sub_18FBB3168()
{
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

void sub_18FBB31DC(uint64_t a1)
{
  char *v1;

  sub_18FBC8EF8(a1, *v1);
}

uint64_t sub_18FBB31E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FBB3B24();
  *a1 = result;
  return result;
}

uint64_t sub_18FBB3210()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_18FBB3240 + 4 * byte_18FBD85A4[*v0]))();
}

void sub_18FBB3240(_QWORD *a1@<X8>)
{
  *a1 = 0x54746E65746E6F63;
  a1[1] = 0xEB00000000657079;
}

void sub_18FBB3264(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x800000018FBE7050;
}

void sub_18FBB3284(char *a1@<X8>)
{
  strcpy(a1, "hostIdentifier");
  a1[15] = -18;
}

uint64_t sub_18FBB32AC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18FBB32DC + 4 * byte_18FBD85A8[*v0]))(0x6C6F72746E6F63, 0xE700000000000000);
}

uint64_t sub_18FBB32DC()
{
  return 0x54746E65746E6F63;
}

unint64_t sub_18FBB32FC()
{
  return 0xD000000000000017;
}

uint64_t sub_18FBB3318()
{
  return 0x6E65644974736F68;
}

uint64_t sub_18FBB333C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FBB3B24();
  *a1 = result;
  return result;
}

uint64_t sub_18FBB3360()
{
  sub_18FBB393C();
  return sub_18FBCD8BC();
}

uint64_t sub_18FBB3388()
{
  sub_18FBB393C();
  return sub_18FBCD8C8();
}

_QWORD *CHSControlInstanceIdentity.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  void *v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188070);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBB393C();
  sub_18FBCD8A4();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    sub_18FB1F254(0, (unint64_t *)&qword_1EE189E70);
    v26 = 0;
    sub_18FB76CD0(&qword_1EE189E68, (uint64_t)&protocol conformance descriptor for CHSControlIdentity);
    sub_18FBCD6E8();
    v8 = v27;
    v25 = 2;
    v9 = sub_18FBCD6AC();
    v11 = v10;
    v22 = v9;
    v24 = 3;
    v20 = sub_18FBCD6AC();
    v21 = v12;
    v23 = 1;
    v19 = sub_18FBCD700();
    if (v21)
    {
      v20 = sub_18FBCD0B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = 0;
    }
    if (v11)
    {
      v14 = sub_18FBCD0B8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = 0;
    }
    v15 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v16 = (void *)v20;
    v17 = (void *)v14;
    v7 = objc_msgSend(v15, sel_initWithControl_contentType_hostIdentifier_configurationIdentifier_, v8, v19, v20, v14);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v7;
}

uint64_t CHSControlInstanceIdentity.encode(to:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  id v11;
  void *v12;
  id v13;
  void *v14;
  _BYTE v15[8];
  id v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189728);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBB393C();
  sub_18FBCD8B0();
  v9 = objc_msgSend(v3, sel_control);
  v16 = v9;
  v15[7] = 0;
  sub_18FB1F254(0, (unint64_t *)&qword_1EE189E70);
  sub_18FB76CD0(&qword_1EE1899E8, (uint64_t)&protocol conformance descriptor for CHSControlIdentity);
  sub_18FBCD76C();

  if (!v2)
  {
    v11 = objc_msgSend(v3, sel_configurationIdentifier);
    if (v11)
    {
      v12 = v11;
      sub_18FBCD0DC();

      v15[4] = 2;
      sub_18FBCD748();
      swift_bridgeObjectRelease();
    }
    v13 = objc_msgSend(v3, sel_hostIdentifier);
    if (v13)
    {
      v14 = v13;
      sub_18FBCD0DC();

      v15[5] = 3;
      sub_18FBCD748();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v3, sel_contentType);
    v15[6] = 1;
    sub_18FBCD784();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

_QWORD *sub_18FBB38E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = CHSControlInstanceIdentity.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_18FBB3908(_QWORD *a1)
{
  return CHSControlInstanceIdentity.encode(to:)(a1);
}

uint64_t type metadata accessor for CHSControlInstanceIdentity(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE189A08);
}

unint64_t sub_18FBB393C()
{
  unint64_t result;

  result = qword_1EE1899F0;
  if (!qword_1EE1899F0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD873C, &_s10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_1EE1899F0);
  }
  return result;
}

uint64_t _s10CodingKeysOwst_3(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_18FBB39CC + 4 * byte_18FBD85B1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_18FBB3A00 + 4 * byte_18FBD85AC[v4]))();
}

uint64_t sub_18FBB3A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBB3A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FBB3A10);
  return result;
}

uint64_t sub_18FBB3A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FBB3A24);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_18FBB3A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBB3A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_3()
{
  return &_s10CodingKeysON_3;
}

unint64_t sub_18FBB3A50()
{
  unint64_t result;

  result = qword_1EE18BB70;
  if (!qword_1EE18BB70)
  {
    result = MEMORY[0x19400954C](&unk_18FBD8714, &_s10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_1EE18BB70);
  }
  return result;
}

unint64_t sub_18FBB3A98()
{
  unint64_t result;

  result = qword_1EE189A00;
  if (!qword_1EE189A00)
  {
    result = MEMORY[0x19400954C](&unk_18FBD864C, &_s10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_1EE189A00);
  }
  return result;
}

unint64_t sub_18FBB3AE0()
{
  unint64_t result;

  result = qword_1EE1899F8;
  if (!qword_1EE1899F8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD8674, &_s10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_1EE1899F8);
  }
  return result;
}

uint64_t sub_18FBB3B24()
{
  unint64_t v0;

  v0 = sub_18FBCD688();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_18FBB3B70(void **a1, void **a2)
{
  return _sSo18CHSWidgetExtensionC14ChronoServicesE1loiySbAB_ABtFZ_0(*a1, *a2);
}

uint64_t _sSo18CHSWidgetExtensionC14ChronoServicesE1loiySbAB_ABtFZ_0(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v3 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  v4 = sub_18FBCD0DC();
  v6 = v5;

  v7 = objc_msgSend(a2, sel_extensionBundleIdentifier);
  v8 = sub_18FBCD0DC();
  v10 = v9;

  if (v4 == v8 && v6 == v10)
    v12 = 0;
  else
    v12 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

unint64_t sub_18FBB3C44()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EE18BB78;
  if (!qword_1EE18BB78)
  {
    v1 = sub_18FBB3C8C();
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEFD00], v1);
    atomic_store(result, (unint64_t *)&qword_1EE18BB78);
  }
  return result;
}

unint64_t sub_18FBB3C8C()
{
  unint64_t result;

  result = qword_1EE189E10;
  if (!qword_1EE189E10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE189E10);
  }
  return result;
}

uint64_t sub_18FBB3DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FBD6060;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  v7 = sub_18FB82254(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v35 = v7;
  v8 = OBJC_IVAR___CHSEquivalentBundleIdentifierResolver_categoriesPrimitives;
  v9 = *(void **)(v3 + OBJC_IVAR___CHSEquivalentBundleIdentifierResolver_categoriesPrimitives);
  swift_unknownObjectRetain();
  v10 = (void *)sub_18FBCD0B8();
  v11 = objc_msgSend(v9, sel_resolveBundleIdentifier_from_to_, v10, 1, 1);

  swift_unknownObjectRelease();
  if (v11)
  {
    v12 = sub_18FBCD0DC();
    v14 = v13;

    sub_18FBB440C(&v34, v12, v14);
    swift_bridgeObjectRelease();
  }
  v15 = *(void **)(v3 + v8);
  swift_unknownObjectRetain();
  v16 = (void *)sub_18FBCD0B8();
  v17 = objc_msgSend(v15, sel_resolveBundleIdentifier_from_to_, v16, 1, 0);

  swift_unknownObjectRelease();
  if (v17)
  {
    v18 = sub_18FBCD0DC();
    v20 = v19;

    sub_18FBB440C(&v34, v18, v20);
    swift_bridgeObjectRelease();
  }
  v21 = *(void **)(v3 + v8);
  swift_unknownObjectRetain();
  v22 = (void *)sub_18FBCD0B8();
  v23 = objc_msgSend(v21, sel_resolveBundleIdentifier_from_to_, v22, 0, 1);

  swift_unknownObjectRelease();
  if (v23)
  {
    v24 = sub_18FBCD0DC();
    v26 = v25;

    sub_18FBB440C(&v34, v24, v26);
    swift_bridgeObjectRelease();
  }
  v27 = *(void **)(v3 + v8);
  swift_unknownObjectRetain();
  v28 = (void *)sub_18FBCD0B8();
  v29 = objc_msgSend(v27, sel_resolveBundleIdentifier_from_to_, v28, 0, 0);

  swift_unknownObjectRelease();
  if (v29)
  {
    v30 = sub_18FBCD0DC();
    v32 = v31;

    sub_18FBB440C(&v34, v30, v32);
    swift_bridgeObjectRelease();
  }
  return v35;
}

uint64_t type metadata accessor for CHSEquivalentBundleIdentifierResolver(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE18BBE8);
}

uint64_t sub_18FBB4150(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_18FBCD4C0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_18FB1F254(0, (unint64_t *)&unk_1EE187FB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      result = 0;
      *a1 = v26;
      return result;
    }
    result = sub_18FBCD4B4();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_18FBB4BEC(v7, result + 1, &qword_1EE188030, (unint64_t *)&unk_1EE187FB0, (uint64_t)off_1E2A56938, (void (*)(unint64_t))sub_18FBB4DE8);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_18FBB4DE8();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_18FBB5BFC((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_18FBCD400();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_18FB1F254(0, (unint64_t *)&unk_1EE187FB0);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_18FBCD40C();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_18FBCD40C();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_18FBB5C7C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_18FBB440C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_18FBCD850();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  v8 = sub_18FBCD88C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_18FBCD7C0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_18FBCD7C0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_18FBB5E00(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_18FBB45B8(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_18FBCCE24();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_18FBB7AA4(&qword_1EE187DF0, MEMORY[0x1E0CB0018]);
  swift_bridgeObjectRetain();
  v30 = a2;
  v11 = sub_18FBCD064();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v26 = v2;
    v27 = a1;
    v28 = ~v12;
    v16 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v29 = v16;
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v16 + 16);
    while (1)
    {
      v19 = v14;
      v20 = v18;
      v18(v9, *(_QWORD *)(v14 + 48) + v17 * v13, v6);
      sub_18FBB7AA4(&qword_1EE187DF8, MEMORY[0x1E0CB0028]);
      v21 = sub_18FBCD0A0();
      v22 = *(void (**)(char *, uint64_t))(v29 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v13 = (v13 + 1) & v28;
      v14 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v26;
        a1 = v27;
        v7 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v30, v6);
    v20(v27, *(_QWORD *)(*v26 + 48) + v17 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = v30;
    v18(v9, v30, v6);
    v31 = *v3;
    *v3 = 0x8000000000000000;
    sub_18FBB5F98((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v31;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_18FBB480C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v10 = *v5;
  sub_18FBCD850();
  swift_bridgeObjectRetain();
  sub_18FB7D954(a2, a3, a4, a5);
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  v11 = sub_18FBCD88C() & ~(-1 << *(_BYTE *)(v10 + 32));
  v48 = v10 + 56;
  v49 = a3;
  if (((*(_QWORD *)(v10 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
    v23 = a5;
    goto LABEL_9;
  }
  v42 = -1 << *(_BYTE *)(v10 + 32);
  v12 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 32 * v11);
  v13 = *v12;
  v14 = v12[1];
  v15 = v12[2];
  v16 = v12[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_18FB7D954(v13, v14, v15, v16);
  v19 = v18;
  if (v17 == sub_18FB7D954(a2, a3, a4, a5) && v19 == v20)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  v44 = a2;
  v45 = a4;
  v22 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
    v43 = ~v42;
    v11 = (v11 + 1) & v43;
    if (((*(_QWORD *)(v48 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v23 = a5;
      while (1)
      {
        v31 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 32 * v11);
        v32 = *v31;
        v33 = v31[1];
        v34 = v31[2];
        v35 = v31[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36 = sub_18FB7D954(v32, v33, v34, v35);
        v38 = v37;
        if (v36 == sub_18FB7D954(a2, v49, a4, a5) && v38 == v39)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          v26 = a1;
          goto LABEL_12;
        }
        v41 = sub_18FBCD7C0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v41 & 1) != 0)
          break;
        v11 = (v11 + 1) & v43;
        a2 = v44;
        a4 = v45;
        if (((*(_QWORD *)(v48 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
          goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = a1;
      goto LABEL_12;
    }
    v23 = a5;
LABEL_9:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50 = *v46;
    *v46 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FBB618C(a2, v49, a4, v23, v11, isUniquelyReferenced_nonNull_native);
    *v46 = v50;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = v49;
    result = 1;
    a1[2] = a4;
    a1[3] = v23;
    return result;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  v26 = a1;
LABEL_12:
  swift_bridgeObjectRelease();
  v27 = (uint64_t *)(*(_QWORD *)(*v46 + 48) + 32 * v11);
  v28 = v27[1];
  v30 = v27[2];
  v29 = v27[3];
  *v26 = *v27;
  v26[1] = v28;
  v26[2] = v30;
  v26[3] = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_18FBB4BEC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v8 = sub_18FBCD4FC();
    v21 = v8;
    sub_18FBCD4A8();
    if (sub_18FBCD4CC())
    {
      sub_18FB1F254(0, a4);
      do
      {
        swift_dynamicCast();
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (*(_QWORD *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          v8 = v21;
        }
        result = sub_18FBCD400();
        v10 = v8 + 56;
        v11 = -1 << *(_BYTE *)(v8 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v13 == v17;
            if (v13 == v17)
              v13 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v20;
        ++*(_QWORD *)(v8 + 16);
      }
      while (sub_18FBCD4CC());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v8;
}

uint64_t sub_18FBB4DE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188030);
  v3 = sub_18FBCD4F0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_31;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_31;
          v17 = v6[v12];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v9)
            {
LABEL_31:
              swift_release();
              v1 = v28;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v17 = v6[v18];
            if (!v17)
            {
              while (1)
              {
                v12 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_37;
                if (v12 >= v9)
                  goto LABEL_31;
                v17 = v6[v12];
                ++v18;
                if (v17)
                  goto LABEL_21;
              }
            }
            v12 = v18;
          }
        }
LABEL_21:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_18FBCD400();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_18FBB5070()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189A90);
  v3 = sub_18FBCD4F0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v28;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_18FBCD400();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_18FBB530C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE189AE0);
  v3 = sub_18FBCD4F0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_18FBCD850();
      sub_18FBCD130();
      result = sub_18FBCD88C();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_18FBB55E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_18FBCCE24();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187EE8);
  v6 = sub_18FBCD4F0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v36 + 72);
      v23 = *(_QWORD *)(v5 + 48) + v22 * v17;
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v23, v2);
      sub_18FBB7AA4(&qword_1EE187DF0, MEMORY[0x1E0CB0018]);
      result = sub_18FBCD064();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v22, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

unint64_t sub_18FBB594C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187EF0);
  v3 = sub_18FBCD4F0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v23 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v24 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v12 = v11 | (v10 << 6);
      }
      else
      {
        v19 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v19 >= v24)
          goto LABEL_23;
        v20 = v23[v19];
        ++v10;
        if (!v20)
        {
          v10 = v19 + 1;
          if (v19 + 1 >= v24)
            goto LABEL_23;
          v20 = v23[v10];
          if (!v20)
          {
            v10 = v19 + 2;
            if (v19 + 2 >= v24)
              goto LABEL_23;
            v20 = v23[v10];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v24)
              {
LABEL_23:
                swift_release();
                v22 = 1 << *(_BYTE *)(v2 + 32);
                if (v22 > 63)
                  bzero(v23, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v23 = -1 << v22;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v20 = v23[v21];
              if (!v20)
              {
                while (1)
                {
                  v10 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_29;
                  if (v10 >= v24)
                    goto LABEL_23;
                  v20 = v23[v10];
                  ++v21;
                  if (v20)
                    goto LABEL_22;
                }
              }
              v10 = v21;
            }
          }
        }
LABEL_22:
        v7 = (v20 - 1) & v20;
        v12 = __clz(__rbit64(v20)) + (v10 << 6);
      }
      v13 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v12);
      v14 = *v13;
      v15 = v13[1];
      v16 = v13[2];
      v17 = v13[3];
      sub_18FBCD850();
      sub_18FB7D954(v14, v15, v16, v17);
      sub_18FBCD130();
      swift_bridgeObjectRelease();
      sub_18FBCD88C();
      result = sub_18FBCD49C();
      *(_QWORD *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * result);
      *v18 = v14;
      v18[1] = v15;
      v18[2] = v16;
      v18[3] = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_18FBB5BFC(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_18FBCD400();
  result = sub_18FBCD49C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_18FBB5C7C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_18FBB4DE8();
  }
  else
  {
    if (v7 > v6)
    {
      sub_18FBB64AC();
      goto LABEL_14;
    }
    sub_18FBB6D7C();
  }
  v8 = *v3;
  v9 = sub_18FBCD400();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_18FB1F254(0, (unint64_t *)&unk_1EE187FB0);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_18FBCD40C();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_18FBCD7FC();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_18FBCD40C();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_18FBB5E00(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_18FBB530C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_18FBB67E8();
      goto LABEL_22;
    }
    sub_18FBB7258();
  }
  v11 = *v4;
  sub_18FBCD850();
  sub_18FBCD130();
  result = sub_18FBCD88C();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_18FBCD7C0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_18FBCD7FC();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_18FBCD7C0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_18FBB5F98(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_18FBCCE24();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_18FBB55E8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_18FBB6998();
      goto LABEL_12;
    }
    sub_18FBB7504();
  }
  v12 = *v3;
  sub_18FBB7AA4(&qword_1EE187DF0, MEMORY[0x1E0CB0018]);
  v13 = sub_18FBCD064();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_18FBB7AA4(&qword_1EE187DF8, MEMORY[0x1E0CB0028]);
      v18 = sub_18FBCD0A0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_18FBCD7FC();
  __break(1u);
  return result;
}

uint64_t sub_18FBB618C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v11 = result;
  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0)
    goto LABEL_21;
  if ((a6 & 1) != 0)
  {
    sub_18FBB594C();
  }
  else
  {
    if (v13 > v12)
    {
      v14 = result;
      v15 = a2;
      v16 = a3;
      result = (uint64_t)sub_18FBB6BBC();
LABEL_22:
      v42 = *v48;
      *(_QWORD *)(*v48 + 8 * (a5 >> 6) + 56) |= 1 << a5;
      v43 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 32 * a5);
      *v43 = v14;
      v43[1] = v15;
      v43[2] = v16;
      v43[3] = a4;
      v44 = *(_QWORD *)(v42 + 16);
      v45 = __OFADD__(v44, 1);
      v46 = v44 + 1;
      if (!v45)
      {
        *(_QWORD *)(v42 + 16) = v46;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_18FBB7824();
  }
  v17 = *v6;
  sub_18FBCD850();
  sub_18FB7D954(v11, a2, a3, a4);
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  result = sub_18FBCD88C();
  a5 = result & ~(-1 << *(_BYTE *)(v17 + 32));
  v51 = v17 + 56;
  if (((*(_QWORD *)(v17 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) == 0)
  {
LABEL_21:
    v14 = v11;
    v15 = a2;
    v16 = a3;
    goto LABEL_22;
  }
  v47 = -1 << *(_BYTE *)(v17 + 32);
  v49 = v17;
  v18 = (uint64_t *)(*(_QWORD *)(v17 + 48) + 32 * a5);
  v20 = *v18;
  v19 = v18[1];
  v22 = v18[2];
  v21 = v18[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_18FB7D954(v20, v19, v22, v21);
  v25 = v24;
  v14 = v11;
  v26 = v11;
  v15 = a2;
  v27 = a2;
  v16 = a3;
  v50 = a4;
  if (v23 == sub_18FB7D954(v26, v27, a3, a4) && v25 == v28)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v30 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
  {
    do
    {
      a5 = (a5 + 1) & ~v47;
      a4 = v50;
      if (((*(_QWORD *)(v51 + ((a5 >> 3) & 0xFFFFFFFFFFFFF8)) >> a5) & 1) == 0)
        goto LABEL_22;
      v31 = (uint64_t *)(*(_QWORD *)(v49 + 48) + 32 * a5);
      v33 = *v31;
      v32 = v31[1];
      v35 = v31[2];
      v34 = v31[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = sub_18FB7D954(v33, v32, v35, v34);
      v38 = v37;
      if (v36 == sub_18FB7D954(v14, v15, a3, v50) && v38 == v39)
        goto LABEL_25;
      v41 = sub_18FBCD7C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v41 & 1) == 0);
  }
LABEL_26:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187E60);
  result = sub_18FBCD7FC();
  __break(1u);
  return result;
}

id sub_18FBB64AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188030);
  v2 = *v0;
  v3 = sub_18FBCD4E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_18FBB6640()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189A90);
  v2 = *v0;
  v3 = sub_18FBCD4E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_18FBB67E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE189AE0);
  v2 = *v0;
  v3 = sub_18FBCD4E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_18FBB6998()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_18FBCCE24();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187EE8);
  v6 = *v0;
  v7 = sub_18FBCD4E4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_18FBB6BBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187EF0);
  v2 = *v0;
  v3 = sub_18FBCD4E4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v20 = v17[2];
    v19 = v17[3];
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    v21[2] = v20;
    v21[3] = v19;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_18FBB6D7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188030);
  v3 = sub_18FBCD4F0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_32:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain_n();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_21;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_30;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v18 = v16 + 2;
        if (v18 >= v9)
        {
LABEL_30:
          result = swift_release_n();
          v1 = v27;
          goto LABEL_32;
        }
        v17 = *(_QWORD *)(v6 + 8 * v18);
        v12 = v18;
        if (!v17)
          break;
      }
    }
LABEL_20:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_18FBCD400();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_18FBB6FE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189A90);
  v3 = sub_18FBCD4F0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_18FBCD400();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18FBB7258()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE189AE0);
  v3 = sub_18FBCD4F0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_18FBCD850();
    swift_bridgeObjectRetain();
    sub_18FBCD130();
    result = sub_18FBCD88C();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_18FBB7504()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_18FBCCE24();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187EE8);
  v7 = sub_18FBCD4F0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_18FBB7AA4(&qword_1EE187DF0, MEMORY[0x1E0CB0018]);
    result = sub_18FBCD064();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_18FBB7824()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187EF0);
  v3 = sub_18FBCD4F0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = swift_release();
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v22 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v23 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_7;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v23)
      goto LABEL_23;
    v20 = *(_QWORD *)(v22 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v23)
        goto LABEL_23;
      v20 = *(_QWORD *)(v22 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v23)
          goto LABEL_23;
        v20 = *(_QWORD *)(v22 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_22:
    v7 = (v20 - 1) & v20;
    v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_7:
    v13 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 32 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = v13[2];
    v17 = v13[3];
    sub_18FBCD850();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FB7D954(v14, v15, v16, v17);
    sub_18FBCD130();
    swift_bridgeObjectRelease();
    sub_18FBCD88C();
    result = sub_18FBCD49C();
    *(_QWORD *)(v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 32 * result);
    *v18 = v14;
    v18[1] = v15;
    v18[2] = v16;
    v18[3] = v17;
    ++*(_QWORD *)(v4 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v23)
  {
LABEL_23:
    swift_release();
    v1 = v0;
    goto LABEL_24;
  }
  v20 = *(_QWORD *)(v22 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v23)
      goto LABEL_23;
    v20 = *(_QWORD *)(v22 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_18FBB7AA4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_18FBCCE24();
    result = MEMORY[0x19400954C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t IconSourcePredicate.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65746F6D6572;
  if (*v0 != 1)
    v1 = 7105633;
  if (*v0)
    return v1;
  else
    return 0x6C61636F6CLL;
}

BOOL static IconSourcePredicate.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t IconSourcePredicate.hash(into:)()
{
  return sub_18FBCD85C();
}

uint64_t IconSourcePredicate.hashValue.getter()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

unint64_t sub_18FBB7BB4()
{
  unint64_t result;

  result = qword_1EE18BBF0;
  if (!qword_1EE18BBF0)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for IconSourcePredicate, &type metadata for IconSourcePredicate);
    atomic_store(result, (unint64_t *)&qword_1EE18BBF0);
  }
  return result;
}

uint64_t sub_18FBB7BF8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65746F6D6572;
  if (*v0 != 1)
    v1 = 7105633;
  if (*v0)
    return v1;
  else
    return 0x6C61636F6CLL;
}

uint64_t storeEnumTagSinglePayload for IconSourcePredicate(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_18FBB7C90 + 4 * byte_18FBD87F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18FBB7CC4 + 4 * byte_18FBD87F0[v4]))();
}

uint64_t sub_18FBB7CC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBB7CCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FBB7CD4);
  return result;
}

uint64_t sub_18FBB7CE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FBB7CE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_18FBB7CEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBB7CF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IconSourcePredicate()
{
  return &type metadata for IconSourcePredicate;
}

uint64_t sub_18FBB7D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_18FBB7D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_18FBB7D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_18FBB7D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_18FBB7D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_18FBB7D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 48))(a1);
}

uint64_t sub_18FBB7DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t sub_18FBB7DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_18FBB7DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_18FBB7DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_18FBB7E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t sub_18FBB7E28@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;

  v11 = type metadata accessor for PrimitiveBox(0, a3, a4, a5);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v15 - v12;
  MEMORY[0x19400954C](&protocol conformance descriptor for PrimitiveBox<A>, v11);
  result = sub_18FB8E980(a1, a2, v11);
  if (!v6)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a6, v13, a3);
  return result;
}

uint64_t sub_18FBB7F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v27 = a4;
  v28 = a2;
  v29 = a3;
  v30 = a1;
  v25[1] = a6;
  v25[2] = a7;
  v8 = type metadata accessor for PrimitiveBox(0, a5, a6, a7);
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - v9;
  v11 = sub_18FBCD430();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v25 - v14;
  v16 = *(_QWORD *)(a5 - 8);
  v17 = MEMORY[0x1E0C80A78](v13);
  v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v25 - v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v27, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a5) == 1)
  {
    v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    MEMORY[0x1E0C80A78](v22);
    v23 = v29;
    v25[-2] = v28;
    v25[-1] = v23;
    return sub_18FBCCDDC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v15, a5);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, a5);
    PrimitiveBox.init(wrapped:)((uint64_t)v19, a5, (uint64_t)v10);
    MEMORY[0x19400954C](&protocol conformance descriptor for PrimitiveBox<A>, v8);
    sub_18FB8E54C(v28, v29);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, a5);
  }
}

uint64_t sub_18FBB8150(const char *a1)
{
  uint64_t v1;

  return sub_18FB8DFB4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

id RelevanceCacheEntry.key.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)v0;
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return v1;
  else
    return objc_msgSend(v1, "key");
}

unint64_t RelevanceCacheError.debugDescription.getter()
{
  uint64_t v0;
  unint64_t result;

  result = 0xD000000000000037;
  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
      return result;
    case 1:
      result = 0xD00000000000002ELL;
      break;
    case 2:
      result = 0xD000000000000029;
      break;
    case 3:
      result = 0xD000000000000042;
      break;
    case 4:
      result = 0xD000000000000015;
      break;
    default:
      sub_18FBCD52C();
      sub_18FBCD16C();
      sub_18FBCD16C();
      sub_18FBCD16C();
      result = 0;
      break;
  }
  return result;
}

id RelevanceCacheEntry.value.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return 0;
  v1 = *(id *)v0;
  v2 = *(id *)v0;
  return v1;
}

unint64_t destroy for RelevanceCacheError(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s14ChronoServices19RelevanceCacheErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for RelevanceCacheError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RelevanceCacheError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RelevanceCacheError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RelevanceCacheError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for RelevanceCacheError()
{
  return &type metadata for RelevanceCacheError;
}

uint64_t initializeBufferWithCopyOfBuffer for RelevanceCacheEntry(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

void destroy for RelevanceCacheEntry(id *a1)
{

}

uint64_t assignWithCopy for RelevanceCacheEntry(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for RelevanceCacheEntry(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for RelevanceCacheEntry(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RelevanceCacheEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_18FBB8660(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_18FBB8668(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RelevanceCacheEntry()
{
  return &type metadata for RelevanceCacheEntry;
}

uint64_t sub_18FBB8684(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  _QWORD *v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188038);
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v2 + 24) = v5;
  *(_QWORD *)(v2 + 32) = 0;
  v6 = objc_allocWithZone((Class)_CHSRelevanceCacheBuf);
  sub_18FB8409C(a1, a2);
  v7 = (void *)sub_18FBCCE60();
  v8 = objc_msgSend(v6, sel_initVerifiedRootObjectFromData_, v7);
  sub_18FB77A8C(a1, a2);

  if (v8)
  {
    *(_QWORD *)(v2 + 16) = v8;
    v9 = *(void **)(v2 + 32);
    *(_QWORD *)(v2 + 32) = 0;

    *(_QWORD *)(v2 + 40) = a1;
    *(_QWORD *)(v2 + 48) = a2;
  }
  else
  {
    sub_18FB7C5E4();
    swift_allocError();
    *v10 = 0;
    v10[1] = 0;
    swift_willThrow();
    sub_18FB77A8C(a1, a2);
    swift_release();

    type metadata accessor for RelevanceCacheReader();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

char *sub_18FBB87B0()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_deviceIdentifier);
  if (v2)
  {
    v3 = v2;
    v4 = sub_18FBCD0DC();
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = objc_msgSend(v1, sel_extensionBundleIdentifier);
  if (v7)
  {
    v8 = v7;
    v9 = sub_18FBCD0DC();
    v11 = v10;

    v12 = objc_msgSend(v1, sel_containerBundleIdentifier);
    if (v12)
    {
      v13 = v12;
      v14 = sub_18FBCD0DC();
      v16 = v15;

    }
    else
    {
      v14 = 0;
      v16 = 0;
    }
    if (v6)
      v18 = v4;
    else
      v18 = 0;
    v19 = (char *)objc_msgSend(objc_allocWithZone((Class)CHSExtensionIdentity), sel_init);
    v20 = (uint64_t *)&v19[OBJC_IVAR___CHSExtensionIdentity_extensionBundleIdentifier];
    swift_beginAccess();
    *v20 = v9;
    v20[1] = v11;
    v17 = v19;
    swift_bridgeObjectRelease();
    v21 = (uint64_t *)&v17[OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier];
    swift_beginAccess();
    *v21 = v14;
    v21[1] = v16;
    swift_bridgeObjectRelease();
    v22 = (uint64_t *)&v17[OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier];
    swift_beginAccess();
    *v22 = v18;
    v22[1] = v6;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v17;
}

uint64_t sub_18FBB8978(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(a1, sel_relevances);
  if (v3)
  {
    v4 = v3;
    sub_18FB1F254(0, &qword_1EE187FD0);
    v5 = sub_18FBCD28C();

  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  v6 = sub_18FBB8C88(v5, a2);
  swift_bridgeObjectRelease();
  swift_release();
  return v6;
}

id sub_18FBB8A28(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;

  if (!a1)
    return 0;
  v1 = a1;
  v2 = objc_msgSend(v1, sel_intentDataAsData);
  if (!v2)
  {
    v2 = objc_msgSend(v1, sel_partialIntentDataAsData);
    if (!v2)
    {
      v2 = objc_msgSend(v1, sel_schemaDataAsData);
      if (!v2)
      {

        return 0;
      }
    }
  }
  v3 = sub_18FBCCE78();
  v5 = v4;

  sub_18FB77A8C(v3, v5);
  v6 = objc_msgSend(v1, sel_stableHash);
  v7 = objc_msgSend(v1, sel_intentDataAsData);
  if (v7)
  {
    v8 = sub_18FBCCE78();
    v10 = v9;

    v7 = (id)sub_18FBCCE60();
    sub_18FB77A8C(v8, v10);
  }
  v11 = objc_msgSend(v1, sel_partialIntentDataAsData);
  if (v11)
  {
    v12 = sub_18FBCCE78();
    v14 = v13;

    v11 = (id)sub_18FBCCE60();
    sub_18FB77A8C(v12, v14);
  }
  v15 = objc_msgSend(v1, sel_schemaDataAsData);
  if (v15)
  {
    v16 = sub_18FBCCE78();
    v18 = v17;

    v15 = (id)sub_18FBCCE60();
    sub_18FB77A8C(v16, v18);
  }
  v19 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithIntentData_configData_schemaData_stableHash_, v7, v11, v15, v6);

  return v19;
}

uint64_t sub_18FBB8C2C()
{
  uint64_t v0;

  swift_release();
  sub_18FB77A8C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RelevanceCacheReader()
{
  return objc_opt_self();
}

uint64_t sub_18FBB8C88(unint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  void *v14;
  id v15;
  uint64_t v17;
  unint64_t v18;
  unint64_t v20;
  void *v21;
  uint64_t v22;

  v3 = v2;
  v4 = a1;
  v22 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_18FBCD628())
  {
    v20 = v4 & 0xC000000000000001;
    v6 = 4;
    v17 = v5;
    v18 = v4;
    while (1)
    {
      v7 = v20 ? (id)MEMORY[0x1940086C4](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, sel_attributeKey);
      if (v10)
      {
        v11 = v10;
        sub_18FBCD0DC();

        v12 = *(os_unfair_lock_s **)(a2 + 24);
        MEMORY[0x1E0C80A78]();
        swift_retain();
        os_unfair_lock_lock(v12 + 4);
        sub_18FB7C304((_QWORD *(*)(uint64_t *__return_ptr))sub_18FBB8F3C, &v21);
        v13 = v12 + 4;
        if (v3)
        {
          os_unfair_lock_unlock(v13);
          swift_bridgeObjectRelease();
          swift_release();

          v3 = 0;
          v5 = v17;
          v4 = v18;
        }
        else
        {
          os_unfair_lock_unlock(v13);
          v14 = v21;
          swift_bridgeObjectRelease();
          swift_release();
          sub_18FB1F254(0, (unint64_t *)&qword_1EE1898E8);
          v15 = sub_18FBB8A28(objc_msgSend(v8, sel_intentReference));
          objc_msgSend(objc_allocWithZone((Class)CHSWidgetRelevance), sel_initWithAttribute_intentReference_, v14, v15);

          MEMORY[0x1940083E8]();
          v5 = v17;
          if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_18FBCD2B0();
          sub_18FBCD2C8();
          sub_18FBCD2A4();
          v4 = v18;
        }
      }
      else
      {

      }
      ++v6;
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v22;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_18FBB8F3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_18FB7C2DC(v1[2], v1[3], v1[4], a1);
}

BOOL KeybagStateProvider.hasPasscodeSet.getter(uint64_t a1, uint64_t a2)
{
  uint64_t var1;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 24))(&var1);
  return var1 != 4;
}

uint64_t dispatch thunk of KeybagStateProvider.hasUnlockedSinceBootPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of KeybagStateProvider.lockStatePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of KeybagStateProvider.lockState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of KeybagStateProvider.hasUnlockedSinceBoot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of KeybagStateProvider.hasPasscodeSet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of KeybagStateProvider.update()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

id static ControlIconGenerator.appIconForControls(container:size:scale:)(double a1, double a2, double a3)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D3A830]), sel_initWithSize_scale_, a1, a2, a3);
  objc_msgSend(v3, sel_setShouldApplyMask_, 0);
  v4 = objc_allocWithZone(MEMORY[0x1E0D3A820]);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithBundleIdentifier_, v5);

  v7 = objc_msgSend(v6, sel_prepareImageForDescriptor_, v3);
  return v7;
}

ValueMetadata *type metadata accessor for ControlIconGenerator()
{
  return &type metadata for ControlIconGenerator;
}

uint64_t static DeviceScopedIdentity<>.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_18FBCD7C0();
}

uint64_t sub_18FBB90F0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 0;
  else
    return sub_18FBCD7C0();
}

uint64_t sub_18FBB9120(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v4 == v2 && v5 == v3)
    v7 = 1;
  else
    v7 = sub_18FBCD7C0() ^ 1;
  return v7 & 1;
}

uint64_t sub_18FBB915C(_QWORD *a1, _QWORD *a2)
{
  char v3;

  if (*a1 == *a2 && a1[1] == a2[1])
    v3 = 1;
  else
    v3 = sub_18FBCD7C0() ^ 1;
  return v3 & 1;
}

uint64_t sub_18FBB91A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (v4 == v2 && v5 == v3)
    return 0;
  else
    return sub_18FBCD7C0();
}

unint64_t sub_18FBB91CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE18BBF8;
  if (!qword_1EE18BBF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE18BC00);
    result = MEMORY[0x19400954C](&protocol conformance descriptor for DeviceScopedIdentity<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EE18BBF8);
  }
  return result;
}

id sub_18FBB9218()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CHSControlService), sel_init);
  qword_1EE189440 = (uint64_t)result;
  return result;
}

CHSControlService __swiftcall CHSControlService.init()()
{
  return (CHSControlService)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id static CHSControlService.shared.getter()
{
  if (qword_1EE189370 != -1)
    swift_once();
  return (id)qword_1EE189440;
}

id CHSControlService.init()()
{
  objc_super v1;

  v1.super_class = (Class)CHSControlService;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t sub_18FBB9410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 80) = a5;
  *(_QWORD *)(v6 + 88) = a6;
  return swift_task_switch();
}

uint64_t sub_18FBB9428()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);

  if (qword_1EE189B28 != -1)
    swift_once();
  swift_beginAccess();
  sub_18FB6E65C((uint64_t)&qword_1EE189B00, (uint64_t)(v0 + 2));
  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v5 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 72) + *(_QWORD *)(v2 + 72));
  v3 = (_QWORD *)swift_task_alloc();
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_18FBB94F4;
  return v5(v1, v2);
}

uint64_t sub_18FBB94F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 112) = a1;
  return swift_task_switch();
}

uint64_t sub_18FBB9568()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(void (**)(uint64_t, _QWORD))(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  v2(v1, 0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FBB95BC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, void *);
  id v3;

  v1 = *(void **)(v0 + 104);
  v2 = *(void (**)(_QWORD, void *))(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  v3 = v1;
  v2(0, v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FBB9620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_18FBCD304();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_18FBCD2F8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_18FBBA660(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_18FBCD2D4();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_18FBB9880(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    type metadata accessor for CHSControlConfiguration(0);
    v5 = (void *)sub_18FBCD040();
  }
  if (a2)
    v6 = sub_18FBCCD64();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t CHSControlService.fetchControlDescriptors(forExtensionBundleIdentifier:userInitiated:reason:completion:)(uint64_t a1, unint64_t a2, int a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v8 = v7;
  v34 = a6;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18BC08);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EE189820 != -1)
    swift_once();
  v35 = a3;
  v18 = sub_18FBCCF5C();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EE1927B8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v19 = sub_18FBCCF44();
  v20 = sub_18FBCD394();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v32 = v8;
    v22 = v21;
    v31 = swift_slowAlloc();
    v37 = v31;
    *(_DWORD *)v22 = 136446722;
    v33 = a4;
    swift_bridgeObjectRetain();
    v36 = sub_18FB6ECF4(a1, a2, &v37);
    sub_18FBCD454();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 1026;
    LODWORD(v36) = v35 & 1;
    sub_18FBCD454();
    *(_WORD *)(v22 + 18) = 2082;
    swift_bridgeObjectRetain();
    v36 = sub_18FB6ECF4(v33, a5, &v37);
    a4 = v33;
    sub_18FBCD454();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FB18000, v19, v20, "Fetching control descriptor for extension: %{public}s, userInitiated: %{BOOL,public}d reason: %{public}s", (uint8_t *)v22, 0x1Cu);
    v23 = v31;
    swift_arrayDestroy();
    MEMORY[0x19400960C](v23, -1, -1);
    v24 = v22;
    v8 = v32;
    MEMORY[0x19400960C](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v25 = v35;
  v26 = sub_18FBCD304();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v17, 1, 1, v26);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = 0;
  *(_QWORD *)(v27 + 24) = 0;
  *(_QWORD *)(v27 + 32) = v8;
  *(_QWORD *)(v27 + 40) = a1;
  *(_QWORD *)(v27 + 48) = a2;
  *(_BYTE *)(v27 + 56) = v25 & 1;
  *(_QWORD *)(v27 + 64) = a4;
  *(_QWORD *)(v27 + 72) = a5;
  *(_QWORD *)(v27 + 80) = v34;
  *(_QWORD *)(v27 + 88) = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v8;
  swift_retain();
  sub_18FBB9620((uint64_t)v17, (uint64_t)&unk_1EE18BC18, v27);
  return swift_release();
}

uint64_t sub_18FBB9C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 120) = v11;
  *(_OWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 88) = a6;
  *(_QWORD *)(v8 + 96) = a8;
  *(_BYTE *)(v8 + 152) = a7;
  *(_QWORD *)(v8 + 80) = a5;
  return swift_task_switch();
}

uint64_t sub_18FBB9C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1EE189B28 != -1)
    swift_once();
  swift_beginAccess();
  sub_18FB6E65C((uint64_t)&qword_1EE189B00, v0 + 16);
  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  v5 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v2 + 32)
                                                                                        + *(_QWORD *)(v2 + 32));
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v3;
  *v3 = v0;
  v3[1] = sub_18FBB9D4C;
  return v5(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(unsigned __int8 *)(v0 + 152), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), v1, v2);
}

uint64_t sub_18FBB9D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 144) = a1;
  return swift_task_switch();
}

uint64_t sub_18FBB9DC0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, _QWORD);

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(void (**)(uint64_t, _QWORD))(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  v2(v1, 0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18FBB9E14()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, void *);
  id v3;

  v1 = *(void **)(v0 + 136);
  v2 = *(void (**)(_QWORD, void *))(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  v3 = v1;
  v2(0, v1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_18FBB9F48(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    sub_18FB1F254(0, &qword_1EE1897F0);
    v5 = (void *)sub_18FBCD280();
  }
  if (a2)
    v6 = sub_18FBCCD64();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t sub_18FBB9FDC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_18FBBA040;
  return v6(a1);
}

uint64_t sub_18FBBA040()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void *sub_18FBBA08C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_18FBCD670();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_18FBBA120(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_18FBBA144@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t _sSo17CHSControlServiceC14ChronoServicesE14reloadControls12forExtension4kind6reasonySS_SSSgSStF_0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t type;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  uint64_t v28;
  uint64_t v29;

  if (qword_1EE189820 != -1)
    swift_once();
  v12 = sub_18FBCCF5C();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EE1927B8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v13 = sub_18FBCCF44();
  v14 = sub_18FBCD394();
  v25 = a1;
  v26 = a3;
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v27[0] = v24;
    *(_DWORD *)v15 = 136446722;
    type = v14;
    swift_bridgeObjectRetain();
    sub_18FB6ECF4(a1, a2, v27);
    sub_18FBCD454();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2082;
    if (a4)
      v16 = a3;
    else
      v16 = 7104878;
    v17 = a6;
    v18 = a5;
    if (a4)
      v19 = a4;
    else
      v19 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_18FB6ECF4(v16, v19, v27);
    sub_18FBCD454();
    swift_bridgeObjectRelease_n();
    a5 = v18;
    a6 = v17;
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2082;
    swift_bridgeObjectRetain();
    sub_18FB6ECF4(a5, v17, v27);
    sub_18FBCD454();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_18FB18000, v13, type, "Reloading control for extension: %{public}s kind: %{public}s reason: %{public}s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x19400960C](v24, -1, -1);
    MEMORY[0x19400960C](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (qword_1EE189B28 != -1)
    swift_once();
  swift_beginAccess();
  sub_18FB6E65C((uint64_t)&qword_1EE189B00, (uint64_t)v27);
  v20 = v28;
  v21 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  (*(void (**)(uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v21 + 24))(v25, a2, v26, a4, a5, a6, v20, v21);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
}

uint64_t sub_18FBBA4A8()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FBBA4EC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v8;

  v8 = *(_OWORD *)(v0 + 40);
  v2 = *(_BYTE *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_18FB77DC8;
  *(_QWORD *)(v5 + 120) = v4;
  *(_OWORD *)(v5 + 104) = v6;
  *(_QWORD *)(v5 + 96) = v3;
  *(_BYTE *)(v5 + 152) = v2;
  *(_OWORD *)(v5 + 80) = v8;
  return swift_task_switch();
}

uint64_t type metadata accessor for CHSControlService(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE18BC20);
}

uint64_t sub_18FBBA598()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_18FBBA5BC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_18FBB9F48(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_18FBBA5C4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_18FBB9880(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_18FBBA5CC()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FBBA600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_18FB78030;
  *(_OWORD *)(v2 + 80) = v3;
  return swift_task_switch();
}

uint64_t sub_18FBBA660(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18BC08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_18FBBA6A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18FBBA6C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_18FB77DC8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE18BC38 + dword_1EE18BC38))(a1, v4);
}

uint64_t ConcreteFileManagerFactory.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ConcreteFileManagerFactory.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t ConcreteFileManagerFactory.defaultFileManager.getter@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v3 = type metadata accessor for ConcreteFileManagerPrimitives();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for ConcreteFileManagerPrimitives;
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for ConcreteFileManagerPrimitives()
{
  return objc_opt_self();
}

uint64_t ConcreteFileManagerFactory.makeFileManager()@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3620]), sel_init);
  v3 = type metadata accessor for ConcreteFileManagerPrimitives();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for ConcreteFileManagerPrimitives;
  *a1 = result;
  return result;
}

uint64_t ConcreteFileManagerPrimitives.__allocating_init()()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3620]), sel_init);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  return result;
}

uint64_t ConcreteFileManagerFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ConcreteFileManagerFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_18FBBA8A8@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v3 = type metadata accessor for ConcreteFileManagerPrimitives();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for ConcreteFileManagerPrimitives;
  *a1 = result;
  return result;
}

uint64_t sub_18FBBA918@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3620]), sel_init);
  v3 = type metadata accessor for ConcreteFileManagerPrimitives();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  a1[3] = v3;
  a1[4] = (uint64_t)&protocol witness table for ConcreteFileManagerPrimitives;
  *a1 = result;
  return result;
}

Swift::Bool __swiftcall ConcreteFileManagerPrimitives.fileExists(atPath:)(Swift::String atPath)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v2 = *(void **)(v1 + 16);
  v3 = (void *)sub_18FBCD0B8();
  LOBYTE(v2) = objc_msgSend(v2, sel_fileExistsAtPath_, v3);

  return (char)v2;
}

id ConcreteFileManagerPrimitives.fileExists(atPath:isDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;

  v5 = *(void **)(v3 + 16);
  v6 = (void *)sub_18FBCD0B8();
  v7 = objc_msgSend(v5, sel_fileExistsAtPath_isDirectory_, v6, a3);

  return v7;
}

_QWORD *ConcreteFileManagerPrimitives.contentsOfDirectory(atPath:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void **v8;
  void *v9;
  void *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  id v15;
  id v17[2];
  _QWORD *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_18FBCD0B8();
  v17[0] = 0;
  v3 = objc_msgSend(v1, sel_contentsOfDirectoryAtPath_error_, v2, v17);

  v4 = v17[0];
  if (v3)
  {
    v5 = sub_18FBCD28C();
    v6 = v4;

    v7 = *(_QWORD *)(v5 + 16);
    if (v7)
    {
      sub_18FB836E0();
      v8 = (void **)(v5 + 40);
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v9 = *(v8 - 1);
        v10 = *v8;
        v17[0] = v9;
        v17[1] = v10;
        swift_bridgeObjectRetain();
        if ((sub_18FBCD46C() & 1) != 0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v18 = v4;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_18FB7F058(0, v4[2] + 1, 1);
            v4 = v18;
          }
          v13 = v4[2];
          v12 = v4[3];
          if (v13 >= v12 >> 1)
          {
            sub_18FB7F058((char *)(v12 > 1), v13 + 1, 1);
            v4 = v18;
          }
          v4[2] = v13 + 1;
          v14 = &v4[2 * v13];
          v14[4] = v9;
          v14[5] = v10;
        }
        v8 += 2;
        --v7;
      }
      while (v7);
    }
    else
    {
      v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = v17[0];
    sub_18FBCCD70();

    swift_willThrow();
  }
  return v4;
}

uint64_t ConcreteFileManagerPrimitives.setExtendedAttribute<A>(at:key:value:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_18FBBB1BC(a1, a2, a3, a4, a5, a6);
}

uint64_t ConcreteFileManagerPrimitives.extendedAttribute<A>(at:key:of:)@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v7 = *a1;
  v8 = a1[1];
  v9 = sub_18FBCD430();
  v14 = a2;
  v10 = MEMORY[0x19400954C](MEMORY[0x1E0DEE9A0], v9, &v14);
  v13 = a3;
  v11 = MEMORY[0x19400954C](MEMORY[0x1E0DEE988], v9, &v13);
  return sub_18FBB7E28(v7, v8, v9, v10, v11, a4);
}

id ConcreteFileManagerPrimitives.moveItem(at:to:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_18FBCCD94();
  v3 = (void *)sub_18FBCCD94();
  v7[0] = 0;
  v4 = objc_msgSend(v1, sel_moveItemAtURL_toURL_error_, v2, v3, v7);

  if (v4)
    return v7[0];
  v6 = v7[0];
  sub_18FBCCD70();

  return (id)swift_willThrow();
}

id ConcreteFileManagerPrimitives.removeItem(at:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v4;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_18FBCCD94();
  v5[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_removeItemAtURL_error_, v2, v5);

  if ((_DWORD)v1)
    return v5[0];
  v4 = v5[0];
  sub_18FBCCD70();

  return (id)swift_willThrow();
}

uint64_t ConcreteFileManagerPrimitives.replaceItemAt(_:withItemAt:backupItemName:options:)()
{
  return sub_18FBCD364();
}

id ConcreteFileManagerPrimitives.createDirectory(at:withIntermediateDirectories:attributes:)(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  void *v6;
  void *v7;
  unsigned int v8;
  id v10;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = *(void **)(v3 + 16);
  v7 = (void *)sub_18FBCCD94();
  if (a3)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_18FBBB1E8();
    a3 = (void *)sub_18FBCD040();
  }
  v11[0] = 0;
  v8 = objc_msgSend(v6, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, a2 & 1, a3, v11);

  if (v8)
    return v11[0];
  v10 = v11[0];
  sub_18FBCCD70();

  return (id)swift_willThrow();
}

uint64_t ConcreteFileManagerPrimitives.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ConcreteFileManagerPrimitives.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id sub_18FBBB044()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  v2 = (void *)sub_18FBCD0B8();
  v3 = objc_msgSend(v1, sel_fileExistsAtPath_, v2);

  return v3;
}

id sub_18FBBB08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;

  v5 = *(void **)(*(_QWORD *)v3 + 16);
  v6 = (void *)sub_18FBCD0B8();
  v7 = objc_msgSend(v5, sel_fileExistsAtPath_isDirectory_, v6, a3);

  return v7;
}

_QWORD *sub_18FBBB0E4()
{
  return ConcreteFileManagerPrimitives.contentsOfDirectory(atPath:)();
}

uint64_t sub_18FBBB104(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_18FBBB1BC(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_18FBBB118@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  return ConcreteFileManagerPrimitives.extendedAttribute<A>(at:key:of:)(a1, a2, a3, a4);
}

id sub_18FBBB138()
{
  return ConcreteFileManagerPrimitives.moveItem(at:to:)();
}

id sub_18FBBB158()
{
  return ConcreteFileManagerPrimitives.removeItem(at:)();
}

uint64_t sub_18FBBB178()
{
  return sub_18FBCD364();
}

id sub_18FBBB19C(uint64_t a1, char a2, void *a3)
{
  return ConcreteFileManagerPrimitives.createDirectory(at:withIntermediateDirectories:attributes:)(a1, a2, a3);
}

uint64_t sub_18FBBB1BC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_18FBB7F0C(a1, *a2, a2[1], a3, a4, a5, a6);
}

unint64_t sub_18FBBB1E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE18ADB8;
  if (!qword_1EE18ADB8)
  {
    type metadata accessor for FileAttributeKey(255);
    result = MEMORY[0x19400954C](&unk_18FBD5A3C, v1);
    atomic_store(result, (unint64_t *)&qword_1EE18ADB8);
  }
  return result;
}

uint64_t type metadata accessor for ConcreteFileManagerFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConcreteFileManagerFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConcreteFileManagerFactory.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t method lookup function for ConcreteFileManagerPrimitives()
{
  return swift_lookUpClassMethod();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> SandboxExtension.consume()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v1 = v0;
  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    sub_18FBCD100();
    v2 = sandbox_extension_consume();
    v3 = swift_release();
    if (v2 < 0)
    {
      v12 = MEMORY[0x194008100](v3);
      v13 = MEMORY[0x194008100]();
      if (strerror(v13))
      {
        v14 = sub_18FBCD0AC();
        v16 = v15;
        sub_18FBBB4D0();
        swift_allocError();
        *v17 = v12;
        v17[1] = v14;
        v17[2] = v16;
        swift_willThrow();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      *(_QWORD *)(v1 + 32) = v2;
      *(_BYTE *)(v1 + 40) = 0;
    }
  }
  else
  {
    if (qword_1EE18AC50 != -1)
      swift_once();
    v4 = sub_18FBCCF5C();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EE192818);
    swift_retain_n();
    v5 = sub_18FBCCF44();
    v6 = sub_18FBCD370();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v18 = v8;
      *(_DWORD *)v7 = 136315138;
      swift_retain();
      v9 = SandboxExtension.description.getter();
      v11 = v10;
      swift_release();
      sub_18FB6ECF4(v9, v11, &v18);
      sub_18FBCD454();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18FB18000, v5, v6, "SandboxExtension already consumed: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v8, -1, -1);
      MEMORY[0x19400960C](v7, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

unint64_t sub_18FBBB4D0()
{
  unint64_t result;

  result = qword_1EE189320;
  if (!qword_1EE189320)
  {
    result = MEMORY[0x19400954C](&unk_18FBD8DE0, &type metadata for SandboxError);
    atomic_store(result, (unint64_t *)&qword_1EE189320);
  }
  return result;
}

uint64_t SandboxExtension.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_18FBBB540()
{
  sub_18FBCD850();
  sub_18FBCD130();
  return sub_18FBCD88C();
}

uint64_t sub_18FBBB58C()
{
  return sub_18FBCD130();
}

uint64_t sub_18FBBB5A0()
{
  sub_18FBCD850();
  sub_18FBCD130();
  return sub_18FBCD88C();
}

uint64_t sub_18FBBB5E8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_18FBCD688();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_18FBBB638(_QWORD *a1@<X8>)
{
  *a1 = 0x6E656B6F74;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_18FBBB650()
{
  return 0x6E656B6F74;
}

uint64_t sub_18FBBB664@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_18FBCD688();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_18FBBB6B8()
{
  sub_18FBBBEE0();
  return sub_18FBCD8BC();
}

uint64_t sub_18FBBB6E0()
{
  sub_18FBBBEE0();
  return sub_18FBCD8C8();
}

uint64_t SandboxExtension.__allocating_init(token:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = 0;
  *(_BYTE *)(result + 40) = 1;
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t SandboxExtension.init(token:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a2;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 40) = 1;
  *(_QWORD *)(v2 + 16) = a1;
  return v2;
}

uint64_t SandboxExtension.deinit()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 40) & 1) == 0)
    sandbox_extension_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SandboxExtension.__deallocating_deinit()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 40) & 1) == 0)
    sandbox_extension_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

char *static SandboxExtension.issue(url:readonly:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  char *result;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  v1 = v0;
  sub_18FBCCDF4();
  sub_18FBCD100();
  swift_bridgeObjectRelease();
  v2 = (void *)sandbox_extension_issue_file();
  v3 = swift_release();
  if (v2)
  {
    v4 = sub_18FBCD0AC();
    if (v5)
    {
      v6 = v4;
      v7 = v5;
      v1 = swift_allocObject();
      *(_QWORD *)(v1 + 24) = v7;
      *(_QWORD *)(v1 + 32) = 0;
      *(_BYTE *)(v1 + 40) = 1;
      *(_QWORD *)(v1 + 16) = v6;
    }
    else
    {
      sub_18FBBB4D0();
      swift_allocError();
      *v14 = 0;
      v14[1] = 0;
      v14[2] = 1;
      swift_willThrow();
    }
    free(v2);
    return (char *)v1;
  }
  v8 = MEMORY[0x194008100](v3);
  v9 = MEMORY[0x194008100]();
  result = strerror(v9);
  if (result)
  {
    v11 = sub_18FBCD0AC();
    v1 = v12;
    sub_18FBBB4D0();
    swift_allocError();
    *v13 = v8;
    v13[1] = v11;
    v13[2] = v1;
    swift_willThrow();
    return (char *)v1;
  }
  __break(1u);
  return result;
}

unint64_t SandboxExtension.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_18FBCD52C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v0 = sub_18FBBBE58(16);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  swift_bridgeObjectRelease();
  MEMORY[0x194008280](v0, v2, v4, v6);
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  sub_18FBCD7A8();
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  sub_18FBCD16C();
  return 0xD000000000000018;
}

uint64_t SandboxExtension.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188078);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBBBEE0();
  sub_18FBCD8B0();
  sub_18FBCD748();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t SandboxExtension.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  SandboxExtension.init(from:)(a1);
  return v2;
}

uint64_t SandboxExtension.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189708);
  v5 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBBBEE0();
  sub_18FBCD8A4();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v14;
    v10 = sub_18FBCD6C4();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v8);
    *(_QWORD *)(v3 + 16) = v10;
    *(_QWORD *)(v3 + 24) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v3;
}

uint64_t sub_18FBBBCFC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = SandboxExtension.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_18FBBBD50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188078);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBBBEE0();
  sub_18FBCD8B0();
  sub_18FBCD748();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_18FBBBE38()
{
  return SandboxExtension.description.getter();
}

uint64_t sub_18FBBBE58(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_18FBCD154();
    return sub_18FBCD1F0();
  }
  return result;
}

unint64_t sub_18FBBBEE0()
{
  unint64_t result;

  result = qword_1EE189978;
  if (!qword_1EE189978)
  {
    result = MEMORY[0x19400954C](&unk_18FBD8D90, &type metadata for SandboxExtension.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE189978);
  }
  return result;
}

uint64_t type metadata accessor for SandboxExtension()
{
  return objc_opt_self();
}

uint64_t method lookup function for SandboxExtension()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SandboxExtension.__allocating_init(token:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SandboxExtension.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t storeEnumTagSinglePayload for SandboxExtension.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_18FBBBFB0 + 4 * byte_18FBD8BB0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_18FBBBFD0 + 4 * byte_18FBD8BB5[v4]))();
}

_BYTE *sub_18FBBBFB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_18FBBBFD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FBBBFD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FBBBFE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_18FBBBFE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_18FBBBFF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtension.CodingKeys()
{
  return &type metadata for SandboxExtension.CodingKeys;
}

unint64_t destroy for SandboxError(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 16);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s14ChronoServices12SandboxErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 16);
  if ((int)v4 - 1 < 0)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for SandboxError(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  __int128 v8;

  LODWORD(v4) = -1;
  if (*(_QWORD *)(a1 + 16) >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = *(_QWORD *)(a1 + 16);
  v6 = v5 - 1;
  if (*((_QWORD *)a2 + 2) < 0xFFFFFFFFuLL)
    v4 = *((_QWORD *)a2 + 2);
  v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    v8 = *a2;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for SandboxError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = *(_QWORD *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = *(_QWORD *)(a2 + 16);
    if ((int)v7 - 1 < 0)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SandboxError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 1;
  if (v5 >= 3)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SandboxError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 2;
  }
  return result;
}

uint64_t sub_18FBBC288(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_18FBBC2AC(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[2] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxError()
{
  return &type metadata for SandboxError;
}

unint64_t sub_18FBBC2F0()
{
  unint64_t result;

  result = qword_1EE18BC48;
  if (!qword_1EE18BC48)
  {
    result = MEMORY[0x19400954C](&unk_18FBD8D68, &type metadata for SandboxExtension.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18BC48);
  }
  return result;
}

unint64_t sub_18FBBC338()
{
  unint64_t result;

  result = qword_1EE189988;
  if (!qword_1EE189988)
  {
    result = MEMORY[0x19400954C](&unk_18FBD8CA0, &type metadata for SandboxExtension.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE189988);
  }
  return result;
}

unint64_t sub_18FBBC380()
{
  unint64_t result;

  result = qword_1EE189980;
  if (!qword_1EE189980)
  {
    result = MEMORY[0x19400954C](&unk_18FBD8CC8, &type metadata for SandboxExtension.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE189980);
  }
  return result;
}

uint64_t sub_18FBBC3C4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_18FB7F0AC(0, v1, 0);
    v2 = v13;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v8 = *(v4 - 1);
      v7 = *v4;
      v9 = *(_QWORD *)(v13 + 16);
      v10 = *(_QWORD *)(v13 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
        sub_18FB7F0AC((_QWORD *)(v10 > 1), v9 + 1, 1);
      v4 += 6;
      *(_QWORD *)(v13 + 16) = v9 + 1;
      v11 = (_QWORD *)(v13 + 32 * v9);
      v11[4] = v5;
      v11[5] = v6;
      v11[6] = v8;
      v11[7] = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t IconStore.__allocating_init(fileManagerFactory:imageIOPrimitives:iconsFolderURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = __swift_mutable_project_boxed_opaque_existential_1(a2, v10);
  v13 = sub_18FBC587C(v9, v12, a3, v3, v7, v10, v8, v11);
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v13;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t IconStore.init(fileManagerFactory:imageIOPrimitives:iconsFolderURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = v3;
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = __swift_mutable_project_boxed_opaque_existential_1(a1, v8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  v14 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 32);
  v16 = __swift_mutable_project_boxed_opaque_existential_1(a2, v14);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  v20 = sub_18FBC5564((uint64_t)v12, (uint64_t)v18, a3, v4, v8, v14, v9, v15);
  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v20;
}

uint64_t IconStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  v1 = v0 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  v2 = sub_18FBCCE24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t IconStore.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  v1 = v0 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  v2 = sub_18FBCCE24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_18FBBC778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if ((MEMORY[0x194007F44]() & 1) == 0
    || (MEMORY[0x194007F44](a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) == 0)
  {
    return 0;
  }
  v6 = *(int *)(a3 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1])
    return 1;
  else
    return sub_18FBCD7C0();
}

uint64_t sub_18FBBC804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  void (**v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD v113[2];
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t *v117;
  uint64_t v118;
  __int128 v119;
  void (**v120)(char *, uint64_t, uint64_t);
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  int v126;
  os_log_t v127;
  uint64_t v128;
  void (**v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t updated;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t *v137;
  char *v138;
  uint64_t v139;
  void (*v140)(char *, _QWORD, uint64_t);
  unsigned int v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187E98);
  MEMORY[0x1E0C80A78](v3);
  v134 = (uint64_t)v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187E80);
  v6 = MEMORY[0x1E0C80A78](v5);
  v115 = (uint64_t)v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v130 = (uint64_t)v113 - v8;
  v135 = type metadata accessor for IconStore.FileRenameMigration(0);
  v9 = *(_QWORD *)(v135 - 8);
  v10 = MEMORY[0x1E0C80A78](v135);
  v114 = (uint64_t)v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v125 = (uint64_t)v113 - v13;
  MEMORY[0x1E0C80A78](v12);
  v124 = (char *)v113 - v14;
  v123 = sub_18FBCCF38();
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v121 = (char *)v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for IconStore.FileVersionUpdateMigration(0);
  v16 = MEMORY[0x1E0C80A78](updated);
  v132 = (uint64_t)v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v131 = (char *)v113 - v18;
  v144 = sub_18FBCCD7C();
  v19 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v143 = (char *)v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_18FBCCE24();
  v22 = MEMORY[0x1E0C80A78](v21);
  v138 = (char *)v113 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v139 = (uint64_t)v113 - v25;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)v113 - v27;
  v163 = MEMORY[0x1E0DEE9E0];
  v164 = MEMORY[0x1E0DEE9E0];
  v161 = MEMORY[0x1E0DEE9E8];
  v162 = MEMORY[0x1E0DEE9E8];
  v29 = *(_QWORD *)(a1 + 16);
  if (!v29)
  {
    v111 = MEMORY[0x1E0DEE9E0];
    goto LABEL_32;
  }
  v128 = v9;
  v147 = v1 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  v141 = *MEMORY[0x1E0CAFD78];
  v140 = *(void (**)(char *, _QWORD, uint64_t))(v19 + 104);
  v129 = (void (**)(char *, char *, uint64_t))(v26 + 16);
  v142 = v26;
  v120 = (void (**)(char *, uint64_t, uint64_t))(v26 + 32);
  v117 = &v154;
  swift_bridgeObjectRetain();
  v113[1] = a1;
  v30 = (unint64_t *)(a1 + 40);
  *(_QWORD *)&v31 = 136446210;
  v119 = v31;
  v118 = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v31 = 136446466;
  v116 = v31;
  v136 = v19;
  v146 = v21;
  v149 = v28;
  do
  {
    v152 = v29;
    v39 = *(v30 - 1);
    v38 = *v30;
    v155 = v39;
    v156 = v38;
    v40 = v143;
    v41 = v144;
    v140(v143, v141, v144);
    sub_18FB836E0();
    swift_bridgeObjectRetain();
    sub_18FBCCE18();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v40, v41);
    sub_18FBBD76C((uint64_t)&v155);
    v42 = v156;
    if (v156)
    {
      v43 = v155;
      v45 = v157;
      v44 = v158;
      v46 = v160;
      v148 = v159;
      v47 = v161;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v48 = sub_18FB87764(v43, v42, v45, v44, v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v150 = v45;
      v151 = v43;
      if ((v48 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_18FBB480C(&v155, v43, v42, v45, v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v46)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_18FB7D954(v43, v42, v45, v44);
          v145 = v46;
          v67 = v121;
          sub_18FBCCF2C();
          v137 = v30;
          v68 = v139;
          sub_18FBCCDA0();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v122 + 8))(v67, v123);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v69 = *v129;
          v70 = (uint64_t)v124;
          v71 = v45;
          v72 = v146;
          (*v129)(v124, v149, v146);
          v73 = v135;
          v69((char *)(v70 + *(int *)(v135 + 20)), (char *)v68, v72);
          v74 = (uint64_t *)(v70 + *(int *)(v73 + 24));
          *v74 = v39;
          v74[1] = v38;
          v75 = v125;
          sub_18FB826C8(v70, v125, type metadata accessor for IconStore.FileRenameMigration);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v76 = v164;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v155 = v76;
          sub_18FBAC0B4(v75, v151, v42, v71, v44, isUniquelyReferenced_nonNull_native);
          v164 = v155;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v78 = v120;
          v79 = v68;
          v30 = v137;
          v80 = v145;
        }
        else
        {
          swift_bridgeObjectRelease();
          v80 = 0;
          v78 = (void (**)(char *, uint64_t, uint64_t))v129;
          v79 = (uint64_t)v149;
          v72 = v146;
        }
        v81 = (uint64_t)v131;
        (*v78)(v131, v79, v72);
        v82 = (_QWORD *)(v81 + *(int *)(updated + 20));
        *v82 = v148;
        v82[1] = v80;
        v83 = v132;
        sub_18FB82684(v81, v132, type metadata accessor for IconStore.FileVersionUpdateMigration);
        swift_bridgeObjectRetain();
        v84 = v163;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v85 = swift_isUniquelyReferenced_nonNull_native();
        v155 = v84;
        v86 = v151;
        sub_18FBAC07C(v83, v151, v42, v150, v44, v85);
        v163 = v155;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_18FBC618C(v86, v42);
        sub_18FBC6150(v81, type metadata accessor for IconStore.FileVersionUpdateMigration);
        v28 = v149;
        (*(void (**)(char *, uint64_t))(v142 + 8))(v149, v72);
        v19 = v136;
        v33 = v152;
        goto LABEL_5;
      }
      v145 = v46;
      swift_bridgeObjectRelease();
      v154 = MEMORY[0x1E0DEE9E8];
      v49 = v142;
      v50 = *(void (**)(char *, char *, uint64_t))(v142 + 16);
      v51 = v138;
      v52 = v146;
      v50(v138, v149, v146);
      swift_beginAccess();
      v53 = v139;
      sub_18FBB45B8(v139, v51);
      swift_endAccess();
      v137 = *(unint64_t **)(v49 + 8);
      ((void (*)(uint64_t, uint64_t))v137)(v53, v52);
      v54 = v164;
      if (*(_QWORD *)(v164 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55 = v150;
        v56 = sub_18FB7F9FC(v151, v42, v150, v44);
        if ((v57 & 1) != 0)
        {
          v58 = v128;
          v59 = *(_QWORD *)(v54 + 56) + *(_QWORD *)(v128 + 72) * v56;
          v60 = v130;
          sub_18FB82684(v59, v130, type metadata accessor for IconStore.FileRenameMigration);
          v61 = 0;
        }
        else
        {
          v61 = 1;
          v60 = v130;
          v58 = v128;
        }
        v87 = v135;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v60, v61, 1, v135);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v60, 1, v87) != 1)
        {
          v89 = v60;
          v90 = v114;
          sub_18FB826C8(v89, v114, type metadata accessor for IconStore.FileRenameMigration);
          v91 = v138;
          v50(v138, (char *)v90, v52);
          swift_beginAccess();
          v92 = v139;
          v93 = v91;
          v55 = v150;
          sub_18FBB45B8(v139, v93);
          swift_endAccess();
          ((void (*)(uint64_t, uint64_t))v137)(v92, v52);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v94 = v115;
          v88 = v151;
          sub_18FBA2AF8(v151, v42, v55, v44, v115);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_18FBC61C8(v94, &qword_1EE187E80);
          sub_18FBC6150(v90, type metadata accessor for IconStore.FileRenameMigration);
          goto LABEL_24;
        }
      }
      else
      {
        v60 = v130;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v128 + 56))(v130, 1, 1, v135);
        v55 = v150;
      }
      sub_18FBC61C8(v60, &qword_1EE187E80);
      v88 = v151;
LABEL_24:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v95 = v134;
      sub_18FBA2AE4(v88, v42, v55, v44, v134);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18FBC61C8(v95, (uint64_t *)&unk_1EE187E98);
      if (qword_1EE187EA8 != -1)
        swift_once();
      v96 = sub_18FBCCF5C();
      __swift_project_value_buffer(v96, (uint64_t)qword_1EE192760);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v97 = sub_18FBCCF44();
      v98 = sub_18FBCD394();
      v99 = v98;
      if (os_log_type_enabled(v97, v98))
      {
        v100 = swift_slowAlloc();
        v145 = swift_slowAlloc();
        v155 = v145;
        *(_DWORD *)v100 = v116;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v101 = sub_18FBA51C0(v88, v42, v55, v44);
        v127 = v97;
        v102 = v88;
        v103 = v101;
        v126 = v99;
        v105 = v104;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v153 = sub_18FB6ECF4(v103, v105, &v155);
        v52 = v146;
        sub_18FBCD454();
        swift_bridgeObjectRelease();
        sub_18FBC618C(v102, v42);
        sub_18FBC618C(v102, v42);
        *(_WORD *)(v100 + 12) = 2082;
        sub_18FB203A8(&qword_1EE187DF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
        swift_bridgeObjectRetain();
        v106 = sub_18FBCD328();
        v108 = v107;
        swift_bridgeObjectRelease();
        v153 = sub_18FB6ECF4(v106, v108, &v155);
        sub_18FBCD454();
        swift_bridgeObjectRelease();
        v97 = v127;
        _os_log_impl(&dword_18FB18000, v127, (os_log_type_t)v126, "Removing duplicate icons for identity: %{public}s: %{public}s", (uint8_t *)v100, 0x16u);
        v109 = v145;
        swift_arrayDestroy();
        MEMORY[0x19400960C](v109, -1, -1);
        MEMORY[0x19400960C](v100, -1, -1);
      }
      else
      {
        sub_18FBC618C(v88, v42);
        sub_18FBC618C(v88, v42);
      }

      v19 = v136;
      v28 = v149;
      v33 = v152;
      v110 = swift_bridgeObjectRetain();
      sub_18FBBDAA8(v110);
      ((void (*)(char *, uint64_t))v137)(v28, v52);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if (qword_1EE187EA8 != -1)
      swift_once();
    v62 = sub_18FBCCF5C();
    __swift_project_value_buffer(v62, (uint64_t)qword_1EE192760);
    swift_bridgeObjectRetain();
    v63 = sub_18FBCCF44();
    v64 = sub_18FBCD37C();
    if (os_log_type_enabled(v63, v64))
    {
      v65 = swift_slowAlloc();
      v66 = swift_slowAlloc();
      v155 = v66;
      *(_DWORD *)v65 = v119;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v65 + 4) = sub_18FB6ECF4(v39, v38, &v155);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_18FB18000, v63, v64, "Failed to parse icon info from: %{public}s", (uint8_t *)v65, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v66, -1, -1);
      MEMORY[0x19400960C](v65, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v32 = v146;
    v33 = v152;
    v34 = v142;
    v35 = v138;
    (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v138, v28, v146);
    v36 = v139;
    sub_18FBB45B8(v139, v35);
    v37 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v37(v36, v32);
    v37((uint64_t)v28, v32);
LABEL_5:
    v30 += 2;
    v29 = v33 - 1;
  }
  while (v29);
  swift_bridgeObjectRelease();
  v111 = v164;
LABEL_32:
  swift_bridgeObjectRelease();
  return v111;
}

uint64_t sub_18FBBD76C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];

  v2 = sub_18FBCCF38();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[0] = 46;
  v39[1] = 0xE100000000000000;
  sub_18FBCCF2C();
  sub_18FBCCF20();
  v7 = v6;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!v7)
    goto LABEL_18;
  sub_18FBCD16C();
  swift_bridgeObjectRelease();
  if ((sub_18FBCD1C0() & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return result;
  }
  v9 = sub_18FBCD13C();
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(0, v9))
  {
    __break(1u);
    goto LABEL_16;
  }
  sub_18FBCD160();
  swift_bridgeObjectRetain();
  v10 = sub_18FBCD1F0();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  v17 = MEMORY[0x194008280](v10, v12, v14, v16);
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  result = (uint64_t)Token.init(rawValue:)(v20).storage._rawValue;
  v21 = *(_QWORD *)(v39[0] + 16);
  if (v21 == 1)
  {
    v22 = *(_QWORD *)(v39[0] + 32);
    v23 = *(_QWORD *)(v39[0] + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v24 = 0;
    v25 = 0;
  }
  else
  {
    if (v21 != 2)
    {
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return result;
    }
    v24 = *(_QWORD *)(v39[0] + 32);
    v25 = *(_QWORD *)(v39[0] + 40);
    v22 = *(_QWORD *)(v39[0] + 48);
    v23 = *(_QWORD *)(v39[0] + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FB7D954(v22, v23, v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = sub_18FBCD13C();
  result = swift_bridgeObjectRelease();
  if (__OFADD__(v26, 2))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v27 = sub_18FBCD154();
  if ((v28 & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v36 = 0;
    v38 = 0;
  }
  else
  {
    v29 = sub_18FBC5518(v27, v17, (unint64_t)v19);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    swift_bridgeObjectRelease();
    v36 = MEMORY[0x194008280](v29, v31, v33, v35);
    v38 = v37;
    result = swift_bridgeObjectRelease();
  }
  *(_QWORD *)a1 = v22;
  *(_QWORD *)(a1 + 8) = v23;
  *(_QWORD *)(a1 + 16) = v24;
  *(_QWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 32) = v36;
  *(_QWORD *)(a1 + 40) = v38;
  return result;
}

uint64_t sub_18FBBDAA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = sub_18FBCCE24();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189DE0);
  result = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v15 + 63) >> 6;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_18FBB45B8((uint64_t)v8, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v17)
      goto LABEL_4;
LABEL_5:
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v24)
        goto LABEL_24;
      v21 = *(_QWORD *)(v14 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v24)
          goto LABEL_24;
        v21 = *(_QWORD *)(v14 + 8 * v13);
        if (!v21)
        {
          v13 = v20 + 3;
          if (v20 + 3 >= v24)
            goto LABEL_24;
          v21 = *(_QWORD *)(v14 + 8 * v13);
          if (!v21)
            break;
        }
      }
    }
LABEL_20:
    v17 = (v21 - 1) & v21;
  }
  v22 = v20 + 4;
  if (v22 >= v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
    return swift_release();
  }
  v21 = *(_QWORD *)(v14 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

Swift::Void __swiftcall IconStore.migrateIfNecessary()()
{
  sub_18FBBDF10();
}

uint64_t sub_18FBBDF10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t (*v40)(uint64_t);
  __int128 v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  unint64_t v47;
  os_log_t v48;
  BOOL v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  id v56;
  id v57;
  NSObject *v58;
  uint64_t (*v59)(uint64_t);
  os_log_type_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  int64_t v90;
  __int128 v91;
  unint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  int64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  id v129;
  NSObject *v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t inited;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  id v139;
  uint64_t v140;
  _QWORD *v141;
  char *v142;
  uint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  int v146;
  BOOL v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  os_log_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  int64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  char *v165;
  void (*v166)(char *, uint64_t);
  unint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t isa;
  int64_t v172;
  void (*v173)(char *, unint64_t, uint64_t);
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  id v179;
  id v180;
  NSObject *v181;
  os_log_type_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  NSObject *v194;
  os_log_type_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  void (*v200)(char *, uint64_t);
  uint64_t v201;
  _QWORD v202[2];
  __int128 v203;
  _QWORD *v204;
  char *v205;
  char *v206;
  __int128 v207;
  char *v208;
  void *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  _QWORD *v216;
  _QWORD *v217;
  int64_t v218;
  uint64_t updated;
  uint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  __int128 v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  __int128 v229;
  uint64_t v230;
  os_log_t v231;
  int64_t v232;
  uint64_t v233;
  char *v234;
  _QWORD v235[3];
  uint64_t v236[6];
  _QWORD v237[3];
  uint64_t v238;
  uint64_t v239;
  char *v240;

  v230 = sub_18FBCCE24();
  v224 = *(_QWORD *)(v230 - 8);
  v2 = MEMORY[0x1E0C80A78](v230);
  v208 = (char *)v202 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v206 = (char *)v202 - v5;
  MEMORY[0x1E0C80A78](v4);
  v205 = (char *)v202 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189DE0);
  MEMORY[0x1E0C80A78](v7);
  v212 = (char *)v202 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for IconStore.FileVersionUpdateMigration(0);
  v222 = *(_QWORD *)(updated - 8);
  MEMORY[0x1E0C80A78](updated);
  v226 = (uint64_t)v202 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187E50);
  v11 = MEMORY[0x1E0C80A78](v10);
  v221 = (_QWORD *)((char *)v202 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v220 = (uint64_t)v202 - v13;
  v231 = (os_log_t)type metadata accessor for IconStore.FileRenameMigration(0);
  *&v229 = v231[-1];
  v14 = MEMORY[0x1E0C80A78](v231);
  v16 = (char *)v202 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v225 = (uint64_t)v202 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v202 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v214 = (char *)v202 - v23;
  MEMORY[0x1E0C80A78](v22);
  v228 = (char *)v202 - v24;
  v25 = v0[7];
  v26 = v0[8];
  __swift_project_boxed_opaque_existential_1(v0 + 4, v25);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v26 + 16))(v237, v25, v26);
  v27 = v239;
  __swift_project_boxed_opaque_existential_1(v237, v238);
  v28 = sub_18FBCCDF4();
  v29 = (*(uint64_t (**)(uint64_t))(v27 + 24))(v28);
  if (v1)
  {
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v237);
  }
  v31 = v29;
  v210 = (uint64_t)v21;
  v216 = v16;
  swift_bridgeObjectRelease();
  v217 = v0;
  v32 = sub_18FBBC804(v31);
  v213 = v33;
  v211 = v34;
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v32 + 64);
  v215 = v32 + 64;
  v36 = 1 << *(_BYTE *)(v32 + 32);
  v37 = -1;
  if (v36 < 64)
    v37 = ~(-1 << v36);
  v38 = v37 & v35;
  v218 = (unint64_t)(v36 + 63) >> 6;
  v227 = v32;
  result = swift_bridgeObjectRetain();
  v39 = 0;
  v40 = type metadata accessor for IconStore.FileRenameMigration;
  *(_QWORD *)&v41 = 136446466;
  v223 = v41;
  *(_QWORD *)&v207 = MEMORY[0x1E0DEE9B8] + 8;
  v42 = 0;
  v43 = v229;
  v44 = (uint64_t)v214;
  v45 = (uint64_t)v228;
  while (1)
  {
    if (v38)
    {
      v232 = (v38 - 1) & v38;
      v47 = __clz(__rbit64(v38)) | (v39 << 6);
      v48 = v231;
      goto LABEL_24;
    }
    v49 = __OFADD__(v39++, 1);
    v48 = v231;
    if (v49)
    {
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
      goto LABEL_144;
    }
    if (v39 >= v218)
      goto LABEL_39;
    v50 = *(_QWORD *)(v215 + 8 * v39);
    if (!v50)
      break;
LABEL_23:
    v232 = (v50 - 1) & v50;
    v47 = __clz(__rbit64(v50)) + (v39 << 6);
LABEL_24:
    sub_18FB82684(*(_QWORD *)(v227 + 56) + *(_QWORD *)(v43 + 72) * v47, v45, v40);
    sub_18FB826C8(v45, v44, v40);
    v52 = v238;
    v53 = v239;
    __swift_project_boxed_opaque_existential_1(v237, v238);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 48))(v44, v44 + SHIDWORD(v48[2].isa), v52, v53);
    v233 = v39;
    if (v42)
    {
      v54 = v216;
      if (qword_1EE187EA8 != -1)
        swift_once();
      v55 = sub_18FBCCF5C();
      __swift_project_value_buffer(v55, (uint64_t)qword_1EE192760);
      sub_18FB82684(v44, (uint64_t)v54, v40);
      v56 = v42;
      v57 = v42;
      v58 = sub_18FBCCF44();
      v59 = v40;
      v60 = sub_18FBCD37C();
      if (os_log_type_enabled(v58, v60))
      {
        v61 = v42;
        v62 = (uint64_t)v54;
        v63 = swift_slowAlloc();
        v64 = (_QWORD *)swift_slowAlloc();
        v65 = swift_slowAlloc();
        v236[0] = v65;
        *(_DWORD *)v63 = v223;
        v66 = (uint64_t *)(v62 + SLODWORD(v231[3].isa));
        v67 = *v66;
        v68 = v66[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v63 + 4) = sub_18FB6ECF4(v67, v68, v236);
        swift_bridgeObjectRelease();
        sub_18FBC6150(v62, v59);
        *(_WORD *)(v63 + 12) = 2114;
        v69 = v61;
        v70 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v63 + 14) = v70;
        *v64 = v70;

        _os_log_impl(&dword_18FB18000, v58, v60, "Failed to rename icon: %{public}s - %{public}@", (uint8_t *)v63, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v64, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v65, -1, -1);
        MEMORY[0x19400960C](v63, -1, -1);

        v46 = v61;
        v44 = (uint64_t)v214;
      }
      else
      {

        sub_18FBC6150((uint64_t)v54, v59);
        v46 = v42;
      }

      result = sub_18FBC6150(v44, v59);
      v42 = 0;
    }
    else
    {
      v71 = v210;
      if (qword_1EE187EA8 != -1)
        swift_once();
      v72 = sub_18FBCCF5C();
      __swift_project_value_buffer(v72, (uint64_t)qword_1EE192760);
      sub_18FB82684(v44, v71, v40);
      sub_18FB82684(v44, v225, v40);
      v73 = sub_18FBCCF44();
      v59 = v40;
      v74 = sub_18FBCD394();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = v71;
        v76 = swift_slowAlloc();
        v77 = swift_slowAlloc();
        v236[0] = v77;
        *(_DWORD *)v76 = v223;
        sub_18FB203A8(&qword_1EE187E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v209 = 0;
        v78 = sub_18FBCD7A8();
        *(_QWORD *)(v76 + 4) = sub_18FB6ECF4(v78, v79, v236);
        swift_bridgeObjectRelease();
        sub_18FBC6150(v75, v59);
        *(_WORD *)(v76 + 12) = 2082;
        v80 = v225;
        v42 = v209;
        v81 = sub_18FBCD7A8();
        *(_QWORD *)(v76 + 14) = sub_18FB6ECF4(v81, v82, v236);
        swift_bridgeObjectRelease();
        v83 = v80;
        v44 = (uint64_t)v214;
        sub_18FBC6150(v83, v59);
        _os_log_impl(&dword_18FB18000, v73, v74, "Renamed icon: %{public}s -> %{public}s", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v77, -1, -1);
        MEMORY[0x19400960C](v76, -1, -1);

      }
      else
      {

        sub_18FBC6150(v225, v59);
        sub_18FBC6150(v71, v59);
      }
      result = sub_18FBC6150(v44, v59);
    }
    v43 = v229;
    v45 = (uint64_t)v228;
    v40 = v59;
    v39 = v233;
    v38 = v232;
  }
  v51 = v39 + 1;
  if (v39 + 1 >= v218)
    goto LABEL_39;
  v50 = *(_QWORD *)(v215 + 8 * v51);
  if (v50)
    goto LABEL_22;
  v51 = v39 + 2;
  if (v39 + 2 >= v218)
    goto LABEL_39;
  v50 = *(_QWORD *)(v215 + 8 * v51);
  if (v50)
    goto LABEL_22;
  v51 = v39 + 3;
  if (v39 + 3 >= v218)
    goto LABEL_39;
  v50 = *(_QWORD *)(v215 + 8 * v51);
  if (v50)
  {
LABEL_22:
    v39 = v51;
    goto LABEL_23;
  }
  v51 = v39 + 4;
  if (v39 + 4 < v218)
  {
    v50 = *(_QWORD *)(v215 + 8 * v51);
    if (!v50)
    {
      while (1)
      {
        v39 = v51 + 1;
        if (__OFADD__(v51, 1))
          break;
        if (v39 >= v218)
          goto LABEL_39;
        v50 = *(_QWORD *)(v215 + 8 * v39);
        ++v51;
        if (v50)
          goto LABEL_23;
      }
LABEL_144:
      __break(1u);
      goto LABEL_145;
    }
    goto LABEL_22;
  }
LABEL_39:
  v84 = v222;
  v85 = v226;
  swift_release();
  v86 = *(_QWORD *)(v213 + 64);
  v215 = v213 + 64;
  v87 = 1 << *(_BYTE *)(v213 + 32);
  v88 = -1;
  if (v87 < 64)
    v88 = ~(-1 << v87);
  v89 = v88 & v86;
  v204 = v235;
  v218 = (unint64_t)(v87 + 63) >> 6;
  v202[0] = v218 - 1;
  result = swift_bridgeObjectRetain();
  v90 = 0;
  v225 = 0x800000018FBE9A10;
  *(_QWORD *)&v91 = 136446722;
  v203 = v91;
  v202[1] = MEMORY[0x1E0DEE9B8] + 8;
  v207 = xmmword_18FBD6250;
  while (2)
  {
    if (v89)
    {
      v233 = (v89 - 1) & v89;
      v232 = v90;
      v92 = __clz(__rbit64(v89)) | (v90 << 6);
      goto LABEL_46;
    }
    v103 = v90 + 1;
    if (__OFADD__(v90, 1))
      goto LABEL_141;
    if (v103 >= v218)
      goto LABEL_57;
    v104 = *(_QWORD *)(v215 + 8 * v103);
    if (v104)
    {
LABEL_50:
      v233 = (v104 - 1) & v104;
      v92 = __clz(__rbit64(v104)) + (v103 << 6);
      v232 = v103;
LABEL_46:
      v93 = *(_QWORD *)(v213 + 56);
      v94 = (_QWORD *)(*(_QWORD *)(v213 + 48) + 32 * v92);
      v95 = v94[1];
      v96 = v94[2];
      v97 = v94[3];
      v98 = v221;
      *v221 = *v94;
      v98[1] = v95;
      v98[2] = v96;
      v98[3] = v97;
      v99 = v93 + *(_QWORD *)(v84 + 72) * v92;
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187E48);
      v101 = v99;
      v102 = v98;
      sub_18FB82684(v101, (uint64_t)v98 + *(int *)(v100 + 48), type metadata accessor for IconStore.FileVersionUpdateMigration);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v98, 0, 1, v100);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_59:
      v106 = (uint64_t)v102;
      v107 = v220;
      sub_18FBC6108(v106, v220);
      v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187E48);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 48))(v107, 1, v108) == 1)
      {
        swift_release();
        v158 = *(_QWORD *)(v211 + 56);
        v231 = (os_log_t)(v211 + 56);
        v159 = 1 << *(_BYTE *)(v211 + 32);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        v161 = 0;
        v162 = -1;
        if (v159 < 64)
          v162 = ~(-1 << v159);
        v163 = v162 & v158;
        v232 = (unint64_t)(v159 + 63) >> 6;
        *(_QWORD *)&v160 = 136446210;
        v229 = v160;
        v228 = (char *)(MEMORY[0x1E0DEE9B8] + 8);
        v164 = v230;
        v165 = v205;
        while (1)
        {
          if (v163)
          {
            v167 = __clz(__rbit64(v163));
            v168 = (v163 - 1) & v163;
            v169 = v167 | (v161 << 6);
            v170 = v224;
          }
          else
          {
            v49 = __OFADD__(v161++, 1);
            if (v49)
              goto LABEL_142;
            v170 = v224;
            if (v161 >= v232)
            {
LABEL_138:
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v224 + 56))(v212, 1, 1, v164);
LABEL_139:
              swift_release();
              return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v237);
            }
            isa = (unint64_t)v231[v161].isa;
            if (!isa)
            {
              v172 = v161 + 1;
              if (v161 + 1 >= v232)
                goto LABEL_138;
              isa = (unint64_t)v231[v172].isa;
              if (!isa)
              {
                v172 = v161 + 2;
                if (v161 + 2 >= v232)
                  goto LABEL_138;
                isa = (unint64_t)v231[v172].isa;
                if (!isa)
                {
                  v172 = v161 + 3;
                  if (v161 + 3 >= v232)
                    goto LABEL_138;
                  isa = (unint64_t)v231[v172].isa;
                  if (!isa)
                  {
                    while (1)
                    {
                      v161 = v172 + 1;
                      if (__OFADD__(v172, 1))
                        goto LABEL_143;
                      if (v161 >= v232)
                        goto LABEL_138;
                      isa = (unint64_t)v231[v161].isa;
                      ++v172;
                      if (isa)
                        goto LABEL_121;
                    }
                  }
                }
              }
              v161 = v172;
            }
LABEL_121:
            v168 = (isa - 1) & isa;
            v169 = __clz(__rbit64(isa)) + (v161 << 6);
          }
          v173 = *(void (**)(char *, unint64_t, uint64_t))(v170 + 16);
          v174 = v212;
          v173(v212, *(_QWORD *)(v211 + 48) + *(_QWORD *)(v170 + 72) * v169, v164);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v170 + 56))(v174, 0, 1, v164);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v174, 1, v164) == 1)
            goto LABEL_139;
          v233 = v168;
          (*(void (**)(char *, char *, uint64_t))(v170 + 32))(v165, v174, v164);
          v175 = v238;
          v176 = v239;
          __swift_project_boxed_opaque_existential_1(v237, v238);
          (*(void (**)(char *, uint64_t, uint64_t))(v176 + 56))(v165, v175, v176);
          if (v42)
          {
            v177 = v208;
            if (qword_1EE187EA8 != -1)
              swift_once();
            v178 = sub_18FBCCF5C();
            __swift_project_value_buffer(v178, (uint64_t)qword_1EE192760);
            v164 = v230;
            v173(v177, (unint64_t)v165, v230);
            v179 = v42;
            v180 = v42;
            v181 = sub_18FBCCF44();
            v182 = sub_18FBCD37C();
            if (os_log_type_enabled(v181, v182))
            {
              v183 = swift_slowAlloc();
              v184 = (_QWORD *)swift_slowAlloc();
              v185 = swift_slowAlloc();
              v236[0] = v185;
              *(_DWORD *)v183 = v223;
              sub_18FB203A8(&qword_1EE187E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
              v186 = sub_18FBCD7A8();
              *(_QWORD *)(v183 + 4) = sub_18FB6ECF4(v186, v187, v236);
              swift_bridgeObjectRelease();
              v166 = *(void (**)(char *, uint64_t))(v224 + 8);
              v166(v177, v230);
              *(_WORD *)(v183 + 12) = 2114;
              v188 = v42;
              v189 = _swift_stdlib_bridgeErrorToNSError();
              *(_QWORD *)(v183 + 14) = v189;
              *v184 = v189;

              _os_log_impl(&dword_18FB18000, v181, v182, "Failed to remove duplicate icon at: %{public}s - %{public}@", (uint8_t *)v183, 0x16u);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
              swift_arrayDestroy();
              MEMORY[0x19400960C](v184, -1, -1);
              swift_arrayDestroy();
              v190 = v185;
              v164 = v230;
              MEMORY[0x19400960C](v190, -1, -1);
              v191 = v183;
              v165 = v205;
              MEMORY[0x19400960C](v191, -1, -1);

            }
            else
            {

              v166 = *(void (**)(char *, uint64_t))(v224 + 8);
              v166(v177, v164);
            }

            result = ((uint64_t (*)(char *, uint64_t))v166)(v165, v164);
            v42 = 0;
          }
          else
          {
            v192 = v206;
            if (qword_1EE187EA8 != -1)
              swift_once();
            v193 = sub_18FBCCF5C();
            __swift_project_value_buffer(v193, (uint64_t)qword_1EE192760);
            v164 = v230;
            v173(v192, (unint64_t)v165, v230);
            v194 = sub_18FBCCF44();
            v195 = sub_18FBCD394();
            if (os_log_type_enabled(v194, v195))
            {
              v196 = swift_slowAlloc();
              v197 = swift_slowAlloc();
              v236[0] = v197;
              *(_DWORD *)v196 = v229;
              sub_18FB203A8(&qword_1EE187E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
              v198 = sub_18FBCD7A8();
              *(_QWORD *)(v196 + 4) = sub_18FB6ECF4(v198, v199, v236);
              swift_bridgeObjectRelease();
              v200 = *(void (**)(char *, uint64_t))(v224 + 8);
              v200(v192, v230);
              _os_log_impl(&dword_18FB18000, v194, v195, "Removed duplicate icon at: %{public}s", (uint8_t *)v196, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x19400960C](v197, -1, -1);
              v201 = v196;
              v164 = v230;
              MEMORY[0x19400960C](v201, -1, -1);

            }
            else
            {

              v200 = *(void (**)(char *, uint64_t))(v224 + 8);
              v200(v192, v164);
            }
            result = ((uint64_t (*)(char *, uint64_t))v200)(v165, v164);
          }
          v163 = v233;
        }
      }
      v109 = *(NSObject **)v107;
      v110 = *(_QWORD *)(v107 + 8);
      v112 = *(_QWORD *)(v107 + 16);
      v111 = *(_QWORD *)(v107 + 24);
      sub_18FB826C8(v107 + *(int *)(v108 + 48), v85, type metadata accessor for IconStore.FileVersionUpdateMigration);
      v113 = v238;
      v114 = v239;
      v115 = __swift_project_boxed_opaque_existential_1(v237, v238);
      v231 = v109;
      v234 = (char *)v109;
      v235[0] = v110;
      v116 = v110;
      *(_QWORD *)&v229 = v112;
      v235[1] = v112;
      v235[2] = v111;
      sub_18FBBFAF4((uint64_t *)&v234, (uint64_t)v115, v113, v114, (uint64_t)v236);
      v117 = v85;
      v118 = v236[4];
      v119 = v236[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v120 = (uint64_t *)(v117 + *(int *)(updated + 20));
      if (v120[1])
      {
        v121 = *v120;
        v122 = v120[1];
        if (!v119)
        {
LABEL_73:
          v228 = (char *)v118;
          v123 = (char *)v121;
          v125 = v238;
          v124 = v239;
          __swift_project_boxed_opaque_existential_1(v237, v238);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v236[0] = 0xD00000000000001DLL;
          v236[1] = v225;
          v234 = v123;
          v235[0] = v122;
          (*(void (**)(uint64_t, uint64_t *, char **, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v124 + 32))(v226, v236, &v234, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970], v125, v124);
          if (v42)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            v126 = v116;
            if (qword_1EE187EA8 != -1)
              swift_once();
            v127 = sub_18FBCCF5C();
            __swift_project_value_buffer(v127, (uint64_t)qword_1EE192760);
            v128 = v42;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v129 = v42;
            v130 = sub_18FBCCF44();
            v131 = sub_18FBCD37C();
            if (os_log_type_enabled(v130, v131))
            {
              v132 = swift_slowAlloc();
              v216 = (_QWORD *)swift_slowAlloc();
              v228 = (char *)swift_slowAlloc();
              v236[0] = (uint64_t)v228;
              *(_DWORD *)v132 = v223;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A128);
              inited = swift_initStackObject();
              v134 = inited;
              *(_OWORD *)(inited + 16) = v207;
              v135 = v229;
              if (!v111)
                v135 = 0;
              *(_QWORD *)(inited + 32) = v135;
              *(_QWORD *)(inited + 40) = v111;
              *(_QWORD *)(inited + 48) = v231;
              *(_QWORD *)(inited + 56) = v126;
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRetain_n();
              sub_18FB1EB44(v134, &v234);
              v240 = v234;
              swift_bridgeObjectRetain();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
              sub_18FB1E9FC((unint64_t *)&qword_1EE18A150, (uint64_t *)&unk_1EE18A140, MEMORY[0x1E0DEAF20]);
              v136 = sub_18FBCD070();
              v138 = v137;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              *(_QWORD *)(v132 + 4) = sub_18FB6ECF4(v136, v138, v236);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v132 + 12) = 2114;
              v139 = v42;
              v140 = _swift_stdlib_bridgeErrorToNSError();
              *(_QWORD *)(v132 + 14) = v140;
              v141 = v216;
              *v216 = v140;

              _os_log_impl(&dword_18FB18000, v130, v131, "Failed to save icon version for: %{public}s - %{public}@", (uint8_t *)v132, 0x16u);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
              swift_arrayDestroy();
              MEMORY[0x19400960C](v141, -1, -1);
              v142 = v228;
              swift_arrayDestroy();
              MEMORY[0x19400960C](v142, -1, -1);
              MEMORY[0x19400960C](v132, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }

            v85 = v226;
            result = sub_18FBC6150(v226, type metadata accessor for IconStore.FileVersionUpdateMigration);
            v42 = 0;
          }
          else
          {
            v216 = v123;
            swift_bridgeObjectRelease();
            if (qword_1EE187EA8 != -1)
              swift_once();
            v143 = sub_18FBCCF5C();
            __swift_project_value_buffer(v143, (uint64_t)qword_1EE192760);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v144 = sub_18FBCCF44();
            v145 = sub_18FBCD394();
            v146 = v145;
            v147 = os_log_type_enabled(v144, v145);
            v148 = v228;
            if (v147)
            {
              v149 = swift_slowAlloc();
              LODWORD(v214) = v146;
              v150 = v149;
              v210 = swift_slowAlloc();
              v236[0] = v210;
              *(_DWORD *)v150 = v203;
              v209 = (void *)(v150 + 4);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v151 = sub_18FBA51C0((uint64_t)v231, v116, v229, v111);
              v231 = v144;
              v153 = v152;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v234 = (char *)sub_18FB6ECF4(v151, v153, v236);
              sub_18FBCD454();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v150 + 12) = 2082;
              if (v119)
                v154 = (uint64_t)v148;
              else
                v154 = 1701736302;
              if (v119)
                v155 = v119;
              else
                v155 = 0xE400000000000000;
              swift_bridgeObjectRetain();
              v234 = (char *)sub_18FB6ECF4(v154, v155, v236);
              sub_18FBCD454();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v150 + 22) = 2082;
              swift_bridgeObjectRetain();
              v234 = (char *)sub_18FB6ECF4((uint64_t)v216, v122, v236);
              sub_18FBCD454();
              swift_bridgeObjectRelease_n();
              v156 = v231;
              _os_log_impl(&dword_18FB18000, v231, (os_log_type_t)v214, "Migrated icon version for: %{public}s. %{public}s -> %{public}s", (uint8_t *)v150, 0x20u);
              v157 = v210;
              swift_arrayDestroy();
              MEMORY[0x19400960C](v157, -1, -1);
              MEMORY[0x19400960C](v150, -1, -1);

            }
            else
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();

            }
            v85 = v226;
            result = sub_18FBC6150(v226, type metadata accessor for IconStore.FileVersionUpdateMigration);
          }
          goto LABEL_43;
        }
      }
      else
      {
        if (v119)
          v121 = v118;
        else
          v121 = 48;
        if (v119)
          v122 = v119;
        else
          v122 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        if (!v119)
          goto LABEL_73;
      }
      if ((v121 != v118 || v119 != v122) && (sub_18FBCD7C0() & 1) == 0)
        goto LABEL_73;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v85 = v226;
      sub_18FBC6150(v226, type metadata accessor for IconStore.FileVersionUpdateMigration);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
LABEL_43:
      v84 = v222;
      v90 = v232;
      v89 = v233;
      continue;
    }
    break;
  }
  v90 += 2;
  if (v103 + 1 >= v218)
  {
LABEL_102:
    v232 = v103;
    goto LABEL_58;
  }
  v104 = *(_QWORD *)(v215 + 8 * v90);
  if (v104)
  {
LABEL_53:
    v103 = v90;
    goto LABEL_50;
  }
  if (v103 + 2 >= v218)
  {
LABEL_57:
    v232 = v90;
LABEL_58:
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187E48);
    v102 = v221;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v221, 1, 1, v105);
    v233 = 0;
    goto LABEL_59;
  }
  v104 = *(_QWORD *)(v215 + 8 * (v103 + 2));
  if (v104)
  {
    v103 += 2;
    goto LABEL_50;
  }
  v90 = v103 + 3;
  if (v103 + 3 >= v218)
  {
    v232 = v103 + 2;
    goto LABEL_58;
  }
  v104 = *(_QWORD *)(v215 + 8 * v90);
  if (v104)
    goto LABEL_53;
  while (1)
  {
    v103 = v90 + 1;
    if (__OFADD__(v90, 1))
      break;
    if (v103 >= v218)
    {
      v103 = v202[0];
      goto LABEL_102;
    }
    v104 = *(_QWORD *)(v215 + 8 * v103);
    ++v90;
    if (v104)
      goto LABEL_50;
  }
LABEL_145:
  __break(1u);
  return result;
}

uint64_t sub_18FBBFAF4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  __int128 v29;

  v25 = a4;
  v26 = a2;
  v27 = a3;
  v7 = sub_18FBCCF38();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_18FBCCE24();
  v23 = *(_QWORD *)(v11 - 8);
  v24 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = a1[1];
  v17 = a1[2];
  v16 = a1[3];
  v21 = v17;
  v22 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FB7D954(v14, v15, v17, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18FBCCF2C();
  sub_18FBCCDA0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v28[0] = 0xD00000000000001DLL;
  v28[1] = 0x800000018FBE9A10;
  (*(void (**)(__int128 *__return_ptr, char *, _QWORD *, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))(v25 + 40))(&v29, v13, v28, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970], v27);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v24);
  v18 = v29;
  *(_QWORD *)a5 = v22;
  *(_QWORD *)(a5 + 8) = v15;
  *(_QWORD *)(a5 + 16) = v21;
  *(_QWORD *)(a5 + 24) = v16;
  *(_OWORD *)(a5 + 32) = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> IconStore.addIcons(for:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];
  uint64_t v22;

  v2 = *((_QWORD *)a1._rawValue + 2);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v4 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
    v5 = MEMORY[0x1E0DEE9D8];
    do
    {
      if (!*(v4 - 2))
      {
        v9 = *(v4 - 5);
        v10 = *(v4 - 4);
        v11 = *v4;
        v19 = *(v4 - 3);
        v20 = *(v4 - 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        aBlock[0] = v5;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_18FB7F0C8(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = aBlock[0];
        }
        v7 = *(_QWORD *)(v5 + 16);
        v6 = *(_QWORD *)(v5 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_18FB7F0C8((char *)(v6 > 1), v7 + 1, 1);
          v5 = aBlock[0];
        }
        *(_QWORD *)(v5 + 16) = v7 + 1;
        v8 = (_QWORD *)(v5 + 48 * v7);
        v8[4] = v9;
        v8[5] = v10;
        v8[6] = v19;
        v8[7] = 0;
        v8[8] = v20;
        v8[9] = v11;
      }
      v4 += 6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v1 = v18;
    v3 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(v5 + 16))
      goto LABEL_11;
LABEL_16:
    swift_release();
    return;
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    goto LABEL_16;
LABEL_11:
  v22 = v3;
  v12 = *(NSObject **)(v1 + 24);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v1;
  v13[3] = v5;
  v13[4] = &v22;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_18FBC59B4;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_18FB73428;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB6E4C8;
  aBlock[3] = &block_descriptor_10;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v12 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (*(_QWORD *)(v22 + 16))
    {
      v16 = swift_bridgeObjectRetain();
      v17 = sub_18FBBC3C4(v16);
      swift_bridgeObjectRelease();
      aBlock[0] = v17;
      sub_18FBCCFA4();
      swift_bridgeObjectRelease();
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_18FBBFF80(_QWORD *a1, uint64_t a2, char **a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  NSObject *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v37;
  os_log_type_t type;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[4];
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  NSObject *v49;
  uint64_t v50;

  v4 = a1[7];
  v5 = a1[8];
  __swift_project_boxed_opaque_existential_1(a1 + 4, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 16))(v48, v4, v5);
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (i = (uint64_t *)(a2 + 72); ; i += 6)
    {
      v8 = *(i - 5);
      v9 = *(i - 4);
      v10 = *(i - 3);
      v11 = *(i - 2);
      v12 = *i;
      v39 = v6;
      v40 = *(i - 1);
      v13 = (uint64_t)v49;
      v14 = v50;
      v15 = __swift_project_boxed_opaque_existential_1(v48, (uint64_t)v49);
      v41[0] = v8;
      v41[1] = v9;
      v41[2] = v10;
      v41[3] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_18FBBFAF4(v41, (uint64_t)v15, v13, v14, (uint64_t)&v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = v46;
      v17 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17)
      {
        if (!v12)
        {
          swift_bridgeObjectRelease();
LABEL_15:
          v19 = v49;
          v20 = v50;
          v21 = __swift_project_boxed_opaque_existential_1(v48, (uint64_t)v49);
          v42 = v8;
          v43 = v9;
          v44 = v10;
          v45 = v11;
          v46 = v40;
          v47 = v12;
          sub_18FBC06FC(&v42, v21, v19, v20);
          if (qword_1EE187EA8 != -1)
            swift_once();
          v22 = sub_18FBCCF5C();
          __swift_project_value_buffer(v22, (uint64_t)qword_1EE192760);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          v23 = sub_18FBCCF44();
          v24 = sub_18FBCD394();
          if (os_log_type_enabled(v23, v24))
          {
            type = v24;
            v25 = (uint8_t *)swift_slowAlloc();
            v26 = swift_slowAlloc();
            v41[0] = v26;
            *(_DWORD *)v25 = 136446210;
            v37 = v26;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v27 = sub_18FBA51C0(v8, v9, v10, v11);
            v29 = v28;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v42 = v27;
            v43 = v29;
            sub_18FBCD16C();
            swift_bridgeObjectRetain();
            sub_18FBCD16C();
            swift_bridgeObjectRelease();
            v42 = sub_18FB6ECF4(v42, v43, v41);
            sub_18FBCD454();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_18FB18000, v23, type, "Added icon: %{public}s", v25, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x19400960C](v37, -1, -1);
            MEMORY[0x19400960C](v25, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
          }
          v30 = *a3;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a3 = v30;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v30 = sub_18FB7EF24(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
            *a3 = v30;
          }
          v33 = *((_QWORD *)v30 + 2);
          v32 = *((_QWORD *)v30 + 3);
          if (v33 >= v32 >> 1)
          {
            v30 = sub_18FB7EF24((char *)(v32 > 1), v33 + 1, 1, v30);
            *a3 = v30;
          }
          *((_QWORD *)v30 + 2) = v33 + 1;
          v34 = &v30[48 * v33];
          *((_QWORD *)v34 + 4) = v8;
          *((_QWORD *)v34 + 5) = v9;
          *((_QWORD *)v34 + 6) = v10;
          *((_QWORD *)v34 + 7) = v11;
          *((_QWORD *)v34 + 8) = v40;
          *((_QWORD *)v34 + 9) = v12;
          goto LABEL_5;
        }
        if (v16 == v40 && v17 == v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = sub_18FBCD7C0();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
          goto LABEL_15;
      }
      else if (v12)
      {
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      swift_bridgeObjectRelease();
LABEL_5:
      v6 = v39 - 1;
      if (v39 == 1)
      {
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      }
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
}

void sub_18FBC06FC(uint64_t *a1, _QWORD *a2, NSObject *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, os_log_t, uint64_t);
  char *v21;
  os_log_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t inited;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  os_log_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  id v73;
  uint64_t v74;
  _QWORD *v75;
  os_log_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  id v84;
  uint64_t v85;
  os_log_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  id v90;
  char v91;
  os_log_t v92;
  unint64_t v93;
  uint64_t v94;
  int v95;
  char v96;
  _QWORD v97[4];

  v83 = a2;
  v5 = v4;
  v86 = a3;
  v87 = a4;
  v97[2] = *MEMORY[0x1E0C80C00];
  v88 = (char *)sub_18FBCCF38();
  v82 = *((_QWORD *)v88 - 1);
  MEMORY[0x1E0C80A78](v88);
  v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_18FBCCE24();
  v85 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v14 = a1[3];
  v77 = a1[4];
  v80 = a1[5];
  BSDispatchQueueAssert();
  v15 = objc_allocWithZone(MEMORY[0x1E0D3A820]);
  swift_bridgeObjectRetain();
  v16 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v90 = objc_msgSend(v15, sel_initWithBundleIdentifier_, v16);

  v81 = v5;
  v17 = (uint64_t)v5 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v78 = v11;
  v79 = v13;
  sub_18FB7D954(v11, v12, v13, v14);
  sub_18FBCCF2C();
  sub_18FBCCDA0();
  swift_bridgeObjectRelease();
  v18 = v8;
  v19 = v87;
  (*(void (**)(char *, char *))(v82 + 8))(v18, v88);
  v82 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = *(void (**)(char *, os_log_t, uint64_t))(v19 + 56);
  v88 = v10;
  v21 = v10;
  v22 = v86;
  v23 = v84;
  v20(v21, v86, v19);
  v24 = v23;
  if (v23)
  {

    v24 = 0;
  }
  v91 = 0;
  v25 = sub_18FBCCDF4();
  v26 = (*(uint64_t (**)(uint64_t))(v19 + 16))(v25);
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0 || (v91 & 1) == 0)
  {
    sub_18FBC742C(v17, 1, 0, (uint64_t)v22, v19);
    if (v24)
    {
      if (qword_1EE187EA8 != -1)
        swift_once();
      v27 = sub_18FBCCF5C();
      __swift_project_value_buffer(v27, (uint64_t)qword_1EE192760);
      swift_retain();
      v28 = v24;
      swift_retain();
      v29 = v24;
      v30 = sub_18FBCCF44();
      v31 = sub_18FBCD37C();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v33 = (_QWORD *)swift_slowAlloc();
        v87 = swift_slowAlloc();
        v92 = (os_log_t)v87;
        *(_DWORD *)v32 = 136446466;
        sub_18FB203A8(&qword_1EE187E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v34 = sub_18FBCD7A8();
        v97[0] = sub_18FB6ECF4(v34, v35, (uint64_t *)&v92);
        sub_18FBCD454();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2114;
        v36 = v24;
        v37 = _swift_stdlib_bridgeErrorToNSError();
        v97[0] = v37;
        sub_18FBCD454();
        *v33 = v37;

        _os_log_impl(&dword_18FB18000, v30, v31, "Error creating image folder at %{public}s: %{public}@", (uint8_t *)v32, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v33, -1, -1);
        v38 = v87;
        swift_arrayDestroy();
        MEMORY[0x19400960C](v38, -1, -1);
        MEMORY[0x19400960C](v32, -1, -1);
      }
      else
      {
        swift_release_n();

      }
      swift_willThrow();
LABEL_21:

      (*(void (**)(char *, uint64_t))(v85 + 8))(v88, v89);
      return;
    }
  }
  v39 = objc_msgSend((id)objc_opt_self(), sel_imageDescriptorNamed_, *MEMORY[0x1E0D3A898]);
  objc_msgSend(v39, sel_setShouldApplyMask_, 0);
  v40 = objc_msgSend(v90, sel_prepareImageForDescriptor_, v39);
  if (!v40
    || (v41 = v40, v42 = objc_msgSend(v40, sel_CGImage), v41, !v42))
  {
    if (qword_1EE187EA8 != -1)
      swift_once();
    v50 = sub_18FBCCF5C();
    __swift_project_value_buffer(v50, (uint64_t)qword_1EE192760);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v51 = v82;
    swift_bridgeObjectRetain_n();
    v52 = sub_18FBCCF44();
    v53 = sub_18FBCD37C();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = swift_slowAlloc();
      v86 = v52;
      v55 = (uint8_t *)v54;
      v87 = swift_slowAlloc();
      v92 = (os_log_t)v87;
      v84 = v39;
      *(_DWORD *)v55 = 136446210;
      v83 = v55 + 4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v56 = sub_18FBA51C0(v78, v12, v79, v51);
      v58 = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v97[0] = sub_18FB6ECF4(v56, v58, (uint64_t *)&v92);
      sub_18FBCD454();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v59 = v86;
      _os_log_impl(&dword_18FB18000, v86, v53, "Failed to generate icon image for: %{public}s", v55, 0xCu);
      v60 = v87;
      swift_arrayDestroy();
      MEMORY[0x19400960C](v60, -1, -1);
      MEMORY[0x19400960C](v55, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
    goto LABEL_21;
  }
  v84 = v39;
  v43 = v12;
  v44 = v81[12];
  v45 = v81[13];
  v46 = __swift_project_boxed_opaque_existential_1(v81 + 9, v44);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE189AA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_18FBD6750;
  *(_QWORD *)(inited + 32) = v42;
  v92 = (os_log_t)inited;
  sub_18FBCD2A4();
  v48 = (unint64_t)v92;
  v92 = 0;
  v93 = 0;
  v94 = 0;
  v96 = 0x80;
  v95 = 0;
  v81 = v42;
  v49 = v88;
  sub_18FBC5C5C(v48, v88, (uint64_t *)&v92, (uint64_t)v46, v44, v45);
  if (v24)
  {
    swift_bridgeObjectRelease();
    v61 = v43;
    v62 = v82;
    if (qword_1EE187EA8 != -1)
      swift_once();
    v63 = sub_18FBCCF5C();
    __swift_project_value_buffer(v63, (uint64_t)qword_1EE192760);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64 = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65 = v24;
    v66 = sub_18FBCCF44();
    v67 = sub_18FBCD37C();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = swift_slowAlloc();
      v69 = swift_slowAlloc();
      v87 = 0;
      v83 = (_QWORD *)v69;
      v86 = (os_log_t)swift_slowAlloc();
      v92 = v86;
      *(_DWORD *)v68 = 136446466;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v70 = sub_18FBA51C0(v78, v61, v79, v62);
      v72 = v71;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v97[0] = sub_18FB6ECF4(v70, v72, (uint64_t *)&v92);
      sub_18FBCD454();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2114;
      v73 = v24;
      v74 = _swift_stdlib_bridgeErrorToNSError();
      v97[0] = v74;
      sub_18FBCD454();
      v75 = v83;
      *v83 = v74;

      _os_log_impl(&dword_18FB18000, v66, v67, "Error writing image data for %{public}s: %{public}@", (uint8_t *)v68, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v75, -1, -1);
      v76 = v86;
      swift_arrayDestroy();
      MEMORY[0x19400960C](v76, -1, -1);
      MEMORY[0x19400960C](v68, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v85 + 8))(v88, v89);
  }
  else
  {
    swift_bridgeObjectRelease();
    v92 = (os_log_t)0xD00000000000001DLL;
    v93 = 0x800000018FBE9A10;
    v97[0] = v77;
    v97[1] = v80;
    (*(void (**)(char *, os_log_t *, _QWORD *, _QWORD, _QWORD, _QWORD, os_log_t))(v87 + 32))(v49, &v92, v97, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970], v86);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v49, v89);

  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> IconStore.removeIcons(for:)(Swift::OpaquePointer a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  _BOOL4 v30;
  uint64_t v31;
  uint8_t *v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t *v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  void *v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  _QWORD v84[2];
  __int128 v85;
  char *v86;
  uint64_t v87;
  __int128 v88;
  unint64_t *v89;
  uint8_t *v90;
  os_log_t v91;
  uint64_t v92;
  int v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  id v111;
  uint64_t v112[4];
  uint64_t v113;
  unint64_t v114[5];
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v97 = sub_18FBCCF38();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v95 = (char *)v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_18FBCCE24();
  v4 = *(_QWORD *)(v99 - 8);
  v5 = MEMORY[0x1E0C80A78](v99);
  v86 = (char *)v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v84 - v7;
  v9 = v1[7];
  v10 = v1[8];
  v98 = v1;
  __swift_project_boxed_opaque_existential_1(v1 + 4, v9);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 16))(&v115, v9, v10);
  v11 = *((_QWORD *)a1._rawValue + 2);
  if (v11)
  {
    v94 = (char *)v98 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
    v89 = v114;
    swift_bridgeObjectRetain();
    v84[1] = a1._rawValue;
    v12 = (uint64_t *)((char *)a1._rawValue + 56);
    *(_QWORD *)&v13 = 136446210;
    v88 = v13;
    v87 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v13 = 136446466;
    v85 = v13;
    v102 = v4;
    v101 = v8;
    do
    {
      v106 = v12;
      v107 = v11;
      v15 = *(v12 - 3);
      v14 = *(v12 - 2);
      v17 = (uint64_t *)*(v12 - 1);
      v16 = *v12;
      v18 = v116;
      v19 = v117;
      v20 = __swift_project_boxed_opaque_existential_1(&v115, v116);
      v109 = v17;
      v110 = v15;
      v112[0] = v15;
      v112[1] = v14;
      v112[2] = (uint64_t)v17;
      v112[3] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18FBBFAF4(v112, (uint64_t)v20, v18, v19, (uint64_t)&v113);
      v21 = v114[0];
      v104 = v113;
      v23 = v114[1];
      v22 = v114[2];
      v24 = v114[4];
      v105 = v114[3];
      if (qword_1EE187EA8 != -1)
        swift_once();
      v25 = sub_18FBCCF5C();
      v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EE192760);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v103 = v26;
      v27 = sub_18FBCCF44();
      v28 = sub_18FBCD394();
      v29 = v28;
      v30 = os_log_type_enabled(v27, v28);
      v118 = v21;
      v108 = v24;
      v100 = v23;
      if (v30)
      {
        v31 = swift_slowAlloc();
        v93 = v29;
        v32 = (uint8_t *)v31;
        v92 = swift_slowAlloc();
        v112[0] = v92;
        v91 = v27;
        v33 = v32;
        *(_DWORD *)v32 = v88;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34 = sub_18FBA51C0(v104, v21, v23, v22);
        v36 = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v113 = v34;
        v114[0] = v36;
        sub_18FBCD16C();
        v90 = v33 + 4;
        swift_bridgeObjectRetain();
        sub_18FBCD16C();
        swift_bridgeObjectRelease();
        v113 = sub_18FB6ECF4(v113, v114[0], v112);
        sub_18FBCD454();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v37 = v91;
        _os_log_impl(&dword_18FB18000, v91, (os_log_type_t)v93, "Removing icon: %{public}s", v33, 0xCu);
        v38 = v92;
        swift_arrayDestroy();
        MEMORY[0x19400960C](v38, -1, -1);
        MEMORY[0x19400960C](v33, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_18FB7D954(v110, v14, (uint64_t)v109, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v95;
      sub_18FBCCF2C();
      v40 = v101;
      sub_18FBCCDA0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v39, v97);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 = v117;
      __swift_project_boxed_opaque_existential_1(&v115, v116);
      v42 = sub_18FBCCDF4();
      v43 = (*(uint64_t (**)(uint64_t))(v41 + 8))(v42);
      swift_bridgeObjectRelease();
      if ((v43 & 1) != 0)
      {
        v44 = v116;
        v45 = v117;
        __swift_project_boxed_opaque_existential_1(&v115, v116);
        v46 = v111;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 56))(v40, v44, v45);
        v47 = v118;
        v111 = v46;
        v48 = v102;
        if (v46)
        {
          v49 = v111;
          v50 = v111;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v51 = v49;
          v52 = sub_18FBCCF44();
          v53 = sub_18FBCD37C();
          v54 = v53;
          if (os_log_type_enabled(v52, v53))
          {
            v55 = swift_slowAlloc();
            v56 = (uint64_t *)swift_slowAlloc();
            v57 = v111;
            v109 = v56;
            v110 = swift_slowAlloc();
            v112[0] = v110;
            *(_DWORD *)v55 = v85;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v58 = sub_18FBA51C0(v104, v47, v100, v22);
            LODWORD(v104) = v54;
            v60 = v59;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v113 = v58;
            v114[0] = v60;
            sub_18FBCD16C();
            swift_bridgeObjectRetain();
            sub_18FBCD16C();
            swift_bridgeObjectRelease();
            v113 = sub_18FB6ECF4(v113, v114[0], v112);
            sub_18FBCD454();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v55 + 12) = 2114;
            v61 = v57;
            v62 = _swift_stdlib_bridgeErrorToNSError();
            v113 = v62;
            sub_18FBCD454();
            v63 = v109;
            *v109 = v62;

            _os_log_impl(&dword_18FB18000, v52, (os_log_type_t)v104, "Failed to remove icon: %{public}s - %{public}@", (uint8_t *)v55, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EE1898D0);
            swift_arrayDestroy();
            MEMORY[0x19400960C](v63, -1, -1);
            v64 = v110;
            swift_arrayDestroy();
            v40 = v101;
            MEMORY[0x19400960C](v64, -1, -1);
            MEMORY[0x19400960C](v55, -1, -1);

            v65 = v57;
          }
          else
          {

            v82 = v111;
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            v65 = v82;
          }

          (*(void (**)(char *, uint64_t))(v102 + 8))(v40, v99);
          v111 = 0;
        }
        else
        {
          v66 = v86;
          (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v86, v40, v99);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v67 = sub_18FBCCF44();
          v68 = sub_18FBCD394();
          v69 = v68;
          if (os_log_type_enabled(v67, v68))
          {
            v70 = swift_slowAlloc();
            v110 = swift_slowAlloc();
            v112[0] = v110;
            *(_DWORD *)v70 = v85;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v71 = sub_18FBA51C0(v104, v47, v100, v22);
            LODWORD(v109) = v69;
            v73 = v72;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v113 = v71;
            v114[0] = v73;
            sub_18FBCD16C();
            swift_bridgeObjectRetain();
            sub_18FBCD16C();
            swift_bridgeObjectRelease();
            v113 = sub_18FB6ECF4(v113, v114[0], v112);
            sub_18FBCD454();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v70 + 12) = 2082;
            sub_18FB203A8(&qword_1EE187E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
            v74 = v86;
            v75 = v99;
            v76 = sub_18FBCD7A8();
            v113 = sub_18FB6ECF4(v76, v77, v112);
            sub_18FBCD454();
            swift_bridgeObjectRelease();
            v78 = *(void (**)(char *, uint64_t))(v102 + 8);
            v78(v74, v75);
            _os_log_impl(&dword_18FB18000, v67, (os_log_type_t)v109, "Removed icon for: %{public}s (%{public}s)", (uint8_t *)v70, 0x16u);
            v79 = v110;
            swift_arrayDestroy();
            MEMORY[0x19400960C](v79, -1, -1);
            MEMORY[0x19400960C](v70, -1, -1);

            v80 = v101;
            v81 = v75;
          }
          else
          {

            v78 = *(void (**)(char *, uint64_t))(v48 + 8);
            v83 = v99;
            v78(v66, v99);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            v80 = v40;
            v81 = v83;
          }
          v78(v80, v81);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v102 + 8))(v40, v99);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v12 = v106 + 4;
      v11 = v107 - 1;
    }
    while (v107 != 1);
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v115);
}

uint64_t IconStore.ingestIcon(url:with:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  os_log_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  os_log_t v98;
  int v99;
  uint64_t v100;
  os_log_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char *v110;
  _QWORD *v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  uint64_t v116[4];
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  _QWORD v121[3];
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v113 = a1;
  v5 = sub_18FBCCF38();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_18FBCCE24();
  v10 = MEMORY[0x1E0C80A78](v9);
  v112 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v115 = (char *)&v97 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  result = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v97 - v18;
  v20 = a2[3];
  if (v20)
  {
    v107 = v17;
    v114 = v16;
    v108 = v3;
    v127 = result;
    v21 = *a2;
    v22 = a2[1];
    v23 = a2[2];
    v104 = a2[4];
    v109 = a2[5];
    v111 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v106 = v21;
    v105 = v23;
    sub_18FB7D954(v21, v22, v23, v20);
    sub_18FBCCF2C();
    sub_18FBCCDA0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1EE187EA8 != -1)
      swift_once();
    v24 = sub_18FBCCF5C();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EE192760);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 16);
    v27 = v107;
    v28 = v127;
    v26(v107, v113, v127);
    v29 = v115;
    v110 = v19;
    v26((uint64_t)v115, (uint64_t)v19, v28);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v101 = v25;
    v30 = sub_18FBCCF44();
    v31 = sub_18FBCD394();
    v32 = v31;
    v33 = os_log_type_enabled(v30, v31);
    v102 = v20;
    v103 = v22;
    if (v33)
    {
      v34 = swift_slowAlloc();
      v100 = swift_slowAlloc();
      v124 = v100;
      *(_DWORD *)v34 = 136446722;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = sub_18FBA51C0(v106, v22, v105, v20);
      v98 = v30;
      v36 = v35;
      v99 = v32;
      v38 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v117 = v36;
      v118 = v38;
      sub_18FBCD16C();
      swift_bridgeObjectRetain();
      sub_18FBCD16C();
      swift_bridgeObjectRelease();
      v117 = sub_18FB6ECF4(v117, v118, &v124);
      sub_18FBCD454();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2082;
      sub_18FB203A8(&qword_1EE187E00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v39 = sub_18FBCD7A8();
      v117 = sub_18FB6ECF4(v39, v40, &v124);
      sub_18FBCD454();
      swift_bridgeObjectRelease();
      v41 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
      v41(v27, v127);
      *(_WORD *)(v34 + 22) = 2082;
      v42 = v115;
      v28 = v127;
      v43 = sub_18FBCD7A8();
      v117 = sub_18FB6ECF4(v43, v44, &v124);
      sub_18FBCD454();
      swift_bridgeObjectRelease();
      v41((uint64_t)v42, v28);
      v45 = v98;
      _os_log_impl(&dword_18FB18000, v98, (os_log_type_t)v99, "Ingesting icon: %{public}s from url: %{public}s -> %{public}s", (uint8_t *)v34, 0x20u);
      v46 = v100;
      swift_arrayDestroy();
      MEMORY[0x19400960C](v46, -1, -1);
      MEMORY[0x19400960C](v34, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v41 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
      v41(v27, v28);
      v41((uint64_t)v29, v28);

    }
    v47 = v111 + 4;
    v48 = v111[7];
    v49 = v111[8];
    __swift_project_boxed_opaque_existential_1(v111 + 4, v48);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v49 + 16))(&v124, v48, v49);
    v50 = (uint64_t)v112;
    v51 = v110;
    sub_18FBCCDC4();
    v52 = v125;
    v53 = v126;
    __swift_project_boxed_opaque_existential_1(&v124, v125);
    v54 = v108;
    sub_18FBC742C(v50, 1, 0, v52, v53);
    if (v54)
    {
      v41(v50, v28);
      v41((uint64_t)v51, v28);
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v124);
    }
    v55 = v125;
    v56 = v126;
    __swift_project_boxed_opaque_existential_1(&v124, v125);
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 56))(v51, v55, v56);
    v57 = v125;
    v58 = v126;
    __swift_project_boxed_opaque_existential_1(&v124, v125);
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v58 + 48))(v113, v51, v57, v58);
    v115 = (char *)v41;
    v59 = v111[7];
    v60 = v111[8];
    __swift_project_boxed_opaque_existential_1(v47, v59);
    v61 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v60 + 8);
    v62 = v103;
    swift_bridgeObjectRetain();
    v63 = v102;
    swift_bridgeObjectRetain();
    v61(v121, v59, v60);
    v64 = v122;
    v65 = v123;
    v66 = __swift_project_boxed_opaque_existential_1(v121, v122);
    v116[0] = v106;
    v116[1] = v62;
    v116[2] = v105;
    v116[3] = v63;
    sub_18FBBFAF4(v116, (uint64_t)v66, v64, v65, (uint64_t)&v117);
    v67 = v119;
    v68 = v120;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v121);
    v69 = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v113 = v67;
    v70 = v67;
    v71 = v104;
    v72 = v109;
    v73 = sub_18FBC59E8(v70, v68, v104, v109);
    if (v74)
    {
      v107 = v73;
      v114 = v74;
      v75 = v125;
      v76 = v126;
      __swift_project_boxed_opaque_existential_1(&v124, v125);
      v117 = 0xD00000000000001DLL;
      v118 = 0x800000018FBE9A10;
      v121[0] = v71;
      v121[1] = v72;
      (*(void (**)(char *, uint64_t *, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v76 + 32))(v110, &v117, v121, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970], v75, v76);
      v79 = v103;
      swift_bridgeObjectRetain_n();
      v78 = v69;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v80 = v68;
      swift_bridgeObjectRetain();
      v81 = v114;
      swift_bridgeObjectRetain();
      v82 = sub_18FBCCF44();
      v83 = sub_18FBCD394();
      v84 = v83;
      if (!os_log_type_enabled(v82, v83))
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v50 = (uint64_t)v112;
        v77 = v110;
        v94 = v79;
        goto LABEL_25;
      }
      v85 = swift_slowAlloc();
      v108 = 0;
      v86 = v85;
      v104 = swift_slowAlloc();
      v117 = v104;
      *(_DWORD *)v86 = 136446722;
      v101 = v82;
      swift_bridgeObjectRetain();
      LODWORD(v100) = v84;
      swift_bridgeObjectRetain();
      v87 = sub_18FBA51C0(v106, v79, v105, v78);
      v89 = v88;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v121[0] = sub_18FB6ECF4(v87, v89, &v117);
      sub_18FBCD454();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v86 + 12) = 2082;
      if (v80)
        v90 = v113;
      else
        v90 = 1701736302;
      if (v80)
        v91 = v80;
      else
        v91 = 0xE400000000000000;
      swift_bridgeObjectRetain();
      v121[0] = sub_18FB6ECF4(v90, v91, &v117);
      sub_18FBCD454();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v86 + 22) = 2082;
      v28 = v127;
      swift_bridgeObjectRetain();
      v121[0] = sub_18FB6ECF4(v107, v81, &v117);
      sub_18FBCD454();
      swift_bridgeObjectRelease_n();
      v92 = v101;
      _os_log_impl(&dword_18FB18000, v101, (os_log_type_t)v100, "Ingested updated icon version for: %{public}s. %{public}s -> %{public}s", (uint8_t *)v86, 0x20u);
      v93 = v104;
      swift_arrayDestroy();
      MEMORY[0x19400960C](v93, -1, -1);
      MEMORY[0x19400960C](v86, -1, -1);

      v50 = (uint64_t)v112;
      v77 = v110;
    }
    else
    {
      swift_bridgeObjectRelease();
      v77 = v110;
      v78 = v69;
    }
    v94 = v103;
LABEL_25:
    v95 = (void (*)(uint64_t, uint64_t))v115;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187F08);
    v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = xmmword_18FBD6060;
    *(_QWORD *)(v96 + 32) = v106;
    *(_QWORD *)(v96 + 40) = v94;
    *(_QWORD *)(v96 + 48) = v105;
    *(_QWORD *)(v96 + 56) = v78;
    v117 = v96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FBCCFA4();
    swift_bridgeObjectRelease();
    v95(v50, v28);
    v95((uint64_t)v77, v28);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v124);
  }
  return result;
}

uint64_t IconStore.iconVersion(for:)(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[8];
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v11 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = v1[7];
  v5 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v17, v4, v5);
  v6 = v18;
  v7 = v19;
  v8 = __swift_project_boxed_opaque_existential_1(v17, v18);
  v12 = v11;
  v13 = v2;
  v14 = v3;
  sub_18FBBFAF4((uint64_t *)&v12, (uint64_t)v8, v6, v7, (uint64_t)v15);
  v9 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return v9;
}

void sub_18FBC2F98(Swift::OpaquePointer a1)
{
  IconStore.addIcons(for:)(a1);
}

void sub_18FBC2FAC(Swift::OpaquePointer a1)
{
  IconStore.removeIcons(for:)(a1);
}

uint64_t sub_18FBC2FC0(uint64_t a1, uint64_t *a2)
{
  return IconStore.ingestIcon(url:with:)(a1, a2);
}

uint64_t IconStore.iconUpdatePublisher(filterPredicate:)(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187EB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v10[1] = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(swift_allocObject() + 16) = v7;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189E08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187EC8);
  sub_18FB1E9FC(&qword_1EE187EC0, &qword_1EE189E08, MEMORY[0x1E0C95F48]);
  sub_18FBCCFE0();
  swift_release();
  swift_release();
  sub_18FB1E9FC(&qword_1EE187EB0, &qword_1EE187EB8, MEMORY[0x1E0C95708]);
  v8 = sub_18FBCCFD4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

void sub_18FBC3130(uint64_t *a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    v6 = 0;
    if (a2)
      v7 = 0x65746F6D6572;
    else
      v7 = 0x6C61636F6CLL;
    v8 = 0xE600000000000000;
    if (!a2)
      v8 = 0xE500000000000000;
    v35 = v8;
    v36 = v7;
    v9 = v4 + 56;
    v34 = MEMORY[0x1E0DEE9D8];
    v31 = v5 - 1;
    v38 = a2;
    v37 = v4;
    v39 = v5;
    v32 = v4 + 56;
    while (1)
    {
      v10 = (unint64_t *)(v9 + 32 * v6);
      v11 = v6;
      while (1)
      {
        if (v11 >= *(_QWORD *)(v4 + 16))
        {
          __break(1u);
          return;
        }
        v12 = *(v10 - 3);
        v13 = *(v10 - 2);
        v14 = *(v10 - 1);
        v15 = *v10;
        if (a2)
          break;
        if (!v15)
          goto LABEL_24;
LABEL_17:
        v16 = qword_1EE187EA8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16 != -1)
          swift_once();
        v17 = sub_18FBCCF5C();
        __swift_project_value_buffer(v17, (uint64_t)qword_1EE192760);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v18 = sub_18FBCCF44();
        v19 = sub_18FBCD370();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = swift_slowAlloc();
          v21 = swift_slowAlloc();
          v40 = v21;
          *(_DWORD *)v20 = 136315394;
          *(_QWORD *)(v20 + 4) = sub_18FB6ECF4(v36, v35, &v40);
          swift_bridgeObjectRelease();
          *(_WORD *)(v20 + 12) = 2080;
          if (v15)
          {
            v22 = v15;
          }
          else
          {
            v14 = 0x6C61636F6CLL;
            v22 = 0xE500000000000000;
          }
          swift_bridgeObjectRetain();
          *(_QWORD *)(v20 + 14) = sub_18FB6ECF4(v14, v22, &v40);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_18FB18000, v18, v19, "Icon update not published - predicate: %s vs source: %s", (uint8_t *)v20, 0x16u);
          swift_arrayDestroy();
          v23 = v21;
          v4 = v37;
          MEMORY[0x19400960C](v23, -1, -1);
          v24 = v20;
          a2 = v38;
          MEMORY[0x19400960C](v24, -1, -1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        ++v11;
        v10 += 4;
        if (v39 == v11)
          goto LABEL_31;
      }
      if (a2 == 1 && !v15)
        goto LABEL_17;
LABEL_24:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = v34;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v41 = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_18FB7F0AC(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v25 = v41;
      }
      v28 = *(_QWORD *)(v25 + 16);
      v27 = *(_QWORD *)(v25 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_18FB7F0AC((_QWORD *)(v27 > 1), v28 + 1, 1);
        v25 = v41;
      }
      v6 = v11 + 1;
      *(_QWORD *)(v25 + 16) = v28 + 1;
      v34 = v25;
      v29 = (_QWORD *)(v25 + 32 * v28);
      v29[4] = v12;
      v29[5] = v13;
      v29[6] = v14;
      v29[7] = v15;
      v9 = v32;
      a2 = v38;
      if (v31 == v11)
        goto LABEL_31;
    }
  }
  v34 = MEMORY[0x1E0DEE9D8];
LABEL_31:
  swift_bridgeObjectRelease();
  v30 = v34;
  if (!*(_QWORD *)(v34 + 16))
  {
    swift_release();
    v30 = 0;
  }
  *a3 = v30;
}

BOOL IconStore.iconExists(for:)(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  _BOOL8 v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;

  v2 = v1;
  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = v1[7];
  v8 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v7);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v33, v7, v8);
  v9 = v34;
  v10 = v35;
  v11 = __swift_project_boxed_opaque_existential_1(v33, v34);
  v26 = v3;
  v27 = v4;
  v28 = v5;
  v29 = v6;
  sub_18FBBFAF4(&v26, (uint64_t)v11, v9, v10, (uint64_t)&v30);
  v12 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
    v13 = v2[12];
    v14 = v2[13];
    v15 = __swift_project_boxed_opaque_existential_1(v2 + 9, v13);
    v26 = v3;
    v27 = v4;
    v28 = v5;
    v29 = v6;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v17 = sub_18FBCD430();
    v18 = *(_QWORD *)(v17 - 8);
    MEMORY[0x1E0C80A78](v17);
    v20 = (char *)&v26 - v19;
    sub_18FBC36D0(&v26, (uint64_t)v15, v13, v14, (uint64_t)&v26 - v19);
    v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, AssociatedTypeWitness);
    v23 = v22 != 1;
    if (v22 == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      v30 = 0u;
      v31 = 0u;
    }
    else
    {
      *((_QWORD *)&v31 + 1) = AssociatedTypeWitness;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
      (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 32))(boxed_opaque_existential_1, v20, AssociatedTypeWitness);
    }
    sub_18FBC61C8((uint64_t)&v30, (uint64_t *)&unk_1EE18A130);
  }
  else
  {
    v23 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  return v23;
}

uint64_t sub_18FBC36D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[4];
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v27 = a4;
  v28 = a3;
  v29 = a2;
  v34 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v33 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v26 = (char *)v25 - v7;
  v8 = sub_18FBCCF38();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_18FBCCE24();
  v30 = *(_QWORD *)(v12 - 8);
  v31 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v15 = a1[1];
  v18 = a1[2];
  v17 = a1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25[0] = v18;
  v25[1] = v16;
  sub_18FB7D954(v16, v15, v18, v17);
  v25[2] = v17;
  swift_bridgeObjectRelease();
  v25[3] = v15;
  swift_bridgeObjectRelease();
  sub_18FBCCF2C();
  sub_18FBCCDA0();
  swift_bridgeObjectRelease();
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20 = v26;
  v19(v11, v8);
  (*(void (**)(char *, uint64_t))(v27 + 48))(v14, v28);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v31);
  v22 = v32;
  v21 = v33;
  v23 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v34, v20, v33);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
}

uint64_t IconStore.iconURL(for:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15[4];

  v4 = sub_18FBCCF38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v15[0] = v9;
  v15[1] = v8;
  v15[2] = v11;
  v15[3] = v10;
  if (IconStore.iconExists(for:)(v15))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_18FB7D954(v9, v8, v11, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_18FBCCF2C();
    sub_18FBCCDA0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v12 = sub_18FBCCE24();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
  else
  {
    v14 = sub_18FBCCE24();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t IconStore.icon(for:completion:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v4 = v3;
  v22 = a2;
  v7 = sub_18FBCD004();
  v25 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_18FBCD034();
  v23 = *(_QWORD *)(v10 - 8);
  v24 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = a1[1];
  v16 = a1[2];
  v15 = a1[3];
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v13;
  v17[3] = v14;
  v17[4] = v16;
  v17[5] = v15;
  v18 = v22;
  v17[6] = v4;
  v17[7] = v18;
  v17[8] = a3;
  aBlock[4] = sub_18FBC5AFC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18FB858D4;
  aBlock[3] = &block_descriptor_12_1;
  v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_18FBCD010();
  v26 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&unk_1EE18A0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A0B0);
  sub_18FB1E9FC((unint64_t *)&unk_1EE18A0C0, (uint64_t *)&unk_1EE18A0B0, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  MEMORY[0x194008544](0, v12, v9, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
  return swift_release();
}

void sub_18FBC3F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint8_t *a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  void *v46;
  id v47;
  void *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  uint8_t *buf;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v65;
  __int128 aBlock;
  void (*v68)(uint64_t, void *);
  void *v69;
  void (*v70)(uint64_t);
  _QWORD *v71;

  if (qword_1EE187EA8 != -1)
    swift_once();
  v12 = sub_18FBCCF5C();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EE192760);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v13 = sub_18FBCCF44();
  v14 = sub_18FBCD394();
  v65 = a1;
  if (os_log_type_enabled(v13, v14))
  {
    buf = a5;
    v15 = a1;
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v17;
    *(_DWORD *)v16 = 136446210;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_18FBA51C0(v15, a2, a3, a4);
    v20 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 = v18;
    a5 = buf;
    sub_18FB6ECF4(v21, v20, (uint64_t *)&aBlock);
    sub_18FBCD454();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FB18000, v13, v14, "Resolving icon for: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400960C](v17, -1, -1);
    MEMORY[0x19400960C](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v22 = objc_msgSend((id)objc_opt_self(), sel_imageDescriptorNamed_, *MEMORY[0x1E0D3A898]);
  objc_msgSend(v22, sel_setShape_, 0);
  if (a4)
  {
    v23 = *((_QWORD *)a5 + 12);
    v24 = *((_QWORD *)a5 + 13);
    v25 = __swift_project_boxed_opaque_existential_1((_QWORD *)a5 + 9, v23);
    v26 = v65;
    *(_QWORD *)&aBlock = v65;
    *((_QWORD *)&aBlock + 1) = a2;
    v68 = (void (*)(uint64_t, void *))a3;
    v69 = (void *)a4;
    v27 = sub_18FBC4908(&aBlock, v22, (uint64_t)v25, v23, v24);
    if (v27)
    {
      v28 = v27;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v29 = sub_18FBCCF44();
      v30 = sub_18FBCD394();
      if (os_log_type_enabled(v29, v30))
      {
        v63 = v22;
        v31 = (uint8_t *)swift_slowAlloc();
        v60 = swift_slowAlloc();
        *(_QWORD *)&aBlock = v60;
        *(_DWORD *)v31 = 136446210;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32 = sub_18FBA51C0(v65, a2, a3, a4);
        v34 = v33;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_18FB6ECF4(v32, v34, (uint64_t *)&aBlock);
        sub_18FBCD454();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v22 = v63;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_18FB18000, v29, v30, "Resolved remotely generated icon for: %{public}s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x19400960C](v60, -1, -1);
        MEMORY[0x19400960C](v31, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      v47 = objc_msgSend(v28, sel_CGImage);
      if (v47)
      {
        v48 = v47;
        a6();

        v28 = v22;
        goto LABEL_27;
      }
      __break(1u);
      goto LABEL_29;
    }
LABEL_14:
    v28 = objc_msgSend((id)objc_opt_self(), sel_genericApplicationIcon);
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v26;
    v45[3] = a2;
    v45[4] = a3;
    v45[5] = a4;
    v45[6] = a6;
    v45[7] = a7;
    v70 = sub_18FBC609C;
    v71 = v45;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v68 = sub_18FBC4E30;
    v69 = &block_descriptor_22;
    v46 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_getCGImageForImageDescriptor_completion_, v22, v46);

    _Block_release(v46);
LABEL_27:

    return;
  }
  v35 = objc_allocWithZone(MEMORY[0x1E0D3A820]);
  swift_bridgeObjectRetain();
  v26 = v65;
  v36 = (void *)sub_18FBCD0B8();
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(v35, sel_initWithBundleIdentifier_, v36);

  v38 = objc_msgSend(v37, sel_prepareImageForDescriptor_, v22);
  if (!v38)
    goto LABEL_14;
  v28 = v38;
  if ((objc_msgSend(v28, sel_placeholder) & 1) == 0)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v49 = sub_18FBCCF44();
    v50 = sub_18FBCD394();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v62 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v62;
      *(_DWORD *)v51 = 136446210;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52 = sub_18FBA51C0(v65, a2, a3, 0);
      v54 = v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_18FB6ECF4(v52, v54, (uint64_t *)&aBlock);
      sub_18FBCD454();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_18FB18000, v49, v50, "Resolved locally generated icon for: %{public}s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x19400960C](v62, -1, -1);
      MEMORY[0x19400960C](v51, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v57 = objc_msgSend(v28, sel_CGImage);
    if (!v57)
      goto LABEL_30;
    v58 = v57;
    a6();

LABEL_26:
    goto LABEL_27;
  }

  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v28 = v28;
  v39 = sub_18FBCCF44();
  v40 = sub_18FBCD394();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc();
    v61 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v61;
    *(_DWORD *)v41 = 136446210;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42 = sub_18FBA51C0(v65, a2, a3, 0);
    v44 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_18FB6ECF4(v42, v44, (uint64_t *)&aBlock);
    sub_18FBCD454();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FB18000, v39, v40, "Resolved placeholder icon for: %{public}s", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x19400960C](v61, -1, -1);
    MEMORY[0x19400960C](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v55 = objc_msgSend(v28, sel_CGImage);
  if (v55)
  {
    v56 = v55;
    a6();

    goto LABEL_26;
  }
LABEL_29:

  __break(1u);
LABEL_30:

  __break(1u);
}

id sub_18FBC4908(__int128 *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  double v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v30 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_18FBCD430();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v30 - v15;
  v17 = *((_QWORD *)a1 + 3);
  if (!v17)
    return 0;
  v18 = *((_QWORD *)a1 + 2);
  v32 = *a1;
  v33 = v18;
  v34 = v17;
  sub_18FBC36D0((uint64_t *)&v32, a3, a4, a5, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v14, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v16, v14, AssociatedTypeWitness);
  v19 = (id)(*(uint64_t (**)(_QWORD, char *, uint64_t, uint64_t))(a5 + 56))(0, v16, a4, a5);
  if (v19)
  {
    v20 = v30;
    objc_msgSend(v30, sel_setShouldApplyMask_, 1);
    objc_msgSend(v20, sel_setShape_, 1);
    v21 = v19;
    objc_msgSend(v20, sel_scale);
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D3A7C0]), sel_initWithCGImage_scale_, v21, v22);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE189AA0);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_18FBD6750;
    *(_QWORD *)(v24 + 32) = v23;
    *(_QWORD *)&v32 = v24;
    sub_18FBCD2A4();
    v25 = objc_allocWithZone(MEMORY[0x1E0D3A820]);
    sub_18FB1F254(0, &qword_1EE18BC50);
    v26 = v23;
    v27 = (void *)sub_18FBCD280();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v25, sel_initWithImages_, v27);

    v19 = objc_msgSend(v28, sel_prepareImageForDescriptor_, v20);
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v16, AssociatedTypeWitness);
  return v19;
}

void sub_18FBC4BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD))
{
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD);
  uint64_t v23;

  if (qword_1EE187EA8 != -1)
    swift_once();
  v12 = sub_18FBCCF5C();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EE192760);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v13 = sub_18FBCCF44();
  v14 = sub_18FBCD394();
  if (os_log_type_enabled(v13, v14))
  {
    v21 = a1;
    v15 = (uint8_t *)swift_slowAlloc();
    v22 = a6;
    v16 = swift_slowAlloc();
    v23 = v16;
    *(_DWORD *)v15 = 136446210;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_18FBA51C0(a2, a3, a4, a5);
    v19 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_18FB6ECF4(v17, v19, &v23);
    sub_18FBCD454();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    a1 = v21;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_18FB18000, v13, v14, "Resolved generic icon for: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    v20 = v16;
    a6 = v22;
    MEMORY[0x19400960C](v20, -1, -1);
    MEMORY[0x19400960C](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (a1)
    a6(a1);
  else
    __break(1u);
}

void sub_18FBC4E30(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t IconStore.iconSHA256Hash(for:)(__int128 *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v11 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = v1[7];
  v5 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v15, v4, v5);
  v6 = v16;
  v7 = v17;
  v8 = __swift_project_boxed_opaque_existential_1(v15, v16);
  v12 = v11;
  v13 = v2;
  v14 = v3;
  v9 = sub_18FBC4F38((uint64_t *)&v12, (uint64_t)v8, v6, v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v9;
}

uint64_t sub_18FBC4F38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t countAndFlagsBits;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  Swift::String v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  unint64_t v30;
  unint64_t v31;

  v26 = a4;
  v27 = a3;
  v28 = a2;
  v5 = sub_18FBCCF38();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_18FBCCE24();
  v9 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v12 = a1[1];
  v14 = a1[2];
  v15 = a1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_18FB7D954(v13, v12, v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18FBCCF2C();
  v16 = v26;
  sub_18FBCCDA0();
  v17 = v27;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v29._countAndFlagsBits = 0xD00000000000001CLL;
  v29._object = (void *)0x800000018FBE99F0;
  (*(void (**)(unint64_t *__return_ptr, char *, Swift::String *, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 40))(&v30, v11, &v29, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970], v17, v16);
  if (v31)
  {
    countAndFlagsBits = v30;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v25);
  }
  else
  {
    v19 = v9;
    v20 = v25;
    v22 = URL.sha256()();
    if (v21)
    {

      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
      return 0;
    }
    else
    {
      countAndFlagsBits = v22._countAndFlagsBits;
      swift_bridgeObjectRetain();
      v30 = 0xD00000000000001CLL;
      v31 = 0x800000018FBE99F0;
      v29 = v22;
      (*(void (**)(char *, unint64_t *, Swift::String *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32))(v11, &v30, &v29, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970], v17, v16);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
      swift_bridgeObjectRelease();
    }
  }
  return countAndFlagsBits;
}

uint64_t sub_18FBC51D8(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187EB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v10[1] = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *(_BYTE *)(swift_allocObject() + 16) = v7;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189E08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187EC8);
  sub_18FB1E9FC(&qword_1EE187EC0, &qword_1EE189E08, MEMORY[0x1E0C95F48]);
  sub_18FBCCFE0();
  swift_release();
  swift_release();
  sub_18FB1E9FC(&qword_1EE187EB0, &qword_1EE187EB8, MEMORY[0x1E0C95708]);
  v8 = sub_18FBCCFD4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

BOOL sub_18FBC5338(uint64_t *a1)
{
  return IconStore.iconExists(for:)(a1);
}

uint64_t sub_18FBC535C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return IconStore.iconURL(for:)(a1, a2);
}

uint64_t sub_18FBC537C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return IconStore.icon(for:completion:)(a1, a2, a3);
}

uint64_t sub_18FBC539C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[8];
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v11 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 32), v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v17, v4, v5);
  v6 = v18;
  v7 = v19;
  v8 = __swift_project_boxed_opaque_existential_1(v17, v18);
  v12 = v11;
  v13 = v2;
  v14 = v3;
  sub_18FBBFAF4((uint64_t *)&v12, (uint64_t)v8, v6, v7, (uint64_t)v15);
  v9 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return v9;
}

uint64_t sub_18FBC5464(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v11 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 32), v4);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v5 + 8))(v15, v4, v5);
  v6 = v16;
  v7 = v17;
  v8 = __swift_project_boxed_opaque_existential_1(v15, v16);
  v12 = v11;
  v13 = v2;
  v14 = v3;
  v9 = sub_18FBC4F38((uint64_t *)&v12, (uint64_t)v8, v6, v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v9;
}

unint64_t sub_18FBC5518(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_18FBCD1F0();
  __break(1u);
  return result;
}

uint64_t sub_18FBC5564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v28 = a3;
  v25 = a2;
  v14 = sub_18FBCD3B8();
  v26 = *(_QWORD *)(v14 - 8);
  v27 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_18FBCD3A0();
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_18FBCD034();
  MEMORY[0x1E0C80A78](v18);
  v34 = a5;
  v35 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1, a1, a5);
  v31 = a6;
  v32 = a8;
  v20 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v20, v25, a6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189E08);
  swift_allocObject();
  *(_QWORD *)(a4 + 16) = sub_18FBCCFB0();
  sub_18FB1F254(0, (unint64_t *)&qword_1EE18A1A0);
  sub_18FBCD010();
  v29 = MEMORY[0x1E0DEE9D8];
  sub_18FB203A8((unint64_t *)&qword_1EE18A190, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A170);
  sub_18FB1E9FC((unint64_t *)&qword_1EE18A180, (uint64_t *)&unk_1EE18A170, MEMORY[0x1E0DEAF38]);
  sub_18FBCD484();
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v16, *MEMORY[0x1E0DEF8D0], v27);
  *(_QWORD *)(a4 + 24) = sub_18FBCD3DC();
  sub_18FB6E6A0(&v33, a4 + 32);
  sub_18FB6E6A0(&v30, a4 + 72);
  v21 = a4 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  v22 = sub_18FBCCE24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, v28, v22);
  return a4;
}

uint64_t sub_18FBC5800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;

  if ((MEMORY[0x194007F44]() & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for IconStore.FileVersionUpdateMigration(0) + 20);
    v5 = (_QWORD *)(a1 + v4);
    v6 = *(_QWORD *)(a1 + v4 + 8);
    v7 = (_QWORD *)(a2 + v4);
    v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (sub_18FBCD7C0() & 1) != 0)
          return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_18FBC587C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v23 = a7;
  v24 = a8;
  v13 = *(_QWORD *)(a6 - 8);
  v14 = MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v14);
  v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a2, a6);
  return sub_18FBC5564((uint64_t)v20, (uint64_t)v16, a3, v21, a5, a6, v23, v24);
}

uint64_t sub_18FBC5988()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18FBC59B4()
{
  uint64_t v0;

  return sub_18FBBFF80(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(char ***)(v0 + 32));
}

uint64_t sub_18FBC59C0()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_18FBC59E8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v7;

  if (a4)
  {
    v7 = a4;
    if (!a2)
    {
LABEL_15:
      swift_bridgeObjectRetain();
      return a3;
    }
  }
  else
  {
    if (a2)
      a3 = a1;
    else
      a3 = 48;
    if (a2)
      v7 = a2;
    else
      v7 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    if (!a2)
      goto LABEL_15;
  }
  if ((a3 != a1 || v7 != a2) && (sub_18FBCD7C0() & 1) == 0)
    goto LABEL_15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_18FBC5AA8()
{
  return swift_deallocObject();
}

void sub_18FBC5AB8(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_18FBC3130(a1, *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_18FBC5AC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18FBC5AFC()
{
  uint64_t v0;

  sub_18FBC3F3C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(uint8_t **)(v0 + 48), *(void (**)(void))(v0 + 56), *(_QWORD *)(v0 + 64));
}

uint64_t dispatch thunk of IconRetrieving.iconUpdatePublisher(filterPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of IconRetrieving.iconExists(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of IconRetrieving.iconURL(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of IconRetrieving.icon(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of IconRetrieving.iconVersion(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of IconRetrieving.iconSHA256Hash(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of IconStoring.addIcons(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of IconStoring.removeIcons(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of IconStoring.ingestIcon(url:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_18FBC5B88()
{
  return type metadata accessor for IconStore(0);
}

uint64_t type metadata accessor for IconStore(uint64_t a1)
{
  return sub_18FBC60D4(a1, qword_1EE189D10);
}

uint64_t sub_18FBC5BA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_18FBCCE24();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for IconStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IconStore.__allocating_init(fileManagerFactory:imageIOPrimitives:iconsFolderURL:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_18FBC5C4C()
{
  return swift_deallocObject();
}

uint64_t sub_18FBC5C5C(unint64_t a1, char *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t result;
  unint64_t v35;
  uint64_t inited;
  void *v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(id, char *, unint64_t, uint64_t, uint64_t);
  unint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  __int16 v65;
  int v66;
  char v67;
  unint64_t v68;

  v60 = a4;
  v68 = a1;
  v11 = sub_18FBCCF38();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v18 = (char *)&v52 - v17;
  v20 = *a3;
  v19 = a3[1];
  v21 = a3[2];
  LODWORD(v17) = *((unsigned __int8 *)a3 + 28);
  v22 = *((unsigned int *)a3 + 6) | ((unint64_t)*((unsigned __int8 *)a3 + 28) << 32);
  v57 = v16;
  v58 = v22;
  v23 = v17 >> 6;
  v55 = v21;
  v56 = v24;
  v54 = v19;
  if (v17 >> 6)
  {
    if (v23 == 1)
    {
      v25 = 0xEB00000000676570;
      v26 = 0x6A2E63696C627570;
    }
    else
    {
      v53 = v11;
      v27 = v68;
      v25 = 0xEA0000000000676ELL;
      v26 = 0x702E63696C627570;
      if (v21 | v19 | v20 || v58 != 0x8000000000)
        goto LABEL_9;
      v61 = v18;
      sub_18FBCCF2C();
      v26 = sub_18FBCCF14();
      v25 = v28;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v53);
      v18 = v61;
    }
  }
  else
  {
    v25 = 0xED00007874612E65;
    v26 = 0x6C7070612E6D6F63;
  }
  v27 = v68;
LABEL_9:
  v29 = v27 >> 62;
  if (v27 >> 62)
  {
    v61 = a2;
    v51 = v18;
    swift_bridgeObjectRetain();
    v30 = sub_18FBCD628();
    swift_bridgeObjectRelease();
    v18 = v51;
    a2 = v61;
  }
  else
  {
    v30 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v31 = a2;
  v32 = v18;
  v33 = v59;
  (*(void (**)(char *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24))(v31, v26, v25, v30, v59, a6);
  if (v6)
    return swift_bridgeObjectRelease();
  v61 = v32;
  swift_bridgeObjectRelease();
  v53 = 0;
  if (v23 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE187DD0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_18FBD6060;
    v37 = (void *)*MEMORY[0x1E0CBCF68];
    *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEF040];
    *(_QWORD *)(inited + 32) = v37;
    *(_QWORD *)(inited + 40) = v20;
    v38 = v37;
    v35 = sub_18FB73A0C(inited);
    goto LABEL_17;
  }
  if (!v23)
  {
    v62 = v20;
    v63 = v54;
    v64 = v55;
    v65 = WORD2(v55);
    v66 = v58;
    v67 = BYTE4(v58) & 1;
    v35 = sub_18FB73770();
LABEL_17:
    v39 = v35;
    goto LABEL_19;
  }
  v39 = 0;
LABEL_19:
  v40 = v68;
  v41 = v33;
  if (v29)
  {
    swift_bridgeObjectRetain();
    result = sub_18FBCD628();
    v40 = v68;
    v42 = result;
    if (!result)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = a6;
      v49 = *(void (**)(char *, uint64_t, uint64_t))(a6 + 40);
      v50 = v61;
      v49(v61, v41, v48);
      return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v50, v57);
    }
  }
  else
  {
    v42 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v42)
      goto LABEL_29;
  }
  if (v42 >= 1)
  {
    v43 = 0;
    v44 = *(void (**)(id, char *, unint64_t, uint64_t, uint64_t))(a6 + 32);
    v45 = v40 & 0xC000000000000001;
    do
    {
      if (v45)
        v46 = (id)MEMORY[0x1940086C4](v43, v40);
      else
        v46 = *(id *)(v40 + 8 * v43 + 32);
      v47 = v46;
      ++v43;
      v44(v46, v61, v39, v41, a6);

      v40 = v68;
    }
    while (v42 != v43);
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FBC6068()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_18FBC609C(uint64_t a1)
{
  uint64_t v1;

  sub_18FBC4BE8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(_QWORD))(v1 + 48));
}

uint64_t type metadata accessor for IconStore.FileVersionUpdateMigration(uint64_t a1)
{
  return sub_18FBC60D4(a1, (uint64_t *)&unk_1EE187E88);
}

uint64_t type metadata accessor for IconStore.FileRenameMigration(uint64_t a1)
{
  return sub_18FBC60D4(a1, (uint64_t *)&unk_1EE187E70);
}

uint64_t sub_18FBC60D4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_18FBC6108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE187E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_18FBC6150(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_18FBC618C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18FBC61C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_18FBC6204(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_18FBCCE24();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_18FBC62B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v4 = sub_18FBCCE24();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBC631C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_18FBCCE24();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_18FBC63A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v6 = sub_18FBCCE24();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_18FBC6440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_18FBCCE24();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_18FBC64BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_18FBCCE24();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_18FBC6548()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_18FBC6554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_18FBCCE24();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_18FBC65D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_18FBC65E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_18FBCCE24();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_18FBC665C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_18FBCCE24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_18FBC66D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_18FBCCE24();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_18FBC6764(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_18FBCCE24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBC67AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_18FBCCE24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_18FBC6814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_18FBCCE24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_18FBC6890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_18FBCCE24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_18FBC68EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_18FBCCE24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_18FBC6958()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_18FBC6964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_18FBCCE24();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_18FBC69F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_18FBC69FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_18FBCCE24();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_18FBC6A78()
{
  uint64_t result;
  unint64_t v1;

  result = sub_18FBCCE24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t KeybagLockState.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18FBC6B2C + 4 * byte_18FBD8F88[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_18FBC6B2C()
{
  return 0x64656B636F6C6E75;
}

uint64_t sub_18FBC6B44()
{
  return 0x64656B636F6CLL;
}

uint64_t sub_18FBC6B58()
{
  return 0x676E696B636F6CLL;
}

uint64_t sub_18FBC6B6C()
{
  return 0x64656C6261736964;
}

unint64_t sub_18FBC6B84()
{
  return 0xD000000000000010;
}

uint64_t sub_18FBC6BA0()
{
  return 0x5065636172476E69;
}

uint64_t sub_18FBC6BC4()
{
  return 0x7472657373416E69;
}

uint64_t sub_18FBC6BE8()
{
  return 0x6C6E556F69426E69;
}

Swift::Bool __swiftcall KeybagLockState.isEffectivelyLocked(for:)(ChronoServices::KeybagLockState::LockPolicy a1)
{
  unsigned __int8 *v1;
  int v2;

  v2 = *v1;
  if ((v2 - 2) < 2 || v2 == 0)
    return 1;
  if (v2 == 7)
    return (*(_BYTE *)a1 ^ 1) & 1;
  return 0;
}

ChronoServices::KeybagLockState::LockPolicy_optional __swiftcall KeybagLockState.LockPolicy.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ChronoServices::KeybagLockState::LockPolicy_optional)rawValue;
}

uint64_t KeybagLockState.LockPolicy.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t KeybagLockState.hash(into:)()
{
  return sub_18FBCD85C();
}

BOOL static KeybagLockState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t KeybagLockState.hashValue.getter()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

unint64_t sub_18FBC6CF0()
{
  unint64_t result;

  result = qword_1EE18BC58;
  if (!qword_1EE18BC58)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for KeybagLockState.LockPolicy, &type metadata for KeybagLockState.LockPolicy);
    atomic_store(result, (unint64_t *)&qword_1EE18BC58);
  }
  return result;
}

unint64_t sub_18FBC6D38()
{
  unint64_t result;

  result = qword_1EE18BC60;
  if (!qword_1EE18BC60)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for KeybagLockState, &type metadata for KeybagLockState);
    atomic_store(result, (unint64_t *)&qword_1EE18BC60);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for KeybagLockState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for KeybagLockState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_18FBC6E5C + 4 * byte_18FBD8F96[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_18FBC6E90 + 4 * byte_18FBD8F91[v4]))();
}

uint64_t sub_18FBC6E90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBC6E98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FBC6EA0);
  return result;
}

uint64_t sub_18FBC6EAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FBC6EB4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_18FBC6EB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBC6EC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeybagLockState()
{
  return &type metadata for KeybagLockState;
}

uint64_t storeEnumTagSinglePayload for KeybagLockState.LockPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_18FBC6F28 + 4 * byte_18FBD8FA0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_18FBC6F5C + 4 * byte_18FBD8F9B[v4]))();
}

uint64_t sub_18FBC6F5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBC6F64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FBC6F6CLL);
  return result;
}

uint64_t sub_18FBC6F78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FBC6F80);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_18FBC6F84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBC6F8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for KeybagLockState.LockPolicy()
{
  return &type metadata for KeybagLockState.LockPolicy;
}

BOOL static DeviceClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeviceClass.hash(into:)()
{
  return sub_18FBCD85C();
}

uint64_t DeviceClass.hashValue.getter()
{
  sub_18FBCD850();
  sub_18FBCD85C();
  return sub_18FBCD88C();
}

uint64_t sub_18FBC7028()
{
  uint64_t v0;
  uint64_t result;

  v0 = type metadata accessor for DefaultPlatformProvider();
  result = swift_allocObject();
  qword_1ECD9D598 = v0;
  unk_1ECD9D5A0 = &protocol witness table for DefaultPlatformProvider;
  qword_1ECD9D580 = result;
  return result;
}

uint64_t static DefaultPlatformProvider.shared.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1ECD9D578 != -1)
    swift_once();
  return sub_18FB6E65C((uint64_t)&qword_1ECD9D580, a1);
}

void sub_18FBC70BC(_BYTE *a1@<X8>)
{
  id v2;
  void *v3;
  int deviceClassNumber;
  char v5;

  v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    v3 = v2;
    deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    if ((deviceClassNumber - 1) > 8)
      v5 = 0;
    else
      v5 = byte_18FBD924A[deviceClassNumber - 1];
    *a1 = v5;
  }
  else
  {
    __break(1u);
  }
}

uint64_t DefaultPlatformProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultPlatformProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_18FBC7144()
{
  unint64_t result;

  result = qword_1EE18BC68;
  if (!qword_1EE18BC68)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for DeviceClass, &type metadata for DeviceClass);
    atomic_store(result, (unint64_t *)&qword_1EE18BC68);
  }
  return result;
}

void sub_18FBC7188(_BYTE *a1@<X8>)
{
  sub_18FBC70BC(a1);
}

uint64_t getEnumTagSinglePayload for DeviceClass(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_18FBC7278 + 4 * byte_18FBD9145[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_18FBC72AC + 4 * byte_18FBD9140[v4]))();
}

uint64_t sub_18FBC72AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBC72B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FBC72BCLL);
  return result;
}

uint64_t sub_18FBC72C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FBC72D0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_18FBC72D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBC72DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceClass()
{
  return &type metadata for DeviceClass;
}

uint64_t dispatch thunk of PlatformProvider.deviceClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for DefaultPlatformProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for DefaultPlatformProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultPlatformProvider.deviceClass.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

id CHSControlType.description.getter(uint64_t a1)
{
  return sub_18FBC7374(a1, (uint64_t (*)(void))NSStringFromCHSControlType);
}

id sub_18FBC7344(uint64_t a1, uint64_t a2)
{
  return sub_18FBC73D0(a1, a2, (uint64_t (*)(_QWORD))NSStringFromCHSControlType);
}

id CHSControlContentType.description.getter(uint64_t a1)
{
  return sub_18FBC7374(a1, (uint64_t (*)(void))NSStringFromCHSControlContentType);
}

id sub_18FBC735C(uint64_t a1, uint64_t a2)
{
  return sub_18FBC73D0(a1, a2, (uint64_t (*)(_QWORD))NSStringFromCHSControlContentType);
}

id CHSControlVisibility.description.getter(uint64_t a1)
{
  return sub_18FBC7374(a1, (uint64_t (*)(void))NSStringFromCHSControlVisibility);
}

id sub_18FBC7374(uint64_t a1, uint64_t (*a2)(void))
{
  id result;
  void *v3;
  uint64_t v4;

  result = (id)a2();
  if (result)
  {
    v3 = result;
    v4 = sub_18FBCD0DC();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_18FBC73C4(uint64_t a1, uint64_t a2)
{
  return sub_18FBC73D0(a1, a2, (uint64_t (*)(_QWORD))NSStringFromCHSControlVisibility);
}

id sub_18FBC73D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  _QWORD *v3;
  id result;
  void *v5;
  uint64_t v6;

  result = (id)a3(*v3);
  if (result)
  {
    v5 = result;
    v6 = sub_18FBCD0DC();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

ChronoServices::FileManagerExtendedAttributeKey __swiftcall FileManagerExtendedAttributeKey.init(stringLiteral:)(ChronoServices::FileManagerExtendedAttributeKey stringLiteral)
{
  ChronoServices::FileManagerExtendedAttributeKey *v1;

  *v1 = stringLiteral;
  return stringLiteral;
}

uint64_t sub_18FBC742C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t FileManagerExtendedAttributeKey.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *sub_18FBC7470@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_18FBC747C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_18FBC748C()
{
  unint64_t result;

  result = qword_1EE18BC70;
  if (!qword_1EE18BC70)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for FileManagerExtendedAttributeKey, &type metadata for FileManagerExtendedAttributeKey);
    atomic_store(result, (unint64_t *)&qword_1EE18BC70);
  }
  return result;
}

uint64_t sub_18FBC74D0()
{
  sub_18FBCD850();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

uint64_t sub_18FBC7528()
{
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBC756C()
{
  sub_18FBCD850();
  swift_bridgeObjectRetain();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

uint64_t sub_18FBC75C0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_18FBCD7C0();
}

unint64_t sub_18FBC75F4()
{
  unint64_t result;

  result = qword_1EE18BC78;
  if (!qword_1EE18BC78)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for FileManagerExtendedAttributeKey, &type metadata for FileManagerExtendedAttributeKey);
    atomic_store(result, (unint64_t *)&qword_1EE18BC78);
  }
  return result;
}

unint64_t sub_18FBC763C()
{
  unint64_t result;

  result = qword_1EE18BC80;
  if (!qword_1EE18BC80)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for FileManagerExtendedAttributeKey, &type metadata for FileManagerExtendedAttributeKey);
    atomic_store(result, (unint64_t *)&qword_1EE18BC80);
  }
  return result;
}

uint64_t dispatch thunk of FileManagerPrimitives.fileExists(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FileManagerPrimitives.fileExists(atPath:isDirectory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of FileManagerPrimitives.contentsOfDirectory(atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FileManagerPrimitives.setExtendedAttribute<A>(at:key:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t dispatch thunk of FileManagerPrimitives.extendedAttribute<A>(at:key:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 40))();
}

uint64_t dispatch thunk of FileManagerPrimitives.moveItem(at:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of FileManagerPrimitives.removeItem(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of FileManagerPrimitives.replaceItemAt(_:withItemAt:backupItemName:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of FileManagerPrimitives.createDirectory(at:withIntermediateDirectories:attributes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

ValueMetadata *type metadata accessor for FileManagerExtendedAttributeKey()
{
  return &type metadata for FileManagerExtendedAttributeKey;
}

uint64_t dispatch thunk of FileManagerFactory.defaultFileManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FileManagerFactory.makeFileManager()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_18FBC7750(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_18FBCCD64();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

id sub_18FBC779C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CHSWidgetService), sel_init);
  qword_1EE1897E8 = (uint64_t)result;
  return result;
}

void __swiftcall CHSWidgetService.init()(CHSWidgetService *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id static CHSWidgetService.shared.getter()
{
  if (qword_1EE1897E0 != -1)
    swift_once();
  return (id)qword_1EE1897E8;
}

id CHSWidgetService.init()()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  objc_super v5;

  v1 = OBJC_IVAR___CHSWidgetService_connection;
  v2 = (void *)objc_opt_self();
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_sharedInstance);

  v5.receiver = v3;
  v5.super_class = (Class)CHSWidgetService;
  return objc_msgSendSuper2(&v5, sel_init);
}

unint64_t type metadata accessor for CHSWidgetService()
{
  unint64_t result;

  result = qword_1EE18BC90;
  if (!qword_1EE18BC90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE18BC90);
  }
  return result;
}

uint64_t sub_18FBC7B30()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

void sub_18FBC7B6C(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_18FBC7BB8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_18FBC7C64 + 4 * byte_18FBD94A7[a2]))(0x496C6F72746E6F63);
}

uint64_t sub_18FBC7C64(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x496C6F72746E6F63 && v1 == 0xEF797469746E6564)
    v2 = 1;
  else
    v2 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_18FBC7D44(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_18FBC7D94(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_18FBC7E10 + 4 * byte_18FBD94B2[a2]))(0x54746E65746E6F63);
}

uint64_t sub_18FBC7E10(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x54746E65746E6F63 && v1 == 0xEB00000000657079)
    v2 = 1;
  else
    v2 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_18FBC7ED0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000019;
  v3 = 0x800000018FBE6FE0;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000019;
    else
      v5 = 0xD000000000000010;
    if (v4 == 1)
      v6 = 0x800000018FBE7000;
    else
      v6 = 0x800000018FBE7020;
    v7 = a2;
    if (!a2)
      goto LABEL_12;
  }
  else
  {
    v5 = 0xD000000000000019;
    v6 = 0x800000018FBE6FE0;
    v7 = a2;
    if (!a2)
      goto LABEL_12;
  }
  if (v7 == 1)
  {
    v3 = 0x800000018FBE7000;
  }
  else
  {
    v2 = 0xD000000000000010;
    v3 = 0x800000018FBE7020;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_18FBC7FC4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000011;
  v3 = 0x800000018FBE6F50;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 1684957547;
    else
      v5 = 0xD000000000000013;
    if (v4 == 1)
      v6 = 0xE400000000000000;
    else
      v6 = 0x800000018FBE6F70;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000011;
  v6 = 0x800000018FBE6F50;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 1684957547;
    else
      v2 = 0xD000000000000013;
    if (v7 == 1)
      v3 = 0xE400000000000000;
    else
      v3 = 0x800000018FBE6F70;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_18FBC80B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_18FBD6060;
  v5 = sub_18FB1E0E4();
  v6 = sub_18FB1E3F8(v5);
  v8 = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v8;
  swift_bridgeObjectRetain();
  sub_18FB1DFFC(a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1DFB0();
  v9 = sub_18FBCD070();
  v11 = v10;
  swift_bridgeObjectRelease();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_18FBD6060;
  v13 = sub_18FB1E0E4();
  v14 = sub_18FB1E3F8(v13);
  v16 = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 32) = v14;
  *(_QWORD *)(v12 + 40) = v16;
  swift_bridgeObjectRetain();
  sub_18FB1DFFC(a2);
  v17 = sub_18FBCD070();
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v9 == v17 && v11 == v19)
    v20 = 1;
  else
    v20 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20 & 1;
}

void sub_18FBC8290(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_18FBC82EC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_18FBC8350 + 4 * byte_18FBD94BA[a2]))(0x797469726F697270);
}

uint64_t sub_18FBC8350(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x797469726F697270 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_18FBC83FC(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_18FBC8448(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_18FBC84B8 + 4 * byte_18FBD94C2[a2]))(0xD000000000000011);
}

uint64_t sub_18FBC84B8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000011 && v1 == 0x800000018FBE6FB0)
    v2 = 1;
  else
    v2 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_18FBC8568(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x797469746E656469;
  else
    v3 = 0x696669746E656469;
  if (v2)
    v4 = 0xEA00000000007265;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x797469746E656469;
  else
    v5 = 0x696669746E656469;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEA00000000007265;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_18FBCD7C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_18FBC8610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    if (a4)
    {
      if (a1 != a3 || a2 != a4)
        return sub_18FBCD7C0();
      return 1;
    }
    swift_bridgeObjectRetain();
  }
  else if (!a4)
  {
    swift_bridgeObjectRetain();
    return 1;
  }
  return 0;
}

uint64_t sub_18FBC8668()
{
  sub_18FBCD850();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

void sub_18FBC8708(char a1)
{
  sub_18FBCD850();
  __asm { BR              X10 }
}

uint64_t sub_18FBC8760()
{
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

uint64_t sub_18FBC87D8()
{
  sub_18FBCD850();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

void sub_18FBC887C(char a1)
{
  sub_18FBCD850();
  __asm { BR              X10 }
}

uint64_t sub_18FBC88CC()
{
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

void sub_18FBC8954(char a1)
{
  sub_18FBCD850();
  __asm { BR              X10 }
}

uint64_t sub_18FBC89A8()
{
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

void sub_18FBC8A1C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_18FBC8A60()
{
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18FBC8B04()
{
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

void sub_18FBC8B80(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_18FBC8BC8()
{
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

void sub_18FBC8C2C(uint64_t a1, char a2)
{
  sub_18FBCD850();
  __asm { BR              X10 }
}

uint64_t sub_18FBC8C80()
{
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

void sub_18FBC8CF8(uint64_t a1, char a2)
{
  sub_18FBCD850();
  __asm { BR              X10 }
}

uint64_t sub_18FBC8D48()
{
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

uint64_t sub_18FBC8DBC()
{
  sub_18FBCD850();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

uint64_t sub_18FBC8E58()
{
  sub_18FBCD850();
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

void sub_18FBC8EF8(uint64_t a1, char a2)
{
  sub_18FBCD850();
  __asm { BR              X10 }
}

uint64_t sub_18FBC8F44()
{
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

void sub_18FBC8FCC(uint64_t a1, char a2)
{
  sub_18FBCD850();
  __asm { BR              X10 }
}

uint64_t sub_18FBC9020()
{
  sub_18FBCD130();
  swift_bridgeObjectRelease();
  return sub_18FBCD88C();
}

uint64_t ControlSessionSubscriptionRequest.sessionKey.getter()
{
  return swift_retain();
}

uint64_t (*sub_18FBC90E8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_18FBC9124()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_18FBC9154(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_18FBC9190())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_18FBC91CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 40);
  v6 = *(_QWORD *)(v4 + 48);
  *(_QWORD *)(v4 + 40) = v2;
  *(_QWORD *)(v4 + 48) = v3;
  sub_18FB840F4(v2, v3);
  return sub_18FB840E0(v5, v6);
}

uint64_t sub_18FBC9238()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  sub_18FB840F4(v1, *(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t sub_18FBC9284(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return sub_18FB840E0(v5, v6);
}

uint64_t ControlSessionSubscriptionRequest.__allocating_init(sessionKey:priority:visibility:environmentModifiers:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;

  v10 = swift_allocObject();
  v11 = *a2;
  *(_OWORD *)(v10 + 40) = xmmword_18FBD72B0;
  *(_QWORD *)(v10 + 16) = a1;
  *(_BYTE *)(v10 + 24) = v11;
  *(_QWORD *)(v10 + 32) = a3;
  swift_beginAccess();
  v12 = *(_QWORD *)(v10 + 40);
  v13 = *(_QWORD *)(v10 + 48);
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  sub_18FB840E0(v12, v13);
  return v10;
}

uint64_t ControlSessionSubscriptionRequest.init(sessionKey:priority:visibility:environmentModifiers:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v8;
  uint64_t v9;
  unint64_t v10;

  v8 = *a2;
  *(_OWORD *)(v5 + 40) = xmmword_18FBD72B0;
  *(_QWORD *)(v5 + 16) = a1;
  *(_BYTE *)(v5 + 24) = v8;
  *(_QWORD *)(v5 + 32) = a3;
  swift_beginAccess();
  v9 = *(_QWORD *)(v5 + 40);
  v10 = *(_QWORD *)(v5 + 48);
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = a5;
  sub_18FB840E0(v9, v10);
  return v5;
}

void sub_18FBC93F4(char *a1)
{
  sub_18FBC8290(*a1);
}

void sub_18FBC9400()
{
  char *v0;

  sub_18FBC8954(*v0);
}

void sub_18FBC9408()
{
  __asm { BR              X10 }
}

uint64_t sub_18FBC9448()
{
  sub_18FBCD130();
  return swift_bridgeObjectRelease();
}

void sub_18FBC94A8(uint64_t a1)
{
  char *v1;

  sub_18FBC8CF8(a1, *v1);
}

uint64_t sub_18FBC94B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FBC9908();
  *a1 = result;
  return result;
}

uint64_t sub_18FBC94DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_18FBC9510 + 4 * byte_18FBD94F4[*v0]))();
}

void sub_18FBC9510(_QWORD *a1@<X8>)
{
  *a1 = 0x797469726F697270;
  a1[1] = 0xE800000000000000;
}

void sub_18FBC952C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x696C696269736976;
  a1[1] = v1 + 15;
}

void sub_18FBC9548(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x800000018FBE70A0;
}

uint64_t sub_18FBC9568()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_18FBC959C + 4 * byte_18FBD94F8[*v0]))(0x4B6E6F6973736573, 0xEA00000000007965);
}

uint64_t sub_18FBC959C()
{
  return 0x797469726F697270;
}

uint64_t sub_18FBC95B4()
{
  return 0x696C696269736976;
}

unint64_t sub_18FBC95CC()
{
  return 0xD000000000000014;
}

uint64_t sub_18FBC95E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_18FBC9908();
  *a1 = result;
  return result;
}

uint64_t sub_18FBC960C()
{
  sub_18FBC9BF8();
  return sub_18FBCD8BC();
}

uint64_t sub_18FBC9634()
{
  sub_18FBC9BF8();
  return sub_18FBCD8C8();
}

uint64_t ControlSessionSubscriptionRequest.__allocating_init(from:)(_QWORD *a1)
{
  return sub_18FBC9950(a1);
}

uint64_t sub_18FBC9670(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;
  char v12;
  char v13;
  uint64_t v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189720);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBC9BF8();
  sub_18FBCD8B0();
  v14 = *(_QWORD *)(v3 + 16);
  v13 = 0;
  type metadata accessor for ControlSessionKey();
  sub_18FBCA04C(&qword_1EE1896C8, (uint64_t)&protocol conformance descriptor for ControlSessionKey);
  sub_18FBCD76C();
  if (!v2)
  {
    swift_beginAccess();
    v13 = *(_BYTE *)(v3 + 24);
    v12 = 1;
    sub_18FBC9C3C();
    sub_18FBCD76C();
    swift_beginAccess();
    v12 = 2;
    sub_18FBCD784();
    swift_beginAccess();
    v11 = *(_OWORD *)(v3 + 40);
    v10[15] = 3;
    sub_18FB90CEC();
    sub_18FBCD73C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ControlSessionSubscriptionRequest.deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FB840E0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return v0;
}

uint64_t ControlSessionSubscriptionRequest.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  sub_18FB840E0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return swift_deallocClassInstance();
}

uint64_t sub_18FBC98C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_18FBC9950(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_18FBC98E8(_QWORD *a1)
{
  return sub_18FBC9670(a1);
}

uint64_t sub_18FBC9908()
{
  unint64_t v0;

  v0 = sub_18FBCD688();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_18FBC9950(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE188068);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_18FBC9BF8();
  sub_18FBCD8A4();
  if (!v1)
  {
    type metadata accessor for ControlSessionKey();
    v19 = 0;
    sub_18FBCA04C((unint64_t *)&unk_1EE187F70, (uint64_t)&protocol conformance descriptor for ControlSessionKey);
    sub_18FBCD6E8();
    v8 = v17;
    v19 = 1;
    sub_18FBCA08C();
    sub_18FBCD6E8();
    v9 = v17;
    v19 = 3;
    sub_18FB909F4();
    sub_18FBCD6B8();
    v11 = v18;
    v16 = v17;
    LOBYTE(v17) = 2;
    v15 = sub_18FBCD700();
    type metadata accessor for ControlSessionSubscriptionRequest();
    v7 = swift_allocObject();
    v14 = v11;
    *(_OWORD *)(v7 + 40) = xmmword_18FBD72B0;
    *(_QWORD *)(v7 + 16) = v8;
    *(_BYTE *)(v7 + 24) = v9;
    *(_QWORD *)(v7 + 32) = v15;
    swift_beginAccess();
    v12 = *(_QWORD *)(v7 + 40);
    v13 = *(_QWORD *)(v7 + 48);
    *(_QWORD *)(v7 + 40) = v16;
    *(_QWORD *)(v7 + 48) = v14;
    sub_18FB840E0(v12, v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v7;
}

unint64_t sub_18FBC9BF8()
{
  unint64_t result;

  result = qword_1EE1899B0;
  if (!qword_1EE1899B0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD96C4, &type metadata for ControlSessionSubscriptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1899B0);
  }
  return result;
}

unint64_t sub_18FBC9C3C()
{
  unint64_t result;

  result = qword_1EE1896B0;
  if (!qword_1EE1896B0)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for TaskPriority, &type metadata for TaskPriority);
    atomic_store(result, (unint64_t *)&qword_1EE1896B0);
  }
  return result;
}

uint64_t sub_18FBC9C80@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 24);
  return result;
}

uint64_t sub_18FBC9CC4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 24) = v2;
  return result;
}

uint64_t sub_18FBC9D04@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return result;
}

uint64_t sub_18FBC9D48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_18FBC9D88@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  v5 = *(_QWORD *)(v3 + 48);
  *a2 = v4;
  a2[1] = v5;
  return sub_18FB840F4(v4, v5);
}

uint64_t type metadata accessor for ControlSessionSubscriptionRequest()
{
  return objc_opt_self();
}

uint64_t method lookup function for ControlSessionSubscriptionRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.priority.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.priority.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.priority.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.visibility.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.visibility.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.visibility.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.environmentModifiers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.environmentModifiers.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.environmentModifiers.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.__allocating_init(sessionKey:priority:visibility:environmentModifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ControlSessionSubscriptionRequest.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t storeEnumTagSinglePayload for ControlSessionSubscriptionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_18FBC9EF4 + 4 * byte_18FBD9501[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_18FBC9F28 + 4 * byte_18FBD94FC[v4]))();
}

uint64_t sub_18FBC9F28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBC9F30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18FBC9F38);
  return result;
}

uint64_t sub_18FBC9F44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18FBC9F4CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_18FBC9F50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18FBC9F58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlSessionSubscriptionRequest.CodingKeys()
{
  return &type metadata for ControlSessionSubscriptionRequest.CodingKeys;
}

unint64_t sub_18FBC9F78()
{
  unint64_t result;

  result = qword_1EE18BC98;
  if (!qword_1EE18BC98)
  {
    result = MEMORY[0x19400954C](&unk_18FBD969C, &type metadata for ControlSessionSubscriptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE18BC98);
  }
  return result;
}

unint64_t sub_18FBC9FC0()
{
  unint64_t result;

  result = qword_1EE1899C0;
  if (!qword_1EE1899C0)
  {
    result = MEMORY[0x19400954C](&unk_18FBD95D4, &type metadata for ControlSessionSubscriptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1899C0);
  }
  return result;
}

unint64_t sub_18FBCA008()
{
  unint64_t result;

  result = qword_1EE1899B8;
  if (!qword_1EE1899B8)
  {
    result = MEMORY[0x19400954C](&unk_18FBD95FC, &type metadata for ControlSessionSubscriptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE1899B8);
  }
  return result;
}

uint64_t sub_18FBCA04C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ControlSessionKey();
    result = MEMORY[0x19400954C](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18FBCA08C()
{
  unint64_t result;

  result = qword_1EE187F60;
  if (!qword_1EE187F60)
  {
    result = MEMORY[0x19400954C](&protocol conformance descriptor for TaskPriority, &type metadata for TaskPriority);
    atomic_store(result, (unint64_t *)&qword_1EE187F60);
  }
  return result;
}

void DeviceScopedIdentity.init(id:deviceID:)(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for DeviceScopedIdentity();
}

uint64_t sub_18FBCA13C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(result + 60));
  *v4 = v2;
  v4[1] = v1;
  return result;
}

void type metadata accessor for DeviceScopedIdentity()
{
  JUMPOUT(0x1940094E0);
}

void DeviceScopedIdentity.init(rawValue:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  _BYTE v8[8];

  Token.init(rawValue:)(*(Swift::String *)&a1);
  sub_18FBCA37C((uint64_t)v8, a2, a3, a4);
}

uint64_t DeviceScopedIdentity.id.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DeviceScopedIdentity.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DeviceScopedIdentity.id.modify())()
{
  return nullsub_1;
}

uint64_t DeviceScopedIdentity.deviceID.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3 + 60));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*DeviceScopedIdentity.deviceID.modify())()
{
  return nullsub_1;
}

uint64_t sub_18FBCA274()
{
  MEMORY[0x19400954C](&protocol conformance descriptor for DeviceScopedIdentity<A>);
  return sub_18FBCD250();
}

uint64_t sub_18FBCA2D8()
{
  MEMORY[0x19400954C](&protocol conformance descriptor for DeviceScopedIdentity<A>);
  return sub_18FBCD208();
}

uint64_t sub_18FBCA32C(uint64_t a1)
{
  MEMORY[0x19400954C](&protocol conformance descriptor for DeviceScopedIdentity<A>, a1);
  return sub_18FBCD22C();
}

void sub_18FBCA37C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD **)v8;
  v12 = *(_QWORD *)(*(_QWORD *)v8 + 16);
  v19 = v13;
  v20 = v14;
  v18 = v15;
  if (v12 == 1)
  {
    v16 = v11[4];
    v17 = v11[5];
    goto LABEL_5;
  }
  if (v12 == 2)
  {
    v16 = v11[6];
    v17 = v11[7];
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21 = v16;
    v22 = v17;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 16))(&v21, a2, a3);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a4, v10, a2);
    v21 = a2;
    v22 = a3;
    v23 = v18;
    v24 = v19;
    v25 = v20;
    type metadata accessor for DeviceScopedIdentity();
  }
  __break(1u);
}

void sub_18FBCA4B0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  DeviceScopedIdentity.init(rawValue:)(*a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_18FBCA4DC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 56))(v1, 0, 1, v0);
}

uint64_t DeviceScopedIdentity.description.getter(uint64_t a1)
{
  uint64_t v1;
  char *v3;

  DeviceScopedIdentity.token.getter(a1, &v3);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1DFB0();
  v1 = sub_18FBCD070();
  swift_bridgeObjectRelease_n();
  return v1;
}

void DeviceScopedIdentity.init(stringLiteral:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  Swift::String v27;
  _QWORD v31[2];

  v31[0] = a1;
  v31[1] = a2;
  sub_18FBCA810();
  v5 = sub_18FBCD34C();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v31[0] = MEMORY[0x1E0DEE9D8];
    sub_18FB7F058(0, v6, 0);
    v7 = v31[0];
    v8 = (uint64_t *)(v5 + 56);
    do
    {
      v9 = *(v8 - 3);
      v10 = *(v8 - 2);
      v11 = *(v8 - 1);
      v12 = *v8;
      swift_bridgeObjectRetain();
      v13 = MEMORY[0x194008280](v9, v10, v11, v12);
      v15 = v14;
      swift_bridgeObjectRelease();
      v31[0] = v7;
      v17 = *(_QWORD *)(v7 + 16);
      v16 = *(_QWORD *)(v7 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_18FB7F058((char *)(v16 > 1), v17 + 1, 1);
        v7 = v31[0];
      }
      *(_QWORD *)(v7 + 16) = v17 + 1;
      v18 = v7 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
      v8 += 4;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE18A120);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_18FBD6060;
  v20 = sub_18FB1E0E4();
  v21 = sub_18FB1E3F8(v20);
  v23 = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 32) = v21;
  *(_QWORD *)(v19 + 40) = v23;
  v31[0] = v19;
  swift_bridgeObjectRetain();
  sub_18FB1DFFC(v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A140);
  sub_18FB1DFB0();
  v24 = sub_18FBCD070();
  v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = v24;
  v27._object = v26;
  Token.init(rawValue:)(v27);
  sub_18FBCA37C((uint64_t)v31, a3, a4, a5);
}

void sub_18FBCA7F4(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  DeviceScopedIdentity.init(stringLiteral:)(*a1, a1[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

unint64_t sub_18FBCA810()
{
  unint64_t result;

  result = qword_1EE18A1A8;
  if (!qword_1EE18A1A8)
  {
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEA9A8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EE18A1A8);
  }
  return result;
}

void sub_18FBCA854()
{
  JUMPOUT(0x19400954CLL);
}

uint64_t sub_18FBCA864(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 48);
}

void sub_18FBCA86C()
{
  JUMPOUT(0x19400954CLL);
}

void sub_18FBCA87C()
{
  JUMPOUT(0x19400954CLL);
}

void sub_18FBCA88C()
{
  JUMPOUT(0x19400954CLL);
}

uint64_t sub_18FBCA89C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_18FBCA8A4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_18FBCA918(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_18FBCA9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_18FBCAA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_18FBCAAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

void sub_18FBCAB10(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_18FBCAC04()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x18FBCAC88);
}

void sub_18FBCAC0C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x18FBCAC14);
  JUMPOUT(0x18FBCAC88);
}

void sub_18FBCAC5C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x18FBCAC88);
}

void sub_18FBCAC64()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x18FBCAC88);
}

uint64_t sub_18FBCAC6C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x18FBCAC78);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = a2;
LABEL_6:
    JUMPOUT(0x18FBCAC88);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_18FBCACA0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

ChronoServices::Token sub_18FBCAE14(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  Swift::String v8;
  ChronoServices::Token result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[4];

  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  result.storage._rawValue = Token.init(rawValue:)(v8).storage._rawValue;
  v10 = *(_QWORD *)(v15[0] + 16);
  if (v10 == 1)
  {
    v12 = *(_QWORD *)(v15[0] + 32);
    v11 = *(_QWORD *)(v15[0] + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13 = 0;
    v14 = 0;
LABEL_5:
    v15[0] = v12;
    v15[1] = v11;
    v15[2] = v13;
    v15[3] = v14;
    IconStore.icon(for:completion:)(v15, a3, a4);
    swift_bridgeObjectRelease();
    return (ChronoServices::Token)swift_bridgeObjectRelease();
  }
  if (v10 == 2)
  {
    v13 = *(_QWORD *)(v15[0] + 32);
    v14 = *(_QWORD *)(v15[0] + 40);
    v12 = *(_QWORD *)(v15[0] + 48);
    v11 = *(_QWORD *)(v15[0] + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_18FBCAF98(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18[4];
  _BYTE v19[8];
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v3 = (uint64_t *)(a1 + OBJC_IVAR___CHSExtensionIdentity_containerBundleIdentifier);
  swift_beginAccess();
  v4 = v3[1];
  if (!v4)
    return 0;
  v5 = *v3;
  v6 = (uint64_t *)(a1 + OBJC_IVAR___CHSExtensionIdentity_deviceIdentifier);
  swift_beginAccess();
  v8 = *v6;
  v7 = v6[1];
  v9 = *(_QWORD **)(v1 + OBJC_IVAR___CHSIconResolver_iconStore);
  v10 = v9[7];
  v11 = v9[8];
  __swift_project_boxed_opaque_existential_1(v9 + 4, v10);
  v12 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v21, v10, v11);
  v13 = v22;
  v14 = v23;
  v15 = __swift_project_boxed_opaque_existential_1(v21, v22);
  v18[0] = v5;
  v18[1] = v4;
  v18[2] = v8;
  v18[3] = v7;
  sub_18FBBFAF4(v18, (uint64_t)v15, v13, v14, (uint64_t)v19);
  v16 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t type metadata accessor for CHSIconResolver(uint64_t a1)
{
  return sub_18FB1F254(a1, &qword_1EE18BD08);
}

uint64_t sub_18FBCB18C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_18FBCB1B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_18FBCB1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  __int128 v17;
  uint64_t v18;
  _UNKNOWN **v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;

  v16[0] = a3;
  v7 = sub_18FBCD3B8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_18FBCD3A0();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_18FBCD034();
  MEMORY[0x1E0C80A78](v12);
  v21 = type metadata accessor for ConcreteFileManagerFactory();
  v22 = &protocol witness table for ConcreteFileManagerFactory;
  *(_QWORD *)&v20 = a1;
  v18 = type metadata accessor for ConcreteImageIOPrimitives();
  v19 = &protocol witness table for ConcreteImageIOPrimitives;
  *(_QWORD *)&v17 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE189E08);
  swift_allocObject();
  *(_QWORD *)(a4 + 16) = sub_18FBCCFB0();
  sub_18FB1F254(0, (unint64_t *)&qword_1EE18A1A0);
  sub_18FBCD010();
  v16[1] = MEMORY[0x1E0DEE9D8];
  sub_18FBCB40C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE18A170);
  sub_18FBCB454();
  sub_18FBCD484();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF8D0], v7);
  *(_QWORD *)(a4 + 24) = sub_18FBCD3DC();
  sub_18FB6E6A0(&v20, a4 + 32);
  sub_18FB6E6A0(&v17, a4 + 72);
  v13 = a4 + OBJC_IVAR____TtC14ChronoServices9IconStore_iconsFolderURL;
  v14 = sub_18FBCCE24();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, v16[0], v14);
  return a4;
}

unint64_t sub_18FBCB40C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE18A190;
  if (!qword_1EE18A190)
  {
    v1 = sub_18FBCD3A0();
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1EE18A190);
  }
  return result;
}

unint64_t sub_18FBCB454()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE18A180;
  if (!qword_1EE18A180)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE18A170);
    result = MEMORY[0x19400954C](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EE18A180);
  }
  return result;
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::EndTable()
{
  __assert_rtn("EndTable", "flatbuffers.h", 1450, "nested");
}

{
  __assert_rtn("EndTable", "flatbuffers.h", 1465, "table_object_size < 0x10000");
}

{
  __assert_rtn("data", "flatbuffers.h", 1016, "cur_");
}

{
  __assert_rtn("scratch_end", "flatbuffers.h", 1026, "scratch_");
}

{
  __assert_rtn("scratch_data", "flatbuffers.h", 1021, "buf_");
}

{
  __assert_rtn("EndTable", "flatbuffers.h", 1476, "!ReadScalar<voffset_t>(buf_.data() + field_location->id)");
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::Release()
{
  __assert_rtn("Finished", "flatbuffers.h", 1319, "finished");
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::NotNested()
{
  __assert_rtn("NotNested", "flatbuffers.h", 1434, "!num_field_loc");
}

{
  __assert_rtn("NotNested", "flatbuffers.h", 1432, "!nested");
}

void apple::aiml::flatbuffers2::vector_downward::ensure_space()
{
  __assert_rtn("ensure_space", "flatbuffers.h", 988, "cur_ >= scratch_ && scratch_ >= buf_");
}

{
  __assert_rtn("ensure_space", "flatbuffers.h", 992, "size() < FLATBUFFERS_MAX_BUFFER_SIZE");
}

void apple::aiml::flatbuffers2::Allocator::reallocate_downward()
{
  __assert_rtn("reallocate_downward", "flatbuffers.h", 687, "new_size > old_size");
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::ReferTo()
{
  __assert_rtn("ReferTo", "flatbuffers.h", 1419, "off && off <= GetSize()");
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::EndVector()
{
  __assert_rtn("EndVector", "flatbuffers.h", 1672, "nested");
}

void apple::aiml::flatbuffers2::FlatBufferBuilder::Finish()
{
  __assert_rtn("Finish", "flatbuffers.h", 2154, "strlen(file_identifier) == kFileIdentifierLength");
}

void _intentDataFromIntent_cold_1(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v3 = 138543362;
  v4 = a1;
  OUTLINED_FUNCTION_4_0(&dword_18FB18000, a2, a3, "Error encoding intent: %{public}@", (uint8_t *)&v3);
}

void _CHSSystemVersionStringToCompareAgainstFromSDKAndPlatform_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 134218240;
  v4 = a1;
  v5 = 2048;
  v6 = a2;
  _os_log_error_impl(&dword_18FB18000, log, OS_LOG_TYPE_ERROR, "Unable to find corresponding system version for version %lu on platform %lu", (uint8_t *)&v3, 0x16u);
}

uint64_t sub_18FBCCC5C()
{
  return MEMORY[0x1E0C90588]();
}

uint64_t sub_18FBCCC68()
{
  return MEMORY[0x1E0C91818]();
}

uint64_t sub_18FBCCC74()
{
  return MEMORY[0x1E0CADE68]();
}

uint64_t sub_18FBCCC80()
{
  return MEMORY[0x1E0CADE90]();
}

uint64_t sub_18FBCCC8C()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_18FBCCC98()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_18FBCCCA4()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t sub_18FBCCCB0()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_18FBCCCBC()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_18FBCCCC8()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_18FBCCCD4()
{
  return MEMORY[0x1E0CAEB20]();
}

uint64_t sub_18FBCCCE0()
{
  return MEMORY[0x1E0CAEB38]();
}

uint64_t sub_18FBCCCEC()
{
  return MEMORY[0x1E0CAEB50]();
}

uint64_t sub_18FBCCCF8()
{
  return MEMORY[0x1E0CAF5C8]();
}

uint64_t sub_18FBCCD04()
{
  return MEMORY[0x1E0CAF5F8]();
}

uint64_t sub_18FBCCD10()
{
  return MEMORY[0x1E0CAF608]();
}

uint64_t sub_18FBCCD1C()
{
  return MEMORY[0x1E0CAF628]();
}

uint64_t sub_18FBCCD28()
{
  return MEMORY[0x1E0CAF638]();
}

uint64_t sub_18FBCCD34()
{
  return MEMORY[0x1E0CAF668]();
}

uint64_t sub_18FBCCD40()
{
  return MEMORY[0x1E0CAF670]();
}

uint64_t sub_18FBCCD4C()
{
  return MEMORY[0x1E0CAF900]();
}

uint64_t sub_18FBCCD58()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_18FBCCD64()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_18FBCCD70()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_18FBCCD7C()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_18FBCCD88()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_18FBCCD94()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_18FBCCDA0()
{
  return MEMORY[0x1E0DF0170]();
}

uint64_t sub_18FBCCDAC()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_18FBCCDB8()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_18FBCCDC4()
{
  return MEMORY[0x1E0CAFEB8]();
}

uint64_t sub_18FBCCDD0()
{
  return MEMORY[0x1E0CAFED8]();
}

uint64_t sub_18FBCCDDC()
{
  return MEMORY[0x1E0CAFEE0]();
}

uint64_t sub_18FBCCDE8()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_18FBCCDF4()
{
  return MEMORY[0x1E0CAFF30]();
}

uint64_t sub_18FBCCE00()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_18FBCCE0C()
{
  return MEMORY[0x1E0CAFF98]();
}

uint64_t sub_18FBCCE18()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_18FBCCE24()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_18FBCCE30()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_18FBCCE3C()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_18FBCCE48()
{
  return MEMORY[0x1E0CB00F0]();
}

uint64_t sub_18FBCCE54()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_18FBCCE60()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_18FBCCE6C()
{
  return MEMORY[0x1E0CB0220]();
}

uint64_t sub_18FBCCE78()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_18FBCCE84()
{
  return MEMORY[0x1E0CB02C0]();
}

uint64_t sub_18FBCCE90()
{
  return MEMORY[0x1E0CB02D8]();
}

uint64_t sub_18FBCCE9C()
{
  return MEMORY[0x1E0DEF0A0]();
}

uint64_t sub_18FBCCEA8()
{
  return MEMORY[0x1E0DEF0A8]();
}

uint64_t sub_18FBCCEB4()
{
  return MEMORY[0x1E0DEF0B0]();
}

uint64_t sub_18FBCCEC0()
{
  return MEMORY[0x1E0D87530]();
}

uint64_t sub_18FBCCECC()
{
  return MEMORY[0x1E0D87538]();
}

uint64_t sub_18FBCCED8()
{
  return MEMORY[0x1E0D87540]();
}

uint64_t sub_18FBCCEE4()
{
  return MEMORY[0x1E0D87548]();
}

uint64_t sub_18FBCCEF0()
{
  return MEMORY[0x1E0D87550]();
}

uint64_t sub_18FBCCEFC()
{
  return MEMORY[0x1E0D87818]();
}

uint64_t sub_18FBCCF08()
{
  return MEMORY[0x1E0D87828]();
}

uint64_t sub_18FBCCF14()
{
  return MEMORY[0x1E0DF0190]();
}

uint64_t sub_18FBCCF20()
{
  return MEMORY[0x1E0DF0210]();
}

uint64_t sub_18FBCCF2C()
{
  return MEMORY[0x1E0DF0278]();
}

uint64_t sub_18FBCCF38()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_18FBCCF44()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_18FBCCF50()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_18FBCCF5C()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_18FBCCF68()
{
  return MEMORY[0x1E0DF2268]();
}

uint64_t sub_18FBCCF74()
{
  return MEMORY[0x1E0DF2010]();
}

uint64_t sub_18FBCCF80()
{
  return MEMORY[0x1E0DF2018]();
}

uint64_t sub_18FBCCF8C()
{
  return MEMORY[0x1E0DF2040]();
}

uint64_t sub_18FBCCF98()
{
  return MEMORY[0x1E0DEF3B8]();
}

uint64_t sub_18FBCCFA4()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t sub_18FBCCFB0()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t sub_18FBCCFBC()
{
  return MEMORY[0x1E0C95F60]();
}

uint64_t sub_18FBCCFC8()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t sub_18FBCCFD4()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_18FBCCFE0()
{
  return MEMORY[0x1E0C961D8]();
}

uint64_t sub_18FBCCFEC()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_18FBCCFF8()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_18FBCD004()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_18FBCD010()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_18FBCD01C()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_18FBCD028()
{
  return MEMORY[0x1E0DEF588]();
}

uint64_t sub_18FBCD034()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_18FBCD040()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_18FBCD04C()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_18FBCD058()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_18FBCD064()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_18FBCD070()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_18FBCD07C()
{
  return MEMORY[0x1E0DEA3E0]();
}

uint64_t sub_18FBCD088()
{
  return MEMORY[0x1E0DEA3E8]();
}

uint64_t sub_18FBCD094()
{
  return MEMORY[0x1E0DEA3F0]();
}

uint64_t sub_18FBCD0A0()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_18FBCD0AC()
{
  return MEMORY[0x1E0CB1850]();
}

uint64_t sub_18FBCD0B8()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_18FBCD0C4()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_18FBCD0D0()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_18FBCD0DC()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_18FBCD0E8()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_18FBCD0F4()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_18FBCD100()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_18FBCD10C()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_18FBCD118()
{
  return MEMORY[0x1E0DEA6B8]();
}

uint64_t sub_18FBCD124()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_18FBCD130()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_18FBCD13C()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_18FBCD148()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_18FBCD154()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_18FBCD160()
{
  return MEMORY[0x1E0DEA7D8]();
}

uint64_t sub_18FBCD16C()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_18FBCD178()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_18FBCD184()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_18FBCD190()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_18FBCD19C()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_18FBCD1A8()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_18FBCD1B4()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_18FBCD1C0()
{
  return MEMORY[0x1E0DEA948]();
}

uint64_t sub_18FBCD1CC()
{
  return MEMORY[0x1E0DEA9C0]();
}

uint64_t sub_18FBCD1D8()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_18FBCD1E4()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_18FBCD1F0()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_18FBCD1FC()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_18FBCD208()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_18FBCD214()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_18FBCD220()
{
  return MEMORY[0x1E0DEACF8]();
}

uint64_t sub_18FBCD22C()
{
  return MEMORY[0x1E0DEAD00]();
}

uint64_t sub_18FBCD238()
{
  return MEMORY[0x1E0DEAD08]();
}

uint64_t sub_18FBCD244()
{
  return MEMORY[0x1E0DEAD10]();
}

uint64_t sub_18FBCD250()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_18FBCD25C()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_18FBCD268()
{
  return MEMORY[0x1E0DEAD70]();
}

uint64_t sub_18FBCD274()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_18FBCD280()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_18FBCD28C()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_18FBCD298()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_18FBCD2A4()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_18FBCD2B0()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_18FBCD2BC()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_18FBCD2C8()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_18FBCD2D4()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_18FBCD2E0()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_18FBCD2EC()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_18FBCD2F8()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_18FBCD304()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_18FBCD310()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_18FBCD31C()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_18FBCD328()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_18FBCD334()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_18FBCD340()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_18FBCD34C()
{
  return MEMORY[0x1E0DF1FC0]();
}

uint64_t sub_18FBCD358()
{
  return MEMORY[0x1E0CB1CF0]();
}

uint64_t sub_18FBCD364()
{
  return MEMORY[0x1E0CB1DC0]();
}

uint64_t sub_18FBCD370()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_18FBCD37C()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_18FBCD388()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_18FBCD394()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_18FBCD3A0()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_18FBCD3AC()
{
  return MEMORY[0x1E0DEF868]();
}

uint64_t sub_18FBCD3B8()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_18FBCD3C4()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t sub_18FBCD3D0()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_18FBCD3DC()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_18FBCD3E8()
{
  return MEMORY[0x1E0CB2020]();
}

uint64_t sub_18FBCD3F4()
{
  return MEMORY[0x1E0CB2058]();
}

uint64_t sub_18FBCD400()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_18FBCD40C()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_18FBCD418()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_18FBCD424()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_18FBCD430()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_18FBCD43C()
{
  return MEMORY[0x1E0DEB960]();
}

uint64_t sub_18FBCD448()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_18FBCD454()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_18FBCD460()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_18FBCD46C()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_18FBCD478()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_18FBCD484()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_18FBCD490()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_18FBCD49C()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_18FBCD4A8()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_18FBCD4B4()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_18FBCD4C0()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_18FBCD4CC()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_18FBCD4D8()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_18FBCD4E4()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_18FBCD4F0()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_18FBCD4FC()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_18FBCD508()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_18FBCD514()
{
  return MEMORY[0x1E0DEC290]();
}

uint64_t sub_18FBCD520()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_18FBCD52C()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_18FBCD538()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_18FBCD544()
{
  return MEMORY[0x1E0DEC3D0]();
}

uint64_t sub_18FBCD550()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_18FBCD55C()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_18FBCD568()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_18FBCD574()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_18FBCD580()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_18FBCD58C()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_18FBCD598()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_18FBCD5A4()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_18FBCD5B0()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_18FBCD5BC()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_18FBCD5C8()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_18FBCD5D4()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_18FBCD5E0()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t sub_18FBCD5EC()
{
  return MEMORY[0x1E0DECB80]();
}

uint64_t sub_18FBCD5F8()
{
  return MEMORY[0x1E0DECBA8]();
}

uint64_t sub_18FBCD604()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t sub_18FBCD610()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_18FBCD61C()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_18FBCD628()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_18FBCD634()
{
  return MEMORY[0x1E0DECD20]();
}

uint64_t sub_18FBCD640()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_18FBCD64C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_18FBCD658()
{
  return MEMORY[0x1E0DECD48]();
}

uint64_t sub_18FBCD664()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_18FBCD670()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_18FBCD67C()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_18FBCD688()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_18FBCD694()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_18FBCD6A0()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_18FBCD6AC()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_18FBCD6B8()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_18FBCD6C4()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_18FBCD6D0()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_18FBCD6DC()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_18FBCD6E8()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_18FBCD6F4()
{
  return MEMORY[0x1E0DED008]();
}

uint64_t sub_18FBCD700()
{
  return MEMORY[0x1E0DED030]();
}

uint64_t sub_18FBCD70C()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_18FBCD718()
{
  return MEMORY[0x1E0DED040]();
}

uint64_t sub_18FBCD724()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_18FBCD730()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_18FBCD73C()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_18FBCD748()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_18FBCD754()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_18FBCD760()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_18FBCD76C()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_18FBCD778()
{
  return MEMORY[0x1E0DED138]();
}

uint64_t sub_18FBCD784()
{
  return MEMORY[0x1E0DED160]();
}

uint64_t sub_18FBCD790()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_18FBCD79C()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_18FBCD7A8()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_18FBCD7B4()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_18FBCD7C0()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_18FBCD7CC()
{
  return MEMORY[0x1E0DED788]();
}

uint64_t sub_18FBCD7D8()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_18FBCD7E4()
{
  return MEMORY[0x1E0DED9B0]();
}

uint64_t sub_18FBCD7F0()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_18FBCD7FC()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_18FBCD808()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_18FBCD814()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_18FBCD820()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_18FBCD82C()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_18FBCD838()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_18FBCD844()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_18FBCD850()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_18FBCD85C()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_18FBCD868()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_18FBCD874()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_18FBCD880()
{
  return MEMORY[0x1E0DEDF38]();
}

uint64_t sub_18FBCD88C()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_18FBCD898()
{
  return MEMORY[0x1E0DEDF48]();
}

uint64_t sub_18FBCD8A4()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_18FBCD8B0()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_18FBCD8BC()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_18FBCD8C8()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t AFBIsValidUTF8()
{
  return MEMORY[0x1E0CFCEB8]();
}

uint64_t BSCurrentUserDirectory()
{
  return MEMORY[0x1E0D01178]();
}

uint64_t BSDeserializeBSXPCEncodableObjectFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011A0]();
}

uint64_t BSDeserializeCGFloatFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011B0]();
}

uint64_t BSDeserializeCGRectFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011C0]();
}

uint64_t BSDeserializeCGSizeFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011C8]();
}

uint64_t BSDeserializeDataFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011D0]();
}

uint64_t BSDeserializeStringFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011F0]();
}

uint64_t BSDispatchQueueAssert()
{
  return MEMORY[0x1E0D01210]();
}

uint64_t BSDispatchQueueAssertNot()
{
  return MEMORY[0x1E0D01228]();
}

uint64_t BSDispatchQueueCreateSerial()
{
  return MEMORY[0x1E0D01240]();
}

uint64_t BSEqualArrays()
{
  return MEMORY[0x1E0D01260]();
}

uint64_t BSEqualBools()
{
  return MEMORY[0x1E0D01268]();
}

uint64_t BSEqualDoubles()
{
  return MEMORY[0x1E0D01278]();
}

uint64_t BSEqualObjects()
{
  return MEMORY[0x1E0D01280]();
}

uint64_t BSEqualSets()
{
  return MEMORY[0x1E0D01288]();
}

uint64_t BSEqualStrings()
{
  return MEMORY[0x1E0D01290]();
}

uint64_t BSFloatEqualToFloat()
{
  return MEMORY[0x1E0D012D0]();
}

uint64_t BSSerializeBSXPCEncodableObjectToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01528]();
}

uint64_t BSSerializeCGFloatToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01538]();
}

uint64_t BSSerializeCGRectToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01548]();
}

uint64_t BSSerializeCGSizeToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01550]();
}

uint64_t BSSerializeDataToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01558]();
}

uint64_t BSSerializeStringToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01578]();
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1E0C80368](data, *(_QWORD *)&len, md);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x1E0C80370](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x1E0C80378](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1E0C80380](c, data, *(_QWORD *)&len);
}

CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator)
{
  return (CFDataRef)MEMORY[0x1E0C983C8](allocator, bytes, length, bytesDeallocator);
}

CFStringRef CFStringCreateWithCStringNoCopy(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding, CFAllocatorRef contentsDeallocator)
{
  return (CFStringRef)MEMORY[0x1E0C98FE0](alloc, cStr, *(_QWORD *)&encoding, contentsDeallocator);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x1E0CBC308](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC348](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1E0CBC358](idst);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1E0CBC568](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC5C0](url, options);
}

void CGPathAddCurveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat cp1x, CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D298](path, m, cp1x, cp1y, cp2x, cp2y, x, y);
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D2A8](path, m, x, y);
}

void CGPathAddQuadCurveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat cpx, CGFloat cpy, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D2C0](path, m, cpx, cpy, x, y);
}

void CGPathApply(CGPathRef path, void *info, CGPathApplierFunction function)
{
  MEMORY[0x1E0C9D2E8](path, info, function);
}

void CGPathApplyWithBlock(CGPathRef path, CGPathApplyBlock block)
{
  MEMORY[0x1E0C9D300](path, block);
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
  MEMORY[0x1E0C9D310](path);
}

CGPathRef CGPathCreateCopy(CGPathRef path)
{
  return (CGPathRef)MEMORY[0x1E0C9D320](path);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1E0C9D388]();
}

BOOL CGPathEqualToPath(CGPathRef path1, CGPathRef path2)
{
  return MEMORY[0x1E0C9D3E8](path1, path2);
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D490](path, m, x, y);
}

void CGPathRelease(CGPathRef path)
{
  MEMORY[0x1E0C9D498](path);
}

uint64_t INIntentWithTypedIntent()
{
  return MEMORY[0x1E0CBD4A0]();
}

uint64_t INTypedIntentWithIntent()
{
  return MEMORY[0x1E0CBD6C8]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x1E0D4E4A0]();
}

uint64_t MKBEventsRegister()
{
  return MEMORY[0x1E0D4E4A8]();
}

uint64_t MKBEventsUnregister()
{
  return MEMORY[0x1E0D4E4B0]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x1E0D4E4D0]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x1E0DE2C00]();
}

uint64_t MobileGestalt_get_deviceClassNumber()
{
  return MEMORY[0x1E0DE2C08]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

uint64_t OPACKDecodeData()
{
  return MEMORY[0x1E0D1B4C0]();
}

uint64_t OPACKEncoderCreateData()
{
  return MEMORY[0x1E0D1B4D0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x1E0DE4288](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x1E0DE4388](this);
}

void std::exception::~exception(std::exception *this)
{
  MEMORY[0x1E0DE4DD8](this);
}

void std::terminate(void)
{
  MEMORY[0x1E0DE4E18]();
}

uint64_t operator delete[]()
{
  return off_1E2A56BE8();
}

void operator delete(void *__p)
{
  off_1E2A56BF0(__p);
}

uint64_t operator delete()
{
  return off_1E2A56BF8();
}

uint64_t operator new[]()
{
  return off_1E2A56C00();
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_1E2A56C08(__sz);
}

uint64_t operator new()
{
  return off_1E2A56C10();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x1E0DE5068](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1E0DE5080](a1);
}

void __cxa_end_catch(void)
{
  MEMORY[0x1E0DE5098]();
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x1E0DE50A0](a1);
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x1E0DE50D8](a1, lptinfo, a3);
}

uint64_t _bs_set_crash_log_message()
{
  return MEMORY[0x1E0D018D8]();
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

uint64_t dyld_get_active_platform()
{
  return MEMORY[0x1E0C830A0]();
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C83840](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84988](lock);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

int removexattr(const char *path, const char *name, int options)
{
  return MEMORY[0x1E0C850F0](path, name, *(_QWORD *)&options);
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1E0C851A0]();
}

uint64_t sandbox_extension_issue_file()
{
  return MEMORY[0x1E0C851A8]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1E0C851F8]();
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C853A0](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1E0C855A8](__s1, __s2, __n);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x1E0DEECD0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1E0DEED10]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

sysdir_search_path_enumeration_state sysdir_get_next_search_path_enumeration(sysdir_search_path_enumeration_state state, char *path)
{
  return MEMORY[0x1E0C857B8](*(_QWORD *)&state, path);
}

uint64_t sysdir_start_search_path_enumeration_private()
{
  return MEMORY[0x1E0C857C8]();
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862A0](xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862D0](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
  MEMORY[0x1E0C86398](xdict, key, value);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x1E0C863B8](xdict, key, value);
}

